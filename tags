!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
#doc-content	extern/OpenXLSX/doxy/customdoxygen.css	/^    #doc-content {$/;"	i
#nav-path	extern/OpenXLSX/doxy/customdoxygen.css	/^    #nav-path {$/;"	i
#nav-tree	extern/OpenXLSX/doxy/customdoxygen.css	/^#nav-tree {$/;"	i
#nav-tree	extern/OpenXLSX/doxy/customdoxygen.css	/^table.directory, #nav-tree, #nav-tree .label {$/;"	i
#nav-tree .label	extern/OpenXLSX/doxy/customdoxygen.css	/^#nav-tree .label {$/;"	c
#nav-tree .label	extern/OpenXLSX/doxy/customdoxygen.css	/^table.directory, #nav-tree, #nav-tree .label {$/;"	c
#nav-tree .selected	extern/OpenXLSX/doxy/customdoxygen.css	/^#nav-tree .selected {$/;"	c
#navrow3	extern/OpenXLSX/doxy/customdoxygen.css	/^#navrow3 {$/;"	i
#navrow3 a	extern/OpenXLSX/doxy/customdoxygen.css	/^#navrow3 a {$/;"	s
#navrow4	extern/OpenXLSX/doxy/customdoxygen.css	/^#navrow4 {$/;"	i
#navrow4 a	extern/OpenXLSX/doxy/customdoxygen.css	/^#navrow4 a {$/;"	s
#navrow4 a	extern/OpenXLSX/doxy/customdoxygen.css	/^#navrow4 a, .icon, span.mlabel,$/;"	s
#navrow4 li	extern/OpenXLSX/doxy/customdoxygen.css	/^#navrow4 li {$/;"	s
#projectbrief	extern/OpenXLSX/doxy/customdoxygen.css	/^#projectbrief {$/;"	i
#projectbrief	extern/OpenXLSX/doxy/customdoxygen.css	/^#projectname, #projectbrief,$/;"	i
#projectlogo	extern/OpenXLSX/doxy/customdoxygen.css	/^#projectlogo {$/;"	i
#projectlogo img	extern/OpenXLSX/doxy/customdoxygen.css	/^#projectlogo img {$/;"	s
#projectname	extern/OpenXLSX/doxy/customdoxygen.css	/^#projectname {$/;"	i
#projectname	extern/OpenXLSX/doxy/customdoxygen.css	/^#projectname, #projectbrief,$/;"	i
#projectnumber	extern/OpenXLSX/doxy/customdoxygen.css	/^#projectnumber {$/;"	i
#side-nav	extern/OpenXLSX/doxy/customdoxygen.css	/^    #side-nav {$/;"	i
#titlearea	extern/OpenXLSX/doxy/customdoxygen.css	/^#titlearea {$/;"	i
#top	extern/OpenXLSX/doxy/customdoxygen.css	/^    #top {$/;"	i
.arrow	extern/OpenXLSX/doxy/customdoxygen.css	/^.arrow,$/;"	c
.caption	extern/OpenXLSX/doxy/customdoxygen.css	/^.caption {$/;"	c
.contents a	extern/OpenXLSX/doxy/customdoxygen.css	/^.contents a, .contents a:visited {$/;"	s
.contents a.qindexHL:visited	extern/OpenXLSX/doxy/customdoxygen.css	/^.contents a.qindexHL:visited {$/;"	c
.contents a:visited	extern/OpenXLSX/doxy/customdoxygen.css	/^.contents a, .contents a:visited {$/;"	s
.directory .levels	extern/OpenXLSX/doxy/customdoxygen.css	/^.directory .levels {$/;"	c
.directory .levels span	extern/OpenXLSX/doxy/customdoxygen.css	/^.directory .levels span {$/;"	s
.directory img	extern/OpenXLSX/doxy/customdoxygen.css	/^.directory img {$/;"	s
.directory table	extern/OpenXLSX/doxy/customdoxygen.css	/^.directory table {$/;"	s
.directory td	extern/OpenXLSX/doxy/customdoxygen.css	/^.directory td {$/;"	s
.directory td.desc	extern/OpenXLSX/doxy/customdoxygen.css	/^.directory td.desc {$/;"	c
.directory td.entry	extern/OpenXLSX/doxy/customdoxygen.css	/^.directory td.entry {$/;"	c
.directory td.entry a	extern/OpenXLSX/doxy/customdoxygen.css	/^.directory td.entry a {$/;"	s
.directory td.entry a img	extern/OpenXLSX/doxy/customdoxygen.css	/^.directory td.entry a img {$/;"	s
.directory tr.even	extern/OpenXLSX/doxy/customdoxygen.css	/^.directory tr.even {$/;"	c
.dirtab	extern/OpenXLSX/doxy/customdoxygen.css	/^.dirtab {$/;"	c
.dotgraph	extern/OpenXLSX/doxy/customdoxygen.css	/^.dotgraph {$/;"	c
.exception	extern/OpenXLSX/doxy/customdoxygen.css	/^.params, .retval, .exception, .tparams {$/;"	c
.fieldtable td	extern/OpenXLSX/doxy/customdoxygen.css	/^.fieldtable td, .fieldtable th {$/;"	s
.fieldtable td.fielddoc	extern/OpenXLSX/doxy/customdoxygen.css	/^.fieldtable td.fielddoc {$/;"	c
.fieldtable td.fielddoc p:first-child	extern/OpenXLSX/doxy/customdoxygen.css	/^.fieldtable td.fielddoc p:first-child {$/;"	s
.fieldtable td.fielddoc p:last-child	extern/OpenXLSX/doxy/customdoxygen.css	/^.fieldtable td.fielddoc p:last-child {$/;"	s
.fieldtable td.fieldname	extern/OpenXLSX/doxy/customdoxygen.css	/^.fieldtable td.fieldname {$/;"	c
.fieldtable td.fieldname	extern/OpenXLSX/doxy/customdoxygen.css	/^.fieldtable td.fieldtype, .fieldtable td.fieldname {$/;"	c
.fieldtable td.fieldtype	extern/OpenXLSX/doxy/customdoxygen.css	/^.fieldtable td.fieldtype, .fieldtable td.fieldname {$/;"	c
.fieldtable th	extern/OpenXLSX/doxy/customdoxygen.css	/^.fieldtable td, .fieldtable th {$/;"	s
.fieldtable th	extern/OpenXLSX/doxy/customdoxygen.css	/^.fieldtable th {$/;"	s
.fieldtable tr	extern/OpenXLSX/doxy/customdoxygen.css	/^.memberdecls td, .fieldtable tr {$/;"	s
.fieldtable tr.glow	extern/OpenXLSX/doxy/customdoxygen.css	/^.memberdecls td.glow, .fieldtable tr.glow {$/;"	c
.fieldtable tr:last-child td	extern/OpenXLSX/doxy/customdoxygen.css	/^.fieldtable tr:last-child td {$/;"	s
.icon	extern/OpenXLSX/doxy/customdoxygen.css	/^#navrow4 a, .icon, span.mlabel,$/;"	c
.icon	extern/OpenXLSX/doxy/customdoxygen.css	/^.icon {$/;"	c
.icona	extern/OpenXLSX/doxy/customdoxygen.css	/^.icona {$/;"	c
.image	extern/OpenXLSX/doxy/customdoxygen.css	/^.image {$/;"	c
.inherit	extern/OpenXLSX/doxy/customdoxygen.css	/^.inherit {$/;"	c
.inherit_header	extern/OpenXLSX/doxy/customdoxygen.css	/^.inherit_header {$/;"	c
.inherit_header td	extern/OpenXLSX/doxy/customdoxygen.css	/^.inherit_header td {$/;"	s
.mdescLeft	extern/OpenXLSX/doxy/customdoxygen.css	/^.mdescLeft, .mdescRight {$/;"	c
.mdescLeft	extern/OpenXLSX/doxy/customdoxygen.css	/^.mdescLeft, .mdescRight,$/;"	c
.mdescRight	extern/OpenXLSX/doxy/customdoxygen.css	/^.mdescLeft, .mdescRight {$/;"	c
.mdescRight	extern/OpenXLSX/doxy/customdoxygen.css	/^.mdescLeft, .mdescRight,$/;"	c
.memItemLeft	extern/OpenXLSX/doxy/customdoxygen.css	/^.memItemLeft {$/;"	c
.memItemLeft	extern/OpenXLSX/doxy/customdoxygen.css	/^.memItemLeft, .memItemRight,$/;"	c
.memItemLeft	extern/OpenXLSX/doxy/customdoxygen.css	/^.memItemLeft, .memTemplItemLeft {$/;"	c
.memItemRight	extern/OpenXLSX/doxy/customdoxygen.css	/^.memItemLeft, .memItemRight,$/;"	c
.memItemRight	extern/OpenXLSX/doxy/customdoxygen.css	/^.memItemRight, .memTemplItemRight {$/;"	c
.memSeparator	extern/OpenXLSX/doxy/customdoxygen.css	/^.memSeparator {$/;"	c
.memTemplItemLeft	extern/OpenXLSX/doxy/customdoxygen.css	/^.memItemLeft, .memTemplItemLeft {$/;"	c
.memTemplItemLeft	extern/OpenXLSX/doxy/customdoxygen.css	/^.memTemplItemLeft, .memTemplItemRight, .memTemplParams {$/;"	c
.memTemplItemLeft	extern/OpenXLSX/doxy/customdoxygen.css	/^.memTemplItemLeft, .memTemplItemRight, .memTemplParams,$/;"	c
.memTemplItemRight	extern/OpenXLSX/doxy/customdoxygen.css	/^.memItemRight, .memTemplItemRight {$/;"	c
.memTemplItemRight	extern/OpenXLSX/doxy/customdoxygen.css	/^.memTemplItemLeft, .memTemplItemRight, .memTemplParams {$/;"	c
.memTemplItemRight	extern/OpenXLSX/doxy/customdoxygen.css	/^.memTemplItemLeft, .memTemplItemRight, .memTemplParams,$/;"	c
.memTemplParams	extern/OpenXLSX/doxy/customdoxygen.css	/^.memTemplItemLeft, .memTemplItemRight, .memTemplParams {$/;"	c
.memTemplParams	extern/OpenXLSX/doxy/customdoxygen.css	/^.memTemplItemLeft, .memTemplItemRight, .memTemplParams,$/;"	c
.memTemplParams	extern/OpenXLSX/doxy/customdoxygen.css	/^.memTemplParams {$/;"	c
.memberdecls td	extern/OpenXLSX/doxy/customdoxygen.css	/^.memberdecls td, .fieldtable tr {$/;"	s
.memberdecls td.glow	extern/OpenXLSX/doxy/customdoxygen.css	/^.memberdecls td.glow, .fieldtable tr.glow {$/;"	c
.memdoc	extern/OpenXLSX/doxy/customdoxygen.css	/^.memdoc, dl.reflist dd {$/;"	c
.memitem	extern/OpenXLSX/doxy/customdoxygen.css	/^    .memitem {$/;"	c
.memitem	extern/OpenXLSX/doxy/customdoxygen.css	/^.memitem {$/;"	c
.memitem.glow	extern/OpenXLSX/doxy/customdoxygen.css	/^.memitem.glow {$/;"	c
.memname	extern/OpenXLSX/doxy/customdoxygen.css	/^.memname {$/;"	c
.memname	extern/OpenXLSX/doxy/customdoxygen.css	/^.memname,$/;"	c
.memname a.el	extern/OpenXLSX/doxy/customdoxygen.css	/^.memname a.el {$/;"	c
.memname td	extern/OpenXLSX/doxy/customdoxygen.css	/^.memname td {$/;"	s
.memnav	extern/OpenXLSX/doxy/customdoxygen.css	/^.memnav {$/;"	c
.mempage	extern/OpenXLSX/doxy/customdoxygen.css	/^.mempage {$/;"	c
.memproto	extern/OpenXLSX/doxy/customdoxygen.css	/^.memproto, dl.reflist dt {$/;"	c
.memtemplate	extern/OpenXLSX/doxy/customdoxygen.css	/^.memtemplate {$/;"	c
.mscgraph	extern/OpenXLSX/doxy/customdoxygen.css	/^.mscgraph {$/;"	c
.navpath	extern/OpenXLSX/doxy/customdoxygen.css	/^.navpath {$/;"	c
.navpath li	extern/OpenXLSX/doxy/customdoxygen.css	/^.navpath li {$/;"	s
.navpath li.footer	extern/OpenXLSX/doxy/customdoxygen.css	/^.navpath li.footer {$/;"	c
.navpath li.navelem a	extern/OpenXLSX/doxy/customdoxygen.css	/^.navpath li.navelem a {$/;"	s
.navpath li.navelem a	extern/OpenXLSX/doxy/customdoxygen.css	/^.navpath li.navelem a,$/;"	s
.navpath li.navelem a:hover	extern/OpenXLSX/doxy/customdoxygen.css	/^.navpath li.navelem a:hover {$/;"	s
.navpath ul	extern/OpenXLSX/doxy/customdoxygen.css	/^.navpath ul {$/;"	s
.paramkey	extern/OpenXLSX/doxy/customdoxygen.css	/^.paramkey {$/;"	c
.paramname	extern/OpenXLSX/doxy/customdoxygen.css	/^.paramname {$/;"	c
.paramname code	extern/OpenXLSX/doxy/customdoxygen.css	/^.paramname code {$/;"	s
.paramname em	extern/OpenXLSX/doxy/customdoxygen.css	/^.paramname em {$/;"	s
.params	extern/OpenXLSX/doxy/customdoxygen.css	/^.params, .retval, .exception, .tparams {$/;"	c
.params .paramdir	extern/OpenXLSX/doxy/customdoxygen.css	/^.params .paramdir {$/;"	c
.params .paramname	extern/OpenXLSX/doxy/customdoxygen.css	/^.params .paramname, .retval .paramname {$/;"	c
.params .paramtype	extern/OpenXLSX/doxy/customdoxygen.css	/^.params .paramtype {$/;"	c
.paramtype	extern/OpenXLSX/doxy/customdoxygen.css	/^.paramtype {$/;"	c
.retval	extern/OpenXLSX/doxy/customdoxygen.css	/^.params, .retval, .exception, .tparams {$/;"	c
.retval .paramname	extern/OpenXLSX/doxy/customdoxygen.css	/^.params .paramname, .retval .paramname {$/;"	c
.summary	extern/OpenXLSX/doxy/customdoxygen.css	/^    .summary {$/;"	c
.tablist a	extern/OpenXLSX/doxy/customdoxygen.css	/^.tablist a {$/;"	s
.tablist a:hover	extern/OpenXLSX/doxy/customdoxygen.css	/^.tablist a:hover {$/;"	s
.tablist li	extern/OpenXLSX/doxy/customdoxygen.css	/^.tablist li {$/;"	s
.tablist li.current a	extern/OpenXLSX/doxy/customdoxygen.css	/^.tablist li.current a {$/;"	s
.tabs	extern/OpenXLSX/doxy/customdoxygen.css	/^.tabs, .tabs2, .tabs3 {$/;"	c
.tabs li.current	extern/OpenXLSX/doxy/customdoxygen.css	/^.tabs li.current {$/;"	c
.tabs2	extern/OpenXLSX/doxy/customdoxygen.css	/^.tabs, .tabs2, .tabs3 {$/;"	c
.tabs2	extern/OpenXLSX/doxy/customdoxygen.css	/^.tabs2 {$/;"	c
.tabs2 li.current	extern/OpenXLSX/doxy/customdoxygen.css	/^.tabs2 li.current {$/;"	c
.tabs3	extern/OpenXLSX/doxy/customdoxygen.css	/^.tabs, .tabs2, .tabs3 {$/;"	c
.tabsearch	extern/OpenXLSX/doxy/customdoxygen.css	/^.tabsearch {$/;"	c
.title	extern/OpenXLSX/doxy/customdoxygen.css	/^.title {$/;"	c
.title	extern/OpenXLSX/doxy/customdoxygen.css	/^.title,$/;"	c
.tparams	extern/OpenXLSX/doxy/customdoxygen.css	/^.params, .retval, .exception, .tparams {$/;"	c
.ui-resizable-e	extern/OpenXLSX/doxy/customdoxygen.css	/^.ui-resizable-e {$/;"	c
A	extern/NamedType/main.cpp	/^        A(int x) : x(x) {}$/;"	f	class:A	file:
A	extern/NamedType/main.cpp	/^        A(int x) : x(x) {}$/;"	f	struct:A	file:
A	extern/NamedType/main.cpp	/^    class A$/;"	c	file:
A	extern/NamedType/main.cpp	/^    struct A$/;"	s	file:
A	extern/NamedType/main.cpp	/^    using A = testFunctionCallable_A;$/;"	t	typeref:typename:testFunctionCallable_A	file:
A	extern/libgit2/src/wildmatch.c	/^	A = GIT_ALPHA,$/;"	e	enum:__anon17a406cb0103	file:
ABO_FUNCTION_REF_HPP	function_ref.hpp	/^#define ABO_FUNCTION_REF_HPP$/;"	d
ABO_NEWTYPE_HPP	newtype.hpp	/^#define ABO_NEWTYPE_HPP$/;"	d
ABS_PATH_MARKER	extern/libgit2/tests/core/path.c	/^#define ABS_PATH_MARKER /;"	d	file:
AB_GIT_H	git_.hpp	/^#define AB_GIT_H$/;"	d
ACROSSCHAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ACROSSCHAR(/;"	d
AC_VERSION_KHASH_H	extern/libgit2/src/khash.h	/^#define AC_VERSION_KHASH_H /;"	d
ADDED_IN_MASTER_INDEX_ENTRY	extern/libgit2/tests/merge/trees/automerge.c	/^#define ADDED_IN_MASTER_INDEX_ENTRY	/;"	d	file:
ADDED_IN_MASTER_INDEX_ENTRY	extern/libgit2/tests/merge/workdir/simple.c	/^#define ADDED_IN_MASTER_INDEX_ENTRY	/;"	d	file:
ADD_ACTIVE	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define ADD_ACTIVE(/;"	d	file:
ADD_ACTIVE_DATA	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define ADD_ACTIVE_DATA(/;"	d	file:
ADD_CLAR_TEST	extern/libgit2/tests/CMakeLists.txt	/^FUNCTION(ADD_CLAR_TEST name)$/;"	f
ADD_C_FLAG	extern/libgit2/cmake/Modules/AddCFlagIfSupported.cmake	/^MACRO(ADD_C_FLAG _FLAG)$/;"	m
ADD_C_FLAG_IF_SUPPORTED	extern/libgit2/cmake/Modules/AddCFlagIfSupported.cmake	/^MACRO(ADD_C_FLAG_IF_SUPPORTED _FLAG)$/;"	m
ADD_DELTA	extern/libgit2/src/delta.c	/^#define ADD_DELTA(/;"	d	file:
ADD_NEW	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define ADD_NEW(/;"	d	file:
ADD_NEW_DATA	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define ADD_NEW_DATA(/;"	d	file:
ALL_CRLF_TEXT_AS_CRLF	extern/libgit2/tests/filter/crlf.h	/^#define ALL_CRLF_TEXT_AS_CRLF	/;"	d
ALL_CRLF_TEXT_AS_LF	extern/libgit2/tests/filter/crlf.h	/^#define ALL_CRLF_TEXT_AS_LF	/;"	d
ALL_CRLF_TEXT_RAW	extern/libgit2/tests/filter/crlf.h	/^#define ALL_CRLF_TEXT_RAW	/;"	d
ALL_FLAGS	extern/libgit2/src/commit_list.h	/^#define ALL_FLAGS /;"	d
ALL_LF_TEXT_AS_CRLF	extern/libgit2/tests/filter/crlf.h	/^#define ALL_LF_TEXT_AS_CRLF	/;"	d
ALL_LF_TEXT_AS_LF	extern/libgit2/tests/filter/crlf.h	/^#define ALL_LF_TEXT_AS_LF	/;"	d
ALL_LF_TEXT_RAW	extern/libgit2/tests/filter/crlf.h	/^#define ALL_LF_TEXT_RAW	/;"	d
ALTERNATE_MALFORMED_FOLDER1	extern/libgit2/tests/repo/discover.c	/^#define ALTERNATE_MALFORMED_FOLDER1 /;"	d	file:
ALTERNATE_MALFORMED_FOLDER2	extern/libgit2/tests/repo/discover.c	/^#define ALTERNATE_MALFORMED_FOLDER2 /;"	d	file:
ALTERNATE_MALFORMED_FOLDER3	extern/libgit2/tests/repo/discover.c	/^#define ALTERNATE_MALFORMED_FOLDER3 /;"	d	file:
ALTERNATE_NOT_FOUND_FOLDER	extern/libgit2/tests/repo/discover.c	/^#define ALTERNATE_NOT_FOUND_FOLDER /;"	d	file:
ANOTHER_POEM	extern/libgit2/tests/stress/diff.c	/^#define ANOTHER_POEM /;"	d	file:
API additions	extern/libgit2/docs/changelog.md	/^### API additions$/;"	S
API removals	extern/libgit2/docs/changelog.md	/^### API removals$/;"	S
API_QUERY_DATA_AVAILABLE	extern/libgit2/deps/winhttp/winhttp.h	/^#define API_QUERY_DATA_AVAILABLE /;"	d
API_READ_DATA	extern/libgit2/deps/winhttp/winhttp.h	/^#define API_READ_DATA /;"	d
API_RECEIVE_RESPONSE	extern/libgit2/deps/winhttp/winhttp.h	/^#define API_RECEIVE_RESPONSE /;"	d
API_SEND_REQUEST	extern/libgit2/deps/winhttp/winhttp.h	/^#define API_SEND_REQUEST /;"	d
API_WRITE_DATA	extern/libgit2/deps/winhttp/winhttp.h	/^#define API_WRITE_DATA /;"	d
APTCOLS	extern/libgit2/deps/pcre/pcre_compile.c	/^#define APTCOLS /;"	d	file:
APTROWS	extern/libgit2/deps/pcre/pcre_compile.c	/^#define APTROWS /;"	d	file:
ARGS_INFO_INIT	extern/libgit2/examples/common.h	/^#define ARGS_INFO_INIT /;"	d
ARGUMENTS	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define ARGUMENTS /;"	d	file:
ARRAY_LEN	extern/libgit2/tests/diff/racediffiter.c	/^#define ARRAY_LEN(/;"	d	file:
ARRAY_SIZE	extern/libgit2/deps/http-parser/http_parser.c	/^# define ARRAY_SIZE(/;"	d	file:
ARRAY_SIZE	extern/libgit2/examples/common.h	/^#define ARRAY_SIZE(/;"	d
ARRAY_SIZE	extern/libgit2/src/util.h	/^#define ARRAY_SIZE(/;"	d
ASN1_STRING_get0_data	extern/libgit2/src/streams/openssl.c	/^static const unsigned char *ASN1_STRING_get0_data(const ASN1_STRING *x)$/;"	f	typeref:typename:const unsigned char *	file:
AUTH_HEADER_PROXY	extern/libgit2/src/transports/http.c	/^#define AUTH_HEADER_PROXY /;"	d	file:
AUTH_HEADER_SERVER	extern/libgit2/src/transports/http.c	/^#define AUTH_HEADER_SERVER /;"	d	file:
AUTOMERGEABLE_ANCESTOR_OID	extern/libgit2/tests/checkout/conflict.c	/^#define AUTOMERGEABLE_ANCESTOR_OID /;"	d	file:
AUTOMERGEABLE_IDSTR	extern/libgit2/tests/merge/driver.c	/^#define AUTOMERGEABLE_IDSTR /;"	d	file:
AUTOMERGEABLE_INDEX_ENTRY	extern/libgit2/tests/merge/trees/automerge.c	/^#define AUTOMERGEABLE_INDEX_ENTRY /;"	d	file:
AUTOMERGEABLE_INDEX_ENTRY	extern/libgit2/tests/merge/workdir/simple.c	/^#define AUTOMERGEABLE_INDEX_ENTRY /;"	d	file:
AUTOMERGEABLE_MERGED_FILE	extern/libgit2/tests/checkout/conflict.c	/^#define AUTOMERGEABLE_MERGED_FILE /;"	d	file:
AUTOMERGEABLE_MERGED_FILE	extern/libgit2/tests/merge/conflict_data.h	/^#define AUTOMERGEABLE_MERGED_FILE /;"	d
AUTOMERGEABLE_MERGED_FILE	extern/libgit2/tests/merge/workdir/dirty.c	/^#define AUTOMERGEABLE_MERGED_FILE /;"	d	file:
AUTOMERGEABLE_MERGED_FILE_CRLF	extern/libgit2/tests/merge/conflict_data.h	/^#define AUTOMERGEABLE_MERGED_FILE_CRLF /;"	d
AUTOMERGEABLE_OURS_OID	extern/libgit2/tests/checkout/conflict.c	/^#define AUTOMERGEABLE_OURS_OID /;"	d	file:
AUTOMERGEABLE_REUC_ENTRY	extern/libgit2/tests/merge/trees/automerge.c	/^#define AUTOMERGEABLE_REUC_ENTRY /;"	d	file:
AUTOMERGEABLE_REUC_ENTRY	extern/libgit2/tests/merge/workdir/simple.c	/^#define AUTOMERGEABLE_REUC_ENTRY /;"	d	file:
AUTOMERGEABLE_THEIRS_OID	extern/libgit2/tests/checkout/conflict.c	/^#define AUTOMERGEABLE_THEIRS_OID /;"	d	file:
AddChartsheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^void Impl::XLWorkbook::AddChartsheet(const std::string& sheetName, unsigned int index) {$/;"	f	class:Impl::XLWorkbook	typeref:typename:void
AddChartsheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^void XLWorkbook::AddChartsheet(const std::string& sheetName, unsigned int index) {$/;"	f	class:XLWorkbook	typeref:typename:void
AddColumn	extern/OpenXLSX/benchmark/table_printer.h	/^    void TablePrinter::AddColumn(const std::string& header_name, int column_width) {$/;"	f	class:bprinter::TablePrinter	typeref:typename:void
AddContentItem	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^Impl::XLContentItem Impl::XLDocument::AddContentItem(const std::string& contentPath, XLContentTy/;"	f	class:Impl::XLDocument	typeref:typename:Impl::XLContentItem
AddDefault	extern/OpenXLSX/library/openxlsx/implementation/sources/XLContentTypes_Impl.cpp	/^void Impl::XLContentTypes::AddDefault(const string& key, XMLNode node) {$/;"	f	class:Impl::XLContentTypes	typeref:typename:void
AddEntry	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        ZipEntry AddEntry(const std::string& name, const ZipEntry& entry) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:ZipEntry
AddEntry	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        ZipEntry AddEntry(const std::string& name, const ZipEntryData& data) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:ZipEntry
AddEntry	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        ZipEntry AddEntry(const std::string& name, const std::string& data) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:ZipEntry
AddHeadingPair	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^void Impl::XLAppProperties::AddHeadingPair(const string& name, int value) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:void
AddOrReplaceXMLFile	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^void Impl::XLDocument::AddOrReplaceXMLFile(const std::string& path, const std::string& content) /;"	f	class:Impl::XLDocument	typeref:typename:void
AddOverride	extern/OpenXLSX/library/openxlsx/implementation/sources/XLContentTypes_Impl.cpp	/^void Impl::XLContentTypes::AddOverride(const string& path, XLContentType type) {$/;"	f	class:Impl::XLContentTypes	typeref:typename:void
AddRelationship	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^Impl::XLRelationshipItem* Impl::XLRelationships::AddRelationship(XLRelationshipType type, const /;"	f	class:Impl::XLRelationships	typeref:typename:Impl::XLRelationshipItem *
AddSheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::AddSheetName(const string& title) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
AddWorksheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^void Impl::XLWorkbook::AddWorksheet(const std::string& sheetName, unsigned int index) {$/;"	f	class:Impl::XLWorkbook	typeref:typename:void
AddWorksheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^void XLWorkbook::AddWorksheet(const std::string& sheetName, unsigned int index) {$/;"	f	class:XLWorkbook	typeref:typename:void
Addable	extern/NamedType/underlying_functionalities.hpp	/^struct Addable : crtp<T, Addable>$/;"	s	namespace:fluent
Addable	newtype.hpp	/^template <typename T> struct Addable : crtp<T, Addable> {$/;"	s	namespace:abo::nt
Addable	ntskills.hpp	/^template <typename T> struct Addable : crtp<T, Addable> {$/;"	s	namespace:nt
AddableType	extern/NamedType/main.cpp	/^    using AddableType = fluent::NamedType<int, struct SubtractableTag, fluent::Addable>;$/;"	t	typeref:typename:fluent::NamedType<int,struct SubtractableTag,fluent::Addable>	file:
Address	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^std::string Impl::XLCellReference::Address() const {$/;"	f	class:Impl::XLCellReference	typeref:typename:std::string
Address	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellReference.cpp	/^std::string XLCellReference::Address() const {$/;"	f	class:XLCellReference	typeref:typename:std::string
Advanced Usage	extern/libgit2/README.md	/^Advanced Usage$/;"	s
Ambition	extern/OpenXLSX/README.md	/^## Ambition$/;"	s
Android	extern/libgit2/README.md	/^Android$/;"	s
AppProperties	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^Impl::XLAppProperties* Impl::XLDocument::AppProperties() {$/;"	f	class:Impl::XLDocument	typeref:typename:Impl::XLAppProperties *
AppProperties	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^const Impl::XLAppProperties* Impl::XLDocument::AppProperties() const {$/;"	f	class:Impl::XLDocument	typeref:typename:const Impl::XLAppProperties *
AppVersion	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        AppVersion$/;"	e	enum:OpenXLSX::XLProperty
AppendChartsheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::AppendChartsheetName(const std::string& sheetName) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
AppendSheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::AppendSheetName(const std::string& sheetName) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
AppendString	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSharedStrings_Impl.cpp	/^long Impl::XLSharedStrings::AppendString(string_view str) {$/;"	f	class:Impl::XLSharedStrings	typeref:typename:long
AppendWorksheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::AppendWorksheetName(const std::string& sheetName) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
Application	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Application,$/;"	e	enum:OpenXLSX::XLProperty
AsBoolean	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^bool Impl::XLToken::AsBoolean() const {$/;"	f	class:Impl::XLToken	typeref:typename:bool
AsFloat	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^long double Impl::XLToken::AsFloat() const {$/;"	f	class:Impl::XLToken	typeref:typename:long double
AsInteger	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^long long int Impl::XLToken::AsInteger() const {$/;"	f	class:Impl::XLToken	typeref:typename:long long int
AsString	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^std::string Impl::XLCellValue::AsString() const {$/;"	f	class:Impl::XLCellValue	typeref:typename:std::string
AsString	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^const std::string& Impl::XLToken::AsString() const {$/;"	f	class:Impl::XLToken	typeref:typename:const std::string &
AsString	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^std::string XLCellValue::AsString() const {$/;"	f	class:XLCellValue	typeref:typename:std::string
Assert	extern/libgit2/deps/zlib/zutil.h	/^#  define Assert(/;"	d
AssertionInfo	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionPrinter	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            AssertionPrinter( std::ostream& _stream, AssertionStats const& _stats, std::size_t _/;"	f	class:Catch::TAPReporter::AssertionPrinter
AssertionPrinter	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^        class AssertionPrinter {$/;"	c	struct:Catch::TAPReporter
Attribution	extern/libgit2/docs/code_of_conduct.md	/^## Attribution$/;"	s
AutoReg	extern/NamedType/catch.hpp	/^struct AutoReg : NonCopyable {$/;"	s	namespace:Catch
AutoReg	extern/OpenXLSX/tests/catch/catch.hpp	/^struct AutoReg : NonCopyable {$/;"	s	namespace:Catch
AutomakeReporter	extern/OpenXLSX/tests/catch/catch_reporter_automake.hpp	/^        AutomakeReporter( ReporterConfig const& _config )$/;"	f	struct:Catch::AutomakeReporter
AutomakeReporter	extern/OpenXLSX/tests/catch/catch_reporter_automake.hpp	/^    struct AutomakeReporter : StreamingReporterBase<AutomakeReporter> {$/;"	s	namespace:Catch
B	extern/NamedType/main.cpp	/^        B(A a) : x(a.x) {}$/;"	f	struct:B	file:
B	extern/NamedType/main.cpp	/^        B(int x) : x(x) {}$/;"	f	struct:B	file:
B	extern/NamedType/main.cpp	/^    struct B$/;"	s	file:
BACKCHAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define BACKCHAR(/;"	d
BACKEND_USE_DELETE	extern/libgit2/src/config.c	/^	BACKEND_USE_DELETE$/;"	e	enum:__anon2d64db840303	file:
BACKEND_USE_SET	extern/libgit2/src/config.c	/^	BACKEND_USE_SET,$/;"	e	enum:__anon2d64db840303	file:
BACKTRACK_AS	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define BACKTRACK_AS(/;"	d	file:
BAD	extern/libgit2/deps/zlib/inflate.h	/^    BAD,        \/* got a data error -- remain here until reset *\/$/;"	e	enum:__anon92f8b1ba0103
BARE_REPO	extern/libgit2/tests/object/blob/write.c	/^#define BARE_REPO /;"	d	file:
BARE_REPOSITORY	extern/libgit2/tests/repo/init.c	/^	BARE_REPOSITORY = 1$/;"	e	enum:repo_mode	file:
BASE	extern/libgit2/deps/zlib/adler32.c	/^#define BASE /;"	d	file:
BASEDIR	extern/libgit2/tests/core/mkdir.c	/^#define BASEDIR /;"	d	file:
BB_REPO_URL	extern/libgit2/tests/online/clone.c	/^#define BB_REPO_URL /;"	d	file:
BB_REPO_URL_WITH_PASS	extern/libgit2/tests/online/clone.c	/^#define BB_REPO_URL_WITH_PASS /;"	d	file:
BB_REPO_URL_WITH_WRONG_PASS	extern/libgit2/tests/online/clone.c	/^#define BB_REPO_URL_WITH_WRONG_PASS /;"	d	file:
BIGFILE	extern/libgit2/tests/object/tree/read.c	/^#define BIGFILE /;"	d	file:
BIGFILE_SIZE	extern/libgit2/tests/object/tree/read.c	/^# define BIGFILE_SIZE /;"	d	file:
BIGFILE_SIZE	extern/libgit2/tests/object/tree/read.c	/^#define BIGFILE_SIZE /;"	d	file:
BIG_STRING_PART	extern/libgit2/tests/core/zstream.c	/^#define BIG_STRING_PART /;"	d	file:
BIN_INSTALL_DIR	extern/libgit2/src/CMakeLists.txt	/^SET(BIN_INSTALL_DIR bin CACHE PATH "Where to install binaries to.")$/;"	v
BIO_get_data	extern/libgit2/src/streams/openssl.c	/^static void *BIO_get_data(BIO *a)$/;"	f	typeref:typename:void *	file:
BIO_get_new_index	extern/libgit2/src/streams/openssl.c	/^static int BIO_get_new_index(void)$/;"	f	typeref:typename:int	file:
BIO_meth_free	extern/libgit2/src/streams/openssl.c	/^static void BIO_meth_free(BIO_METHOD *biom)$/;"	f	typeref:typename:void	file:
BIO_meth_new	extern/libgit2/src/streams/openssl.c	/^static BIO_METHOD* BIO_meth_new(int type, const char *name)$/;"	f	typeref:typename:BIO_METHOD *	file:
BIO_meth_set_create	extern/libgit2/src/streams/openssl.c	/^static int BIO_meth_set_create(BIO_METHOD *biom, int (*create) (BIO *))$/;"	f	typeref:typename:int	file:
BIO_meth_set_ctrl	extern/libgit2/src/streams/openssl.c	/^static int BIO_meth_set_ctrl(BIO_METHOD *biom, long (*ctrl) (BIO *, int, long, void *))$/;"	f	typeref:typename:int	file:
BIO_meth_set_destroy	extern/libgit2/src/streams/openssl.c	/^static int BIO_meth_set_destroy(BIO_METHOD *biom, int (*destroy) (BIO *))$/;"	f	typeref:typename:int	file:
BIO_meth_set_gets	extern/libgit2/src/streams/openssl.c	/^static int BIO_meth_set_gets(BIO_METHOD *biom, int (*gets) (BIO *, char *, int))$/;"	f	typeref:typename:int	file:
BIO_meth_set_puts	extern/libgit2/src/streams/openssl.c	/^static int BIO_meth_set_puts(BIO_METHOD *biom, int (*puts) (BIO *, const char *))$/;"	f	typeref:typename:int	file:
BIO_meth_set_read	extern/libgit2/src/streams/openssl.c	/^static int BIO_meth_set_read(BIO_METHOD *biom, int (*read) (BIO *, char *, int))$/;"	f	typeref:typename:int	file:
BIO_meth_set_write	extern/libgit2/src/streams/openssl.c	/^static int BIO_meth_set_write(BIO_METHOD *biom, int (*write) (BIO *, const char *, int))$/;"	f	typeref:typename:int	file:
BIO_set_data	extern/libgit2/src/streams/openssl.c	/^static void BIO_set_data(BIO *a, void *ptr)$/;"	f	typeref:typename:void	file:
BIO_set_init	extern/libgit2/src/streams/openssl.c	/^static void BIO_set_init(BIO *b, int init)$/;"	f	typeref:typename:void	file:
BITFLIPPED_AND_REVERSED_DATA_LEN	extern/libgit2/tests/filter/custom.c	/^#define BITFLIPPED_AND_REVERSED_DATA_LEN /;"	d	file:
BITFLIP_FILTER_PRIORITY	extern/libgit2/tests/filter/custom.c	/^#define BITFLIP_FILTER_PRIORITY /;"	d	file:
BITS	extern/libgit2/deps/zlib/infback.c	/^#define BITS(/;"	d	file:
BITS	extern/libgit2/deps/zlib/inflate.c	/^#define BITS(/;"	d	file:
BIT_AT	extern/libgit2/deps/http-parser/http_parser.c	/^# define BIT_AT(/;"	d	file:
BLOB_DIFF	extern/libgit2/tests/diff/blob.c	/^#define BLOB_DIFF /;"	d	file:
BL_CODES	extern/libgit2/deps/zlib/deflate.h	/^#define BL_CODES /;"	d
BOOL	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef int BOOL;$/;"	t	typeref:typename:int
BOOLAPI	extern/libgit2/deps/winhttp/winhttp.h	/^#define BOOLAPI /;"	d
BPRINTER_TABLE_PRINTER_H_	extern/OpenXLSX/benchmark/table_printer.h	/^#define BPRINTER_TABLE_PRINTER_H_$/;"	d
BRANCH_A_CHANGE	extern/libgit2/tests/merge/trees/whitespace.c	/^#define BRANCH_A_CHANGE /;"	d	file:
BRANCH_A_EOL	extern/libgit2/tests/merge/trees/whitespace.c	/^#define BRANCH_A_EOL /;"	d	file:
BRANCH_B_CHANGE	extern/libgit2/tests/merge/trees/whitespace.c	/^#define BRANCH_B_CHANGE /;"	d	file:
BRANCH_B_EOL	extern/libgit2/tests/merge/trees/whitespace.c	/^#define BRANCH_B_EOL /;"	d	file:
BRANCH_ID	extern/libgit2/tests/merge/driver.c	/^#define BRANCH_ID /;"	d	file:
BRANCH_RENAME_OURS	extern/libgit2/tests/merge/trees/renames.c	/^#define BRANCH_RENAME_OURS	/;"	d	file:
BRANCH_RENAME_OURS	extern/libgit2/tests/merge/workdir/renames.c	/^#define BRANCH_RENAME_OURS	/;"	d	file:
BRANCH_RENAME_THEIRS	extern/libgit2/tests/merge/trees/renames.c	/^#define BRANCH_RENAME_THEIRS	/;"	d	file:
BRANCH_RENAME_THEIRS	extern/libgit2/tests/merge/workdir/renames.c	/^#define BRANCH_RENAME_THEIRS	/;"	d	file:
BSR_ANYCRLF	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(BSR_ANYCRLF 0)$/;"	v
BUFERR_MEM	extern/libgit2/src/filebuf.c	/^	BUFERR_MEM$/;"	e	enum:buferr_t	file:
BUFERR_OK	extern/libgit2/src/filebuf.c	/^	BUFERR_OK = 0,$/;"	e	enum:buferr_t	file:
BUFERR_WRITE	extern/libgit2/src/filebuf.c	/^	BUFERR_WRITE,$/;"	e	enum:buferr_t	file:
BUFERR_ZLIB	extern/libgit2/src/filebuf.c	/^	BUFERR_ZLIB,$/;"	e	enum:buferr_t	file:
BUILDFIXED	extern/libgit2/deps/zlib/inflate.c	/^#    define BUILDFIXED$/;"	d	file:
BUILD_BENCHMARKS	extern/OpenXLSX/CMakeLists.txt	/^option(BUILD_BENCHMARKS "Build and run library benchmarks" OFF)$/;"	D
BUILD_CLAR	extern/libgit2/CMakeLists.txt	/^OPTION(BUILD_CLAR			"Build Tests using the Clar suite"			 ON)$/;"	D
BUILD_EXAMPLES	extern/libgit2/CMakeLists.txt	/^OPTION(BUILD_EXAMPLES			"Build library usage example apps"			OFF)$/;"	D
BUILD_FUZZERS	extern/libgit2/CMakeLists.txt	/^OPTION(BUILD_FUZZERS			"Build the fuzz targets"				OFF)$/;"	D
BUILD_SAMPLES	extern/OpenXLSX/CMakeLists.txt	/^option(BUILD_SAMPLES "Build sample programs" OFF)$/;"	D
BUILD_SHARED	extern/OpenXLSX/library/openxlsx/CMakeLists.txt	/^    set(BUILD_SHARED 1)$/;"	v
BUILD_SHARED_LIBS	CMakeLists.txt	/^set(BUILD_SHARED_LIBS OFF CACHE BOOL "" FORCE)$/;"	v
BUILD_SHARED_LIBS	extern/libgit2/CMakeLists.txt	/^OPTION(BUILD_SHARED_LIBS		"Build Shared Library (OFF for Static)"			 ON)$/;"	D
BUILD_TESTS	extern/OpenXLSX/CMakeLists.txt	/^option(BUILD_TESTS "Build and run library tests" OFF)$/;"	D
BUSY_STATE	extern/libgit2/deps/zlib/deflate.h	/^#define BUSY_STATE /;"	d
BYFOUR	extern/libgit2/deps/zlib/crc32.c	/^#  define BYFOUR$/;"	d	file:
BYTEBITS	extern/libgit2/deps/zlib/infback.c	/^#define BYTEBITS(/;"	d	file:
BYTEBITS	extern/libgit2/deps/zlib/inflate.c	/^#define BYTEBITS(/;"	d	file:
BYTE_MAP	extern/libgit2/deps/pcre/pcre_exec.c	/^#define BYTE_MAP /;"	d	file:
Background	extern/OpenXLSX/library/zippy/README.md	/^## Background$/;"	s
Bark	git_.hpp	/^template <typename Pith> struct Bark {$/;"	s	namespace:abo
Basic usage	extern/NamedType/README.md	/^## Basic usage$/;"	s
Before You Start	extern/libgit2/docs/projects.md	/^## Before You Start$/;"	s
Benchmark	extern/OpenXLSX/benchmark/CMakeLists.txt	/^add_executable(Benchmark Benchmark.cpp table_printer.h)$/;"	t
BlobId	git.hpp	/^using BlobId = nt::NamedType<std::string, struct BlobIdTag>;$/;"	t	namespace:git	typeref:typename:nt::NamedType<std::string,struct BlobIdTag>
Boolean	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^        Empty, Boolean, Number, Error, String$/;"	e	enum:OpenXLSX::Impl::XLCellType
Boolean	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Empty, Boolean, Integer, Float, Error, String$/;"	e	enum:OpenXLSX::XLValueType
Breaking API changes	extern/libgit2/docs/changelog.md	/^### Breaking API changes$/;"	S
Breaking CMake configuration changes	extern/libgit2/docs/changelog.md	/^### Breaking CMake configuration changes$/;"	S
Buf_size	extern/libgit2/deps/zlib/deflate.h	/^#define Buf_size /;"	d
Build	extern/libgit2/docs/fuzzing.md	/^## Build$/;"	s
Building	extern/libgit2/README.md	/^Building$/;"	s
Building libgit2 - Using CMake	extern/libgit2/README.md	/^Building libgit2 - Using CMake$/;"	c
Byte	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef unsigned char Byte;$/;"	t	typeref:typename:unsigned char
Byte	extern/libgit2/deps/zlib/zconf.h	/^#  define Byte /;"	d
Byte	extern/libgit2/deps/zlib/zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t	typeref:typename:unsigned char
Bytef	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef Byte Bytef;$/;"	t	typeref:typename:Byte
Bytef	extern/libgit2/deps/zlib/zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t	typeref:typename:Byte FAR
Bytef	extern/libgit2/deps/zlib/zconf.h	/^#  define Bytef /;"	d
C	extern/libgit2/examples/blame.c	/^	int C;$/;"	m	struct:opts	typeref:typename:int	file:
C	git.hpp	/^  using C = int (*)(T **, Args...);$/;"	t	struct:git::make
C	git.hpp	/^  using C = int (*)(T *, Args...);$/;"	t	struct:git::make2
CACHED_POST_BODY_BUF_SIZE	extern/libgit2/src/transports/winhttp.c	/^#define CACHED_POST_BODY_BUF_SIZE	/;"	d	file:
CACHE_FLUSH	extern/libgit2/src/submodule.c	/^	CACHE_FLUSH = 2$/;"	e	enum:__anon952effbe0103	file:
CACHE_NONE	extern/libgit2/examples/diff.c	/^	CACHE_NONE = 2$/;"	e	enum:__anon3a1a5d7e0203	file:
CACHE_NORMAL	extern/libgit2/examples/diff.c	/^	CACHE_NORMAL = 0,$/;"	e	enum:__anon3a1a5d7e0203	file:
CACHE_OK	extern/libgit2/src/submodule.c	/^	CACHE_OK = 0,$/;"	e	enum:__anon952effbe0103	file:
CACHE_ONLY	extern/libgit2/examples/diff.c	/^	CACHE_ONLY = 1,$/;"	e	enum:__anon3a1a5d7e0203	file:
CACHE_REFRESH	extern/libgit2/src/submodule.c	/^	CACHE_REFRESH = 1,$/;"	e	enum:__anon952effbe0103	file:
CALLBACK_DATA	extern/libgit2/deps/http-parser/http_parser.c	/^#define CALLBACK_DATA(/;"	d	file:
CALLBACK_DATA_	extern/libgit2/deps/http-parser/http_parser.c	/^#define CALLBACK_DATA_(/;"	d	file:
CALLBACK_DATA_NOADVANCE	extern/libgit2/deps/http-parser/http_parser.c	/^#define CALLBACK_DATA_NOADVANCE(/;"	d	file:
CALLBACK_NOTIFY	extern/libgit2/deps/http-parser/http_parser.c	/^#define CALLBACK_NOTIFY(/;"	d	file:
CALLBACK_NOTIFY_	extern/libgit2/deps/http-parser/http_parser.c	/^#define CALLBACK_NOTIFY_(/;"	d	file:
CALLBACK_NOTIFY_NOADVANCE	extern/libgit2/deps/http-parser/http_parser.c	/^#define CALLBACK_NOTIFY_NOADVANCE(/;"	d	file:
CALLOUT_ARG_OFFSET	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CALLOUT_ARG_OFFSET(/;"	d	file:
CALLOUT_ARG_SIZE	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CALLOUT_ARG_SIZE /;"	d	file:
CANCEL_VALUE	extern/libgit2/tests/attr/repo.c	/^#define CANCEL_VALUE /;"	d	file:
CANCEL_VALUE	extern/libgit2/tests/core/path.c	/^#define CANCEL_VALUE /;"	d	file:
CAPLMASK	extern/libgit2/deps/pcre/pcre_exec.c	/^#define CAPLMASK /;"	d	file:
CASESELECT	extern/libgit2/src/util.h	/^#define CASESELECT(/;"	d
CASE_ITERATOR_PRIVATE_DATA_1	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CASE_ITERATOR_PRIVATE_DATA_1 /;"	d	file:
CASE_ITERATOR_PRIVATE_DATA_2A	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CASE_ITERATOR_PRIVATE_DATA_2A /;"	d	file:
CASE_ITERATOR_PRIVATE_DATA_2B	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CASE_ITERATOR_PRIVATE_DATA_2B /;"	d	file:
CASE_ITERATOR_TYPE_PRIVATE_DATA_1	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CASE_ITERATOR_TYPE_PRIVATE_DATA_1 /;"	d	file:
CASE_ITERATOR_TYPE_PRIVATE_DATA_2A	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CASE_ITERATOR_TYPE_PRIVATE_DATA_2A /;"	d	file:
CASE_ITERATOR_TYPE_PRIVATE_DATA_2B	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CASE_ITERATOR_TYPE_PRIVATE_DATA_2B /;"	d	file:
CATCH_ARC_ENABLED	extern/NamedType/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_STRONG	extern/NamedType/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	extern/NamedType/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_CATCH_ALL	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_CATCH_ALL /;"	d
CATCH_CATCH_ANON	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_CATCH_ANON(/;"	d
CATCH_CONFIG_ALL_PARTS	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_ALL_PARTS$/;"	d
CATCH_CONFIG_COLOUR_NONE	extern/NamedType/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_NONE$/;"	d
CATCH_CONFIG_COLOUR_NONE	extern/NamedType/catch.hpp	/^#    define CATCH_CONFIG_COLOUR_NONE$/;"	d
CATCH_CONFIG_COLOUR_NONE	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define CATCH_CONFIG_COLOUR_NONE$/;"	d
CATCH_CONFIG_COLOUR_NONE	extern/OpenXLSX/tests/catch/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_NONE$/;"	d
CATCH_CONFIG_COLOUR_NONE	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_CONFIG_COLOUR_NONE$/;"	d
CATCH_CONFIG_COUNTER	extern/NamedType/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_CPP11_TO_STRING	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_CONFIG_CPP11_TO_STRING$/;"	d
CATCH_CONFIG_CPP17_BYTE	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_CPP17_BYTE$/;"	d
CATCH_CONFIG_CPP17_OPTIONAL	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_CPP17_OPTIONAL$/;"	d
CATCH_CONFIG_CPP17_STRING_VIEW	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_CPP17_STRING_VIEW$/;"	d
CATCH_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS$/;"	d
CATCH_CONFIG_CPP17_VARIANT	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_CPP17_VARIANT$/;"	d
CATCH_CONFIG_DISABLE_EXCEPTIONS	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_DISABLE_EXCEPTIONS$/;"	d
CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER	extern/NamedType/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER	extern/NamedType/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER	extern/NamedType/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER$/;"	d
CATCH_CONFIG_EXTERNAL_INTERFACES	extern/NamedType/catch.hpp	/^#  define CATCH_CONFIG_EXTERNAL_INTERFACES$/;"	d
CATCH_CONFIG_EXTERNAL_INTERFACES	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_EXTERNAL_INTERFACES$/;"	d
CATCH_CONFIG_MAIN	extern/NamedType/main.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_NEW_CAPTURE	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_NEW_CAPTURE$/;"	d
CATCH_CONFIG_NO_CPP17_VARIANT	extern/OpenXLSX/tests/catch/catch.hpp	/^#        define CATCH_CONFIG_NO_CPP17_VARIANT$/;"	d
CATCH_CONFIG_POLYFILL_ISNAN	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_POLYFILL_ISNAN$/;"	d
CATCH_CONFIG_POSIX_SIGNALS	extern/NamedType/catch.hpp	/^#   define CATCH_CONFIG_POSIX_SIGNALS$/;"	d
CATCH_CONFIG_POSIX_SIGNALS	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define CATCH_CONFIG_POSIX_SIGNALS$/;"	d
CATCH_CONFIG_RUNNER	extern/OpenXLSX/tests/c++/Test00_Main.cpp	/^#define CATCH_CONFIG_RUNNER$/;"	d	file:
CATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR$/;"	d
CATCH_CONFIG_USE_ASYNC	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_CONFIG_USE_ASYNC$/;"	d
CATCH_CONFIG_WCHAR	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define CATCH_CONFIG_WCHAR$/;"	d
CATCH_CONFIG_WINDOWS_SEH	extern/NamedType/catch.hpp	/^#   define CATCH_CONFIG_WINDOWS_SEH$/;"	d
CATCH_CONFIG_WINDOWS_SEH	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define CATCH_CONFIG_WINDOWS_SEH$/;"	d
CATCH_CPP14_OR_GREATER	extern/NamedType/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP17_OR_GREATER	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_CPP17_OR_GREATER$/;"	d
CATCH_DEFER	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_DEFER(/;"	d
CATCH_EMPTY	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_EMPTY(/;"	d
CATCH_IMPL	extern/NamedType/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	extern/NamedType/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_BYTE	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP17_BYTE$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_OPTIONAL	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP17_OPTIONAL$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_STRING_VIEW	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP17_STRING_VIEW$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	extern/OpenXLSX/tests/catch/catch.hpp	/^#        define CATCH_INTERNAL_CONFIG_CPP17_VARIANT$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	extern/OpenXLSX/tests/catch/catch.hpp	/^#      define CATCH_INTERNAL_CONFIG_CPP17_VARIANT$/;"	d
CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED$/;"	d
CATCH_INTERNAL_CONFIG_NEW_CAPTURE	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_INTERNAL_CONFIG_NEW_CAPTURE$/;"	d
CATCH_INTERNAL_CONFIG_NO_ASYNC	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_NO_ASYNC$/;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING$/;"	d
CATCH_INTERNAL_CONFIG_NO_NEW_CAPTURE	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_NO_NEW_CAPTURE$/;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	extern/NamedType/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS$/;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS$/;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	extern/OpenXLSX/tests/catch/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS$/;"	d
CATCH_INTERNAL_CONFIG_NO_WCHAR	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_INTERNAL_CONFIG_NO_WCHAR$/;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH$/;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH$/;"	d
CATCH_INTERNAL_CONFIG_POLYFILL_ISNAN	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_POLYFILL_ISNAN$/;"	d
CATCH_INTERNAL_CONFIG_POSIX_SIGNALS	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_POSIX_SIGNALS$/;"	d
CATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR$/;"	d
CATCH_INTERNAL_CONFIG_USE_ASYNC	extern/OpenXLSX/tests/catch/catch.hpp	/^# define CATCH_INTERNAL_CONFIG_USE_ASYNC$/;"	d
CATCH_INTERNAL_CONFIG_WINDOWS_SEH	extern/NamedType/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_WINDOWS_SEH$/;"	d
CATCH_INTERNAL_CONFIG_WINDOWS_SEH	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_WINDOWS_SEH$/;"	d
CATCH_INTERNAL_LINEINFO	extern/NamedType/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	extern/NamedType/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	extern/NamedType/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	extern/NamedType/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	extern/NamedType/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS	extern/NamedType/catch.hpp	/^#       define CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS	extern/NamedType/catch.hpp	/^#   define CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#       define CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS	extern/NamedType/catch.hpp	/^#       define CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS	extern/NamedType/catch.hpp	/^#   define CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#       define CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#       define CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_ZERO_VARIADIC_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#       define CATCH_INTERNAL_UNSUPPRESS_ZERO_VARIADIC_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_ZERO_VARIADIC_WARNINGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define CATCH_INTERNAL_UNSUPPRESS_ZERO_VARIADIC_WARNINGS$/;"	d
CATCH_PLATFORM_IPHONE	extern/NamedType/catch.hpp	/^#  define CATCH_PLATFORM_IPHONE$/;"	d
CATCH_PLATFORM_IPHONE	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_PLATFORM_IPHONE$/;"	d
CATCH_PLATFORM_LINUX	extern/NamedType/catch.hpp	/^#  define CATCH_PLATFORM_LINUX$/;"	d
CATCH_PLATFORM_LINUX	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_PLATFORM_LINUX$/;"	d
CATCH_PLATFORM_MAC	extern/NamedType/catch.hpp	/^#  define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_WINDOWS	extern/NamedType/catch.hpp	/^#  define CATCH_PLATFORM_WINDOWS$/;"	d
CATCH_PLATFORM_WINDOWS	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define CATCH_PLATFORM_WINDOWS$/;"	d
CATCH_RECURSE	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_RECURSE(/;"	d
CATCH_RECURSION_LEVEL0	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_RECURSION_LEVEL0(/;"	d
CATCH_RECURSION_LEVEL1	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_RECURSION_LEVEL1(/;"	d
CATCH_RECURSION_LEVEL2	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_RECURSION_LEVEL2(/;"	d
CATCH_RECURSION_LEVEL3	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_RECURSION_LEVEL3(/;"	d
CATCH_RECURSION_LEVEL4	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_RECURSION_LEVEL4(/;"	d
CATCH_RECURSION_LEVEL5	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_RECURSION_LEVEL5(/;"	d
CATCH_RECURSION_LEVEL6	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_RECURSION_LEVEL6(/;"	d
CATCH_REC_END	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_END(/;"	d
CATCH_REC_GET_END	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_GET_END(/;"	d
CATCH_REC_GET_END1	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_GET_END1(/;"	d
CATCH_REC_GET_END2	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_GET_END2(/;"	d
CATCH_REC_LIST	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_LIST(/;"	d
CATCH_REC_LIST0	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_LIST0(/;"	d
CATCH_REC_LIST0_UD	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_LIST0_UD(/;"	d
CATCH_REC_LIST1	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_LIST1(/;"	d
CATCH_REC_LIST1_UD	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_LIST1_UD(/;"	d
CATCH_REC_LIST2	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_LIST2(/;"	d
CATCH_REC_LIST2_UD	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_LIST2_UD(/;"	d
CATCH_REC_LIST_UD	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_LIST_UD(/;"	d
CATCH_REC_NEXT	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_NEXT(/;"	d
CATCH_REC_NEXT0	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_NEXT0(/;"	d
CATCH_REC_NEXT1	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_NEXT1(/;"	d
CATCH_REC_OUT	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REC_OUT$/;"	d
CATCH_REGISTER_TAG_ALIAS	extern/NamedType/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_TRY	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_TRY /;"	d
CATCH_UNSAFE_UNRETAINED	extern/NamedType/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	extern/NamedType/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_VERSION_MAJOR	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_VERSION_MAJOR /;"	d
CATCH_VERSION_MINOR	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_VERSION_MINOR /;"	d
CATCH_VERSION_PATCH	extern/OpenXLSX/tests/catch/catch.hpp	/^#define CATCH_VERSION_PATCH /;"	d
CC_EQ	extern/libgit2/src/wildmatch.c	/^#define CC_EQ(/;"	d	file:
CC_LONG_MAX	extern/libgit2/src/hash/sha1/common_crypto.c	/^#define CC_LONG_MAX /;"	d	file:
CERT_LOCATION	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^						SET(CERT_LOCATION ${LOC})$/;"	v
CHANGED_IN_BRANCH_FILE	extern/libgit2/tests/merge/workdir/dirty.c	/^#define CHANGED_IN_BRANCH_FILE /;"	d	file:
CHANGED_IN_BRANCH_INDEX_ENTRY	extern/libgit2/tests/merge/trees/automerge.c	/^#define CHANGED_IN_BRANCH_INDEX_ENTRY /;"	d	file:
CHANGED_IN_BRANCH_INDEX_ENTRY	extern/libgit2/tests/merge/workdir/simple.c	/^#define CHANGED_IN_BRANCH_INDEX_ENTRY /;"	d	file:
CHANGED_IN_MASTER_INDEX_ENTRY	extern/libgit2/tests/merge/trees/automerge.c	/^#define CHANGED_IN_MASTER_INDEX_ENTRY /;"	d	file:
CHANGED_IN_MASTER_INDEX_ENTRY	extern/libgit2/tests/merge/workdir/simple.c	/^#define CHANGED_IN_MASTER_INDEX_ENTRY /;"	d	file:
CHAR_0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_0 /;"	d
CHAR_1	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_1 /;"	d
CHAR_2	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_2 /;"	d
CHAR_3	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_3 /;"	d
CHAR_4	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_4 /;"	d
CHAR_5	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_5 /;"	d
CHAR_6	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_6 /;"	d
CHAR_7	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_7 /;"	d
CHAR_8	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_8 /;"	d
CHAR_9	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_9 /;"	d
CHAR_A	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_A /;"	d
CHAR_AMPERSAND	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_AMPERSAND /;"	d
CHAR_APOSTROPHE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_APOSTROPHE /;"	d
CHAR_ASTERISK	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_ASTERISK /;"	d
CHAR_B	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_B /;"	d
CHAR_BACKSLASH	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_BACKSLASH /;"	d
CHAR_BEL	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_BEL /;"	d
CHAR_BS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_BS /;"	d
CHAR_C	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_C /;"	d
CHAR_CIRCUMFLEX_ACCENT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_CIRCUMFLEX_ACCENT /;"	d
CHAR_COLON	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_COLON /;"	d
CHAR_COMMA	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_COMMA /;"	d
CHAR_COMMERCIAL_AT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_COMMERCIAL_AT /;"	d
CHAR_CR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_CR /;"	d
CHAR_D	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_D /;"	d
CHAR_DEL	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_DEL /;"	d
CHAR_DOLLAR_SIGN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_DOLLAR_SIGN /;"	d
CHAR_DOT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_DOT /;"	d
CHAR_E	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_E /;"	d
CHAR_EQUALS_SIGN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_EQUALS_SIGN /;"	d
CHAR_ESC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_ESC /;"	d
CHAR_EXCLAMATION_MARK	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_EXCLAMATION_MARK /;"	d
CHAR_F	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_F /;"	d
CHAR_FF	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_FF /;"	d
CHAR_G	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_G /;"	d
CHAR_GRAVE_ACCENT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_GRAVE_ACCENT /;"	d
CHAR_GREATER_THAN_SIGN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_GREATER_THAN_SIGN /;"	d
CHAR_H	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_H /;"	d
CHAR_HT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_HT /;"	d
CHAR_I	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_I /;"	d
CHAR_J	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_J /;"	d
CHAR_K	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_K /;"	d
CHAR_L	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_L /;"	d
CHAR_LEFT_CURLY_BRACKET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_LEFT_CURLY_BRACKET /;"	d
CHAR_LEFT_PARENTHESIS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_LEFT_PARENTHESIS /;"	d
CHAR_LEFT_SQUARE_BRACKET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_LEFT_SQUARE_BRACKET /;"	d
CHAR_LESS_THAN_SIGN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_LESS_THAN_SIGN /;"	d
CHAR_LF	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_LF /;"	d
CHAR_M	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_M /;"	d
CHAR_MINUS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_MINUS /;"	d
CHAR_N	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_N /;"	d
CHAR_NBSP	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_NBSP /;"	d
CHAR_NEL	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_NEL /;"	d
CHAR_NL	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_NL /;"	d
CHAR_NULL	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_NULL /;"	d
CHAR_NUMBER_SIGN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_NUMBER_SIGN /;"	d
CHAR_O	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_O /;"	d
CHAR_P	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_P /;"	d
CHAR_PERCENT_SIGN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_PERCENT_SIGN /;"	d
CHAR_PLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_PLUS /;"	d
CHAR_Q	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_Q /;"	d
CHAR_QUESTION_MARK	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_QUESTION_MARK /;"	d
CHAR_QUOTATION_MARK	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_QUOTATION_MARK /;"	d
CHAR_R	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_R /;"	d
CHAR_RIGHT_CURLY_BRACKET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_RIGHT_CURLY_BRACKET /;"	d
CHAR_RIGHT_PARENTHESIS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_RIGHT_PARENTHESIS /;"	d
CHAR_RIGHT_SQUARE_BRACKET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_RIGHT_SQUARE_BRACKET /;"	d
CHAR_S	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_S /;"	d
CHAR_SEMICOLON	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_SEMICOLON /;"	d
CHAR_SLASH	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_SLASH /;"	d
CHAR_SPACE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_SPACE /;"	d
CHAR_T	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_T /;"	d
CHAR_TILDE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_TILDE /;"	d
CHAR_U	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_U /;"	d
CHAR_UNDERSCORE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_UNDERSCORE /;"	d
CHAR_V	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_V /;"	d
CHAR_VERTICAL_LINE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_VERTICAL_LINE /;"	d
CHAR_VT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_VT /;"	d
CHAR_W	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_W /;"	d
CHAR_X	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_X /;"	d
CHAR_Y	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_Y /;"	d
CHAR_Z	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_Z /;"	d
CHAR_a	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_a /;"	d
CHAR_b	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_b /;"	d
CHAR_c	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_c /;"	d
CHAR_d	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_d /;"	d
CHAR_e	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_e /;"	d
CHAR_f	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_f /;"	d
CHAR_g	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_g /;"	d
CHAR_h	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_h /;"	d
CHAR_i	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_i /;"	d
CHAR_j	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_j /;"	d
CHAR_k	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_k /;"	d
CHAR_l	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_l /;"	d
CHAR_m	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_m /;"	d
CHAR_n	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_n /;"	d
CHAR_o	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_o /;"	d
CHAR_p	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_p /;"	d
CHAR_q	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_q /;"	d
CHAR_r	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_r /;"	d
CHAR_s	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_s /;"	d
CHAR_t	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_t /;"	d
CHAR_u	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_u /;"	d
CHAR_v	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_v /;"	d
CHAR_w	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_w /;"	d
CHAR_x	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_x /;"	d
CHAR_y	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_y /;"	d
CHAR_z	extern/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_z /;"	d
CHECK	extern/libgit2/deps/zlib/inflate.h	/^    CHECK,      \/* i: waiting for 32-bit check value *\/$/;"	e	enum:__anon92f8b1ba0103
CHECKOUT_ACTION_IF	extern/libgit2/src/checkout.c	/^#define CHECKOUT_ACTION_IF(/;"	d	file:
CHECKOUT_ACTION__CONFLICT	extern/libgit2/src/checkout.c	/^	CHECKOUT_ACTION__CONFLICT = 8,$/;"	e	enum:__anonbac5d6240103	file:
CHECKOUT_ACTION__DEFER_REMOVE	extern/libgit2/src/checkout.c	/^	CHECKOUT_ACTION__DEFER_REMOVE = 64,$/;"	e	enum:__anonbac5d6240103	file:
CHECKOUT_ACTION__MAX	extern/libgit2/src/checkout.c	/^	CHECKOUT_ACTION__MAX = 32,$/;"	e	enum:__anonbac5d6240103	file:
CHECKOUT_ACTION__NONE	extern/libgit2/src/checkout.c	/^	CHECKOUT_ACTION__NONE = 0,$/;"	e	enum:__anonbac5d6240103	file:
CHECKOUT_ACTION__REMOVE	extern/libgit2/src/checkout.c	/^	CHECKOUT_ACTION__REMOVE = 1,$/;"	e	enum:__anonbac5d6240103	file:
CHECKOUT_ACTION__REMOVE_AND_UPDATE	extern/libgit2/src/checkout.c	/^	CHECKOUT_ACTION__REMOVE_AND_UPDATE =$/;"	e	enum:__anonbac5d6240103	file:
CHECKOUT_ACTION__REMOVE_CONFLICT	extern/libgit2/src/checkout.c	/^	CHECKOUT_ACTION__REMOVE_CONFLICT = 16,$/;"	e	enum:__anonbac5d6240103	file:
CHECKOUT_ACTION__UPDATE_BLOB	extern/libgit2/src/checkout.c	/^	CHECKOUT_ACTION__UPDATE_BLOB = 2,$/;"	e	enum:__anonbac5d6240103	file:
CHECKOUT_ACTION__UPDATE_CONFLICT	extern/libgit2/src/checkout.c	/^	CHECKOUT_ACTION__UPDATE_CONFLICT = 32,$/;"	e	enum:__anonbac5d6240103	file:
CHECKOUT_ACTION__UPDATE_SUBMODULE	extern/libgit2/src/checkout.c	/^	CHECKOUT_ACTION__UPDATE_SUBMODULE = 4,$/;"	e	enum:__anonbac5d6240103	file:
CHECKOUT_INDEX_DONT_WRITE_MASK	extern/libgit2/src/checkout.c	/^#define CHECKOUT_INDEX_DONT_WRITE_MASK /;"	d	file:
CHECK_DVMASK	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^#define CHECK_DVMASK(/;"	d
CHECK_MACRO_FUNC_INIT_EQUAL	extern/libgit2/tests/core/structinit.c	/^#define CHECK_MACRO_FUNC_INIT_EQUAL(/;"	d	file:
CHECK_PARTIAL	extern/libgit2/deps/pcre/pcre_exec.c	/^#define CHECK_PARTIAL(/;"	d	file:
CHECK_PROTOTYPE_DEFINITION	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.cmake	/^function(CHECK_PROTOTYPE_DEFINITION _FUNCTION _PROTOTYPE _RETURN _HEADER _VARIABLE)$/;"	f
CHECK_PROTOTYPE_DEFINITION_CONTENT	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.cmake	/^    set(CHECK_PROTOTYPE_DEFINITION_CONTENT "\/* *\/\\n")$/;"	v	function:CHECK_PROTOTYPE_DEFINITION
CHECK_PROTOTYPE_DEFINITION_FLAGS	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.cmake	/^    set(CHECK_PROTOTYPE_DEFINITION_FLAGS ${CMAKE_REQUIRED_FLAGS})$/;"	v	function:CHECK_PROTOTYPE_DEFINITION
CHECK_PROTOTYPE_DEFINITION_HEADER	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.cmake	/^      set(CHECK_PROTOTYPE_DEFINITION_HEADER$/;"	v	function:CHECK_PROTOTYPE_DEFINITION
CHECK_PROTOTYPE_DEFINITION_LIBS	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.cmake	/^      set(CHECK_PROTOTYPE_DEFINITION_LIBS$/;"	v	function:CHECK_PROTOTYPE_DEFINITION
CHECK_PROTOTYPE_DEFINITION_LIBS	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.cmake	/^      set(CHECK_PROTOTYPE_DEFINITION_LIBS)$/;"	v	function:CHECK_PROTOTYPE_DEFINITION
CHECK_PROTOTYPE_DEFINITION_PROTO	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.cmake	/^    set(CHECK_PROTOTYPE_DEFINITION_PROTO ${_PROTOTYPE})$/;"	v	function:CHECK_PROTOTYPE_DEFINITION
CHECK_PROTOTYPE_DEFINITION_RETURN	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.cmake	/^    set(CHECK_PROTOTYPE_DEFINITION_RETURN ${_RETURN})$/;"	v	function:CHECK_PROTOTYPE_DEFINITION
CHECK_PROTOTYPE_DEFINITION_SYMBOL	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.cmake	/^    set(CHECK_PROTOTYPE_DEFINITION_SYMBOL ${_FUNCTION})$/;"	v	function:CHECK_PROTOTYPE_DEFINITION
CHOP	extern/libgit2/deps/zlib/adler32.c	/^#  define CHOP(/;"	d	file:
CHUNKED	extern/libgit2/deps/http-parser/http_parser.c	/^#define CHUNKED /;"	d	file:
CHUNKSIZE	extern/libgit2/tests/filter/stream.c	/^#define CHUNKSIZE /;"	d	file:
CHUNK_SIZE	extern/libgit2/src/transports/http.c	/^#define CHUNK_SIZE	/;"	d	file:
CLARA_CONFIG_MAIN	extern/NamedType/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	extern/NamedType/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	extern/OpenXLSX/tests/catch/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLAR_FIXTURES	extern/libgit2/tests/CMakeLists.txt	/^SET(CLAR_FIXTURES "${CMAKE_CURRENT_SOURCE_DIR}\/resources\/")$/;"	v
CLAR_PATH	extern/libgit2/tests/CMakeLists.txt	/^SET(CLAR_PATH "${CMAKE_CURRENT_SOURCE_DIR}")$/;"	v
CLEAN_THREAD_EXIT	extern/libgit2/src/win32/thread.c	/^#define CLEAN_THREAD_EXIT /;"	d	file:
CLEAR_FOR_CORE_FILEMODE	extern/libgit2/tests/repo/template.c	/^#define CLEAR_FOR_CORE_FILEMODE(/;"	d	file:
CLEAR_HASH	extern/libgit2/deps/zlib/deflate.c	/^#define CLEAR_HASH(/;"	d	file:
CLOSE	extern/libgit2/deps/http-parser/http_parser.c	/^#define CLOSE /;"	d	file:
CLSID_InternetSecurityManager	extern/libgit2/src/transports/winhttp.c	/^# define CLSID_InternetSecurityManager /;"	d	file:
CLSID_InternetSecurityManager_mingw	extern/libgit2/src/transports/winhttp.c	/^static const CLSID CLSID_InternetSecurityManager_mingw =$/;"	v	typeref:typename:const CLSID	file:
CL_COMMIT_EMAIL	extern/libgit2/tests/clar_libgit2.c	/^#define CL_COMMIT_EMAIL /;"	d	file:
CL_COMMIT_MSG	extern/libgit2/tests/clar_libgit2.c	/^#define CL_COMMIT_MSG /;"	d	file:
CL_COMMIT_NAME	extern/libgit2/tests/clar_libgit2.c	/^#define CL_COMMIT_NAME /;"	d	file:
CL_PERF_TIMER_INIT	extern/libgit2/tests/clar_libgit2_timer.h	/^#define CL_PERF_TIMER_INIT /;"	d
CL_TEST_FAILURE	extern/libgit2/tests/clar.h	/^	CL_TEST_FAILURE,$/;"	e	enum:cl_test_status
CL_TEST_NOTRUN	extern/libgit2/tests/clar.h	/^	CL_TEST_NOTRUN,$/;"	e	enum:cl_test_status
CL_TEST_OK	extern/libgit2/tests/clar.h	/^	CL_TEST_OK,$/;"	e	enum:cl_test_status
CL_TEST_SKIP	extern/libgit2/tests/clar.h	/^	CL_TEST_SKIP,$/;"	e	enum:cl_test_status
CL_TRACE	extern/libgit2/tests/clar.c	/^#define CL_TRACE(/;"	d	file:
CL_TRACE__SUITE_BEGIN	extern/libgit2/tests/clar.h	/^	CL_TRACE__SUITE_BEGIN,$/;"	e	enum:cl_trace_event
CL_TRACE__SUITE_END	extern/libgit2/tests/clar.h	/^	CL_TRACE__SUITE_END,$/;"	e	enum:cl_trace_event
CL_TRACE__TEST__BEGIN	extern/libgit2/tests/clar.h	/^	CL_TRACE__TEST__BEGIN,$/;"	e	enum:cl_trace_event
CL_TRACE__TEST__END	extern/libgit2/tests/clar.h	/^	CL_TRACE__TEST__END,$/;"	e	enum:cl_trace_event
CL_TRACE__TEST__LONGJMP	extern/libgit2/tests/clar.h	/^	CL_TRACE__TEST__LONGJMP,$/;"	e	enum:cl_trace_event
CL_TRACE__TEST__RUN_BEGIN	extern/libgit2/tests/clar.h	/^	CL_TRACE__TEST__RUN_BEGIN,$/;"	e	enum:cl_trace_event
CL_TRACE__TEST__RUN_END	extern/libgit2/tests/clar.h	/^	CL_TRACE__TEST__RUN_END,$/;"	e	enum:cl_trace_event
CMAKE_BUILD_TYPE	extern/libgit2/CMakeLists.txt	/^		SET(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: Debug Releas/;"	v
CMAKE_CROSSCOMPILING	extern/libgit2/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	extern/libgit2/deps/http-parser/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	extern/libgit2/deps/ntlmclient/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	extern/libgit2/src/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	extern/libgit2/tests/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CXX_EXTENSIONS	extern/OpenXLSX/CMakeLists.txt	/^set(CMAKE_CXX_EXTENSIONS OFF)$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	extern/libgit2/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	extern/libgit2/deps/http-parser/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	extern/libgit2/deps/ntlmclient/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	extern/libgit2/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	extern/libgit2/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	extern/libgit2/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	extern/libgit2/deps/http-parser/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	extern/libgit2/deps/ntlmclient/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	extern/libgit2/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	extern/libgit2/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_STANDARD	extern/OpenXLSX/CMakeLists.txt	/^set(CMAKE_CXX_STANDARD 17)$/;"	v
CMAKE_CXX_STANDARD_REQUIRED	extern/OpenXLSX/CMakeLists.txt	/^set(CMAKE_CXX_STANDARD_REQUIRED ON)$/;"	v
CMAKE_CXX_VISIBILITY_PRESET	extern/OpenXLSX/CMakeLists.txt	/^set(CMAKE_CXX_VISIBILITY_PRESET hidden)$/;"	v
CMAKE_C_ARCHIVE_APPEND	extern/libgit2/CMakeLists.txt	/^		SET(CMAKE_C_ARCHIVE_APPEND "<CMAKE_AR> Dq  <TARGET> <LINK_FLAGS> <OBJECTS>")$/;"	v
CMAKE_C_ARCHIVE_CREATE	extern/libgit2/CMakeLists.txt	/^		SET(CMAKE_C_ARCHIVE_CREATE "<CMAKE_AR> Dqc <TARGET> <LINK_FLAGS> <OBJECTS>")$/;"	v
CMAKE_C_ARCHIVE_FINISH	extern/libgit2/CMakeLists.txt	/^		SET(CMAKE_C_ARCHIVE_FINISH "<CMAKE_RANLIB> -D <TARGET>")$/;"	v
CMAKE_C_COMPILER_ID	extern/libgit2/deps/http-parser/CMakeFiles/http-parser.dir/DependInfo.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID	extern/libgit2/deps/ntlmclient/CMakeFiles/ntlmclient.dir/DependInfo.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID	extern/libgit2/src/CMakeFiles/git2internal.dir/DependInfo.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID	extern/libgit2/tests/CMakeFiles/libgit2_clar.dir/DependInfo.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_FLAGS	extern/libgit2/CMakeLists.txt	/^		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")$/;"	v
CMAKE_C_FLAGS	extern/libgit2/CMakeLists.txt	/^		SET(CMAKE_C_FLAGS "-D_POSIX_C_SOURCE=200112L -D__EXTENSIONS__ -D_POSIX_PTHREAD_SEMANTICS ${CMA/;"	v
CMAKE_C_FLAGS	extern/libgit2/CMakeLists.txt	/^		SET(CMAKE_C_FLAGS "-pg ${CMAKE_C_FLAGS}")$/;"	v
CMAKE_C_FLAGS	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} \/Gd")$/;"	v
CMAKE_C_FLAGS	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_C_FLAGS "-D_GNU_SOURCE ${CMAKE_C_FLAGS}")$/;"	v
CMAKE_C_FLAGS	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_C_FLAGS "\/GF \/MP \/nologo ${CMAKE_C_FLAGS}")$/;"	v
CMAKE_C_FLAGS	extern/libgit2/cmake/Modules/AddCFlagIfSupported.cmake	/^		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${_FLAG}")$/;"	v
CMAKE_C_FLAGS_DEBUG	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -D_DEBUG -O0")$/;"	v
CMAKE_C_FLAGS_DEBUG	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} \/Zi \/Od \/D_DEBUG \/RTC1 ${CRT_FLAG_DEBUG}")$/;"	v
CMAKE_C_FLAGS_MINSIZEREL	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_C_FLAGS_MINSIZEREL "\/DNDEBUG \/O1 \/Oy \/GL \/Gy ${CRT_FLAG_RELEASE}")$/;"	v
CMAKE_C_FLAGS_RELEASE	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_C_FLAGS_RELEASE "\/DNDEBUG \/O2 \/Oy \/GL \/Gy ${CRT_FLAG_RELEASE}")$/;"	v
CMAKE_C_FLAGS_RELWITHDEBINFO	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_C_FLAGS_RELWITHDEBINFO "\/DNDEBUG \/Zi \/O2 \/Oy- \/GL \/Gy ${CRT_FLAG_RELEASE}")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	extern/libgit2/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	extern/libgit2/deps/http-parser/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	extern/libgit2/deps/ntlmclient/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	extern/libgit2/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	extern/libgit2/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	extern/libgit2/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	extern/libgit2/deps/http-parser/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	extern/libgit2/deps/ntlmclient/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	extern/libgit2/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	extern/libgit2/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_STANDARD_LIBRARIES	extern/libgit2/CMakeLists.txt	/^		SET(CMAKE_C_STANDARD_LIBRARIES "${CMAKE_C_STANDARD_LIBRARIES} Dbghelp.lib")$/;"	v
CMAKE_C_TARGET_INCLUDE_PATH	extern/libgit2/deps/http-parser/CMakeFiles/http-parser.dir/DependInfo.cmake	/^set(CMAKE_C_TARGET_INCLUDE_PATH$/;"	v
CMAKE_C_TARGET_INCLUDE_PATH	extern/libgit2/deps/ntlmclient/CMakeFiles/ntlmclient.dir/DependInfo.cmake	/^set(CMAKE_C_TARGET_INCLUDE_PATH$/;"	v
CMAKE_C_TARGET_INCLUDE_PATH	extern/libgit2/src/CMakeFiles/git2internal.dir/DependInfo.cmake	/^set(CMAKE_C_TARGET_INCLUDE_PATH$/;"	v
CMAKE_C_TARGET_INCLUDE_PATH	extern/libgit2/tests/CMakeFiles/libgit2_clar.dir/DependInfo.cmake	/^set(CMAKE_C_TARGET_INCLUDE_PATH$/;"	v
CMAKE_DEPENDS_CHECK_C	extern/libgit2/deps/http-parser/CMakeFiles/http-parser.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_C$/;"	v
CMAKE_DEPENDS_CHECK_C	extern/libgit2/deps/ntlmclient/CMakeFiles/ntlmclient.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_C$/;"	v
CMAKE_DEPENDS_CHECK_C	extern/libgit2/src/CMakeFiles/git2internal.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_C$/;"	v
CMAKE_DEPENDS_CHECK_C	extern/libgit2/tests/CMakeFiles/libgit2_clar.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_C$/;"	v
CMAKE_DEPENDS_LANGUAGES	extern/libgit2/deps/http-parser/CMakeFiles/http-parser.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	extern/libgit2/deps/ntlmclient/CMakeFiles/ntlmclient.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	extern/libgit2/src/CMakeFiles/git2.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	extern/libgit2/src/CMakeFiles/git2internal.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	extern/libgit2/tests/CMakeFiles/libgit2_clar.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_EXE_LINKER_FLAGS	extern/libgit2/CMakeLists.txt	/^		SET(CMAKE_EXE_LINKER_FLAGS "-pg ${CMAKE_EXE_LINKER_FLAGS}")$/;"	v
CMAKE_EXE_LINKER_FLAGS	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_EXE_LINKER_FLAGS "\/DYNAMICBASE \/NXCOMPAT \/LARGEADDRESSAWARE \/VERSION:${LIBGIT2_VE/;"	v
CMAKE_EXE_LINKER_FLAGS_DEBUG	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "\/DEBUG")$/;"	v
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "\/RELEASE \/LTCG \/OPT:REF \/OPT:ICF \/INCREMENTAL:NO")$/;"	v
CMAKE_EXE_LINKER_FLAGS_RELEASE	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "\/RELEASE \/LTCG \/OPT:REF \/OPT:ICF \/INCREMENTAL:NO")$/;"	v
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "\/DEBUG \/RELEASE \/LTCG \/OPT:REF \/OPT:ICF \/INCRE/;"	v
CMAKE_FIND_LIBRARY_SUFFIXES	extern/libgit2/CMakeLists.txt	/^       SET(CMAKE_FIND_LIBRARY_SUFFIXES ".a")$/;"	v
CMAKE_FORCE_UNIX_PATHS	extern/libgit2/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	extern/libgit2/deps/http-parser/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	extern/libgit2/deps/ntlmclient/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	extern/libgit2/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	extern/libgit2/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	extern/libgit2/deps/http-parser/CMakeFiles/http-parser.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	extern/libgit2/deps/ntlmclient/CMakeFiles/ntlmclient.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	extern/libgit2/src/CMakeFiles/git2.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	extern/libgit2/src/CMakeFiles/git2internal.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	extern/libgit2/tests/CMakeFiles/libgit2_clar.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_INCLUDE_CURRENT_DIR	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(CMAKE_INCLUDE_CURRENT_DIR 1)$/;"	v
CMAKE_INSTALL_COMPONENT	extern/libgit2/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	extern/libgit2/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	extern/libgit2/deps/http-parser/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	extern/libgit2/deps/http-parser/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	extern/libgit2/deps/ntlmclient/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	extern/libgit2/deps/ntlmclient/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	extern/libgit2/src/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	extern/libgit2/src/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	extern/libgit2/tests/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	extern/libgit2/tests/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_CONFIG_NAME	extern/libgit2/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	extern/libgit2/deps/http-parser/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	extern/libgit2/deps/ntlmclient/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	extern/libgit2/src/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	extern/libgit2/tests/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_PREFIX	extern/libgit2/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	extern/libgit2/deps/http-parser/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	extern/libgit2/deps/ntlmclient/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	extern/libgit2/src/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	extern/libgit2/tests/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	extern/libgit2/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	extern/libgit2/deps/http-parser/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	extern/libgit2/deps/ntlmclient/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	extern/libgit2/src/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	extern/libgit2/tests/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_MODULE_PATH	extern/libgit2/CMakeLists.txt	/^SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${libgit2_SOURCE_DIR}\/cmake\/Modules\/")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	extern/libgit2/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/antares\/sako")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	extern/libgit2/deps/http-parser/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/antares\/sako")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	extern/libgit2/deps/ntlmclient/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/antares\/sako")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	extern/libgit2/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/antares\/sako")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	extern/libgit2/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/antares\/sako")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	extern/libgit2/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/antares\/sako")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	extern/libgit2/deps/http-parser/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/antares\/sako")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	extern/libgit2/deps/ntlmclient/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/antares\/sako")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	extern/libgit2/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/antares\/sako")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	extern/libgit2/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/antares\/sako")$/;"	v
CMAKE_REQUIRED_FLAGS	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_REQUIRED_FLAGS "-fsanitize=fuzzer-no-link")$/;"	v
CMAKE_SHARED_LINKER_FLAGS	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}")$/;"	v
CMAKE_SHARED_LINKER_FLAGS_DEBUG	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG}")$/;"	v
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "${CMAKE_EXE_LINKER_FLAGS_MINSIZEREL}")$/;"	v
CMAKE_SHARED_LINKER_FLAGS_RELEASE	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE}")$/;"	v
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO}")$/;"	v
CMAKE_STATIC_LINKER_FLAGS	extern/libgit2/CMakeLists.txt	/^	SET(CMAKE_STATIC_LINKER_FLAGS "\/IGNORE:4221")$/;"	v
CMAKE_SYMBOL_EXISTS_INCLUDES	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.cmake	/^      set(CMAKE_SYMBOL_EXISTS_INCLUDES$/;"	v	function:CHECK_PROTOTYPE_DEFINITION
CMAKE_SYMBOL_EXISTS_INCLUDES	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.cmake	/^      set(CMAKE_SYMBOL_EXISTS_INCLUDES)$/;"	v	function:CHECK_PROTOTYPE_DEFINITION
CMAKE_TARGET_DEFINITIONS_C	extern/libgit2/deps/http-parser/CMakeFiles/http-parser.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_C$/;"	v
CMAKE_TARGET_DEFINITIONS_C	extern/libgit2/deps/ntlmclient/CMakeFiles/ntlmclient.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_C$/;"	v
CMAKE_TARGET_DEFINITIONS_C	extern/libgit2/src/CMakeFiles/git2internal.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_C$/;"	v
CMAKE_TARGET_DEFINITIONS_C	extern/libgit2/tests/CMakeFiles/libgit2_clar.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_C$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	extern/libgit2/deps/http-parser/CMakeFiles/http-parser.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	extern/libgit2/deps/ntlmclient/CMakeFiles/ntlmclient.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	extern/libgit2/src/CMakeFiles/git2.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	extern/libgit2/src/CMakeFiles/git2internal.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	extern/libgit2/tests/CMakeFiles/libgit2_clar.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_VISIBILITY_INLINES_HIDDEN	extern/OpenXLSX/CMakeLists.txt	/^set(CMAKE_VISIBILITY_INLINES_HIDDEN YES)$/;"	v
CMP	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CMP(/;"	d	file:
CMP	extern/libgit2/src/xdiff/xhistogram.c	/^#define CMP(/;"	d	file:
CMPTO	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CMPTO(/;"	d	file:
CMP_ENV	extern/libgit2/src/xdiff/xhistogram.c	/^#define CMP_ENV(/;"	d	file:
CMT_FILE_FMT	extern/libgit2/src/rebase.c	/^#define CMT_FILE_FMT /;"	d	file:
CMake Failures	extern/libgit2/docs/troubleshooting.md	/^CMake Failures$/;"	s
CNG	extern/libgit2/src/hash/sha1/win32.h	/^	CNG$/;"	e	enum:hash_win32_prov_type
CNT	extern/libgit2/src/xdiff/xhistogram.c	/^#define CNT(/;"	d	file:
CODELENS	extern/libgit2/deps/zlib/inflate.h	/^        CODELENS,   \/* i: waiting for length\/lit and distance code lengths *\/$/;"	e	enum:__anon92f8b1ba0103
CODES	extern/libgit2/deps/zlib/inftrees.h	/^    CODES,$/;"	e	enum:__anon807a30970203
COMMENT	extern/libgit2/deps/zlib/inflate.h	/^    COMMENT,    \/* i: waiting for end of comment (gzip) *\/$/;"	e	enum:__anon92f8b1ba0103
COMMENT_LINE_CHAR	extern/libgit2/src/trailer.c	/^#define COMMENT_LINE_CHAR /;"	d	file:
COMMENT_STATE	extern/libgit2/deps/zlib/deflate.h	/^#define COMMENT_STATE /;"	d
COMMIT_ALLOC	extern/libgit2/src/commit_list.h	/^#define COMMIT_ALLOC /;"	d
COMMON_REPO	extern/libgit2/tests/worktree/bare.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	extern/libgit2/tests/worktree/config.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	extern/libgit2/tests/worktree/merge.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	extern/libgit2/tests/worktree/open.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	extern/libgit2/tests/worktree/reflog.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	extern/libgit2/tests/worktree/refs.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	extern/libgit2/tests/worktree/repository.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	extern/libgit2/tests/worktree/worktree.c	/^#define COMMON_REPO /;"	d	file:
COMPILE_BACKTRACKINGPATH	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define COMPILE_BACKTRACKINGPATH(/;"	d	file:
COMPILE_PCRE8	extern/libgit2/deps/pcre/pcre_internal.h	/^#define COMPILE_PCRE8$/;"	d
COMPILE_PCRE8	extern/libgit2/deps/pcre/pcre_ord2utf8.c	/^#define COMPILE_PCRE8$/;"	d	file:
COMPILE_WORK_SIZE	extern/libgit2/deps/pcre/pcre_compile.c	/^#define COMPILE_WORK_SIZE /;"	d	file:
COMPILE_WORK_SIZE_MAX	extern/libgit2/deps/pcre/pcre_compile.c	/^#define COMPILE_WORK_SIZE_MAX /;"	d	file:
COMPRESS_BUFLEN	extern/libgit2/src/pack-objects.c	/^#define COMPRESS_BUFLEN /;"	d	file:
CONFIG_FETCH_FMT	extern/libgit2/src/remote.c	/^#define CONFIG_FETCH_FMT /;"	d	file:
CONFIG_PUSHURL_FMT	extern/libgit2/src/remote.c	/^#define CONFIG_PUSHURL_FMT /;"	d	file:
CONFIG_PUSH_FMT	extern/libgit2/src/remote.c	/^#define CONFIG_PUSH_FMT /;"	d	file:
CONFIG_TAGOPT_FMT	extern/libgit2/src/remote.c	/^#define CONFIG_TAGOPT_FMT /;"	d	file:
CONFIG_URL_FMT	extern/libgit2/src/remote.c	/^#define CONFIG_URL_FMT /;"	d	file:
CONFLICTING_ANCESTOR_OID	extern/libgit2/tests/checkout/conflict.c	/^#define CONFLICTING_ANCESTOR_OID /;"	d	file:
CONFLICTING_DIFF3_FILE	extern/libgit2/tests/checkout/conflict.c	/^#define CONFLICTING_DIFF3_FILE /;"	d	file:
CONFLICTING_DIFF3_FILE	extern/libgit2/tests/merge/conflict_data.h	/^#define CONFLICTING_DIFF3_FILE /;"	d
CONFLICTING_MERGE_FILE	extern/libgit2/tests/merge/conflict_data.h	/^#define CONFLICTING_MERGE_FILE /;"	d
CONFLICTING_OURS_FILE	extern/libgit2/tests/checkout/conflict.c	/^#define CONFLICTING_OURS_FILE /;"	d	file:
CONFLICTING_OURS_OID	extern/libgit2/tests/checkout/conflict.c	/^#define CONFLICTING_OURS_OID /;"	d	file:
CONFLICTING_RECURSIVE_F1_TO_F2	extern/libgit2/tests/merge/conflict_data.h	/^#define CONFLICTING_RECURSIVE_F1_TO_F2 /;"	d
CONFLICTING_RECURSIVE_H2_TO_H1_WITH_DIFF3	extern/libgit2/tests/merge/conflict_data.h	/^#define CONFLICTING_RECURSIVE_H2_TO_H1_WITH_DIFF3 /;"	d
CONFLICTING_REUC_ENTRY	extern/libgit2/tests/merge/trees/automerge.c	/^#define CONFLICTING_REUC_ENTRY /;"	d	file:
CONFLICTING_REUC_ENTRY	extern/libgit2/tests/merge/workdir/simple.c	/^#define CONFLICTING_REUC_ENTRY /;"	d	file:
CONFLICTING_THEIRS_FILE	extern/libgit2/tests/checkout/conflict.c	/^#define CONFLICTING_THEIRS_FILE /;"	d	file:
CONFLICTING_THEIRS_OID	extern/libgit2/tests/checkout/conflict.c	/^#define CONFLICTING_THEIRS_OID /;"	d	file:
CONFLICTING_UNION_FILE	extern/libgit2/tests/merge/conflict_data.h	/^#define CONFLICTING_UNION_FILE /;"	d
CONFLICTS_ONE_ANCESTOR_OID	extern/libgit2/tests/index/conflicts.h	/^#define CONFLICTS_ONE_ANCESTOR_OID /;"	d
CONFLICTS_ONE_OUR_OID	extern/libgit2/tests/index/conflicts.h	/^#define CONFLICTS_ONE_OUR_OID /;"	d
CONFLICTS_ONE_THEIR_OID	extern/libgit2/tests/index/conflicts.h	/^#define CONFLICTS_ONE_THEIR_OID /;"	d
CONFLICTS_TWO_ANCESTOR_OID	extern/libgit2/tests/index/conflicts.h	/^#define CONFLICTS_TWO_ANCESTOR_OID /;"	d
CONFLICTS_TWO_OUR_OID	extern/libgit2/tests/index/conflicts.h	/^#define CONFLICTS_TWO_OUR_OID /;"	d
CONFLICTS_TWO_THEIR_OID	extern/libgit2/tests/index/conflicts.h	/^#define CONFLICTS_TWO_THEIR_OID /;"	d
CONFLICT_BRANCH	extern/libgit2/tests/worktree/merge.c	/^#define CONFLICT_BRANCH /;"	d	file:
CONFLICT_BRANCH_FILE_TXT	extern/libgit2/tests/worktree/merge.c	/^#define CONFLICT_BRANCH_FILE_TXT /;"	d	file:
CONNECTION	extern/libgit2/deps/http-parser/http_parser.c	/^#define CONNECTION /;"	d	file:
CONST_STRLEN	extern/libgit2/src/util.h	/^#define CONST_STRLEN(/;"	d
CONTENT	extern/libgit2/tests/attr/repo.c	/^#define CONTENT /;"	d	file:
CONTENT_LENGTH	extern/libgit2/deps/http-parser/http_parser.c	/^#define CONTENT_LENGTH /;"	d	file:
COPY	extern/libgit2/deps/zlib/gzguts.h	/^#define COPY /;"	d
COPY	extern/libgit2/deps/zlib/inflate.h	/^        COPY,       \/* i\/o: waiting for input or output to copy stored block *\/$/;"	e	enum:__anon92f8b1ba0103
COPY_	extern/libgit2/deps/zlib/inflate.h	/^        COPY_,      \/* i\/o: same as COPY below, but only first time in *\/$/;"	e	enum:__anon92f8b1ba0103
COPY_RENAME_COMMIT	extern/libgit2/tests/diff/rename.c	/^#define COPY_RENAME_COMMIT /;"	d	file:
COREFOUNDATION_FOUND	extern/libgit2/cmake/Modules/FindCoreFoundation.cmake	/^	SET(COREFOUNDATION_FOUND TRUE)$/;"	v
COREFOUNDATION_LDFLAGS	extern/libgit2/cmake/Modules/FindCoreFoundation.cmake	/^	SET(COREFOUNDATION_LDFLAGS "-framework CoreFoundation")$/;"	v
COUNT_MATCH	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define COUNT_MATCH /;"	d	file:
CR	extern/libgit2/deps/http-parser/http_parser.c	/^#define CR /;"	d	file:
CRC2	extern/libgit2/deps/zlib/inflate.c	/^#  define CRC2(/;"	d	file:
CRC4	extern/libgit2/deps/zlib/inflate.c	/^#  define CRC4(/;"	d	file:
CREATE_DOCS	extern/OpenXLSX/CMakeLists.txt	/^option(CREATE_DOCS "Build library documentation (requires Doxygen and Graphviz\/Dot to be instal/;"	D
CRLF_NUM_TEST_OBJECTS	extern/libgit2/tests/object/blob/filter.c	/^#define CRLF_NUM_TEST_OBJECTS	/;"	d	file:
CRTDBG_STACKTRACE__UID_LEN	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^#define CRTDBG_STACKTRACE__UID_LEN /;"	d	file:
CRTP_HPP	extern/NamedType/crtp.hpp	/^#define CRTP_HPP$/;"	d
CRT_FLAG_DEBUG	extern/libgit2/CMakeLists.txt	/^		SET(CRT_FLAG_DEBUG "${CRT_FLAG_DEBUG}")$/;"	v
CRT_FLAG_DEBUG	extern/libgit2/CMakeLists.txt	/^		SET(CRT_FLAG_DEBUG "\/MDd")$/;"	v
CRT_FLAG_DEBUG	extern/libgit2/CMakeLists.txt	/^		SET(CRT_FLAG_DEBUG "\/MTd")$/;"	v
CRT_FLAG_RELEASE	extern/libgit2/CMakeLists.txt	/^		SET(CRT_FLAG_RELEASE "\/MD")$/;"	v
CRT_FLAG_RELEASE	extern/libgit2/CMakeLists.txt	/^		SET(CRT_FLAG_RELEASE "\/MT")$/;"	v
CRYPTOAPI	extern/libgit2/src/hash/sha1/win32.h	/^	CRYPTOAPI,$/;"	e	enum:hash_win32_prov_type
CRYPT_COMMONCRYPTO	extern/libgit2/src/transports/auth_ntlm.h	/^# define CRYPT_COMMONCRYPTO$/;"	d
CRYPT_DES_BLOCKSIZE	extern/libgit2/deps/ntlmclient/crypt.h	/^#define CRYPT_DES_BLOCKSIZE /;"	d
CRYPT_MBEDTLS	extern/libgit2/src/transports/auth_ntlm.h	/^# define CRYPT_MBEDTLS$/;"	d
CRYPT_MD4_DIGESTSIZE	extern/libgit2/deps/ntlmclient/crypt.h	/^#define CRYPT_MD4_DIGESTSIZE /;"	d
CRYPT_MD5_DIGESTSIZE	extern/libgit2/deps/ntlmclient/crypt.h	/^#define CRYPT_MD5_DIGESTSIZE /;"	d
CRYPT_OPENSSL	extern/libgit2/src/transports/auth_ntlm.h	/^# define CRYPT_OPENSSL$/;"	d
CURRENT_AS	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CURRENT_AS(/;"	d	file:
CURRENT_FILE	extern/libgit2/src/rebase.c	/^#define CURRENT_FILE /;"	d	file:
CalculationChain	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        CalculationChain,$/;"	e	enum:OpenXLSX::Impl::XLContentType
CalculationChain	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        CalculationChain,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
CallbacksTemplate	extern/libgit2/tests/generate.py	/^    class CallbacksTemplate(Template):$/;"	c	class:Module
CaseSensitive	extern/NamedType/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
Catch	extern/NamedType/catch.hpp	/^namespace Catch {$/;"	n
Catch	extern/OpenXLSX/tests/catch/CMakeLists.txt	/^add_library(Catch INTERFACE)$/;"	t
Catch	extern/OpenXLSX/tests/catch/catch.hpp	/^namespace Catch {$/;"	n
Catch	extern/OpenXLSX/tests/catch/catch.hpp	/^namespace Catch{$/;"	n
Catch	extern/OpenXLSX/tests/catch/catch_reporter_automake.hpp	/^namespace Catch {$/;"	n
Catch	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^namespace Catch {$/;"	n
Catch	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^namespace Catch {$/;"	n
Catch2 is released!	extern/OpenXLSX/tests/catch/README.md	/^## Catch2 is released!$/;"	s
Catch_global_namespace_dummy	extern/OpenXLSX/tests/catch/catch.hpp	/^struct Catch_global_namespace_dummy {};$/;"	s
Category	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Category,$/;"	e	enum:OpenXLSX::XLProperty
Cell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellRange_Impl.cpp	/^Impl::XLCell* Impl::XLCellRange::Cell(unsigned long row, unsigned int column) {$/;"	f	class:Impl::XLCellRange	typeref:typename:Impl::XLCell *
Cell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellRange_Impl.cpp	/^const Impl::XLCell* Impl::XLCellRange::Cell(unsigned long row, unsigned int column) const {$/;"	f	class:Impl::XLCellRange	typeref:typename:const Impl::XLCell *
Cell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^Impl::XLCell* Impl::XLCellValue::Cell() {$/;"	f	class:Impl::XLCellValue	typeref:typename:Impl::XLCell *
Cell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^const Impl::XLCell* Impl::XLCellValue::Cell() const {$/;"	f	class:Impl::XLCellValue	typeref:typename:const Impl::XLCell *
Cell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^Impl::XLCell* Impl::XLRow::Cell(unsigned int column) {$/;"	f	class:Impl::XLRow	typeref:typename:Impl::XLCell *
Cell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^const Impl::XLCell* Impl::XLRow::Cell(unsigned int column) const {$/;"	f	class:Impl::XLRow	typeref:typename:const Impl::XLCell *
Cell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^Impl::XLCell* Impl::XLWorksheet::Cell(const XLCellReference& ref) {$/;"	f	class:Impl::XLWorksheet	typeref:typename:Impl::XLCell *
Cell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^Impl::XLCell* Impl::XLWorksheet::Cell(const std::string& address) {$/;"	f	class:Impl::XLWorksheet	typeref:typename:Impl::XLCell *
Cell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^Impl::XLCell* Impl::XLWorksheet::Cell(unsigned long rowNumber, unsigned int columnNumber) {$/;"	f	class:Impl::XLWorksheet	typeref:typename:Impl::XLCell *
Cell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const Impl::XLCell* Impl::XLWorksheet::Cell(const XLCellReference& ref) const {$/;"	f	class:Impl::XLWorksheet	typeref:typename:const Impl::XLCell *
Cell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const Impl::XLCell* Impl::XLWorksheet::Cell(const std::string& address) const {$/;"	f	class:Impl::XLWorksheet	typeref:typename:const Impl::XLCell *
Cell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const Impl::XLCell* Impl::XLWorksheet::Cell(unsigned long rowNumber, unsigned int columnNumber) /;"	f	class:Impl::XLWorksheet	typeref:typename:const Impl::XLCell *
Cell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^XLCell XLCellRange::Cell(unsigned long row, unsigned int column) {$/;"	f	class:XLCellRange	typeref:typename:XLCell
Cell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^const XLCell XLCellRange::Cell(unsigned long row, unsigned int column) const {$/;"	f	class:XLCellRange	typeref:typename:const XLCell
Cell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLRow.cpp	/^XLCell XLRow::Cell(unsigned int column) {$/;"	f	class:XLRow	typeref:typename:XLCell
Cell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLRow.cpp	/^const XLCell XLRow::Cell(unsigned int column) const {$/;"	f	class:XLRow	typeref:typename:const XLCell
Cell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^XLCell XLWorksheet::Cell(const XLCellReference& ref) {$/;"	f	class:XLWorksheet	typeref:typename:XLCell
Cell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^XLCell XLWorksheet::Cell(const std::string& address) {$/;"	f	class:XLWorksheet	typeref:typename:XLCell
Cell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^XLCell XLWorksheet::Cell(unsigned long rowNumber, unsigned int columnNumber) {$/;"	f	class:XLWorksheet	typeref:typename:XLCell
Cell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^const XLCell XLWorksheet::Cell(const XLCellReference& ref) const {$/;"	f	class:XLWorksheet	typeref:typename:const XLCell
Cell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^const XLCell XLWorksheet::Cell(const std::string& address) const {$/;"	f	class:XLWorksheet	typeref:typename:const XLCell
Cell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^const XLCell XLWorksheet::Cell(unsigned long rowNumber, unsigned int columnNumber) const {$/;"	f	class:XLWorksheet	typeref:typename:const XLCell
CellCount	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^unsigned int Impl::XLRow::CellCount() const {$/;"	f	class:Impl::XLRow	typeref:typename:unsigned int
CellCount	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLRow.cpp	/^unsigned int XLRow::CellCount() const {$/;"	f	class:XLRow	typeref:typename:unsigned int
CellNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^XMLNode Impl::XLCell::CellNode() {$/;"	f	class:Impl::XLCell	typeref:typename:XMLNode
CellNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^const XMLNode Impl::XLCell::CellNode() const {$/;"	f	class:Impl::XLCell	typeref:typename:const XMLNode
CellReference	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^const Impl::XLCellReference* Impl::XLCell::CellReference() const {$/;"	f	class:Impl::XLCell	typeref:typename:const Impl::XLCellReference *
CellReference	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCell.cpp	/^const XLCellReference XLCell::CellReference() const {$/;"	f	class:XLCell	typeref:typename:const XLCellReference
CellType	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^Impl::XLCellType Impl::XLCellValue::CellType() const {$/;"	f	class:Impl::XLCellValue	typeref:typename:Impl::XLCellType
Changes or improvements	extern/libgit2/docs/changelog.md	/^### Changes or improvements$/;"	S
Chart	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Chart,$/;"	e	enum:OpenXLSX::Impl::XLContentType
Chart	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Chart,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
ChartColorStyle	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        ChartColorStyle,$/;"	e	enum:OpenXLSX::Impl::XLContentType
ChartColorStyle	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        ChartColorStyle,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
ChartSheet	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        ChartSheet,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
ChartSheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        WorkSheet, ChartSheet, DialogSheet, MacroSheet$/;"	e	enum:OpenXLSX::XLSheetType
ChartStyle	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        ChartStyle,$/;"	e	enum:OpenXLSX::Impl::XLContentType
ChartStyle	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        ChartStyle,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
Chartsheet	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Chartsheet,$/;"	e	enum:OpenXLSX::Impl::XLContentType
Chartsheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^Impl::XLChartsheet* Impl::XLWorkbook::Chartsheet(const std::string& sheetName) {$/;"	f	class:Impl::XLWorkbook	typeref:typename:Impl::XLChartsheet *
Chartsheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^const Impl::XLChartsheet* Impl::XLWorkbook::Chartsheet(const std::string& sheetName) const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:const Impl::XLChartsheet *
Chartsheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^XLChartsheet XLWorkbook::Chartsheet(const std::string& sheetName) {$/;"	f	class:XLWorkbook	typeref:typename:XLChartsheet
Chartsheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^const XLChartsheet XLWorkbook::Chartsheet(const std::string& sheetName) const {$/;"	f	class:XLWorkbook	typeref:typename:const XLChartsheet
ChartsheetCount	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^unsigned int Impl::XLWorkbook::ChartsheetCount() const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:unsigned int
ChartsheetCount	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^unsigned int XLWorkbook::ChartsheetCount() const {$/;"	f	class:XLWorkbook	typeref:typename:unsigned int
ChartsheetExists	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^bool Impl::XLWorkbook::ChartsheetExists(const std::string& sheetName) const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:bool
ChartsheetExists	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^bool XLWorkbook::ChartsheetExists(const std::string& sheetName) const {$/;"	f	class:XLWorkbook	typeref:typename:bool
ChartsheetNames	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^std::vector<std::string> Impl::XLWorkbook::ChartsheetNames() const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:std::vector<std::string>
ChartsheetNames	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^std::vector<std::string> XLWorkbook::ChartsheetNames() const {$/;"	f	class:XLWorkbook	typeref:typename:std::vector<std::string>
Checkout From 3 Iterators (2 not workdir, 1 workdir)	extern/libgit2/docs/checkout-internals.md	/^Checkout From 3 Iterators (2 not workdir, 1 workdir)$/;"	s
Checkout Internals	extern/libgit2/docs/checkout-internals.md	/^Checkout Internals$/;"	c
Choice	extern/NamedType/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Clear	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellRange_Impl.cpp	/^void Impl::XLCellRange::Clear() {$/;"	f	class:Impl::XLCellRange	typeref:typename:void
Clear	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^void Impl::XLCellValue::Clear() {$/;"	f	class:Impl::XLCellValue	typeref:typename:void
Clear	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^void XLCellRange::Clear() {$/;"	f	class:XLCellRange	typeref:typename:void
Clear	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^void XLCellValue::Clear() {$/;"	f	class:XLCellValue	typeref:typename:void
ClearString	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSharedStrings_Impl.cpp	/^void Impl::XLSharedStrings::ClearString(int index) {$/;"	f	class:Impl::XLSharedStrings	typeref:typename:void
Clone	extern/OpenXLSX/library/openxlsx/implementation/sources/XLChartsheet_Impl.cpp	/^Impl::XLSheet* Impl::XLChartsheet::Clone(const std::string& newName) {$/;"	f	class:Impl::XLChartsheet	typeref:typename:Impl::XLSheet *
Clone	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^Impl::XLWorksheet* Impl::XLWorksheet::Clone(const std::string& newName) {$/;"	f	class:Impl::XLWorksheet	typeref:typename:Impl::XLWorksheet *
CloneWorksheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^void Impl::XLWorkbook::CloneWorksheet(const std::string& extName, const std::string& newName, un/;"	f	class:Impl::XLWorkbook	typeref:typename:void
CloneWorksheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^void XLWorkbook::CloneWorksheet(const std::string& extName, const std::string& newName, unsigned/;"	f	class:XLWorkbook	typeref:typename:void
Close	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        void Close() {$/;"	f	class:Zippy::ZipArchive	typeref:typename:void
CloseDocument	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^void Impl::XLDocument::CloseDocument() {$/;"	f	class:Impl::XLDocument	typeref:typename:void
CloseDocument	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^void XLDocument::CloseDocument() {$/;"	f	class:XLDocument	typeref:typename:void
Code	extern/libgit2/deps/zlib/deflate.h	/^#define Code /;"	d
Code Layout	extern/libgit2/docs/conventions.md	/^## Code Layout$/;"	s
Column	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^unsigned int Impl::XLCellReference::Column() const {$/;"	f	class:Impl::XLCellReference	typeref:typename:unsigned int
Column	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^Impl::XLColumn* Impl::XLWorksheet::Column(unsigned int columnNumber) {$/;"	f	class:Impl::XLWorksheet	typeref:typename:Impl::XLColumn *
Column	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const Impl::XLColumn* Impl::XLWorksheet::Column(unsigned int columnNumber) const {$/;"	f	class:Impl::XLWorksheet	typeref:typename:const Impl::XLColumn *
Column	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellReference.cpp	/^unsigned int XLCellReference::Column() {$/;"	f	class:XLCellReference	typeref:typename:unsigned int
Column	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^XLColumn XLWorksheet::Column(unsigned int columnNumber) {$/;"	f	class:XLWorksheet	typeref:typename:XLColumn
Column	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^const XLColumn XLWorksheet::Column(unsigned int columnNumber) const {$/;"	f	class:XLWorksheet	typeref:typename:const XLColumn
ColumnAsNumber	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^unsigned int Impl::XLCellReference::ColumnAsNumber(const std::string& column) {$/;"	f	class:Impl::XLCellReference	typeref:typename:unsigned int
ColumnAsString	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^std::string Impl::XLCellReference::ColumnAsString(unsigned int column) {$/;"	f	class:Impl::XLCellReference	typeref:typename:std::string
ColumnCount	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^unsigned int Impl::XLWorksheet::ColumnCount() const noexcept {$/;"	f	class:Impl::XLWorksheet	typeref:typename:unsigned int
ColumnCount	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^unsigned int XLWorksheet::ColumnCount() const noexcept {$/;"	f	class:XLWorksheet	typeref:typename:unsigned int
ColumnNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLColumn_Impl.cpp	/^XMLNode Impl::XLColumn::ColumnNode() {$/;"	f	class:Impl::XLColumn	typeref:typename:XMLNode
Columns	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^Impl::XLColumns* Impl::XLWorksheet::Columns() {$/;"	f	class:Impl::XLWorksheet	typeref:typename:Impl::XLColumns *
Columns	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const Impl::XLColumns* Impl::XLWorksheet::Columns() const {$/;"	f	class:Impl::XLWorksheet	typeref:typename:const Impl::XLColumns *
ColumnsNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^XMLNode Impl::XLWorksheet::ColumnsNode() {$/;"	f	class:Impl::XLWorksheet	typeref:typename:XMLNode
ColumnsNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const XMLNode Impl::XLWorksheet::ColumnsNode() const {$/;"	f	class:Impl::XLWorksheet	typeref:typename:const XMLNode
Comment	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            std::string Comment() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:std::string
Comment	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        std::string Comment() const {$/;"	f	class:Zippy::ZipEntry	typeref:typename:std::string
Comment	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        std::string Comment;$/;"	m	struct:Zippy::ZipEntryMetaData	typeref:typename:std::string
Comments	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Comments,$/;"	e	enum:OpenXLSX::Impl::XLContentType
CommitId	git.hpp	/^using CommitId = nt::NamedType<std::string, struct CommIdTag>;$/;"	t	namespace:git	typeref:typename:nt::NamedType<std::string,struct CommIdTag>
Commits	extern/libgit2/tests/resources/typechanges/README.md	/^Commits$/;"	s
Company	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Company,$/;"	e	enum:OpenXLSX::XLProperty
Comparable	extern/NamedType/underlying_functionalities.hpp	/^struct Comparable : crtp<T, Comparable>$/;"	s	namespace:fluent
Comparable	ntskills.hpp	/^template <typename T> struct Comparable : crtp<T, Comparable> {$/;"	s	namespace:nt
Comparator	extern/NamedType/main.cpp	/^using Comparator = fluent::NamedType<Function, struct ComparatorParameter>;$/;"	t	typeref:typename:fluent::NamedType<Function,struct ComparatorParameter>	file:
Compatibility	extern/OpenXLSX/library/zippy/README.md	/^## Compatibility$/;"	s
Compatibility	extern/libgit2/docs/conventions.md	/^## Compatibility$/;"	s
Compiler and linker options	extern/libgit2/README.md	/^Compiler and linker options$/;"	s
CompressedSize	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            uint64_t CompressedSize() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:uint64_t
CompressedSize	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        uint64_t CompressedSize() const {$/;"	f	class:Zippy::ZipEntry	typeref:typename:uint64_t
CompressedSize	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        uint64_t CompressedSize;$/;"	m	struct:Zippy::ZipEntryMetaData	typeref:typename:uint64_t
ContentItem	extern/OpenXLSX/library/openxlsx/implementation/sources/XLContentTypes_Impl.cpp	/^Impl::XLContentItem Impl::XLContentTypes::ContentItem(const std::string& path) {$/;"	f	class:Impl::XLContentTypes	typeref:typename:Impl::XLContentItem
ContentItem	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^Impl::XLContentItem Impl::XLDocument::ContentItem(const std::string& path) {$/;"	f	class:Impl::XLDocument	typeref:typename:Impl::XLContentItem
ContinueOnFailure	extern/OpenXLSX/tests/catch/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
Contributor Covenant Code of Conduct	extern/libgit2/docs/code_of_conduct.md	/^# Contributor Covenant Code of Conduct$/;"	c
ControlProperties	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        ControlProperties,$/;"	e	enum:OpenXLSX::Impl::XLContentType
ControlProperties	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        ControlProperties,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
Conventions	extern/libgit2/README.md	/^Conventions$/;"	c
ConversionFlags	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^} ConversionFlags;$/;"	t	typeref:enum:__anonce5e58f80203	file:
ConversionResult	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^} ConversionResult;$/;"	t	typeref:enum:__anonce5e58f80103	file:
ConvertUTF16toUTF8	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^static ConversionResult ConvertUTF16toUTF8 ($/;"	f	typeref:typename:ConversionResult	file:
ConvertUTF8toUTF16	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^static ConversionResult ConvertUTF8toUTF16 ($/;"	f	typeref:typename:ConversionResult	file:
CoordinatesFromAddress	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^std::pair<unsigned long, unsigned int> Impl::XLCellReference::CoordinatesFromAddress(const std::/;"	f	class:Impl::XLCellReference	typeref:typename:std::pair<unsigned long,unsigned int>
CoreProperties	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        CoreProperties,$/;"	e	enum:OpenXLSX::Impl::XLContentType
CoreProperties	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        CoreProperties,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
CoreProperties	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^Impl::XLCoreProperties* Impl::XLDocument::CoreProperties() {$/;"	f	class:Impl::XLDocument	typeref:typename:Impl::XLCoreProperties *
CoreProperties	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^const Impl::XLCoreProperties* Impl::XLDocument::CoreProperties() const {$/;"	f	class:Impl::XLDocument	typeref:typename:const Impl::XLCoreProperties *
Create	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        void Create(const std::string& fileName) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:void
CreateChartsheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^void Impl::XLWorkbook::CreateChartsheet(const XLRelationshipItem& item) {$/;"	f	class:Impl::XLWorkbook	typeref:typename:void
CreateDocument	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^void Impl::XLDocument::CreateDocument(const std::string& fileName) {$/;"	f	class:Impl::XLDocument	typeref:typename:void
CreateDocument	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^void XLDocument::CreateDocument(const std::string& fileName) {$/;"	f	class:XLDocument	typeref:typename:void
CreateInfo	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            static ZipEntryInfo CreateInfo(const std::string& name) {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:ZipEntryInfo
CreateItem	extern/OpenXLSX/library/openxlsx/implementation/headers/XLDocument_Impl.h	/^        CreateItem(const std::string& target) {$/;"	f	class:OpenXLSX::Impl::XLDocument	typeref:typename:std::enable_if_t<std::is_base_of<XLAbstractXMLFile,T>::value,std::unique_ptr<T>>
CreateTypeAttribute	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^XMLAttribute Impl::XLCellValue::CreateTypeAttribute() {$/;"	f	class:Impl::XLCellValue	typeref:typename:XMLAttribute
CreateValueNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^XMLNode Impl::XLCellValue::CreateValueNode() {$/;"	f	class:Impl::XLCellValue	typeref:typename:XMLNode
CreateValueNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^XMLNode Impl::XLCell::CreateValueNode() {$/;"	f	class:Impl::XLCell	typeref:typename:XMLNode
CreateWorksheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^void Impl::XLWorkbook::CreateWorksheet(const XLRelationshipItem& item, const std::string& xmlDat/;"	f	class:Impl::XLWorkbook	typeref:typename:void
CreationDate	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        CreationDate,$/;"	e	enum:OpenXLSX::XLProperty
Creator	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Creator,$/;"	e	enum:OpenXLSX::XLProperty
Current Status	extern/OpenXLSX/library/zippy/README.md	/^## Current Status$/;"	s
CustomProperties	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        CustomProperties,$/;"	e	enum:OpenXLSX::Impl::XLContentType
CustomProperties	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        CustomProperties,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
D	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef void (* D)(T*);$/;"	t	struct:auto_deleter	typeref:typename:void (*)(T *)	file:
D	extern/libgit2/src/wildmatch.c	/^	D = GIT_DIGIT,$/;"	e	enum:__anon17a406cb0103	file:
D	git.hpp	/^  using D = void (*)(T *);$/;"	t	struct:git::make
DATA_LEN	extern/libgit2/tests/filter/wildcard.c	/^#define DATA_LEN /;"	d	file:
DATE_ISO8601	extern/libgit2/src/date.c	/^	DATE_ISO8601,$/;"	e	enum:__anon6112fc6c0103	file:
DATE_LOCAL	extern/libgit2/src/date.c	/^	DATE_LOCAL,$/;"	e	enum:__anon6112fc6c0103	file:
DATE_NORMAL	extern/libgit2/src/date.c	/^	DATE_NORMAL = 0,$/;"	e	enum:__anon6112fc6c0103	file:
DATE_RAW	extern/libgit2/src/date.c	/^	DATE_RAW$/;"	e	enum:__anon6112fc6c0103	file:
DATE_RELATIVE	extern/libgit2/src/date.c	/^	DATE_RELATIVE,$/;"	e	enum:__anon6112fc6c0103	file:
DATE_RFC2822	extern/libgit2/src/date.c	/^	DATE_RFC2822,$/;"	e	enum:__anon6112fc6c0103	file:
DATE_SHORT	extern/libgit2/src/date.c	/^	DATE_SHORT,$/;"	e	enum:__anon6112fc6c0103	file:
DEBUG_POOL	extern/libgit2/CMakeLists.txt	/^OPTION(DEBUG_POOL			"Enable debug pool allocator"				OFF)$/;"	D
DEFAULT_BREAK_REWRITE_THRESHOLD	extern/libgit2/src/diff_tform.c	/^#define DEFAULT_BREAK_REWRITE_THRESHOLD /;"	d	file:
DEFAULT_BUFSIZE	extern/libgit2/src/common.h	/^#define DEFAULT_BUFSIZE /;"	d
DEFAULT_CONFLICT_MARKER_SIZE	extern/libgit2/src/xdiff/xdiff.h	/^#define DEFAULT_CONFLICT_MARKER_SIZE /;"	d
DEFAULT_CONNECT_TIMEOUT	extern/libgit2/src/transports/winhttp.c	/^#define DEFAULT_CONNECT_TIMEOUT /;"	d	file:
DEFAULT_MAPPED_LIMIT	extern/libgit2/src/mwindow.c	/^#define DEFAULT_MAPPED_LIMIT /;"	d	file:
DEFAULT_NESTING_LEVEL	extern/libgit2/src/refdb_fs.c	/^#define DEFAULT_NESTING_LEVEL	/;"	d	file:
DEFAULT_NESTING_LEVEL	extern/libgit2/src/refs.c	/^#define DEFAULT_NESTING_LEVEL	/;"	d	file:
DEFAULT_PORT_GIT	extern/libgit2/src/net.c	/^#define DEFAULT_PORT_GIT /;"	d	file:
DEFAULT_PORT_HTTP	extern/libgit2/src/net.c	/^#define DEFAULT_PORT_HTTP /;"	d	file:
DEFAULT_PORT_HTTPS	extern/libgit2/src/net.c	/^#define DEFAULT_PORT_HTTPS /;"	d	file:
DEFAULT_PORT_SSH	extern/libgit2/src/net.c	/^#define DEFAULT_PORT_SSH /;"	d	file:
DEFAULT_RENAME_LIMIT	extern/libgit2/src/diff_tform.c	/^#define DEFAULT_RENAME_LIMIT /;"	d	file:
DEFAULT_THRESHOLD	extern/libgit2/src/diff_tform.c	/^#define DEFAULT_THRESHOLD /;"	d	file:
DEFAULT_TREE_SIZE	extern/libgit2/src/tree.c	/^#define DEFAULT_TREE_SIZE /;"	d	file:
DEFAULT_WINDOW_SIZE	extern/libgit2/src/mwindow.c	/^#define DEFAULT_WINDOW_SIZE /;"	d	file:
DEFINE_COMPILER	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define DEFINE_COMPILER /;"	d	file:
DEFLATE_H	extern/libgit2/deps/zlib/deflate.h	/^#define DEFLATE_H$/;"	d
DEF_MEM_LEVEL	extern/libgit2/deps/zlib/gzguts.h	/^#  define DEF_MEM_LEVEL /;"	d
DEF_MEM_LEVEL	extern/libgit2/deps/zlib/zutil.h	/^#  define DEF_MEM_LEVEL /;"	d
DEF_WBITS	extern/libgit2/deps/zlib/zutil.h	/^#  define DEF_WBITS /;"	d
DELETE_IN_MAP	extern/libgit2/src/index.c	/^#define DELETE_IN_MAP(/;"	d	file:
DELETE_RENAME_COMMIT	extern/libgit2/tests/diff/rename.c	/^#define DELETE_RENAME_COMMIT /;"	d	file:
DELTA_HEADER_BUFFER_LEN	extern/libgit2/src/delta.c	/^#define DELTA_HEADER_BUFFER_LEN /;"	d	file:
DEPRECATE_HARD	extern/libgit2/CMakeLists.txt	/^OPTION(DEPRECATE_HARD			"Do not include deprecated functions in the library"	OFF)$/;"	D
DESTROY_REGISTERS	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define DESTROY_REGISTERS /;"	d	file:
DF_SIDE1_BRANCH	extern/libgit2/tests/merge/trees/modeconflict.c	/^#define DF_SIDE1_BRANCH	/;"	d	file:
DF_SIDE2_BRANCH	extern/libgit2/tests/merge/trees/modeconflict.c	/^#define DF_SIDE2_BRANCH	/;"	d	file:
DICT	extern/libgit2/deps/zlib/inflate.h	/^    DICT,       \/* waiting for inflateSetDictionary() call *\/$/;"	e	enum:__anon92f8b1ba0103
DICTID	extern/libgit2/deps/zlib/inflate.h	/^    DICTID,     \/* i: waiting for dictionary check value *\/$/;"	e	enum:__anon92f8b1ba0103
DIFF_ADD_FILE	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_ADD_FILE /;"	d
DIFF_DELETE_AND_READD_FILE	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_DELETE_AND_READD_FILE /;"	d
DIFF_DELETE_FILE	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_DELETE_FILE /;"	d
DIFF_DRIVER_AUTO	extern/libgit2/src/diff_driver.c	/^	DIFF_DRIVER_AUTO = 0,$/;"	e	enum:__anon6fb9a4920103	file:
DIFF_DRIVER_BINARY	extern/libgit2/src/diff_driver.c	/^	DIFF_DRIVER_BINARY = 1,$/;"	e	enum:__anon6fb9a4920103	file:
DIFF_DRIVER_PATTERNLIST	extern/libgit2/src/diff_driver.c	/^	DIFF_DRIVER_PATTERNLIST = 3,$/;"	e	enum:__anon6fb9a4920103	file:
DIFF_DRIVER_TEXT	extern/libgit2/src/diff_driver.c	/^	DIFF_DRIVER_TEXT = 2,$/;"	e	enum:__anon6fb9a4920103	file:
DIFF_EXECUTABLE_FILE	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_EXECUTABLE_FILE /;"	d
DIFF_FLAGS_KNOWN_BINARY	extern/libgit2/src/diff_generate.h	/^#define DIFF_FLAGS_KNOWN_BINARY /;"	d
DIFF_FLAGS_NOT_BINARY	extern/libgit2/src/diff_generate.h	/^#define DIFF_FLAGS_NOT_BINARY /;"	d
DIFF_FLAG_ISNT_SET	extern/libgit2/src/diff_generate.c	/^#define DIFF_FLAG_ISNT_SET(/;"	d	file:
DIFF_FLAG_IS_SET	extern/libgit2/src/diff_generate.c	/^#define DIFF_FLAG_IS_SET(/;"	d	file:
DIFF_FLAG_SET	extern/libgit2/src/diff_generate.c	/^#define DIFF_FLAG_SET(/;"	d	file:
DIFF_MANY_CHANGES_ONE	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_MANY_CHANGES_ONE /;"	d
DIFF_MANY_CHANGES_TWO	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_MANY_CHANGES_TWO /;"	d
DIFF_MAX_FILESIZE	extern/libgit2/src/diff_file.c	/^#define DIFF_MAX_FILESIZE /;"	d	file:
DIFF_MODIFY_TWO_FILES	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_MODIFY_TWO_FILES /;"	d
DIFF_NEW_PREFIX_DEFAULT	extern/libgit2/src/diff.h	/^#define DIFF_NEW_PREFIX_DEFAULT /;"	d
DIFF_OLD_PREFIX_DEFAULT	extern/libgit2/src/diff.h	/^#define DIFF_OLD_PREFIX_DEFAULT /;"	d
DIFF_OPTS	extern/libgit2/tests/diff/tree.c	/^#define DIFF_OPTS(/;"	d	file:
DIFF_REMOVE_FILE_TWICE	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_REMOVE_FILE_TWICE /;"	d
DIFF_RENAME_1_TO_2	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_RENAME_1_TO_2 /;"	d
DIFF_RENAME_2_TO_1	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_RENAME_2_TO_1 /;"	d
DIFF_RENAME_AFTER_MODIFY	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_RENAME_AFTER_MODIFY /;"	d
DIFF_RENAME_AFTER_MODIFY_TARGET_PATH	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_RENAME_AFTER_MODIFY_TARGET_PATH /;"	d
DIFF_RENAME_AND_MODIFY_DELTAS	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_RENAME_AND_MODIFY_DELTAS /;"	d
DIFF_RENAME_AND_MODIFY_FILE	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_RENAME_AND_MODIFY_FILE /;"	d
DIFF_RENAME_AND_MODIFY_SOURCE_PATH	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_RENAME_AND_MODIFY_SOURCE_PATH /;"	d
DIFF_RENAME_A_TO_B_TO_C	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_RENAME_A_TO_B_TO_C /;"	d
DIFF_RENAME_A_TO_B_TO_C_EXACT	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_RENAME_A_TO_B_TO_C_EXACT /;"	d
DIFF_RENAME_CIRCULAR	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_RENAME_CIRCULAR /;"	d
DIFF_RENAME_FILE	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_RENAME_FILE /;"	d
DIFF_RENAME_FILE_SEPARATOR	extern/libgit2/src/diff_stats.c	/^#define DIFF_RENAME_FILE_SEPARATOR /;"	d	file:
DIFF_TWO_DELTAS_ONE_FILE	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_TWO_DELTAS_ONE_FILE /;"	d
DIFF_TWO_DELTAS_ONE_NEW_FILE	extern/libgit2/tests/apply/apply_helpers.h	/^#define DIFF_TWO_DELTAS_ONE_NEW_FILE /;"	d
DIR	extern/libgit2/src/win32/dir.h	/^#	define DIR /;"	d
DISABLE_WARNINGS	extern/libgit2/cmake/Modules/EnableWarnings.cmake	/^MACRO(DISABLE_WARNINGS flag)$/;"	m
DISCOVER_FOLDER	extern/libgit2/tests/repo/discover.c	/^#define DISCOVER_FOLDER /;"	d	file:
DIST	extern/libgit2/deps/zlib/inflate.h	/^            DIST,       \/* i: waiting for distance code *\/$/;"	e	enum:__anon92f8b1ba0103
DISTEXT	extern/libgit2/deps/zlib/inflate.h	/^            DISTEXT,    \/* i: waiting for distance extra bits *\/$/;"	e	enum:__anon92f8b1ba0103
DISTS	extern/libgit2/deps/zlib/inftrees.h	/^    DISTS$/;"	e	enum:__anon807a30970203
DIST_CODE_LEN	extern/libgit2/deps/zlib/trees.c	/^#define DIST_CODE_LEN /;"	d	file:
DO1	extern/libgit2/deps/zlib/adler32.c	/^#define DO1(/;"	d	file:
DO1	extern/libgit2/deps/zlib/crc32.c	/^#define DO1 /;"	d	file:
DO16	extern/libgit2/deps/zlib/adler32.c	/^#define DO16(/;"	d	file:
DO2	extern/libgit2/deps/zlib/adler32.c	/^#define DO2(/;"	d	file:
DO4	extern/libgit2/deps/zlib/adler32.c	/^#define DO4(/;"	d	file:
DO8	extern/libgit2/deps/zlib/adler32.c	/^#define DO8(/;"	d	file:
DO8	extern/libgit2/deps/zlib/crc32.c	/^#define DO8 /;"	d	file:
DOBIG32	extern/libgit2/deps/zlib/crc32.c	/^#define DOBIG32 /;"	d	file:
DOBIG4	extern/libgit2/deps/zlib/crc32.c	/^#define DOBIG4 /;"	d	file:
DOLIT32	extern/libgit2/deps/zlib/crc32.c	/^#define DOLIT32 /;"	d	file:
DOLIT4	extern/libgit2/deps/zlib/crc32.c	/^#define DOLIT4 /;"	d	file:
DONE	extern/libgit2/deps/zlib/inflate.h	/^    DONE,       \/* finished check, done -- remain here until reset *\/$/;"	e	enum:__anon92f8b1ba0103
DOSTORESTATE58	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^#define DOSTORESTATE58$/;"	d
DOSTORESTATE65	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^#define DOSTORESTATE65$/;"	d
DOT_GIT	extern/libgit2/src/repository.h	/^#define DOT_GIT /;"	d
DOXYGEN_IN	extern/OpenXLSX/doxy/CMakeLists.txt	/^    set(DOXYGEN_IN ${CMAKE_CURRENT_LIST_DIR}\/Doxyfile.in)$/;"	v
DOXYGEN_OUT	extern/OpenXLSX/doxy/CMakeLists.txt	/^    set(DOXYGEN_OUT ${CMAKE_CURRENT_BINARY_DIR}\/Doxyfile)$/;"	v
DOXYGEN_QUIET	extern/OpenXLSX/doxy/CMakeLists.txt	/^    set(DOXYGEN_QUIET YES)$/;"	v
DOXYGEN_SOURCE	extern/OpenXLSX/doxy/CMakeLists.txt	/^    set(DOXYGEN_SOURCE ${CMAKE_CURRENT_LIST_DIR}\/..\/library\/openxlsx\/interfaces)$/;"	v
DO_LOCAL_TEST	extern/libgit2/tests/fetchhead/nonetwork.c	/^#define DO_LOCAL_TEST /;"	d	file:
DPRINTF	extern/libgit2/deps/pcre/pcre_internal.h	/^#define DPRINTF(/;"	d
DROPBITS	extern/libgit2/deps/zlib/infback.c	/^#define DROPBITS(/;"	d	file:
DROPBITS	extern/libgit2/deps/zlib/inflate.c	/^#define DROPBITS(/;"	d	file:
DVMASKSIZE	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^#define DVMASKSIZE /;"	d
DV_II_45_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_45_0_bit 	= (uint32_t)(1) << 16;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_46_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_46_0_bit 	= (uint32_t)(1) << 17;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_46_2_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_46_2_bit 	= (uint32_t)(1) << 18;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_47_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_47_0_bit 	= (uint32_t)(1) << 19;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_48_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_48_0_bit 	= (uint32_t)(1) << 20;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_49_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_49_0_bit 	= (uint32_t)(1) << 21;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_49_2_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_49_2_bit 	= (uint32_t)(1) << 22;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_50_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_50_0_bit 	= (uint32_t)(1) << 23;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_50_2_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_50_2_bit 	= (uint32_t)(1) << 24;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_51_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_51_0_bit 	= (uint32_t)(1) << 25;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_51_2_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_51_2_bit 	= (uint32_t)(1) << 26;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_52_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_52_0_bit 	= (uint32_t)(1) << 27;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_53_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_53_0_bit 	= (uint32_t)(1) << 28;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_54_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_54_0_bit 	= (uint32_t)(1) << 29;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_55_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_55_0_bit 	= (uint32_t)(1) << 30;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_56_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_II_56_0_bit 	= (uint32_t)(1) << 31;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_43_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_43_0_bit 	= (uint32_t)(1) << 0;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_44_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_44_0_bit 	= (uint32_t)(1) << 1;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_45_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_45_0_bit 	= (uint32_t)(1) << 2;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_46_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_46_0_bit 	= (uint32_t)(1) << 3;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_46_2_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_46_2_bit 	= (uint32_t)(1) << 4;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_47_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_47_0_bit 	= (uint32_t)(1) << 5;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_47_2_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_47_2_bit 	= (uint32_t)(1) << 6;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_48_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_48_0_bit 	= (uint32_t)(1) << 7;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_48_2_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_48_2_bit 	= (uint32_t)(1) << 8;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_49_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_49_0_bit 	= (uint32_t)(1) << 9;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_49_2_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_49_2_bit 	= (uint32_t)(1) << 10;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_50_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_50_0_bit 	= (uint32_t)(1) << 11;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_50_2_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_50_2_bit 	= (uint32_t)(1) << 12;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_51_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_51_0_bit 	= (uint32_t)(1) << 13;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_51_2_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_51_2_bit 	= (uint32_t)(1) << 14;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_52_0_bit	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^static const uint32_t DV_I_52_0_bit 	= (uint32_t)(1) << 15;$/;"	v	typeref:typename:const uint32_t	file:
DWORD_MAX	extern/libgit2/src/transports/winhttp.c	/^# define DWORD_MAX /;"	d	file:
DYNAMIC_CRC_TABLE	extern/libgit2/deps/zlib/crc32.c	/^#    define DYNAMIC_CRC_TABLE$/;"	d	file:
DYN_TREES	extern/libgit2/deps/zlib/zutil.h	/^#define DYN_TREES /;"	d
D_CODES	extern/libgit2/deps/zlib/deflate.h	/^#define D_CODES /;"	d
Dad	extern/libgit2/deps/zlib/deflate.h	/^#define Dad /;"	d
DataBuffer	extern/libgit2/src/win32/reparse.h	/^			UCHAR DataBuffer[1];$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470408	typeref:typename:UCHAR[1]
DeclarationTemplate	extern/libgit2/tests/generate.py	/^    class DeclarationTemplate(Template):$/;"	c	class:Module
DeleteContentItem	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^void Impl::XLDocument::DeleteContentItem(Impl::XLContentItem& item) {$/;"	f	class:Impl::XLDocument	typeref:typename:void
DeleteEntry	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        void DeleteEntry(const std::string& name) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:void
DeleteHeadingPair	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^void Impl::XLAppProperties::DeleteHeadingPair(const string& name) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:void
DeleteNamedRanges	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^void Impl::XLWorkbook::DeleteNamedRanges() {$/;"	f	class:Impl::XLWorkbook	typeref:typename:void
DeleteNamedRanges	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^void XLWorkbook::DeleteNamedRanges() {$/;"	f	class:XLWorkbook	typeref:typename:void
DeleteOverride	extern/OpenXLSX/library/openxlsx/implementation/sources/XLContentTypes_Impl.cpp	/^void Impl::XLContentTypes::DeleteOverride(XLContentItem& item) {$/;"	f	class:Impl::XLContentTypes	typeref:typename:void
DeleteProperty	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^void Impl::XLAppProperties::DeleteProperty(const string& name) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:void
DeleteProperty	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCoreProperties_Impl.cpp	/^void Impl::XLCoreProperties::DeleteProperty(const std::string& name) {$/;"	f	class:Impl::XLCoreProperties	typeref:typename:void
DeleteProperty	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^void Impl::XLDocument::DeleteProperty(XLProperty theProperty) {$/;"	f	class:Impl::XLDocument	typeref:typename:void
DeleteProperty	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^void XLDocument::DeleteProperty(XLProperty theProperty) {$/;"	f	class:XLDocument	typeref:typename:void
DeleteRelationship	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^void Impl::XLRelationships::DeleteRelationship(Impl::XLRelationshipItem& item) {$/;"	f	class:Impl::XLRelationships	typeref:typename:void
DeleteSheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^void Impl::XLWorkbook::DeleteSheet(const std::string& sheetName) {$/;"	f	class:Impl::XLWorkbook	typeref:typename:void
DeleteSheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^void XLWorkbook::DeleteSheet(const std::string& sheetName) {$/;"	f	class:XLWorkbook	typeref:typename:void
DeleteSheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^void Impl::XLAppProperties::DeleteSheetName(const string& title) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:void
DeleteTypeAttribute	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^void Impl::XLCellValue::DeleteTypeAttribute() {$/;"	f	class:Impl::XLCellValue	typeref:typename:void
DeleteTypeAttribute	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^void Impl::XLCell::DeleteTypeAttribute() {$/;"	f	class:Impl::XLCell	typeref:typename:void
DeleteValueNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^void Impl::XLCellValue::DeleteValueNode() {$/;"	f	class:Impl::XLCellValue	typeref:typename:void
DeleteXMLData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAbstractXMLFile_Impl.cpp	/^void Impl::XLAbstractXMLFile::DeleteXMLData() {$/;"	f	class:Impl::XLAbstractXMLFile	typeref:typename:void
DeleteXMLFile	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^void Impl::XLDocument::DeleteXMLFile(const std::string& path) {$/;"	f	class:Impl::XLDocument	typeref:typename:void
Demo1	extern/OpenXLSX/examples/c++/CMakeLists.txt	/^add_executable(Demo1 Demo1.cpp)$/;"	t
Demo2	extern/OpenXLSX/examples/c++/CMakeLists.txt	/^add_executable(Demo2 Demo2.cpp)$/;"	t
Descent	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^float Impl::XLRow::Descent() const {$/;"	f	class:Impl::XLRow	typeref:typename:float
Descent	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLRow.cpp	/^float XLRow::Descent() const {$/;"	f	class:XLRow	typeref:typename:float
Description	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Description,$/;"	e	enum:OpenXLSX::XLProperty
Detail	extern/NamedType/catch.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	extern/OpenXLSX/tests/catch/catch.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
DetermineNumberType	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^Impl::XLNumberType Impl::XLCellValue::DetermineNumberType(const string& numberString) const {$/;"	f	class:Impl::XLCellValue	typeref:typename:Impl::XLNumberType
Deviations from the standard	extern/libgit2/docs/error-handling.md	/^Deviations from the standard$/;"	s
DialogSheet	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        DialogSheet,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
DialogSheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        WorkSheet, ChartSheet, DialogSheet, MacroSheet$/;"	e	enum:OpenXLSX::XLSheetType
DidntThrowException	extern/OpenXLSX/tests/catch/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
Diff with 2 non-workdir iterators	extern/libgit2/docs/checkout-internals.md	/^Diff with 2 non-workdir iterators$/;"	s
Diff with non-work & workdir iterators	extern/libgit2/docs/checkout-internals.md	/^Diff with non-work & workdir iterators$/;"	s
Differences from Git	extern/libgit2/docs/differences-from-git.md	/^# Differences from Git$/;"	c
DimensionNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^XMLNode Impl::XLWorksheet::DimensionNode() {$/;"	f	class:Impl::XLWorksheet	typeref:typename:XMLNode
DimensionNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const XMLNode Impl::XLWorksheet::DimensionNode() const {$/;"	f	class:Impl::XLWorksheet	typeref:typename:const XMLNode
Discussion & Chat	extern/libgit2/docs/contributing.md	/^## Discussion & Chat$/;"	s
DllMain	extern/libgit2/src/global.c	/^BOOL WINAPI DllMain(HINSTANCE hInstDll, DWORD fdwReason, LPVOID lpvReserved)$/;"	f	typeref:typename:BOOL WINAPI
DocSecurity	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        DocSecurity,$/;"	e	enum:OpenXLSX::XLProperty
Document	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^Impl::XLDocument* Impl::XLWorkbook::Document() {$/;"	f	class:Impl::XLWorkbook	typeref:typename:Impl::XLDocument *
Document	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^const Impl::XLDocument* Impl::XLWorkbook::Document() const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:const Impl::XLDocument *
DocumentName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^const string& Impl::XLDocument::DocumentName() const {$/;"	f	class:Impl::XLDocument	typeref:typename:const string &
DocumentName	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^const std::string& XLDocument::DocumentName() const {$/;"	f	class:XLDocument	typeref:typename:const std::string &
DocumentPath	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^const string& Impl::XLDocument::DocumentPath() const {$/;"	f	class:Impl::XLDocument	typeref:typename:const string &
DocumentPath	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^const std::string& XLDocument::DocumentPath() const {$/;"	f	class:XLDocument	typeref:typename:const std::string &
Documentation	extern/OpenXLSX/doxy/CMakeLists.txt	/^    add_custom_target(Documentation ALL$/;"	t
Documentation	extern/OpenXLSX/library/pugixml/README.md	/^## Documentation$/;"	s
Documentation	extern/libgit2/docs/conventions.md	/^## Documentation$/;"	s
Drawing	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Drawing,$/;"	e	enum:OpenXLSX::Impl::XLContentType
Drawing	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Drawing,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
EAFNOSUPPORT	extern/libgit2/src/posix.h	/^#define EAFNOSUPPORT /;"	d
EDITLINE_FOUND	extern/libgit2/deps/pcre/cmake/FindEditline.cmake	/^  set(EDITLINE_FOUND TRUE)$/;"	v
ELEM_AT	extern/libgit2/deps/http-parser/http_parser.c	/^# define ELEM_AT(/;"	d	file:
ELSEWHERE	extern/libgit2/tests/object/blob/write.c	/^#define ELSEWHERE /;"	d	file:
EMBED_SSH_PATH	extern/libgit2/CMakeLists.txt	/^	OPTION(EMBED_SSH_PATH		"Path to libssh2 to embed (Windows)"			OFF)$/;"	D
EMPTY_HASH	extern/libgit2/tests/odb/backend/simple.c	/^#define EMPTY_HASH /;"	d	file:
EMPTY_TREE	extern/libgit2/tests/stash/save.c	/^#define EMPTY_TREE /;"	d	file:
ENABLE_REPRODUCIBLE_BUILDS	extern/libgit2/CMakeLists.txt	/^	OPTION(ENABLE_REPRODUCIBLE_BUILDS "Enable reproducible builds"				OFF)$/;"	D
ENABLE_TRACE	extern/libgit2/CMakeLists.txt	/^OPTION(ENABLE_TRACE			"Enables tracing support"				OFF)$/;"	D
ENABLE_WARNINGS	extern/libgit2/cmake/Modules/EnableWarnings.cmake	/^MACRO(ENABLE_WARNINGS flag)$/;"	m
ENABLE_WERROR	extern/libgit2/CMakeLists.txt	/^OPTION(ENABLE_WERROR			"Enable compilation with -Werror"			OFF)$/;"	D
END_BLOCK	extern/libgit2/deps/zlib/trees.c	/^#define END_BLOCK /;"	d	file:
END_FILE	extern/libgit2/src/rebase.c	/^#define END_FILE /;"	d	file:
END_OF_FILE_PENALTY	extern/libgit2/src/xdiff/xdiffi.c	/^#define END_OF_FILE_PENALTY /;"	d	file:
ENOUGH	extern/libgit2/deps/zlib/inftrees.h	/^#define ENOUGH /;"	d
ENOUGH_DISTS	extern/libgit2/deps/zlib/inftrees.h	/^#define ENOUGH_DISTS /;"	d
ENOUGH_LENS	extern/libgit2/deps/zlib/inftrees.h	/^#define ENOUGH_LENS /;"	d
ENSURE_BUF_OK	extern/libgit2/src/filebuf.c	/^#define ENSURE_BUF_OK(/;"	d	file:
ENSURE_SIZE	extern/libgit2/src/buffer.c	/^#define ENSURE_SIZE(/;"	d	file:
EOF	extern/libgit2/azure-pipelines/test.sh	/^	cat >"${SSHD_DIR}\/sshd_config" <<-EOF$/;"	h
EQUAL	extern/libgit2/deps/zlib/deflate.c	/^#define EQUAL /;"	d	file:
ERR0	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anonb814e4160303
ERR1	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anonb814e4160303
ERR10	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anonb814e4160303
ERR11	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anonb814e4160303
ERR12	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anonb814e4160303
ERR13	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anonb814e4160303
ERR14	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anonb814e4160303
ERR15	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anonb814e4160303
ERR16	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anonb814e4160303
ERR17	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anonb814e4160303
ERR18	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anonb814e4160303
ERR19	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anonb814e4160303
ERR2	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anonb814e4160303
ERR20	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anonb814e4160303
ERR21	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anonb814e4160303
ERR22	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anonb814e4160303
ERR23	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anonb814e4160303
ERR24	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anonb814e4160303
ERR25	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anonb814e4160303
ERR26	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anonb814e4160303
ERR27	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anonb814e4160303
ERR28	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anonb814e4160303
ERR29	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anonb814e4160303
ERR3	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anonb814e4160303
ERR30	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anonb814e4160303
ERR31	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anonb814e4160303
ERR32	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anonb814e4160303
ERR33	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anonb814e4160303
ERR34	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anonb814e4160303
ERR35	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anonb814e4160303
ERR36	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anonb814e4160303
ERR37	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anonb814e4160303
ERR38	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anonb814e4160303
ERR39	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anonb814e4160303
ERR4	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anonb814e4160303
ERR40	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anonb814e4160303
ERR41	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anonb814e4160303
ERR42	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anonb814e4160303
ERR43	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anonb814e4160303
ERR44	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anonb814e4160303
ERR45	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anonb814e4160303
ERR46	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anonb814e4160303
ERR47	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anonb814e4160303
ERR48	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anonb814e4160303
ERR49	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anonb814e4160303
ERR5	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anonb814e4160303
ERR50	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anonb814e4160303
ERR51	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anonb814e4160303
ERR52	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anonb814e4160303
ERR53	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anonb814e4160303
ERR54	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anonb814e4160303
ERR55	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anonb814e4160303
ERR56	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anonb814e4160303
ERR57	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anonb814e4160303
ERR58	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anonb814e4160303
ERR59	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anonb814e4160303
ERR6	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anonb814e4160303
ERR60	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anonb814e4160303
ERR61	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anonb814e4160303
ERR62	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anonb814e4160303
ERR63	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anonb814e4160303
ERR64	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anonb814e4160303
ERR65	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anonb814e4160303
ERR66	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anonb814e4160303
ERR67	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anonb814e4160303
ERR68	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anonb814e4160303
ERR69	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anonb814e4160303
ERR7	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anonb814e4160303
ERR70	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anonb814e4160303
ERR71	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anonb814e4160303
ERR72	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anonb814e4160303
ERR73	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anonb814e4160303
ERR74	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anonb814e4160303
ERR75	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anonb814e4160303
ERR76	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anonb814e4160303
ERR77	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anonb814e4160303
ERR78	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anonb814e4160303
ERR79	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anonb814e4160303
ERR8	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anonb814e4160303
ERR80	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anonb814e4160303
ERR81	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anonb814e4160303
ERR82	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anonb814e4160303
ERR83	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anonb814e4160303
ERR84	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anonb814e4160303
ERR85	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anonb814e4160303
ERR86	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anonb814e4160303
ERR87	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anonb814e4160303
ERR9	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anonb814e4160303
ERRCOUNT	extern/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anonb814e4160303
ERROR_MSG	extern/libgit2/src/reset.c	/^#define ERROR_MSG /;"	d	file:
ERROR_WINHTTP_AUTODETECTION_FAILED	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_AUTODETECTION_FAILED /;"	d
ERROR_WINHTTP_AUTO_PROXY_SERVICE_ERROR	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_AUTO_PROXY_SERVICE_ERROR /;"	d
ERROR_WINHTTP_BAD_AUTO_PROXY_SCRIPT	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_BAD_AUTO_PROXY_SCRIPT /;"	d
ERROR_WINHTTP_CANNOT_CALL_AFTER_OPEN	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CANNOT_CALL_AFTER_OPEN /;"	d
ERROR_WINHTTP_CANNOT_CALL_AFTER_SEND	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CANNOT_CALL_AFTER_SEND /;"	d
ERROR_WINHTTP_CANNOT_CALL_BEFORE_OPEN	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CANNOT_CALL_BEFORE_OPEN /;"	d
ERROR_WINHTTP_CANNOT_CALL_BEFORE_SEND	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CANNOT_CALL_BEFORE_SEND /;"	d
ERROR_WINHTTP_CANNOT_CONNECT	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CANNOT_CONNECT /;"	d
ERROR_WINHTTP_CHUNKED_ENCODING_HEADER_SIZE_OVERFLOW	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CHUNKED_ENCODING_HEADER_SIZE_OVERFLOW /;"	d
ERROR_WINHTTP_CLIENT_AUTH_CERT_NEEDED	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CLIENT_AUTH_CERT_NEEDED /;"	d
ERROR_WINHTTP_CLIENT_CERT_NO_ACCESS_PRIVATE_KEY	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CLIENT_CERT_NO_ACCESS_PRIVATE_KEY /;"	d
ERROR_WINHTTP_CLIENT_CERT_NO_PRIVATE_KEY	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CLIENT_CERT_NO_PRIVATE_KEY /;"	d
ERROR_WINHTTP_CONNECTION_ERROR	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CONNECTION_ERROR /;"	d
ERROR_WINHTTP_HEADER_ALREADY_EXISTS	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_HEADER_ALREADY_EXISTS /;"	d
ERROR_WINHTTP_HEADER_COUNT_EXCEEDED	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_HEADER_COUNT_EXCEEDED /;"	d
ERROR_WINHTTP_HEADER_NOT_FOUND	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_HEADER_NOT_FOUND /;"	d
ERROR_WINHTTP_HEADER_SIZE_OVERFLOW	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_HEADER_SIZE_OVERFLOW /;"	d
ERROR_WINHTTP_INCORRECT_HANDLE_STATE	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INCORRECT_HANDLE_STATE /;"	d
ERROR_WINHTTP_INCORRECT_HANDLE_TYPE	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INCORRECT_HANDLE_TYPE /;"	d
ERROR_WINHTTP_INTERNAL_ERROR	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INTERNAL_ERROR /;"	d
ERROR_WINHTTP_INVALID_HEADER	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INVALID_HEADER /;"	d
ERROR_WINHTTP_INVALID_OPTION	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INVALID_OPTION /;"	d
ERROR_WINHTTP_INVALID_QUERY_REQUEST	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INVALID_QUERY_REQUEST /;"	d
ERROR_WINHTTP_INVALID_SERVER_RESPONSE	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INVALID_SERVER_RESPONSE /;"	d
ERROR_WINHTTP_INVALID_URL	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INVALID_URL /;"	d
ERROR_WINHTTP_LOGIN_FAILURE	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_LOGIN_FAILURE /;"	d
ERROR_WINHTTP_NAME_NOT_RESOLVED	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_NAME_NOT_RESOLVED /;"	d
ERROR_WINHTTP_NOT_INITIALIZED	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_NOT_INITIALIZED /;"	d
ERROR_WINHTTP_OPERATION_CANCELLED	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_OPERATION_CANCELLED /;"	d
ERROR_WINHTTP_OPTION_NOT_SETTABLE	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_OPTION_NOT_SETTABLE /;"	d
ERROR_WINHTTP_OUT_OF_HANDLES	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_OUT_OF_HANDLES /;"	d
ERROR_WINHTTP_REDIRECT_FAILED	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_REDIRECT_FAILED /;"	d
ERROR_WINHTTP_RESEND_REQUEST	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_RESEND_REQUEST /;"	d
ERROR_WINHTTP_RESPONSE_DRAIN_OVERFLOW	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_RESPONSE_DRAIN_OVERFLOW /;"	d
ERROR_WINHTTP_SECURE_CERT_CN_INVALID	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_CERT_CN_INVALID /;"	d
ERROR_WINHTTP_SECURE_CERT_DATE_INVALID	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_CERT_DATE_INVALID /;"	d
ERROR_WINHTTP_SECURE_CERT_REVOKED	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_CERT_REVOKED /;"	d
ERROR_WINHTTP_SECURE_CERT_REV_FAILED	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_CERT_REV_FAILED /;"	d
ERROR_WINHTTP_SECURE_CERT_WRONG_USAGE	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_CERT_WRONG_USAGE /;"	d
ERROR_WINHTTP_SECURE_CHANNEL_ERROR	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_CHANNEL_ERROR /;"	d
ERROR_WINHTTP_SECURE_FAILURE	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_FAILURE /;"	d
ERROR_WINHTTP_SECURE_INVALID_CA	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_INVALID_CA /;"	d
ERROR_WINHTTP_SECURE_INVALID_CERT	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_INVALID_CERT /;"	d
ERROR_WINHTTP_SHUTDOWN	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SHUTDOWN /;"	d
ERROR_WINHTTP_TIMEOUT	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_TIMEOUT /;"	d
ERROR_WINHTTP_UNABLE_TO_DOWNLOAD_SCRIPT	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_UNABLE_TO_DOWNLOAD_SCRIPT /;"	d
ERROR_WINHTTP_UNRECOGNIZED_SCHEME	extern/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_UNRECOGNIZED_SCHEME /;"	d
ERR_MSG	extern/libgit2/deps/zlib/zutil.h	/^#define ERR_MSG(/;"	d
ERR_RETURN	extern/libgit2/deps/zlib/zutil.h	/^#define ERR_RETURN(/;"	d
ESC_A	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anonb814e4160103
ESC_B	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anonb814e4160103
ESC_C	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anonb814e4160103
ESC_D	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anonb814e4160103
ESC_DU	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_DU, ESC_du, ESC_SU, ESC_su, ESC_WU, ESC_wu };$/;"	e	enum:__anonb814e4160103
ESC_E	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_E, ESC_Q, ESC_g, ESC_k,$/;"	e	enum:__anonb814e4160103
ESC_G	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anonb814e4160103
ESC_H	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anonb814e4160103
ESC_K	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anonb814e4160103
ESC_N	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anonb814e4160103
ESC_P	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anonb814e4160103
ESC_Q	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_E, ESC_Q, ESC_g, ESC_k,$/;"	e	enum:__anonb814e4160103
ESC_R	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anonb814e4160103
ESC_S	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anonb814e4160103
ESC_SU	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_DU, ESC_du, ESC_SU, ESC_su, ESC_WU, ESC_wu };$/;"	e	enum:__anonb814e4160103
ESC_V	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_h, ESC_V, ESC_v, ESC_X, ESC_Z, ESC_z,$/;"	e	enum:__anonb814e4160103
ESC_W	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anonb814e4160103
ESC_WU	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_DU, ESC_du, ESC_SU, ESC_su, ESC_WU, ESC_wu };$/;"	e	enum:__anonb814e4160103
ESC_X	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_h, ESC_V, ESC_v, ESC_X, ESC_Z, ESC_z,$/;"	e	enum:__anonb814e4160103
ESC_Z	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_h, ESC_V, ESC_v, ESC_X, ESC_Z, ESC_z,$/;"	e	enum:__anonb814e4160103
ESC_a	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ESC_a /;"	d
ESC_b	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anonb814e4160103
ESC_d	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anonb814e4160103
ESC_du	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_DU, ESC_du, ESC_SU, ESC_su, ESC_WU, ESC_wu };$/;"	e	enum:__anonb814e4160103
ESC_dum	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anonb814e4160103
ESC_e	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ESC_e /;"	d
ESC_f	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ESC_f /;"	d
ESC_g	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_E, ESC_Q, ESC_g, ESC_k,$/;"	e	enum:__anonb814e4160103
ESC_h	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_h, ESC_V, ESC_v, ESC_X, ESC_Z, ESC_z,$/;"	e	enum:__anonb814e4160103
ESC_k	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_E, ESC_Q, ESC_g, ESC_k,$/;"	e	enum:__anonb814e4160103
ESC_n	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ESC_n /;"	d
ESC_p	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anonb814e4160103
ESC_r	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ESC_r /;"	d
ESC_s	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anonb814e4160103
ESC_su	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_DU, ESC_du, ESC_SU, ESC_su, ESC_WU, ESC_wu };$/;"	e	enum:__anonb814e4160103
ESC_tee	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ESC_tee /;"	d
ESC_v	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_h, ESC_V, ESC_v, ESC_X, ESC_Z, ESC_z,$/;"	e	enum:__anonb814e4160103
ESC_w	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anonb814e4160103
ESC_wu	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_DU, ESC_du, ESC_SU, ESC_su, ESC_WU, ESC_wu };$/;"	e	enum:__anonb814e4160103
ESC_z	extern/libgit2/deps/pcre/pcre_internal.h	/^       ESC_h, ESC_V, ESC_v, ESC_X, ESC_Z, ESC_z,$/;"	e	enum:__anonb814e4160103
EVEN_PARITY	extern/libgit2/deps/ntlmclient/ntlm.c	/^#define EVEN_PARITY(/;"	d	file:
EVIL_SM_NAME	extern/libgit2/tests/submodule/escape.c	/^#define EVIL_SM_NAME /;"	d	file:
EVIL_SM_NAME_WINDOWS	extern/libgit2/tests/submodule/escape.c	/^#define EVIL_SM_NAME_WINDOWS /;"	d	file:
EVIL_SM_NAME_WINDOWS_UNESC	extern/libgit2/tests/submodule/escape.c	/^#define EVIL_SM_NAME_WINDOWS_UNESC /;"	d	file:
EXISTING_HASH	extern/libgit2/tests/odb/backend/multiple.c	/^#define EXISTING_HASH /;"	d	file:
EXISTING_HASH	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^#define EXISTING_HASH /;"	d	file:
EXLEN	extern/libgit2/deps/zlib/inflate.h	/^    EXLEN,      \/* i: waiting for extra length (gzip) *\/$/;"	e	enum:__anon92f8b1ba0103
EXPECTATIONS_COUNT	extern/libgit2/tests/notes/notes.c	/^#define EXPECTATIONS_COUNT /;"	d	file:
EXPECTED_HEADER	extern/libgit2/tests/diff/patch.c	/^#define EXPECTED_HEADER /;"	d	file:
EXPECTED_HUNK	extern/libgit2/tests/diff/patch.c	/^#define EXPECTED_HUNK /;"	d	file:
EXPECT_FALSE	extern/libgit2/tests/attr/attr_expect.h	/^	EXPECT_FALSE,$/;"	e	enum:attr_expect_t
EXPECT_STATUS_ADM	extern/libgit2/tests/diff/tree.c	/^#define EXPECT_STATUS_ADM(/;"	d	file:
EXPECT_STRING	extern/libgit2/tests/attr/attr_expect.h	/^	EXPECT_STRING$/;"	e	enum:attr_expect_t
EXPECT_TRUE	extern/libgit2/tests/attr/attr_expect.h	/^	EXPECT_TRUE,$/;"	e	enum:attr_expect_t
EXPECT_UNDEFINED	extern/libgit2/tests/attr/attr_expect.h	/^	EXPECT_UNDEFINED,$/;"	e	enum:attr_expect_t
EXTRA	extern/libgit2/deps/zlib/inflate.h	/^    EXTRA,      \/* i: waiting for extra bytes (gzip) *\/$/;"	e	enum:__anon92f8b1ba0103
EXTRA_STATE	extern/libgit2/deps/zlib/deflate.h	/^#define EXTRA_STATE /;"	d
Empty	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^        Empty, Boolean, Number, Error, String$/;"	e	enum:OpenXLSX::Impl::XLCellType
Empty	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Empty, Boolean, Integer, Float, Error, String$/;"	e	enum:OpenXLSX::XLValueType
Enforcement	extern/libgit2/docs/code_of_conduct.md	/^## Enforcement$/;"	s
Entry	git.hpp	/^using Entry =$/;"	t	namespace:git	typeref:typename:std::tuple<Name,std::variant<TreeId,BlobId,ExecId,LinkId,CommitId>>
EnumInfo	extern/OpenXLSX/tests/catch/catch.hpp	/^        struct EnumInfo {$/;"	s	namespace:Catch::Detail
EnumStringMaker	extern/NamedType/catch.hpp	/^    struct EnumStringMaker {$/;"	s	namespace:Catch
Enumerations	extern/libgit2/docs/conventions.md	/^## Enumerations$/;"	s
Error	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^        Empty, Boolean, Number, Error, String$/;"	e	enum:OpenXLSX::Impl::XLCellType
Error	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Empty, Boolean, Integer, Float, Error, String$/;"	e	enum:OpenXLSX::XLValueType
Error messages	extern/libgit2/docs/threading.md	/^Error messages$/;"	s
Error reporting in libgit2	extern/libgit2/docs/error-handling.md	/^Error reporting in libgit2$/;"	c
Example	extern/OpenXLSX/library/pugixml/README.md	/^## Example$/;"	s
Example internal implementation	extern/libgit2/docs/error-handling.md	/^Example internal implementation$/;"	s
Example usage	extern/libgit2/docs/error-handling.md	/^Example usage$/;"	s
Exception	extern/OpenXLSX/tests/catch/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
ExecId	git.hpp	/^using ExecId = nt::NamedType<std::string, struct ExecIdTag>;$/;"	t	namespace:git	typeref:typename:nt::NamedType<std::string,struct ExecIdTag>
ExplicitFailure	extern/OpenXLSX/tests/catch/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
Export	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^void Impl::XLWorksheet::Export(const std::string& fileName, char decimal, char delimiter) {$/;"	f	class:Impl::XLWorksheet	typeref:typename:void
Export	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^void XLWorksheet::Export(const std::string& fileName, char decimal, char delimiter) {$/;"	f	class:XLWorksheet	typeref:typename:void
Exports	extern/libgit2/docs/conventions.md	/^## Exports$/;"	s
ExpressionFailed	extern/OpenXLSX/tests/catch/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExtendedProperties	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        ExtendedProperties,$/;"	e	enum:OpenXLSX::Impl::XLContentType
ExtendedProperties	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        ExtendedProperties,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
External API	extern/libgit2/docs/conventions.md	/^## External API$/;"	s
External Objects	extern/libgit2/docs/diff-internals.md	/^External Objects$/;"	s
ExternalLink	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        ExternalLink,$/;"	e	enum:OpenXLSX::Impl::XLContentType
ExternalLink	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        ExternalLink,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
ExternalLinkPath	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        ExternalLinkPath,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
ExtractAll	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        void ExtractAll(const std::string& dest) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:void
ExtractDir	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        void ExtractDir(const std::string& dir, const std::string& dest) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:void
ExtractEntry	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        void ExtractEntry(const std::string& name, const std::string& dest) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:void
F	extern/libgit2/examples/blame.c	/^	int F;$/;"	m	struct:opts	typeref:typename:int	file:
F	oset.cpp	/^  using F = void (*)(T &&);$/;"	t	struct:oset	file:
FALSE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define FALSE /;"	d
FAR	extern/libgit2/deps/zlib/zconf.h	/^#      define FAR /;"	d
FAR	extern/libgit2/deps/zlib/zconf.h	/^#  define FAR$/;"	d
FASTFORWARD_BRANCH	extern/libgit2/tests/merge/analysis.c	/^#define FASTFORWARD_BRANCH /;"	d	file:
FASTFORWARD_ID	extern/libgit2/tests/merge/analysis.c	/^#define FASTFORWARD_ID /;"	d	file:
FETCH_HEAD_EXPLICIT_DATA	extern/libgit2/tests/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_EXPLICIT_DATA /;"	d
FETCH_HEAD_NO_MERGE_DATA	extern/libgit2/tests/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_NO_MERGE_DATA /;"	d
FETCH_HEAD_NO_MERGE_DATA2	extern/libgit2/tests/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_NO_MERGE_DATA2 /;"	d
FETCH_HEAD_NO_MERGE_DATA3	extern/libgit2/tests/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_NO_MERGE_DATA3 /;"	d
FETCH_HEAD_QUOTE_DATA	extern/libgit2/tests/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_QUOTE_DATA /;"	d
FETCH_HEAD_WILDCARD_DATA	extern/libgit2/tests/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_WILDCARD_DATA /;"	d
FETCH_HEAD_WILDCARD_DATA2	extern/libgit2/tests/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_WILDCARD_DATA2 /;"	d
FETCH_HEAD_WILDCARD_DATA_LOCAL	extern/libgit2/tests/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_WILDCARD_DATA_LOCAL /;"	d
FEW_UTF8_CRLF_RAW	extern/libgit2/tests/filter/crlf.h	/^#define FEW_UTF8_CRLF_RAW	/;"	d
FEW_UTF8_LF_RAW	extern/libgit2/tests/filter/crlf.h	/^#define FEW_UTF8_LF_RAW	/;"	d
FIELD	extern/libgit2/src/transports/http.c	/^	FIELD,$/;"	e	enum:last_cb	file:
FILEIO_BUFSIZE	extern/libgit2/src/common.h	/^#define FILEIO_BUFSIZE /;"	d
FILESYSTEM_MAX_DEPTH	extern/libgit2/src/iterator.c	/^#define FILESYSTEM_MAX_DEPTH /;"	d	file:
FILE_APPEND	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_APPEND /;"	d
FILE_APPEND_NO_NL	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_APPEND_NO_NL /;"	d
FILE_BINARY_DELTA_MODIFIED	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_BINARY_DELTA_MODIFIED /;"	d
FILE_BINARY_DELTA_MODIFIED_LEN	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_BINARY_DELTA_MODIFIED_LEN /;"	d
FILE_BINARY_DELTA_ORIGINAL	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_BINARY_DELTA_ORIGINAL /;"	d
FILE_BINARY_DELTA_ORIGINAL_LEN	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_BINARY_DELTA_ORIGINAL_LEN /;"	d
FILE_BINARY_LITERAL_MODIFIED	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_BINARY_LITERAL_MODIFIED /;"	d
FILE_BINARY_LITERAL_MODIFIED_LEN	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_BINARY_LITERAL_MODIFIED_LEN /;"	d
FILE_BINARY_LITERAL_ORIGINAL	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_BINARY_LITERAL_ORIGINAL /;"	d
FILE_BINARY_LITERAL_ORIGINAL_LEN	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_BINARY_LITERAL_ORIGINAL_LEN /;"	d
FILE_CHANGE_FIRSTLINE	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_CHANGE_FIRSTLINE /;"	d
FILE_CHANGE_LASTLINE	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_CHANGE_LASTLINE /;"	d
FILE_CHANGE_MIDDLE	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_CHANGE_MIDDLE /;"	d
FILE_CHANGE_MIDDLE_AND_LASTLINE	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_CHANGE_MIDDLE_AND_LASTLINE /;"	d
FILE_CHANGE_MIDDLE_GROW	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_CHANGE_MIDDLE_GROW /;"	d
FILE_CHANGE_MIDDLE_SHRINK	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_CHANGE_MIDDLE_SHRINK /;"	d
FILE_CONTENTS_CRLF	extern/libgit2/tests/index/crlf.c	/^#define FILE_CONTENTS_CRLF /;"	d	file:
FILE_CONTENTS_LF	extern/libgit2/tests/index/crlf.c	/^#define FILE_CONTENTS_LF /;"	d	file:
FILE_DELETE_AND_CHANGE	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_DELETE_AND_CHANGE /;"	d
FILE_DELETE_FIRSTLINE	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_DELETE_FIRSTLINE /;"	d
FILE_EMPTY_CONTEXT_MODIFIED	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_EMPTY_CONTEXT_MODIFIED /;"	d
FILE_EMPTY_CONTEXT_ORIGINAL	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_EMPTY_CONTEXT_ORIGINAL /;"	d
FILE_NAME_NORMALIZED	extern/libgit2/src/win32/posix_w32.c	/^# define FILE_NAME_NORMALIZED /;"	d	file:
FILE_OID_CRLF	extern/libgit2/tests/index/crlf.c	/^#define FILE_OID_CRLF /;"	d	file:
FILE_OID_LF	extern/libgit2/tests/index/crlf.c	/^#define FILE_OID_LF /;"	d	file:
FILE_ORIGINAL	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_ORIGINAL /;"	d
FILE_PREPEND	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_PREPEND /;"	d
FILE_PREPEND_AND_APPEND	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_PREPEND_AND_APPEND /;"	d
FILE_PREPEND_AND_CHANGE	extern/libgit2/tests/patch/patch_common.h	/^#define FILE_PREPEND_AND_CHANGE /;"	d
FILE_WITHOUT_BRACKET	extern/libgit2/tests/status/worktree_init.c	/^	#define FILE_WITHOUT_BRACKET /;"	d	file:
FILE_WITH_BRACKET	extern/libgit2/tests/status/worktree_init.c	/^	#define FILE_WITH_BRACKET /;"	d	file:
FILE_WITH_SPACE	extern/libgit2/tests/status/worktree_init.c	/^#define FILE_WITH_SPACE /;"	d	file:
FILTERIO_BUFSIZE	extern/libgit2/src/common.h	/^#define FILTERIO_BUFSIZE /;"	d
FIND_FIRST_EX_LARGE_FETCH	extern/libgit2/src/path.c	/^# define FIND_FIRST_EX_LARGE_FETCH /;"	d	file:
FIND_PACKAGE_HANDLE_STANDARD_ARGS	extern/libgit2/deps/pcre/cmake/FindPackageHandleStandardArgs.cmake	/^MACRO(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FAIL_MSG _VAR1 )$/;"	m
FIND_PKGLIBRARIES	extern/libgit2/cmake/Modules/FindPkgLibraries.cmake	/^FUNCTION(FIND_PKGLIBRARIES prefix package)$/;"	f
FINISH_STATE	extern/libgit2/deps/zlib/deflate.h	/^#define FINISH_STATE /;"	d
FIRST_AUTOTAB_OP	extern/libgit2/deps/pcre/pcre_internal.h	/^#define FIRST_AUTOTAB_OP /;"	d
FIXTURE_DIR	extern/libgit2/tests/core/sha1.c	/^#define FIXTURE_DIR /;"	d	file:
FLAGS	extern/libgit2/deps/zlib/inflate.h	/^    FLAGS,      \/* i: waiting for method and flags (gzip) *\/$/;"	e	enum:__anon92f8b1ba0103
FLAG_BITS	extern/libgit2/src/commit_list.h	/^#define FLAG_BITS /;"	d
FLAG_SET	extern/libgit2/src/diff_tform.c	/^#define FLAG_SET(/;"	d	file:
FLUENT_EBCO	extern/NamedType/named_type_impl.hpp	/^#  define FLUENT_EBCO /;"	d
FLUENT_EBCO	extern/NamedType/named_type_impl.hpp	/^#  define FLUENT_EBCO$/;"	d
FLUENT_EBCO	nt.hpp	/^#define FLUENT_EBCO /;"	d
FLUENT_EBCO	nt.hpp	/^#define FLUENT_EBCO$/;"	d
FLUSH_BLOCK	extern/libgit2/deps/zlib/deflate.c	/^#define FLUSH_BLOCK(/;"	d	file:
FLUSH_BLOCK_ONLY	extern/libgit2/deps/zlib/deflate.c	/^#define FLUSH_BLOCK_ONLY(/;"	d	file:
FOO_COMMENT	extern/libgit2/tests/config/write.c	/^#define FOO_COMMENT /;"	d	file:
FORCE_DIFFABLE	extern/libgit2/src/diff_driver.c	/^#define FORCE_DIFFABLE /;"	d	file:
FORMAT_DEFAULT	extern/libgit2/examples/status.c	/^	FORMAT_DEFAULT   = 0,$/;"	e	enum:__anon463e8fa90103	file:
FORMAT_LONG	extern/libgit2/examples/status.c	/^	FORMAT_LONG      = 1,$/;"	e	enum:__anon463e8fa90103	file:
FORMAT_PORCELAIN	extern/libgit2/examples/status.c	/^	FORMAT_PORCELAIN = 3,$/;"	e	enum:__anon463e8fa90103	file:
FORMAT_SHORT	extern/libgit2/examples/status.c	/^	FORMAT_SHORT     = 2,$/;"	e	enum:__anon463e8fa90103	file:
FORWARDCHAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define FORWARDCHAR(/;"	d
FRESHEN_FREQUENCY	extern/libgit2/src/odb_pack.c	/^#define FRESHEN_FREQUENCY /;"	d	file:
FSCTL_GET_REPARSE_POINT	extern/libgit2/src/win32/reparse.h	/^# define FSCTL_GET_REPARSE_POINT	/;"	d
FSCTL_SET_REPARSE_POINT	extern/libgit2/src/win32/reparse.h	/^# define FSCTL_SET_REPARSE_POINT	/;"	d
FUTILS_MAX_DEPTH	extern/libgit2/src/futils.c	/^#define FUTILS_MAX_DEPTH /;"	d	file:
F_CHUNKED	extern/libgit2/deps/http-parser/http_parser.h	/^  { F_CHUNKED               = 1 << 0$/;"	e	enum:flags
F_CONNECTION_CLOSE	extern/libgit2/deps/http-parser/http_parser.h	/^  , F_CONNECTION_CLOSE      = 1 << 2$/;"	e	enum:flags
F_CONNECTION_KEEP_ALIVE	extern/libgit2/deps/http-parser/http_parser.h	/^  , F_CONNECTION_KEEP_ALIVE = 1 << 1$/;"	e	enum:flags
F_OK	extern/libgit2/src/posix.h	/^#define F_OK /;"	d
F_OPEN	extern/libgit2/deps/zlib/zutil.h	/^#  define F_OPEN(/;"	d
F_SKIPBODY	extern/libgit2/deps/http-parser/http_parser.h	/^  , F_SKIPBODY              = 1 << 5$/;"	e	enum:flags
F_TRAILING	extern/libgit2/deps/http-parser/http_parser.h	/^  , F_TRAILING              = 1 << 3$/;"	e	enum:flags
F_UPGRADE	extern/libgit2/deps/http-parser/http_parser.h	/^  , F_UPGRADE               = 1 << 4$/;"	e	enum:flags
FailureBit	extern/OpenXLSX/tests/catch/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
Faker	extern/libgit2/tests/resources/userdiff/after/file.php	/^namespace Faker;$/;"	n
Faker	extern/libgit2/tests/resources/userdiff/before/file.php	/^namespace Faker;$/;"	n
Faker	extern/libgit2/tests/resources/userdiff/files/file.php	/^namespace Faker;$/;"	n
False	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^        True, False$/;"	e	enum:OpenXLSX::Impl::XLBool
FalseTest	extern/OpenXLSX/tests/catch/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FatalErrorCondition	extern/OpenXLSX/tests/catch/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
Features	extern/OpenXLSX/library/zippy/README.md	/^## Features$/;"	s
Features	extern/OpenXLSX/library/zippy/Zippy/miniz/readme.md	/^## Features$/;"	s
FilePath	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAbstractXMLFile_Impl.cpp	/^const string& Impl::XLAbstractXMLFile::FilePath() const {$/;"	f	class:Impl::XLAbstractXMLFile	typeref:typename:const string &
Filename	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            std::string Filename() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:std::string
Filename	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        std::string Filename() const {$/;"	f	class:Zippy::ZipEntry	typeref:typename:std::string
Filename	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        std::string Filename;$/;"	m	struct:Zippy::ZipEntryMetaData	typeref:typename:std::string
FirstCell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^Impl::XLCellReference Impl::XLWorksheet::FirstCell() const noexcept {$/;"	f	class:Impl::XLWorksheet	typeref:typename:Impl::XLCellReference
FirstCell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^XLCellReference XLWorksheet::FirstCell() const noexcept {$/;"	f	class:XLWorksheet	typeref:typename:XLCellReference
FirstName	extern/NamedType/main.cpp	/^    using FirstName = fluent::NamedType<std::string, struct FirstNameTag>;$/;"	t	typeref:typename:fluent::NamedType<std::string,struct FirstNameTag>	file:
Flags	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	extern/libgit2/src/win32/reparse.h	/^			ULONG  Flags;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470208	typeref:typename:ULONG
Float	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^        Integer, Float$/;"	e	enum:OpenXLSX::Impl::XLNumberType
Float	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Empty, Boolean, Integer, Float, Error, String$/;"	e	enum:OpenXLSX::XLValueType
Freq	extern/libgit2/deps/zlib/deflate.h	/^#define Freq /;"	d
Full release	extern/libgit2/docs/release.md	/^## Full release$/;"	s
Fuzzing	extern/libgit2/docs/fuzzing.md	/^# Fuzzing$/;"	c
G	extern/libgit2/src/wildmatch.c	/^	G = GIT_GLOB_SPECIAL,	\/* *, ?, [, \\\\ *\/$/;"	e	enum:__anon17a406cb0103	file:
GET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GET(/;"	d
GET2	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GET2(/;"	d
GETCHAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GETCHAR(/;"	d
GETCHARINC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GETCHARINC(/;"	d
GETCHARINCTEST	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GETCHARINCTEST(/;"	d
GETCHARLEN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GETCHARLEN(/;"	d
GETCHARLENTEST	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GETCHARLENTEST(/;"	d
GETCHARTEST	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GETCHARTEST(/;"	d
GETUTF16	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GETUTF16(/;"	d
GETUTF16INC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GETUTF16INC(/;"	d
GETUTF16LEN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GETUTF16LEN(/;"	d
GETUTF8	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GETUTF8(/;"	d
GETUTF8INC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GETUTF8INC(/;"	d
GETUTF8LEN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GETUTF8LEN(/;"	d
GET_ALL_ERRORS	extern/libgit2/src/config.c	/^	GET_ALL_ERRORS = 0,$/;"	e	enum:__anon2d64db840403	file:
GET_EXTRALEN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GET_EXTRALEN(/;"	d
GET_LOCAL_BASE	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define GET_LOCAL_BASE(/;"	d	file:
GET_NO_ERRORS	extern/libgit2/src/config.c	/^	GET_NO_ERRORS  = 2$/;"	e	enum:__anon2d64db840403	file:
GET_NO_MISSING	extern/libgit2/src/config.c	/^	GET_NO_MISSING = 1,$/;"	e	enum:__anon2d64db840403	file:
GET_UCD	extern/libgit2/deps/pcre/pcre_internal.h	/^#define GET_UCD(/;"	d
GF2_DIM	extern/libgit2/deps/zlib/crc32.c	/^#define GF2_DIM /;"	d	file:
GITATTR	extern/libgit2/tests/attr/repo.c	/^#define GITATTR /;"	d	file:
GITATTR	extern/libgit2/tests/object/blob/fromstream.c	/^#define GITATTR /;"	d	file:
GITERR_CALLBACK	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_CALLBACK /;"	d
GITERR_CHECKOUT	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_CHECKOUT /;"	d
GITERR_CHERRYPICK	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_CHERRYPICK /;"	d
GITERR_CONFIG	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_CONFIG /;"	d
GITERR_DESCRIBE	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_DESCRIBE /;"	d
GITERR_FETCHHEAD	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_FETCHHEAD /;"	d
GITERR_FILESYSTEM	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_FILESYSTEM /;"	d
GITERR_FILTER	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_FILTER /;"	d
GITERR_INDEX	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_INDEX /;"	d
GITERR_INDEXER	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_INDEXER /;"	d
GITERR_INVALID	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_INVALID /;"	d
GITERR_MERGE	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_MERGE /;"	d
GITERR_NET	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_NET /;"	d
GITERR_NOMEMORY	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_NOMEMORY /;"	d
GITERR_NONE	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_NONE /;"	d
GITERR_OBJECT	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_OBJECT /;"	d
GITERR_ODB	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_ODB /;"	d
GITERR_OS	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_OS /;"	d
GITERR_PATCH	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_PATCH /;"	d
GITERR_REBASE	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_REBASE /;"	d
GITERR_REFERENCE	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_REFERENCE /;"	d
GITERR_REGEX	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_REGEX /;"	d
GITERR_REPOSITORY	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_REPOSITORY /;"	d
GITERR_REVERT	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_REVERT /;"	d
GITERR_SHA1	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_SHA1 /;"	d
GITERR_SSH	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_SSH /;"	d
GITERR_SSL	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_SSL /;"	d
GITERR_STASH	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_STASH /;"	d
GITERR_SUBMODULE	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_SUBMODULE /;"	d
GITERR_TAG	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_TAG /;"	d
GITERR_THREAD	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_THREAD /;"	d
GITERR_TREE	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_TREE /;"	d
GITERR_WORKTREE	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_WORKTREE /;"	d
GITERR_ZLIB	extern/libgit2/include/git2/deprecated.h	/^#define GITERR_ZLIB /;"	d
GITMODULES_CREATE	extern/libgit2/src/submodule.c	/^	GITMODULES_CREATE = 1,$/;"	e	enum:__anon952effbe0203	file:
GITMODULES_EXISTING	extern/libgit2/src/submodule.c	/^	GITMODULES_EXISTING = 0,$/;"	e	enum:__anon952effbe0203	file:
GITNO_CONNECT_SSL	extern/libgit2/src/netops.h	/^	GITNO_CONNECT_SSL = 1,$/;"	e	enum:__anon61187bac0103
GIT_ABBREV_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_ABBREV_DEFAULT = 7,$/;"	e	enum:__anon05b115930203
GIT_ACK_COMMON	extern/libgit2/src/transports/smart.h	/^	GIT_ACK_COMMON,$/;"	e	enum:git_ack_status
GIT_ACK_CONTINUE	extern/libgit2/src/transports/smart.h	/^	GIT_ACK_CONTINUE,$/;"	e	enum:git_ack_status
GIT_ACK_NONE	extern/libgit2/src/transports/smart.h	/^	GIT_ACK_NONE,$/;"	e	enum:git_ack_status
GIT_ACK_READY	extern/libgit2/src/transports/smart.h	/^	GIT_ACK_READY$/;"	e	enum:git_ack_status
GIT_ADD_SIZET_OVERFLOW	extern/libgit2/src/common.h	/^#define GIT_ADD_SIZET_OVERFLOW(/;"	d
GIT_ALIGN	extern/libgit2/src/cc-compat.h	/^#	define GIT_ALIGN(/;"	d
GIT_ALPHA	extern/libgit2/src/wildmatch.c	/^#define GIT_ALPHA /;"	d	file:
GIT_ALTERNATES_FILE	extern/libgit2/src/odb.c	/^#define GIT_ALTERNATES_FILE /;"	d	file:
GIT_ALTERNATES_MAX_DEPTH	extern/libgit2/src/odb.c	/^#define GIT_ALTERNATES_MAX_DEPTH /;"	d	file:
GIT_ANNOTATED_COMMIT_REAL	extern/libgit2/src/annotated_commit.h	/^	GIT_ANNOTATED_COMMIT_REAL = 1,$/;"	e	enum:__anon4b0087f90103
GIT_ANNOTATED_COMMIT_VIRTUAL	extern/libgit2/src/annotated_commit.h	/^	GIT_ANNOTATED_COMMIT_VIRTUAL = 2,$/;"	e	enum:__anon4b0087f90103
GIT_APPLY_LOCATION_BOTH	extern/libgit2/include/git2/apply.h	/^	GIT_APPLY_LOCATION_BOTH = 2,$/;"	e	enum:__anondc670afa0203
GIT_APPLY_LOCATION_INDEX	extern/libgit2/include/git2/apply.h	/^	GIT_APPLY_LOCATION_INDEX = 1,$/;"	e	enum:__anondc670afa0203
GIT_APPLY_LOCATION_WORKDIR	extern/libgit2/include/git2/apply.h	/^	GIT_APPLY_LOCATION_WORKDIR = 0,$/;"	e	enum:__anondc670afa0203
GIT_APPLY_OPTIONS_INIT	extern/libgit2/include/git2/apply.h	/^#define GIT_APPLY_OPTIONS_INIT /;"	d
GIT_APPLY_OPTIONS_VERSION	extern/libgit2/include/git2/apply.h	/^#define GIT_APPLY_OPTIONS_VERSION /;"	d
GIT_ARCH_32	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_ARCH_32 1)$/;"	v
GIT_ARCH_64	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_ARCH_64 1)$/;"	v
GIT_ARRAY_INIT	extern/libgit2/src/array.h	/^#define GIT_ARRAY_INIT /;"	d
GIT_ATTR_CHECK_FILE_THEN_INDEX	extern/libgit2/include/git2/attr.h	/^#define GIT_ATTR_CHECK_FILE_THEN_INDEX	/;"	d
GIT_ATTR_CHECK_INCLUDE_HEAD	extern/libgit2/include/git2/attr.h	/^#define GIT_ATTR_CHECK_INCLUDE_HEAD /;"	d
GIT_ATTR_CHECK_INDEX_ONLY	extern/libgit2/include/git2/attr.h	/^#define GIT_ATTR_CHECK_INDEX_ONLY	/;"	d
GIT_ATTR_CHECK_INDEX_THEN_FILE	extern/libgit2/include/git2/attr.h	/^#define GIT_ATTR_CHECK_INDEX_THEN_FILE	/;"	d
GIT_ATTR_CHECK_NO_SYSTEM	extern/libgit2/include/git2/attr.h	/^#define GIT_ATTR_CHECK_NO_SYSTEM /;"	d
GIT_ATTR_CONFIG	extern/libgit2/src/attrcache.h	/^#define GIT_ATTR_CONFIG /;"	d
GIT_ATTR_FALSE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_FALSE(/;"	d
GIT_ATTR_FALSE_T	extern/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_FALSE_T /;"	d
GIT_ATTR_FILE	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FILE	/;"	d
GIT_ATTR_FILE_INREPO	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FILE_INREPO	/;"	d
GIT_ATTR_FILE_NUM_SOURCES	extern/libgit2/src/attr_file.h	/^	GIT_ATTR_FILE_NUM_SOURCES  = 4$/;"	e	enum:__anon32d629ad0103
GIT_ATTR_FILE_SYSTEM	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FILE_SYSTEM	/;"	d
GIT_ATTR_FILE_XDG	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FILE_XDG	/;"	d
GIT_ATTR_FILE__FROM_FILE	extern/libgit2/src/attr_file.h	/^	GIT_ATTR_FILE__FROM_FILE   = 1,$/;"	e	enum:__anon32d629ad0103
GIT_ATTR_FILE__FROM_HEAD	extern/libgit2/src/attr_file.h	/^	GIT_ATTR_FILE__FROM_HEAD   = 3,$/;"	e	enum:__anon32d629ad0103
GIT_ATTR_FILE__FROM_INDEX	extern/libgit2/src/attr_file.h	/^	GIT_ATTR_FILE__FROM_INDEX  = 2,$/;"	e	enum:__anon32d629ad0103
GIT_ATTR_FILE__IN_MEMORY	extern/libgit2/src/attr_file.h	/^	GIT_ATTR_FILE__IN_MEMORY   = 0,$/;"	e	enum:__anon32d629ad0103
GIT_ATTR_FNMATCH_ALLOWMACRO	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FNMATCH_ALLOWMACRO /;"	d
GIT_ATTR_FNMATCH_ALLOWNEG	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FNMATCH_ALLOWNEG /;"	d
GIT_ATTR_FNMATCH_ALLOWSPACE	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FNMATCH_ALLOWSPACE	/;"	d
GIT_ATTR_FNMATCH_DIRECTORY	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FNMATCH_DIRECTORY	/;"	d
GIT_ATTR_FNMATCH_FULLPATH	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FNMATCH_FULLPATH	/;"	d
GIT_ATTR_FNMATCH_HASWILD	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FNMATCH_HASWILD	/;"	d
GIT_ATTR_FNMATCH_ICASE	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FNMATCH_ICASE	/;"	d
GIT_ATTR_FNMATCH_IGNORE	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FNMATCH_IGNORE	/;"	d
GIT_ATTR_FNMATCH_MACRO	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FNMATCH_MACRO	/;"	d
GIT_ATTR_FNMATCH_MATCH_ALL	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FNMATCH_MATCH_ALL	/;"	d
GIT_ATTR_FNMATCH_NEGATIVE	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FNMATCH_NEGATIVE	/;"	d
GIT_ATTR_FNMATCH__INCOMING	extern/libgit2/src/attr_file.h	/^#define GIT_ATTR_FNMATCH__INCOMING /;"	d
GIT_ATTR_HAS_VALUE	extern/libgit2/include/git2/attr.h	/^#define GIT_ATTR_HAS_VALUE(/;"	d
GIT_ATTR_IS_FALSE	extern/libgit2/include/git2/attr.h	/^#define GIT_ATTR_IS_FALSE(/;"	d
GIT_ATTR_IS_TRUE	extern/libgit2/include/git2/attr.h	/^#define GIT_ATTR_IS_TRUE(/;"	d
GIT_ATTR_IS_UNSPECIFIED	extern/libgit2/include/git2/attr.h	/^#define GIT_ATTR_IS_UNSPECIFIED(/;"	d
GIT_ATTR_TRUE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_TRUE(/;"	d
GIT_ATTR_TRUE_T	extern/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_TRUE_T /;"	d
GIT_ATTR_UNSPECIFIED	extern/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_UNSPECIFIED(/;"	d
GIT_ATTR_UNSPECIFIED_T	extern/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_UNSPECIFIED_T /;"	d
GIT_ATTR_VALUE_FALSE	extern/libgit2/include/git2/attr.h	/^	GIT_ATTR_VALUE_FALSE,  \/**< The attribute has been unset *\/$/;"	e	enum:__anon6bd1a3ef0103
GIT_ATTR_VALUE_STRING	extern/libgit2/include/git2/attr.h	/^	GIT_ATTR_VALUE_STRING, \/**< This attribute has a value *\/$/;"	e	enum:__anon6bd1a3ef0103
GIT_ATTR_VALUE_T	extern/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_VALUE_T /;"	d
GIT_ATTR_VALUE_TRUE	extern/libgit2/include/git2/attr.h	/^	GIT_ATTR_VALUE_TRUE,   \/**< The attribute has been set *\/$/;"	e	enum:__anon6bd1a3ef0103
GIT_ATTR_VALUE_UNSPECIFIED	extern/libgit2/include/git2/attr.h	/^	GIT_ATTR_VALUE_UNSPECIFIED = 0, \/**< The attribute has been left unspecified *\/$/;"	e	enum:__anon6bd1a3ef0103
GIT_AUTHTYPE_BASIC	extern/libgit2/src/transports/auth.h	/^	GIT_AUTHTYPE_BASIC = 1,$/;"	e	enum:__anonf415dd740103
GIT_AUTHTYPE_NEGOTIATE	extern/libgit2/src/transports/auth.h	/^	GIT_AUTHTYPE_NEGOTIATE = 2,$/;"	e	enum:__anonf415dd740103
GIT_AUTHTYPE_NTLM	extern/libgit2/src/transports/auth.h	/^	GIT_AUTHTYPE_NTLM = 4,$/;"	e	enum:__anonf415dd740103
GIT_AUTO_CRLF_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_AUTO_CRLF_DEFAULT = GIT_AUTO_CRLF_FALSE,$/;"	e	enum:__anon05b115930203
GIT_AUTO_CRLF_FALSE	extern/libgit2/src/repository.h	/^	GIT_AUTO_CRLF_FALSE = 0,$/;"	e	enum:__anon05b115930203
GIT_AUTO_CRLF_INPUT	extern/libgit2/src/repository.h	/^	GIT_AUTO_CRLF_INPUT = 2,$/;"	e	enum:__anon05b115930203
GIT_AUTO_CRLF_TRUE	extern/libgit2/src/repository.h	/^	GIT_AUTO_CRLF_TRUE = 1,$/;"	e	enum:__anon05b115930203
GIT_BARE_DIR_MODE	extern/libgit2/src/repository.h	/^#define GIT_BARE_DIR_MODE /;"	d
GIT_BEGIN_DECL	extern/libgit2/include/git2/common.h	/^# define GIT_BEGIN_DECL /;"	d
GIT_BISECT_LOG_FILE	extern/libgit2/src/refs.h	/^#define GIT_BISECT_LOG_FILE /;"	d
GIT_BITVEC_MASK	extern/libgit2/src/bitvec.h	/^#define GIT_BITVEC_MASK(/;"	d
GIT_BITVEC_WORD	extern/libgit2/src/bitvec.h	/^#define GIT_BITVEC_WORD(/;"	d
GIT_BLAME_FIRST_PARENT	extern/libgit2/include/git2/blame.h	/^	GIT_BLAME_FIRST_PARENT = (1<<4),$/;"	e	enum:__anon1efd6cf50103
GIT_BLAME_NORMAL	extern/libgit2/include/git2/blame.h	/^	GIT_BLAME_NORMAL = 0,$/;"	e	enum:__anon1efd6cf50103
GIT_BLAME_OPTIONS_INIT	extern/libgit2/include/git2/blame.h	/^#define GIT_BLAME_OPTIONS_INIT /;"	d
GIT_BLAME_OPTIONS_VERSION	extern/libgit2/include/git2/blame.h	/^#define GIT_BLAME_OPTIONS_VERSION /;"	d
GIT_BLAME_TRACK_COPIES_ANY_COMMIT_COPIES	extern/libgit2/include/git2/blame.h	/^	GIT_BLAME_TRACK_COPIES_ANY_COMMIT_COPIES = (1<<3),$/;"	e	enum:__anon1efd6cf50103
GIT_BLAME_TRACK_COPIES_SAME_COMMIT_COPIES	extern/libgit2/include/git2/blame.h	/^	GIT_BLAME_TRACK_COPIES_SAME_COMMIT_COPIES = (1<<2),$/;"	e	enum:__anon1efd6cf50103
GIT_BLAME_TRACK_COPIES_SAME_COMMIT_MOVES	extern/libgit2/include/git2/blame.h	/^	GIT_BLAME_TRACK_COPIES_SAME_COMMIT_MOVES = (1<<1),$/;"	e	enum:__anon1efd6cf50103
GIT_BLAME_TRACK_COPIES_SAME_FILE	extern/libgit2/include/git2/blame.h	/^	GIT_BLAME_TRACK_COPIES_SAME_FILE = (1<<0),$/;"	e	enum:__anon1efd6cf50103
GIT_BLAME_USE_MAILMAP	extern/libgit2/include/git2/blame.h	/^	GIT_BLAME_USE_MAILMAP = (1<<5),$/;"	e	enum:__anon1efd6cf50103
GIT_BLOB_FILTER_ATTTRIBUTES_FROM_HEAD	extern/libgit2/include/git2/blob.h	/^	GIT_BLOB_FILTER_ATTTRIBUTES_FROM_HEAD = (1 << 2),$/;"	e	enum:__anon6d9306930103
GIT_BLOB_FILTER_CHECK_FOR_BINARY	extern/libgit2/include/git2/blob.h	/^	GIT_BLOB_FILTER_CHECK_FOR_BINARY = (1 << 0),$/;"	e	enum:__anon6d9306930103
GIT_BLOB_FILTER_NO_SYSTEM_ATTRIBUTES	extern/libgit2/include/git2/blob.h	/^	GIT_BLOB_FILTER_NO_SYSTEM_ATTRIBUTES = (1 << 1),$/;"	e	enum:__anon6d9306930103
GIT_BLOB_FILTER_OPTIONS_INIT	extern/libgit2/include/git2/blob.h	/^#define GIT_BLOB_FILTER_OPTIONS_INIT /;"	d
GIT_BLOB_FILTER_OPTIONS_VERSION	extern/libgit2/include/git2/blob.h	/^#define GIT_BLOB_FILTER_OPTIONS_VERSION /;"	d
GIT_BOM_NONE	extern/libgit2/src/buf_text.h	/^	GIT_BOM_NONE = 0,$/;"	e	enum:__anon6db101b40103
GIT_BOM_UTF16_BE	extern/libgit2/src/buf_text.h	/^	GIT_BOM_UTF16_BE = 3,$/;"	e	enum:__anon6db101b40103
GIT_BOM_UTF16_LE	extern/libgit2/src/buf_text.h	/^	GIT_BOM_UTF16_LE = 2,$/;"	e	enum:__anon6db101b40103
GIT_BOM_UTF32_BE	extern/libgit2/src/buf_text.h	/^	GIT_BOM_UTF32_BE = 5$/;"	e	enum:__anon6db101b40103
GIT_BOM_UTF32_LE	extern/libgit2/src/buf_text.h	/^	GIT_BOM_UTF32_LE = 4,$/;"	e	enum:__anon6db101b40103
GIT_BOM_UTF8	extern/libgit2/src/buf_text.h	/^	GIT_BOM_UTF8 = 1,$/;"	e	enum:__anon6db101b40103
GIT_BRANCH_ALL	extern/libgit2/include/git2/types.h	/^	GIT_BRANCH_ALL = GIT_BRANCH_LOCAL|GIT_BRANCH_REMOTE,$/;"	e	enum:__anona7f40ac90303
GIT_BRANCH_LOCAL	extern/libgit2/include/git2/types.h	/^	GIT_BRANCH_LOCAL = 1,$/;"	e	enum:__anona7f40ac90303
GIT_BRANCH_MASTER	extern/libgit2/src/repository.c	/^#define GIT_BRANCH_MASTER /;"	d	file:
GIT_BRANCH_REMOTE	extern/libgit2/include/git2/types.h	/^	GIT_BRANCH_REMOTE = 2,$/;"	e	enum:__anona7f40ac90303
GIT_BUF_INIT	extern/libgit2/src/buffer.h	/^#define GIT_BUF_INIT /;"	d
GIT_BUF_INIT_CONST	extern/libgit2/include/git2/buffer.h	/^#define GIT_BUF_INIT_CONST(/;"	d
GIT_CACHE_STORE_ANY	extern/libgit2/src/cache.h	/^	GIT_CACHE_STORE_ANY = 0,$/;"	e	enum:__anon354735470103
GIT_CACHE_STORE_PARSED	extern/libgit2/src/cache.h	/^	GIT_CACHE_STORE_PARSED = 2$/;"	e	enum:__anon354735470103
GIT_CACHE_STORE_RAW	extern/libgit2/src/cache.h	/^	GIT_CACHE_STORE_RAW = 1,$/;"	e	enum:__anon354735470103
GIT_CALLBACK	extern/libgit2/include/git2/common.h	/^# define GIT_CALLBACK(/;"	d
GIT_CAP_DELETE_REFS	extern/libgit2/src/transports/smart.h	/^#define GIT_CAP_DELETE_REFS /;"	d
GIT_CAP_INCLUDE_TAG	extern/libgit2/src/transports/smart.h	/^#define GIT_CAP_INCLUDE_TAG /;"	d
GIT_CAP_MULTI_ACK	extern/libgit2/src/transports/smart.h	/^#define GIT_CAP_MULTI_ACK /;"	d
GIT_CAP_MULTI_ACK_DETAILED	extern/libgit2/src/transports/smart.h	/^#define GIT_CAP_MULTI_ACK_DETAILED /;"	d
GIT_CAP_OFS_DELTA	extern/libgit2/src/transports/smart.h	/^#define GIT_CAP_OFS_DELTA /;"	d
GIT_CAP_REPORT_STATUS	extern/libgit2/src/transports/smart.h	/^#define GIT_CAP_REPORT_STATUS /;"	d
GIT_CAP_SIDE_BAND	extern/libgit2/src/transports/smart.h	/^#define GIT_CAP_SIDE_BAND /;"	d
GIT_CAP_SIDE_BAND_64K	extern/libgit2/src/transports/smart.h	/^#define GIT_CAP_SIDE_BAND_64K /;"	d
GIT_CAP_SYMREF	extern/libgit2/src/transports/smart.h	/^#define GIT_CAP_SYMREF /;"	d
GIT_CAP_THIN_PACK	extern/libgit2/src/transports/smart.h	/^#define GIT_CAP_THIN_PACK /;"	d
GIT_CERT_HOSTKEY_LIBSSH2	extern/libgit2/include/git2/cert.h	/^	GIT_CERT_HOSTKEY_LIBSSH2,$/;"	e	enum:git_cert_t
GIT_CERT_NONE	extern/libgit2/include/git2/cert.h	/^	GIT_CERT_NONE,$/;"	e	enum:git_cert_t
GIT_CERT_SSH_MD5	extern/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_MD5 = (1 << 0),$/;"	e	enum:__anon6f6b75620103
GIT_CERT_SSH_SHA1	extern/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_SHA1 = (1 << 1),$/;"	e	enum:__anon6f6b75620103
GIT_CERT_STRARRAY	extern/libgit2/include/git2/cert.h	/^	GIT_CERT_STRARRAY,$/;"	e	enum:git_cert_t
GIT_CERT_X509	extern/libgit2/include/git2/cert.h	/^	GIT_CERT_X509,$/;"	e	enum:git_cert_t
GIT_CHECKOUT_ALLOW_CONFLICTS	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_ALLOW_CONFLICTS = (1u << 4),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_CONFLICT_STYLE_DIFF3	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_CONFLICT_STYLE_DIFF3 = (1u << 21),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_CONFLICT_STYLE_MERGE	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_CONFLICT_STYLE_MERGE = (1u << 20),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH = (1u << 13),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_DONT_OVERWRITE_IGNORED	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_DONT_OVERWRITE_IGNORED = (1u << 19),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_DONT_REMOVE_EXISTING	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_DONT_REMOVE_EXISTING = (1u << 22),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_DONT_UPDATE_INDEX	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_DONT_UPDATE_INDEX = (1u << 8),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_DONT_WRITE_INDEX	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_DONT_WRITE_INDEX = (1u << 23),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_FORCE	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_FORCE = (1u << 1),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_NONE	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NONE = 0, \/**< default is a dry run, no actual updates *\/$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_NOTIFY_ALL	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_ALL       = 0x0FFFFu$/;"	e	enum:__anon4996472a0203
GIT_CHECKOUT_NOTIFY_CONFLICT	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_CONFLICT  = (1u << 0),$/;"	e	enum:__anon4996472a0203
GIT_CHECKOUT_NOTIFY_DIRTY	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_DIRTY     = (1u << 1),$/;"	e	enum:__anon4996472a0203
GIT_CHECKOUT_NOTIFY_IGNORED	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_IGNORED   = (1u << 4),$/;"	e	enum:__anon4996472a0203
GIT_CHECKOUT_NOTIFY_NONE	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_NONE      = 0,$/;"	e	enum:__anon4996472a0203
GIT_CHECKOUT_NOTIFY_UNTRACKED	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_UNTRACKED = (1u << 3),$/;"	e	enum:__anon4996472a0203
GIT_CHECKOUT_NOTIFY_UPDATED	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_UPDATED   = (1u << 2),$/;"	e	enum:__anon4996472a0203
GIT_CHECKOUT_NO_REFRESH	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NO_REFRESH = (1u << 9),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_OPTIONS_INIT	extern/libgit2/include/git2/checkout.h	/^#define GIT_CHECKOUT_OPTIONS_INIT /;"	d
GIT_CHECKOUT_OPTIONS_VERSION	extern/libgit2/include/git2/checkout.h	/^#define GIT_CHECKOUT_OPTIONS_VERSION /;"	d
GIT_CHECKOUT_RECREATE_MISSING	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_RECREATE_MISSING = (1u << 2),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_REMOVE_IGNORED	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_REMOVE_IGNORED = (1u << 6),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_REMOVE_UNTRACKED	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_REMOVE_UNTRACKED = (1u << 5),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_SAFE	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_SAFE = (1u << 0),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_SKIP_LOCKED_DIRECTORIES	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_SKIP_LOCKED_DIRECTORIES = (1u << 18),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_SKIP_UNMERGED	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_SKIP_UNMERGED = (1u << 10),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_UPDATE_ONLY	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_UPDATE_ONLY = (1u << 7),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_UPDATE_SUBMODULES	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_UPDATE_SUBMODULES = (1u << 16),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_UPDATE_SUBMODULES_IF_CHANGED	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_UPDATE_SUBMODULES_IF_CHANGED = (1u << 17),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_USE_OURS	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_USE_OURS = (1u << 11),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT_USE_THEIRS	extern/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_USE_THEIRS = (1u << 12),$/;"	e	enum:__anon4996472a0103
GIT_CHECKOUT__NOTIFY_CONFLICT_TREE	extern/libgit2/src/checkout.h	/^#define GIT_CHECKOUT__NOTIFY_CONFLICT_TREE /;"	d
GIT_CHERRYPICK_FILE_MODE	extern/libgit2/src/cherrypick.c	/^#define GIT_CHERRYPICK_FILE_MODE	/;"	d	file:
GIT_CHERRYPICK_HEAD_FILE	extern/libgit2/src/refs.h	/^#define GIT_CHERRYPICK_HEAD_FILE /;"	d
GIT_CHERRYPICK_OPTIONS_INIT	extern/libgit2/include/git2/cherrypick.h	/^#define GIT_CHERRYPICK_OPTIONS_INIT /;"	d
GIT_CHERRYPICK_OPTIONS_VERSION	extern/libgit2/include/git2/cherrypick.h	/^#define GIT_CHERRYPICK_OPTIONS_VERSION /;"	d
GIT_CLONE_LOCAL	extern/libgit2/include/git2/clone.h	/^	GIT_CLONE_LOCAL,$/;"	e	enum:__anon6cf58d250103
GIT_CLONE_LOCAL_AUTO	extern/libgit2/include/git2/clone.h	/^	GIT_CLONE_LOCAL_AUTO,$/;"	e	enum:__anon6cf58d250103
GIT_CLONE_LOCAL_NO_LINKS	extern/libgit2/include/git2/clone.h	/^	GIT_CLONE_LOCAL_NO_LINKS,$/;"	e	enum:__anon6cf58d250103
GIT_CLONE_NO_LOCAL	extern/libgit2/include/git2/clone.h	/^	GIT_CLONE_NO_LOCAL,$/;"	e	enum:__anon6cf58d250103
GIT_CLONE_OPTIONS_INIT	extern/libgit2/include/git2/clone.h	/^#define GIT_CLONE_OPTIONS_INIT /;"	d
GIT_CLONE_OPTIONS_VERSION	extern/libgit2/include/git2/clone.h	/^#define GIT_CLONE_OPTIONS_VERSION /;"	d
GIT_CNTRL	extern/libgit2/src/wildmatch.c	/^#define GIT_CNTRL /;"	d	file:
GIT_COMMIT_GETTER	extern/libgit2/src/commit.c	/^#define GIT_COMMIT_GETTER(/;"	d	file:
GIT_COMMONDIR_FILE	extern/libgit2/src/repository.c	/^#define GIT_COMMONDIR_FILE /;"	d	file:
GIT_CONFIGMAP_ABBREV	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_ABBREV,           \/* core.abbrev *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_AUTO_CRLF	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_AUTO_CRLF = 0,    \/* core.autocrlf *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_CACHE_MAX	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_CACHE_MAX$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_EOL	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_EOL,              \/* core.eol *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_FALSE	extern/libgit2/include/git2/config.h	/^	GIT_CONFIGMAP_FALSE = 0,$/;"	e	enum:__anonefb3184a0203
GIT_CONFIGMAP_FILEMODE	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_FILEMODE,         \/* core.filemode *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_FSYNCOBJECTFILES	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_FSYNCOBJECTFILES, \/* core.fsyncObjectFiles *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_IGNORECASE	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_IGNORECASE,       \/* core.ignorecase *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_IGNORESTAT	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_IGNORESTAT,       \/* core.ignorestat *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_INT32	extern/libgit2/include/git2/config.h	/^	GIT_CONFIGMAP_INT32,$/;"	e	enum:__anonefb3184a0203
GIT_CONFIGMAP_LOGALLREFUPDATES	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_LOGALLREFUPDATES, \/* core.logallrefupdates *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_NOT_CACHED	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_NOT_CACHED = -1,$/;"	e	enum:__anon05b115930203
GIT_CONFIGMAP_PRECOMPOSE	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_PRECOMPOSE,       \/* core.precomposeunicode *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_PROTECTHFS	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_PROTECTHFS,       \/* core.protectHFS *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_PROTECTNTFS	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_PROTECTNTFS,      \/* core.protectNTFS *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_SAFE_CRLF	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_SAFE_CRLF,		\/* core.safecrlf *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_STRING	extern/libgit2/include/git2/config.h	/^	GIT_CONFIGMAP_STRING$/;"	e	enum:__anonefb3184a0203
GIT_CONFIGMAP_SYMLINKS	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_SYMLINKS,         \/* core.symlinks *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIGMAP_TRUE	extern/libgit2/include/git2/config.h	/^	GIT_CONFIGMAP_TRUE = 1,$/;"	e	enum:__anonefb3184a0203
GIT_CONFIGMAP_TRUSTCTIME	extern/libgit2/src/repository.h	/^	GIT_CONFIGMAP_TRUSTCTIME,       \/* core.trustctime *\/$/;"	e	enum:__anon05b115930103
GIT_CONFIG_BACKEND_INIT	extern/libgit2/include/git2/sys/config.h	/^#define GIT_CONFIG_BACKEND_INIT /;"	d
GIT_CONFIG_BACKEND_VERSION	extern/libgit2/include/git2/sys/config.h	/^#define GIT_CONFIG_BACKEND_VERSION /;"	d
GIT_CONFIG_FILENAME_GLOBAL	extern/libgit2/src/config.h	/^#define GIT_CONFIG_FILENAME_GLOBAL /;"	d
GIT_CONFIG_FILENAME_INREPO	extern/libgit2/src/config.h	/^#define GIT_CONFIG_FILENAME_INREPO /;"	d
GIT_CONFIG_FILENAME_PROGRAMDATA	extern/libgit2/src/config.h	/^#define GIT_CONFIG_FILENAME_PROGRAMDATA /;"	d
GIT_CONFIG_FILENAME_SYSTEM	extern/libgit2/src/config.h	/^#define GIT_CONFIG_FILENAME_SYSTEM /;"	d
GIT_CONFIG_FILENAME_XDG	extern/libgit2/src/config.h	/^#define GIT_CONFIG_FILENAME_XDG /;"	d
GIT_CONFIG_FILE_MODE	extern/libgit2/src/config.h	/^#define GIT_CONFIG_FILE_MODE /;"	d
GIT_CONFIG_HIGHEST_LEVEL	extern/libgit2/include/git2/config.h	/^	GIT_CONFIG_HIGHEST_LEVEL = -1,$/;"	e	enum:__anonefb3184a0103
GIT_CONFIG_LEVEL_APP	extern/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_APP = 6,$/;"	e	enum:__anonefb3184a0103
GIT_CONFIG_LEVEL_GLOBAL	extern/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_GLOBAL = 4,$/;"	e	enum:__anonefb3184a0103
GIT_CONFIG_LEVEL_LOCAL	extern/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_LOCAL = 5,$/;"	e	enum:__anonefb3184a0103
GIT_CONFIG_LEVEL_PROGRAMDATA	extern/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_PROGRAMDATA = 1,$/;"	e	enum:__anonefb3184a0103
GIT_CONFIG_LEVEL_SYSTEM	extern/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_SYSTEM = 2,$/;"	e	enum:__anonefb3184a0103
GIT_CONFIG_LEVEL_XDG	extern/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_XDG = 3,$/;"	e	enum:__anonefb3184a0103
GIT_CONFIG_PARSER_INIT	extern/libgit2/src/config_parse.h	/^#define GIT_CONFIG_PARSER_INIT /;"	d
GIT_CONTAINER_OF	extern/libgit2/src/util.h	/^# define GIT_CONTAINER_OF(/;"	d
GIT_CPDIR_CHMOD_DIRS	extern/libgit2/src/futils.h	/^	GIT_CPDIR_CHMOD_DIRS        = (1u << 4),$/;"	e	enum:__anonce3edc2a0303
GIT_CPDIR_COPY_DOTFILES	extern/libgit2/src/futils.h	/^	GIT_CPDIR_COPY_DOTFILES     = (1u << 2),$/;"	e	enum:__anonce3edc2a0303
GIT_CPDIR_COPY_SYMLINKS	extern/libgit2/src/futils.h	/^	GIT_CPDIR_COPY_SYMLINKS     = (1u << 1),$/;"	e	enum:__anonce3edc2a0303
GIT_CPDIR_CREATE_EMPTY_DIRS	extern/libgit2/src/futils.h	/^	GIT_CPDIR_CREATE_EMPTY_DIRS = (1u << 0),$/;"	e	enum:__anonce3edc2a0303
GIT_CPDIR_LINK_FILES	extern/libgit2/src/futils.h	/^	GIT_CPDIR_LINK_FILES        = (1u << 6),$/;"	e	enum:__anonce3edc2a0303
GIT_CPDIR_OVERWRITE	extern/libgit2/src/futils.h	/^	GIT_CPDIR_OVERWRITE         = (1u << 3),$/;"	e	enum:__anonce3edc2a0303
GIT_CPDIR_SIMPLE_TO_MODE	extern/libgit2/src/futils.h	/^	GIT_CPDIR_SIMPLE_TO_MODE    = (1u << 5),$/;"	e	enum:__anonce3edc2a0303
GIT_CPDIR__MKDIR_DONE_FOR_TO_ROOT	extern/libgit2/src/futils.c	/^#define GIT_CPDIR__MKDIR_DONE_FOR_TO_ROOT /;"	d	file:
GIT_CREDTYPE_DEFAULT	extern/libgit2/include/git2/cred.h	/^	GIT_CREDTYPE_DEFAULT = (1u << 3),$/;"	e	enum:__anon704f4ef20103
GIT_CREDTYPE_SSH_CUSTOM	extern/libgit2/include/git2/cred.h	/^	GIT_CREDTYPE_SSH_CUSTOM = (1u << 2),$/;"	e	enum:__anon704f4ef20103
GIT_CREDTYPE_SSH_INTERACTIVE	extern/libgit2/include/git2/cred.h	/^	GIT_CREDTYPE_SSH_INTERACTIVE = (1u << 4),$/;"	e	enum:__anon704f4ef20103
GIT_CREDTYPE_SSH_KEY	extern/libgit2/include/git2/cred.h	/^	GIT_CREDTYPE_SSH_KEY = (1u << 1),$/;"	e	enum:__anon704f4ef20103
GIT_CREDTYPE_SSH_MEMORY	extern/libgit2/include/git2/cred.h	/^	GIT_CREDTYPE_SSH_MEMORY = (1u << 6),$/;"	e	enum:__anon704f4ef20103
GIT_CREDTYPE_USERNAME	extern/libgit2/include/git2/cred.h	/^	GIT_CREDTYPE_USERNAME = (1u << 5),$/;"	e	enum:__anon704f4ef20103
GIT_CREDTYPE_USERPASS_PLAINTEXT	extern/libgit2/include/git2/cred.h	/^	GIT_CREDTYPE_USERPASS_PLAINTEXT = (1u << 0),$/;"	e	enum:__anon704f4ef20103
GIT_CRLF_AUTO	extern/libgit2/src/crlf.c	/^	GIT_CRLF_AUTO,$/;"	e	enum:__anon5fed15950103	file:
GIT_CRLF_AUTO_CRLF	extern/libgit2/src/crlf.c	/^	GIT_CRLF_AUTO_CRLF,$/;"	e	enum:__anon5fed15950103	file:
GIT_CRLF_AUTO_INPUT	extern/libgit2/src/crlf.c	/^	GIT_CRLF_AUTO_INPUT,$/;"	e	enum:__anon5fed15950103	file:
GIT_CRLF_BINARY	extern/libgit2/src/crlf.c	/^	GIT_CRLF_BINARY,$/;"	e	enum:__anon5fed15950103	file:
GIT_CRLF_TEXT	extern/libgit2/src/crlf.c	/^	GIT_CRLF_TEXT,$/;"	e	enum:__anon5fed15950103	file:
GIT_CRLF_TEXT_CRLF	extern/libgit2/src/crlf.c	/^	GIT_CRLF_TEXT_CRLF,$/;"	e	enum:__anon5fed15950103	file:
GIT_CRLF_TEXT_INPUT	extern/libgit2/src/crlf.c	/^	GIT_CRLF_TEXT_INPUT,$/;"	e	enum:__anon5fed15950103	file:
GIT_CRLF_UNDEFINED	extern/libgit2/src/crlf.c	/^	GIT_CRLF_UNDEFINED,$/;"	e	enum:__anon5fed15950103	file:
GIT_CVAR_FALSE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_CVAR_FALSE /;"	d
GIT_CVAR_INT32	extern/libgit2/include/git2/deprecated.h	/^#define GIT_CVAR_INT32 /;"	d
GIT_CVAR_STRING	extern/libgit2/include/git2/deprecated.h	/^#define GIT_CVAR_STRING /;"	d
GIT_CVAR_TRUE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_CVAR_TRUE /;"	d
GIT_DATE_RFC2822_SZ	extern/libgit2/src/util.h	/^#define GIT_DATE_RFC2822_SZ /;"	d
GIT_DEBUG_POOL	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_DEBUG_POOL 1)$/;"	v
GIT_DEFAULT_CERT_LOCATION	extern/libgit2/src/streams/mbedtls.c	/^#define GIT_DEFAULT_CERT_LOCATION /;"	d	file:
GIT_DEFAULT_PORT	extern/libgit2/include/git2/net.h	/^#define GIT_DEFAULT_PORT /;"	d
GIT_DELTA_ADDED	extern/libgit2/include/git2/diff.h	/^	GIT_DELTA_ADDED = 1,	   \/**< entry does not exist in old version *\/$/;"	e	enum:__anon72022fed0303
GIT_DELTA_CONFLICTED	extern/libgit2/include/git2/diff.h	/^	GIT_DELTA_CONFLICTED = 10, \/**< entry in the index is conflicted *\/$/;"	e	enum:__anon72022fed0303
GIT_DELTA_COPIED	extern/libgit2/include/git2/diff.h	/^	GIT_DELTA_COPIED = 5,      \/**< entry was copied from another old entry *\/$/;"	e	enum:__anon72022fed0303
GIT_DELTA_DELETED	extern/libgit2/include/git2/diff.h	/^	GIT_DELTA_DELETED = 2,	   \/**< entry does not exist in new version *\/$/;"	e	enum:__anon72022fed0303
GIT_DELTA_IGNORED	extern/libgit2/include/git2/diff.h	/^	GIT_DELTA_IGNORED = 6,     \/**< entry is ignored item in workdir *\/$/;"	e	enum:__anon72022fed0303
GIT_DELTA_MODIFIED	extern/libgit2/include/git2/diff.h	/^	GIT_DELTA_MODIFIED = 3,    \/**< entry content changed between old and new *\/$/;"	e	enum:__anon72022fed0303
GIT_DELTA_RENAMED	extern/libgit2/include/git2/diff.h	/^	GIT_DELTA_RENAMED = 4,     \/**< entry was renamed between old and new *\/$/;"	e	enum:__anon72022fed0303
GIT_DELTA_SIZE_MIN	extern/libgit2/src/delta.h	/^#define GIT_DELTA_SIZE_MIN	/;"	d
GIT_DELTA_TYPECHANGE	extern/libgit2/include/git2/diff.h	/^	GIT_DELTA_TYPECHANGE = 8,  \/**< type of entry changed between old and new *\/$/;"	e	enum:__anon72022fed0303
GIT_DELTA_UNMODIFIED	extern/libgit2/include/git2/diff.h	/^	GIT_DELTA_UNMODIFIED = 0,  \/**< no changes *\/$/;"	e	enum:__anon72022fed0303
GIT_DELTA_UNREADABLE	extern/libgit2/include/git2/diff.h	/^	GIT_DELTA_UNREADABLE = 9,  \/**< entry is unreadable *\/$/;"	e	enum:__anon72022fed0303
GIT_DELTA_UNTRACKED	extern/libgit2/include/git2/diff.h	/^	GIT_DELTA_UNTRACKED = 7,   \/**< entry is untracked item in workdir *\/$/;"	e	enum:__anon72022fed0303
GIT_DEPRECATED	extern/libgit2/include/git2/common.h	/^# define GIT_DEPRECATED(/;"	d
GIT_DESCRIBE_ALL	extern/libgit2/include/git2/describe.h	/^	GIT_DESCRIBE_ALL,$/;"	e	enum:__anoneba207f50103
GIT_DESCRIBE_DEFAULT	extern/libgit2/include/git2/describe.h	/^	GIT_DESCRIBE_DEFAULT,$/;"	e	enum:__anoneba207f50103
GIT_DESCRIBE_DEFAULT_ABBREVIATED_SIZE	extern/libgit2/include/git2/describe.h	/^#define GIT_DESCRIBE_DEFAULT_ABBREVIATED_SIZE /;"	d
GIT_DESCRIBE_DEFAULT_MAX_CANDIDATES_TAGS	extern/libgit2/include/git2/describe.h	/^#define GIT_DESCRIBE_DEFAULT_MAX_CANDIDATES_TAGS /;"	d
GIT_DESCRIBE_FORMAT_OPTIONS_INIT	extern/libgit2/include/git2/describe.h	/^#define GIT_DESCRIBE_FORMAT_OPTIONS_INIT /;"	d
GIT_DESCRIBE_FORMAT_OPTIONS_VERSION	extern/libgit2/include/git2/describe.h	/^#define GIT_DESCRIBE_FORMAT_OPTIONS_VERSION /;"	d
GIT_DESCRIBE_OPTIONS_INIT	extern/libgit2/include/git2/describe.h	/^#define GIT_DESCRIBE_OPTIONS_INIT /;"	d
GIT_DESCRIBE_OPTIONS_VERSION	extern/libgit2/include/git2/describe.h	/^#define GIT_DESCRIBE_OPTIONS_VERSION /;"	d
GIT_DESCRIBE_TAGS	extern/libgit2/include/git2/describe.h	/^	GIT_DESCRIBE_TAGS,$/;"	e	enum:__anoneba207f50103
GIT_DESC_CONTENT	extern/libgit2/src/repo_template.h	/^#define GIT_DESC_CONTENT /;"	d
GIT_DESC_FILE	extern/libgit2/src/repo_template.h	/^#define GIT_DESC_FILE /;"	d
GIT_DESC_MODE	extern/libgit2/src/repo_template.h	/^#define GIT_DESC_MODE /;"	d
GIT_DIFFCAPS_HAS_SYMLINKS	extern/libgit2/src/diff_generate.h	/^	GIT_DIFFCAPS_HAS_SYMLINKS     = (1 << 0), \/* symlinks on platform? *\/$/;"	e	enum:__anon047407f60103
GIT_DIFFCAPS_IGNORE_STAT	extern/libgit2/src/diff_generate.h	/^	GIT_DIFFCAPS_IGNORE_STAT      = (1 << 1), \/* use stat? *\/$/;"	e	enum:__anon047407f60103
GIT_DIFFCAPS_TRUST_CTIME	extern/libgit2/src/diff_generate.h	/^	GIT_DIFFCAPS_TRUST_CTIME      = (1 << 3), \/* use st_ctime? *\/$/;"	e	enum:__anon047407f60103
GIT_DIFFCAPS_TRUST_MODE_BITS	extern/libgit2/src/diff_generate.h	/^	GIT_DIFFCAPS_TRUST_MODE_BITS  = (1 << 2), \/* use st_mode? *\/$/;"	e	enum:__anon047407f60103
GIT_DIFFCAPS_USE_DEV	extern/libgit2/src/diff_generate.h	/^	GIT_DIFFCAPS_USE_DEV          = (1 << 4), \/* use st_dev? *\/$/;"	e	enum:__anon047407f60103
GIT_DIFF_BINARY_DELTA	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_BINARY_DELTA,$/;"	e	enum:__anon72022fed0703
GIT_DIFF_BINARY_LITERAL	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_BINARY_LITERAL,$/;"	e	enum:__anon72022fed0703
GIT_DIFF_BINARY_NONE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_BINARY_NONE,$/;"	e	enum:__anon72022fed0703
GIT_DIFF_BREAK_REWRITES	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_BREAK_REWRITES = (1u << 5),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY  = (1u << 15),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_DISABLE_PATHSPEC_MATCH	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_DISABLE_PATHSPEC_MATCH = (1u << 12),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_ENABLE_FAST_UNTRACKED_DIRS	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_ENABLE_FAST_UNTRACKED_DIRS = (1u << 14),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_FILE_CONTENT_SRC__BLOB	extern/libgit2/src/diff_file.h	/^#define GIT_DIFF_FILE_CONTENT_SRC__BLOB(/;"	d
GIT_DIFF_FILE_CONTENT_SRC__BUF	extern/libgit2/src/diff_file.h	/^#define GIT_DIFF_FILE_CONTENT_SRC__BUF(/;"	d
GIT_DIFF_FIND_ALL	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_ALL = (0x0ff),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_AND_BREAK_REWRITES	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_AND_BREAK_REWRITES =$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_BY_CONFIG	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_BY_CONFIG = 0,$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_COPIES	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_COPIES = (1u << 2),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED = (1u << 3),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE = (1u << 13),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_EXACT_MATCH_ONLY	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_EXACT_MATCH_ONLY = (1u << 14),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_FOR_UNTRACKED	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_FOR_UNTRACKED = (1u << 6),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE = 0,$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_IGNORE_WHITESPACE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_IGNORE_WHITESPACE = (1u << 12),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_OPTIONS_INIT	extern/libgit2/include/git2/diff.h	/^#define GIT_DIFF_FIND_OPTIONS_INIT /;"	d
GIT_DIFF_FIND_OPTIONS_VERSION	extern/libgit2/include/git2/diff.h	/^#define GIT_DIFF_FIND_OPTIONS_VERSION /;"	d
GIT_DIFF_FIND_REMOVE_UNMODIFIED	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_REMOVE_UNMODIFIED = (1u << 16),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_RENAMES	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_RENAMES = (1u << 0),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_RENAMES_FROM_REWRITES	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_RENAMES_FROM_REWRITES = (1u << 1),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FIND_REWRITES	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_REWRITES = (1u << 4),$/;"	e	enum:__anon72022fed0d03
GIT_DIFF_FLAG_BINARY	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FLAG_BINARY     = (1u << 0), \/**< file(s) treated as binary data *\/$/;"	e	enum:__anon72022fed0203
GIT_DIFF_FLAG_EXISTS	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FLAG_EXISTS     = (1u << 3), \/**< file exists at this side of the delta *\/$/;"	e	enum:__anon72022fed0203
GIT_DIFF_FLAG_NOT_BINARY	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FLAG_NOT_BINARY = (1u << 1), \/**< file(s) treated as text data *\/$/;"	e	enum:__anon72022fed0203
GIT_DIFF_FLAG_VALID_ID	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FLAG_VALID_ID   = (1u << 2), \/**< `id` value is known correct *\/$/;"	e	enum:__anon72022fed0203
GIT_DIFF_FLAG__CLEAR_INTERNAL	extern/libgit2/src/diff_generate.h	/^#define GIT_DIFF_FLAG__CLEAR_INTERNAL(/;"	d
GIT_DIFF_FLAG__FREE_BLOB	extern/libgit2/src/diff_generate.h	/^	GIT_DIFF_FLAG__FREE_BLOB  = (1 << 11), \/* release the blob when done *\/$/;"	e	enum:__anon047407f60203
GIT_DIFF_FLAG__FREE_DATA	extern/libgit2/src/diff_generate.h	/^	GIT_DIFF_FLAG__FREE_DATA  = (1 << 8),  \/* internal file data is allocated *\/$/;"	e	enum:__anon047407f60203
GIT_DIFF_FLAG__FREE_PATH	extern/libgit2/src/diff_generate.h	/^	GIT_DIFF_FLAG__FREE_PATH  = (1 << 7),  \/* `path` is allocated memory *\/$/;"	e	enum:__anon047407f60203
GIT_DIFF_FLAG__HAS_SELF_SIMILARITY	extern/libgit2/src/diff_generate.h	/^	GIT_DIFF_FLAG__HAS_SELF_SIMILARITY = (1 << 20),$/;"	e	enum:__anon047407f60203
GIT_DIFF_FLAG__IS_RENAME_SOURCE	extern/libgit2/src/diff_generate.h	/^	GIT_DIFF_FLAG__IS_RENAME_SOURCE = (1 << 19),$/;"	e	enum:__anon047407f60203
GIT_DIFF_FLAG__IS_RENAME_TARGET	extern/libgit2/src/diff_generate.h	/^	GIT_DIFF_FLAG__IS_RENAME_TARGET = (1 << 18),$/;"	e	enum:__anon047407f60203
GIT_DIFF_FLAG__LOADED	extern/libgit2/src/diff_generate.h	/^	GIT_DIFF_FLAG__LOADED     = (1 << 12), \/* file data has been loaded *\/$/;"	e	enum:__anon047407f60203
GIT_DIFF_FLAG__NO_DATA	extern/libgit2/src/diff_generate.h	/^	GIT_DIFF_FLAG__NO_DATA    = (1 << 10), \/* file data should not be loaded *\/$/;"	e	enum:__anon047407f60203
GIT_DIFF_FLAG__TO_DELETE	extern/libgit2/src/diff_generate.h	/^	GIT_DIFF_FLAG__TO_DELETE  = (1 << 16), \/* delete entry during rename det. *\/$/;"	e	enum:__anon047407f60203
GIT_DIFF_FLAG__TO_SPLIT	extern/libgit2/src/diff_generate.h	/^	GIT_DIFF_FLAG__TO_SPLIT   = (1 << 17), \/* split entry during rename det. *\/$/;"	e	enum:__anon047407f60203
GIT_DIFF_FLAG__UNMAP_DATA	extern/libgit2/src/diff_generate.h	/^	GIT_DIFF_FLAG__UNMAP_DATA = (1 << 9),  \/* internal file data is mmap'ed *\/$/;"	e	enum:__anon047407f60203
GIT_DIFF_FORCE_BINARY	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORCE_BINARY = (1u << 21),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_FORCE_TEXT	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORCE_TEXT = (1u << 20),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_FORMAT_EMAIL_EXCLUDE_SUBJECT_PATCH_MARKER	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_EMAIL_EXCLUDE_SUBJECT_PATCH_MARKER = (1 << 0),$/;"	e	enum:__anon72022fed1203
GIT_DIFF_FORMAT_EMAIL_NONE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_EMAIL_NONE = 0,$/;"	e	enum:__anon72022fed1203
GIT_DIFF_FORMAT_EMAIL_OPTIONS_INIT	extern/libgit2/include/git2/diff.h	/^#define GIT_DIFF_FORMAT_EMAIL_OPTIONS_INIT /;"	d
GIT_DIFF_FORMAT_EMAIL_OPTIONS_VERSION	extern/libgit2/include/git2/diff.h	/^#define GIT_DIFF_FORMAT_EMAIL_OPTIONS_VERSION /;"	d
GIT_DIFF_FORMAT_NAME_ONLY	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_NAME_ONLY    = 4u, \/**< like git diff --name-only *\/$/;"	e	enum:__anon72022fed1003
GIT_DIFF_FORMAT_NAME_STATUS	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_NAME_STATUS  = 5u, \/**< like git diff --name-status *\/$/;"	e	enum:__anon72022fed1003
GIT_DIFF_FORMAT_PATCH	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_PATCH        = 1u, \/**< full git diff *\/$/;"	e	enum:__anon72022fed1003
GIT_DIFF_FORMAT_PATCH_HEADER	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_PATCH_HEADER = 2u, \/**< just the file headers of patch *\/$/;"	e	enum:__anon72022fed1003
GIT_DIFF_FORMAT_RAW	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_RAW          = 3u, \/**< like git diff --raw *\/$/;"	e	enum:__anon72022fed1003
GIT_DIFF_HUNK_HEADER_SIZE	extern/libgit2/include/git2/diff.h	/^#define GIT_DIFF_HUNK_HEADER_SIZE	/;"	d
GIT_DIFF_IGNORE_CASE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_CASE = (1u << 10),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_IGNORE_FILEMODE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_FILEMODE = (1u << 8),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_IGNORE_SUBMODULES	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_SUBMODULES = (1u << 9),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_IGNORE_WHITESPACE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_WHITESPACE = (1u << 22),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_IGNORE_WHITESPACE_CHANGE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_WHITESPACE_CHANGE = (1u << 23),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_IGNORE_WHITESPACE_EOL	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_WHITESPACE_EOL = (1u << 24),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_INCLUDE_CASECHANGE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_CASECHANGE = (1u << 11),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_INCLUDE_IGNORED	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_IGNORED = (1u << 1),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_INCLUDE_TYPECHANGE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_TYPECHANGE = (1u << 6),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_INCLUDE_TYPECHANGE_TREES	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_TYPECHANGE_TREES = (1u << 7),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_INCLUDE_UNMODIFIED	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_UNMODIFIED = (1u << 5),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_INCLUDE_UNREADABLE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_UNREADABLE = (1u << 16),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_INCLUDE_UNREADABLE_AS_UNTRACKED	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_UNREADABLE_AS_UNTRACKED = (1u << 17),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_INCLUDE_UNTRACKED	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_UNTRACKED = (1u << 3),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_INDENT_HEURISTIC	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_INDENT_HEURISTIC = (1u << 18),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_LINE_ADDITION	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_ADDITION  = '+',$/;"	e	enum:__anon72022fed0b03
GIT_DIFF_LINE_ADD_EOFNL	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_ADD_EOFNL = '>',     \/**< Old has no LF at end, new does *\/$/;"	e	enum:__anon72022fed0b03
GIT_DIFF_LINE_BINARY	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_BINARY    = 'B' \/**< For "Binary files x and y differ" *\/$/;"	e	enum:__anon72022fed0b03
GIT_DIFF_LINE_CONTEXT	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_CONTEXT   = ' ',$/;"	e	enum:__anon72022fed0b03
GIT_DIFF_LINE_CONTEXT_EOFNL	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_CONTEXT_EOFNL = '=', \/**< Both files have no LF at end *\/$/;"	e	enum:__anon72022fed0b03
GIT_DIFF_LINE_DELETION	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_DELETION  = '-',$/;"	e	enum:__anon72022fed0b03
GIT_DIFF_LINE_DEL_EOFNL	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_DEL_EOFNL = '<',     \/**< Old has LF at end, new does not *\/$/;"	e	enum:__anon72022fed0b03
GIT_DIFF_LINE_FILE_HDR	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_FILE_HDR  = 'F',$/;"	e	enum:__anon72022fed0b03
GIT_DIFF_LINE_HUNK_HDR	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_HUNK_HDR  = 'H',$/;"	e	enum:__anon72022fed0b03
GIT_DIFF_MINIMAL	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_MINIMAL = (1u << 29),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_NORMAL	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_NORMAL = 0,$/;"	e	enum:__anon72022fed0103
GIT_DIFF_OPTIONS_INIT	extern/libgit2/include/git2/diff.h	/^#define GIT_DIFF_OPTIONS_INIT /;"	d
GIT_DIFF_OPTIONS_VERSION	extern/libgit2/include/git2/diff.h	/^#define GIT_DIFF_OPTIONS_VERSION /;"	d
GIT_DIFF_PATCHID_OPTIONS_INIT	extern/libgit2/include/git2/diff.h	/^#define GIT_DIFF_PATCHID_OPTIONS_INIT /;"	d
GIT_DIFF_PATCHID_OPTIONS_VERSION	extern/libgit2/include/git2/diff.h	/^#define GIT_DIFF_PATCHID_OPTIONS_VERSION /;"	d
GIT_DIFF_PATIENCE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_PATIENCE = (1u << 28),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_PERFDATA_INIT	extern/libgit2/include/git2/sys/diff.h	/^#define GIT_DIFF_PERFDATA_INIT /;"	d
GIT_DIFF_PERFDATA_VERSION	extern/libgit2/include/git2/sys/diff.h	/^#define GIT_DIFF_PERFDATA_VERSION /;"	d
GIT_DIFF_RECURSE_IGNORED_DIRS	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_RECURSE_IGNORED_DIRS = (1u << 2),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_RECURSE_UNTRACKED_DIRS	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_RECURSE_UNTRACKED_DIRS = (1u << 4),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_REVERSE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_REVERSE = (1u << 0),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_SHOW_BINARY	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_SHOW_BINARY = (1u << 30),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_SHOW_UNMODIFIED	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_SHOW_UNMODIFIED = (1u << 26),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_SHOW_UNTRACKED_CONTENT	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_SHOW_UNTRACKED_CONTENT = (1u << 25),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_SKIP_BINARY_CHECK	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_SKIP_BINARY_CHECK = (1u << 13),$/;"	e	enum:__anon72022fed0103
GIT_DIFF_STATS_FULL	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_STATS_FULL = (1u << 0),$/;"	e	enum:__anon72022fed1103
GIT_DIFF_STATS_INCLUDE_SUMMARY	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_STATS_INCLUDE_SUMMARY = (1u << 3),$/;"	e	enum:__anon72022fed1103
GIT_DIFF_STATS_NONE	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_STATS_NONE = 0,$/;"	e	enum:__anon72022fed1103
GIT_DIFF_STATS_NUMBER	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_STATS_NUMBER = (1u << 2),$/;"	e	enum:__anon72022fed1103
GIT_DIFF_STATS_SHORT	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_STATS_SHORT = (1u << 1),$/;"	e	enum:__anon72022fed1103
GIT_DIFF_TYPE_GENERATED	extern/libgit2/src/diff.h	/^	GIT_DIFF_TYPE_GENERATED = 1,$/;"	e	enum:__anon619c176c0103
GIT_DIFF_TYPE_PARSED	extern/libgit2/src/diff.h	/^	GIT_DIFF_TYPE_PARSED = 2,$/;"	e	enum:__anon619c176c0103
GIT_DIFF_TYPE_UNKNOWN	extern/libgit2/src/diff.h	/^	GIT_DIFF_TYPE_UNKNOWN = 0,$/;"	e	enum:__anon619c176c0103
GIT_DIFF_UPDATE_INDEX	extern/libgit2/include/git2/diff.h	/^	GIT_DIFF_UPDATE_INDEX = (1u << 15),$/;"	e	enum:__anon72022fed0103
GIT_DIFF__VERBOSE	extern/libgit2/src/diff_generate.h	/^#define GIT_DIFF__VERBOSE /;"	d
GIT_DIGIT	extern/libgit2/src/wildmatch.c	/^#define GIT_DIGIT /;"	d	file:
GIT_DIR	extern/libgit2/src/repository.h	/^#define GIT_DIR /;"	d
GIT_DIRECTION_FETCH	extern/libgit2/include/git2/net.h	/^	GIT_DIRECTION_FETCH = 0,$/;"	e	enum:__anon51bacafb0103
GIT_DIRECTION_PUSH	extern/libgit2/include/git2/net.h	/^	GIT_DIRECTION_PUSH  = 1$/;"	e	enum:__anon51bacafb0103
GIT_DIR_FLAG_FALSE	extern/libgit2/src/attr_file.h	/^typedef enum { GIT_DIR_FLAG_TRUE = 1, GIT_DIR_FLAG_FALSE = 0, GIT_DIR_FLAG_UNKNOWN = -1 } git_di/;"	e	enum:__anon32d629ad0a03
GIT_DIR_FLAG_TRUE	extern/libgit2/src/attr_file.h	/^typedef enum { GIT_DIR_FLAG_TRUE = 1, GIT_DIR_FLAG_FALSE = 0, GIT_DIR_FLAG_UNKNOWN = -1 } git_di/;"	e	enum:__anon32d629ad0a03
GIT_DIR_FLAG_UNKNOWN	extern/libgit2/src/attr_file.h	/^typedef enum { GIT_DIR_FLAG_TRUE = 1, GIT_DIR_FLAG_FALSE = 0, GIT_DIR_FLAG_UNKNOWN = -1 } git_di/;"	e	enum:__anon32d629ad0a03
GIT_DIR_MODE	extern/libgit2/src/repository.h	/^#define GIT_DIR_MODE /;"	d
GIT_DIR_SHORTNAME	extern/libgit2/src/repository.h	/^#define GIT_DIR_SHORTNAME /;"	d
GIT_EAMBIGUOUS	extern/libgit2/include/git2/errors.h	/^	GIT_EAMBIGUOUS = -5,		\/**< More than one object matches *\/$/;"	e	enum:__anonb92219d10103
GIT_EAPPLIED	extern/libgit2/include/git2/errors.h	/^	GIT_EAPPLIED        = -18,	\/**< Patch\/merge has already been applied *\/$/;"	e	enum:__anonb92219d10103
GIT_EAPPLYFAIL	extern/libgit2/include/git2/errors.h	/^	GIT_EAPPLYFAIL      = -35,	\/**< Patch application failed *\/$/;"	e	enum:__anonb92219d10103
GIT_EAUTH	extern/libgit2/include/git2/errors.h	/^	GIT_EAUTH           = -16,      \/**< Authentication error *\/$/;"	e	enum:__anonb92219d10103
GIT_EBAREREPO	extern/libgit2/include/git2/errors.h	/^	GIT_EBAREREPO       =  -8,	\/**< Operation not allowed on bare repository *\/$/;"	e	enum:__anonb92219d10103
GIT_EBUFS	extern/libgit2/include/git2/errors.h	/^	GIT_EBUFS      = -6,		\/**< Output buffer too short to hold data *\/$/;"	e	enum:__anonb92219d10103
GIT_ECERTIFICATE	extern/libgit2/include/git2/errors.h	/^	GIT_ECERTIFICATE    = -17,      \/**< Server certificate is invalid *\/$/;"	e	enum:__anonb92219d10103
GIT_ECONFLICT	extern/libgit2/include/git2/errors.h	/^	GIT_ECONFLICT       = -13,	\/**< Checkout conflicts prevented operation *\/$/;"	e	enum:__anonb92219d10103
GIT_EDIRECTORY	extern/libgit2/include/git2/errors.h	/^	GIT_EDIRECTORY      = -23,      \/**< The operation is not valid for a directory *\/$/;"	e	enum:__anonb92219d10103
GIT_EEOF	extern/libgit2/include/git2/errors.h	/^	GIT_EEOF            = -20,      \/**< Unexpected EOF *\/$/;"	e	enum:__anonb92219d10103
GIT_EEXISTS	extern/libgit2/include/git2/errors.h	/^	GIT_EEXISTS    = -4,		\/**< Object exists preventing operation *\/$/;"	e	enum:__anonb92219d10103
GIT_EINDEXDIRTY	extern/libgit2/include/git2/errors.h	/^	GIT_EINDEXDIRTY     = -34,	\/**< Unsaved changes in the index would be overwritten *\/$/;"	e	enum:__anonb92219d10103
GIT_EINVALID	extern/libgit2/include/git2/errors.h	/^	GIT_EINVALID        = -21,      \/**< Invalid operation or input *\/$/;"	e	enum:__anonb92219d10103
GIT_EINVALIDSPEC	extern/libgit2/include/git2/errors.h	/^	GIT_EINVALIDSPEC    = -12,	\/**< Name\/ref spec was not in a valid format *\/$/;"	e	enum:__anonb92219d10103
GIT_ELOCKED	extern/libgit2/include/git2/errors.h	/^	GIT_ELOCKED         = -14,	\/**< Lock file prevented operation *\/$/;"	e	enum:__anonb92219d10103
GIT_EMERGECONFLICT	extern/libgit2/include/git2/errors.h	/^	GIT_EMERGECONFLICT  = -24,	\/**< A merge conflict exists and cannot continue *\/$/;"	e	enum:__anonb92219d10103
GIT_EMISMATCH	extern/libgit2/include/git2/errors.h	/^	GIT_EMISMATCH       = -33,	\/**< Hashsum mismatch in object *\/$/;"	e	enum:__anonb92219d10103
GIT_EMODIFIED	extern/libgit2/include/git2/errors.h	/^	GIT_EMODIFIED       = -15,	\/**< Reference value does not match expected *\/$/;"	e	enum:__anonb92219d10103
GIT_END_DECL	extern/libgit2/include/git2/common.h	/^# define GIT_END_DECL	/;"	d
GIT_ENONFASTFORWARD	extern/libgit2/include/git2/errors.h	/^	GIT_ENONFASTFORWARD = -11,	\/**< Reference was not fast-forwardable *\/$/;"	e	enum:__anonb92219d10103
GIT_ENOTFOUND	extern/libgit2/include/git2/errors.h	/^	GIT_ENOTFOUND  = -3,		\/**< Requested object could not be found *\/$/;"	e	enum:__anonb92219d10103
GIT_EOL_CRLF	extern/libgit2/src/repository.h	/^	GIT_EOL_CRLF = 1,$/;"	e	enum:__anon05b115930203
GIT_EOL_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_EOL_DEFAULT = GIT_EOL_NATIVE,$/;"	e	enum:__anon05b115930203
GIT_EOL_LF	extern/libgit2/src/repository.h	/^	GIT_EOL_LF = 2,$/;"	e	enum:__anon05b115930203
GIT_EOL_NATIVE	extern/libgit2/src/repository.h	/^	GIT_EOL_NATIVE = GIT_EOL_CRLF,$/;"	e	enum:__anon05b115930203
GIT_EOL_UNSET	extern/libgit2/src/repository.h	/^	GIT_EOL_UNSET = 0,$/;"	e	enum:__anon05b115930203
GIT_EPEEL	extern/libgit2/include/git2/errors.h	/^	GIT_EPEEL           = -19,      \/**< The requested peel operation is not possible *\/$/;"	e	enum:__anonb92219d10103
GIT_ERROR	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR      = -1,		\/**< Generic error *\/$/;"	e	enum:__anonb92219d10103
GIT_ERROR_CALLBACK	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_CALLBACK,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_CHECKOUT	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_CHECKOUT,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_CHECK_ALLOC	extern/libgit2/src/common.h	/^#define GIT_ERROR_CHECK_ALLOC(/;"	d
GIT_ERROR_CHECK_ALLOC_ADD	extern/libgit2/src/common.h	/^#define GIT_ERROR_CHECK_ALLOC_ADD(/;"	d
GIT_ERROR_CHECK_ALLOC_ADD3	extern/libgit2/src/common.h	/^#define GIT_ERROR_CHECK_ALLOC_ADD3(/;"	d
GIT_ERROR_CHECK_ALLOC_ADD4	extern/libgit2/src/common.h	/^#define GIT_ERROR_CHECK_ALLOC_ADD4(/;"	d
GIT_ERROR_CHECK_ALLOC_ADD5	extern/libgit2/src/common.h	/^#define GIT_ERROR_CHECK_ALLOC_ADD5(/;"	d
GIT_ERROR_CHECK_ALLOC_BUF	extern/libgit2/src/common.h	/^#define GIT_ERROR_CHECK_ALLOC_BUF(/;"	d
GIT_ERROR_CHECK_ALLOC_MULTIPLY	extern/libgit2/src/common.h	/^#define GIT_ERROR_CHECK_ALLOC_MULTIPLY(/;"	d
GIT_ERROR_CHECK_ARRAY	extern/libgit2/src/array.h	/^#define GIT_ERROR_CHECK_ARRAY(/;"	d
GIT_ERROR_CHECK_BLOBSIZE	extern/libgit2/src/blob.h	/^#define GIT_ERROR_CHECK_BLOBSIZE(/;"	d
GIT_ERROR_CHECK_ERROR	extern/libgit2/src/common.h	/^#define GIT_ERROR_CHECK_ERROR(/;"	d
GIT_ERROR_CHECK_VERSION	extern/libgit2/src/common.h	/^#define GIT_ERROR_CHECK_VERSION(/;"	d
GIT_ERROR_CHERRYPICK	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_CHERRYPICK,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_CONFIG	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_CONFIG,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_DESCRIBE	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_DESCRIBE,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_FETCHHEAD	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_FETCHHEAD,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_FILESYSTEM	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_FILESYSTEM,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_FILTER	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_FILTER,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_INDEX	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_INDEX,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_INDEXER	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_INDEXER,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_INVALID	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_INVALID,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_MERGE	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_MERGE,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_NET	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_NET,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_NOMEMORY	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_NOMEMORY,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_NONE	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_NONE = 0,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_OBJECT	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_OBJECT,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_ODB	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_ODB,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_OS	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_OS,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_PATCH	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_PATCH,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_REBASE	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_REBASE,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_REFERENCE	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_REFERENCE,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_REGEX	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_REGEX,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_REPOSITORY	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_REPOSITORY,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_REVERT	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_REVERT,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_SHA1	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_SHA1$/;"	e	enum:__anonb92219d10303
GIT_ERROR_SSH	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_SSH,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_SSL	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_SSL,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_STASH	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_STASH,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_SUBMODULE	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_SUBMODULE,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_TAG	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_TAG,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_THREAD	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_THREAD,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_TREE	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_TREE,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_WORKTREE	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_WORKTREE,$/;"	e	enum:__anonb92219d10303
GIT_ERROR_ZLIB	extern/libgit2/include/git2/errors.h	/^	GIT_ERROR_ZLIB,$/;"	e	enum:__anonb92219d10303
GIT_EUNBORNBRANCH	extern/libgit2/include/git2/errors.h	/^	GIT_EUNBORNBRANCH   =  -9,	\/**< HEAD refers to branch with no commits *\/$/;"	e	enum:__anonb92219d10103
GIT_EUNCOMMITTED	extern/libgit2/include/git2/errors.h	/^	GIT_EUNCOMMITTED    = -22,	\/**< Uncommitted changes in index prevented operation *\/$/;"	e	enum:__anonb92219d10103
GIT_EUNMERGED	extern/libgit2/include/git2/errors.h	/^	GIT_EUNMERGED       = -10,	\/**< Merge in progress prevented operation *\/$/;"	e	enum:__anonb92219d10103
GIT_EUSER	extern/libgit2/include/git2/errors.h	/^	GIT_EUSER      = -7,$/;"	e	enum:__anonb92219d10103
GIT_EXTERN	extern/libgit2/include/git2/common.h	/^# define GIT_EXTERN(/;"	d
GIT_FEATURE_HTTPS	extern/libgit2/include/git2/common.h	/^	GIT_FEATURE_HTTPS	= (1 << 1),$/;"	e	enum:__anonede0033d0103
GIT_FEATURE_NSEC	extern/libgit2/include/git2/common.h	/^	GIT_FEATURE_NSEC	= (1 << 3),$/;"	e	enum:__anonede0033d0103
GIT_FEATURE_SSH	extern/libgit2/include/git2/common.h	/^	GIT_FEATURE_SSH		= (1 << 2),$/;"	e	enum:__anonede0033d0103
GIT_FEATURE_THREADS	extern/libgit2/include/git2/common.h	/^	GIT_FEATURE_THREADS	= (1 << 0),$/;"	e	enum:__anonede0033d0103
GIT_FETCH_HEAD_FILE	extern/libgit2/src/refs.h	/^#define GIT_FETCH_HEAD_FILE /;"	d
GIT_FETCH_NO_PRUNE	extern/libgit2/include/git2/remote.h	/^	GIT_FETCH_NO_PRUNE,$/;"	e	enum:__anonc41be5800303
GIT_FETCH_OPTIONS_INIT	extern/libgit2/include/git2/remote.h	/^#define GIT_FETCH_OPTIONS_INIT /;"	d
GIT_FETCH_OPTIONS_VERSION	extern/libgit2/include/git2/remote.h	/^#define GIT_FETCH_OPTIONS_VERSION /;"	d
GIT_FETCH_PRUNE	extern/libgit2/include/git2/remote.h	/^	GIT_FETCH_PRUNE,$/;"	e	enum:__anonc41be5800303
GIT_FETCH_PRUNE_UNSPECIFIED	extern/libgit2/include/git2/remote.h	/^	GIT_FETCH_PRUNE_UNSPECIFIED,$/;"	e	enum:__anonc41be5800303
GIT_FILEBUF_APPEND	extern/libgit2/src/filebuf.h	/^#define GIT_FILEBUF_APPEND	/;"	d
GIT_FILEBUF_DEFLATE_SHIFT	extern/libgit2/src/filebuf.h	/^#define GIT_FILEBUF_DEFLATE_SHIFT	/;"	d
GIT_FILEBUF_DO_NOT_BUFFER	extern/libgit2/src/filebuf.h	/^#define GIT_FILEBUF_DO_NOT_BUFFER	/;"	d
GIT_FILEBUF_FORCE	extern/libgit2/src/filebuf.h	/^#define GIT_FILEBUF_FORCE	/;"	d
GIT_FILEBUF_FSYNC	extern/libgit2/src/filebuf.h	/^#define GIT_FILEBUF_FSYNC	/;"	d
GIT_FILEBUF_HASH_CONTENTS	extern/libgit2/src/filebuf.h	/^#define GIT_FILEBUF_HASH_CONTENTS	/;"	d
GIT_FILEBUF_INIT	extern/libgit2/src/filebuf.h	/^#define GIT_FILEBUF_INIT /;"	d
GIT_FILEBUF_TEMPORARY	extern/libgit2/src/filebuf.h	/^#define GIT_FILEBUF_TEMPORARY	/;"	d
GIT_FILEBUF_THREADS	extern/libgit2/src/filebuf.h	/^#	define GIT_FILEBUF_THREADS$/;"	d
GIT_FILELOCK_EXTENSION	extern/libgit2/src/filebuf.h	/^#define GIT_FILELOCK_EXTENSION /;"	d
GIT_FILELOCK_EXTLENGTH	extern/libgit2/src/filebuf.h	/^#define GIT_FILELOCK_EXTLENGTH /;"	d
GIT_FILEMODE_BLOB	extern/libgit2/include/git2/types.h	/^	GIT_FILEMODE_BLOB                = 0100644,$/;"	e	enum:__anona7f40ac90403
GIT_FILEMODE_BLOB_EXECUTABLE	extern/libgit2/include/git2/types.h	/^	GIT_FILEMODE_BLOB_EXECUTABLE     = 0100755,$/;"	e	enum:__anona7f40ac90403
GIT_FILEMODE_BLOB_GROUP_WRITABLE	extern/libgit2/src/tree.h	/^#define GIT_FILEMODE_BLOB_GROUP_WRITABLE /;"	d
GIT_FILEMODE_COMMIT	extern/libgit2/include/git2/types.h	/^	GIT_FILEMODE_COMMIT              = 0160000,$/;"	e	enum:__anona7f40ac90403
GIT_FILEMODE_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_FILEMODE_DEFAULT = GIT_CONFIGMAP_TRUE,$/;"	e	enum:__anon05b115930203
GIT_FILEMODE_LINK	extern/libgit2/include/git2/types.h	/^	GIT_FILEMODE_LINK                = 0120000,$/;"	e	enum:__anona7f40ac90403
GIT_FILEMODE_TREE	extern/libgit2/include/git2/types.h	/^	GIT_FILEMODE_TREE                = 0040000,$/;"	e	enum:__anona7f40ac90403
GIT_FILEMODE_UNREADABLE	extern/libgit2/include/git2/types.h	/^	GIT_FILEMODE_UNREADABLE          = 0000000,$/;"	e	enum:__anona7f40ac90403
GIT_FILE_CONTENT_PREFIX	extern/libgit2/src/repository.c	/^#define GIT_FILE_CONTENT_PREFIX /;"	d	file:
GIT_FILTER_ALLOW_UNSAFE	extern/libgit2/include/git2/filter.h	/^	GIT_FILTER_ALLOW_UNSAFE = (1u << 0),$/;"	e	enum:__anone2ec2d7a0203
GIT_FILTER_ATTRIBUTES_FROM_HEAD	extern/libgit2/include/git2/filter.h	/^	GIT_FILTER_ATTRIBUTES_FROM_HEAD = (1u << 2),$/;"	e	enum:__anone2ec2d7a0203
GIT_FILTER_BYTES_TO_CHECK_NUL	extern/libgit2/src/filter.h	/^#define GIT_FILTER_BYTES_TO_CHECK_NUL /;"	d
GIT_FILTER_CLEAN	extern/libgit2/include/git2/filter.h	/^	GIT_FILTER_CLEAN = GIT_FILTER_TO_ODB,$/;"	e	enum:__anone2ec2d7a0103
GIT_FILTER_CRLF	extern/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_CRLF /;"	d
GIT_FILTER_CRLF_PRIORITY	extern/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_CRLF_PRIORITY /;"	d
GIT_FILTER_DEFAULT	extern/libgit2/include/git2/filter.h	/^	GIT_FILTER_DEFAULT = 0u,$/;"	e	enum:__anone2ec2d7a0203
GIT_FILTER_DRIVER_PRIORITY	extern/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_DRIVER_PRIORITY /;"	d
GIT_FILTER_IDENT	extern/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_IDENT /;"	d
GIT_FILTER_IDENT_PRIORITY	extern/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_IDENT_PRIORITY /;"	d
GIT_FILTER_INIT	extern/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_INIT /;"	d
GIT_FILTER_NO_SYSTEM_ATTRIBUTES	extern/libgit2/include/git2/filter.h	/^	GIT_FILTER_NO_SYSTEM_ATTRIBUTES = (1u << 1),$/;"	e	enum:__anone2ec2d7a0203
GIT_FILTER_OPTIONS_INIT	extern/libgit2/src/filter.h	/^#define GIT_FILTER_OPTIONS_INIT /;"	d
GIT_FILTER_SMUDGE	extern/libgit2/include/git2/filter.h	/^	GIT_FILTER_SMUDGE = GIT_FILTER_TO_WORKTREE,$/;"	e	enum:__anone2ec2d7a0103
GIT_FILTER_TO_ODB	extern/libgit2/include/git2/filter.h	/^	GIT_FILTER_TO_ODB = 1,$/;"	e	enum:__anone2ec2d7a0103
GIT_FILTER_TO_WORKTREE	extern/libgit2/include/git2/filter.h	/^	GIT_FILTER_TO_WORKTREE = 0,$/;"	e	enum:__anone2ec2d7a0103
GIT_FILTER_VERSION	extern/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_VERSION /;"	d
GIT_FLEX_ARRAY	extern/libgit2/src/cc-compat.h	/^#			define GIT_FLEX_ARRAY /;"	d
GIT_FLEX_ARRAY	extern/libgit2/src/cc-compat.h	/^#		define GIT_FLEX_ARRAY /;"	d
GIT_FORMAT_PRINTF	extern/libgit2/include/git2/common.h	/^# define GIT_FORMAT_PRINTF(/;"	d
GIT_FSYNCOBJECTFILES_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_FSYNCOBJECTFILES_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon05b115930203
GIT_GITDIR_FILE	extern/libgit2/src/repository.c	/^#define GIT_GITDIR_FILE /;"	d	file:
GIT_GLOBAL	extern/libgit2/src/global.h	/^#define GIT_GLOBAL /;"	d
GIT_GLOB_SPECIAL	extern/libgit2/src/wildmatch.c	/^#define GIT_GLOB_SPECIAL /;"	d	file:
GIT_GSSAPI	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_GSSAPI 1)$/;"	v
GIT_H	git.hpp	/^#define GIT_H /;"	d
GIT_HASHSIG_ALLOW_SMALL_FILES	extern/libgit2/include/git2/sys/hashsig.h	/^	GIT_HASHSIG_ALLOW_SMALL_FILES = (1 << 2)$/;"	e	enum:__anonc5c3b4890103
GIT_HASHSIG_IGNORE_WHITESPACE	extern/libgit2/include/git2/sys/hashsig.h	/^	GIT_HASHSIG_IGNORE_WHITESPACE = (1 << 0),$/;"	e	enum:__anonc5c3b4890103
GIT_HASHSIG_NORMAL	extern/libgit2/include/git2/sys/hashsig.h	/^	GIT_HASHSIG_NORMAL = 0,$/;"	e	enum:__anonc5c3b4890103
GIT_HASHSIG_SMART_WHITESPACE	extern/libgit2/include/git2/sys/hashsig.h	/^	GIT_HASHSIG_SMART_WHITESPACE = (1 << 1),$/;"	e	enum:__anonc5c3b4890103
GIT_HASH_ALGO_SHA1	extern/libgit2/src/hash.h	/^	GIT_HASH_ALGO_SHA1,$/;"	e	enum:__anon6a671f570203
GIT_HASH_ALGO_UNKNOWN	extern/libgit2/src/hash.h	/^	GIT_HASH_ALGO_UNKNOWN = 0,$/;"	e	enum:__anon6a671f570203
GIT_HASH_CNG_DLL_NAME	extern/libgit2/src/hash/sha1/win32.c	/^#define GIT_HASH_CNG_DLL_NAME /;"	d	file:
GIT_HASH_CNG_HASH_OBJECT_LEN	extern/libgit2/src/hash/sha1/win32.c	/^#define GIT_HASH_CNG_HASH_OBJECT_LEN /;"	d	file:
GIT_HASH_CNG_HASH_REUSABLE	extern/libgit2/src/hash/sha1/win32.c	/^#define GIT_HASH_CNG_HASH_REUSABLE /;"	d	file:
GIT_HASH_CNG_HASH_TYPE	extern/libgit2/src/hash/sha1/win32.c	/^#define GIT_HASH_CNG_HASH_TYPE /;"	d	file:
GIT_HEAD_FILE	extern/libgit2/src/refs.h	/^#define GIT_HEAD_FILE /;"	d
GIT_HOOKS_DIR	extern/libgit2/src/repo_template.h	/^#define GIT_HOOKS_DIR /;"	d
GIT_HOOKS_DIR_MODE	extern/libgit2/src/repo_template.h	/^#define GIT_HOOKS_DIR_MODE /;"	d
GIT_HOOKS_README_CONTENT	extern/libgit2/src/repo_template.h	/^#define GIT_HOOKS_README_CONTENT /;"	d
GIT_HOOKS_README_FILE	extern/libgit2/src/repo_template.h	/^#define GIT_HOOKS_README_FILE /;"	d
GIT_HOOKS_README_MODE	extern/libgit2/src/repo_template.h	/^#define GIT_HOOKS_README_MODE /;"	d
GIT_HTTPS	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^	SET(GIT_HTTPS 0)$/;"	v
GIT_HTTPS	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^	SET(GIT_HTTPS 1)$/;"	v
GIT_HTTP_REPLAY_MAX	extern/libgit2/src/transports/http.h	/^#define GIT_HTTP_REPLAY_MAX /;"	d
GIT_IDXENTRY_ADDED	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_ADDED /;"	d
GIT_IDXENTRY_CONFLICTED	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_CONFLICTED /;"	d
GIT_IDXENTRY_EXTENDED	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_EXTENDED /;"	d
GIT_IDXENTRY_EXTENDED2	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_EXTENDED2 /;"	d
GIT_IDXENTRY_EXTENDED_FLAGS	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_EXTENDED_FLAGS /;"	d
GIT_IDXENTRY_HASHED	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_HASHED /;"	d
GIT_IDXENTRY_INTENT_TO_ADD	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_INTENT_TO_ADD /;"	d
GIT_IDXENTRY_NAMEMASK	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_NAMEMASK /;"	d
GIT_IDXENTRY_NEW_SKIP_WORKTREE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_NEW_SKIP_WORKTREE /;"	d
GIT_IDXENTRY_REMOVE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_REMOVE /;"	d
GIT_IDXENTRY_SKIP_WORKTREE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_SKIP_WORKTREE /;"	d
GIT_IDXENTRY_STAGE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_STAGE(/;"	d
GIT_IDXENTRY_STAGEMASK	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_STAGEMASK /;"	d
GIT_IDXENTRY_STAGESHIFT	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_STAGESHIFT /;"	d
GIT_IDXENTRY_STAGE_SET	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_STAGE_SET(/;"	d
GIT_IDXENTRY_UNHASHED	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_UNHASHED /;"	d
GIT_IDXENTRY_UNPACKED	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_UNPACKED /;"	d
GIT_IDXENTRY_UPDATE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_UPDATE /;"	d
GIT_IDXENTRY_UPTODATE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_UPTODATE /;"	d
GIT_IDXENTRY_VALID	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_VALID /;"	d
GIT_IDXENTRY_WT_REMOVE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_WT_REMOVE /;"	d
GIT_IGNORECASE_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_IGNORECASE_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon05b115930203
GIT_IGNORESTAT_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_IGNORESTAT_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon05b115930203
GIT_IGNORE_CONFIG	extern/libgit2/src/attrcache.h	/^#define GIT_IGNORE_CONFIG /;"	d
GIT_IGNORE_DEFAULT_RULES	extern/libgit2/src/ignore.c	/^#define GIT_IGNORE_DEFAULT_RULES /;"	d	file:
GIT_IGNORE_FALSE	extern/libgit2/src/ignore.h	/^	GIT_IGNORE_FALSE = 0,$/;"	e	enum:__anon4fc5b6370203
GIT_IGNORE_FILE	extern/libgit2/src/ignore.h	/^#define GIT_IGNORE_FILE	/;"	d
GIT_IGNORE_FILE_INREPO	extern/libgit2/src/ignore.h	/^#define GIT_IGNORE_FILE_INREPO	/;"	d
GIT_IGNORE_FILE_XDG	extern/libgit2/src/ignore.h	/^#define GIT_IGNORE_FILE_XDG	/;"	d
GIT_IGNORE_INTERNAL	extern/libgit2/src/ignore.c	/^#define GIT_IGNORE_INTERNAL	/;"	d	file:
GIT_IGNORE_NOTFOUND	extern/libgit2/src/ignore.h	/^	GIT_IGNORE_NOTFOUND = -1,$/;"	e	enum:__anon4fc5b6370203
GIT_IGNORE_TRUE	extern/libgit2/src/ignore.h	/^	GIT_IGNORE_TRUE = 1,$/;"	e	enum:__anon4fc5b6370203
GIT_IGNORE_UNCHECKED	extern/libgit2/src/ignore.h	/^	GIT_IGNORE_UNCHECKED = -2,$/;"	e	enum:__anon4fc5b6370203
GIT_INDEXCAP_FROM_OWNER	extern/libgit2/include/git2/deprecated.h	/^#define GIT_INDEXCAP_FROM_OWNER /;"	d
GIT_INDEXCAP_IGNORE_CASE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_INDEXCAP_IGNORE_CASE /;"	d
GIT_INDEXCAP_NO_FILEMODE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_INDEXCAP_NO_FILEMODE /;"	d
GIT_INDEXCAP_NO_SYMLINKS	extern/libgit2/include/git2/deprecated.h	/^#define GIT_INDEXCAP_NO_SYMLINKS /;"	d
GIT_INDEXER_OPTIONS_INIT	extern/libgit2/include/git2/indexer.h	/^#define GIT_INDEXER_OPTIONS_INIT /;"	d
GIT_INDEXER_OPTIONS_VERSION	extern/libgit2/include/git2/indexer.h	/^#define GIT_INDEXER_OPTIONS_VERSION /;"	d
GIT_INDEXWRITER_INIT	extern/libgit2/src/index.h	/^#define GIT_INDEXWRITER_INIT /;"	d
GIT_INDEX_ADD_CHECK_PATHSPEC	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_ADD_CHECK_PATHSPEC = (1u << 2),$/;"	e	enum:__anon3eb19ecc0503
GIT_INDEX_ADD_DEFAULT	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_ADD_DEFAULT = 0,$/;"	e	enum:__anon3eb19ecc0503
GIT_INDEX_ADD_DISABLE_PATHSPEC_MATCH	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_ADD_DISABLE_PATHSPEC_MATCH = (1u << 1),$/;"	e	enum:__anon3eb19ecc0503
GIT_INDEX_ADD_FORCE	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_ADD_FORCE = (1u << 0),$/;"	e	enum:__anon3eb19ecc0503
GIT_INDEX_CAPABILITY_FROM_OWNER	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_CAPABILITY_FROM_OWNER  = -1,$/;"	e	enum:__anon3eb19ecc0403
GIT_INDEX_CAPABILITY_IGNORE_CASE	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_CAPABILITY_IGNORE_CASE = 1,$/;"	e	enum:__anon3eb19ecc0403
GIT_INDEX_CAPABILITY_NO_FILEMODE	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_CAPABILITY_NO_FILEMODE = 2,$/;"	e	enum:__anon3eb19ecc0403
GIT_INDEX_CAPABILITY_NO_SYMLINKS	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_CAPABILITY_NO_SYMLINKS = 4,$/;"	e	enum:__anon3eb19ecc0403
GIT_INDEX_ENTRY_EXTENDED	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_ENTRY_EXTENDED  = (0x4000),$/;"	e	enum:__anon3eb19ecc0203
GIT_INDEX_ENTRY_EXTENDED_FLAGS	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_ENTRY_EXTENDED_FLAGS =  (GIT_INDEX_ENTRY_INTENT_TO_ADD | GIT_INDEX_ENTRY_SKIP_WORKTRE/;"	e	enum:__anon3eb19ecc0303
GIT_INDEX_ENTRY_INTENT_TO_ADD	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_ENTRY_INTENT_TO_ADD  =  (1 << 13),$/;"	e	enum:__anon3eb19ecc0303
GIT_INDEX_ENTRY_NAMEMASK	extern/libgit2/include/git2/index.h	/^#define GIT_INDEX_ENTRY_NAMEMASK /;"	d
GIT_INDEX_ENTRY_SKIP_WORKTREE	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_ENTRY_SKIP_WORKTREE  =  (1 << 14),$/;"	e	enum:__anon3eb19ecc0303
GIT_INDEX_ENTRY_STAGE	extern/libgit2/include/git2/index.h	/^#define GIT_INDEX_ENTRY_STAGE(/;"	d
GIT_INDEX_ENTRY_STAGEMASK	extern/libgit2/include/git2/index.h	/^#define GIT_INDEX_ENTRY_STAGEMASK /;"	d
GIT_INDEX_ENTRY_STAGESHIFT	extern/libgit2/include/git2/index.h	/^#define GIT_INDEX_ENTRY_STAGESHIFT /;"	d
GIT_INDEX_ENTRY_STAGE_SET	extern/libgit2/include/git2/index.h	/^#define GIT_INDEX_ENTRY_STAGE_SET(/;"	d
GIT_INDEX_ENTRY_UPTODATE	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_ENTRY_UPTODATE       =  (1 << 2),$/;"	e	enum:__anon3eb19ecc0303
GIT_INDEX_ENTRY_VALID	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_ENTRY_VALID     = (0x8000),$/;"	e	enum:__anon3eb19ecc0203
GIT_INDEX_FILE	extern/libgit2/src/index.h	/^#define GIT_INDEX_FILE /;"	d
GIT_INDEX_FILE_MODE	extern/libgit2/src/index.h	/^#define GIT_INDEX_FILE_MODE /;"	d
GIT_INDEX_STAGE_ANCESTOR	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_STAGE_ANCESTOR = 1,$/;"	e	enum:__anon3eb19ecc0603
GIT_INDEX_STAGE_ANY	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_STAGE_ANY = -1,$/;"	e	enum:__anon3eb19ecc0603
GIT_INDEX_STAGE_NORMAL	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_STAGE_NORMAL = 0,$/;"	e	enum:__anon3eb19ecc0603
GIT_INDEX_STAGE_OURS	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_STAGE_OURS = 2,$/;"	e	enum:__anon3eb19ecc0603
GIT_INDEX_STAGE_THEIRS	extern/libgit2/include/git2/index.h	/^	GIT_INDEX_STAGE_THEIRS = 3,$/;"	e	enum:__anon3eb19ecc0603
GIT_INFO_DIR	extern/libgit2/src/repo_template.h	/^#define GIT_INFO_DIR /;"	d
GIT_INFO_DIR_MODE	extern/libgit2/src/repo_template.h	/^#define GIT_INFO_DIR_MODE /;"	d
GIT_INFO_EXCLUDE_CONTENT	extern/libgit2/src/repo_template.h	/^#define GIT_INFO_EXCLUDE_CONTENT /;"	d
GIT_INFO_EXCLUDE_FILE	extern/libgit2/src/repo_template.h	/^#define GIT_INFO_EXCLUDE_FILE /;"	d
GIT_INFO_EXCLUDE_MODE	extern/libgit2/src/repo_template.h	/^#define GIT_INFO_EXCLUDE_MODE /;"	d
GIT_INIT_STRUCTURE	extern/libgit2/src/common.h	/^#define GIT_INIT_STRUCTURE(/;"	d
GIT_INIT_STRUCTURE_FROM_TEMPLATE	extern/libgit2/src/common.h	/^#define GIT_INIT_STRUCTURE_FROM_TEMPLATE(/;"	d
GIT_INLINE	extern/libgit2/src/common.h	/^# define GIT_INLINE(/;"	d
GIT_INLINE	extern/libgit2/src/oid.c	/^GIT_INLINE(char) *fmt_one(char *str, unsigned int val)$/;"	f
GIT_ISBLOCKED	extern/libgit2/src/posix.h	/^#define GIT_ISBLOCKED(/;"	d
GIT_ITERATOR_DESCEND_SYMLINKS	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_DESCEND_SYMLINKS = (1u << 7),$/;"	e	enum:__anonb487a9bd0203
GIT_ITERATOR_DONT_AUTOEXPAND	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_DONT_AUTOEXPAND  = (1u << 3),$/;"	e	enum:__anonb487a9bd0203
GIT_ITERATOR_DONT_IGNORE_CASE	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_DONT_IGNORE_CASE = (1u << 1),$/;"	e	enum:__anonb487a9bd0203
GIT_ITERATOR_DONT_PRECOMPOSE_UNICODE	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_DONT_PRECOMPOSE_UNICODE = (1u << 5),$/;"	e	enum:__anonb487a9bd0203
GIT_ITERATOR_FIRST_ACCESS	extern/libgit2/src/iterator.c	/^#define GIT_ITERATOR_FIRST_ACCESS /;"	d	file:
GIT_ITERATOR_HONOR_IGNORES	extern/libgit2/src/iterator.c	/^#define GIT_ITERATOR_HONOR_IGNORES /;"	d	file:
GIT_ITERATOR_IGNORE_CASE	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_IGNORE_CASE = (1u << 0),$/;"	e	enum:__anonb487a9bd0203
GIT_ITERATOR_IGNORE_DOT_GIT	extern/libgit2/src/iterator.c	/^#define GIT_ITERATOR_IGNORE_DOT_GIT /;"	d	file:
GIT_ITERATOR_INCLUDE_CONFLICTS	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_INCLUDE_CONFLICTS = (1u << 6),$/;"	e	enum:__anonb487a9bd0203
GIT_ITERATOR_INCLUDE_HASH	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_INCLUDE_HASH = (1u << 8),$/;"	e	enum:__anonb487a9bd0203
GIT_ITERATOR_INCLUDE_TREES	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_INCLUDE_TREES    = (1u << 2),$/;"	e	enum:__anonb487a9bd0203
GIT_ITERATOR_OPTIONS_INIT	extern/libgit2/src/iterator.h	/^#define GIT_ITERATOR_OPTIONS_INIT /;"	d
GIT_ITERATOR_PRECOMPOSE_UNICODE	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_PRECOMPOSE_UNICODE = (1u << 4),$/;"	e	enum:__anonb487a9bd0203
GIT_ITERATOR_STATUS_EMPTY	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_STATUS_EMPTY = 2,$/;"	e	enum:__anonb487a9bd0303
GIT_ITERATOR_STATUS_FILTERED	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_STATUS_FILTERED = 3$/;"	e	enum:__anonb487a9bd0303
GIT_ITERATOR_STATUS_IGNORED	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_STATUS_IGNORED = 1,$/;"	e	enum:__anonb487a9bd0303
GIT_ITERATOR_STATUS_NORMAL	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_STATUS_NORMAL = 0,$/;"	e	enum:__anonb487a9bd0303
GIT_ITERATOR_TYPE_EMPTY	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_TYPE_EMPTY = 0,$/;"	e	enum:__anonb487a9bd0103
GIT_ITERATOR_TYPE_FS	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_TYPE_FS = 4,$/;"	e	enum:__anonb487a9bd0103
GIT_ITERATOR_TYPE_INDEX	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_TYPE_INDEX = 2,$/;"	e	enum:__anonb487a9bd0103
GIT_ITERATOR_TYPE_TREE	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_TYPE_TREE = 1,$/;"	e	enum:__anonb487a9bd0103
GIT_ITERATOR_TYPE_WORKDIR	extern/libgit2/src/iterator.h	/^	GIT_ITERATOR_TYPE_WORKDIR = 3,$/;"	e	enum:__anonb487a9bd0103
GIT_ITEROVER	extern/libgit2/include/git2/errors.h	/^	GIT_ITEROVER        = -31,	\/**< Signals end of iteration with iterator *\/$/;"	e	enum:__anonb92219d10103
GIT_LOGALLREFUPDATES_ALWAYS	extern/libgit2/src/repository.h	/^	GIT_LOGALLREFUPDATES_ALWAYS = 3,$/;"	e	enum:__anon05b115930203
GIT_LOGALLREFUPDATES_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_LOGALLREFUPDATES_DEFAULT = GIT_LOGALLREFUPDATES_UNSET,$/;"	e	enum:__anon05b115930203
GIT_LOGALLREFUPDATES_FALSE	extern/libgit2/src/repository.h	/^	GIT_LOGALLREFUPDATES_FALSE = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon05b115930203
GIT_LOGALLREFUPDATES_TRUE	extern/libgit2/src/repository.h	/^	GIT_LOGALLREFUPDATES_TRUE = GIT_CONFIGMAP_TRUE,$/;"	e	enum:__anon05b115930203
GIT_LOGALLREFUPDATES_UNSET	extern/libgit2/src/repository.h	/^	GIT_LOGALLREFUPDATES_UNSET = 2,$/;"	e	enum:__anon05b115930203
GIT_LOOSE_PRIORITY	extern/libgit2/src/odb.c	/^#define GIT_LOOSE_PRIORITY /;"	d	file:
GIT_MAP_FILE	extern/libgit2/src/map.h	/^#define GIT_MAP_FILE	/;"	d
GIT_MAP_FIXED	extern/libgit2/src/map.h	/^#define GIT_MAP_FIXED	/;"	d
GIT_MAP_PRIVATE	extern/libgit2/src/map.h	/^#define GIT_MAP_PRIVATE /;"	d
GIT_MAP_SHARED	extern/libgit2/src/map.h	/^#define GIT_MAP_SHARED /;"	d
GIT_MAP_TYPE	extern/libgit2/src/map.h	/^#define GIT_MAP_TYPE	/;"	d
GIT_MBEDTLS	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^		SET(GIT_MBEDTLS 1)$/;"	v
GIT_MEMORY_BARRIER	extern/libgit2/src/thread-utils.h	/^# define GIT_MEMORY_BARRIER /;"	d
GIT_MERGE_ANALYSIS_FASTFORWARD	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_ANALYSIS_FASTFORWARD = (1 << 2),$/;"	e	enum:__anon5e9a43240803
GIT_MERGE_ANALYSIS_NONE	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_ANALYSIS_NONE = 0,$/;"	e	enum:__anon5e9a43240803
GIT_MERGE_ANALYSIS_NORMAL	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_ANALYSIS_NORMAL = (1 << 0),$/;"	e	enum:__anon5e9a43240803
GIT_MERGE_ANALYSIS_UNBORN	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_ANALYSIS_UNBORN = (1 << 3),$/;"	e	enum:__anon5e9a43240803
GIT_MERGE_ANALYSIS_UP_TO_DATE	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_ANALYSIS_UP_TO_DATE = (1 << 1),$/;"	e	enum:__anon5e9a43240803
GIT_MERGE_CONFLICT_MARKER_SIZE	extern/libgit2/include/git2/merge.h	/^#define GIT_MERGE_CONFLICT_MARKER_SIZE	/;"	d
GIT_MERGE_DEFAULT_RENAME_THRESHOLD	extern/libgit2/src/merge.h	/^#define GIT_MERGE_DEFAULT_RENAME_THRESHOLD	/;"	d
GIT_MERGE_DEFAULT_TARGET_LIMIT	extern/libgit2/src/merge.h	/^#define GIT_MERGE_DEFAULT_TARGET_LIMIT	/;"	d
GIT_MERGE_DIFF_BOTH_ADDED	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_BOTH_ADDED = (1 << 1),$/;"	e	enum:__anon41711a830303
GIT_MERGE_DIFF_BOTH_DELETED	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_BOTH_DELETED = (1 << 2),$/;"	e	enum:__anon41711a830303
GIT_MERGE_DIFF_BOTH_MODIFIED	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_BOTH_MODIFIED = (1 << 0),$/;"	e	enum:__anon41711a830303
GIT_MERGE_DIFF_BOTH_RENAMED	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_BOTH_RENAMED = (1 << 7),$/;"	e	enum:__anon41711a830303
GIT_MERGE_DIFF_BOTH_RENAMED_1_TO_2	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_BOTH_RENAMED_1_TO_2 = (1 << 8),$/;"	e	enum:__anon41711a830303
GIT_MERGE_DIFF_BOTH_RENAMED_2_TO_1	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_BOTH_RENAMED_2_TO_1 = (1 << 9),$/;"	e	enum:__anon41711a830303
GIT_MERGE_DIFF_DF_CHILD	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_DF_CHILD = (1 << 11),$/;"	e	enum:__anon41711a830303
GIT_MERGE_DIFF_DIRECTORY_FILE	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_DIRECTORY_FILE = (1 << 10),$/;"	e	enum:__anon41711a830303
GIT_MERGE_DIFF_MODIFIED_DELETED	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_MODIFIED_DELETED = (1 << 3),$/;"	e	enum:__anon41711a830303
GIT_MERGE_DIFF_NONE	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_NONE = 0,$/;"	e	enum:__anon41711a830303
GIT_MERGE_DIFF_RENAMED_ADDED	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_RENAMED_ADDED = (1 << 6),$/;"	e	enum:__anon41711a830303
GIT_MERGE_DIFF_RENAMED_DELETED	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_RENAMED_DELETED = (1 << 5),$/;"	e	enum:__anon41711a830303
GIT_MERGE_DIFF_RENAMED_MODIFIED	extern/libgit2/src/merge.h	/^	GIT_MERGE_DIFF_RENAMED_MODIFIED = (1 << 4),$/;"	e	enum:__anon41711a830303
GIT_MERGE_DRIVER_BINARY	extern/libgit2/include/git2/sys/merge.h	/^#define GIT_MERGE_DRIVER_BINARY /;"	d
GIT_MERGE_DRIVER_TEXT	extern/libgit2/include/git2/sys/merge.h	/^#define GIT_MERGE_DRIVER_TEXT /;"	d
GIT_MERGE_DRIVER_UNION	extern/libgit2/include/git2/sys/merge.h	/^#define GIT_MERGE_DRIVER_UNION /;"	d
GIT_MERGE_DRIVER_VERSION	extern/libgit2/include/git2/sys/merge.h	/^#define GIT_MERGE_DRIVER_VERSION /;"	d
GIT_MERGE_FAIL_ON_CONFLICT	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FAIL_ON_CONFLICT = (1 << 1),$/;"	e	enum:__anon5e9a43240203
GIT_MERGE_FILE_BINARY_SIZE	extern/libgit2/src/merge_file.c	/^#define GIT_MERGE_FILE_BINARY_SIZE /;"	d	file:
GIT_MERGE_FILE_DEFAULT	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_DEFAULT = 0,$/;"	e	enum:__anon5e9a43240403
GIT_MERGE_FILE_DIFF_MINIMAL	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_DIFF_MINIMAL = (1 << 7),$/;"	e	enum:__anon5e9a43240403
GIT_MERGE_FILE_DIFF_PATIENCE	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_DIFF_PATIENCE = (1 << 6),$/;"	e	enum:__anon5e9a43240403
GIT_MERGE_FILE_FAVOR_NORMAL	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_FAVOR_NORMAL = 0,$/;"	e	enum:__anon5e9a43240303
GIT_MERGE_FILE_FAVOR_OURS	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_FAVOR_OURS = 1,$/;"	e	enum:__anon5e9a43240303
GIT_MERGE_FILE_FAVOR_THEIRS	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_FAVOR_THEIRS = 2,$/;"	e	enum:__anon5e9a43240303
GIT_MERGE_FILE_FAVOR_UNION	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_FAVOR_UNION = 3,$/;"	e	enum:__anon5e9a43240303
GIT_MERGE_FILE_FAVOR__CONFLICTED	extern/libgit2/src/merge.h	/^	GIT_MERGE_FILE_FAVOR__CONFLICTED = 4,$/;"	e	enum:__anon41711a830203
GIT_MERGE_FILE_IGNORE_WHITESPACE	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_IGNORE_WHITESPACE = (1 << 3),$/;"	e	enum:__anon5e9a43240403
GIT_MERGE_FILE_IGNORE_WHITESPACE_CHANGE	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_IGNORE_WHITESPACE_CHANGE = (1 << 4),$/;"	e	enum:__anon5e9a43240403
GIT_MERGE_FILE_IGNORE_WHITESPACE_EOL	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_IGNORE_WHITESPACE_EOL = (1 << 5),$/;"	e	enum:__anon5e9a43240403
GIT_MERGE_FILE_INPUT_INIT	extern/libgit2/include/git2/merge.h	/^#define GIT_MERGE_FILE_INPUT_INIT /;"	d
GIT_MERGE_FILE_INPUT_VERSION	extern/libgit2/include/git2/merge.h	/^#define GIT_MERGE_FILE_INPUT_VERSION /;"	d
GIT_MERGE_FILE_MODE	extern/libgit2/src/merge.h	/^#define GIT_MERGE_FILE_MODE	/;"	d
GIT_MERGE_FILE_OPTIONS_INIT	extern/libgit2/include/git2/merge.h	/^#define GIT_MERGE_FILE_OPTIONS_INIT /;"	d
GIT_MERGE_FILE_OPTIONS_VERSION	extern/libgit2/include/git2/merge.h	/^#define GIT_MERGE_FILE_OPTIONS_VERSION /;"	d
GIT_MERGE_FILE_SIDE_EXISTS	extern/libgit2/src/merge_file.c	/^#define GIT_MERGE_FILE_SIDE_EXISTS(/;"	d	file:
GIT_MERGE_FILE_SIMPLIFY_ALNUM	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_SIMPLIFY_ALNUM = (1 << 2),$/;"	e	enum:__anon5e9a43240403
GIT_MERGE_FILE_STYLE_DIFF3	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_STYLE_DIFF3 = (1 << 1),$/;"	e	enum:__anon5e9a43240403
GIT_MERGE_FILE_STYLE_MERGE	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_STYLE_MERGE = (1 << 0),$/;"	e	enum:__anon5e9a43240403
GIT_MERGE_FIND_RENAMES	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_FIND_RENAMES = (1 << 0),$/;"	e	enum:__anon5e9a43240203
GIT_MERGE_HEAD_FILE	extern/libgit2/src/refs.h	/^#define GIT_MERGE_HEAD_FILE /;"	d
GIT_MERGE_INDEX_ENTRY_EXISTS	extern/libgit2/src/merge.c	/^#define GIT_MERGE_INDEX_ENTRY_EXISTS(/;"	d	file:
GIT_MERGE_INDEX_ENTRY_ISFILE	extern/libgit2/src/merge.c	/^#define GIT_MERGE_INDEX_ENTRY_ISFILE(/;"	d	file:
GIT_MERGE_MODE_FILE	extern/libgit2/src/merge.h	/^#define GIT_MERGE_MODE_FILE	/;"	d
GIT_MERGE_MSG_FILE	extern/libgit2/src/merge.h	/^#define GIT_MERGE_MSG_FILE	/;"	d
GIT_MERGE_NO_RECURSIVE	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_NO_RECURSIVE = (1 << 3),$/;"	e	enum:__anon5e9a43240203
GIT_MERGE_OPTIONS_INIT	extern/libgit2/include/git2/merge.h	/^#define GIT_MERGE_OPTIONS_INIT /;"	d
GIT_MERGE_OPTIONS_VERSION	extern/libgit2/include/git2/merge.h	/^#define GIT_MERGE_OPTIONS_VERSION /;"	d
GIT_MERGE_PREFERENCE_FASTFORWARD_ONLY	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_PREFERENCE_FASTFORWARD_ONLY = (1 << 1),$/;"	e	enum:__anon5e9a43240903
GIT_MERGE_PREFERENCE_NONE	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_PREFERENCE_NONE = 0,$/;"	e	enum:__anon5e9a43240903
GIT_MERGE_PREFERENCE_NO_FASTFORWARD	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_PREFERENCE_NO_FASTFORWARD = (1 << 0),$/;"	e	enum:__anon5e9a43240903
GIT_MERGE_SKIP_REUC	extern/libgit2/include/git2/merge.h	/^	GIT_MERGE_SKIP_REUC = (1 << 2),$/;"	e	enum:__anon5e9a43240203
GIT_MERGE__VIRTUAL_BASE	extern/libgit2/src/merge.h	/^	GIT_MERGE__VIRTUAL_BASE = (1 << 31),$/;"	e	enum:__anon41711a830103
GIT_MKDIR_CHMOD	extern/libgit2/src/futils.h	/^	GIT_MKDIR_CHMOD = 4,$/;"	e	enum:__anonce3edc2a0103
GIT_MKDIR_CHMOD_PATH	extern/libgit2/src/futils.h	/^	GIT_MKDIR_CHMOD_PATH = 8,$/;"	e	enum:__anonce3edc2a0103
GIT_MKDIR_EXCL	extern/libgit2/src/futils.h	/^	GIT_MKDIR_EXCL = 1,$/;"	e	enum:__anonce3edc2a0103
GIT_MKDIR_PATH	extern/libgit2/src/futils.h	/^	GIT_MKDIR_PATH = 2,$/;"	e	enum:__anonce3edc2a0103
GIT_MKDIR_REMOVE_FILES	extern/libgit2/src/futils.h	/^	GIT_MKDIR_REMOVE_FILES = 128,$/;"	e	enum:__anonce3edc2a0103
GIT_MKDIR_REMOVE_SYMLINKS	extern/libgit2/src/futils.h	/^	GIT_MKDIR_REMOVE_SYMLINKS = 256,$/;"	e	enum:__anonce3edc2a0103
GIT_MKDIR_SKIP_LAST	extern/libgit2/src/futils.h	/^	GIT_MKDIR_SKIP_LAST = 16,$/;"	e	enum:__anonce3edc2a0103
GIT_MKDIR_SKIP_LAST2	extern/libgit2/src/futils.h	/^	GIT_MKDIR_SKIP_LAST2 = 32,$/;"	e	enum:__anonce3edc2a0103
GIT_MKDIR_VERIFY_DIR	extern/libgit2/src/futils.h	/^	GIT_MKDIR_VERIFY_DIR = 64,$/;"	e	enum:__anonce3edc2a0103
GIT_MMAP_VALIDATE	extern/libgit2/src/map.h	/^#define GIT_MMAP_VALIDATE(/;"	d
GIT_MODE_ISBLOB	extern/libgit2/src/futils.h	/^#define GIT_MODE_ISBLOB(/;"	d
GIT_MODE_PERMS_MASK	extern/libgit2/src/futils.h	/^#define GIT_MODE_PERMS_MASK	/;"	d
GIT_MODE_TYPE	extern/libgit2/src/futils.h	/^#define GIT_MODE_TYPE(/;"	d
GIT_MODE_TYPE_MASK	extern/libgit2/src/futils.h	/^#define GIT_MODE_TYPE_MASK	/;"	d
GIT_MODULES_FILE	extern/libgit2/src/submodule.c	/^#define GIT_MODULES_FILE /;"	d	file:
GIT_MSVC_CRTDBG	extern/libgit2/CMakeLists.txt	/^		SET(GIT_MSVC_CRTDBG 1)$/;"	v
GIT_MULTIPLY_SIZET_OVERFLOW	extern/libgit2/src/common.h	/^#define GIT_MULTIPLY_SIZET_OVERFLOW(/;"	d
GIT_NET_URL_INIT	extern/libgit2/src/net.h	/^#define GIT_NET_URL_INIT /;"	d
GIT_NOTES_DEFAULT_MSG_ADD	extern/libgit2/src/notes.h	/^#define GIT_NOTES_DEFAULT_MSG_ADD /;"	d
GIT_NOTES_DEFAULT_MSG_RM	extern/libgit2/src/notes.h	/^#define GIT_NOTES_DEFAULT_MSG_RM /;"	d
GIT_NOTES_DEFAULT_REF	extern/libgit2/src/notes.h	/^#define GIT_NOTES_DEFAULT_REF /;"	d
GIT_NTLM	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_NTLM 1)$/;"	v
GIT_OBJECTS_DIR	extern/libgit2/src/odb.h	/^#define GIT_OBJECTS_DIR /;"	d
GIT_OBJECTS_INFO_DIR	extern/libgit2/src/repo_template.h	/^#define GIT_OBJECTS_INFO_DIR /;"	d
GIT_OBJECTS_PACK_DIR	extern/libgit2/src/repo_template.h	/^#define GIT_OBJECTS_PACK_DIR /;"	d
GIT_OBJECT_ANY	extern/libgit2/include/git2/types.h	/^	GIT_OBJECT_ANY =      -2, \/**< Object can be any of the following *\/$/;"	e	enum:__anona7f40ac90103
GIT_OBJECT_BLOB	extern/libgit2/include/git2/types.h	/^	GIT_OBJECT_BLOB =      3, \/**< A file revision object. *\/$/;"	e	enum:__anona7f40ac90103
GIT_OBJECT_COMMIT	extern/libgit2/include/git2/types.h	/^	GIT_OBJECT_COMMIT =    1, \/**< A commit object. *\/$/;"	e	enum:__anona7f40ac90103
GIT_OBJECT_DIR_MODE	extern/libgit2/src/odb.h	/^#define GIT_OBJECT_DIR_MODE /;"	d
GIT_OBJECT_FILE_MODE	extern/libgit2/src/odb.h	/^#define GIT_OBJECT_FILE_MODE /;"	d
GIT_OBJECT_INVALID	extern/libgit2/include/git2/types.h	/^	GIT_OBJECT_INVALID =  -1, \/**< Object is invalid. *\/$/;"	e	enum:__anona7f40ac90103
GIT_OBJECT_OFS_DELTA	extern/libgit2/include/git2/types.h	/^	GIT_OBJECT_OFS_DELTA = 6, \/**< A delta, base is given by an offset. *\/$/;"	e	enum:__anona7f40ac90103
GIT_OBJECT_REF_DELTA	extern/libgit2/include/git2/types.h	/^	GIT_OBJECT_REF_DELTA = 7, \/**< A delta, base is given by object id. *\/$/;"	e	enum:__anona7f40ac90103
GIT_OBJECT_TAG	extern/libgit2/include/git2/types.h	/^	GIT_OBJECT_TAG =       4, \/**< An annotated tag object. *\/$/;"	e	enum:__anona7f40ac90103
GIT_OBJECT_TREE	extern/libgit2/include/git2/types.h	/^	GIT_OBJECT_TREE =      2, \/**< A tree (directory listing) object. *\/$/;"	e	enum:__anona7f40ac90103
GIT_OBJ_ANY	extern/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_ANY /;"	d
GIT_OBJ_BAD	extern/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_BAD /;"	d
GIT_OBJ_BLOB	extern/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_BLOB /;"	d
GIT_OBJ_COMMIT	extern/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_COMMIT /;"	d
GIT_OBJ_OFS_DELTA	extern/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_OFS_DELTA /;"	d
GIT_OBJ_REF_DELTA	extern/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_REF_DELTA /;"	d
GIT_OBJ_TAG	extern/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_TAG /;"	d
GIT_OBJ_TREE	extern/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_TREE /;"	d
GIT_OBJ__EXT1	extern/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ__EXT1 /;"	d
GIT_OBJ__EXT2	extern/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ__EXT2 /;"	d
GIT_ODB_BACKEND_INIT	extern/libgit2/include/git2/sys/odb_backend.h	/^#define GIT_ODB_BACKEND_INIT /;"	d
GIT_ODB_BACKEND_VERSION	extern/libgit2/include/git2/sys/odb_backend.h	/^#define GIT_ODB_BACKEND_VERSION /;"	d
GIT_ODB_CAP_FROM_OWNER	extern/libgit2/src/odb.h	/^	GIT_ODB_CAP_FROM_OWNER = -1,$/;"	e	enum:__anonfbf77e280203
GIT_OID_HEXSZ	extern/libgit2/include/git2/oid.h	/^#define GIT_OID_HEXSZ /;"	d
GIT_OID_HEX_ZERO	extern/libgit2/include/git2/common.h	/^#define GIT_OID_HEX_ZERO /;"	d
GIT_OID_MINPREFIXLEN	extern/libgit2/include/git2/oid.h	/^#define GIT_OID_MINPREFIXLEN /;"	d
GIT_OID_RAWSZ	extern/libgit2/include/git2/oid.h	/^#define GIT_OID_RAWSZ /;"	d
GIT_OK	extern/libgit2/include/git2/errors.h	/^	GIT_OK         =  0,		\/**< No error *\/$/;"	e	enum:__anonb92219d10103
GIT_OPENSSL	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^		SET(GIT_OPENSSL 1)$/;"	v
GIT_OPT_DISABLE_PACK_KEEP_FILE_CHECKS	extern/libgit2/include/git2/common.h	/^	GIT_OPT_DISABLE_PACK_KEEP_FILE_CHECKS$/;"	e	enum:__anonede0033d0203
GIT_OPT_ENABLE_CACHING	extern/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_CACHING,$/;"	e	enum:__anonede0033d0203
GIT_OPT_ENABLE_FSYNC_GITDIR	extern/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_FSYNC_GITDIR,$/;"	e	enum:__anonede0033d0203
GIT_OPT_ENABLE_OFS_DELTA	extern/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_OFS_DELTA,$/;"	e	enum:__anonede0033d0203
GIT_OPT_ENABLE_STRICT_HASH_VERIFICATION	extern/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_STRICT_HASH_VERIFICATION,$/;"	e	enum:__anonede0033d0203
GIT_OPT_ENABLE_STRICT_OBJECT_CREATION	extern/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_STRICT_OBJECT_CREATION,$/;"	e	enum:__anonede0033d0203
GIT_OPT_ENABLE_STRICT_SYMBOLIC_REF_CREATION	extern/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_STRICT_SYMBOLIC_REF_CREATION,$/;"	e	enum:__anonede0033d0203
GIT_OPT_ENABLE_UNSAVED_INDEX_SAFETY	extern/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_UNSAVED_INDEX_SAFETY,$/;"	e	enum:__anonede0033d0203
GIT_OPT_GET_CACHED_MEMORY	extern/libgit2/include/git2/common.h	/^	GIT_OPT_GET_CACHED_MEMORY,$/;"	e	enum:__anonede0033d0203
GIT_OPT_GET_MWINDOW_MAPPED_LIMIT	extern/libgit2/include/git2/common.h	/^	GIT_OPT_GET_MWINDOW_MAPPED_LIMIT,$/;"	e	enum:__anonede0033d0203
GIT_OPT_GET_MWINDOW_SIZE	extern/libgit2/include/git2/common.h	/^	GIT_OPT_GET_MWINDOW_SIZE,$/;"	e	enum:__anonede0033d0203
GIT_OPT_GET_PACK_MAX_OBJECTS	extern/libgit2/include/git2/common.h	/^	GIT_OPT_GET_PACK_MAX_OBJECTS,$/;"	e	enum:__anonede0033d0203
GIT_OPT_GET_SEARCH_PATH	extern/libgit2/include/git2/common.h	/^	GIT_OPT_GET_SEARCH_PATH,$/;"	e	enum:__anonede0033d0203
GIT_OPT_GET_TEMPLATE_PATH	extern/libgit2/include/git2/common.h	/^	GIT_OPT_GET_TEMPLATE_PATH,$/;"	e	enum:__anonede0033d0203
GIT_OPT_GET_USER_AGENT	extern/libgit2/include/git2/common.h	/^	GIT_OPT_GET_USER_AGENT,$/;"	e	enum:__anonede0033d0203
GIT_OPT_GET_WINDOWS_SHAREMODE	extern/libgit2/include/git2/common.h	/^	GIT_OPT_GET_WINDOWS_SHAREMODE,$/;"	e	enum:__anonede0033d0203
GIT_OPT_SET_ALLOCATOR	extern/libgit2/include/git2/common.h	/^	GIT_OPT_SET_ALLOCATOR,$/;"	e	enum:__anonede0033d0203
GIT_OPT_SET_CACHE_MAX_SIZE	extern/libgit2/include/git2/common.h	/^	GIT_OPT_SET_CACHE_MAX_SIZE,$/;"	e	enum:__anonede0033d0203
GIT_OPT_SET_CACHE_OBJECT_LIMIT	extern/libgit2/include/git2/common.h	/^	GIT_OPT_SET_CACHE_OBJECT_LIMIT,$/;"	e	enum:__anonede0033d0203
GIT_OPT_SET_MWINDOW_MAPPED_LIMIT	extern/libgit2/include/git2/common.h	/^	GIT_OPT_SET_MWINDOW_MAPPED_LIMIT,$/;"	e	enum:__anonede0033d0203
GIT_OPT_SET_MWINDOW_SIZE	extern/libgit2/include/git2/common.h	/^	GIT_OPT_SET_MWINDOW_SIZE,$/;"	e	enum:__anonede0033d0203
GIT_OPT_SET_PACK_MAX_OBJECTS	extern/libgit2/include/git2/common.h	/^	GIT_OPT_SET_PACK_MAX_OBJECTS,$/;"	e	enum:__anonede0033d0203
GIT_OPT_SET_SEARCH_PATH	extern/libgit2/include/git2/common.h	/^	GIT_OPT_SET_SEARCH_PATH,$/;"	e	enum:__anonede0033d0203
GIT_OPT_SET_SSL_CERT_LOCATIONS	extern/libgit2/include/git2/common.h	/^	GIT_OPT_SET_SSL_CERT_LOCATIONS,$/;"	e	enum:__anonede0033d0203
GIT_OPT_SET_SSL_CIPHERS	extern/libgit2/include/git2/common.h	/^	GIT_OPT_SET_SSL_CIPHERS,$/;"	e	enum:__anonede0033d0203
GIT_OPT_SET_TEMPLATE_PATH	extern/libgit2/include/git2/common.h	/^	GIT_OPT_SET_TEMPLATE_PATH,$/;"	e	enum:__anonede0033d0203
GIT_OPT_SET_USER_AGENT	extern/libgit2/include/git2/common.h	/^	GIT_OPT_SET_USER_AGENT,$/;"	e	enum:__anonede0033d0203
GIT_OPT_SET_WINDOWS_SHAREMODE	extern/libgit2/include/git2/common.h	/^	GIT_OPT_SET_WINDOWS_SHAREMODE,$/;"	e	enum:__anonede0033d0203
GIT_ORIG_HEAD_FILE	extern/libgit2/src/refs.h	/^#define GIT_ORIG_HEAD_FILE /;"	d
GIT_PACKBUILDER_ADDING_OBJECTS	extern/libgit2/include/git2/pack.h	/^	GIT_PACKBUILDER_ADDING_OBJECTS = 0,$/;"	e	enum:__anon8d6dc3930103
GIT_PACKBUILDER_DELTAFICATION	extern/libgit2/include/git2/pack.h	/^	GIT_PACKBUILDER_DELTAFICATION = 1,$/;"	e	enum:__anon8d6dc3930103
GIT_PACKBUILDER__MUTEX_OP	extern/libgit2/src/pack-objects.c	/^#define GIT_PACKBUILDER__MUTEX_OP(/;"	d	file:
GIT_PACKEDREFS_FILE	extern/libgit2/src/refs.h	/^#define GIT_PACKEDREFS_FILE /;"	d
GIT_PACKEDREFS_FILE_MODE	extern/libgit2/src/refs.h	/^#define GIT_PACKEDREFS_FILE_MODE /;"	d
GIT_PACKEDREFS_HEADER	extern/libgit2/src/refs.h	/^#define GIT_PACKEDREFS_HEADER /;"	d
GIT_PACKED_PRIORITY	extern/libgit2/src/odb.c	/^#define GIT_PACKED_PRIORITY /;"	d	file:
GIT_PACKREF_HAS_PEEL	extern/libgit2/src/refs.c	/^	GIT_PACKREF_HAS_PEEL = 1,$/;"	e	enum:__anon81fc257e0103	file:
GIT_PACKREF_WAS_LOOSE	extern/libgit2/src/refs.c	/^	GIT_PACKREF_WAS_LOOSE = 2$/;"	e	enum:__anon81fc257e0103	file:
GIT_PACK_BIG_FILE_THRESHOLD	extern/libgit2/src/pack-objects.h	/^#define GIT_PACK_BIG_FILE_THRESHOLD /;"	d
GIT_PACK_CACHE_MEMORY_LIMIT	extern/libgit2/src/pack.h	/^#define GIT_PACK_CACHE_MEMORY_LIMIT /;"	d
GIT_PACK_CACHE_SIZE_LIMIT	extern/libgit2/src/pack.h	/^#define GIT_PACK_CACHE_SIZE_LIMIT /;"	d
GIT_PACK_DELTA_CACHE_LIMIT	extern/libgit2/src/pack-objects.h	/^#define GIT_PACK_DELTA_CACHE_LIMIT /;"	d
GIT_PACK_DELTA_CACHE_SIZE	extern/libgit2/src/pack-objects.h	/^#define GIT_PACK_DELTA_CACHE_SIZE /;"	d
GIT_PACK_DEPTH	extern/libgit2/src/pack-objects.h	/^#define GIT_PACK_DEPTH /;"	d
GIT_PACK_FILE_MODE	extern/libgit2/src/pack.h	/^#define GIT_PACK_FILE_MODE /;"	d
GIT_PACK_WINDOW	extern/libgit2/src/pack-objects.h	/^#define GIT_PACK_WINDOW /;"	d
GIT_PARSE_CTX_INIT	extern/libgit2/src/parse.h	/^#define GIT_PARSE_CTX_INIT /;"	d
GIT_PARSE_PEEK_FLAGS	extern/libgit2/src/parse.h	/^enum GIT_PARSE_PEEK_FLAGS {$/;"	g
GIT_PARSE_PEEK_SKIP_WHITESPACE	extern/libgit2/src/parse.h	/^	GIT_PARSE_PEEK_SKIP_WHITESPACE = (1 << 0)$/;"	e	enum:GIT_PARSE_PEEK_FLAGS
GIT_PASSTHROUGH	extern/libgit2/include/git2/errors.h	/^	GIT_PASSTHROUGH     = -30,	\/**< A user-configured callback refused to act *\/$/;"	e	enum:__anonb92219d10103
GIT_PATCH_GENERATED_ALLOCATED	extern/libgit2/src/patch_generate.h	/^	GIT_PATCH_GENERATED_ALLOCATED = (1 << 0),$/;"	e	enum:__anon63ef94ed0103
GIT_PATCH_GENERATED_DIFFABLE	extern/libgit2/src/patch_generate.h	/^	GIT_PATCH_GENERATED_DIFFABLE = (1 << 3),$/;"	e	enum:__anon63ef94ed0103
GIT_PATCH_GENERATED_DIFFED	extern/libgit2/src/patch_generate.h	/^	GIT_PATCH_GENERATED_DIFFED = (1 << 4),$/;"	e	enum:__anon63ef94ed0103
GIT_PATCH_GENERATED_FLATTENED	extern/libgit2/src/patch_generate.h	/^	GIT_PATCH_GENERATED_FLATTENED = (1 << 5),$/;"	e	enum:__anon63ef94ed0103
GIT_PATCH_GENERATED_INITIALIZED	extern/libgit2/src/patch_generate.h	/^	GIT_PATCH_GENERATED_INITIALIZED = (1 << 1),$/;"	e	enum:__anon63ef94ed0103
GIT_PATCH_GENERATED_LOADED	extern/libgit2/src/patch_generate.h	/^	GIT_PATCH_GENERATED_LOADED = (1 << 2),$/;"	e	enum:__anon63ef94ed0103
GIT_PATCH_OPTIONS_INIT	extern/libgit2/src/patch.h	/^#define GIT_PATCH_OPTIONS_INIT /;"	d
GIT_PATHSPEC_DEFAULT	extern/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_DEFAULT        = 0,$/;"	e	enum:__anonba2986ec0103
GIT_PATHSPEC_FAILURES_ONLY	extern/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_FAILURES_ONLY  = (1u << 5),$/;"	e	enum:__anonba2986ec0103
GIT_PATHSPEC_FIND_FAILURES	extern/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_FIND_FAILURES  = (1u << 4),$/;"	e	enum:__anonba2986ec0103
GIT_PATHSPEC_IGNORE_CASE	extern/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_IGNORE_CASE    = (1u << 0),$/;"	e	enum:__anonba2986ec0103
GIT_PATHSPEC_MAGIC	extern/libgit2/src/wildmatch.c	/^#define GIT_PATHSPEC_MAGIC /;"	d	file:
GIT_PATHSPEC_NOMATCH	extern/libgit2/src/pathspec.h	/^#define GIT_PATHSPEC_NOMATCH /;"	d
GIT_PATHSPEC_NO_GLOB	extern/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_NO_GLOB        = (1u << 2),$/;"	e	enum:__anonba2986ec0103
GIT_PATHSPEC_NO_MATCH_ERROR	extern/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_NO_MATCH_ERROR = (1u << 3),$/;"	e	enum:__anonba2986ec0103
GIT_PATHSPEC_USE_CASE	extern/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_USE_CASE       = (1u << 1),$/;"	e	enum:__anonba2986ec0103
GIT_PATH_DIRITER_INIT	extern/libgit2/src/path.h	/^#define GIT_PATH_DIRITER_INIT /;"	d
GIT_PATH_DIR_IGNORE_CASE	extern/libgit2/src/path.h	/^	GIT_PATH_DIR_IGNORE_CASE = (1u << 0),$/;"	e	enum:__anon7d10f0c00103
GIT_PATH_DIR_INCLUDE_DOT_AND_DOTDOT	extern/libgit2/src/path.h	/^	GIT_PATH_DIR_INCLUDE_DOT_AND_DOTDOT = (1u << 2),$/;"	e	enum:__anon7d10f0c00103
GIT_PATH_DIR_PRECOMPOSE_UNICODE	extern/libgit2/src/path.h	/^	GIT_PATH_DIR_PRECOMPOSE_UNICODE = (1u << 1),$/;"	e	enum:__anon7d10f0c00103
GIT_PATH_EQUAL	extern/libgit2/src/path.h	/^enum { GIT_PATH_NOTEQUAL = 0, GIT_PATH_EQUAL = 1, GIT_PATH_PREFIX = 2 };$/;"	e	enum:__anon7d10f0c00203
GIT_PATH_FS_GENERIC	extern/libgit2/include/git2/sys/path.h	/^	GIT_PATH_FS_GENERIC,$/;"	e	enum:__anon99f3dc0f0203
GIT_PATH_FS_HFS	extern/libgit2/include/git2/sys/path.h	/^	GIT_PATH_FS_HFS$/;"	e	enum:__anon99f3dc0f0203
GIT_PATH_FS_NTFS	extern/libgit2/include/git2/sys/path.h	/^	GIT_PATH_FS_NTFS,$/;"	e	enum:__anon99f3dc0f0203
GIT_PATH_GITFILE_GITATTRIBUTES	extern/libgit2/include/git2/sys/path.h	/^	GIT_PATH_GITFILE_GITATTRIBUTES$/;"	e	enum:__anon99f3dc0f0103
GIT_PATH_GITFILE_GITIGNORE	extern/libgit2/include/git2/sys/path.h	/^	GIT_PATH_GITFILE_GITIGNORE,$/;"	e	enum:__anon99f3dc0f0103
GIT_PATH_GITFILE_GITMODULES	extern/libgit2/include/git2/sys/path.h	/^	GIT_PATH_GITFILE_GITMODULES,$/;"	e	enum:__anon99f3dc0f0103
GIT_PATH_ICONV_INIT	extern/libgit2/src/path.h	/^#define GIT_PATH_ICONV_INIT /;"	d
GIT_PATH_LIST_SEPARATOR	extern/libgit2/include/git2/common.h	/^#define GIT_PATH_LIST_SEPARATOR /;"	d
GIT_PATH_MAX	extern/libgit2/include/git2/common.h	/^#define GIT_PATH_MAX /;"	d
GIT_PATH_NATIVE_ENCODING	extern/libgit2/src/path.h	/^#define GIT_PATH_NATIVE_ENCODING /;"	d
GIT_PATH_NOTEQUAL	extern/libgit2/src/path.h	/^enum { GIT_PATH_NOTEQUAL = 0, GIT_PATH_EQUAL = 1, GIT_PATH_PREFIX = 2 };$/;"	e	enum:__anon7d10f0c00203
GIT_PATH_PREFIX	extern/libgit2/src/path.h	/^enum { GIT_PATH_NOTEQUAL = 0, GIT_PATH_EQUAL = 1, GIT_PATH_PREFIX = 2 };$/;"	e	enum:__anon7d10f0c00203
GIT_PATH_REJECT_BACKSLASH	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_BACKSLASH /;"	d
GIT_PATH_REJECT_DOS_PATHS	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_DOS_PATHS /;"	d
GIT_PATH_REJECT_DOT_GIT	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_DOT_GIT /;"	d
GIT_PATH_REJECT_DOT_GIT_HFS	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_DOT_GIT_HFS /;"	d
GIT_PATH_REJECT_DOT_GIT_LITERAL	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_DOT_GIT_LITERAL /;"	d
GIT_PATH_REJECT_DOT_GIT_NTFS	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_DOT_GIT_NTFS /;"	d
GIT_PATH_REJECT_FILESYSTEM_DEFAULTS	extern/libgit2/src/path.h	/^# define GIT_PATH_REJECT_FILESYSTEM_DEFAULTS /;"	d
GIT_PATH_REJECT_INDEX_DEFAULTS	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_INDEX_DEFAULTS /;"	d
GIT_PATH_REJECT_NT_CHARS	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_NT_CHARS /;"	d
GIT_PATH_REJECT_SLASH	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_SLASH /;"	d
GIT_PATH_REJECT_TRAILING_COLON	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_TRAILING_COLON /;"	d
GIT_PATH_REJECT_TRAILING_DOT	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_TRAILING_DOT /;"	d
GIT_PATH_REJECT_TRAILING_SPACE	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_TRAILING_SPACE /;"	d
GIT_PATH_REJECT_TRAVERSAL	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_TRAVERSAL /;"	d
GIT_PATH_REJECT_WORKDIR_DEFAULTS	extern/libgit2/src/path.h	/^#define GIT_PATH_REJECT_WORKDIR_DEFAULTS /;"	d
GIT_PATH_REPO_ENCODING	extern/libgit2/src/path.h	/^#define GIT_PATH_REPO_ENCODING /;"	d
GIT_PERMS_CANONICAL	extern/libgit2/src/futils.h	/^#define GIT_PERMS_CANONICAL(/;"	d
GIT_PERMS_FOR_WRITE	extern/libgit2/src/futils.h	/^#define GIT_PERMS_FOR_WRITE(/;"	d
GIT_PERMS_IS_EXEC	extern/libgit2/src/futils.h	/^#define GIT_PERMS_IS_EXEC(/;"	d
GIT_PKT_ACK	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_ACK,$/;"	e	enum:__anoncc6f59690103
GIT_PKT_CMD	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_CMD,$/;"	e	enum:__anoncc6f59690103
GIT_PKT_COMMENT	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_COMMENT,$/;"	e	enum:__anoncc6f59690103
GIT_PKT_DATA	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_DATA,$/;"	e	enum:__anoncc6f59690103
GIT_PKT_ERR	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_ERR,$/;"	e	enum:__anoncc6f59690103
GIT_PKT_FLUSH	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_FLUSH,$/;"	e	enum:__anoncc6f59690103
GIT_PKT_HAVE	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_HAVE,$/;"	e	enum:__anoncc6f59690103
GIT_PKT_NAK	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_NAK,$/;"	e	enum:__anoncc6f59690103
GIT_PKT_NG	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_NG,$/;"	e	enum:__anoncc6f59690103
GIT_PKT_OK	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_OK,$/;"	e	enum:__anoncc6f59690103
GIT_PKT_PROGRESS	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_PROGRESS,$/;"	e	enum:__anoncc6f59690103
GIT_PKT_REF	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_REF,$/;"	e	enum:__anoncc6f59690103
GIT_PKT_UNPACK	extern/libgit2/src/transports/smart.h	/^	GIT_PKT_UNPACK,$/;"	e	enum:__anoncc6f59690103
GIT_POOL_INIT	extern/libgit2/src/pool.h	/^#define GIT_POOL_INIT /;"	d
GIT_PQUEUE_FIXED_SIZE	extern/libgit2/src/pqueue.h	/^	GIT_PQUEUE_FIXED_SIZE = (GIT_VECTOR_FLAG_MAX << 1),$/;"	e	enum:__anond6f9b4680103
GIT_PRECOMPOSE_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_PRECOMPOSE_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon05b115930203
GIT_PROTECTHFS_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_PROTECTHFS_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon05b115930203
GIT_PROTECTNTFS_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_PROTECTNTFS_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon05b115930203
GIT_PROT_EXEC	extern/libgit2/src/map.h	/^#define GIT_PROT_EXEC /;"	d
GIT_PROT_NONE	extern/libgit2/src/map.h	/^#define GIT_PROT_NONE /;"	d
GIT_PROT_READ	extern/libgit2/src/map.h	/^#define GIT_PROT_READ /;"	d
GIT_PROT_WRITE	extern/libgit2/src/map.h	/^#define GIT_PROT_WRITE /;"	d
GIT_PROXY_AUTO	extern/libgit2/include/git2/proxy.h	/^	GIT_PROXY_AUTO,$/;"	e	enum:__anon63af67960103
GIT_PROXY_NONE	extern/libgit2/include/git2/proxy.h	/^	GIT_PROXY_NONE,$/;"	e	enum:__anon63af67960103
GIT_PROXY_OPTIONS_INIT	extern/libgit2/include/git2/proxy.h	/^#define GIT_PROXY_OPTIONS_INIT /;"	d
GIT_PROXY_OPTIONS_VERSION	extern/libgit2/include/git2/proxy.h	/^#define GIT_PROXY_OPTIONS_VERSION /;"	d
GIT_PROXY_SPECIFIED	extern/libgit2/include/git2/proxy.h	/^	GIT_PROXY_SPECIFIED,$/;"	e	enum:__anon63af67960103
GIT_PUNCT	extern/libgit2/src/wildmatch.c	/^#define GIT_PUNCT /;"	d	file:
GIT_PUSH_OPTIONS_INIT	extern/libgit2/include/git2/remote.h	/^#define GIT_PUSH_OPTIONS_INIT /;"	d
GIT_PUSH_OPTIONS_VERSION	extern/libgit2/include/git2/remote.h	/^#define GIT_PUSH_OPTIONS_VERSION /;"	d
GIT_READER_MISMATCH	extern/libgit2/src/reader.h	/^#define GIT_READER_MISMATCH	/;"	d
GIT_REBASE_APPLY_APPLYING_FILE	extern/libgit2/src/refs.h	/^#define GIT_REBASE_APPLY_APPLYING_FILE /;"	d
GIT_REBASE_APPLY_DIR	extern/libgit2/src/refs.h	/^#define GIT_REBASE_APPLY_DIR /;"	d
GIT_REBASE_APPLY_REBASING_FILE	extern/libgit2/src/refs.h	/^#define GIT_REBASE_APPLY_REBASING_FILE /;"	d
GIT_REBASE_MERGE_DIR	extern/libgit2/src/refs.h	/^#define GIT_REBASE_MERGE_DIR /;"	d
GIT_REBASE_MERGE_INTERACTIVE_FILE	extern/libgit2/src/refs.h	/^#define GIT_REBASE_MERGE_INTERACTIVE_FILE /;"	d
GIT_REBASE_NO_OPERATION	extern/libgit2/include/git2/rebase.h	/^#define GIT_REBASE_NO_OPERATION /;"	d
GIT_REBASE_OPERATION_EDIT	extern/libgit2/include/git2/rebase.h	/^	GIT_REBASE_OPERATION_EDIT,$/;"	e	enum:__anona97543260203
GIT_REBASE_OPERATION_EXEC	extern/libgit2/include/git2/rebase.h	/^	GIT_REBASE_OPERATION_EXEC,$/;"	e	enum:__anona97543260203
GIT_REBASE_OPERATION_FIXUP	extern/libgit2/include/git2/rebase.h	/^	GIT_REBASE_OPERATION_FIXUP,$/;"	e	enum:__anona97543260203
GIT_REBASE_OPERATION_PICK	extern/libgit2/include/git2/rebase.h	/^	GIT_REBASE_OPERATION_PICK = 0,$/;"	e	enum:__anona97543260203
GIT_REBASE_OPERATION_REWORD	extern/libgit2/include/git2/rebase.h	/^	GIT_REBASE_OPERATION_REWORD,$/;"	e	enum:__anona97543260203
GIT_REBASE_OPERATION_SQUASH	extern/libgit2/include/git2/rebase.h	/^	GIT_REBASE_OPERATION_SQUASH,$/;"	e	enum:__anona97543260203
GIT_REBASE_OPTIONS_INIT	extern/libgit2/include/git2/rebase.h	/^#define GIT_REBASE_OPTIONS_INIT /;"	d
GIT_REBASE_OPTIONS_VERSION	extern/libgit2/include/git2/rebase.h	/^#define GIT_REBASE_OPTIONS_VERSION /;"	d
GIT_REBASE_STATE_INIT	extern/libgit2/src/rebase.c	/^#define GIT_REBASE_STATE_INIT /;"	d	file:
GIT_REBASE_TYPE_APPLY	extern/libgit2/src/rebase.c	/^	GIT_REBASE_TYPE_APPLY = 1,$/;"	e	enum:__anone72706600103	file:
GIT_REBASE_TYPE_INTERACTIVE	extern/libgit2/src/rebase.c	/^	GIT_REBASE_TYPE_INTERACTIVE = 3,$/;"	e	enum:__anone72706600103	file:
GIT_REBASE_TYPE_MERGE	extern/libgit2/src/rebase.c	/^	GIT_REBASE_TYPE_MERGE = 2,$/;"	e	enum:__anone72706600103	file:
GIT_REBASE_TYPE_NONE	extern/libgit2/src/rebase.c	/^	GIT_REBASE_TYPE_NONE = 0,$/;"	e	enum:__anone72706600103	file:
GIT_REFCOUNT_DEC	extern/libgit2/src/util.h	/^#define GIT_REFCOUNT_DEC(/;"	d
GIT_REFCOUNT_INC	extern/libgit2/src/util.h	/^#define GIT_REFCOUNT_INC(/;"	d
GIT_REFCOUNT_OWN	extern/libgit2/src/util.h	/^#define GIT_REFCOUNT_OWN(/;"	d
GIT_REFCOUNT_OWNER	extern/libgit2/src/util.h	/^#define GIT_REFCOUNT_OWNER(/;"	d
GIT_REFCOUNT_VAL	extern/libgit2/src/util.h	/^#define GIT_REFCOUNT_VAL(/;"	d
GIT_REFDB_BACKEND_INIT	extern/libgit2/include/git2/sys/refdb_backend.h	/^#define GIT_REFDB_BACKEND_INIT /;"	d
GIT_REFDB_BACKEND_VERSION	extern/libgit2/include/git2/sys/refdb_backend.h	/^#define GIT_REFDB_BACKEND_VERSION /;"	d
GIT_REFERENCE_ALL	extern/libgit2/include/git2/types.h	/^	GIT_REFERENCE_ALL      = GIT_REFERENCE_DIRECT | GIT_REFERENCE_SYMBOLIC,$/;"	e	enum:__anona7f40ac90203
GIT_REFERENCE_DIRECT	extern/libgit2/include/git2/types.h	/^	GIT_REFERENCE_DIRECT   = 1, \/**< A reference that points at an object id *\/$/;"	e	enum:__anona7f40ac90203
GIT_REFERENCE_FORMAT_ALLOW_ONELEVEL	extern/libgit2/include/git2/refs.h	/^	GIT_REFERENCE_FORMAT_ALLOW_ONELEVEL = (1u << 0),$/;"	e	enum:__anon92623e040103
GIT_REFERENCE_FORMAT_NORMAL	extern/libgit2/include/git2/refs.h	/^	GIT_REFERENCE_FORMAT_NORMAL = 0u,$/;"	e	enum:__anon92623e040103
GIT_REFERENCE_FORMAT_REFSPEC_PATTERN	extern/libgit2/include/git2/refs.h	/^	GIT_REFERENCE_FORMAT_REFSPEC_PATTERN = (1u << 1),$/;"	e	enum:__anon92623e040103
GIT_REFERENCE_FORMAT_REFSPEC_SHORTHAND	extern/libgit2/include/git2/refs.h	/^	GIT_REFERENCE_FORMAT_REFSPEC_SHORTHAND = (1u << 2),$/;"	e	enum:__anon92623e040103
GIT_REFERENCE_FORMAT__PRECOMPOSE_UNICODE	extern/libgit2/src/refs.h	/^#define GIT_REFERENCE_FORMAT__PRECOMPOSE_UNICODE	/;"	d
GIT_REFERENCE_FORMAT__VALIDATION_DISABLE	extern/libgit2/src/refs.h	/^#define GIT_REFERENCE_FORMAT__VALIDATION_DISABLE	/;"	d
GIT_REFERENCE_INVALID	extern/libgit2/include/git2/types.h	/^	GIT_REFERENCE_INVALID  = 0, \/**< Invalid reference *\/$/;"	e	enum:__anona7f40ac90203
GIT_REFERENCE_SYMBOLIC	extern/libgit2/include/git2/types.h	/^	GIT_REFERENCE_SYMBOLIC = 2, \/**< A reference that points at another reference *\/$/;"	e	enum:__anona7f40ac90203
GIT_REFERENCE_TYPEMASK	extern/libgit2/src/refs.c	/^#define GIT_REFERENCE_TYPEMASK /;"	d	file:
GIT_REFLOG_DIR	extern/libgit2/src/reflog.h	/^#define GIT_REFLOG_DIR /;"	d
GIT_REFLOG_DIR_MODE	extern/libgit2/src/reflog.h	/^#define GIT_REFLOG_DIR_MODE /;"	d
GIT_REFLOG_FILE_MODE	extern/libgit2/src/reflog.h	/^#define GIT_REFLOG_FILE_MODE /;"	d
GIT_REFLOG_SIZE_MIN	extern/libgit2/src/reflog.h	/^#define GIT_REFLOG_SIZE_MIN /;"	d
GIT_REFNAME_MAX	extern/libgit2/src/refs.h	/^#define GIT_REFNAME_MAX /;"	d
GIT_REFSPEC_TAGS	extern/libgit2/src/refspec.h	/^#define GIT_REFSPEC_TAGS /;"	d
GIT_REFS_DIR	extern/libgit2/src/refs.h	/^#define GIT_REFS_DIR /;"	d
GIT_REFS_DIR_MODE	extern/libgit2/src/refs.h	/^#define GIT_REFS_DIR_MODE /;"	d
GIT_REFS_FILE_MODE	extern/libgit2/src/refs.h	/^#define GIT_REFS_FILE_MODE /;"	d
GIT_REFS_HEADS_DIR	extern/libgit2/src/refs.h	/^#define GIT_REFS_HEADS_DIR /;"	d
GIT_REFS_HEADS_MASTER_FILE	extern/libgit2/src/refs.h	/^#define GIT_REFS_HEADS_MASTER_FILE /;"	d
GIT_REFS_NOTES_DIR	extern/libgit2/src/refs.h	/^#define GIT_REFS_NOTES_DIR /;"	d
GIT_REFS_REMOTES_DIR	extern/libgit2/src/refs.h	/^#define GIT_REFS_REMOTES_DIR /;"	d
GIT_REFS_STASH_FILE	extern/libgit2/src/refs.h	/^#define GIT_REFS_STASH_FILE /;"	d
GIT_REFS_TAGS_DIR	extern/libgit2/src/refs.h	/^#define GIT_REFS_TAGS_DIR /;"	d
GIT_REFS_TAGS_DIR_LEN	extern/libgit2/src/tag.c	/^#define GIT_REFS_TAGS_DIR_LEN /;"	d	file:
GIT_REF_FORMAT_ALLOW_ONELEVEL	extern/libgit2/include/git2/deprecated.h	/^#define GIT_REF_FORMAT_ALLOW_ONELEVEL /;"	d
GIT_REF_FORMAT_NORMAL	extern/libgit2/include/git2/deprecated.h	/^#define GIT_REF_FORMAT_NORMAL /;"	d
GIT_REF_FORMAT_REFSPEC_PATTERN	extern/libgit2/include/git2/deprecated.h	/^#define GIT_REF_FORMAT_REFSPEC_PATTERN /;"	d
GIT_REF_FORMAT_REFSPEC_SHORTHAND	extern/libgit2/include/git2/deprecated.h	/^#define GIT_REF_FORMAT_REFSPEC_SHORTHAND /;"	d
GIT_REF_INVALID	extern/libgit2/include/git2/deprecated.h	/^#define GIT_REF_INVALID /;"	d
GIT_REF_LISTALL	extern/libgit2/include/git2/deprecated.h	/^#define GIT_REF_LISTALL /;"	d
GIT_REF_OID	extern/libgit2/include/git2/deprecated.h	/^#define GIT_REF_OID /;"	d
GIT_REF_SYMBOLIC	extern/libgit2/include/git2/deprecated.h	/^#define GIT_REF_SYMBOLIC /;"	d
GIT_REGEX_BUILTIN	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_REGEX_BUILTIN 1)$/;"	v
GIT_REGEX_PCRE	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_REGEX_PCRE 1)$/;"	v
GIT_REGEX_PCRE2	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_REGEX_PCRE2 1)$/;"	v
GIT_REGEX_REGCOMP	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_REGEX_REGCOMP 1)$/;"	v
GIT_REGEX_REGCOMP_L	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_REGEX_REGCOMP_L 1)$/;"	v
GIT_REGEX_SPECIAL	extern/libgit2/src/wildmatch.c	/^#define GIT_REGEX_SPECIAL /;"	d	file:
GIT_REMOTE_CALLBACKS_INIT	extern/libgit2/include/git2/remote.h	/^#define GIT_REMOTE_CALLBACKS_INIT /;"	d
GIT_REMOTE_CALLBACKS_VERSION	extern/libgit2/include/git2/remote.h	/^#define GIT_REMOTE_CALLBACKS_VERSION /;"	d
GIT_REMOTE_COMPLETION_DOWNLOAD	extern/libgit2/include/git2/remote.h	/^	GIT_REMOTE_COMPLETION_DOWNLOAD,$/;"	e	enum:git_remote_completion_t
GIT_REMOTE_COMPLETION_ERROR	extern/libgit2/include/git2/remote.h	/^	GIT_REMOTE_COMPLETION_ERROR,$/;"	e	enum:git_remote_completion_t
GIT_REMOTE_COMPLETION_INDEXING	extern/libgit2/include/git2/remote.h	/^	GIT_REMOTE_COMPLETION_INDEXING,$/;"	e	enum:git_remote_completion_t
GIT_REMOTE_CONNECTION_OPTIONS_INIT	extern/libgit2/src/remote.h	/^#define GIT_REMOTE_CONNECTION_OPTIONS_INIT /;"	d
GIT_REMOTE_CREATE_OPTIONS_INIT	extern/libgit2/include/git2/remote.h	/^#define GIT_REMOTE_CREATE_OPTIONS_INIT /;"	d
GIT_REMOTE_CREATE_OPTIONS_VERSION	extern/libgit2/include/git2/remote.h	/^#define GIT_REMOTE_CREATE_OPTIONS_VERSION /;"	d
GIT_REMOTE_CREATE_SKIP_DEFAULT_FETCHSPEC	extern/libgit2/include/git2/remote.h	/^	GIT_REMOTE_CREATE_SKIP_DEFAULT_FETCHSPEC = (1 << 1),$/;"	e	enum:__anonc41be5800103
GIT_REMOTE_CREATE_SKIP_INSTEADOF	extern/libgit2/include/git2/remote.h	/^	GIT_REMOTE_CREATE_SKIP_INSTEADOF = (1 << 0),$/;"	e	enum:__anonc41be5800103
GIT_REMOTE_DOWNLOAD_TAGS_ALL	extern/libgit2/include/git2/remote.h	/^	GIT_REMOTE_DOWNLOAD_TAGS_ALL,$/;"	e	enum:__anonc41be5800403
GIT_REMOTE_DOWNLOAD_TAGS_AUTO	extern/libgit2/include/git2/remote.h	/^	GIT_REMOTE_DOWNLOAD_TAGS_AUTO,$/;"	e	enum:__anonc41be5800403
GIT_REMOTE_DOWNLOAD_TAGS_NONE	extern/libgit2/include/git2/remote.h	/^	GIT_REMOTE_DOWNLOAD_TAGS_NONE,$/;"	e	enum:__anonc41be5800403
GIT_REMOTE_DOWNLOAD_TAGS_UNSPECIFIED	extern/libgit2/include/git2/remote.h	/^	GIT_REMOTE_DOWNLOAD_TAGS_UNSPECIFIED = 0,$/;"	e	enum:__anonc41be5800403
GIT_REMOTE_ORIGIN	extern/libgit2/src/remote.h	/^#define GIT_REMOTE_ORIGIN /;"	d
GIT_RENAMED_REF_FILE	extern/libgit2/src/refs.h	/^#define GIT_RENAMED_REF_FILE /;"	d
GIT_REPARSE_DATA_BUFFER	extern/libgit2/src/win32/reparse.h	/^} GIT_REPARSE_DATA_BUFFER;$/;"	t	typeref:struct:_GIT_REPARSE_DATA_BUFFER
GIT_REPOSITORY_FOREACH_HEAD_SKIP_REPO	extern/libgit2/src/repository.h	/^	GIT_REPOSITORY_FOREACH_HEAD_SKIP_REPO      = (1u << 0),$/;"	e	enum:__anon05b115930403
GIT_REPOSITORY_FOREACH_HEAD_SKIP_WORKTREES	extern/libgit2/src/repository.h	/^	GIT_REPOSITORY_FOREACH_HEAD_SKIP_WORKTREES = (1u << 1),$/;"	e	enum:__anon05b115930403
GIT_REPOSITORY_INIT_BARE	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_BARE              = (1u << 0),$/;"	e	enum:__anon8a61cad40203
GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE = (1u << 5),$/;"	e	enum:__anon8a61cad40203
GIT_REPOSITORY_INIT_MKDIR	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_MKDIR             = (1u << 3),$/;"	e	enum:__anon8a61cad40203
GIT_REPOSITORY_INIT_MKPATH	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_MKPATH            = (1u << 4),$/;"	e	enum:__anon8a61cad40203
GIT_REPOSITORY_INIT_NO_DOTGIT_DIR	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_NO_DOTGIT_DIR     = (1u << 2),$/;"	e	enum:__anon8a61cad40203
GIT_REPOSITORY_INIT_NO_REINIT	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_NO_REINIT         = (1u << 1),$/;"	e	enum:__anon8a61cad40203
GIT_REPOSITORY_INIT_OPTIONS_INIT	extern/libgit2/include/git2/repository.h	/^#define GIT_REPOSITORY_INIT_OPTIONS_INIT /;"	d
GIT_REPOSITORY_INIT_OPTIONS_VERSION	extern/libgit2/include/git2/repository.h	/^#define GIT_REPOSITORY_INIT_OPTIONS_VERSION /;"	d
GIT_REPOSITORY_INIT_RELATIVE_GITLINK	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_RELATIVE_GITLINK  = (1u << 6),$/;"	e	enum:__anon8a61cad40203
GIT_REPOSITORY_INIT_SHARED_ALL	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_SHARED_ALL   = 0002777,$/;"	e	enum:__anon8a61cad40303
GIT_REPOSITORY_INIT_SHARED_GROUP	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_SHARED_GROUP = 0002775,$/;"	e	enum:__anon8a61cad40303
GIT_REPOSITORY_INIT_SHARED_UMASK	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_SHARED_UMASK = 0,$/;"	e	enum:__anon8a61cad40303
GIT_REPOSITORY_INIT__HAS_DOTGIT	extern/libgit2/src/repository.h	/^	GIT_REPOSITORY_INIT__HAS_DOTGIT = (1u << 16),$/;"	e	enum:__anon05b115930303
GIT_REPOSITORY_INIT__IS_REINIT	extern/libgit2/src/repository.h	/^	GIT_REPOSITORY_INIT__IS_REINIT  = (1u << 18),$/;"	e	enum:__anon05b115930303
GIT_REPOSITORY_INIT__NATURAL_WD	extern/libgit2/src/repository.h	/^	GIT_REPOSITORY_INIT__NATURAL_WD = (1u << 17),$/;"	e	enum:__anon05b115930303
GIT_REPOSITORY_ITEM_COMMONDIR	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_COMMONDIR,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_CONFIG	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_CONFIG,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_GITDIR	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_GITDIR,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_HOOKS	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_HOOKS,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_INDEX	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_INDEX,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_INFO	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_INFO,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_LOGS	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_LOGS,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_MODULES	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_MODULES,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_OBJECTS	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_OBJECTS,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_PACKED_REFS	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_PACKED_REFS,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_REFS	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_REFS,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_REMOTES	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_REMOTES,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_WORKDIR	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_WORKDIR,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM_WORKTREES	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_WORKTREES,$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_ITEM__LAST	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM__LAST$/;"	e	enum:__anon8a61cad40503
GIT_REPOSITORY_OPEN_BARE	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_OPEN_BARE      = (1 << 2),$/;"	e	enum:__anon8a61cad40103
GIT_REPOSITORY_OPEN_CROSS_FS	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_OPEN_CROSS_FS  = (1 << 1),$/;"	e	enum:__anon8a61cad40103
GIT_REPOSITORY_OPEN_FROM_ENV	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_OPEN_FROM_ENV  = (1 << 4),$/;"	e	enum:__anon8a61cad40103
GIT_REPOSITORY_OPEN_NO_DOTGIT	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_OPEN_NO_DOTGIT = (1 << 3),$/;"	e	enum:__anon8a61cad40103
GIT_REPOSITORY_OPEN_NO_SEARCH	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_OPEN_NO_SEARCH = (1 << 0),$/;"	e	enum:__anon8a61cad40103
GIT_REPOSITORY_STATE_APPLY_MAILBOX	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_APPLY_MAILBOX,$/;"	e	enum:__anon8a61cad40603
GIT_REPOSITORY_STATE_APPLY_MAILBOX_OR_REBASE	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_APPLY_MAILBOX_OR_REBASE,$/;"	e	enum:__anon8a61cad40603
GIT_REPOSITORY_STATE_BISECT	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_BISECT,$/;"	e	enum:__anon8a61cad40603
GIT_REPOSITORY_STATE_CHERRYPICK	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_CHERRYPICK,$/;"	e	enum:__anon8a61cad40603
GIT_REPOSITORY_STATE_CHERRYPICK_SEQUENCE	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_CHERRYPICK_SEQUENCE,$/;"	e	enum:__anon8a61cad40603
GIT_REPOSITORY_STATE_MERGE	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_MERGE,$/;"	e	enum:__anon8a61cad40603
GIT_REPOSITORY_STATE_NONE	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_NONE,$/;"	e	enum:__anon8a61cad40603
GIT_REPOSITORY_STATE_REBASE	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_REBASE,$/;"	e	enum:__anon8a61cad40603
GIT_REPOSITORY_STATE_REBASE_INTERACTIVE	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_REBASE_INTERACTIVE,$/;"	e	enum:__anon8a61cad40603
GIT_REPOSITORY_STATE_REBASE_MERGE	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_REBASE_MERGE,$/;"	e	enum:__anon8a61cad40603
GIT_REPOSITORY_STATE_REVERT	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_REVERT,$/;"	e	enum:__anon8a61cad40603
GIT_REPOSITORY_STATE_REVERT_SEQUENCE	extern/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_REVERT_SEQUENCE,$/;"	e	enum:__anon8a61cad40603
GIT_REPO_VERSION	extern/libgit2/src/repository.c	/^#define GIT_REPO_VERSION /;"	d	file:
GIT_RESET_HARD	extern/libgit2/include/git2/reset.h	/^	GIT_RESET_HARD  = 3, \/**< MIXED plus changes in working tree discarded *\/$/;"	e	enum:__anondf8eb2770103
GIT_RESET_MIXED	extern/libgit2/include/git2/reset.h	/^	GIT_RESET_MIXED = 2, \/**< SOFT plus reset index to the commit *\/$/;"	e	enum:__anondf8eb2770103
GIT_RESET_SOFT	extern/libgit2/include/git2/reset.h	/^	GIT_RESET_SOFT  = 1, \/**< Move the head to the given commit *\/$/;"	e	enum:__anondf8eb2770103
GIT_RESTRICT	extern/libgit2/src/win32/thread.h	/^#	define GIT_RESTRICT /;"	d
GIT_RETRY	extern/libgit2/include/git2/errors.h	/^	GIT_RETRY           = -32,	\/**< Internal only *\/$/;"	e	enum:__anonb92219d10103
GIT_REVERT_FILE_MODE	extern/libgit2/src/revert.c	/^#define GIT_REVERT_FILE_MODE	/;"	d	file:
GIT_REVERT_HEAD_FILE	extern/libgit2/src/refs.h	/^#define GIT_REVERT_HEAD_FILE /;"	d
GIT_REVERT_OPTIONS_INIT	extern/libgit2/include/git2/revert.h	/^#define GIT_REVERT_OPTIONS_INIT /;"	d
GIT_REVERT_OPTIONS_VERSION	extern/libgit2/include/git2/revert.h	/^#define GIT_REVERT_OPTIONS_VERSION /;"	d
GIT_REVPARSE_MERGE_BASE	extern/libgit2/include/git2/revparse.h	/^	GIT_REVPARSE_MERGE_BASE     = 1 << 2,$/;"	e	enum:__anonaab5087c0103
GIT_REVPARSE_RANGE	extern/libgit2/include/git2/revparse.h	/^	GIT_REVPARSE_RANGE          = 1 << 1,$/;"	e	enum:__anonaab5087c0103
GIT_REVPARSE_SINGLE	extern/libgit2/include/git2/revparse.h	/^	GIT_REVPARSE_SINGLE         = 1 << 0,$/;"	e	enum:__anonaab5087c0103
GIT_REVWALK__PUSH_OPTIONS_INIT	extern/libgit2/src/revwalk.h	/^#define GIT_REVWALK__PUSH_OPTIONS_INIT /;"	d
GIT_RMDIR_EMPTY_HIERARCHY	extern/libgit2/src/futils.h	/^	GIT_RMDIR_EMPTY_HIERARCHY = 0,$/;"	e	enum:__anonce3edc2a0203
GIT_RMDIR_EMPTY_PARENTS	extern/libgit2/src/futils.h	/^	GIT_RMDIR_EMPTY_PARENTS   = (1 << 2),$/;"	e	enum:__anonce3edc2a0203
GIT_RMDIR_REMOVE_BLOCKERS	extern/libgit2/src/futils.h	/^	GIT_RMDIR_REMOVE_BLOCKERS = (1 << 3),$/;"	e	enum:__anonce3edc2a0203
GIT_RMDIR_REMOVE_FILES	extern/libgit2/src/futils.h	/^	GIT_RMDIR_REMOVE_FILES    = (1 << 0),$/;"	e	enum:__anonce3edc2a0203
GIT_RMDIR_SKIP_NONEMPTY	extern/libgit2/src/futils.h	/^	GIT_RMDIR_SKIP_NONEMPTY   = (1 << 1),$/;"	e	enum:__anonce3edc2a0203
GIT_RMDIR_SKIP_ROOT	extern/libgit2/src/futils.h	/^	GIT_RMDIR_SKIP_ROOT       = (1 << 4),$/;"	e	enum:__anonce3edc2a0203
GIT_RWLOCK_STATIC_INIT	extern/libgit2/src/thread-utils.h	/^#define GIT_RWLOCK_STATIC_INIT	/;"	d
GIT_RWLOCK_STATIC_INIT	extern/libgit2/src/unix/pthread.h	/^#define GIT_RWLOCK_STATIC_INIT	/;"	d
GIT_SAFE_CRLF_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_SAFE_CRLF_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon05b115930203
GIT_SAFE_CRLF_FAIL	extern/libgit2/src/repository.h	/^	GIT_SAFE_CRLF_FAIL = 1,$/;"	e	enum:__anon05b115930203
GIT_SAFE_CRLF_FALSE	extern/libgit2/src/repository.h	/^	GIT_SAFE_CRLF_FALSE = 0,$/;"	e	enum:__anon05b115930203
GIT_SAFE_CRLF_WARN	extern/libgit2/src/repository.h	/^	GIT_SAFE_CRLF_WARN = 2,$/;"	e	enum:__anon05b115930203
GIT_SECURE_TRANSPORT	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^		SET(GIT_SECURE_TRANSPORT 1)$/;"	v
GIT_SEQUENCER_DIR	extern/libgit2/src/refs.h	/^#define GIT_SEQUENCER_DIR /;"	d
GIT_SEQUENCER_HEAD_FILE	extern/libgit2/src/refs.h	/^#define GIT_SEQUENCER_HEAD_FILE /;"	d
GIT_SEQUENCER_OPTIONS_FILE	extern/libgit2/src/refs.h	/^#define GIT_SEQUENCER_OPTIONS_FILE /;"	d
GIT_SEQUENCER_TODO_FILE	extern/libgit2/src/refs.h	/^#define GIT_SEQUENCER_TODO_FILE /;"	d
GIT_SERVICE_RECEIVEPACK	extern/libgit2/include/git2/sys/transport.h	/^	GIT_SERVICE_RECEIVEPACK = 4,$/;"	e	enum:__anon34648bcf0203
GIT_SERVICE_RECEIVEPACK_LS	extern/libgit2/include/git2/sys/transport.h	/^	GIT_SERVICE_RECEIVEPACK_LS = 3,$/;"	e	enum:__anon34648bcf0203
GIT_SERVICE_UPLOADPACK	extern/libgit2/include/git2/sys/transport.h	/^	GIT_SERVICE_UPLOADPACK = 2,$/;"	e	enum:__anon34648bcf0203
GIT_SERVICE_UPLOADPACK_LS	extern/libgit2/include/git2/sys/transport.h	/^	GIT_SERVICE_UPLOADPACK_LS = 1,$/;"	e	enum:__anon34648bcf0203
GIT_SHA1_COLLISIONDETECT	extern/libgit2/cmake/Modules/SelectHashes.cmake	/^	SET(GIT_SHA1_COLLISIONDETECT 1)$/;"	v
GIT_SHA1_COMMON_CRYPTO	extern/libgit2/cmake/Modules/SelectHashes.cmake	/^	SET(GIT_SHA1_COMMON_CRYPTO 1)$/;"	v
GIT_SHA1_MBEDTLS	extern/libgit2/cmake/Modules/SelectHashes.cmake	/^	SET(GIT_SHA1_MBEDTLS 1)$/;"	v
GIT_SHA1_OPENSSL	extern/libgit2/cmake/Modules/SelectHashes.cmake	/^	SET(GIT_SHA1_OPENSSL 1)$/;"	v
GIT_SHA1_WIN32	extern/libgit2/cmake/Modules/SelectHashes.cmake	/^	SET(GIT_SHA1_WIN32 1)$/;"	v
GIT_SIDE_BAND_DATA	extern/libgit2/src/transports/smart.h	/^#define GIT_SIDE_BAND_DATA /;"	d
GIT_SIDE_BAND_ERROR	extern/libgit2/src/transports/smart.h	/^#define GIT_SIDE_BAND_ERROR /;"	d
GIT_SIDE_BAND_PROGRESS	extern/libgit2/src/transports/smart.h	/^#define GIT_SIDE_BAND_PROGRESS /;"	d
GIT_SOCKET	extern/libgit2/src/unix/posix.h	/^typedef int GIT_SOCKET;$/;"	t	typeref:typename:int
GIT_SOCKET	extern/libgit2/src/win32/posix.h	/^typedef SOCKET GIT_SOCKET;$/;"	t	typeref:typename:SOCKET
GIT_SORT_NONE	extern/libgit2/include/git2/revwalk.h	/^	GIT_SORT_NONE = 0,$/;"	e	enum:__anon0dbafed00103
GIT_SORT_REVERSE	extern/libgit2/include/git2/revwalk.h	/^	GIT_SORT_REVERSE = 1 << 2,$/;"	e	enum:__anon0dbafed00103
GIT_SORT_TIME	extern/libgit2/include/git2/revwalk.h	/^	GIT_SORT_TIME = 1 << 1,$/;"	e	enum:__anon0dbafed00103
GIT_SORT_TOPOLOGICAL	extern/libgit2/include/git2/revwalk.h	/^	GIT_SORT_TOPOLOGICAL = 1 << 0,$/;"	e	enum:__anon0dbafed00103
GIT_SPACE	extern/libgit2/src/wildmatch.c	/^#define GIT_SPACE /;"	d	file:
GIT_SRWLOCK	extern/libgit2/src/win32/thread.h	/^typedef struct { void *Ptr; } GIT_SRWLOCK;$/;"	t	typeref:struct:__anon7162bc2d0208
GIT_SSH	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_SSH 1)$/;"	v
GIT_SSH_MEMORY_CREDENTIALS	extern/libgit2/src/CMakeLists.txt	/^		SET(GIT_SSH_MEMORY_CREDENTIALS 1)$/;"	v
GIT_SSL_DEFAULT_CIPHERS	extern/libgit2/src/streams/mbedtls.c	/^#define GIT_SSL_DEFAULT_CIPHERS /;"	d	file:
GIT_SSL_DEFAULT_CIPHERS	extern/libgit2/src/streams/openssl.c	/^#define GIT_SSL_DEFAULT_CIPHERS /;"	d	file:
GIT_SSL_DEFAULT_CIPHERS_COUNT	extern/libgit2/src/streams/mbedtls.c	/^#define GIT_SSL_DEFAULT_CIPHERS_COUNT /;"	d	file:
GIT_STASH_APPLY_DEFAULT	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_DEFAULT = 0,$/;"	e	enum:__anon4e4811d70203
GIT_STASH_APPLY_OPTIONS_INIT	extern/libgit2/include/git2/stash.h	/^#define GIT_STASH_APPLY_OPTIONS_INIT /;"	d
GIT_STASH_APPLY_OPTIONS_VERSION	extern/libgit2/include/git2/stash.h	/^#define GIT_STASH_APPLY_OPTIONS_VERSION /;"	d
GIT_STASH_APPLY_PROGRESS_ANALYZE_INDEX	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_ANALYZE_INDEX,$/;"	e	enum:__anon4e4811d70303
GIT_STASH_APPLY_PROGRESS_ANALYZE_MODIFIED	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_ANALYZE_MODIFIED,$/;"	e	enum:__anon4e4811d70303
GIT_STASH_APPLY_PROGRESS_ANALYZE_UNTRACKED	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_ANALYZE_UNTRACKED,$/;"	e	enum:__anon4e4811d70303
GIT_STASH_APPLY_PROGRESS_CHECKOUT_MODIFIED	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_CHECKOUT_MODIFIED,$/;"	e	enum:__anon4e4811d70303
GIT_STASH_APPLY_PROGRESS_CHECKOUT_UNTRACKED	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_CHECKOUT_UNTRACKED,$/;"	e	enum:__anon4e4811d70303
GIT_STASH_APPLY_PROGRESS_DONE	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_DONE,$/;"	e	enum:__anon4e4811d70303
GIT_STASH_APPLY_PROGRESS_LOADING_STASH	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_LOADING_STASH,$/;"	e	enum:__anon4e4811d70303
GIT_STASH_APPLY_PROGRESS_NONE	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_NONE = 0,$/;"	e	enum:__anon4e4811d70303
GIT_STASH_APPLY_REINSTATE_INDEX	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_REINSTATE_INDEX = (1 << 0),$/;"	e	enum:__anon4e4811d70203
GIT_STASH_DEFAULT	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_DEFAULT = 0,$/;"	e	enum:__anon4e4811d70103
GIT_STASH_FILE	extern/libgit2/src/refs.h	/^#define GIT_STASH_FILE /;"	d
GIT_STASH_INCLUDE_IGNORED	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_INCLUDE_IGNORED = (1 << 2),$/;"	e	enum:__anon4e4811d70103
GIT_STASH_INCLUDE_UNTRACKED	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_INCLUDE_UNTRACKED = (1 << 1),$/;"	e	enum:__anon4e4811d70103
GIT_STASH_KEEP_INDEX	extern/libgit2/include/git2/stash.h	/^	GIT_STASH_KEEP_INDEX = (1 << 0),$/;"	e	enum:__anon4e4811d70103
GIT_STATUS_CONFLICTED	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_CONFLICTED       = (1u << 15),$/;"	e	enum:__anon1764a4980103
GIT_STATUS_CURRENT	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_CURRENT = 0,$/;"	e	enum:__anon1764a4980103
GIT_STATUS_IGNORED	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_IGNORED          = (1u << 14),$/;"	e	enum:__anon1764a4980103
GIT_STATUS_INDEX_DELETED	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_INDEX_DELETED    = (1u << 2),$/;"	e	enum:__anon1764a4980103
GIT_STATUS_INDEX_MODIFIED	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_INDEX_MODIFIED   = (1u << 1),$/;"	e	enum:__anon1764a4980103
GIT_STATUS_INDEX_NEW	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_INDEX_NEW        = (1u << 0),$/;"	e	enum:__anon1764a4980103
GIT_STATUS_INDEX_RENAMED	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_INDEX_RENAMED    = (1u << 3),$/;"	e	enum:__anon1764a4980103
GIT_STATUS_INDEX_TYPECHANGE	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_INDEX_TYPECHANGE = (1u << 4),$/;"	e	enum:__anon1764a4980103
GIT_STATUS_OPTIONS_INIT	extern/libgit2/include/git2/status.h	/^#define GIT_STATUS_OPTIONS_INIT /;"	d
GIT_STATUS_OPTIONS_VERSION	extern/libgit2/include/git2/status.h	/^#define GIT_STATUS_OPTIONS_VERSION /;"	d
GIT_STATUS_OPT_DEFAULTS	extern/libgit2/include/git2/status.h	/^#define GIT_STATUS_OPT_DEFAULTS /;"	d
GIT_STATUS_OPT_DISABLE_PATHSPEC_MATCH	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_DISABLE_PATHSPEC_MATCH           = (1u << 5),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_EXCLUDE_SUBMODULES	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_EXCLUDE_SUBMODULES               = (1u << 3),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_INCLUDE_IGNORED	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_INCLUDE_IGNORED                  = (1u << 1),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_INCLUDE_UNMODIFIED	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_INCLUDE_UNMODIFIED               = (1u << 2),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_INCLUDE_UNREADABLE	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_INCLUDE_UNREADABLE               = (1u << 14),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_INCLUDE_UNREADABLE_AS_UNTRACKED	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_INCLUDE_UNREADABLE_AS_UNTRACKED  = (1u << 15),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_INCLUDE_UNTRACKED	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_INCLUDE_UNTRACKED                = (1u << 0),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_NO_REFRESH	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_NO_REFRESH                       = (1u << 12),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_RECURSE_IGNORED_DIRS	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_RECURSE_IGNORED_DIRS             = (1u << 6),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_RECURSE_UNTRACKED_DIRS	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_RECURSE_UNTRACKED_DIRS           = (1u << 4),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_RENAMES_FROM_REWRITES	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_RENAMES_FROM_REWRITES            = (1u << 11),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_RENAMES_HEAD_TO_INDEX	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_RENAMES_HEAD_TO_INDEX            = (1u << 7),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_RENAMES_INDEX_TO_WORKDIR	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_RENAMES_INDEX_TO_WORKDIR         = (1u << 8),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_SORT_CASE_INSENSITIVELY	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_SORT_CASE_INSENSITIVELY          = (1u << 10),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_SORT_CASE_SENSITIVELY	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_SORT_CASE_SENSITIVELY            = (1u << 9),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_OPT_UPDATE_INDEX	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_UPDATE_INDEX                     = (1u << 13),$/;"	e	enum:__anon1764a4980303
GIT_STATUS_SHOW_INDEX_AND_WORKDIR	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_SHOW_INDEX_AND_WORKDIR = 0,$/;"	e	enum:__anon1764a4980203
GIT_STATUS_SHOW_INDEX_ONLY	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_SHOW_INDEX_ONLY = 1,$/;"	e	enum:__anon1764a4980203
GIT_STATUS_SHOW_WORKDIR_ONLY	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_SHOW_WORKDIR_ONLY = 2,$/;"	e	enum:__anon1764a4980203
GIT_STATUS_WT_DELETED	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_WT_DELETED       = (1u << 9),$/;"	e	enum:__anon1764a4980103
GIT_STATUS_WT_MODIFIED	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_WT_MODIFIED      = (1u << 8),$/;"	e	enum:__anon1764a4980103
GIT_STATUS_WT_NEW	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_WT_NEW           = (1u << 7),$/;"	e	enum:__anon1764a4980103
GIT_STATUS_WT_RENAMED	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_WT_RENAMED       = (1u << 11),$/;"	e	enum:__anon1764a4980103
GIT_STATUS_WT_TYPECHANGE	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_WT_TYPECHANGE    = (1u << 10),$/;"	e	enum:__anon1764a4980103
GIT_STATUS_WT_UNREADABLE	extern/libgit2/include/git2/status.h	/^	GIT_STATUS_WT_UNREADABLE    = (1u << 12),$/;"	e	enum:__anon1764a4980103
GIT_STDLIB_CALL	extern/libgit2/src/common.h	/^#define GIT_STDLIB_CALL$/;"	d
GIT_STDLIB_CALL	extern/libgit2/src/win32/msvc-compat.h	/^#define GIT_STDLIB_CALL /;"	d
GIT_STREAM_RDONLY	extern/libgit2/include/git2/odb_backend.h	/^	GIT_STREAM_RDONLY = (1 << 1),$/;"	e	enum:__anone69a74500103
GIT_STREAM_RW	extern/libgit2/include/git2/odb_backend.h	/^	GIT_STREAM_RW = (GIT_STREAM_RDONLY | GIT_STREAM_WRONLY),$/;"	e	enum:__anone69a74500103
GIT_STREAM_STANDARD	extern/libgit2/include/git2/sys/stream.h	/^	GIT_STREAM_STANDARD = 1,$/;"	e	enum:__anon5cee94ee0203
GIT_STREAM_TLS	extern/libgit2/include/git2/sys/stream.h	/^	GIT_STREAM_TLS = 2,$/;"	e	enum:__anon5cee94ee0203
GIT_STREAM_VERSION	extern/libgit2/include/git2/sys/stream.h	/^#define GIT_STREAM_VERSION /;"	d
GIT_STREAM_WRONLY	extern/libgit2/include/git2/odb_backend.h	/^	GIT_STREAM_WRONLY = (1 << 2),$/;"	e	enum:__anone69a74500103
GIT_SUBMODULE_IGNORE_ALL	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_IGNORE_ALL       = 4,  \/**< never dirty *\/$/;"	e	enum:__anona7f40ac90603
GIT_SUBMODULE_IGNORE_DIRTY	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_IGNORE_DIRTY     = 3,  \/**< only dirty if HEAD moved *\/$/;"	e	enum:__anona7f40ac90603
GIT_SUBMODULE_IGNORE_NONE	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_IGNORE_NONE      = 1,  \/**< any change or untracked == dirty *\/$/;"	e	enum:__anona7f40ac90603
GIT_SUBMODULE_IGNORE_UNSPECIFIED	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_IGNORE_UNSPECIFIED  = -1, \/**< use the submodule's configuration *\/$/;"	e	enum:__anona7f40ac90603
GIT_SUBMODULE_IGNORE_UNTRACKED	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_IGNORE_UNTRACKED = 2,  \/**< dirty if tracked files change *\/$/;"	e	enum:__anona7f40ac90603
GIT_SUBMODULE_RECURSE_NO	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_RECURSE_NO = 0,$/;"	e	enum:__anona7f40ac90703
GIT_SUBMODULE_RECURSE_ONDEMAND	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_RECURSE_ONDEMAND = 2,$/;"	e	enum:__anona7f40ac90703
GIT_SUBMODULE_RECURSE_YES	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_RECURSE_YES = 1,$/;"	e	enum:__anona7f40ac90703
GIT_SUBMODULE_STATUS_INDEX_ADDED	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_INDEX_ADDED       = (1u << 4),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_INDEX_DELETED	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_INDEX_DELETED     = (1u << 5),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_INDEX_MODIFIED	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_INDEX_MODIFIED    = (1u << 6),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_IN_CONFIG	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_IN_CONFIG         = (1u << 2),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_IN_HEAD	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_IN_HEAD           = (1u << 0),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_IN_INDEX	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_IN_INDEX          = (1u << 1),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_IN_WD	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_IN_WD             = (1u << 3),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_IS_INDEX_UNMODIFIED	extern/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS_IS_INDEX_UNMODIFIED(/;"	d
GIT_SUBMODULE_STATUS_IS_UNMODIFIED	extern/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS_IS_UNMODIFIED(/;"	d
GIT_SUBMODULE_STATUS_IS_WD_DIRTY	extern/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS_IS_WD_DIRTY(/;"	d
GIT_SUBMODULE_STATUS_IS_WD_UNMODIFIED	extern/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS_IS_WD_UNMODIFIED(/;"	d
GIT_SUBMODULE_STATUS_WD_ADDED	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_ADDED          = (1u << 8),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_WD_DELETED	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_DELETED        = (1u << 9),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_WD_INDEX_MODIFIED	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_INDEX_MODIFIED = (1u << 11),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_WD_MODIFIED	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_MODIFIED       = (1u << 10),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_WD_UNINITIALIZED	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_UNINITIALIZED  = (1u << 7),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_WD_UNTRACKED	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_UNTRACKED      = (1u << 13),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS_WD_WD_MODIFIED	extern/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_WD_MODIFIED    = (1u << 12),$/;"	e	enum:__anonfe0d90e40103
GIT_SUBMODULE_STATUS__CLEAR_INTERNAL	extern/libgit2/src/submodule.h	/^#define GIT_SUBMODULE_STATUS__CLEAR_INTERNAL(/;"	d
GIT_SUBMODULE_STATUS__HEAD_NOT_SUBMODULE	extern/libgit2/src/submodule.h	/^	GIT_SUBMODULE_STATUS__HEAD_NOT_SUBMODULE  = (1u << 24),$/;"	e	enum:__anon952effc30103
GIT_SUBMODULE_STATUS__HEAD_OID_VALID	extern/libgit2/src/submodule.h	/^	GIT_SUBMODULE_STATUS__HEAD_OID_VALID      = (1u << 21),$/;"	e	enum:__anon952effc30103
GIT_SUBMODULE_STATUS__INDEX_FLAGS	extern/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS__INDEX_FLAGS	/;"	d
GIT_SUBMODULE_STATUS__INDEX_MULTIPLE_ENTRIES	extern/libgit2/src/submodule.h	/^	GIT_SUBMODULE_STATUS__INDEX_MULTIPLE_ENTRIES = (1u << 27),$/;"	e	enum:__anon952effc30103
GIT_SUBMODULE_STATUS__INDEX_NOT_SUBMODULE	extern/libgit2/src/submodule.h	/^	GIT_SUBMODULE_STATUS__INDEX_NOT_SUBMODULE = (1u << 25),$/;"	e	enum:__anon952effc30103
GIT_SUBMODULE_STATUS__INDEX_OID_VALID	extern/libgit2/src/submodule.h	/^	GIT_SUBMODULE_STATUS__INDEX_OID_VALID     = (1u << 22),$/;"	e	enum:__anon952effc30103
GIT_SUBMODULE_STATUS__IN_FLAGS	extern/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS__IN_FLAGS	/;"	d
GIT_SUBMODULE_STATUS__WD_FLAGS	extern/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS__WD_FLAGS	/;"	d
GIT_SUBMODULE_STATUS__WD_NOT_SUBMODULE	extern/libgit2/src/submodule.h	/^	GIT_SUBMODULE_STATUS__WD_NOT_SUBMODULE    = (1u << 26),$/;"	e	enum:__anon952effc30103
GIT_SUBMODULE_STATUS__WD_OID_VALID	extern/libgit2/src/submodule.h	/^	GIT_SUBMODULE_STATUS__WD_OID_VALID        = (1u << 23),$/;"	e	enum:__anon952effc30103
GIT_SUBMODULE_STATUS__WD_SCANNED	extern/libgit2/src/submodule.h	/^	GIT_SUBMODULE_STATUS__WD_SCANNED          = (1u << 20),$/;"	e	enum:__anon952effc30103
GIT_SUBMODULE_UPDATE_CHECKOUT	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_UPDATE_CHECKOUT = 1,$/;"	e	enum:__anona7f40ac90503
GIT_SUBMODULE_UPDATE_DEFAULT	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_UPDATE_DEFAULT  = 0$/;"	e	enum:__anona7f40ac90503
GIT_SUBMODULE_UPDATE_MERGE	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_UPDATE_MERGE    = 3,$/;"	e	enum:__anona7f40ac90503
GIT_SUBMODULE_UPDATE_NONE	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_UPDATE_NONE     = 4,$/;"	e	enum:__anona7f40ac90503
GIT_SUBMODULE_UPDATE_OPTIONS_INIT	extern/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_UPDATE_OPTIONS_INIT /;"	d
GIT_SUBMODULE_UPDATE_OPTIONS_VERSION	extern/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_UPDATE_OPTIONS_VERSION /;"	d
GIT_SUBMODULE_UPDATE_REBASE	extern/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_UPDATE_REBASE   = 2,$/;"	e	enum:__anona7f40ac90503
GIT_SYMLINKS_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_SYMLINKS_DEFAULT = GIT_CONFIGMAP_TRUE,$/;"	e	enum:__anon05b115930203
GIT_SYMREF	extern/libgit2/src/refs.h	/^#define GIT_SYMREF /;"	d
GIT_SYSDIR_GLOBAL	extern/libgit2/src/sysdir.h	/^	GIT_SYSDIR_GLOBAL = 1,$/;"	e	enum:__anonfece52110103
GIT_SYSDIR_PROGRAMDATA	extern/libgit2/src/sysdir.h	/^	GIT_SYSDIR_PROGRAMDATA = 3,$/;"	e	enum:__anonfece52110103
GIT_SYSDIR_SYSTEM	extern/libgit2/src/sysdir.h	/^	GIT_SYSDIR_SYSTEM = 0,$/;"	e	enum:__anonfece52110103
GIT_SYSDIR_TEMPLATE	extern/libgit2/src/sysdir.h	/^	GIT_SYSDIR_TEMPLATE = 4,$/;"	e	enum:__anonfece52110103
GIT_SYSDIR_XDG	extern/libgit2/src/sysdir.h	/^	GIT_SYSDIR_XDG    = 2,$/;"	e	enum:__anonfece52110103
GIT_SYSDIR__MAX	extern/libgit2/src/sysdir.h	/^	GIT_SYSDIR__MAX   = 5,$/;"	e	enum:__anonfece52110103
GIT_THREADS	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_THREADS 1)$/;"	v
GIT_TRACE	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_TRACE 1)$/;"	v
GIT_TRACE_DEBUG	extern/libgit2/include/git2/trace.h	/^	GIT_TRACE_DEBUG = 5,$/;"	e	enum:__anon968f2a830103
GIT_TRACE_ERROR	extern/libgit2/include/git2/trace.h	/^	GIT_TRACE_ERROR = 2,$/;"	e	enum:__anon968f2a830103
GIT_TRACE_FATAL	extern/libgit2/include/git2/trace.h	/^	GIT_TRACE_FATAL = 1,$/;"	e	enum:__anon968f2a830103
GIT_TRACE_INFO	extern/libgit2/include/git2/trace.h	/^	GIT_TRACE_INFO = 4,$/;"	e	enum:__anon968f2a830103
GIT_TRACE_NONE	extern/libgit2/include/git2/trace.h	/^	GIT_TRACE_NONE = 0,$/;"	e	enum:__anon968f2a830103
GIT_TRACE_TRACE	extern/libgit2/include/git2/trace.h	/^	GIT_TRACE_TRACE = 6$/;"	e	enum:__anon968f2a830103
GIT_TRACE_WARN	extern/libgit2/include/git2/trace.h	/^	GIT_TRACE_WARN = 3,$/;"	e	enum:__anon968f2a830103
GIT_TRANSPORTFLAGS_NONE	extern/libgit2/include/git2/sys/transport.h	/^	GIT_TRANSPORTFLAGS_NONE = 0,$/;"	e	enum:__anon34648bcf0103
GIT_TRANSPORT_COUNT	extern/libgit2/src/transport.c	/^#define GIT_TRANSPORT_COUNT /;"	d	file:
GIT_TRANSPORT_INIT	extern/libgit2/include/git2/sys/transport.h	/^#define GIT_TRANSPORT_INIT /;"	d
GIT_TRANSPORT_VERSION	extern/libgit2/include/git2/sys/transport.h	/^#define GIT_TRANSPORT_VERSION /;"	d
GIT_TREEWALK_POST	extern/libgit2/include/git2/tree.h	/^	GIT_TREEWALK_POST = 1, \/* Post-order *\/$/;"	e	enum:__anon97f705e40103
GIT_TREEWALK_PRE	extern/libgit2/include/git2/tree.h	/^	GIT_TREEWALK_PRE = 0, \/* Pre-order *\/$/;"	e	enum:__anon97f705e40103
GIT_TREE_UPDATE_REMOVE	extern/libgit2/include/git2/tree.h	/^	GIT_TREE_UPDATE_REMOVE,$/;"	e	enum:__anon97f705e40203
GIT_TREE_UPDATE_UPSERT	extern/libgit2/include/git2/tree.h	/^	GIT_TREE_UPDATE_UPSERT,$/;"	e	enum:__anon97f705e40203
GIT_TRUSTCTIME_DEFAULT	extern/libgit2/src/repository.h	/^	GIT_TRUSTCTIME_DEFAULT = GIT_CONFIGMAP_TRUE,$/;"	e	enum:__anon05b115930203
GIT_TYPEOF	extern/libgit2/src/cc-compat.h	/^#	define GIT_TYPEOF(/;"	d
GIT_UNUSED	extern/libgit2/src/cc-compat.h	/^#define GIT_UNUSED(/;"	d
GIT_USE_FUTIMENS	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_USE_FUTIMENS 1)$/;"	v
GIT_USE_ICONV	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_USE_ICONV 1)$/;"	v
GIT_USE_NSEC	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_USE_NSEC 1)$/;"	v
GIT_USE_STAT_MTIM	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_USE_STAT_MTIM 1)$/;"	v
GIT_USE_STAT_MTIMESPEC	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_USE_STAT_MTIMESPEC 1)$/;"	v
GIT_USE_STAT_MTIME_NSEC	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_USE_STAT_MTIME_NSEC 1)$/;"	v
GIT_VECTOR_FLAG_MAX	extern/libgit2/src/vector.h	/^	GIT_VECTOR_FLAG_MAX = (1u << 1),$/;"	e	enum:__anon9bd959e60103
GIT_VECTOR_GET	extern/libgit2/src/vector.h	/^#define GIT_VECTOR_GET(/;"	d
GIT_VECTOR_INIT	extern/libgit2/src/vector.h	/^#define GIT_VECTOR_INIT /;"	d
GIT_VECTOR_SORTED	extern/libgit2/src/vector.h	/^	GIT_VECTOR_SORTED = (1u << 0),$/;"	e	enum:__anon9bd959e60103
GIT_WIN32	extern/libgit2/include/git2/common.h	/^#define GIT_WIN32 /;"	d
GIT_WIN32__CRTDBG_STACKTRACE__LEAKS_SINCE_MARK	extern/libgit2/src/win32/w32_crtdbg_stacktrace.h	/^	GIT_WIN32__CRTDBG_STACKTRACE__LEAKS_SINCE_MARK = (1 << 1),$/;"	e	enum:git_win32__crtdbg_stacktrace_options
GIT_WIN32__CRTDBG_STACKTRACE__LEAKS_TOTAL	extern/libgit2/src/win32/w32_crtdbg_stacktrace.h	/^	GIT_WIN32__CRTDBG_STACKTRACE__LEAKS_TOTAL      = (1 << 2),$/;"	e	enum:git_win32__crtdbg_stacktrace_options
GIT_WIN32__CRTDBG_STACKTRACE__QUIET	extern/libgit2/src/win32/w32_crtdbg_stacktrace.h	/^	GIT_WIN32__CRTDBG_STACKTRACE__QUIET            = (1 << 3),$/;"	e	enum:git_win32__crtdbg_stacktrace_options
GIT_WIN32__CRTDBG_STACKTRACE__SET_MARK	extern/libgit2/src/win32/w32_crtdbg_stacktrace.h	/^	GIT_WIN32__CRTDBG_STACKTRACE__SET_MARK         = (1 << 0),$/;"	e	enum:git_win32__crtdbg_stacktrace_options
GIT_WIN32__STACK__MAX_FRAMES	extern/libgit2/src/win32/w32_stack.h	/^#define GIT_WIN32__STACK__MAX_FRAMES /;"	d
GIT_WINHTTP	extern/libgit2/src/CMakeLists.txt	/^	SET(GIT_WINHTTP 1)$/;"	v
GIT_WINHTTP_AUTH_BASIC	extern/libgit2/src/transports/winhttp.c	/^	GIT_WINHTTP_AUTH_BASIC = 1,$/;"	e	enum:__anon981dd28b0103	file:
GIT_WINHTTP_AUTH_DIGEST	extern/libgit2/src/transports/winhttp.c	/^	GIT_WINHTTP_AUTH_DIGEST = 8,$/;"	e	enum:__anon981dd28b0103	file:
GIT_WINHTTP_AUTH_NEGOTIATE	extern/libgit2/src/transports/winhttp.c	/^	GIT_WINHTTP_AUTH_NEGOTIATE = 4,$/;"	e	enum:__anon981dd28b0103	file:
GIT_WINHTTP_AUTH_NTLM	extern/libgit2/src/transports/winhttp.c	/^	GIT_WINHTTP_AUTH_NTLM = 2,$/;"	e	enum:__anon981dd28b0103	file:
GIT_WIN_PATH_SHORTNAME	extern/libgit2/src/win32/w32_common.h	/^#define GIT_WIN_PATH_SHORTNAME /;"	d
GIT_WIN_PATH_UTF16	extern/libgit2/src/win32/w32_common.h	/^#define GIT_WIN_PATH_UTF16	/;"	d
GIT_WIN_PATH_UTF8	extern/libgit2/src/win32/w32_common.h	/^#define GIT_WIN_PATH_UTF8	/;"	d
GIT_WORKTREE_ADD_OPTIONS_INIT	extern/libgit2/include/git2/worktree.h	/^#define GIT_WORKTREE_ADD_OPTIONS_INIT /;"	d
GIT_WORKTREE_ADD_OPTIONS_VERSION	extern/libgit2/include/git2/worktree.h	/^#define GIT_WORKTREE_ADD_OPTIONS_VERSION /;"	d
GIT_WORKTREE_PRUNE_LOCKED	extern/libgit2/include/git2/worktree.h	/^	GIT_WORKTREE_PRUNE_LOCKED = 1u << 1,$/;"	e	enum:__anon46261b870103
GIT_WORKTREE_PRUNE_OPTIONS_INIT	extern/libgit2/include/git2/worktree.h	/^#define GIT_WORKTREE_PRUNE_OPTIONS_INIT /;"	d
GIT_WORKTREE_PRUNE_OPTIONS_VERSION	extern/libgit2/include/git2/worktree.h	/^#define GIT_WORKTREE_PRUNE_OPTIONS_VERSION /;"	d
GIT_WORKTREE_PRUNE_VALID	extern/libgit2/include/git2/worktree.h	/^	GIT_WORKTREE_PRUNE_VALID = 1u << 0,$/;"	e	enum:__anon46261b870103
GIT_WORKTREE_PRUNE_WORKING_TREE	extern/libgit2/include/git2/worktree.h	/^	GIT_WORKTREE_PRUNE_WORKING_TREE = 1u << 2,$/;"	e	enum:__anon46261b870103
GIT_XDIFF_MAX_SIZE	extern/libgit2/src/diff_xdiff.h	/^#define GIT_XDIFF_MAX_SIZE /;"	d
GIT_ZSTREAM_DEFLATE	extern/libgit2/src/zstream.h	/^	GIT_ZSTREAM_DEFLATE,$/;"	e	enum:__anonebc673f90103
GIT_ZSTREAM_INFLATE	extern/libgit2/src/zstream.h	/^	GIT_ZSTREAM_INFLATE,$/;"	e	enum:__anonebc673f90103
GIT_ZSTREAM_INIT	extern/libgit2/src/zstream.h	/^#define GIT_ZSTREAM_INIT /;"	d
GIT__WIN32_NO_WRAP_DIR	extern/libgit2/src/win32/dir.c	/^#define GIT__WIN32_NO_WRAP_DIR$/;"	d	file:
GOTO	extern/libgit2/src/trailer.c	/^#define GOTO(/;"	d	file:
GSSAPI_FLAVOR_HEIMDAL	extern/libgit2/cmake/Modules/FindGSSAPI.cmake	/^                set(GSSAPI_FLAVOR_HEIMDAL TRUE)$/;"	v
GSSAPI_FLAVOR_HEIMDAL	extern/libgit2/cmake/Modules/FindGSSAPI.cmake	/^            set(GSSAPI_FLAVOR_HEIMDAL TRUE)$/;"	v
GSSAPI_FLAVOR_MIT	extern/libgit2/cmake/Modules/FindGSSAPI.cmake	/^            set(GSSAPI_FLAVOR_MIT TRUE)$/;"	v
GSSAPI_FOUND	extern/libgit2/cmake/Modules/FindGSSAPI.cmake	/^    set(GSSAPI_FOUND TRUE)$/;"	v
GSSAPI_LIBRARIES	extern/libgit2/cmake/Modules/FindGSSAPI.cmake	/^        set(GSSAPI_LIBRARIES$/;"	v
GT_OFF	extern/libgit2/deps/zlib/gzguts.h	/^#  define GT_OFF(/;"	d
GUNZIP	extern/libgit2/deps/zlib/inflate.h	/^#  define GUNZIP$/;"	d
GZBUFSIZE	extern/libgit2/deps/zlib/gzguts.h	/^#define GZBUFSIZE /;"	d
GZIP	extern/libgit2/deps/zlib/deflate.h	/^#  define GZIP$/;"	d
GZIP	extern/libgit2/deps/zlib/gzguts.h	/^#define GZIP /;"	d
GZIP_STATE	extern/libgit2/deps/zlib/deflate.h	/^#  define GZIP_STATE /;"	d
GZ_APPEND	extern/libgit2/deps/zlib/gzguts.h	/^#define GZ_APPEND /;"	d
GZ_NONE	extern/libgit2/deps/zlib/gzguts.h	/^#define GZ_NONE /;"	d
GZ_READ	extern/libgit2/deps/zlib/gzguts.h	/^#define GZ_READ /;"	d
GZ_WRITE	extern/libgit2/deps/zlib/gzguts.h	/^#define GZ_WRITE /;"	d
General Case	extern/libgit2/docs/threading.md	/^General Case$/;"	s
General guidelines for error reporting	extern/libgit2/docs/error-handling.md	/^General guidelines for error reporting$/;"	s
GenerateRandomName	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        static std::string GenerateRandomName(int length) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:std::string
GenericReparseBuffer	extern/libgit2/src/win32/reparse.h	/^		} GenericReparseBuffer;$/;"	m	union:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a	typeref:struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470408
Get	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellValue_Impl.h	/^    T XLCellValue::Get() {$/;"	f	class:OpenXLSX::Impl::XLCellValue	typeref:typename:T
Get	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellValue.h	/^    T XLCellValue::Get() const {$/;"	f	class:OpenXLSX::XLCellValue	typeref:typename:T
Get coverage	extern/libgit2/docs/fuzzing.md	/^## Get coverage$/;"	s
GetBoolean	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^bool Impl::XLCellValue::GetBoolean() const {$/;"	f	class:Impl::XLCellValue	typeref:typename:bool
GetBoolean	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^bool XLCellValue::GetBoolean() const {$/;"	f	class:XLCellValue	typeref:typename:bool
GetData	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            ZipEntryData GetData() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:ZipEntryData
GetData	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        ZipEntryData GetData() const {$/;"	f	class:Zippy::ZipEntry	typeref:typename:ZipEntryData
GetDataAsString	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            std::string GetDataAsString() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:std::string
GetDataAsString	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        std::string GetDataAsString() const {$/;"	f	class:Zippy::ZipEntry	typeref:typename:std::string
GetEntry	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        ZipEntry GetEntry(const std::string& name) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:ZipEntry
GetEntryNames	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        std::vector<std::string> GetEntryNames(bool includeDirs = true, bool includeFiles = true/;"	f	class:Zippy::ZipArchive	typeref:typename:std::vector<std::string>
GetEntryNamesInDir	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        std::vector<std::string> GetEntryNamesInDir(const std::string& dir, bool includeDirs = t/;"	f	class:Zippy::ZipArchive	typeref:typename:std::vector<std::string>
GetFloat	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^long double Impl::XLCellValue::GetFloat() const {$/;"	f	class:Impl::XLCellValue	typeref:typename:long double
GetFloat	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^long double XLCellValue::GetFloat() const {$/;"	f	class:XLCellValue	typeref:typename:long double
GetInteger	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^long long int Impl::XLCellValue::GetInteger() const {$/;"	f	class:Impl::XLCellValue	typeref:typename:long long int
GetInteger	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^long long int XLCellValue::GetInteger() const {$/;"	f	class:XLCellValue	typeref:typename:long long int
GetMetaData	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        std::vector<ZipEntryMetaData> GetMetaData(bool includeDirs = true, bool includeFiles = t/;"	f	class:Zippy::ZipArchive	typeref:typename:std::vector<ZipEntryMetaData>
GetMetaDataInDir	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        GetMetaDataInDir(const std::string& dir, bool includeDirs = true, bool includeFiles = tr/;"	f	class:Zippy::ZipArchive	typeref:typename:std::vector<ZipEntryMetaData>
GetName	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            std::string GetName() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:std::string
GetNewIndex	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            static uint32_t GetNewIndex(uint32_t latestIndex = 0) {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:uint32_t
GetNewRelsID	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^unsigned long Impl::XLRelationships::GetNewRelsID() const {$/;"	f	class:Impl::XLRelationships	typeref:typename:unsigned long
GetNewSheetID	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^int Impl::XLWorkbook::GetNewSheetID() {$/;"	f	class:Impl::XLWorkbook	typeref:typename:int
GetNumEntries	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        int GetNumEntries(bool includeDirs = true, bool includeFiles = true) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:int
GetNumEntriesInDir	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        int GetNumEntriesInDir(const std::string& dir, bool includeDirs = true, bool includeFile/;"	f	class:Zippy::ZipArchive	typeref:typename:int
GetProperty	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^std::string Impl::XLDocument::GetProperty(XLProperty theProperty) const {$/;"	f	class:Impl::XLDocument	typeref:typename:std::string
GetProperty	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^std::string XLDocument::GetProperty(XLProperty theProperty) const {$/;"	f	class:XLDocument	typeref:typename:std::string
GetSecurityId	extern/libgit2/deps/winhttp/urlmon.h	/^	LPVOID GetSecurityId;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
GetSecuritySite	extern/libgit2/deps/winhttp/urlmon.h	/^	LPVOID GetSecuritySite;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
GetString	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^const char* Impl::XLCellValue::GetString() const {$/;"	f	class:Impl::XLCellValue	typeref:typename:const char *
GetString	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^const char* XLCellValue::GetString() const {$/;"	f	class:XLCellValue	typeref:typename:const char *
GetStringFromType	extern/OpenXLSX/library/openxlsx/implementation/sources/XLContentTypes_Impl.cpp	/^std::string Impl::XLContentItem::GetStringFromType(Impl::XLContentType type) {$/;"	f	class:Impl::XLContentItem	typeref:typename:std::string
GetStringFromType	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^std::string Impl::XLRelationshipItem::GetStringFromType(Impl::XLRelationshipType type) {$/;"	f	class:Impl::XLRelationshipItem	typeref:typename:std::string
GetStringIndex	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSharedStrings_Impl.cpp	/^long Impl::XLSharedStrings::GetStringIndex(string_view str) const {$/;"	f	class:Impl::XLSharedStrings	typeref:typename:long
GetStringNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSharedStrings_Impl.cpp	/^const XMLNode Impl::XLSharedStrings::GetStringNode(std::string_view str) const {$/;"	f	class:Impl::XLSharedStrings	typeref:typename:const XMLNode
GetStringNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSharedStrings_Impl.cpp	/^const XMLNode Impl::XLSharedStrings::GetStringNode(unsigned long index) const {$/;"	f	class:Impl::XLSharedStrings	typeref:typename:const XMLNode
GetTypeFromString	extern/OpenXLSX/library/openxlsx/implementation/sources/XLContentTypes_Impl.cpp	/^Impl::XLContentType Impl::XLContentItem::GetTypeFromString(const std::string& typeString) {$/;"	f	class:Impl::XLContentItem	typeref:typename:Impl::XLContentType
GetTypeFromString	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^Impl::XLRelationshipType Impl::XLRelationshipItem::GetTypeFromString(const std::string& typeStri/;"	f	class:Impl::XLRelationshipItem	typeref:typename:Impl::XLRelationshipType
GetXMLFile	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^std::string Impl::XLDocument::GetXMLFile(const std::string& path) {$/;"	f	class:Impl::XLDocument	typeref:typename:std::string
GetXmlData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAbstractXMLFile_Impl.cpp	/^const string& Impl::XLAbstractXMLFile::GetXmlData() const {$/;"	f	class:Impl::XLAbstractXMLFile	typeref:typename:const string &
GetXmlData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const string& Impl::XLWorksheet::GetXmlData() const {$/;"	f	class:Impl::XLWorksheet	typeref:typename:const string &
GetZoneMappings	extern/libgit2/deps/winhttp/urlmon.h	/^	LPVOID GetZoneMappings;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
Getting Help	extern/libgit2/README.md	/^Getting Help$/;"	c
H	extern/libgit2/src/hash/sha1/generic.h	/^	unsigned int H[5];$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:unsigned int[5]
HASHCLASH_SHA1COMPRESS_ROUND1_STEP	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND1_STEP(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND1_STEP_BW	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND1_STEP_BW(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND2_STEP	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND2_STEP(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND2_STEP_BW	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND2_STEP_BW(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND3_STEP	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND3_STEP(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND3_STEP_BW	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND3_STEP_BW(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND4_STEP	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND4_STEP(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND4_STEP_BW	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND4_STEP_BW(/;"	d	file:
HASHSIG_HASH_MIX	extern/libgit2/src/hashsig.c	/^#define HASHSIG_HASH_MIX(/;"	d	file:
HASHSIG_HASH_SHIFT	extern/libgit2/src/hashsig.c	/^#define HASHSIG_HASH_SHIFT /;"	d	file:
HASHSIG_HASH_START	extern/libgit2/src/hashsig.c	/^#define HASHSIG_HASH_START	/;"	d	file:
HASHSIG_HEAP_MIN_SIZE	extern/libgit2/src/hashsig.c	/^#define HASHSIG_HEAP_MIN_SIZE /;"	d	file:
HASHSIG_HEAP_SIZE	extern/libgit2/src/hashsig.c	/^#define HASHSIG_HEAP_SIZE /;"	d	file:
HASHSIG_MAX_RUN	extern/libgit2/src/hashsig.c	/^#define HASHSIG_MAX_RUN /;"	d	file:
HASHSIG_SCALE	extern/libgit2/src/hashsig.c	/^#define HASHSIG_SCALE /;"	d	file:
HASH_LIMIT	extern/libgit2/src/delta.c	/^#define HASH_LIMIT /;"	d	file:
HASUTF8EXTRALEN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define HASUTF8EXTRALEN(/;"	d
HAS_EXTRALEN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define HAS_EXTRALEN(/;"	d
HAVE_MEMCPY	extern/libgit2/deps/zlib/zutil.h	/^#  define HAVE_MEMCPY$/;"	d
HAVE_STRUCT_STAT_NSEC	extern/libgit2/cmake/Modules/FindStatNsec.cmake	/^	SET( HAVE_STRUCT_STAT_NSEC ON )$/;"	v
HAVE_VSNPRINTF	extern/libgit2/deps/zlib/gzguts.h	/^#    define HAVE_VSNPRINTF$/;"	d
HCRC	extern/libgit2/deps/zlib/inflate.h	/^    HCRC,       \/* i: waiting for header crc (gzip) *\/$/;"	e	enum:__anon92f8b1ba0103
HCRC_STATE	extern/libgit2/deps/zlib/deflate.h	/^#define HCRC_STATE /;"	d
HCRC_UPDATE	extern/libgit2/deps/zlib/deflate.c	/^#define HCRC_UPDATE(/;"	d	file:
HEAD	extern/libgit2/deps/zlib/inflate.h	/^    HEAD = 16180,   \/* i: waiting for magic header *\/$/;"	e	enum:__anon92f8b1ba0103
HEADER_PUGICONFIG_HPP	extern/OpenXLSX/library/pugixml/pugiconfig.hpp	/^#define HEADER_PUGICONFIG_HPP$/;"	d
HEADER_PUGIXML_HPP	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#define HEADER_PUGIXML_HPP$/;"	d
HEAD_FILE	extern/libgit2/src/rebase.c	/^#define HEAD_FILE /;"	d	file:
HEAD_NAME_FILE	extern/libgit2/src/rebase.c	/^#define HEAD_NAME_FILE /;"	d	file:
HEAP_LCHILD_OF	extern/libgit2/src/hashsig.c	/^#define HEAP_LCHILD_OF(/;"	d	file:
HEAP_PARENT_OF	extern/libgit2/src/hashsig.c	/^#define HEAP_PARENT_OF(/;"	d	file:
HEAP_RCHILD_OF	extern/libgit2/src/hashsig.c	/^#define HEAP_RCHILD_OF(/;"	d	file:
HEAP_SIZE	extern/libgit2/deps/zlib/deflate.h	/^#define HEAP_SIZE /;"	d
HEX_DECODE	extern/libgit2/src/buffer.c	/^#define HEX_DECODE(/;"	d	file:
HINTERNET	extern/libgit2/deps/winhttp/winhttp.h	/^typedef LPVOID HINTERNET;$/;"	t	typeref:typename:LPVOID
HMAC_CTX_free	extern/libgit2/deps/ntlmclient/crypt_openssl.c	/^static inline void HMAC_CTX_free(HMAC_CTX *ctx)$/;"	f	typeref:typename:void	file:
HMAC_CTX_new	extern/libgit2/deps/ntlmclient/crypt_openssl.c	/^static inline HMAC_CTX *HMAC_CTX_new(void)$/;"	f	typeref:typename:HMAC_CTX *	file:
HMAC_CTX_reset	extern/libgit2/deps/ntlmclient/crypt_openssl.c	/^static inline int HMAC_CTX_reset(HMAC_CTX *ctx)$/;"	f	typeref:typename:int	file:
HR	extern/libgit2/tests/clar_libgit2_trace.c	/^#define HR /;"	d	file:
HSPACE_BYTE_CASES	extern/libgit2/deps/pcre/pcre_internal.h	/^#define HSPACE_BYTE_CASES /;"	d
HSPACE_CASES	extern/libgit2/deps/pcre/pcre_internal.h	/^#define HSPACE_CASES /;"	d
HSPACE_LIST	extern/libgit2/deps/pcre/pcre_internal.h	/^#define HSPACE_LIST /;"	d
HSPACE_MULTIBYTE_CASES	extern/libgit2/deps/pcre/pcre_internal.h	/^#define HSPACE_MULTIBYTE_CASES /;"	d
HTTPS_BACKEND	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^			SET(HTTPS_BACKEND "OpenSSL")$/;"	v
HTTPS_BACKEND	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^			SET(HTTPS_BACKEND "SecureTransport")$/;"	v
HTTPS_BACKEND	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^		SET(HTTPS_BACKEND "OpenSSL")$/;"	v
HTTPS_BACKEND	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^		SET(HTTPS_BACKEND "WinHTTP")$/;"	v
HTTPS_BACKEND	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^		SET(HTTPS_BACKEND "mbedTLS")$/;"	v
HTTPS_BACKEND	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^	SET(HTTPS_BACKEND ${USE_HTTPS})$/;"	v
HTTPS_BACKEND	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^	SET(HTTPS_BACKEND NO)$/;"	v
HTTP_BOTH	extern/libgit2/deps/http-parser/http_parser.h	/^enum http_parser_type { HTTP_REQUEST, HTTP_RESPONSE, HTTP_BOTH };$/;"	e	enum:http_parser_type
HTTP_ERRNO_GEN	extern/libgit2/deps/http-parser/http_parser.h	/^#define HTTP_ERRNO_GEN(/;"	d
HTTP_ERRNO_MAP	extern/libgit2/deps/http-parser/http_parser.h	/^  HTTP_ERRNO_MAP(HTTP_ERRNO_GEN)$/;"	e	enum:http_errno
HTTP_ERRNO_MAP	extern/libgit2/deps/http-parser/http_parser.h	/^#define HTTP_ERRNO_MAP(/;"	d
HTTP_MAX_HEADER_SIZE	extern/libgit2/deps/http-parser/http_parser.h	/^#define HTTP_MAX_HEADER_SIZE /;"	d
HTTP_METHOD_MAP	extern/libgit2/deps/http-parser/http_parser.h	/^  HTTP_METHOD_MAP(XX)$/;"	e	enum:http_method
HTTP_METHOD_MAP	extern/libgit2/deps/http-parser/http_parser.h	/^#define HTTP_METHOD_MAP(/;"	d
HTTP_PARSER_ERRNO	extern/libgit2/deps/http-parser/http_parser.h	/^#define HTTP_PARSER_ERRNO(/;"	d
HTTP_PARSER_INCLUDE_DIRS	extern/libgit2/cmake/Modules/FindHTTP_Parser.cmake	/^	set(HTTP_PARSER_INCLUDE_DIRS ${HTTP_PARSER_INCLUDE_DIR})$/;"	v
HTTP_PARSER_LIBRARIES	extern/libgit2/cmake/Modules/FindHTTP_Parser.cmake	/^	SET(HTTP_PARSER_LIBRARIES ${HTTP_PARSER_LIBRARY})$/;"	v
HTTP_PARSER_STRICT	extern/libgit2/deps/http-parser/http_parser.h	/^# define HTTP_PARSER_STRICT /;"	d
HTTP_PARSER_VERSION_MAJOR	extern/libgit2/deps/http-parser/http_parser.h	/^#define HTTP_PARSER_VERSION_MAJOR /;"	d
HTTP_PARSER_VERSION_MINOR	extern/libgit2/deps/http-parser/http_parser.h	/^#define HTTP_PARSER_VERSION_MINOR /;"	d
HTTP_PARSER_VERSION_STRING	extern/libgit2/cmake/Modules/FindHTTP_Parser.cmake	/^		SET(HTTP_PARSER_VERSION_STRING "${HTTP_PARSER_VERSION_MAJOR}.${HTTP_PARSER_VERSION_MINOR}")$/;"	v
HTTP_REQUEST	extern/libgit2/deps/http-parser/http_parser.h	/^enum http_parser_type { HTTP_REQUEST, HTTP_RESPONSE, HTTP_BOTH };$/;"	e	enum:http_parser_type
HTTP_RESPONSE	extern/libgit2/deps/http-parser/http_parser.h	/^enum http_parser_type { HTTP_REQUEST, HTTP_RESPONSE, HTTP_BOTH };$/;"	e	enum:http_parser_type
HTTP_STATUS_ACCEPTED	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_ACCEPTED /;"	d
HTTP_STATUS_AMBIGUOUS	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_AMBIGUOUS /;"	d
HTTP_STATUS_BAD_GATEWAY	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_BAD_GATEWAY /;"	d
HTTP_STATUS_BAD_METHOD	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_BAD_METHOD /;"	d
HTTP_STATUS_BAD_REQUEST	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_BAD_REQUEST /;"	d
HTTP_STATUS_CONFLICT	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_CONFLICT /;"	d
HTTP_STATUS_CONTINUE	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_CONTINUE /;"	d
HTTP_STATUS_CREATED	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_CREATED /;"	d
HTTP_STATUS_DENIED	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_DENIED /;"	d
HTTP_STATUS_FIRST	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_FIRST /;"	d
HTTP_STATUS_FORBIDDEN	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_FORBIDDEN /;"	d
HTTP_STATUS_GATEWAY_TIMEOUT	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_GATEWAY_TIMEOUT /;"	d
HTTP_STATUS_GONE	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_GONE /;"	d
HTTP_STATUS_LAST	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_LAST /;"	d
HTTP_STATUS_LENGTH_REQUIRED	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_LENGTH_REQUIRED /;"	d
HTTP_STATUS_MOVED	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_MOVED /;"	d
HTTP_STATUS_NONE_ACCEPTABLE	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_NONE_ACCEPTABLE /;"	d
HTTP_STATUS_NOT_FOUND	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_NOT_FOUND /;"	d
HTTP_STATUS_NOT_MODIFIED	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_NOT_MODIFIED /;"	d
HTTP_STATUS_NOT_SUPPORTED	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_NOT_SUPPORTED /;"	d
HTTP_STATUS_NO_CONTENT	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_NO_CONTENT /;"	d
HTTP_STATUS_OK	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_OK /;"	d
HTTP_STATUS_PARTIAL	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_PARTIAL /;"	d
HTTP_STATUS_PARTIAL_CONTENT	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_PARTIAL_CONTENT /;"	d
HTTP_STATUS_PAYMENT_REQ	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_PAYMENT_REQ /;"	d
HTTP_STATUS_PRECOND_FAILED	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_PRECOND_FAILED /;"	d
HTTP_STATUS_PROXY_AUTH_REQ	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_PROXY_AUTH_REQ /;"	d
HTTP_STATUS_REDIRECT	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_REDIRECT /;"	d
HTTP_STATUS_REDIRECT_KEEP_VERB	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_REDIRECT_KEEP_VERB /;"	d
HTTP_STATUS_REDIRECT_METHOD	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_REDIRECT_METHOD /;"	d
HTTP_STATUS_REQUEST_TIMEOUT	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_REQUEST_TIMEOUT /;"	d
HTTP_STATUS_REQUEST_TOO_LARGE	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_REQUEST_TOO_LARGE /;"	d
HTTP_STATUS_RESET_CONTENT	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_RESET_CONTENT /;"	d
HTTP_STATUS_RETRY_WITH	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_RETRY_WITH /;"	d
HTTP_STATUS_SERVER_ERROR	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_SERVER_ERROR /;"	d
HTTP_STATUS_SERVICE_UNAVAIL	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_SERVICE_UNAVAIL /;"	d
HTTP_STATUS_SWITCH_PROTOCOLS	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_SWITCH_PROTOCOLS /;"	d
HTTP_STATUS_UNSUPPORTED_MEDIA	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_UNSUPPORTED_MEDIA /;"	d
HTTP_STATUS_URI_TOO_LONG	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_URI_TOO_LONG /;"	d
HTTP_STATUS_USE_PROXY	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_USE_PROXY /;"	d
HTTP_STATUS_VERSION_NOT_SUP	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_VERSION_NOT_SUP /;"	d
HTTP_STATUS_WEBDAV_MULTI_STATUS	extern/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_WEBDAV_MULTI_STATUS /;"	d
HTTP_STRERROR_GEN	extern/libgit2/deps/http-parser/http_parser.c	/^#define HTTP_STRERROR_GEN(/;"	d	file:
HTTP_VERSION_INFO	extern/libgit2/deps/winhttp/winhttp.h	/^} HTTP_VERSION_INFO, *LPHTTP_VERSION_INFO;$/;"	t	typeref:struct:__anonb531ffc20708
HasEntry	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        bool HasEntry(const std::string& entryName) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:bool
HasSharedStrings	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^bool Impl::XLWorkbook::HasSharedStrings() const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:bool
HasTypeAttribute	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^bool Impl::XLCellValue::HasTypeAttribute() const {$/;"	f	class:Impl::XLCellValue	typeref:typename:bool
HasTypeAttribute	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^bool Impl::XLCell::HasTypeAttribute() const {$/;"	f	class:Impl::XLCell	typeref:typename:bool
HasValueNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^bool Impl::XLCellValue::HasValueNode() const {$/;"	f	class:Impl::XLCellValue	typeref:typename:bool
Hashable	extern/NamedType/underlying_functionalities.hpp	/^struct Hashable$/;"	s	namespace:fluent
Hashable	ntskills.hpp	/^template <typename T> struct Hashable {$/;"	s	namespace:nt
Height	extern/NamedType/main.cpp	/^using Height = fluent::NamedType<Meter, struct HeightParameter>;$/;"	t	typeref:typename:fluent::NamedType<Meter,struct HeightParameter>	file:
Height	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^float Impl::XLRow::Height() const {$/;"	f	class:Impl::XLRow	typeref:typename:float
Height	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLRow.cpp	/^float XLRow::Height() const {$/;"	f	class:XLRow	typeref:typename:float
Hidden	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Visible, Hidden, VeryHidden$/;"	e	enum:OpenXLSX::XLSheetState
How Can I Contribute?	extern/libgit2/README.md	/^How Can I Contribute?$/;"	c
How to use it	extern/OpenXLSX/tests/catch/README.md	/^## How to use it$/;"	s
HyperlinkBase	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        HyperlinkBase,$/;"	e	enum:OpenXLSX::XLProperty
HyperlinksChanged	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        HyperlinksChanged,$/;"	e	enum:OpenXLSX::XLProperty
ICONV_FIND_QUIETLY	extern/libgit2/cmake/Modules/FindIconv.cmake	/^	SET(ICONV_FIND_QUIETLY TRUE)$/;"	v
ICONV_FOUND	extern/libgit2/cmake/Modules/FindIconv.cmake	/^	SET(ICONV_FOUND TRUE)$/;"	v
ICONV_LIBRARIES	extern/libgit2/cmake/Modules/FindIconv.cmake	/^	SET(ICONV_LIBRARIES "")$/;"	v
ICONV_LIBRARIES	extern/libgit2/cmake/Modules/FindIconv.cmake	/^	SET(ICONV_LIBRARIES "-L${iconv_path} -l${iconv_name}")$/;"	v
ICU_BROWSER_MODE	extern/libgit2/deps/winhttp/winhttp.h	/^#define ICU_BROWSER_MODE /;"	d
ICU_DECODE	extern/libgit2/deps/winhttp/winhttp.h	/^#define ICU_DECODE /;"	d
ICU_ENCODE_PERCENT	extern/libgit2/deps/winhttp/winhttp.h	/^#define ICU_ENCODE_PERCENT /;"	d
ICU_ENCODE_SPACES_ONLY	extern/libgit2/deps/winhttp/winhttp.h	/^#define ICU_ENCODE_SPACES_ONLY /;"	d
ICU_ESCAPE	extern/libgit2/deps/winhttp/winhttp.h	/^#define ICU_ESCAPE /;"	d
ICU_NO_ENCODE	extern/libgit2/deps/winhttp/winhttp.h	/^#define ICU_NO_ENCODE /;"	d
ICU_NO_META	extern/libgit2/deps/winhttp/winhttp.h	/^#define ICU_NO_META /;"	d
IDE_SPLIT_SOURCES	extern/libgit2/cmake/Modules/IdeSplitSources.cmake	/^FUNCTION(IDE_SPLIT_SOURCES target)$/;"	f
ID_BRANCH_A	extern/libgit2/tests/perf/merge.c	/^#define ID_BRANCH_A /;"	d	file:
ID_BRANCH_B	extern/libgit2/tests/perf/merge.c	/^#define ID_BRANCH_B /;"	d	file:
IID_IInternetSecurityManager	extern/libgit2/src/transports/winhttp.c	/^# define IID_IInternetSecurityManager /;"	d	file:
IID_IInternetSecurityManager_mingw	extern/libgit2/src/transports/winhttp.c	/^static const IID IID_IInternetSecurityManager_mingw =$/;"	v	typeref:typename:const IID	file:
IInternetSecurityManager	extern/libgit2/deps/winhttp/urlmon.h	/^struct IInternetSecurityManager$/;"	s
IInternetSecurityManager	extern/libgit2/deps/winhttp/urlmon.h	/^typedef struct IInternetSecurityManager IInternetSecurityManager;$/;"	t	typeref:struct:IInternetSecurityManager
IInternetSecurityManagerVtbl	extern/libgit2/deps/winhttp/urlmon.h	/^typedef struct IInternetSecurityManagerVtbl$/;"	s
IInternetSecurityManagerVtbl	extern/libgit2/deps/winhttp/urlmon.h	/^} IInternetSecurityManagerVtbl;$/;"	t	typeref:struct:IInternetSecurityManagerVtbl
IMM2_SIZE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define IMM2_SIZE /;"	d
IMutableEnumValuesRegistry	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct IMutableEnumValuesRegistry {$/;"	s	namespace:Catch
INCLUDE_INSTALL_DIR	extern/libgit2/src/CMakeLists.txt	/^SET(INCLUDE_INSTALL_DIR include CACHE PATH "Where to install headers to.")$/;"	v
INCLUDE_NTLMCLIENT_H__	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^#define INCLUDE_NTLMCLIENT_H__$/;"	d
INCLUDE_alloc_h__	extern/libgit2/src/alloc.h	/^#define INCLUDE_alloc_h__$/;"	d
INCLUDE_allocators_crtdbg_h	extern/libgit2/src/allocators/win32_crtdbg.h	/^#define INCLUDE_allocators_crtdbg_h$/;"	d
INCLUDE_allocators_stdalloc_h__	extern/libgit2/src/allocators/stdalloc.h	/^#define INCLUDE_allocators_stdalloc_h__$/;"	d
INCLUDE_annotated_commit_h__	extern/libgit2/src/annotated_commit.h	/^#define INCLUDE_annotated_commit_h__$/;"	d
INCLUDE_apply_h__	extern/libgit2/src/apply.h	/^#define INCLUDE_apply_h__$/;"	d
INCLUDE_array_h__	extern/libgit2/src/array.h	/^#define INCLUDE_array_h__$/;"	d
INCLUDE_attr_file_h__	extern/libgit2/src/attr_file.h	/^#define INCLUDE_attr_file_h__$/;"	d
INCLUDE_attr_h__	extern/libgit2/src/attr.h	/^#define INCLUDE_attr_h__$/;"	d
INCLUDE_attrcache_h__	extern/libgit2/src/attrcache.h	/^#define INCLUDE_attrcache_h__$/;"	d
INCLUDE_bitvec_h__	extern/libgit2/src/bitvec.h	/^#define INCLUDE_bitvec_h__$/;"	d
INCLUDE_blame_git__	extern/libgit2/src/blame_git.h	/^#define INCLUDE_blame_git__$/;"	d
INCLUDE_blame_h__	extern/libgit2/src/blame.h	/^#define INCLUDE_blame_h__$/;"	d
INCLUDE_blob_h__	extern/libgit2/src/blob.h	/^#define INCLUDE_blob_h__$/;"	d
INCLUDE_branch_h__	extern/libgit2/src/branch.h	/^#define INCLUDE_branch_h__$/;"	d
INCLUDE_buf_text_h__	extern/libgit2/src/buf_text.h	/^#define INCLUDE_buf_text_h__$/;"	d
INCLUDE_buffer_h__	extern/libgit2/src/buffer.h	/^#define INCLUDE_buffer_h__$/;"	d
INCLUDE_cache_h__	extern/libgit2/src/cache.h	/^#define INCLUDE_cache_h__$/;"	d
INCLUDE_cc_compat_h__	extern/libgit2/src/cc-compat.h	/^#define INCLUDE_cc_compat_h__$/;"	d
INCLUDE_checkout_h__	extern/libgit2/src/checkout.h	/^#define INCLUDE_checkout_h__$/;"	d
INCLUDE_cl_merge_helpers_h__	extern/libgit2/tests/merge/merge_helpers.h	/^#define INCLUDE_cl_merge_helpers_h__$/;"	d
INCLUDE_cl_push_util_h__	extern/libgit2/tests/online/push_util.h	/^#define INCLUDE_cl_push_util_h__$/;"	d
INCLUDE_cl_status_helpers_h__	extern/libgit2/tests/status/status_helpers.h	/^#define INCLUDE_cl_status_helpers_h__$/;"	d
INCLUDE_clone_h__	extern/libgit2/src/clone.h	/^#define INCLUDE_clone_h__$/;"	d
INCLUDE_commit_h__	extern/libgit2/src/commit.h	/^#define INCLUDE_commit_h__$/;"	d
INCLUDE_commit_list_h__	extern/libgit2/src/commit_list.h	/^#define INCLUDE_commit_list_h__$/;"	d
INCLUDE_common_h__	extern/libgit2/src/common.h	/^#define INCLUDE_common_h__$/;"	d
INCLUDE_config_file_h__	extern/libgit2/src/config_backend.h	/^#define INCLUDE_config_file_h__$/;"	d
INCLUDE_config_h__	extern/libgit2/src/config.h	/^#define INCLUDE_config_h__$/;"	d
INCLUDE_config_parse_h__	extern/libgit2/src/config_parse.h	/^#define INCLUDE_config_parse_h__$/;"	d
INCLUDE_diff_driver_h__	extern/libgit2/src/diff_driver.h	/^#define INCLUDE_diff_driver_h__$/;"	d
INCLUDE_diff_file_h__	extern/libgit2/src/diff_file.h	/^#define INCLUDE_diff_file_h__$/;"	d
INCLUDE_diff_generate_h__	extern/libgit2/src/diff_generate.h	/^#define INCLUDE_diff_generate_h__$/;"	d
INCLUDE_diff_h__	extern/libgit2/src/diff.h	/^#define INCLUDE_diff_h__$/;"	d
INCLUDE_diff_parse_h__	extern/libgit2/src/diff_parse.h	/^#define INCLUDE_diff_parse_h__$/;"	d
INCLUDE_diff_tform_h__	extern/libgit2/src/diff_tform.h	/^#define INCLUDE_diff_tform_h__$/;"	d
INCLUDE_diff_xdiff_h__	extern/libgit2/src/diff_xdiff.h	/^#define INCLUDE_diff_xdiff_h__$/;"	d
INCLUDE_errors_h__	extern/libgit2/src/errors.h	/^#define INCLUDE_errors_h__$/;"	d
INCLUDE_features_h__	extern/libgit2/src/features.h.in	/^#define INCLUDE_features_h__$/;"	d	file:
INCLUDE_fetch_h__	extern/libgit2/src/fetch.h	/^#define INCLUDE_fetch_h__$/;"	d
INCLUDE_fetchhead_h__	extern/libgit2/src/fetchhead.h	/^#define INCLUDE_fetchhead_h__$/;"	d
INCLUDE_filebuf_h__	extern/libgit2/src/filebuf.h	/^#define INCLUDE_filebuf_h__$/;"	d
INCLUDE_filter_crlf_h__	extern/libgit2/tests/filter/crlf.h	/^#define INCLUDE_filter_crlf_h__$/;"	d
INCLUDE_filter_h__	extern/libgit2/src/filter.h	/^#define INCLUDE_filter_h__$/;"	d
INCLUDE_futils_h__	extern/libgit2/src/futils.h	/^#define INCLUDE_futils_h__$/;"	d
INCLUDE_git_annotated_commit_h__	extern/libgit2/include/git2/annotated_commit.h	/^#define INCLUDE_git_annotated_commit_h__$/;"	d
INCLUDE_git_apply_h__	extern/libgit2/include/git2/apply.h	/^#define INCLUDE_git_apply_h__$/;"	d
INCLUDE_git_attr_h__	extern/libgit2/include/git2/attr.h	/^#define INCLUDE_git_attr_h__$/;"	d
INCLUDE_git_blame_h__	extern/libgit2/include/git2/blame.h	/^#define INCLUDE_git_blame_h__$/;"	d
INCLUDE_git_blob_h__	extern/libgit2/include/git2/blob.h	/^#define INCLUDE_git_blob_h__$/;"	d
INCLUDE_git_branch_h__	extern/libgit2/include/git2/branch.h	/^#define INCLUDE_git_branch_h__$/;"	d
INCLUDE_git_buf_h__	extern/libgit2/include/git2/buffer.h	/^#define INCLUDE_git_buf_h__$/;"	d
INCLUDE_git_cert_h__	extern/libgit2/include/git2/cert.h	/^#define INCLUDE_git_cert_h__$/;"	d
INCLUDE_git_checkout_h__	extern/libgit2/include/git2/checkout.h	/^#define INCLUDE_git_checkout_h__$/;"	d
INCLUDE_git_cherrypick_h__	extern/libgit2/include/git2/cherrypick.h	/^#define INCLUDE_git_cherrypick_h__$/;"	d
INCLUDE_git_clone_h__	extern/libgit2/include/git2/clone.h	/^#define INCLUDE_git_clone_h__$/;"	d
INCLUDE_git_commit_h__	extern/libgit2/include/git2/commit.h	/^#define INCLUDE_git_commit_h__$/;"	d
INCLUDE_git_common_h__	extern/libgit2/include/git2/common.h	/^#define INCLUDE_git_common_h__$/;"	d
INCLUDE_git_config_h__	extern/libgit2/include/git2/config.h	/^#define INCLUDE_git_config_h__$/;"	d
INCLUDE_git_cred_h__	extern/libgit2/include/git2/cred.h	/^#define INCLUDE_git_cred_h__$/;"	d
INCLUDE_git_cred_helpers_h__	extern/libgit2/include/git2/cred_helpers.h	/^#define INCLUDE_git_cred_helpers_h__$/;"	d
INCLUDE_git_delta_h__	extern/libgit2/src/delta.h	/^#define INCLUDE_git_delta_h__$/;"	d
INCLUDE_git_deprecated_h__	extern/libgit2/include/git2/deprecated.h	/^#define INCLUDE_git_deprecated_h__$/;"	d
INCLUDE_git_describe_h__	extern/libgit2/include/git2/describe.h	/^#define INCLUDE_git_describe_h__$/;"	d
INCLUDE_git_diff_h__	extern/libgit2/include/git2/diff.h	/^#define INCLUDE_git_diff_h__$/;"	d
INCLUDE_git_errors_h__	extern/libgit2/include/git2/errors.h	/^#define INCLUDE_git_errors_h__$/;"	d
INCLUDE_git_filter_h__	extern/libgit2/include/git2/filter.h	/^#define INCLUDE_git_filter_h__$/;"	d
INCLUDE_git_git_h__	extern/libgit2/include/git2.h	/^#define INCLUDE_git_git_h__$/;"	d
INCLUDE_git_global_h__	extern/libgit2/include/git2/global.h	/^#define INCLUDE_git_global_h__$/;"	d
INCLUDE_git_graph_h__	extern/libgit2/include/git2/graph.h	/^#define INCLUDE_git_graph_h__$/;"	d
INCLUDE_git_ignore_h__	extern/libgit2/include/git2/ignore.h	/^#define INCLUDE_git_ignore_h__$/;"	d
INCLUDE_git_index_h__	extern/libgit2/include/git2/index.h	/^#define INCLUDE_git_index_h__$/;"	d
INCLUDE_git_mailmap_h__	extern/libgit2/include/git2/mailmap.h	/^#define INCLUDE_git_mailmap_h__$/;"	d
INCLUDE_git_merge_h__	extern/libgit2/include/git2/merge.h	/^#define INCLUDE_git_merge_h__$/;"	d
INCLUDE_git_message_h__	extern/libgit2/include/git2/message.h	/^#define INCLUDE_git_message_h__$/;"	d
INCLUDE_git_net_h__	extern/libgit2/include/git2/net.h	/^#define INCLUDE_git_net_h__$/;"	d
INCLUDE_git_note_h__	extern/libgit2/include/git2/notes.h	/^#define INCLUDE_git_note_h__$/;"	d
INCLUDE_git_object_h__	extern/libgit2/include/git2/object.h	/^#define INCLUDE_git_object_h__$/;"	d
INCLUDE_git_odb_backend_h__	extern/libgit2/include/git2/odb_backend.h	/^#define INCLUDE_git_odb_backend_h__$/;"	d
INCLUDE_git_odb_h__	extern/libgit2/include/git2/odb.h	/^#define INCLUDE_git_odb_h__$/;"	d
INCLUDE_git_oid_h__	extern/libgit2/include/git2/oid.h	/^#define INCLUDE_git_oid_h__$/;"	d
INCLUDE_git_oidarray_h__	extern/libgit2/include/git2/oidarray.h	/^#define INCLUDE_git_oidarray_h__$/;"	d
INCLUDE_git_openssl_h__	extern/libgit2/include/git2/sys/openssl.h	/^#define INCLUDE_git_openssl_h__$/;"	d
INCLUDE_git_pack_h__	extern/libgit2/include/git2/pack.h	/^#define INCLUDE_git_pack_h__$/;"	d
INCLUDE_git_patch_h__	extern/libgit2/include/git2/patch.h	/^#define INCLUDE_git_patch_h__$/;"	d
INCLUDE_git_pathspec_h__	extern/libgit2/include/git2/pathspec.h	/^#define INCLUDE_git_pathspec_h__$/;"	d
INCLUDE_git_proxy_h__	extern/libgit2/include/git2/proxy.h	/^#define INCLUDE_git_proxy_h__$/;"	d
INCLUDE_git_rebase_h__	extern/libgit2/include/git2/rebase.h	/^#define INCLUDE_git_rebase_h__$/;"	d
INCLUDE_git_refdb_h__	extern/libgit2/include/git2/refdb.h	/^#define INCLUDE_git_refdb_h__$/;"	d
INCLUDE_git_reflog_h__	extern/libgit2/include/git2/reflog.h	/^#define INCLUDE_git_reflog_h__$/;"	d
INCLUDE_git_refs_h__	extern/libgit2/include/git2/refs.h	/^#define INCLUDE_git_refs_h__$/;"	d
INCLUDE_git_refspec_h__	extern/libgit2/include/git2/refspec.h	/^#define INCLUDE_git_refspec_h__$/;"	d
INCLUDE_git_remote_h__	extern/libgit2/include/git2/remote.h	/^#define INCLUDE_git_remote_h__$/;"	d
INCLUDE_git_repository_h__	extern/libgit2/include/git2/repository.h	/^#define INCLUDE_git_repository_h__$/;"	d
INCLUDE_git_reset_h__	extern/libgit2/include/git2/reset.h	/^#define INCLUDE_git_reset_h__$/;"	d
INCLUDE_git_revert_h__	extern/libgit2/include/git2/revert.h	/^#define INCLUDE_git_revert_h__$/;"	d
INCLUDE_git_revparse_h__	extern/libgit2/include/git2/revparse.h	/^#define INCLUDE_git_revparse_h__$/;"	d
INCLUDE_git_revwalk_h__	extern/libgit2/include/git2/revwalk.h	/^#define INCLUDE_git_revwalk_h__$/;"	d
INCLUDE_git_signature_h__	extern/libgit2/include/git2/signature.h	/^#define INCLUDE_git_signature_h__$/;"	d
INCLUDE_git_stash_h__	extern/libgit2/include/git2/stash.h	/^#define INCLUDE_git_stash_h__$/;"	d
INCLUDE_git_status_h__	extern/libgit2/include/git2/status.h	/^#define INCLUDE_git_status_h__$/;"	d
INCLUDE_git_strarray_h__	extern/libgit2/include/git2/strarray.h	/^#define INCLUDE_git_strarray_h__$/;"	d
INCLUDE_git_submodule_h__	extern/libgit2/include/git2/submodule.h	/^#define INCLUDE_git_submodule_h__$/;"	d
INCLUDE_git_tag_h__	extern/libgit2/include/git2/tag.h	/^#define INCLUDE_git_tag_h__$/;"	d
INCLUDE_git_trace_h__	extern/libgit2/include/git2/trace.h	/^#define INCLUDE_git_trace_h__$/;"	d
INCLUDE_git_transaction_h__	extern/libgit2/include/git2/transaction.h	/^#define INCLUDE_git_transaction_h__$/;"	d
INCLUDE_git_transport_h__	extern/libgit2/include/git2/transport.h	/^#define INCLUDE_git_transport_h__$/;"	d
INCLUDE_git_tree_h__	extern/libgit2/include/git2/tree.h	/^#define INCLUDE_git_tree_h__$/;"	d
INCLUDE_git_types_h__	extern/libgit2/include/git2/types.h	/^#define INCLUDE_git_types_h__$/;"	d
INCLUDE_git_version_h__	extern/libgit2/include/git2/version.h	/^#define INCLUDE_git_version_h__$/;"	d
INCLUDE_git_worktree_h__	extern/libgit2/include/git2/worktree.h	/^#define INCLUDE_git_worktree_h__$/;"	d
INCLUDE_global_h__	extern/libgit2/src/global.h	/^#define INCLUDE_global_h__$/;"	d
INCLUDE_hash_h__	extern/libgit2/src/hash.h	/^#define INCLUDE_hash_h__$/;"	d
INCLUDE_hash_sha1_collisiondetect_h__	extern/libgit2/src/hash/sha1/collisiondetect.h	/^#define INCLUDE_hash_sha1_collisiondetect_h__$/;"	d
INCLUDE_hash_sha1_common_crypto_h__	extern/libgit2/src/hash/sha1/common_crypto.h	/^#define INCLUDE_hash_sha1_common_crypto_h__$/;"	d
INCLUDE_hash_sha1_generic_h__	extern/libgit2/src/hash/sha1/generic.h	/^#define INCLUDE_hash_sha1_generic_h__$/;"	d
INCLUDE_hash_sha1_h__	extern/libgit2/src/hash/sha1.h	/^#define INCLUDE_hash_sha1_h__$/;"	d
INCLUDE_hash_sha1_mbedtls_h__	extern/libgit2/src/hash/sha1/mbedtls.h	/^#define INCLUDE_hash_sha1_mbedtls_h__$/;"	d
INCLUDE_hash_sha1_openssl_h__	extern/libgit2/src/hash/sha1/openssl.h	/^#define INCLUDE_hash_sha1_openssl_h__$/;"	d
INCLUDE_hash_sha1_win32_h__	extern/libgit2/src/hash/sha1/win32.h	/^#define INCLUDE_hash_sha1_win32_h__$/;"	d
INCLUDE_idxmap_h__	extern/libgit2/src/idxmap.h	/^#define INCLUDE_idxmap_h__$/;"	d
INCLUDE_ignore_h__	extern/libgit2/src/ignore.h	/^#define INCLUDE_ignore_h__$/;"	d
INCLUDE_index_h__	extern/libgit2/src/index.h	/^#define INCLUDE_index_h__$/;"	d
INCLUDE_indexer_h__	extern/libgit2/src/indexer.h	/^#define INCLUDE_indexer_h__$/;"	d
INCLUDE_integer_h__	extern/libgit2/src/integer.h	/^#define INCLUDE_integer_h__$/;"	d
INCLUDE_iterator_h__	extern/libgit2/src/iterator.h	/^#define INCLUDE_iterator_h__$/;"	d
INCLUDE_mailmap_h__	extern/libgit2/src/mailmap.h	/^#define INCLUDE_mailmap_h__$/;"	d
INCLUDE_map_h__	extern/libgit2/src/map.h	/^#define INCLUDE_map_h__$/;"	d
INCLUDE_merge_driver_h__	extern/libgit2/src/merge_driver.h	/^#define INCLUDE_merge_driver_h__$/;"	d
INCLUDE_merge_h__	extern/libgit2/src/merge.h	/^#define INCLUDE_merge_h__$/;"	d
INCLUDE_message_h__	extern/libgit2/src/message.h	/^#define INCLUDE_message_h__$/;"	d
INCLUDE_mwindow__	extern/libgit2/src/mwindow.h	/^#define INCLUDE_mwindow__$/;"	d
INCLUDE_net_h__	extern/libgit2/src/net.h	/^#define INCLUDE_net_h__$/;"	d
INCLUDE_netops_h__	extern/libgit2/src/netops.h	/^#define INCLUDE_netops_h__$/;"	d
INCLUDE_note_h__	extern/libgit2/src/notes.h	/^#define INCLUDE_note_h__$/;"	d
INCLUDE_object_h__	extern/libgit2/src/object.h	/^#define INCLUDE_object_h__$/;"	d
INCLUDE_odb_h__	extern/libgit2/src/odb.h	/^#define INCLUDE_odb_h__$/;"	d
INCLUDE_offmap_h__	extern/libgit2/src/offmap.h	/^#define INCLUDE_offmap_h__$/;"	d
INCLUDE_oid_h__	extern/libgit2/src/oid.h	/^#define INCLUDE_oid_h__$/;"	d
INCLUDE_oidarray_h__	extern/libgit2/src/oidarray.h	/^#define INCLUDE_oidarray_h__$/;"	d
INCLUDE_oidmap_h__	extern/libgit2/src/oidmap.h	/^#define INCLUDE_oidmap_h__$/;"	d
INCLUDE_pack_h__	extern/libgit2/src/pack.h	/^#define INCLUDE_pack_h__$/;"	d
INCLUDE_pack_objects_h__	extern/libgit2/src/pack-objects.h	/^#define INCLUDE_pack_objects_h__$/;"	d
INCLUDE_parse_h__	extern/libgit2/src/parse.h	/^#define INCLUDE_parse_h__$/;"	d
INCLUDE_patch_generate_h__	extern/libgit2/src/patch_generate.h	/^#define INCLUDE_patch_generate_h__$/;"	d
INCLUDE_patch_h__	extern/libgit2/src/patch.h	/^#define INCLUDE_patch_h__$/;"	d
INCLUDE_patch_parse_h__	extern/libgit2/src/patch_parse.h	/^#define INCLUDE_patch_parse_h__$/;"	d
INCLUDE_path_h__	extern/libgit2/src/path.h	/^#define INCLUDE_path_h__$/;"	d
INCLUDE_pathspec_h__	extern/libgit2/src/pathspec.h	/^#define INCLUDE_pathspec_h__$/;"	d
INCLUDE_pool_h__	extern/libgit2/src/pool.h	/^#define INCLUDE_pool_h__$/;"	d
INCLUDE_posix_h__	extern/libgit2/src/posix.h	/^#define INCLUDE_posix_h__$/;"	d
INCLUDE_posix_regex_h__	extern/libgit2/src/posix_regex.h	/^#define INCLUDE_posix_regex_h__$/;"	d
INCLUDE_pqueue_h__	extern/libgit2/src/pqueue.h	/^#define INCLUDE_pqueue_h__$/;"	d
INCLUDE_proxy_h__	extern/libgit2/src/proxy.h	/^#define INCLUDE_proxy_h__$/;"	d
INCLUDE_push_h__	extern/libgit2/src/push.h	/^#define INCLUDE_push_h__$/;"	d
INCLUDE_reader_h__	extern/libgit2/src/reader.h	/^#define INCLUDE_reader_h__$/;"	d
INCLUDE_refdb_fs_h__	extern/libgit2/src/refdb_fs.h	/^#define INCLUDE_refdb_fs_h__$/;"	d
INCLUDE_refdb_h__	extern/libgit2/src/refdb.h	/^#define INCLUDE_refdb_h__$/;"	d
INCLUDE_reflog_h__	extern/libgit2/src/reflog.h	/^#define INCLUDE_reflog_h__$/;"	d
INCLUDE_refs_h__	extern/libgit2/src/refs.h	/^#define INCLUDE_refs_h__$/;"	d
INCLUDE_refspec_h__	extern/libgit2/src/refspec.h	/^#define INCLUDE_refspec_h__$/;"	d
INCLUDE_remote_h__	extern/libgit2/src/remote.h	/^#define INCLUDE_remote_h__$/;"	d
INCLUDE_repo_template_h__	extern/libgit2/src/repo_template.h	/^#define INCLUDE_repo_template_h__$/;"	d
INCLUDE_repository_h__	extern/libgit2/src/repository.h	/^#define INCLUDE_repository_h__$/;"	d
INCLUDE_revwalk_h__	extern/libgit2/src/revwalk.h	/^#define INCLUDE_revwalk_h__$/;"	d
INCLUDE_sha1_lookup_h__	extern/libgit2/src/sha1_lookup.h	/^#define INCLUDE_sha1_lookup_h__$/;"	d
INCLUDE_signature_h__	extern/libgit2/src/signature.h	/^#define INCLUDE_signature_h__$/;"	d
INCLUDE_sorted_cache_h__	extern/libgit2/src/sortedcache.h	/^#define INCLUDE_sorted_cache_h__$/;"	d
INCLUDE_status_h__	extern/libgit2/src/status.h	/^#define INCLUDE_status_h__$/;"	d
INCLUDE_steams_mbedtls_h__	extern/libgit2/src/streams/mbedtls.h	/^#define INCLUDE_steams_mbedtls_h__$/;"	d
INCLUDE_stream_h__	extern/libgit2/src/stream.h	/^#define INCLUDE_stream_h__$/;"	d
INCLUDE_streams_openssl_h__	extern/libgit2/src/streams/openssl.h	/^#define INCLUDE_streams_openssl_h__$/;"	d
INCLUDE_streams_registry_h__	extern/libgit2/src/streams/registry.h	/^#define INCLUDE_streams_registry_h__$/;"	d
INCLUDE_streams_socket_h__	extern/libgit2/src/streams/socket.h	/^#define INCLUDE_streams_socket_h__$/;"	d
INCLUDE_streams_stransport_h__	extern/libgit2/src/streams/stransport.h	/^#define INCLUDE_streams_stransport_h__$/;"	d
INCLUDE_streams_tls_h__	extern/libgit2/src/streams/tls.h	/^#define INCLUDE_streams_tls_h__$/;"	d
INCLUDE_strlen_h__	extern/libgit2/src/strnlen.h	/^#define INCLUDE_strlen_h__$/;"	d
INCLUDE_strmap_h__	extern/libgit2/src/strmap.h	/^#define INCLUDE_strmap_h__$/;"	d
INCLUDE_submodule_h__	extern/libgit2/src/submodule.h	/^#define INCLUDE_submodule_h__$/;"	d
INCLUDE_sys_git_alloc_h__	extern/libgit2/include/git2/sys/alloc.h	/^#define INCLUDE_sys_git_alloc_h__$/;"	d
INCLUDE_sys_git_commit_h__	extern/libgit2/include/git2/sys/commit.h	/^#define INCLUDE_sys_git_commit_h__$/;"	d
INCLUDE_sys_git_config_backend_h__	extern/libgit2/include/git2/sys/config.h	/^#define INCLUDE_sys_git_config_backend_h__$/;"	d
INCLUDE_sys_git_cred_h__	extern/libgit2/include/git2/sys/cred.h	/^#define INCLUDE_sys_git_cred_h__$/;"	d
INCLUDE_sys_git_diff_h__	extern/libgit2/include/git2/sys/diff.h	/^#define INCLUDE_sys_git_diff_h__$/;"	d
INCLUDE_sys_git_filter_h__	extern/libgit2/include/git2/sys/filter.h	/^#define INCLUDE_sys_git_filter_h__$/;"	d
INCLUDE_sys_git_index_h__	extern/libgit2/include/git2/sys/index.h	/^#define INCLUDE_sys_git_index_h__$/;"	d
INCLUDE_sys_git_merge_h__	extern/libgit2/include/git2/sys/merge.h	/^#define INCLUDE_sys_git_merge_h__$/;"	d
INCLUDE_sys_git_odb_backend_h__	extern/libgit2/include/git2/sys/odb_backend.h	/^#define INCLUDE_sys_git_odb_backend_h__$/;"	d
INCLUDE_sys_git_odb_mempack_h__	extern/libgit2/include/git2/sys/mempack.h	/^#define INCLUDE_sys_git_odb_mempack_h__$/;"	d
INCLUDE_sys_git_path_h__	extern/libgit2/include/git2/sys/path.h	/^#define INCLUDE_sys_git_path_h__$/;"	d
INCLUDE_sys_git_refdb_backend_h__	extern/libgit2/include/git2/sys/refdb_backend.h	/^#define INCLUDE_sys_git_refdb_backend_h__$/;"	d
INCLUDE_sys_git_refdb_h__	extern/libgit2/include/git2/sys/refs.h	/^#define INCLUDE_sys_git_refdb_h__$/;"	d
INCLUDE_sys_git_reflog_h__	extern/libgit2/include/git2/sys/reflog.h	/^#define INCLUDE_sys_git_reflog_h__$/;"	d
INCLUDE_sys_git_repository_h__	extern/libgit2/include/git2/sys/repository.h	/^#define INCLUDE_sys_git_repository_h__$/;"	d
INCLUDE_sys_git_stream_h__	extern/libgit2/include/git2/sys/stream.h	/^#define INCLUDE_sys_git_stream_h__$/;"	d
INCLUDE_sys_git_transport_h	extern/libgit2/include/git2/sys/transport.h	/^#define INCLUDE_sys_git_transport_h$/;"	d
INCLUDE_sys_hashsig_h__	extern/libgit2/include/git2/sys/hashsig.h	/^#define INCLUDE_sys_hashsig_h__$/;"	d
INCLUDE_sysdir_h__	extern/libgit2/src/sysdir.h	/^#define INCLUDE_sysdir_h__$/;"	d
INCLUDE_tag_h__	extern/libgit2/src/tag.h	/^#define INCLUDE_tag_h__$/;"	d
INCLUDE_thread_utils_h__	extern/libgit2/src/thread-utils.h	/^#define INCLUDE_thread_utils_h__$/;"	d
INCLUDE_trace_h__	extern/libgit2/src/trace.h	/^#define INCLUDE_trace_h__$/;"	d
INCLUDE_transaction_h__	extern/libgit2/src/transaction.h	/^#define INCLUDE_transaction_h__$/;"	d
INCLUDE_transports_auth_h__	extern/libgit2/src/transports/auth.h	/^#define INCLUDE_transports_auth_h__$/;"	d
INCLUDE_transports_auth_negotiate_h__	extern/libgit2/src/transports/auth_negotiate.h	/^#define INCLUDE_transports_auth_negotiate_h__$/;"	d
INCLUDE_transports_auth_ntlm_h__	extern/libgit2/src/transports/auth_ntlm.h	/^#define INCLUDE_transports_auth_ntlm_h__$/;"	d
INCLUDE_transports_http_h__	extern/libgit2/src/transports/http.h	/^#define INCLUDE_transports_http_h__$/;"	d
INCLUDE_transports_smart_h__	extern/libgit2/src/transports/smart.h	/^#define INCLUDE_transports_smart_h__$/;"	d
INCLUDE_transports_ssh_h__	extern/libgit2/src/transports/ssh.h	/^#define INCLUDE_transports_ssh_h__$/;"	d
INCLUDE_tree_cache_h__	extern/libgit2/src/tree-cache.h	/^#define INCLUDE_tree_cache_h__$/;"	d
INCLUDE_tree_h__	extern/libgit2/src/tree.h	/^#define INCLUDE_tree_h__$/;"	d
INCLUDE_unix_posix_h__	extern/libgit2/src/unix/posix.h	/^#define INCLUDE_unix_posix_h__$/;"	d
INCLUDE_unix_pthread_h__	extern/libgit2/src/unix/pthread.h	/^#define INCLUDE_unix_pthread_h__$/;"	d
INCLUDE_userdiff_h__	extern/libgit2/src/userdiff.h	/^#define INCLUDE_userdiff_h__$/;"	d
INCLUDE_util_h__	extern/libgit2/src/util.h	/^#define INCLUDE_util_h__$/;"	d
INCLUDE_varint_h__	extern/libgit2/src/varint.h	/^#define INCLUDE_varint_h__$/;"	d
INCLUDE_vector_h__	extern/libgit2/src/vector.h	/^#define INCLUDE_vector_h__$/;"	d
INCLUDE_wildmatch_h__	extern/libgit2/src/wildmatch.h	/^#define INCLUDE_wildmatch_h__$/;"	d
INCLUDE_win32_dir_h__	extern/libgit2/src/win32/dir.h	/^#define INCLUDE_win32_dir_h__$/;"	d
INCLUDE_win32_error_h__	extern/libgit2/src/win32/error.h	/^#define INCLUDE_win32_error_h__$/;"	d
INCLUDE_win32_findfile_h__	extern/libgit2/src/win32/findfile.h	/^#define INCLUDE_win32_findfile_h__$/;"	d
INCLUDE_win32_mingw_compat_h__	extern/libgit2/src/win32/mingw-compat.h	/^#define INCLUDE_win32_mingw_compat_h__$/;"	d
INCLUDE_win32_msvc_compat_h__	extern/libgit2/src/win32/msvc-compat.h	/^#define INCLUDE_win32_msvc_compat_h__$/;"	d
INCLUDE_win32_path_w32_h__	extern/libgit2/src/win32/path_w32.h	/^#define INCLUDE_win32_path_w32_h__$/;"	d
INCLUDE_win32_posix_h__	extern/libgit2/src/win32/posix.h	/^#define INCLUDE_win32_posix_h__$/;"	d
INCLUDE_win32_reparse_h__	extern/libgit2/src/win32/reparse.h	/^#define INCLUDE_win32_reparse_h__$/;"	d
INCLUDE_win32_thread_h__	extern/libgit2/src/win32/thread.h	/^#define INCLUDE_win32_thread_h__$/;"	d
INCLUDE_win32_utf_conv_h__	extern/libgit2/src/win32/utf-conv.h	/^#define INCLUDE_win32_utf_conv_h__$/;"	d
INCLUDE_win32_version_h__	extern/libgit2/src/win32/version.h	/^#define INCLUDE_win32_version_h__$/;"	d
INCLUDE_win32_w32_buffer_h__	extern/libgit2/src/win32/w32_buffer.h	/^#define INCLUDE_win32_w32_buffer_h__$/;"	d
INCLUDE_win32_w32_common_h__	extern/libgit2/src/win32/w32_common.h	/^#define INCLUDE_win32_w32_common_h__$/;"	d
INCLUDE_win32_w32_crtdbg_stacktrace_h__	extern/libgit2/src/win32/w32_crtdbg_stacktrace.h	/^#define INCLUDE_win32_w32_crtdbg_stacktrace_h__$/;"	d
INCLUDE_win32_w32_stack_h__	extern/libgit2/src/win32/w32_stack.h	/^#define INCLUDE_win32_w32_stack_h__$/;"	d
INCLUDE_win32_w32_util_h__	extern/libgit2/src/win32/w32_util.h	/^#define INCLUDE_win32_w32_util_h__$/;"	d
INCLUDE_win32_win32_compat_h__	extern/libgit2/src/win32/win32-compat.h	/^#define INCLUDE_win32_win32_compat_h__$/;"	d
INCLUDE_worktree_h__	extern/libgit2/src/worktree.h	/^#define INCLUDE_worktree_h__$/;"	d
INCLUDE_zstream_h__	extern/libgit2/src/zstream.h	/^#define INCLUDE_zstream_h__$/;"	d
INDENT_WEIGHT	extern/libgit2/src/xdiff/xdiffi.c	/^#define INDENT_WEIGHT /;"	d	file:
INDEX_ACTION_ADDALL	extern/libgit2/src/index.c	/^	INDEX_ACTION_ADDALL = 3,$/;"	e	enum:__anon218876260103	file:
INDEX_ACTION_NONE	extern/libgit2/src/index.c	/^	INDEX_ACTION_NONE = 0,$/;"	e	enum:__anon218876260103	file:
INDEX_ACTION_REMOVE	extern/libgit2/src/index.c	/^	INDEX_ACTION_REMOVE = 2,$/;"	e	enum:__anon218876260103	file:
INDEX_ACTION_UPDATE	extern/libgit2/src/index.c	/^	INDEX_ACTION_UPDATE = 1,$/;"	e	enum:__anon218876260103	file:
INDEX_EXT_CONFLICT_NAME_SIG	extern/libgit2/src/index.c	/^static const char INDEX_EXT_CONFLICT_NAME_SIG[] = {'N', 'A', 'M', 'E'};$/;"	v	typeref:typename:const char[]	file:
INDEX_EXT_TREECACHE_SIG	extern/libgit2/src/index.c	/^static const char INDEX_EXT_TREECACHE_SIG[] = {'T', 'R', 'E', 'E'};$/;"	v	typeref:typename:const char[]	file:
INDEX_EXT_UNMERGED_SIG	extern/libgit2/src/index.c	/^static const char INDEX_EXT_UNMERGED_SIG[] = {'R', 'E', 'U', 'C'};$/;"	v	typeref:typename:const char[]	file:
INDEX_FOOTER_SIZE	extern/libgit2/src/index.c	/^static const size_t INDEX_FOOTER_SIZE = GIT_OID_RAWSZ;$/;"	v	typeref:typename:const size_t	file:
INDEX_HEADER_SIG	extern/libgit2/src/index.c	/^static const unsigned int INDEX_HEADER_SIG = 0x44495243;$/;"	v	typeref:typename:const unsigned int	file:
INDEX_HEADER_SIZE	extern/libgit2/src/index.c	/^static const size_t INDEX_HEADER_SIZE = 12;$/;"	v	typeref:typename:const size_t	file:
INDEX_OWNER	extern/libgit2/src/index.c	/^#define INDEX_OWNER(/;"	d	file:
INDEX_VERSION_NUMBER_COMP	extern/libgit2/src/index.c	/^static const unsigned int INDEX_VERSION_NUMBER_COMP = 4;$/;"	v	typeref:typename:const unsigned int	file:
INDEX_VERSION_NUMBER_DEFAULT	extern/libgit2/src/index.c	/^static const unsigned int INDEX_VERSION_NUMBER_DEFAULT = 2;$/;"	v	typeref:typename:const unsigned int	file:
INDEX_VERSION_NUMBER_EXT	extern/libgit2/src/index.c	/^static const unsigned int INDEX_VERSION_NUMBER_EXT = 3;$/;"	v	typeref:typename:const unsigned int	file:
INDEX_VERSION_NUMBER_LB	extern/libgit2/src/index.c	/^static const unsigned int INDEX_VERSION_NUMBER_LB = 2;$/;"	v	typeref:typename:const unsigned int	file:
INDEX_VERSION_NUMBER_UB	extern/libgit2/src/index.c	/^static const unsigned int INDEX_VERSION_NUMBER_UB = 4;$/;"	v	typeref:typename:const unsigned int	file:
INFLATE_EXTRA	extern/libgit2/tests/core/zstream.c	/^#define INFLATE_EXTRA /;"	d	file:
INITBITS	extern/libgit2/deps/zlib/infback.c	/^#define INITBITS(/;"	d	file:
INITBITS	extern/libgit2/deps/zlib/inflate.c	/^#define INITBITS(/;"	d	file:
INITIAL_COMMIT	extern/libgit2/tests/diff/rename.c	/^#define INITIAL_COMMIT /;"	d	file:
INIT_STATE	extern/libgit2/deps/zlib/deflate.h	/^#define INIT_STATE /;"	d
INSERT_IN_MAP	extern/libgit2/src/index.c	/^#define INSERT_IN_MAP(/;"	d	file:
INSERT_IN_MAP_EX	extern/libgit2/src/index.c	/^#define INSERT_IN_MAP_EX(/;"	d	file:
INSERT_STRING	extern/libgit2/deps/zlib/deflate.c	/^#define INSERT_STRING(/;"	d	file:
INT16_C	extern/libgit2/include/git2/stdint.h	/^#define INT16_C(/;"	d
INT16_MAX	extern/libgit2/include/git2/stdint.h	/^#define INT16_MAX /;"	d
INT16_MIN	extern/libgit2/include/git2/stdint.h	/^#define INT16_MIN /;"	d
INT32_C	extern/libgit2/include/git2/stdint.h	/^#define INT32_C(/;"	d
INT32_MAX	extern/libgit2/include/git2/stdint.h	/^#define INT32_MAX /;"	d
INT32_MIN	extern/libgit2/include/git2/stdint.h	/^#define INT32_MIN /;"	d
INT64_C	extern/libgit2/include/git2/stdint.h	/^#define INT64_C(/;"	d
INT64_MAX	extern/libgit2/include/git2/stdint.h	/^#define INT64_MAX /;"	d
INT64_MIN	extern/libgit2/include/git2/stdint.h	/^#define INT64_MIN /;"	d
INT64_OR_DOUBLE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define INT64_OR_DOUBLE /;"	d
INT8_C	extern/libgit2/include/git2/stdint.h	/^#define INT8_C(/;"	d
INT8_MAX	extern/libgit2/include/git2/stdint.h	/^#define INT8_MAX /;"	d
INT8_MIN	extern/libgit2/include/git2/stdint.h	/^#define INT8_MIN /;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST0	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST0(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST1	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST1(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_X	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_X(/;"	d
INTERNAL_CATCH_DEF	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DEF(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST0	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST0(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST1	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST1(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_X	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_X(/;"	d
INTERNAL_CATCH_EXPAND1	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_EXPAND1(/;"	d
INTERNAL_CATCH_EXPAND2	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_EXPAND2(/;"	d
INTERNAL_CATCH_EXPAND_VARGS	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_EXPAND_VARGS(/;"	d
INTERNAL_CATCH_MAKE_NAMESPACE	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_MAKE_NAMESPACE(/;"	d
INTERNAL_CATCH_MAKE_NAMESPACE2	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_MAKE_NAMESPACE2(/;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_MAKE_TYPE_LIST(/;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST2	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_MAKE_TYPE_LIST2(/;"	d
INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	extern/NamedType/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_NOINTERNAL_CATCH_DEF	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_NOINTERNAL_CATCH_DEF$/;"	d
INTERNAL_CATCH_NTTP_0	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_NTTP_0$/;"	d
INTERNAL_CATCH_NTTP_0	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_NTTP_0(/;"	d
INTERNAL_CATCH_NTTP_1	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_NTTP_1(/;"	d
INTERNAL_CATCH_NTTP_GEN	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_NTTP_GEN(/;"	d
INTERNAL_CATCH_NTTP_REGISTER	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_NTTP_REGISTER(/;"	d
INTERNAL_CATCH_NTTP_REGISTER0	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_NTTP_REGISTER0(/;"	d
INTERNAL_CATCH_NTTP_REGISTER_METHOD	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_NTTP_REGISTER_METHOD(/;"	d
INTERNAL_CATCH_NTTP_REGISTER_METHOD0	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_NTTP_REGISTER_METHOD0(/;"	d
INTERNAL_CATCH_NTTP_REG_GEN	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_NTTP_REG_GEN(/;"	d
INTERNAL_CATCH_NTTP_REG_METHOD_GEN	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_NTTP_REG_METHOD_GEN(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	extern/NamedType/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REMOVE_PARENS	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_10_ARG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_10_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_11_ARG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_11_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_1_ARG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_1_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_2_ARG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_2_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_3_ARG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_3_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_4_ARG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_4_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_5_ARG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_5_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_6_ARG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_6_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_7_ARG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_7_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_8_ARG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_8_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_9_ARG	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_9_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_GEN	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_GEN(/;"	d
INTERNAL_CATCH_STRINGIZE	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_STRINGIZE(/;"	d
INTERNAL_CATCH_STRINGIZE2	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_STRINGIZE2(/;"	d
INTERNAL_CATCH_STRINGIZE3	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_STRINGIZE3(/;"	d
INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS(/;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE(/;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_2	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_2(/;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_2	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_2(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_2	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_2(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION	extern/OpenXLSX/tests/catch/catch.hpp	/^        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION_2	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION_2(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION	extern/OpenXLSX/tests/catch/catch.hpp	/^        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION	extern/OpenXLSX/tests/catch/catch.hpp	/^        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION_2	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION_2(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION	extern/OpenXLSX/tests/catch/catch.hpp	/^        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TESTCASE	extern/NamedType/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE2	extern/NamedType/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION	extern/NamedType/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TESTCASE_NO_REGISTRATION	extern/NamedType/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TESTCASE_NO_REGISTRATION	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	extern/NamedType/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	extern/NamedType/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	extern/OpenXLSX/tests/catch/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TYPE_GEN	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_TYPE_GEN\\/;"	d
INTERNAL_CATCH_UNIQUE_NAME	extern/NamedType/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	extern/OpenXLSX/tests/catch/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	extern/NamedType/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	extern/NamedType/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_VA_NARGS_IMPL	extern/OpenXLSX/tests/catch/catch.hpp	/^#define INTERNAL_CATCH_VA_NARGS_IMPL(/;"	d
INTERNET_DEFAULT_HTTPS_PORT	extern/libgit2/deps/winhttp/winhttp.h	/^#define INTERNET_DEFAULT_HTTPS_PORT /;"	d
INTERNET_DEFAULT_HTTP_PORT	extern/libgit2/deps/winhttp/winhttp.h	/^#define INTERNET_DEFAULT_HTTP_PORT /;"	d
INTERNET_DEFAULT_PORT	extern/libgit2/deps/winhttp/winhttp.h	/^#define INTERNET_DEFAULT_PORT /;"	d
INTERNET_PORT	extern/libgit2/deps/winhttp/winhttp.h	/^typedef WORD INTERNET_PORT;$/;"	t	typeref:typename:WORD
INTERNET_SCHEME	extern/libgit2/deps/winhttp/winhttp.h	/^typedef int INTERNET_SCHEME, *LPINTERNET_SCHEME;$/;"	t	typeref:typename:int
INTERNET_SCHEME_HTTP	extern/libgit2/deps/winhttp/winhttp.h	/^#define INTERNET_SCHEME_HTTP /;"	d
INTERNET_SCHEME_HTTPS	extern/libgit2/deps/winhttp/winhttp.h	/^#define INTERNET_SCHEME_HTTPS /;"	d
INTMAX_C	extern/libgit2/include/git2/stdint.h	/^#define INTMAX_C /;"	d
INTMAX_MAX	extern/libgit2/include/git2/stdint.h	/^#define INTMAX_MAX /;"	d
INTMAX_MIN	extern/libgit2/include/git2/stdint.h	/^#define INTMAX_MIN /;"	d
INTPTR_MAX	extern/libgit2/include/git2/stdint.h	/^#  define INTPTR_MAX /;"	d
INTPTR_MIN	extern/libgit2/include/git2/stdint.h	/^#  define INTPTR_MIN /;"	d
INTS_PER_STATEBLOCK	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define INTS_PER_STATEBLOCK /;"	d	file:
INT_FAST16_MAX	extern/libgit2/include/git2/stdint.h	/^#define INT_FAST16_MAX /;"	d
INT_FAST16_MIN	extern/libgit2/include/git2/stdint.h	/^#define INT_FAST16_MIN /;"	d
INT_FAST32_MAX	extern/libgit2/include/git2/stdint.h	/^#define INT_FAST32_MAX /;"	d
INT_FAST32_MIN	extern/libgit2/include/git2/stdint.h	/^#define INT_FAST32_MIN /;"	d
INT_FAST64_MAX	extern/libgit2/include/git2/stdint.h	/^#define INT_FAST64_MAX /;"	d
INT_FAST64_MIN	extern/libgit2/include/git2/stdint.h	/^#define INT_FAST64_MIN /;"	d
INT_FAST8_MAX	extern/libgit2/include/git2/stdint.h	/^#define INT_FAST8_MAX /;"	d
INT_FAST8_MIN	extern/libgit2/include/git2/stdint.h	/^#define INT_FAST8_MIN /;"	d
INT_LEAST16_MAX	extern/libgit2/include/git2/stdint.h	/^#define INT_LEAST16_MAX /;"	d
INT_LEAST16_MIN	extern/libgit2/include/git2/stdint.h	/^#define INT_LEAST16_MIN /;"	d
INT_LEAST32_MAX	extern/libgit2/include/git2/stdint.h	/^#define INT_LEAST32_MAX /;"	d
INT_LEAST32_MIN	extern/libgit2/include/git2/stdint.h	/^#define INT_LEAST32_MIN /;"	d
INT_LEAST64_MAX	extern/libgit2/include/git2/stdint.h	/^#define INT_LEAST64_MAX /;"	d
INT_LEAST64_MIN	extern/libgit2/include/git2/stdint.h	/^#define INT_LEAST64_MIN /;"	d
INT_LEAST8_MAX	extern/libgit2/include/git2/stdint.h	/^#define INT_LEAST8_MAX /;"	d
INT_LEAST8_MIN	extern/libgit2/include/git2/stdint.h	/^#define INT_LEAST8_MIN /;"	d
INVALID	extern/libgit2/src/hash/sha1/win32.h	/^	INVALID = 0,$/;"	e	enum:hash_win32_prov_type
INVALID_SOCKET	extern/libgit2/src/unix/posix.h	/^#define INVALID_SOCKET /;"	d
INVALID_UTF_CHAR	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define INVALID_UTF_CHAR /;"	d	file:
IN_UCHARS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define IN_UCHARS(/;"	d
IO_REPARSE_TAG_SYMLINK	extern/libgit2/src/win32/posix_w32.c	/^#define IO_REPARSE_TAG_SYMLINK /;"	d	file:
IPATTERN	extern/libgit2/src/userdiff.h	/^#define IPATTERN(/;"	d
IPos	extern/libgit2/deps/zlib/deflate.h	/^typedef unsigned IPos;$/;"	t	typeref:typename:unsigned
ISALNUM	extern/libgit2/src/wildmatch.c	/^#define ISALNUM(/;"	d	file:
ISALPHA	extern/libgit2/src/wildmatch.c	/^#define ISALPHA(/;"	d	file:
ISASCII	extern/libgit2/src/wildmatch.c	/^# define ISASCII(/;"	d	file:
ISBLANK	extern/libgit2/src/wildmatch.c	/^# define ISBLANK(/;"	d	file:
ISCNTRL	extern/libgit2/src/wildmatch.c	/^#define ISCNTRL(/;"	d	file:
ISDIGIT	extern/libgit2/src/wildmatch.c	/^#define ISDIGIT(/;"	d	file:
ISGRAPH	extern/libgit2/src/wildmatch.c	/^# define ISGRAPH(/;"	d	file:
ISLOWER	extern/libgit2/src/wildmatch.c	/^#define ISLOWER(/;"	d	file:
ISPRINT	extern/libgit2/src/wildmatch.c	/^#define ISPRINT(/;"	d	file:
ISPUNCT	extern/libgit2/src/wildmatch.c	/^#define ISPUNCT(/;"	d	file:
ISSPACE	extern/libgit2/src/wildmatch.c	/^#define ISSPACE(/;"	d	file:
ISUPPER	extern/libgit2/src/wildmatch.c	/^#define ISUPPER(/;"	d	file:
ISXDIGIT	extern/libgit2/src/wildmatch.c	/^#define ISXDIGIT(/;"	d	file:
IS_ALPHA	extern/libgit2/deps/http-parser/http_parser.c	/^#define IS_ALPHA(/;"	d	file:
IS_ALPHANUM	extern/libgit2/deps/http-parser/http_parser.c	/^#define IS_ALPHANUM(/;"	d	file:
IS_BIT_SET	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^#define IS_BIT_SET(/;"	d	file:
IS_DIGIT	extern/libgit2/deps/pcre/pcre_compile.c	/^#define IS_DIGIT(/;"	d	file:
IS_HEX	extern/libgit2/deps/http-parser/http_parser.c	/^#define IS_HEX(/;"	d	file:
IS_HOST_CHAR	extern/libgit2/deps/http-parser/http_parser.c	/^#define IS_HOST_CHAR(/;"	d	file:
IS_MARK	extern/libgit2/deps/http-parser/http_parser.c	/^#define IS_MARK(/;"	d	file:
IS_NEWLINE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define IS_NEWLINE(/;"	d
IS_NUM	extern/libgit2/deps/http-parser/http_parser.c	/^#define IS_NUM(/;"	d	file:
IS_URL_CHAR	extern/libgit2/deps/http-parser/http_parser.c	/^#define IS_URL_CHAR(/;"	d	file:
IS_USERINFO_CHAR	extern/libgit2/deps/http-parser/http_parser.c	/^#define IS_USERINFO_CHAR(/;"	d	file:
IStream	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct IStream {$/;"	s	namespace:Catch
ITERATOR_PATHLIST_FULL	extern/libgit2/src/iterator.c	/^	ITERATOR_PATHLIST_FULL = 4,$/;"	e	enum:__anonb487a9b80103	file:
ITERATOR_PATHLIST_IS_DIR	extern/libgit2/src/iterator.c	/^	ITERATOR_PATHLIST_IS_DIR = 2,$/;"	e	enum:__anonb487a9b80103	file:
ITERATOR_PATHLIST_IS_FILE	extern/libgit2/src/iterator.c	/^	ITERATOR_PATHLIST_IS_FILE = 1,$/;"	e	enum:__anonb487a9b80103	file:
ITERATOR_PATHLIST_IS_PARENT	extern/libgit2/src/iterator.c	/^	ITERATOR_PATHLIST_IS_PARENT = 3,$/;"	e	enum:__anonb487a9b80103	file:
ITERATOR_PATHLIST_NONE	extern/libgit2/src/iterator.c	/^	ITERATOR_PATHLIST_NONE = 0,$/;"	e	enum:__anonb487a9b80103	file:
ITestCasePtr	extern/NamedType/catch.hpp	/^    using ITestCasePtr = std::shared_ptr<ITestInvoker>;$/;"	t	namespace:Catch	typeref:typename:std::shared_ptr<ITestInvoker>
ITestCaseRegistry	extern/NamedType/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestInvoker	extern/NamedType/catch.hpp	/^    struct ITestInvoker {$/;"	s	namespace:Catch
ITestInvoker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct ITestInvoker {$/;"	s	namespace:Catch
Id	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^XMLAttribute Impl::XLRelationshipItem::Id() const {$/;"	f	class:Impl::XLRelationshipItem	typeref:typename:XMLAttribute
IdExists	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^bool Impl::XLRelationships::IdExists(const std::string& id) const {$/;"	f	class:Impl::XLRelationships	typeref:typename:bool
Image	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Image,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAbstractXMLFile_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAppProperties_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellRange_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellValue_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCell_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLChartsheet_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLColumn_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLContentTypes_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCoreProperties_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLDocument_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRelationships_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRow_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSharedStrings_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSheet_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTemplate_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTokenizer_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^namespace OpenXLSX::Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCell.h	/^    namespace Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellRange.h	/^    namespace Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellReference.h	/^    namespace Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellValue.h	/^    namespace Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLChartsheet.h	/^    namespace Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLColumn.h	/^    namespace Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDocument.h	/^    namespace Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLRow.h	/^    namespace Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLSheet.h	/^    namespace Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLWorkbook.h	/^    namespace Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLWorksheet.h	/^    namespace Impl$/;"	n	namespace:OpenXLSX
Impl	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^    namespace Impl$/;"	n	namespace:Zippy
ImplicitlyConvertibleTo	extern/NamedType/underlying_functionalities.hpp	/^struct ImplicitlyConvertibleTo$/;"	s	namespace:fluent
ImplicitlyConvertibleTo	ntskills.hpp	/^template <typename Destination> struct ImplicitlyConvertibleTo {$/;"	s	namespace:nt
Import	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^void Impl::XLWorksheet::Import(const std::string& fileName, const string& delimiter) {$/;"	f	class:Impl::XLWorksheet	typeref:typename:void
Import	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^void XLWorksheet::Import(const std::string& fileName, const std::string& delimiter) {$/;"	f	class:XLWorksheet	typeref:typename:void
Incrementable	extern/NamedType/underlying_functionalities.hpp	/^struct Incrementable : crtp<T, Incrementable>$/;"	s	namespace:fluent
Incrementable	ntskills.hpp	/^template <typename T> struct Incrementable : crtp<T, Incrementable> {$/;"	s	namespace:nt
Index	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSheet_Impl.cpp	/^unsigned int Impl::XLSheet::Index() const {$/;"	f	class:Impl::XLSheet	typeref:typename:unsigned int
Index	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLSheet.cpp	/^unsigned int XLSheet::Index() const {$/;"	f	class:XLSheet	typeref:typename:unsigned int
Index	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            uint32_t Index() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:uint32_t
Index	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        uint32_t Index() const {$/;"	f	class:Zippy::ZipEntry	typeref:typename:uint32_t
Index	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        uint32_t Index;$/;"	m	struct:Zippy::ZipEntryMetaData	typeref:typename:uint32_t
IndexOfSheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^unsigned int Impl::XLWorkbook::IndexOfSheet(const std::string& sheetName) const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:unsigned int
IndexOfSheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^unsigned int XLWorkbook::IndexOfSheet(const std::string& sheetName) const {$/;"	f	class:XLWorkbook	typeref:typename:unsigned int
Info	extern/OpenXLSX/tests/catch/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
InfoTemplate	extern/libgit2/tests/generate.py	/^    class InfoTemplate(Template):$/;"	c	class:Module
Inheriting the underlying type functionalities	extern/NamedType/README.md	/^## Inheriting the underlying type functionalities$/;"	s
InitCells	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^void XLCellRange::InitCells() const {$/;"	f	class:XLCellRange	typeref:typename:void
InitColumnsNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^void Impl::XLWorksheet::InitColumnsNode() {$/;"	f	class:Impl::XLWorksheet	typeref:typename:void
InitDimensionNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^void Impl::XLWorksheet::InitDimensionNode() {$/;"	f	class:Impl::XLWorksheet	typeref:typename:void
InitSheetDataNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^void Impl::XLWorksheet::InitSheetDataNode() {$/;"	f	class:Impl::XLWorksheet	typeref:typename:void
InitSheetViewsNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^void Impl::XLWorksheet::InitSheetViewsNode() {$/;"	f	class:Impl::XLWorksheet	typeref:typename:void
Initialization	extern/libgit2/README.md	/^Initialization$/;"	c
InitiateWorksheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^Impl::XLRelationshipItem* Impl::XLWorkbook::InitiateWorksheet(const std::string& sheetName, unsi/;"	f	class:Impl::XLWorkbook	typeref:typename:Impl::XLRelationshipItem *
InlineString	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^        String, SharedString, InlineString$/;"	e	enum:OpenXLSX::Impl::XLStringType
Inlined functions	extern/libgit2/docs/conventions.md	/^## Inlined functions$/;"	s
InsertChartsheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::InsertChartsheetName(const std::string& sheetName, unsigned int i/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
InsertSheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::InsertSheetName(const std::string& sheetName, unsigned int index)/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
InsertWorksheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::InsertWorksheetName(const std::string& sheetName, unsigned int in/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
Installation	extern/libgit2/README.md	/^Installation$/;"	s
Integer	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^        Integer, Float$/;"	e	enum:OpenXLSX::Impl::XLNumberType
Integer	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Empty, Boolean, Integer, Float, Error, String$/;"	e	enum:OpenXLSX::XLValueType
InterfaceTest	extern/OpenXLSX/tests/c++/CMakeLists.txt	/^add_executable(InterfaceTest "")$/;"	t
Internal Objects	extern/libgit2/docs/diff-internals.md	/^Internal Objects$/;"	s
Internals	extern/libgit2/docs/conventions.md	/^## Internals$/;"	s
IsBoolean	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^bool Impl::XLToken::IsBoolean() const {$/;"	f	class:Impl::XLToken	typeref:typename:bool
IsDelimiter	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^bool Impl::XLTokenizer::IsDelimiter(char c) {$/;"	f	class:Impl::XLTokenizer	typeref:typename:bool
IsDirectory	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            bool IsDirectory() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:bool
IsDirectory	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        bool IsDirectory() const {$/;"	f	class:Zippy::ZipEntry	typeref:typename:bool
IsDirectory	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        bool IsDirectory;$/;"	m	struct:Zippy::ZipEntryMetaData	typeref:typename:bool
IsEncrypted	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            bool IsEncrypted() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:bool
IsEncrypted	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        bool IsEncrypted() const {$/;"	f	class:Zippy::ZipEntry	typeref:typename:bool
IsEncrypted	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        bool IsEncrypted;$/;"	m	struct:Zippy::ZipEntryMetaData	typeref:typename:bool
IsFloat	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^bool Impl::XLToken::IsFloat() const {$/;"	f	class:Impl::XLToken	typeref:typename:bool
IsHidden	extern/OpenXLSX/library/openxlsx/implementation/sources/XLColumn_Impl.cpp	/^bool Impl::XLColumn::IsHidden() const {$/;"	f	class:Impl::XLColumn	typeref:typename:bool
IsHidden	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^bool Impl::XLRow::IsHidden() const {$/;"	f	class:Impl::XLRow	typeref:typename:bool
IsHidden	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLColumn.cpp	/^bool OpenXLSX::XLColumn::IsHidden() const {$/;"	f	class:OpenXLSX::XLColumn	typeref:typename:bool
IsHidden	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLRow.cpp	/^bool XLRow::IsHidden() const {$/;"	f	class:XLRow	typeref:typename:bool
IsInteger	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^bool Impl::XLToken::IsInteger() const {$/;"	f	class:Impl::XLToken	typeref:typename:bool
IsModified	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            bool IsModified() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:bool
IsModified	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        bool IsModified() const {$/;"	f	class:Zippy::ZipEntry	typeref:typename:bool
IsNotReference	extern/NamedType/named_type_impl.hpp	/^using IsNotReference = typename std::enable_if<!std::is_reference<T>::value, void>::type;$/;"	t	namespace:fluent	typeref:typename:std::enable_if<!std::is_reference<T> void>::type
IsNotReference	nt.hpp	/^using IsNotReference =$/;"	t	namespace:nt	typeref:typename:std::enable_if<!std::is_reference<T> void>::type
IsOpen	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        bool IsOpen() {$/;"	f	class:Zippy::ZipArchive	typeref:typename:bool
IsStreamInsertable	extern/NamedType/catch.hpp	/^        class IsStreamInsertable {$/;"	c	namespace:Catch::Detail
IsStreamInsertable	extern/OpenXLSX/tests/catch/catch.hpp	/^        class IsStreamInsertable {$/;"	c	namespace:Catch::Detail
IsString	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^bool Impl::XLToken::IsString() const {$/;"	f	class:Impl::XLToken	typeref:typename:bool
IsSupported	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            bool IsSupported() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:bool
IsSupported	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        bool IsSupported() const {$/;"	f	class:Zippy::ZipEntry	typeref:typename:bool
IsSupported	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        bool IsSupported;$/;"	m	struct:Zippy::ZipEntryMetaData	typeref:typename:bool
JIT_COMPILE	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { JIT_COMPILE, JIT_PARTIAL_SOFT_COMPILE, JIT_PARTIAL_HARD_COMPILE,$/;"	e	enum:__anonb814e4160403
JIT_NUMBER_OF_COMPILE_MODES	extern/libgit2/deps/pcre/pcre_internal.h	/^       JIT_NUMBER_OF_COMPILE_MODES };$/;"	e	enum:__anonb814e4160403
JIT_PARTIAL_HARD_COMPILE	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { JIT_COMPILE, JIT_PARTIAL_SOFT_COMPILE, JIT_PARTIAL_HARD_COMPILE,$/;"	e	enum:__anonb814e4160403
JIT_PARTIAL_SOFT_COMPILE	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { JIT_COMPILE, JIT_PARTIAL_SOFT_COMPILE, JIT_PARTIAL_HARD_COMPILE,$/;"	e	enum:__anonb814e4160403
JUMP	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define JUMP(/;"	d	file:
JUMPHERE	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define JUMPHERE(/;"	d	file:
JUMPTO	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define JUMPTO(/;"	d	file:
KEEP_ALIVE	extern/libgit2/deps/http-parser/http_parser.c	/^#define KEEP_ALIVE /;"	d	file:
KHASH_DECLARE	extern/libgit2/src/khash.h	/^#define KHASH_DECLARE(/;"	d
KHASH_INIT	extern/libgit2/src/khash.h	/^#define KHASH_INIT(/;"	d
KHASH_INIT2	extern/libgit2/src/khash.h	/^#define KHASH_INIT2(/;"	d
KHASH_MAP_INIT_INT	extern/libgit2/src/khash.h	/^#define KHASH_MAP_INIT_INT(/;"	d
KHASH_MAP_INIT_INT64	extern/libgit2/src/khash.h	/^#define KHASH_MAP_INIT_INT64(/;"	d
KHASH_MAP_INIT_STR	extern/libgit2/src/khash.h	/^#define KHASH_MAP_INIT_STR(/;"	d
KHASH_SET_INIT_INT	extern/libgit2/src/khash.h	/^#define KHASH_SET_INIT_INT(/;"	d
KHASH_SET_INIT_INT64	extern/libgit2/src/khash.h	/^#define KHASH_SET_INIT_INT64(/;"	d
KHASH_SET_INIT_STR	extern/libgit2/src/khash.h	/^#define KHASH_SET_INIT_STR(/;"	d
KNOWN_COMMIT_IN_ATTR_REPO	extern/libgit2/tests/reset/reset_helpers.h	/^#define KNOWN_COMMIT_IN_ATTR_REPO /;"	d
KNOWN_COMMIT_IN_BARE_REPO	extern/libgit2/tests/reset/reset_helpers.h	/^#define KNOWN_COMMIT_IN_BARE_REPO /;"	d
Key	extern/libgit2/docs/checkout-internals.md	/^Key$/;"	s
Keywords	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Keywords,$/;"	e	enum:OpenXLSX::XLProperty
Known Problems	extern/OpenXLSX/library/zippy/Zippy/miniz/readme.md	/^## Known Problems$/;"	s
L	lr.hpp	/^struct L {$/;"	s	namespace:lr
LABEL	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define LABEL(/;"	d	file:
LARGEFILE_SIZE	extern/libgit2/tests/odb/largefiles.c	/^#define LARGEFILE_SIZE /;"	d	file:
LAST_AUTOTAB_LEFT_OP	extern/libgit2/deps/pcre/pcre_internal.h	/^#define LAST_AUTOTAB_LEFT_OP /;"	d
LAST_AUTOTAB_RIGHT_OP	extern/libgit2/deps/pcre/pcre_internal.h	/^#define LAST_AUTOTAB_RIGHT_OP /;"	d
LBL	extern/libgit2/deps/pcre/pcre_exec.c	/^#define LBL(/;"	d	file:
LEN	extern/libgit2/deps/zlib/inflate.h	/^            LEN,        \/* i: waiting for length\/lit\/eob code *\/$/;"	e	enum:__anon92f8b1ba0103
LENEXT	extern/libgit2/deps/zlib/inflate.h	/^            LENEXT,     \/* i: waiting for length extra bits *\/$/;"	e	enum:__anon92f8b1ba0103
LENGTH	extern/libgit2/deps/zlib/inflate.h	/^    LENGTH,     \/* i: waiting for 32-bit length (gzip) *\/$/;"	e	enum:__anon92f8b1ba0103
LENGTH_CODES	extern/libgit2/deps/zlib/deflate.h	/^#define LENGTH_CODES /;"	d
LENLENS	extern/libgit2/deps/zlib/inflate.h	/^        LENLENS,    \/* i: waiting for code length code lengths *\/$/;"	e	enum:__anon92f8b1ba0103
LENS	extern/libgit2/deps/zlib/inftrees.h	/^    LENS,$/;"	e	enum:__anon807a30970203
LEN_	extern/libgit2/deps/zlib/inflate.h	/^            LEN_,       \/* i: same as LEN below, but only first time in *\/$/;"	e	enum:__anon92f8b1ba0103
LF	extern/libgit2/deps/http-parser/http_parser.c	/^#define LF /;"	d	file:
LIBGIT2_FILENAME	extern/libgit2/CMakeLists.txt	/^OPTION(LIBGIT2_FILENAME			"Name of the produced binary"				OFF)$/;"	D
LIBGIT2_INCLUDES	extern/libgit2/src/CMakeLists.txt	/^SET(LIBGIT2_INCLUDES ${LIBGIT2_INCLUDES} PARENT_SCOPE)$/;"	v
LIBGIT2_INCLUDES	extern/libgit2/src/CMakeLists.txt	/^SET(LIBGIT2_INCLUDES$/;"	v
LIBGIT2_LIBS	extern/libgit2/src/CMakeLists.txt	/^SET(LIBGIT2_LIBS "")$/;"	v
LIBGIT2_LIBS	extern/libgit2/src/CMakeLists.txt	/^SET(LIBGIT2_LIBS ${LIBGIT2_LIBS} PARENT_SCOPE)$/;"	v
LIBGIT2_OBJECTS	extern/libgit2/src/CMakeLists.txt	/^SET(LIBGIT2_OBJECTS ${LIBGIT2_OBJECTS} PARENT_SCOPE)$/;"	v
LIBGIT2_PC_LIBS	extern/libgit2/src/CMakeLists.txt	/^SET(LIBGIT2_PC_LIBS "")$/;"	v
LIBGIT2_PC_REQUIRES	extern/libgit2/src/CMakeLists.txt	/^SET(LIBGIT2_PC_REQUIRES "")$/;"	v
LIBGIT2_SOURCES	extern/libgit2/src/CMakeLists.txt	/^SET(LIBGIT2_SOURCES ${SRC_H} ${SRC_GIT2} ${SRC_OS} ${SRC_SSH} ${SRC_SHA1})$/;"	v
LIBGIT2_SOVERSION	extern/libgit2/include/git2/version.h	/^#define LIBGIT2_SOVERSION /;"	d
LIBGIT2_SYSTEM_INCLUDES	extern/libgit2/src/CMakeLists.txt	/^SET(LIBGIT2_SYSTEM_INCLUDES "")$/;"	v
LIBGIT2_SYSTEM_INCLUDES	extern/libgit2/src/CMakeLists.txt	/^SET(LIBGIT2_SYSTEM_INCLUDES ${LIBGIT2_SYSTEM_INCLUDES} PARENT_SCOPE)$/;"	v
LIBGIT2_VERSION	extern/libgit2/include/git2/version.h	/^#define LIBGIT2_VERSION /;"	d
LIBGIT2_VERSION_STRING	extern/libgit2/CMakeLists.txt	/^SET(LIBGIT2_VERSION_STRING "${LIBGIT2_VERSION_MAJOR}.${LIBGIT2_VERSION_MINOR}.${LIBGIT2_VERSION_/;"	v
LIBGIT2_VER_MAJOR	extern/libgit2/include/git2/version.h	/^#define LIBGIT2_VER_MAJOR /;"	d
LIBGIT2_VER_MINOR	extern/libgit2/include/git2/version.h	/^#define LIBGIT2_VER_MINOR /;"	d
LIBGIT2_VER_PATCH	extern/libgit2/include/git2/version.h	/^#define LIBGIT2_VER_PATCH /;"	d
LIBGIT2_VER_REVISION	extern/libgit2/include/git2/version.h	/^#define LIBGIT2_VER_REVISION /;"	d
LIBSSH2_SESSION	extern/libgit2/include/git2/cred.h	/^typedef struct _LIBSSH2_SESSION LIBSSH2_SESSION;$/;"	t	typeref:struct:_LIBSSH2_SESSION
LIBSSH2_USERAUTH_KBDINT_PROMPT	extern/libgit2/include/git2/cred.h	/^typedef struct _LIBSSH2_USERAUTH_KBDINT_PROMPT LIBSSH2_USERAUTH_KBDINT_PROMPT;$/;"	t	typeref:struct:_LIBSSH2_USERAUTH_KBDINT_PROMPT
LIBSSH2_USERAUTH_KBDINT_RESPONSE	extern/libgit2/include/git2/cred.h	/^typedef struct _LIBSSH2_USERAUTH_KBDINT_RESPONSE LIBSSH2_USERAUTH_KBDINT_RESPONSE;$/;"	t	typeref:struct:_LIBSSH2_USERAUTH_KBDINT_RESPONSE
LIBWINHTTP_PATH	extern/libgit2/deps/winhttp/CMakeLists.txt	/^SET(LIBWINHTTP_PATH "${libgit2_BINARY_DIR}\/deps\/winhttp")$/;"	v
LIBWINHTTP_PATH	extern/libgit2/deps/winhttp/CMakeLists.txt	/^SET(LIBWINHTTP_PATH ${LIBWINHTTP_PATH} PARENT_SCOPE)$/;"	v
LIB_INSTALL_DIR	extern/libgit2/src/CMakeLists.txt	/^SET(LIB_INSTALL_DIR lib CACHE PATH "Where to install libraries to.")$/;"	v
LIMIT_MATCH	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define LIMIT_MATCH /;"	d	file:
LINE_END	extern/libgit2/src/xdiff/xhistogram.c	/^#define LINE_END(/;"	d	file:
LINE_END_PTR	extern/libgit2/src/xdiff/xhistogram.c	/^#define LINE_END_PTR(/;"	d	file:
LINE_MAP	extern/libgit2/src/xdiff/xhistogram.c	/^#define LINE_MAP(/;"	d	file:
LINK_ANCESTOR_OID	extern/libgit2/tests/checkout/conflict.c	/^#define LINK_ANCESTOR_OID /;"	d	file:
LINK_ANCESTOR_TARGET	extern/libgit2/tests/checkout/conflict.c	/^#define LINK_ANCESTOR_TARGET /;"	d	file:
LINK_OURS_OID	extern/libgit2/tests/checkout/conflict.c	/^#define LINK_OURS_OID /;"	d	file:
LINK_OURS_TARGET	extern/libgit2/tests/checkout/conflict.c	/^#define LINK_OURS_TARGET /;"	d	file:
LINK_SIZE	extern/libgit2/deps/pcre/config.h.in	/^#define LINK_SIZE	/;"	d	file:
LINK_SIZE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define LINK_SIZE /;"	d
LINK_THEIRS_OID	extern/libgit2/tests/checkout/conflict.c	/^#define LINK_THEIRS_OID /;"	d	file:
LINK_THEIRS_TARGET	extern/libgit2/tests/checkout/conflict.c	/^#define LINK_THEIRS_TARGET /;"	d	file:
LIT	extern/libgit2/deps/zlib/inflate.h	/^            LIT,        \/* o: waiting for output space to write literal *\/$/;"	e	enum:__anon92f8b1ba0103
LITERALS	extern/libgit2/deps/zlib/deflate.h	/^#define LITERALS /;"	d
LIVE_EMPTYREPO_URL	extern/libgit2/tests/online/clone.c	/^#define LIVE_EMPTYREPO_URL /;"	d	file:
LIVE_REPO_URL	extern/libgit2/tests/clone/nonetwork.c	/^#define LIVE_REPO_URL /;"	d	file:
LIVE_REPO_URL	extern/libgit2/tests/online/clone.c	/^#define LIVE_REPO_URL /;"	d	file:
LIVE_REPO_URL	extern/libgit2/tests/online/fetchhead.c	/^#define LIVE_REPO_URL /;"	d	file:
LLONG_MAX	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define LLONG_MAX /;"	d	file:
LLONG_MIN	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	d	file:
LLVMFuzzerInitialize	extern/libgit2/fuzzers/config_file_fuzzer.c	/^int LLVMFuzzerInitialize(int *argc, char ***argv)$/;"	f	typeref:typename:int
LLVMFuzzerInitialize	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^int LLVMFuzzerInitialize(int *argc, char ***argv)$/;"	f	typeref:typename:int
LLVMFuzzerInitialize	extern/libgit2/fuzzers/objects_fuzzer.c	/^int LLVMFuzzerInitialize(int *argc, char ***argv)$/;"	f	typeref:typename:int
LLVMFuzzerInitialize	extern/libgit2/fuzzers/packfile_fuzzer.c	/^int LLVMFuzzerInitialize(int *argc, char ***argv)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/libgit2/fuzzers/config_file_fuzzer.c	/^int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^int LLVMFuzzerTestOneInput(const unsigned char *data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/libgit2/fuzzers/objects_fuzzer.c	/^int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/libgit2/fuzzers/packfile_fuzzer.c	/^int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)$/;"	f	typeref:typename:int
LOAD	extern/libgit2/deps/zlib/infback.c	/^#define LOAD(/;"	d	file:
LOAD	extern/libgit2/deps/zlib/inflate.c	/^#define LOAD(/;"	d	file:
LOC	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^					SET(LOC "${OPENSSL_DIR}${SUFFIX}")$/;"	v
LOCALS0	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define LOCALS0 /;"	d	file:
LOCALS1	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define LOCALS1 /;"	d	file:
LOOK	extern/libgit2/deps/zlib/gzguts.h	/^#define LOOK /;"	d
LOOKS_LIKE_DRIVE_PREFIX	extern/libgit2/src/path.c	/^#define LOOKS_LIKE_DRIVE_PREFIX(/;"	d	file:
LOOKUP_IN_MAP	extern/libgit2/src/index.c	/^#define LOOKUP_IN_MAP(/;"	d	file:
LOOSE_BLOB_FN	extern/libgit2/tests/odb/freshen.c	/^#define LOOSE_BLOB_FN /;"	d	file:
LOOSE_BLOB_ID	extern/libgit2/tests/odb/freshen.c	/^#define LOOSE_BLOB_ID /;"	d	file:
LOOSE_STR	extern/libgit2/tests/odb/freshen.c	/^#define LOOSE_STR /;"	d	file:
LOOSE_TREE_FN	extern/libgit2/tests/odb/freshen.c	/^#define LOOSE_TREE_FN /;"	d	file:
LOOSE_TREE_ID	extern/libgit2/tests/odb/freshen.c	/^#define LOOSE_TREE_ID /;"	d	file:
LOWER	extern/libgit2/deps/http-parser/http_parser.c	/^#define LOWER(/;"	d	file:
LPHINTERNET	extern/libgit2/deps/winhttp/winhttp.h	/^typedef HINTERNET *LPHINTERNET;$/;"	t	typeref:typename:HINTERNET *
LPHTTP_VERSION_INFO	extern/libgit2/deps/winhttp/winhttp.h	/^} HTTP_VERSION_INFO, *LPHTTP_VERSION_INFO;$/;"	t	typeref:struct:__anonb531ffc20708 *
LPINTERNET_PORT	extern/libgit2/deps/winhttp/winhttp.h	/^typedef INTERNET_PORT *LPINTERNET_PORT;$/;"	t	typeref:typename:INTERNET_PORT *
LPINTERNET_SCHEME	extern/libgit2/deps/winhttp/winhttp.h	/^typedef int INTERNET_SCHEME, *LPINTERNET_SCHEME;$/;"	t	typeref:typename:int *
LPURL_COMPONENTS	extern/libgit2/deps/winhttp/winhttp.h	/^} URL_COMPONENTS, *LPURL_COMPONENTS;$/;"	t	typeref:struct:__anonb531ffc20108 *
LPURL_COMPONENTSW	extern/libgit2/deps/winhttp/winhttp.h	/^typedef LPURL_COMPONENTS LPURL_COMPONENTSW;$/;"	t	typeref:typename:LPURL_COMPONENTS
LPWINHTTP_ASYNC_RESULT	extern/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_ASYNC_RESULT, *LPWINHTTP_ASYNC_RESULT;$/;"	t	typeref:struct:__anonb531ffc20208 *
LPWINHTTP_PROXY_INFO	extern/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_PROXY_INFO, *LPWINHTTP_PROXY_INFO;$/;"	t	typeref:struct:__anonb531ffc20408 *
LPWINHTTP_PROXY_INFOW	extern/libgit2/deps/winhttp/winhttp.h	/^typedef LPWINHTTP_PROXY_INFO LPWINHTTP_PROXY_INFOW;$/;"	t	typeref:typename:LPWINHTTP_PROXY_INFO
LR	git.hpp	/^template <typename R> using LR = lr::LR<R>;$/;"	t	namespace:git	typeref:typename:lr::LR<R>
LR	lr.hpp	/^template <typename... Rights> using LR = std::variant<L, Rights...>;$/;"	t	namespace:lr	typeref:typename:std::variant<L,Rights...>
LR_H	lr.hpp	/^#define LR_H /;"	d
L_CODES	extern/libgit2/deps/zlib/deflate.h	/^#define L_CODES /;"	d
Language Bindings	extern/libgit2/README.md	/^Language Bindings$/;"	c
Larger Projects	extern/libgit2/docs/projects.md	/^## Larger Projects$/;"	s
LastCell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^Impl::XLCellReference Impl::XLWorksheet::LastCell() const noexcept {$/;"	f	class:Impl::XLWorksheet	typeref:typename:Impl::XLCellReference
LastCell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^XLCellReference XLWorksheet::LastCell() const noexcept {$/;"	f	class:XLWorksheet	typeref:typename:XLCellReference
LastModifiedBy	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        LastModifiedBy,$/;"	e	enum:OpenXLSX::XLProperty
LastName	extern/NamedType/main.cpp	/^    using LastName = fluent::NamedType<std::string, struct LastNameTag>;$/;"	t	typeref:typename:fluent::NamedType<std::string,struct LastNameTag>	file:
LastPrinted	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        LastPrinted,$/;"	e	enum:OpenXLSX::XLProperty
Len	extern/libgit2/deps/zlib/deflate.h	/^#define Len /;"	d
LibXL	extern/OpenXLSX/README.md	/^### LibXL$/;"	S
Libgit2 Conventions	extern/libgit2/docs/conventions.md	/^# Libgit2 Conventions$/;"	c
Libgit2 Versions	extern/libgit2/docs/contributing.md	/^## Libgit2 Versions$/;"	s
License	extern/OpenXLSX/library/pugixml/README.md	/^## License$/;"	s
License	extern/libgit2/README.md	/^License$/;"	c
Licensing	extern/libgit2/docs/contributing.md	/^## Licensing$/;"	s
LinkId	git.hpp	/^using LinkId = nt::NamedType<std::string, struct LinkIdTag>;$/;"	t	namespace:git	typeref:typename:nt::NamedType<std::string,struct LinkIdTag>
LinksUpToDate	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        LinksUpToDate,$/;"	e	enum:OpenXLSX::XLProperty
Linux	extern/libgit2/tests/README.md	/^#### Linux$/;"	t
LocalAddress	extern/libgit2/deps/winhttp/winhttp.h	/^    SOCKADDR_STORAGE LocalAddress;$/;"	m	struct:__anonb531ffc20808	typeref:typename:SOCKADDR_STORAGE
LocalPcreFree	extern/libgit2/deps/pcre/pcre_globals.c	/^static void LocalPcreFree(void* aPtr)$/;"	f	typeref:typename:void	file:
LocalPcreMalloc	extern/libgit2/deps/pcre/pcre_globals.c	/^static void* LocalPcreMalloc(size_t aSize)$/;"	f	typeref:typename:void *	file:
M	extern/libgit2/examples/blame.c	/^	int M;$/;"	m	struct:opts	typeref:typename:int	file:
MACHINE_STACK_SIZE	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define MACHINE_STACK_SIZE /;"	d	file:
MAGIC_NUMBER	extern/libgit2/deps/pcre/pcre_internal.h	/^#define MAGIC_NUMBER /;"	d
MANY_UTF8_CRLF_RAW	extern/libgit2/tests/filter/crlf.h	/^#define MANY_UTF8_CRLF_RAW	/;"	d
MANY_UTF8_LF_RAW	extern/libgit2/tests/filter/crlf.h	/^#define MANY_UTF8_LF_RAW	/;"	d
MAP_FAILED	extern/libgit2/src/map.h	/^#define MAP_FAILED /;"	d
MARK	extern/libgit2/deps/http-parser/http_parser.c	/^#define MARK(/;"	d	file:
MASTER_BRANCH	extern/libgit2/tests/worktree/merge.c	/^#define MASTER_BRANCH /;"	d	file:
MATCH	extern/libgit2/deps/zlib/inflate.h	/^            MATCH,      \/* o: waiting for output space to copy string *\/$/;"	e	enum:__anon92f8b1ba0103
MATCH_ACCEPT	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_ACCEPT /;"	d	file:
MATCH_BACKTRACK_MAX	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_BACKTRACK_MAX /;"	d	file:
MATCH_BACKTRACK_MIN	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_BACKTRACK_MIN /;"	d	file:
MATCH_CBEGROUP	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_CBEGROUP /;"	d	file:
MATCH_COMMIT	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_COMMIT /;"	d	file:
MATCH_CONDASSERT	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_CONDASSERT /;"	d	file:
MATCH_KETRPOS	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_KETRPOS /;"	d	file:
MATCH_LIMIT	extern/libgit2/deps/pcre/config.h.in	/^#define MATCH_LIMIT	/;"	d	file:
MATCH_LIMIT_RECURSION	extern/libgit2/deps/pcre/config.h.in	/^#define MATCH_LIMIT_RECURSION	/;"	d	file:
MATCH_MATCH	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_MATCH /;"	d	file:
MATCH_NOMATCH	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_NOMATCH /;"	d	file:
MATCH_ONCE	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_ONCE /;"	d	file:
MATCH_PRUNE	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_PRUNE /;"	d	file:
MATCH_SKIP	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_SKIP /;"	d	file:
MATCH_SKIP_ARG	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_SKIP_ARG /;"	d	file:
MATCH_THEN	extern/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_THEN /;"	d	file:
MAX	extern/libgit2/src/tsort.c	/^#	define MAX(/;"	d	file:
MAXBITS	extern/libgit2/deps/zlib/inftrees.c	/^#define MAXBITS /;"	d	file:
MAXSEG_64K	extern/libgit2/deps/zlib/zconf.h	/^#  define MAXSEG_64K$/;"	d
MAX_255	extern/libgit2/deps/pcre/pcre_internal.h	/^#define MAX_255(/;"	d
MAX_BITS	extern/libgit2/deps/zlib/deflate.h	/^#define MAX_BITS /;"	d
MAX_BLANKS	extern/libgit2/src/xdiff/xdiffi.c	/^#define MAX_BLANKS /;"	d	file:
MAX_BL_BITS	extern/libgit2/deps/zlib/trees.c	/^#define MAX_BL_BITS /;"	d	file:
MAX_CANDIDATES_TAGS	extern/libgit2/src/describe.c	/^#define MAX_CANDIDATES_TAGS /;"	d	file:
MAX_CNT	extern/libgit2/src/xdiff/xhistogram.c	/^#define MAX_CNT	/;"	d	file:
MAX_CONTENT_TYPE_LEN	extern/libgit2/src/transports/winhttp.c	/^#define MAX_CONTENT_TYPE_LEN	/;"	d	file:
MAX_DIFF_CHARS	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define MAX_DIFF_CHARS /;"	d	file:
MAX_DIST	extern/libgit2/deps/zlib/deflate.h	/^#define MAX_DIST(/;"	d
MAX_FILEMODE_BYTES	extern/libgit2/src/tree.c	/^#define MAX_FILEMODE_BYTES /;"	d	file:
MAX_HEADER_LEN	extern/libgit2/src/odb_loose.c	/^#define MAX_HEADER_LEN /;"	d	file:
MAX_INCLUDE_DEPTH	extern/libgit2/src/config_file.c	/^#define MAX_INCLUDE_DEPTH /;"	d	file:
MAX_INDENT	extern/libgit2/src/xdiff/xdiffi.c	/^#define MAX_INDENT /;"	d	file:
MAX_MARK	extern/libgit2/deps/pcre/pcre_internal.h	/^#define MAX_MARK /;"	d
MAX_MATCH	extern/libgit2/deps/zlib/zutil.h	/^#define MAX_MATCH /;"	d
MAX_MEM_LEVEL	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MAX_MEM_LEVEL /;"	d
MAX_MEM_LEVEL	extern/libgit2/deps/zlib/zconf.h	/^#    define MAX_MEM_LEVEL /;"	d
MAX_NAME_COUNT	extern/libgit2/deps/pcre/config.h.in	/^#define MAX_NAME_COUNT	/;"	d	file:
MAX_NAME_SIZE	extern/libgit2/deps/pcre/config.h.in	/^#define MAX_NAME_SIZE	/;"	d	file:
MAX_NESTING_LEVEL	extern/libgit2/src/refdb_fs.c	/^#define MAX_NESTING_LEVEL	/;"	d	file:
MAX_NESTING_LEVEL	extern/libgit2/src/refs.c	/^#define MAX_NESTING_LEVEL	/;"	d	file:
MAX_N_CHARS	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define MAX_N_CHARS /;"	d	file:
MAX_OIDS	extern/libgit2/tests/object/raw/short.c	/^#define MAX_OIDS /;"	d	file:
MAX_OP_SIZE	extern/libgit2/src/delta.c	/^#define MAX_OP_SIZE	/;"	d	file:
MAX_PATHSPEC	extern/libgit2/examples/status.c	/^#define MAX_PATHSPEC /;"	d	file:
MAX_PATTERN_SIZE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define MAX_PATTERN_SIZE /;"	d
MAX_PTR	extern/libgit2/deps/zlib/zutil.c	/^#define MAX_PTR /;"	d	file:
MAX_PTR	extern/libgit2/src/xdiff/xhistogram.c	/^#define MAX_PTR	/;"	d	file:
MAX_RANGE_SIZE	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define MAX_RANGE_SIZE /;"	d	file:
MAX_STORED	extern/libgit2/deps/zlib/deflate.c	/^#define MAX_STORED /;"	d	file:
MAX_SYMLINK_DEPTH	extern/libgit2/src/filebuf.c	/^#define MAX_SYMLINK_DEPTH /;"	d	file:
MAX_USED_TAGS	extern/libgit2/tests/object/tag/list.c	/^#define MAX_USED_TAGS /;"	d	file:
MAX_VALUE_FOR_SINGLE_CHAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define MAX_VALUE_FOR_SINGLE_CHAR /;"	d
MAX_WBITS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MAX_WBITS /;"	d
MAX_WBITS	extern/libgit2/deps/zlib/zconf.h	/^#  define MAX_WBITS /;"	d
MBEDTLS_FIND_QUIETLY	extern/libgit2/cmake/Modules/FindmbedTLS.cmake	/^    SET(MBEDTLS_FIND_QUIETLY TRUE)$/;"	v
MBEDTLS_FOUND	extern/libgit2/cmake/Modules/FindmbedTLS.cmake	/^     SET(MBEDTLS_FOUND TRUE)$/;"	v
MBEDTLS_LIBRARIES	extern/libgit2/cmake/Modules/FindmbedTLS.cmake	/^    SET(MBEDTLS_LIBRARIES "-L${MBEDTLS_LIBRARY_DIR} -l${MBEDTLS_LIBRARY_FILE} -l${MBEDX509_LIBRA/;"	v
MEM	extern/libgit2/deps/zlib/inflate.h	/^    MEM,        \/* got an inflate() memory error -- remain here until reset *\/$/;"	e	enum:__anon92f8b1ba0103
MERGE_BRANCH_OID	extern/libgit2/tests/merge/workdir/dirty.c	/^#define MERGE_BRANCH_OID /;"	d	file:
MERGE_COMMIT_MSG	extern/libgit2/examples/merge.c	/^#define MERGE_COMMIT_MSG /;"	d	file:
MESSAGE	extern/libgit2/tests/stash/save.c	/^#define MESSAGE /;"	d	file:
MESSAGES_COUNT	extern/libgit2/tests/notes/notes.c	/^#define MESSAGES_COUNT /;"	d	file:
MIN	extern/libgit2/deps/http-parser/http_parser.c	/^# define MIN(/;"	d	file:
MIN	extern/libgit2/deps/ntlmclient/compat.h	/^# define MIN(/;"	d
MIN	extern/libgit2/deps/zlib/deflate.c	/^#define MIN(/;"	d	file:
MIN	extern/libgit2/src/tsort.c	/^#	define MIN(/;"	d	file:
MINIZ_HAS_64BIT_REGISTERS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MINIZ_HAS_64BIT_REGISTERS /;"	d
MINIZ_LITTLE_ENDIAN	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MINIZ_LITTLE_ENDIAN /;"	d
MINIZ_NO_TIME	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MINIZ_NO_TIME$/;"	d
MINIZ_USE_UNALIGNED_LOADS_AND_STORES	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MINIZ_USE_UNALIGNED_LOADS_AND_STORES /;"	d
MINIZ_X86_OR_X64_CPU	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MINIZ_X86_OR_X64_CPU /;"	d
MINIZ_ZIPEXCEPTION_H	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^#define MINIZ_ZIPEXCEPTION_H$/;"	d
MIN_ALLOCSIZE	extern/libgit2/src/vector.c	/^#define MIN_ALLOCSIZE	/;"	d	file:
MIN_LOOKAHEAD	extern/libgit2/deps/zlib/deflate.h	/^#define MIN_LOOKAHEAD /;"	d
MIN_MATCH	extern/libgit2/deps/zlib/zutil.h	/^#define MIN_MATCH /;"	d
MIN_PROGRESS_UPDATE_INTERVAL	extern/libgit2/src/pack-objects.c	/^#define MIN_PROGRESS_UPDATE_INTERVAL /;"	d	file:
MIN_PROGRESS_UPDATE_INTERVAL	extern/libgit2/src/transports/smart_protocol.c	/^#define MIN_PROGRESS_UPDATE_INTERVAL /;"	d	file:
MKDIR_NORMAL	extern/libgit2/src/checkout.c	/^#define MKDIR_NORMAL /;"	d	file:
MKDIR_REMOVE_EXISTING	extern/libgit2/src/checkout.c	/^#define MKDIR_REMOVE_EXISTING /;"	d	file:
MM_BLOB_CONFIG	extern/libgit2/src/mailmap.c	/^#define MM_BLOB_CONFIG /;"	d	file:
MM_BLOB_DEFAULT	extern/libgit2/src/mailmap.c	/^#define MM_BLOB_DEFAULT /;"	d	file:
MM_FILE	extern/libgit2/src/mailmap.c	/^#define MM_FILE /;"	d	file:
MM_FILE_CONFIG	extern/libgit2/src/mailmap.c	/^#define MM_FILE_CONFIG /;"	d	file:
MOD	extern/libgit2/deps/zlib/adler32.c	/^#  define MOD(/;"	d	file:
MOD28	extern/libgit2/deps/zlib/adler32.c	/^#  define MOD28(/;"	d	file:
MOD63	extern/libgit2/deps/zlib/adler32.c	/^#  define MOD63(/;"	d	file:
MODE_BITS_MASK	extern/libgit2/src/diff_generate.c	/^#define MODE_BITS_MASK /;"	d	file:
MORE_CRLF_TEXT_AS_CRLF	extern/libgit2/tests/filter/crlf.h	/^#define MORE_CRLF_TEXT_AS_CRLF	/;"	d
MORE_CRLF_TEXT_AS_LF	extern/libgit2/tests/filter/crlf.h	/^#define MORE_CRLF_TEXT_AS_LF	/;"	d
MORE_CRLF_TEXT_RAW	extern/libgit2/tests/filter/crlf.h	/^#define MORE_CRLF_TEXT_RAW	/;"	d
MORE_LF_TEXT_AS_CRLF	extern/libgit2/tests/filter/crlf.h	/^#define MORE_LF_TEXT_AS_CRLF	/;"	d
MORE_LF_TEXT_AS_LF	extern/libgit2/tests/filter/crlf.h	/^#define MORE_LF_TEXT_AS_LF	/;"	d
MORE_LF_TEXT_RAW	extern/libgit2/tests/filter/crlf.h	/^#define MORE_LF_TEXT_RAW	/;"	d
MOV_UCHAR	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define MOV_UCHAR /;"	d	file:
MSB	extern/libgit2/src/util.h	/^#define MSB(/;"	d
MSDOS	extern/libgit2/deps/zlib/zconf.h	/^#  define MSDOS$/;"	d
MSGNUM_FILE	extern/libgit2/src/rebase.c	/^#define MSGNUM_FILE /;"	d	file:
MSVC_CRTDBG	extern/libgit2/CMakeLists.txt	/^	OPTION(MSVC_CRTDBG 		"Enable CRTDBG memory leak reporting"			OFF)$/;"	D
MURMUR_BLOCK	extern/libgit2/src/util.c	/^#define MURMUR_BLOCK(/;"	d	file:
MY_MAX_FILENAME	extern/libgit2/src/win32/w32_stack.c	/^#define MY_MAX_FILENAME /;"	d	file:
MY_ROW_LIMIT	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^#define MY_ROW_LIMIT /;"	d	file:
MY_ZCALLOC	extern/libgit2/deps/zlib/zutil.c	/^#  define MY_ZCALLOC$/;"	d	file:
MZ_ADLER32_INIT	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_ADLER32_INIT /;"	d
MZ_ASSERT	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_ASSERT(/;"	d
MZ_BEST_COMPRESSION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_BEST_COMPRESSION = 9,$/;"	e	enum:__anon09af45a70203
MZ_BEST_SPEED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_BEST_SPEED = 1,$/;"	e	enum:__anon09af45a70203
MZ_BLOCK	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, /;"	e	enum:__anon09af45a70303
MZ_BUF_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_BUF_ERROR = -5,$/;"	e	enum:__anon09af45a70403
MZ_CLEAR_OBJ	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_CLEAR_OBJ(/;"	d
MZ_CRC32_INIT	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_CRC32_INIT /;"	d
MZ_DATA_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_DATA_ERROR = -3,$/;"	e	enum:__anon09af45a70403
MZ_DEFAULT_COMPRESSION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_DEFAULT_COMPRESSION = -1$/;"	e	enum:__anon09af45a70203
MZ_DEFAULT_LEVEL	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_DEFAULT_LEVEL = 6,$/;"	e	enum:__anon09af45a70203
MZ_DEFAULT_STRATEGY	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4$/;"	e	enum:__anon09af45a70103
MZ_DEFAULT_WINDOW_BITS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_DEFAULT_WINDOW_BITS /;"	d
MZ_DEFLATED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_DEFLATED /;"	d
MZ_ERRNO	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ERRNO = -1,$/;"	e	enum:__anon09af45a70403
MZ_FALSE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_FALSE /;"	d
MZ_FILE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_FILE /;"	d
MZ_FILTERED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4$/;"	e	enum:__anon09af45a70103
MZ_FINISH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, /;"	e	enum:__anon09af45a70303
MZ_FIXED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4$/;"	e	enum:__anon09af45a70103
MZ_FORCEINLINE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_FORCEINLINE /;"	d
MZ_FREE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_FREE(/;"	d
MZ_FULL_FLUSH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, /;"	e	enum:__anon09af45a70303
MZ_HUFFMAN_ONLY	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4$/;"	e	enum:__anon09af45a70103
MZ_MACRO_END	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_MACRO_END /;"	d
MZ_MALLOC	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_MALLOC(/;"	d
MZ_MAX	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_MAX(/;"	d
MZ_MEM_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_MEM_ERROR = -4,$/;"	e	enum:__anon09af45a70403
MZ_MIN	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_MIN(/;"	d
MZ_NEED_DICT	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_NEED_DICT = 2,$/;"	e	enum:__anon09af45a70403
MZ_NO_COMPRESSION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_NO_COMPRESSION = 0,$/;"	e	enum:__anon09af45a70203
MZ_NO_FLUSH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, /;"	e	enum:__anon09af45a70303
MZ_OK	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_OK = 0,$/;"	e	enum:__anon09af45a70403
MZ_PARAM_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_PARAM_ERROR = -10000$/;"	e	enum:__anon09af45a70403
MZ_PARTIAL_FLUSH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, /;"	e	enum:__anon09af45a70303
MZ_READ_LE16	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_READ_LE16(/;"	d
MZ_READ_LE32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_READ_LE32(/;"	d
MZ_READ_LE64	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_READ_LE64(/;"	d
MZ_REALLOC	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_REALLOC(/;"	d
MZ_RLE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4$/;"	e	enum:__anon09af45a70103
MZ_STREAM_END	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_STREAM_END = 1,$/;"	e	enum:__anon09af45a70403
MZ_STREAM_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_STREAM_ERROR = -2,$/;"	e	enum:__anon09af45a70403
MZ_SWAP_UINT32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_SWAP_UINT32(/;"	d
MZ_SYNC_FLUSH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, /;"	e	enum:__anon09af45a70303
MZ_TIME_T	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_TIME_T /;"	d
MZ_TOLOWER	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_TOLOWER(/;"	d
MZ_TRUE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_TRUE /;"	d
MZ_UBER_COMPRESSION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_UBER_COMPRESSION = 10,$/;"	e	enum:__anon09af45a70203
MZ_UINT16_MAX	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_UINT16_MAX /;"	d
MZ_UINT32_MAX	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_UINT32_MAX /;"	d
MZ_VERNUM	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_VERNUM /;"	d
MZ_VERSION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_VERSION /;"	d
MZ_VERSION_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_VERSION_ERROR = -6,$/;"	e	enum:__anon09af45a70403
MZ_VER_MAJOR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_VER_MAJOR /;"	d
MZ_VER_MINOR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_VER_MINOR /;"	d
MZ_VER_REVISION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_VER_REVISION /;"	d
MZ_VER_SUBREVISION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_VER_SUBREVISION /;"	d
MZ_WRITE_LE16	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_WRITE_LE16(/;"	d
MZ_WRITE_LE32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_WRITE_LE32(/;"	d
MZ_WRITE_LE64	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_WRITE_LE64(/;"	d
MZ_ZIP64_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS = 24, \/* 8 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDH_CDIR_OFS_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_ECDH_CDIR_OFS_OFS = 48,                 \/* 8 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDH_CDIR_SIZE_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_ECDH_CDIR_SIZE_OFS = 40,                \/* 8 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDH_CDIR_TOTAL_ENTRIES_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_ECDH_CDIR_TOTAL_ENTRIES_OFS = 32,       \/* 8 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDH_NUM_DISK_CDIR_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_ECDH_NUM_DISK_CDIR_OFS = 20,            \/* 4 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDH_NUM_THIS_DISK_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_ECDH_NUM_THIS_DISK_OFS = 16,            \/* 4 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDH_SIG_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            MZ_ZIP64_ECDH_SIG_OFS = 0,                       \/* 4 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDH_SIZE_OF_RECORD_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_ECDH_SIZE_OF_RECORD_OFS = 4,            \/* 8 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDH_VERSION_MADE_BY_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_ECDH_VERSION_MADE_BY_OFS = 12,          \/* 2 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDH_VERSION_NEEDED_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_ECDH_VERSION_NEEDED_OFS = 14,           \/* 2 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDL_NUM_DISK_CDIR_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_ECDL_NUM_DISK_CDIR_OFS = 4,          \/* 4 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDL_REL_OFS_TO_ZIP64_ECDR_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_ECDL_REL_OFS_TO_ZIP64_ECDR_OFS = 8,  \/* 8 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDL_SIG_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            MZ_ZIP64_ECDL_SIG_OFS = 0,                    \/* 4 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_ECDL_TOTAL_NUMBER_OF_DISKS_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_ECDL_TOTAL_NUMBER_OF_DISKS_OFS = 16, \/* 4 bytes *\/$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_END_OF_CENTRAL_DIR_HEADER_SIG	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            MZ_ZIP64_END_OF_CENTRAL_DIR_HEADER_SIG = 0x06064b50,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_END_OF_CENTRAL_DIR_HEADER_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_END_OF_CENTRAL_DIR_HEADER_SIZE = 56,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIG	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIG = 0x07064b50,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIZE = 20,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_EXTENDED_INFORMATION_FIELD_HEADER_ID	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP64_EXTENDED_INFORMATION_FIELD_HEADER_ID = 0x0001,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP64_MAX_CENTRAL_EXTRA_FIELD_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_ZIP64_MAX_CENTRAL_EXTRA_FIELD_SIZE /;"	d
MZ_ZIP64_MAX_LOCAL_EXTRA_FIELD_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_ZIP64_MAX_LOCAL_EXTRA_FIELD_SIZE /;"	d
MZ_ZIP_ALLOC_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_ALLOC_FAILED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_ARCHIVE_TOO_LARGE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_ARCHIVE_TOO_LARGE,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_ARRAY_ELEMENT	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_ZIP_ARRAY_ELEMENT(/;"	d
MZ_ZIP_ARRAY_SET_ELEMENT_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define MZ_ZIP_ARRAY_SET_ELEMENT_SIZE(/;"	d
MZ_ZIP_BUF_TOO_SMALL	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_BUF_TOO_SMALL,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_CDH_BIT_FLAG_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_BIT_FLAG_OFS = 8,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_COMMENT_LEN_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_COMMENT_LEN_OFS = 32,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_COMPRESSED_SIZE_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_COMPRESSED_SIZE_OFS = 20,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_CRC32_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_CRC32_OFS = 16,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_DECOMPRESSED_SIZE_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_DECOMPRESSED_SIZE_OFS = 24,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_DISK_START_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_DISK_START_OFS = 34,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_EXTERNAL_ATTR_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_EXTERNAL_ATTR_OFS = 38,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_EXTRA_LEN_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_EXTRA_LEN_OFS = 30,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_FILENAME_LEN_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_FILENAME_LEN_OFS = 28,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_FILE_DATE_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_FILE_DATE_OFS = 14,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_FILE_TIME_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_FILE_TIME_OFS = 12,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_INTERNAL_ATTR_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_INTERNAL_ATTR_OFS = 36,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_LOCAL_HEADER_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_LOCAL_HEADER_OFS = 42,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_METHOD_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_METHOD_OFS = 10,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_SIG_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            MZ_ZIP_CDH_SIG_OFS = 0,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_VERSION_MADE_BY_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_VERSION_MADE_BY_OFS = 4,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CDH_VERSION_NEEDED_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CDH_VERSION_NEEDED_OFS = 6,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CENTRAL_DIR_HEADER_SIG	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CENTRAL_DIR_HEADER_SIG = 0x02014b50,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_CENTRAL_DIR_HEADER_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CENTRAL_DIR_HEADER_SIZE = 46,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_COMPRESSION_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_COMPRESSION_FAILED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_CRC_CHECK_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_CRC_CHECK_FAILED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_DATA_DESCRIPTER_SIZE32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_DATA_DESCRIPTER_SIZE32 = 16,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_DATA_DESCRIPTER_SIZE64	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_DATA_DESCRIPTER_SIZE64 = 24,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_DATA_DESCRIPTOR_ID	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_DATA_DESCRIPTOR_ID = 0x08074b50,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_DECOMPRESSION_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_DECOMPRESSION_FAILED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_DOS_DIR_ATTRIBUTE_BITFLAG	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_DOS_DIR_ATTRIBUTE_BITFLAG = 0x10,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS = 8,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_ECDH_CDIR_OFS_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_ECDH_CDIR_OFS_OFS = 16,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_ECDH_CDIR_SIZE_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_ECDH_CDIR_SIZE_OFS = 12,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS = 10,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_ECDH_COMMENT_SIZE_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_ECDH_COMMENT_SIZE_OFS = 20,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_ECDH_NUM_DISK_CDIR_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_ECDH_NUM_DISK_CDIR_OFS = 6,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_ECDH_NUM_THIS_DISK_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_ECDH_NUM_THIS_DISK_OFS = 4,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_ECDH_SIG_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            MZ_ZIP_ECDH_SIG_OFS = 0,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIG	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIG = 0x06054b50,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIZE = 22,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_FAILED_FINDING_CENTRAL_DIR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FAILED_FINDING_CENTRAL_DIR,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_FILE_CLOSE_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FILE_CLOSE_FAILED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_FILE_CREATE_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FILE_CREATE_FAILED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_FILE_NOT_FOUND	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FILE_NOT_FOUND,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_FILE_OPEN_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FILE_OPEN_FAILED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_FILE_READ_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FILE_READ_FAILED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_FILE_SEEK_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FILE_SEEK_FAILED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_FILE_STAT_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FILE_STAT_FAILED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_FILE_TOO_LARGE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FILE_TOO_LARGE,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_FILE_WRITE_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FILE_WRITE_FAILED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_FLAG_ASCII_FILENAME	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FLAG_ASCII_FILENAME = 0x10000$/;"	e	enum:__anon09af45a71403
MZ_ZIP_FLAG_CASE_SENSITIVE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FLAG_CASE_SENSITIVE = 0x0100,$/;"	e	enum:__anon09af45a71403
MZ_ZIP_FLAG_COMPRESSED_DATA	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FLAG_COMPRESSED_DATA = 0x0400,$/;"	e	enum:__anon09af45a71403
MZ_ZIP_FLAG_DO_NOT_SORT_CENTRAL_DIRECTORY	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FLAG_DO_NOT_SORT_CENTRAL_DIRECTORY = 0x0800,$/;"	e	enum:__anon09af45a71403
MZ_ZIP_FLAG_IGNORE_PATH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FLAG_IGNORE_PATH = 0x0200,$/;"	e	enum:__anon09af45a71403
MZ_ZIP_FLAG_VALIDATE_HEADERS_ONLY	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FLAG_VALIDATE_HEADERS_ONLY = 0x2000,     \/* validate the local headers, but don't de/;"	e	enum:__anon09af45a71403
MZ_ZIP_FLAG_VALIDATE_LOCATE_FILE_FLAG	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FLAG_VALIDATE_LOCATE_FILE_FLAG = 0x1000, \/* if enabled, mz_zip_reader_locate_file() /;"	e	enum:__anon09af45a71403
MZ_ZIP_FLAG_WRITE_ALLOW_READING	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FLAG_WRITE_ALLOW_READING = 0x8000,$/;"	e	enum:__anon09af45a71403
MZ_ZIP_FLAG_WRITE_ZIP64	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_FLAG_WRITE_ZIP64 = 0x4000,               \/* always use the zip64 file format, instea/;"	e	enum:__anon09af45a71403
MZ_ZIP_GENERAL_PURPOSE_BIT_FLAG_COMPRESSED_PATCH_FLAG	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_GENERAL_PURPOSE_BIT_FLAG_COMPRESSED_PATCH_FLAG = 32,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_GENERAL_PURPOSE_BIT_FLAG_IS_ENCRYPTED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_GENERAL_PURPOSE_BIT_FLAG_IS_ENCRYPTED = 1,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_GENERAL_PURPOSE_BIT_FLAG_LOCAL_DIR_IS_MASKED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_GENERAL_PURPOSE_BIT_FLAG_LOCAL_DIR_IS_MASKED = 8192,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_GENERAL_PURPOSE_BIT_FLAG_USES_STRONG_ENCRYPTION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_GENERAL_PURPOSE_BIT_FLAG_USES_STRONG_ENCRYPTION = 64,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_GENERAL_PURPOSE_BIT_FLAG_UTF8	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_GENERAL_PURPOSE_BIT_FLAG_UTF8 = 1 << 11$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_INTERNAL_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_INTERNAL_ERROR,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_INVALID_FILENAME	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_INVALID_FILENAME,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_INVALID_HEADER_OR_CORRUPTED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_INVALID_HEADER_OR_CORRUPTED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_INVALID_PARAMETER	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_INVALID_PARAMETER,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_LDH_BIT_FLAG_HAS_LOCATOR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LDH_BIT_FLAG_HAS_LOCATOR = 1 << 3,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LDH_BIT_FLAG_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LDH_BIT_FLAG_OFS = 6,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LDH_COMPRESSED_SIZE_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LDH_COMPRESSED_SIZE_OFS = 18,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LDH_CRC32_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LDH_CRC32_OFS = 14,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LDH_DECOMPRESSED_SIZE_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LDH_DECOMPRESSED_SIZE_OFS = 22,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LDH_EXTRA_LEN_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LDH_EXTRA_LEN_OFS = 28,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LDH_FILENAME_LEN_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LDH_FILENAME_LEN_OFS = 26,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LDH_FILE_DATE_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LDH_FILE_DATE_OFS = 12,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LDH_FILE_TIME_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LDH_FILE_TIME_OFS = 10,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LDH_METHOD_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LDH_METHOD_OFS = 8,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LDH_SIG_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            MZ_ZIP_LDH_SIG_OFS = 0,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LDH_VERSION_NEEDED_OFS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LDH_VERSION_NEEDED_OFS = 4,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LOCAL_DIR_HEADER_SIG	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LOCAL_DIR_HEADER_SIG = 0x04034b50,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_LOCAL_DIR_HEADER_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_LOCAL_DIR_HEADER_SIZE = 30,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_MAX_ARCHIVE_FILENAME_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_MAX_ARCHIVE_FILENAME_SIZE = 512,$/;"	e	enum:__anon09af45a71103
MZ_ZIP_MAX_ARCHIVE_FILE_COMMENT_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_MAX_ARCHIVE_FILE_COMMENT_SIZE = 512$/;"	e	enum:__anon09af45a71103
MZ_ZIP_MAX_IO_BUF_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            MZ_ZIP_MAX_IO_BUF_SIZE = 64 * 1024,$/;"	e	enum:__anon09af45a71103
MZ_ZIP_MODE_INVALID	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_MODE_INVALID = 0,$/;"	e	enum:__anon09af45a71303
MZ_ZIP_MODE_READING	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_MODE_READING = 1,$/;"	e	enum:__anon09af45a71303
MZ_ZIP_MODE_WRITING	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_MODE_WRITING = 2,$/;"	e	enum:__anon09af45a71303
MZ_ZIP_MODE_WRITING_HAS_BEEN_FINALIZED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_MODE_WRITING_HAS_BEEN_FINALIZED = 3$/;"	e	enum:__anon09af45a71303
MZ_ZIP_NOT_AN_ARCHIVE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_NOT_AN_ARCHIVE,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_NO_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_NO_ERROR = 0,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_TOO_MANY_FILES	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_TOO_MANY_FILES,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_TOTAL_ERRORS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_TOTAL_ERRORS$/;"	e	enum:__anon09af45a71603
MZ_ZIP_TOTAL_TYPES	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_TOTAL_TYPES$/;"	e	enum:__anon09af45a71503
MZ_ZIP_TYPE_CFILE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_TYPE_CFILE,$/;"	e	enum:__anon09af45a71503
MZ_ZIP_TYPE_FILE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_TYPE_FILE,$/;"	e	enum:__anon09af45a71503
MZ_ZIP_TYPE_HEAP	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_TYPE_HEAP,$/;"	e	enum:__anon09af45a71503
MZ_ZIP_TYPE_INVALID	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_TYPE_INVALID = 0,$/;"	e	enum:__anon09af45a71503
MZ_ZIP_TYPE_MEMORY	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_TYPE_MEMORY,$/;"	e	enum:__anon09af45a71503
MZ_ZIP_TYPE_USER	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_TYPE_USER,$/;"	e	enum:__anon09af45a71503
MZ_ZIP_UNDEFINED_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_UNDEFINED_ERROR,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_UNEXPECTED_DECOMPRESSED_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_UNEXPECTED_DECOMPRESSED_SIZE,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_UNSUPPORTED_CDIR_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_UNSUPPORTED_CDIR_SIZE,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_UNSUPPORTED_ENCRYPTION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_UNSUPPORTED_ENCRYPTION,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_UNSUPPORTED_FEATURE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_UNSUPPORTED_FEATURE,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_UNSUPPORTED_METHOD	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_UNSUPPORTED_METHOD,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_UNSUPPORTED_MULTIDISK	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_UNSUPPORTED_MULTIDISK,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_VALIDATION_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_VALIDATION_FAILED,$/;"	e	enum:__anon09af45a71603
MZ_ZIP_VERSION_MADE_BY_DOS_FILESYSTEM_ID	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_VERSION_MADE_BY_DOS_FILESYSTEM_ID = 0,$/;"	e	enum:__anon09af45a71e03
MZ_ZIP_WRITE_CALLBACK_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_ZIP_WRITE_CALLBACK_FAILED,$/;"	e	enum:__anon09af45a71603
MacOS X	extern/libgit2/README.md	/^MacOS X$/;"	s
MacroSheet	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        MacroSheet,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
MacroSheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        WorkSheet, ChartSheet, DialogSheet, MacroSheet$/;"	e	enum:OpenXLSX::XLSheetType
Maintenance release	extern/libgit2/docs/release.md	/^## Maintenance release$/;"	s
Manager	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Manager,$/;"	e	enum:OpenXLSX::XLProperty
Match Surrounding Code	extern/libgit2/docs/conventions.md	/^## Match Surrounding Code$/;"	s
Memory Ownership	extern/libgit2/docs/conventions.md	/^## Memory Ownership$/;"	s
Memory leak checks	extern/libgit2/tests/README.md	/^Memory leak checks$/;"	s
MemoryBarrier	extern/libgit2/src/win32/mingw-compat.h	/^#define MemoryBarrier /;"	d
Meter	extern/NamedType/main.cpp	/^using Meter = fluent::NamedType<double, struct MeterParameter, fluent::Addable, fluent::Comparab/;"	t	typeref:typename:fluent::NamedType<double,struct MeterParameter,fluent::Addable,fluent::Comparable>	file:
Miniz	extern/OpenXLSX/library/zippy/Zippy/miniz/readme.md	/^## Miniz$/;"	s
ModificationDate	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        ModificationDate,$/;"	e	enum:OpenXLSX::XLProperty
Module	extern/libgit2/tests/generate.py	/^class Module(object):$/;"	c
More	extern/OpenXLSX/tests/catch/README.md	/^## More$/;"	s
Motivation	extern/OpenXLSX/README.md	/^## Motivation$/;"	s
MountPointReparseBuffer	extern/libgit2/src/win32/reparse.h	/^		} MountPointReparseBuffer;$/;"	m	union:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a	typeref:struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470308
MoveChartsheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::MoveChartsheetName(const std::string& sheetName, unsigned int ind/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
MoveSheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^void Impl::XLWorkbook::MoveSheet(const std::string& sheetName, unsigned int newIndex) {$/;"	f	class:Impl::XLWorkbook	typeref:typename:void
MoveSheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^void XLWorkbook::MoveSheet(const std::string& sheetName, unsigned int index) {$/;"	f	class:XLWorkbook	typeref:typename:void
MoveSheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::MoveSheetName(const std::string& sheetName, unsigned int index) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
MoveWorksheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::MoveWorksheetName(const std::string& sheetName, unsigned int inde/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
Multiplicable	extern/NamedType/underlying_functionalities.hpp	/^struct Multiplicable : crtp<T, Multiplicable>$/;"	s	namespace:fluent
Multiplicable	ntskills.hpp	/^template <typename T> struct Multiplicable : crtp<T, Multiplicable> {$/;"	s	namespace:nt
MultiplicableType	extern/NamedType/main.cpp	/^    using MultiplicableType = fluent::NamedType<int, struct MultiplicableTag, fluent::Multiplica/;"	t	typeref:typename:fluent::NamedType<int,struct MultiplicableTag,fluent::Multiplicable>	file:
MyInt	extern/NamedType/main.cpp	/^    using MyInt = fluent::NamedType<int, struct MyIntTag, fluent::ImplicitlyConvertibleTo<int>::/;"	t	typeref:typename:fluent::NamedType<int,struct MyIntTag,fluent::ImplicitlyConvertibleTo<int>::templ>	file:
NAME	extern/libgit2/deps/zlib/inflate.h	/^    NAME,       \/* i: waiting for end of file name (gzip) *\/$/;"	e	enum:__anon92f8b1ba0103
NAMED_GROUP_LIST_SIZE	extern/libgit2/deps/pcre/pcre_compile.c	/^#define NAMED_GROUP_LIST_SIZE /;"	d	file:
NAMED_TYPE_HPP	extern/NamedType/named_type.hpp	/^#define NAMED_TYPE_HPP$/;"	d
NAME_STATE	extern/libgit2/deps/zlib/deflate.h	/^#define NAME_STATE /;"	d
NEEDBITS	extern/libgit2/deps/zlib/infback.c	/^#define NEEDBITS(/;"	d	file:
NEEDBITS	extern/libgit2/deps/zlib/inflate.c	/^#define NEEDBITS(/;"	d	file:
NEGATE_CLASS	extern/libgit2/src/wildmatch.c	/^#define NEGATE_CLASS	/;"	d	file:
NEGATE_CLASS2	extern/libgit2/src/wildmatch.c	/^#define NEGATE_CLASS2	/;"	d	file:
NETIO_BUFSIZE	extern/libgit2/src/common.h	/^#define NETIO_BUFSIZE /;"	d
NETWORK_XFER_THRESHOLD	extern/libgit2/src/transports/smart_protocol.c	/^#define NETWORK_XFER_THRESHOLD /;"	d	file:
NEWLINE	extern/libgit2/deps/pcre/CMakeLists.txt	/^        SET(NEWLINE "-1")$/;"	v
NEWLINE	extern/libgit2/deps/pcre/CMakeLists.txt	/^        SET(NEWLINE "-2")$/;"	v
NEWLINE	extern/libgit2/deps/pcre/CMakeLists.txt	/^        SET(NEWLINE "10")$/;"	v
NEWLINE	extern/libgit2/deps/pcre/CMakeLists.txt	/^        SET(NEWLINE "13")$/;"	v
NEWLINE	extern/libgit2/deps/pcre/CMakeLists.txt	/^        SET(NEWLINE "3338")$/;"	v
NEWLINE	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(NEWLINE "")$/;"	v
NEWLINE	extern/libgit2/deps/pcre/config.h.in	/^#define NEWLINE	/;"	d	file:
NEWLINE	extern/libgit2/tests/filter/custom.c	/^# define NEWLINE /;"	d	file:
NEW_BRANCH_NAME	extern/libgit2/tests/refs/branches/create.c	/^#define NEW_BRANCH_NAME /;"	d	file:
NEW_BRANCH_NAME	extern/libgit2/tests/refs/branches/move.c	/^#define NEW_BRANCH_NAME /;"	d	file:
NEW_BRANCH_NAME	extern/libgit2/tests/refs/reflog/messages.c	/^#define NEW_BRANCH_NAME /;"	d	file:
NEW_MESSAGE	extern/libgit2/deps/http-parser/http_parser.c	/^# define NEW_MESSAGE(/;"	d	file:
NEXT	extern/libgit2/src/trailer.c	/^#define NEXT(/;"	d	file:
NEXT_PTR	extern/libgit2/src/xdiff/xhistogram.c	/^#define NEXT_PTR(/;"	d	file:
NIL	extern/libgit2/deps/zlib/deflate.c	/^#define NIL /;"	d	file:
NLBLOCK	extern/libgit2/deps/pcre/pcre_compile.c	/^#define NLBLOCK /;"	d	file:
NLBLOCK	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define NLBLOCK /;"	d	file:
NLBLOCK	extern/libgit2/deps/pcre/pcre_exec.c	/^#define NLBLOCK /;"	d	file:
NLTYPE_ANY	extern/libgit2/deps/pcre/pcre_internal.h	/^#define NLTYPE_ANY /;"	d
NLTYPE_ANYCRLF	extern/libgit2/deps/pcre/pcre_internal.h	/^#define NLTYPE_ANYCRLF /;"	d
NLTYPE_FIXED	extern/libgit2/deps/pcre/pcre_internal.h	/^#define NLTYPE_FIXED /;"	d
NMAX	extern/libgit2/deps/zlib/adler32.c	/^#define NMAX /;"	d	file:
NOFASTFORWARD_BRANCH	extern/libgit2/tests/merge/analysis.c	/^#define NOFASTFORWARD_BRANCH /;"	d	file:
NOFASTFORWARD_ID	extern/libgit2/tests/merge/analysis.c	/^#define NOFASTFORWARD_ID /;"	d	file:
NONE	extern/libgit2/src/transports/http.c	/^	NONE,$/;"	e	enum:last_cb	file:
NONEXISTING_HASH	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^#define NONEXISTING_HASH /;"	d	file:
NON_EXISTING_FILEPATH	extern/libgit2/tests/core/path.c	/^#define NON_EXISTING_FILEPATH /;"	d	file:
NON_EXISTING_HEAD	extern/libgit2/tests/repo/repo_helpers.h	/^#define NON_EXISTING_HEAD /;"	d
NON_STANDARD_LIB_PREFIX	extern/libgit2/deps/pcre/CMakeLists.txt	/^  OPTION(NON_STANDARD_LIB_PREFIX$/;"	D
NON_STANDARD_LIB_SUFFIX	extern/libgit2/deps/pcre/CMakeLists.txt	/^  OPTION(NON_STANDARD_LIB_SUFFIX$/;"	D
NON_UNIQUE	extern/libgit2/src/xdiff/xpatience.c	/^#define NON_UNIQUE /;"	d	file:
NOTACHAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define NOTACHAR /;"	d
NOTES_DEFAULT_REF	extern/libgit2/src/rebase.c	/^#define NOTES_DEFAULT_REF /;"	d	file:
NOTIFY_PROGRESS	extern/libgit2/src/stash.c	/^#define NOTIFY_PROGRESS(/;"	d	file:
NOT_FIRSTCHAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define NOT_FIRSTCHAR(/;"	d
NO_GZCOMPRESS	extern/libgit2/deps/zlib/gzguts.h	/^#  define NO_GZCOMPRESS$/;"	d
NO_MEMCPY	extern/libgit2/deps/zlib/zutil.h	/^#  define NO_MEMCPY$/;"	d
NO_RECURSE	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(NO_RECURSE 1)$/;"	v
NO_STRNLEN	extern/libgit2/src/strnlen.h	/^#   define NO_STRNLEN$/;"	d
NO_vsnprintf	extern/libgit2/deps/zlib/gzguts.h	/^#    define NO_vsnprintf$/;"	d
NREFS	extern/libgit2/tests/threads/refdb.c	/^#define NREFS /;"	d	file:
NTLM_CLIENT_DEFAULTS	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_DEFAULTS               = 0,$/;"	e	enum:__anon53f50bfa0103
NTLM_CLIENT_DISABLE_NTLM2	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_DISABLE_NTLM2          = (1 << 3),$/;"	e	enum:__anon53f50bfa0103
NTLM_CLIENT_DISABLE_REQUEST_TARGET	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_DISABLE_REQUEST_TARGET = (1 << 4),$/;"	e	enum:__anon53f50bfa0103
NTLM_CLIENT_DISABLE_UNICODE	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_DISABLE_UNICODE        = (1 << 0),$/;"	e	enum:__anon53f50bfa0103
NTLM_CLIENT_ENABLE_LM	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_ENABLE_LM              = (1 << 1),$/;"	e	enum:__anon53f50bfa0103
NTLM_CLIENT_ENABLE_NTLM	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_ENABLE_NTLM            = (1 << 2),$/;"	e	enum:__anon53f50bfa0103
NTLM_CLIENT_VERSION	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^#define NTLM_CLIENT_VERSION /;"	d
NTLM_CLIENT_VERSION_MAJOR	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^#define NTLM_CLIENT_VERSION_MAJOR /;"	d
NTLM_CLIENT_VERSION_MINOR	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^#define NTLM_CLIENT_VERSION_MINOR /;"	d
NTLM_CLIENT_VERSION_TEENY	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^#define NTLM_CLIENT_VERSION_TEENY /;"	d
NTLM_ENABLE_HOSTVERSION	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_ENABLE_HOSTVERSION = (1 << 31),$/;"	e	enum:__anon8624cbbb0503
NTLM_EXTERN	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^# define NTLM_EXTERN(/;"	d
NTLM_LM_PLAINTEXT	extern/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_LM_PLAINTEXT /;"	d
NTLM_LM_RESPONSE_LEN	extern/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_LM_RESPONSE_LEN /;"	d
NTLM_NEGOTIATE_ALWAYS_SIGN	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_ALWAYS_SIGN = 0x00008000,$/;"	e	enum:__anon8624cbbb0703
NTLM_NEGOTIATE_DOMAIN_SUPPLIED	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_DOMAIN_SUPPLIED = 0x00001000,$/;"	e	enum:__anon8624cbbb0703
NTLM_NEGOTIATE_LOCAL_CALL	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_LOCAL_CALL = 0x00004000,$/;"	e	enum:__anon8624cbbb0703
NTLM_NEGOTIATE_NTLM	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_NTLM = 0x00000200,$/;"	e	enum:__anon8624cbbb0703
NTLM_NEGOTIATE_NTLM2_SIGN_AND_SEAL	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_NTLM2_SIGN_AND_SEAL = 0x00080000,$/;"	e	enum:__anon8624cbbb0703
NTLM_NEGOTIATE_OEM	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_OEM = 0x00000002,$/;"	e	enum:__anon8624cbbb0703
NTLM_NEGOTIATE_REQUEST_TARGET	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_REQUEST_TARGET = 0x00000004,$/;"	e	enum:__anon8624cbbb0703
NTLM_NEGOTIATE_TARGET_INFO	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_TARGET_INFO = 0x00800000,$/;"	e	enum:__anon8624cbbb0703
NTLM_NEGOTIATE_TYPE_DOMAIN	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_TYPE_DOMAIN = 0x00010000,$/;"	e	enum:__anon8624cbbb0703
NTLM_NEGOTIATE_UNICODE	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_UNICODE = 0x00000001,$/;"	e	enum:__anon8624cbbb0703
NTLM_NEGOTIATE_VERSION	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_VERSION = 0x01000000,$/;"	e	enum:__anon8624cbbb0703
NTLM_NEGOTIATE_WORKSTATION_SUPPLIED	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_WORKSTATION_SUPPLIED = 0x00002000,$/;"	e	enum:__anon8624cbbb0703
NTLM_NTLM2_HASH_LEN	extern/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_NTLM2_HASH_LEN /;"	d
NTLM_NTLM_HASH_LEN	extern/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_NTLM_HASH_LEN /;"	d
NTLM_NTLM_RESPONSE_LEN	extern/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_NTLM_RESPONSE_LEN /;"	d
NTLM_SIGNATURE	extern/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_SIGNATURE /;"	d
NTLM_STATE_CHALLENGE	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_STATE_CHALLENGE = 1,$/;"	e	enum:__anon8624cbbb0103
NTLM_STATE_COMPLETE	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_STATE_COMPLETE = 4,$/;"	e	enum:__anon8624cbbb0103
NTLM_STATE_ERROR	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_STATE_ERROR = 3,$/;"	e	enum:__anon8624cbbb0103
NTLM_STATE_NEGOTIATE	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_STATE_NEGOTIATE = 0,$/;"	e	enum:__anon8624cbbb0103
NTLM_STATE_RESPONSE	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_STATE_RESPONSE = 2,$/;"	e	enum:__anon8624cbbb0103
NTLM_TARGET_INFO_DOMAIN	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_TARGET_INFO_DOMAIN = 2,$/;"	e	enum:__anon8624cbbb0603
NTLM_TARGET_INFO_DOMAIN_DNS	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_TARGET_INFO_DOMAIN_DNS = 4,$/;"	e	enum:__anon8624cbbb0603
NTLM_TARGET_INFO_END	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_TARGET_INFO_END = 0,$/;"	e	enum:__anon8624cbbb0603
NTLM_TARGET_INFO_SERVER	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_TARGET_INFO_SERVER = 1,$/;"	e	enum:__anon8624cbbb0603
NTLM_TARGET_INFO_SERVER_DNS	extern/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_TARGET_INFO_SERVER_DNS = 3,$/;"	e	enum:__anon8624cbbb0603
NTLM_UNICODE_MAX_LEN	extern/libgit2/deps/ntlmclient/unicode.h	/^#define NTLM_UNICODE_MAX_LEN	/;"	d
NUM_VARS	extern/libgit2/tests/core/env.c	/^#define NUM_VARS /;"	d	file:
Name	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSheet_Impl.cpp	/^string const Impl::XLSheet::Name() const {$/;"	f	class:Impl::XLSheet	typeref:typename:string const
Name	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLSheet.cpp	/^std::string const XLSheet::Name() const {$/;"	f	class:XLSheet	typeref:typename:std::string const
Name	git.hpp	/^using Name = nt::NamedType<std::string, struct NameTag>;$/;"	t	namespace:git	typeref:typename:nt::NamedType<std::string,struct NameTag>
NameAndTags	extern/NamedType/catch.hpp	/^struct NameAndTags {$/;"	s	namespace:Catch
NameAndTags	extern/OpenXLSX/tests/catch/catch.hpp	/^struct NameAndTags {$/;"	s	namespace:Catch
NameRef	extern/NamedType/main.cpp	/^using NameRef = fluent::NamedType<std::string&, struct NameRefParameter>;$/;"	t	typeref:typename:fluent::NamedType<std::string &,struct NameRefParameter>	file:
Named arguments	extern/NamedType/README.md	/^## Named arguments$/;"	s
NamedType	extern/NamedType/named_type_impl.hpp	/^    explicit constexpr NamedType(T const& value) : value_(value) {}$/;"	f	class:fluent::NamedType
NamedType	extern/NamedType/named_type_impl.hpp	/^    explicit constexpr NamedType(T&& value) : value_(std::move(value)) {}$/;"	f	class:fluent::NamedType
NamedType	extern/NamedType/named_type_impl.hpp	/^class FLUENT_EBCO NamedType : public Skills<NamedType<T, Parameter, Skills...>>...$/;"	c	namespace:fluent
NamedType	nt.hpp	/^  explicit constexpr NamedType(T &&value) : value_(std::move(value)) {}$/;"	f	class:nt::NamedType
NamedType	nt.hpp	/^  explicit constexpr NamedType(T const &value) : value_(value) {}$/;"	f	class:nt::NamedType
NamedType	nt.hpp	/^class FLUENT_EBCO NamedType$/;"	c	namespace:nt
Naming Things	extern/libgit2/docs/conventions.md	/^## Naming Things$/;"	s
Negatable	extern/NamedType/underlying_functionalities.hpp	/^struct Negatable : crtp<T, Negatable>$/;"	s	namespace:fluent
Negatable	ntskills.hpp	/^template <typename T> struct Negatable : crtp<T, Negatable> {$/;"	s	namespace:nt
NegatableType	extern/NamedType/main.cpp	/^  using NegatableType = fluent::NamedType<int, struct NegatableTag, fluent::Negatable>;$/;"	t	typeref:typename:fluent::NamedType<int,struct NegatableTag,fluent::Negatable>	file:
NewSheetXmlData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^std::string Impl::XLWorksheet::NewSheetXmlData() {$/;"	f	class:Impl::XLWorksheet	typeref:typename:std::string
NewType	newtype.hpp	/^#define NewType(/;"	d
Next	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^Impl::XLToken Impl::XLTokenizer::Next() {$/;"	f	class:Impl::XLTokenizer	typeref:typename:Impl::XLToken
No	extern/NamedType/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	extern/OpenXLSX/tests/catch/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
NonCopyable	extern/NamedType/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	extern/OpenXLSX/tests/catch/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
Normal	extern/OpenXLSX/tests/catch/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
NumColumns	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellRange_Impl.cpp	/^unsigned int Impl::XLCellRange::NumColumns() const {$/;"	f	class:Impl::XLCellRange	typeref:typename:unsigned int
NumColumns	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^unsigned int XLCellRange::NumColumns() const {$/;"	f	class:XLCellRange	typeref:typename:unsigned int
NumRows	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellRange_Impl.cpp	/^unsigned long Impl::XLCellRange::NumRows() const {$/;"	f	class:Impl::XLCellRange	typeref:typename:unsigned long
NumRows	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^unsigned long XLCellRange::NumRows() const {$/;"	f	class:XLCellRange	typeref:typename:unsigned long
Number	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^        Empty, Boolean, Number, Error, String$/;"	e	enum:OpenXLSX::Impl::XLCellType
O	git.hpp	/^  struct O {$/;"	s	struct:git::TreeBark
O	git_.hpp	/^struct O {};$/;"	s	namespace:abo
O	oset.cpp	/^  using O = oset<void (*)(T &&)>;$/;"	t	struct:union_bark	file:
OCTO1_BRANCH	extern/libgit2/tests/merge/workdir/setup.c	/^#define OCTO1_BRANCH	/;"	d	file:
OCTO1_OID	extern/libgit2/tests/merge/workdir/setup.c	/^#define OCTO1_OID	/;"	d	file:
OCTO2_BRANCH	extern/libgit2/tests/merge/workdir/setup.c	/^#define OCTO2_BRANCH	/;"	d	file:
OCTO2_OID	extern/libgit2/tests/merge/workdir/setup.c	/^#define OCTO2_OID	/;"	d	file:
OCTO3_BRANCH	extern/libgit2/tests/merge/workdir/setup.c	/^#define OCTO3_BRANCH	/;"	d	file:
OCTO3_OID	extern/libgit2/tests/merge/workdir/setup.c	/^#define OCTO3_OID	/;"	d	file:
OCTO4_BRANCH	extern/libgit2/tests/merge/workdir/setup.c	/^#define OCTO4_BRANCH	/;"	d	file:
OCTO4_OID	extern/libgit2/tests/merge/workdir/setup.c	/^#define OCTO4_OID	/;"	d	file:
OCTO5_BRANCH	extern/libgit2/tests/merge/workdir/setup.c	/^#define OCTO5_BRANCH	/;"	d	file:
OCTO5_OID	extern/libgit2/tests/merge/workdir/setup.c	/^#define OCTO5_OID	/;"	d	file:
OF	extern/libgit2/deps/zlib/zconf.h	/^#    define OF(/;"	d
OFLOW_MAX	extern/libgit2/deps/pcre/pcre_compile.c	/^#define OFLOW_MAX /;"	d	file:
OID1_HEX	extern/libgit2/tests/object/tree/parse.c	/^#define OID1_HEX /;"	d	file:
OID1_STR	extern/libgit2/tests/object/tree/parse.c	/^#define OID1_STR /;"	d	file:
OID2_HEX	extern/libgit2/tests/object/tree/parse.c	/^#define OID2_HEX /;"	d	file:
OID2_STR	extern/libgit2/tests/object/tree/parse.c	/^#define OID2_STR /;"	d	file:
OID_ZERO	extern/libgit2/tests/online/push_util.c	/^const git_oid OID_ZERO = {{ 0 }};$/;"	v	typeref:typename:const git_oid
ONE_ANCESTOR_OID	extern/libgit2/tests/index/reuc.c	/^#define ONE_ANCESTOR_OID /;"	d	file:
ONE_LEVEL_AND_REFSPEC	extern/libgit2/tests/refs/normalize.c	/^#define ONE_LEVEL_AND_REFSPEC /;"	d	file:
ONE_OUR_OID	extern/libgit2/tests/index/reuc.c	/^#define ONE_OUR_OID /;"	d	file:
ONE_THEIR_OID	extern/libgit2/tests/index/reuc.c	/^#define ONE_THEIR_OID /;"	d	file:
ONTO_FILE	extern/libgit2/src/rebase.c	/^#define ONTO_FILE /;"	d	file:
ONTO_NAME_FILE	extern/libgit2/src/rebase.c	/^#define ONTO_NAME_FILE /;"	d	file:
OP1	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OP1(/;"	d	file:
OP2	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OP2(/;"	d	file:
OPENSSL_CA_LOCATIONS	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^				SET(OPENSSL_CA_LOCATIONS$/;"	v
OPENSSL_CMD	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^				SET(OPENSSL_CMD "\/usr\/local\/opt\/openssl\/bin\/openssl")$/;"	v
OPENSSL_CMD	extern/libgit2/cmake/Modules/SelectHTTPSBackend.cmake	/^				SET(OPENSSL_CMD "openssl")$/;"	v
OPENSSL_LEGACY_API	extern/libgit2/src/streams/openssl.c	/^# define OPENSSL_LEGACY_API$/;"	d	file:
OPENSSL_init_ssl	extern/libgit2/src/streams/openssl.c	/^static int OPENSSL_init_ssl(int opts, void *settings)$/;"	f	typeref:typename:int	file:
OPENXLSX_ALL_XLDOCUMENT_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDocument.h	/^#define OPENXLSX_ALL_XLDOCUMENT_H$/;"	d
OPENXLSX_CXX_INTERFACE_HEADERS	extern/OpenXLSX/library/openxlsx/CMakeLists.txt	/^set(OPENXLSX_CXX_INTERFACE_HEADERS$/;"	v
OPENXLSX_CXX_INTERFACE_SOURCES	extern/OpenXLSX/library/openxlsx/CMakeLists.txt	/^set(OPENXLSX_CXX_INTERFACE_SOURCES$/;"	v
OPENXLSX_DEPENDENCIES	extern/OpenXLSX/CMakeLists.txt	/^set(OPENXLSX_DEPENDENCIES ${CMAKE_CURRENT_BINARY_DIR}\/dependencies)$/;"	v
OPENXLSX_IMPL_HEADERS	extern/OpenXLSX/library/openxlsx/CMakeLists.txt	/^set(OPENXLSX_IMPL_HEADERS$/;"	v
OPENXLSX_IMPL_SOURCES	extern/OpenXLSX/library/openxlsx/CMakeLists.txt	/^set(OPENXLSX_IMPL_SOURCES$/;"	v
OPENXLSX_IMPL_XLABSTRACTSHEET_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSheet_Impl.h	/^#define OPENXLSX_IMPL_XLABSTRACTSHEET_H$/;"	d
OPENXLSX_IMPL_XLABSTRACTXMLFILE_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAbstractXMLFile_Impl.h	/^#define OPENXLSX_IMPL_XLABSTRACTXMLFILE_H$/;"	d
OPENXLSX_IMPL_XLAPPPROPERTIES_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAppProperties_Impl.h	/^#define OPENXLSX_IMPL_XLAPPPROPERTIES_H$/;"	d
OPENXLSX_IMPL_XLCELLRANGE_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellRange_Impl.h	/^#define OPENXLSX_IMPL_XLCELLRANGE_H$/;"	d
OPENXLSX_IMPL_XLCELLREFERENCE_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^#define OPENXLSX_IMPL_XLCELLREFERENCE_H$/;"	d
OPENXLSX_IMPL_XLCELLTYPE_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^#define OPENXLSX_IMPL_XLCELLTYPE_H$/;"	d
OPENXLSX_IMPL_XLCELLVALUE_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellValue_Impl.h	/^#define OPENXLSX_IMPL_XLCELLVALUE_H$/;"	d
OPENXLSX_IMPL_XLCELL_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCell_Impl.h	/^#define OPENXLSX_IMPL_XLCELL_H$/;"	d
OPENXLSX_IMPL_XLCHARTSHEET_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLChartsheet_Impl.h	/^#define OPENXLSX_IMPL_XLCHARTSHEET_H$/;"	d
OPENXLSX_IMPL_XLCOLUMN_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLColumn_Impl.h	/^#define OPENXLSX_IMPL_XLCOLUMN_H$/;"	d
OPENXLSX_IMPL_XLCONTENTTYPES_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLContentTypes_Impl.h	/^#define OPENXLSX_IMPL_XLCONTENTTYPES_H$/;"	d
OPENXLSX_IMPL_XLDOCCOREPROPERTIES_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCoreProperties_Impl.h	/^#define OPENXLSX_IMPL_XLDOCCOREPROPERTIES_H$/;"	d
OPENXLSX_IMPL_XLDOCUMENT_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLDocument_Impl.h	/^#define OPENXLSX_IMPL_XLDOCUMENT_H$/;"	d
OPENXLSX_IMPL_XLRELATIONSHIPS_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRelationships_Impl.h	/^#define OPENXLSX_IMPL_XLRELATIONSHIPS_H$/;"	d
OPENXLSX_IMPL_XLROW_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRow_Impl.h	/^#define OPENXLSX_IMPL_XLROW_H$/;"	d
OPENXLSX_IMPL_XLSHAREDSTRINGS_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSharedStrings_Impl.h	/^#define OPENXLSX_IMPL_XLSHAREDSTRINGS_H$/;"	d
OPENXLSX_IMPL_XLTEMPLATE_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTemplate_Impl.h	/^#define OPENXLSX_IMPL_XLTEMPLATE_H$/;"	d
OPENXLSX_IMPL_XLTOKENIZER_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTokenizer_Impl.h	/^#define OPENXLSX_IMPL_XLTOKENIZER_H$/;"	d
OPENXLSX_IMPL_XLWORKBOOK_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^#define OPENXLSX_IMPL_XLWORKBOOK_H$/;"	d
OPENXLSX_IMPL_XLWORKSHEET_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^#define OPENXLSX_IMPL_XLWORKSHEET_H$/;"	d
OPENXLSX_IMPL_XLXML_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLXml_Impl.h	/^#define OPENXLSX_IMPL_XLXML_H$/;"	d
OPENXLSX_INSTALLDIR	extern/OpenXLSX/CMakeLists.txt	/^set(OPENXLSX_INSTALLDIR ${CMAKE_CURRENT_BINARY_DIR}\/install)$/;"	v
OPENXLSX_OPENXLSX_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/OpenXLSX.h	/^#define OPENXLSX_OPENXLSX_H$/;"	d
OPENXLSX_TESTMAIN_H	extern/OpenXLSX/tests/c++/Test00_Main.cpp	/^#define OPENXLSX_TESTMAIN_H$/;"	d	file:
OPENXLSX_XLCELLRANGE_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellRange.h	/^#define OPENXLSX_XLCELLRANGE_H$/;"	d
OPENXLSX_XLCELLREFERENCE_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellReference.h	/^#define OPENXLSX_XLCELLREFERENCE_H$/;"	d
OPENXLSX_XLCELLVALUE_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellValue.h	/^#define OPENXLSX_XLCELLVALUE_H$/;"	d
OPENXLSX_XLCELL_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCell.h	/^#define OPENXLSX_XLCELL_H$/;"	d
OPENXLSX_XLCHARTSHEET_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLChartsheet.h	/^#define OPENXLSX_XLCHARTSHEET_H$/;"	d
OPENXLSX_XLCOLUMN_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLColumn.h	/^#define OPENXLSX_XLCOLUMN_H$/;"	d
OPENXLSX_XLCONTENTTYPEENUM_IMPL_H	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^#define OPENXLSX_XLCONTENTTYPEENUM_IMPL_H$/;"	d
OPENXLSX_XLDEFINITIONS_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^#define OPENXLSX_XLDEFINITIONS_H$/;"	d
OPENXLSX_XLEXCEPTION_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLException.h	/^#define OPENXLSX_XLEXCEPTION_H$/;"	d
OPENXLSX_XLROW_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLRow.h	/^#define OPENXLSX_XLROW_H$/;"	d
OPENXLSX_XLSHEET_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLSheet.h	/^#define OPENXLSX_XLSHEET_H$/;"	d
OPENXLSX_XLWORKBOOK_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLWorkbook.h	/^#define OPENXLSX_XLWORKBOOK_H$/;"	d
OPENXLSX_XLWORKSHEET_H	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLWorksheet.h	/^#define OPENXLSX_XLWORKSHEET_H$/;"	d
OP_ACCEPT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ACCEPT,         \/* 158 *\/$/;"	e	enum:__anonb814e4160203
OP_ALLANY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ALLANY,         \/* 13 Match any character *\/$/;"	e	enum:__anonb814e4160203
OP_ALT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ALT,            \/* 119 Start of alternation *\/$/;"	e	enum:__anonb814e4160203
OP_ANY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ANY,            \/* 12 Match any character except newline (\\N) *\/$/;"	e	enum:__anonb814e4160203
OP_ANYBYTE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ANYBYTE,        \/* 14 Match any byte (\\C); different to OP_ANY for UTF-8 *\/$/;"	e	enum:__anonb814e4160203
OP_ANYNL	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ANYNL,          \/* 17 \\R (any newline sequence) *\/$/;"	e	enum:__anonb814e4160203
OP_ANYNL_EXTRA	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define OP_ANYNL_EXTRA /;"	d	file:
OP_ASSERT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ASSERT,         \/* 125 Positive lookahead *\/$/;"	e	enum:__anonb814e4160203
OP_ASSERTBACK	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ASSERTBACK,     \/* 127 Positive lookbehind *\/$/;"	e	enum:__anonb814e4160203
OP_ASSERTBACK_NOT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ASSERTBACK_NOT, \/* 128 Negative lookbehind *\/$/;"	e	enum:__anonb814e4160203
OP_ASSERT_ACCEPT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ASSERT_ACCEPT,  \/* 159 Used inside assertions *\/$/;"	e	enum:__anonb814e4160203
OP_ASSERT_NOT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ASSERT_NOT,     \/* 126 Negative lookahead *\/$/;"	e	enum:__anonb814e4160203
OP_BRA	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_BRA,            \/* 131 Start of non-capturing bracket *\/$/;"	e	enum:__anonb814e4160203
OP_BRAMINZERO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_BRAMINZERO,     \/* 147 order. *\/$/;"	e	enum:__anonb814e4160203
OP_BRAPOS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_BRAPOS,         \/* 132 Ditto, with unlimited, possessive repeat *\/$/;"	e	enum:__anonb814e4160203
OP_BRAPOSZERO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_BRAPOSZERO,     \/* 148 *\/$/;"	e	enum:__anonb814e4160203
OP_BRAZERO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_BRAZERO,        \/* 146 These two must remain together and in this *\/$/;"	e	enum:__anonb814e4160203
OP_CALLOUT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CALLOUT,        \/* 118 Call out to external function if provided *\/$/;"	e	enum:__anonb814e4160203
OP_CBRA	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CBRA,           \/* 133 Start of capturing bracket *\/$/;"	e	enum:__anonb814e4160203
OP_CBRAPOS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CBRAPOS,        \/* 134 Ditto, with unlimited, possessive repeat *\/$/;"	e	enum:__anonb814e4160203
OP_CHAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CHAR,           \/* 29 Match one character, casefully *\/$/;"	e	enum:__anonb814e4160203
OP_CHARI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CHARI,          \/* 30 Match one character, caselessly *\/$/;"	e	enum:__anonb814e4160203
OP_CIRC	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CIRC,           \/* 27 Start of line - not multiline *\/$/;"	e	enum:__anonb814e4160203
OP_CIRCM	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CIRCM,          \/* 28 Start of line - multiline *\/$/;"	e	enum:__anonb814e4160203
OP_CLASS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CLASS,          \/* 110 Match a character class, chars < 256 only *\/$/;"	e	enum:__anonb814e4160203
OP_CLOSE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CLOSE,          \/* 160 Used before OP_ACCEPT to close open captures *\/$/;"	e	enum:__anonb814e4160203
OP_COMMIT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_COMMIT,         \/* 156 *\/$/;"	e	enum:__anonb814e4160203
OP_COND	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_COND,           \/* 135 Conditional group *\/$/;"	e	enum:__anonb814e4160203
OP_CREF	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CREF,           \/* 141 Used to hold a capture number as condition *\/$/;"	e	enum:__anonb814e4160203
OP_CRMINPLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRMINPLUS,      \/* 101 be in exactly the same order as those above. *\/$/;"	e	enum:__anonb814e4160203
OP_CRMINQUERY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRMINQUERY,     \/* 103 *\/$/;"	e	enum:__anonb814e4160203
OP_CRMINRANGE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRMINRANGE,     \/* 105 *\/$/;"	e	enum:__anonb814e4160203
OP_CRMINSTAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRMINSTAR,      \/* 99 all these opcodes must come in pairs, with *\/$/;"	e	enum:__anonb814e4160203
OP_CRPLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRPLUS,         \/* 100 the minimizing one second. These codes must *\/$/;"	e	enum:__anonb814e4160203
OP_CRPOSPLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRPOSPLUS,      \/* 107 *\/$/;"	e	enum:__anonb814e4160203
OP_CRPOSQUERY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRPOSQUERY,     \/* 108 *\/$/;"	e	enum:__anonb814e4160203
OP_CRPOSRANGE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRPOSRANGE,     \/* 109 *\/$/;"	e	enum:__anonb814e4160203
OP_CRPOSSTAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRPOSSTAR,      \/* 106 Possessified versions *\/$/;"	e	enum:__anonb814e4160203
OP_CRQUERY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRQUERY,        \/* 102 *\/$/;"	e	enum:__anonb814e4160203
OP_CRRANGE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRRANGE,        \/* 104 These are different to the three sets above. *\/$/;"	e	enum:__anonb814e4160203
OP_CRSTAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRSTAR,         \/* 98 The maximizing and minimizing versions of *\/$/;"	e	enum:__anonb814e4160203
OP_DEF	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_DEF,            \/* 145 The DEFINE condition *\/$/;"	e	enum:__anonb814e4160203
OP_DIGIT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_DIGIT,              \/*  7 \\d *\/$/;"	e	enum:__anonb814e4160203
OP_DNCREF	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_DNCREF,         \/* 142 Used to point to duplicate names as a condition *\/$/;"	e	enum:__anonb814e4160203
OP_DNREF	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_DNREF,          \/* 115 Match a duplicate name backref, casefully *\/$/;"	e	enum:__anonb814e4160203
OP_DNREFI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_DNREFI,         \/* 116 Match a duplicate name backref, caselessly *\/$/;"	e	enum:__anonb814e4160203
OP_DNRREF	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_DNRREF,         \/* 144 Used to point to duplicate names as a condition *\/$/;"	e	enum:__anonb814e4160203
OP_DOLL	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_DOLL,           \/* 25 End of line - not multiline *\/$/;"	e	enum:__anonb814e4160203
OP_DOLLM	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_DOLLM,          \/* 26 End of line - multiline *\/$/;"	e	enum:__anonb814e4160203
OP_END	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_END,            \/* 0 End of pattern *\/$/;"	e	enum:__anonb814e4160203
OP_EOD	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_EOD,            \/* 24 End of data (\\z) *\/$/;"	e	enum:__anonb814e4160203
OP_EODN	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_EODN,           \/* 23 End of data or \\n at end of data (\\Z) *\/$/;"	e	enum:__anonb814e4160203
OP_EXACT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_EXACT,          \/* 41 Exactly n matches *\/$/;"	e	enum:__anonb814e4160203
OP_EXACTI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_EXACTI,         \/* 54 *\/$/;"	e	enum:__anonb814e4160203
OP_EXTUNI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_EXTUNI,         \/* 22 \\X (extended Unicode sequence *\/$/;"	e	enum:__anonb814e4160203
OP_EXTUNI_EXTRA	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define OP_EXTUNI_EXTRA /;"	d	file:
OP_FAIL	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_FAIL,           \/* 157 *\/$/;"	e	enum:__anonb814e4160203
OP_FLAGS	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OP_FLAGS(/;"	d	file:
OP_HSPACE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_HSPACE,         \/* 19 \\h (horizontal whitespace) *\/$/;"	e	enum:__anonb814e4160203
OP_HSPACE_EXTRA	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define OP_HSPACE_EXTRA /;"	d	file:
OP_KET	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_KET,            \/* 120 End of group that doesn't have an unbounded repeat *\/$/;"	e	enum:__anonb814e4160203
OP_KETRMAX	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_KETRMAX,        \/* 121 These two must remain together and in this *\/$/;"	e	enum:__anonb814e4160203
OP_KETRMIN	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_KETRMIN,        \/* 122 order. They are for groups the repeat for ever. *\/$/;"	e	enum:__anonb814e4160203
OP_KETRPOS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_KETRPOS,        \/* 123 Possessive unlimited repeat. *\/$/;"	e	enum:__anonb814e4160203
OP_LENGTHS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define OP_LENGTHS /;"	d
OP_MARK	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_MARK,           \/* 149 always has an argument *\/$/;"	e	enum:__anonb814e4160203
OP_MINPLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINPLUS,        \/* 36 *\/$/;"	e	enum:__anonb814e4160203
OP_MINPLUSI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINPLUSI,       \/* 49 *\/$/;"	e	enum:__anonb814e4160203
OP_MINQUERY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINQUERY,       \/* 38 *\/$/;"	e	enum:__anonb814e4160203
OP_MINQUERYI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINQUERYI,      \/* 51 *\/$/;"	e	enum:__anonb814e4160203
OP_MINSTAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINSTAR,        \/* 34 these six opcodes must come in pairs, with *\/$/;"	e	enum:__anonb814e4160203
OP_MINSTARI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINSTARI,       \/* 47 *\/$/;"	e	enum:__anonb814e4160203
OP_MINUPTO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINUPTO,        \/* 40 *\/$/;"	e	enum:__anonb814e4160203
OP_MINUPTOI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINUPTOI,       \/* 53 *\/$/;"	e	enum:__anonb814e4160203
OP_NAME_LIST	extern/libgit2/deps/pcre/pcre_internal.h	/^#define OP_NAME_LIST /;"	d
OP_NCLASS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NCLASS,         \/* 111 Same, but the bitmap was created from a negative$/;"	e	enum:__anonb814e4160203
OP_NOT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT,            \/* 31 Match one character, not the given one, casefully *\/$/;"	e	enum:__anonb814e4160203
OP_NOTEXACT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTEXACT,       \/* 67 Exactly n matches *\/$/;"	e	enum:__anonb814e4160203
OP_NOTEXACTI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTEXACTI,      \/* 80 Exactly n matches *\/$/;"	e	enum:__anonb814e4160203
OP_NOTI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTI,           \/* 32 Match one character, not the given one, caselessly *\/$/;"	e	enum:__anonb814e4160203
OP_NOTMINPLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINPLUS,     \/* 62 exactly the same order as those above. *\/$/;"	e	enum:__anonb814e4160203
OP_NOTMINPLUSI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINPLUSI,    \/* 75 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTMINQUERY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINQUERY,    \/* 64 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTMINQUERYI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINQUERYI,   \/* 77 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTMINSTAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINSTAR,     \/* 60 these six opcodes must come in pairs, with *\/$/;"	e	enum:__anonb814e4160203
OP_NOTMINSTARI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINSTARI,    \/* 73 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTMINUPTO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINUPTO,     \/* 66 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTMINUPTOI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINUPTOI,    \/* 79 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTPLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPLUS,        \/* 61 the minimizing one second. They must be in *\/$/;"	e	enum:__anonb814e4160203
OP_NOTPLUSI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPLUSI,       \/* 74 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTPOSPLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSPLUS,     \/* 69 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTPOSPLUSI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSPLUSI,    \/* 82 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTPOSQUERY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSQUERY,    \/* 70 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTPOSQUERYI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSQUERYI,   \/* 83 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTPOSSTAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSSTAR,     \/* 68 Possessified versions, caseful *\/$/;"	e	enum:__anonb814e4160203
OP_NOTPOSSTARI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSSTARI,    \/* 81 Possessified versions, caseless *\/$/;"	e	enum:__anonb814e4160203
OP_NOTPOSUPTO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSUPTO,     \/* 71 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTPOSUPTOI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSUPTOI,    \/* 84 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTPROP	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPROP,        \/* 15 \\P (not Unicode property) *\/$/;"	e	enum:__anonb814e4160203
OP_NOTQUERY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTQUERY,       \/* 63 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTQUERYI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTQUERYI,      \/* 76 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTSTAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTSTAR,        \/* 59 The maximizing and minimizing versions of *\/$/;"	e	enum:__anonb814e4160203
OP_NOTSTARI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTSTARI,       \/* 72 *\/$/;"	e	enum:__anonb814e4160203
OP_NOTUPTO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTUPTO,        \/* 65 From 0 to n matches, caseful *\/$/;"	e	enum:__anonb814e4160203
OP_NOTUPTOI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTUPTOI,       \/* 78 From 0 to n matches, caseless *\/$/;"	e	enum:__anonb814e4160203
OP_NOT_DIGIT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT_DIGIT,          \/*  6 \\D *\/$/;"	e	enum:__anonb814e4160203
OP_NOT_HSPACE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT_HSPACE,     \/* 18 \\H (not horizontal whitespace) *\/$/;"	e	enum:__anonb814e4160203
OP_NOT_VSPACE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT_VSPACE,     \/* 20 \\V (not vertical whitespace) *\/$/;"	e	enum:__anonb814e4160203
OP_NOT_WHITESPACE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT_WHITESPACE,     \/*  8 \\S *\/$/;"	e	enum:__anonb814e4160203
OP_NOT_WORDCHAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT_WORDCHAR,       \/* 10 \\W *\/$/;"	e	enum:__anonb814e4160203
OP_NOT_WORD_BOUNDARY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT_WORD_BOUNDARY,  \/*  4 \\B *\/$/;"	e	enum:__anonb814e4160203
OP_ONCE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ONCE,           \/* 129 Atomic group, contains captures *\/$/;"	e	enum:__anonb814e4160203
OP_ONCE_NC	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_ONCE_NC,        \/* 130 Atomic group containing no captures *\/$/;"	e	enum:__anonb814e4160203
OP_PLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_PLUS,           \/* 35 the minimizing one second. *\/$/;"	e	enum:__anonb814e4160203
OP_PLUSI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_PLUSI,          \/* 48 *\/$/;"	e	enum:__anonb814e4160203
OP_POSPLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSPLUS,        \/* 43 Possessified plus, caseful *\/$/;"	e	enum:__anonb814e4160203
OP_POSPLUSI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSPLUSI,       \/* 56 Possessified plus, caseless *\/$/;"	e	enum:__anonb814e4160203
OP_POSQUERY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSQUERY,       \/* 44 Posesssified query, caseful *\/$/;"	e	enum:__anonb814e4160203
OP_POSQUERYI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSQUERYI,      \/* 57 Posesssified query, caseless *\/$/;"	e	enum:__anonb814e4160203
OP_POSSTAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSSTAR,        \/* 42 Possessified star, caseful *\/$/;"	e	enum:__anonb814e4160203
OP_POSSTARI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSSTARI,       \/* 55 Possessified star, caseless *\/$/;"	e	enum:__anonb814e4160203
OP_POSUPTO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSUPTO,        \/* 45 Possessified upto, caseful *\/$/;"	e	enum:__anonb814e4160203
OP_POSUPTOI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSUPTOI,       \/* 58 Possessified upto, caseless *\/$/;"	e	enum:__anonb814e4160203
OP_PROP	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_PROP,           \/* 16 \\p (Unicode property) *\/$/;"	e	enum:__anonb814e4160203
OP_PROP_EXTRA	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define OP_PROP_EXTRA /;"	d	file:
OP_PRUNE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_PRUNE,          \/* 150 *\/$/;"	e	enum:__anonb814e4160203
OP_PRUNE_ARG	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_PRUNE_ARG,      \/* 151 same, but with argument *\/$/;"	e	enum:__anonb814e4160203
OP_QUERY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_QUERY,          \/* 37 *\/$/;"	e	enum:__anonb814e4160203
OP_QUERYI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_QUERYI,         \/* 50 *\/$/;"	e	enum:__anonb814e4160203
OP_RECURSE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_RECURSE,        \/* 117 Match a numbered subpattern (possibly recursive) *\/$/;"	e	enum:__anonb814e4160203
OP_REF	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_REF,            \/* 113 Match a back reference, casefully *\/$/;"	e	enum:__anonb814e4160203
OP_REFI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_REFI,           \/* 114 Match a back reference, caselessly *\/$/;"	e	enum:__anonb814e4160203
OP_REVERSE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_REVERSE,        \/* 124 Move pointer back - used in lookbehind assertions *\/$/;"	e	enum:__anonb814e4160203
OP_RREF	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_RREF,           \/* 143 Used to hold a recursion number as condition *\/$/;"	e	enum:__anonb814e4160203
OP_SBRA	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_SBRA,           \/* 136 Start of non-capturing bracket, check empty  *\/$/;"	e	enum:__anonb814e4160203
OP_SBRAPOS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_SBRAPOS,        \/* 137 Ditto, with unlimited, possessive repeat *\/$/;"	e	enum:__anonb814e4160203
OP_SCBRA	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_SCBRA,          \/* 138 Start of capturing bracket, check empty *\/$/;"	e	enum:__anonb814e4160203
OP_SCBRAPOS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_SCBRAPOS,       \/* 139 Ditto, with unlimited, possessive repeat *\/$/;"	e	enum:__anonb814e4160203
OP_SCOND	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_SCOND,          \/* 140 Conditional group, check empty *\/$/;"	e	enum:__anonb814e4160203
OP_SET_SOM	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_SET_SOM,        \/* 3 Set start of match (\\K) *\/$/;"	e	enum:__anonb814e4160203
OP_SKIP	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_SKIP,           \/* 152 *\/$/;"	e	enum:__anonb814e4160203
OP_SKIPZERO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_SKIPZERO,       \/* 161 *\/$/;"	e	enum:__anonb814e4160203
OP_SKIP_ARG	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_SKIP_ARG,       \/* 153 same, but with argument *\/$/;"	e	enum:__anonb814e4160203
OP_SOD	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_SOD,            \/* 1 Start of data: \\A *\/$/;"	e	enum:__anonb814e4160203
OP_SOM	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_SOM,            \/* 2 Start of match (subject + offset): \\G *\/$/;"	e	enum:__anonb814e4160203
OP_STAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_STAR,           \/* 33 The maximizing and minimizing versions of *\/$/;"	e	enum:__anonb814e4160203
OP_STARI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_STARI,          \/* 46 *\/$/;"	e	enum:__anonb814e4160203
OP_TABLE_LENGTH	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TABLE_LENGTH$/;"	e	enum:__anonb814e4160203
OP_THEN	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_THEN,           \/* 154 *\/$/;"	e	enum:__anonb814e4160203
OP_THEN_ARG	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_THEN_ARG,       \/* 155 same, but with argument *\/$/;"	e	enum:__anonb814e4160203
OP_THEN_TRAP	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OP_THEN_TRAP /;"	d	file:
OP_TYPEEXACT	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEEXACT,      \/* 93 Exactly n matches *\/$/;"	e	enum:__anonb814e4160203
OP_TYPEMINPLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEMINPLUS,    \/* 88 be in exactly the same order as those above. *\/$/;"	e	enum:__anonb814e4160203
OP_TYPEMINQUERY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEMINQUERY,   \/* 90 *\/$/;"	e	enum:__anonb814e4160203
OP_TYPEMINSTAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEMINSTAR,    \/* 86 these six opcodes must come in pairs, with *\/$/;"	e	enum:__anonb814e4160203
OP_TYPEMINUPTO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEMINUPTO,    \/* 92 *\/$/;"	e	enum:__anonb814e4160203
OP_TYPEPLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEPLUS,       \/* 87 the minimizing one second. These codes must *\/$/;"	e	enum:__anonb814e4160203
OP_TYPEPOSPLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEPOSPLUS,    \/* 95 *\/$/;"	e	enum:__anonb814e4160203
OP_TYPEPOSQUERY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEPOSQUERY,   \/* 96 *\/$/;"	e	enum:__anonb814e4160203
OP_TYPEPOSSTAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEPOSSTAR,    \/* 94 Possessified versions *\/$/;"	e	enum:__anonb814e4160203
OP_TYPEPOSUPTO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEPOSUPTO,    \/* 97 *\/$/;"	e	enum:__anonb814e4160203
OP_TYPEQUERY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEQUERY,      \/* 89 *\/$/;"	e	enum:__anonb814e4160203
OP_TYPESTAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPESTAR,       \/* 85 The maximizing and minimizing versions of *\/$/;"	e	enum:__anonb814e4160203
OP_TYPEUPTO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEUPTO,       \/* 91 From 0 to n matches *\/$/;"	e	enum:__anonb814e4160203
OP_UPTO	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_UPTO,           \/* 39 From 0 to n matches of one character, caseful*\/$/;"	e	enum:__anonb814e4160203
OP_UPTOI	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_UPTOI,          \/* 52 From 0 to n matches of one character, caseless *\/$/;"	e	enum:__anonb814e4160203
OP_VSPACE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_VSPACE,         \/* 21 \\v (vertical whitespace) *\/$/;"	e	enum:__anonb814e4160203
OP_VSPACE_EXTRA	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define OP_VSPACE_EXTRA /;"	d	file:
OP_WHITESPACE	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_WHITESPACE,         \/*  9 \\s *\/$/;"	e	enum:__anonb814e4160203
OP_WORDCHAR	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_WORDCHAR,           \/* 11 \\w *\/$/;"	e	enum:__anonb814e4160203
OP_WORD_BOUNDARY	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_WORD_BOUNDARY,      \/*  5 \\b *\/$/;"	e	enum:__anonb814e4160203
OP_XCLASS	extern/libgit2/deps/pcre/pcre_internal.h	/^  OP_XCLASS,         \/* 112 Extended class for handling > 255 chars within the$/;"	e	enum:__anonb814e4160203
OP_lengths	extern/libgit2/deps/pcre/pcre_tables.c	/^const pcre_uint8 PRIV(OP_lengths)[] = { OP_LENGTHS };$/;"	v	typeref:typename:const pcre_uint8 PRIV ()[]
ORIG_DETACHED_HEAD	extern/libgit2/src/rebase.c	/^#define ORIG_DETACHED_HEAD /;"	d	file:
ORIG_HEAD	extern/libgit2/tests/merge/workdir/setup.c	/^#define ORIG_HEAD	/;"	d	file:
ORIG_HEAD_FILE	extern/libgit2/src/rebase.c	/^#define ORIG_HEAD_FILE /;"	d	file:
OS	extern/libgit2/deps/zlib/inflate.h	/^    OS,         \/* i: waiting for extra flags and operating system (gzip) *\/$/;"	e	enum:__anon92f8b1ba0103
OS2	extern/libgit2/deps/zlib/zconf.h	/^#  define OS2$/;"	d
OS_CODE	extern/libgit2/deps/zlib/zutil.h	/^#    define OS_CODE /;"	d
OS_CODE	extern/libgit2/deps/zlib/zutil.h	/^#  define OS_CODE /;"	d
OURS_DIRECTORY_FILE	extern/libgit2/tests/merge/trees/automerge.c	/^#define OURS_DIRECTORY_FILE	/;"	d	file:
OURS_DIRECTORY_FILE	extern/libgit2/tests/merge/workdir/simple.c	/^#define OURS_DIRECTORY_FILE	/;"	d	file:
OUTPUT_DIFF	extern/libgit2/examples/diff.c	/^	OUTPUT_DIFF = (1 << 0),$/;"	e	enum:__anon3a1a5d7e0103	file:
OUTPUT_NUMSTAT	extern/libgit2/examples/diff.c	/^	OUTPUT_NUMSTAT = (1 << 3),$/;"	e	enum:__anon3a1a5d7e0103	file:
OUTPUT_SHORTSTAT	extern/libgit2/examples/diff.c	/^	OUTPUT_SHORTSTAT = (1 << 2),$/;"	e	enum:__anon3a1a5d7e0103	file:
OUTPUT_STAT	extern/libgit2/examples/diff.c	/^	OUTPUT_STAT = (1 << 1),$/;"	e	enum:__anon3a1a5d7e0103	file:
OUTPUT_SUMMARY	extern/libgit2/examples/diff.c	/^	OUTPUT_SUMMARY = (1 << 4)$/;"	e	enum:__anon3a1a5d7e0103	file:
OVECTOR	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OVECTOR(/;"	d	file:
OVECTOR_PRIV	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OVECTOR_PRIV(/;"	d	file:
OVECTOR_START	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OVECTOR_START /;"	d	file:
OVERLOADED_H	overloaded.hpp	/^#define OVERLOADED_H /;"	d
OVFLBIT	extern/libgit2/deps/pcre/pcre_exec.c	/^#define OVFLBIT /;"	d	file:
OVFLMASK	extern/libgit2/deps/pcre/pcre_exec.c	/^#define OVFLMASK /;"	d	file:
OWNING_SUBTRANSPORT	extern/libgit2/src/transports/git.c	/^#define OWNING_SUBTRANSPORT(/;"	d	file:
OWNING_SUBTRANSPORT	extern/libgit2/src/transports/http.c	/^#define OWNING_SUBTRANSPORT(/;"	d	file:
OWNING_SUBTRANSPORT	extern/libgit2/src/transports/ssh.c	/^#define OWNING_SUBTRANSPORT(/;"	d	file:
OWNING_SUBTRANSPORT	extern/libgit2/src/transports/winhttp.c	/^#define OWNING_SUBTRANSPORT(/;"	d	file:
O_BINARY	extern/libgit2/src/posix.h	/^#define O_BINARY /;"	d
O_CLOEXEC	extern/libgit2/src/posix.h	/^#define O_CLOEXEC /;"	d
O_FSYNC	extern/libgit2/src/futils.h	/^# define O_FSYNC /;"	d
OfType	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
Ok	extern/OpenXLSX/tests/catch/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
On Windows	extern/libgit2/docs/threading.md	/^On Windows$/;"	s
On macOS	extern/libgit2/docs/threading.md	/^On macOS$/;"	s
Open	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        void Open(const std::string& fileName) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:void
OpenDocument	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^void Impl::XLDocument::OpenDocument(const string& fileName) {$/;"	f	class:Impl::XLDocument	typeref:typename:void
OpenDocument	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^void XLDocument::OpenDocument(const std::string& fileName) {$/;"	f	class:XLDocument	typeref:typename:void
OpenXLSX	extern/OpenXLSX/CMakeLists.txt	/^project(OpenXLSX)$/;"	p
OpenXLSX	extern/OpenXLSX/README.md	/^# OpenXLSX$/;"	c
OpenXLSX	extern/OpenXLSX/library/openxlsx/CMakeLists.txt	/^    add_library(OpenXLSX SHARED "")$/;"	t
OpenXLSX	extern/OpenXLSX/library/openxlsx/CMakeLists.txt	/^    add_library(OpenXLSX STATIC "")$/;"	t
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAbstractXMLFile_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAppProperties_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellRange_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellValue_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCell_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLChartsheet_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLColumn_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLContentTypes_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCoreProperties_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLDocument_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRelationships_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRow_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSharedStrings_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSheet_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTemplate_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTokenizer_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^namespace OpenXLSX::Impl$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCell.h	/^namespace OpenXLSX$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellRange.h	/^namespace OpenXLSX$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellReference.h	/^namespace OpenXLSX$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellValue.h	/^namespace OpenXLSX$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLChartsheet.h	/^namespace OpenXLSX$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLColumn.h	/^namespace OpenXLSX$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^namespace OpenXLSX$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDocument.h	/^namespace OpenXLSX$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLException.h	/^namespace OpenXLSX$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLRow.h	/^namespace OpenXLSX$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLSheet.h	/^namespace OpenXLSX$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLWorkbook.h	/^namespace OpenXLSX$/;"	n
OpenXLSX	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLWorksheet.h	/^namespace OpenXLSX$/;"	n
Option Structures	extern/libgit2/docs/conventions.md	/^## Option Structures$/;"	s
Optional dependencies	extern/libgit2/README.md	/^Optional dependencies$/;"	c
Our Pledge	extern/libgit2/docs/code_of_conduct.md	/^## Our Pledge$/;"	s
Our Responsibilities	extern/libgit2/docs/code_of_conduct.md	/^## Our Responsibilities$/;"	s
Our Standards	extern/libgit2/docs/code_of_conduct.md	/^## Our Standards$/;"	s
OutputDecimalNumber	extern/OpenXLSX/benchmark/table_printer.h	/^    void TablePrinter::OutputDecimalNumber(T input) {$/;"	f	class:bprinter::TablePrinter	typeref:typename:void
P	extern/libgit2/src/wildmatch.c	/^	P = GIT_PATHSPEC_MAGIC, \/* other non-alnum, except for ] and } *\/$/;"	e	enum:__anon17a406cb0103	file:
PACKED_FN	extern/libgit2/tests/odb/freshen.c	/^#define PACKED_FN /;"	d	file:
PACKED_ID	extern/libgit2/tests/odb/freshen.c	/^#define PACKED_ID /;"	d	file:
PACKED_STR	extern/libgit2/tests/odb/freshen.c	/^#define PACKED_STR /;"	d	file:
PACKREF_CANNOT_PEEL	extern/libgit2/src/refdb_fs.c	/^	PACKREF_CANNOT_PEEL = 4,$/;"	e	enum:__anonbd02e2090103	file:
PACKREF_HAS_PEEL	extern/libgit2/src/refdb_fs.c	/^	PACKREF_HAS_PEEL = 1,$/;"	e	enum:__anonbd02e2090103	file:
PACKREF_SHADOWED	extern/libgit2/src/refdb_fs.c	/^	PACKREF_SHADOWED = 8,$/;"	e	enum:__anonbd02e2090103	file:
PACKREF_WAS_LOOSE	extern/libgit2/src/refdb_fs.c	/^	PACKREF_WAS_LOOSE = 2,$/;"	e	enum:__anonbd02e2090103	file:
PACK_IDX_SIGNATURE	extern/libgit2/src/pack.h	/^#define PACK_IDX_SIGNATURE /;"	d
PACK_SIGNATURE	extern/libgit2/src/pack.h	/^#define PACK_SIGNATURE /;"	d
PACK_VERSION	extern/libgit2/src/pack.h	/^#define PACK_VERSION /;"	d
PARENS_NEST_LIMIT	extern/libgit2/deps/pcre/config.h.in	/^#define PARENS_NEST_LIMIT /;"	d	file:
PARENT1	extern/libgit2/src/commit_list.h	/^#define PARENT1 /;"	d
PARENT2	extern/libgit2/src/commit_list.h	/^#define PARENT2 /;"	d
PARENTS_PER_COMMIT	extern/libgit2/src/commit_list.h	/^#define PARENTS_PER_COMMIT	/;"	d
PARSE_ERROR_EXT	extern/libgit2/src/transports/http.c	/^#define PARSE_ERROR_EXT /;"	d	file:
PARSE_ERROR_GENERIC	extern/libgit2/src/transports/http.c	/^#define PARSE_ERROR_GENERIC	/;"	d	file:
PARSE_ERROR_REPLAY	extern/libgit2/src/transports/http.c	/^#define PARSE_ERROR_REPLAY	/;"	d	file:
PARSE_FAILURE	extern/libgit2/tests/transports/smart/packet.c	/^	PARSE_FAILURE$/;"	e	enum:expected_status	file:
PARSE_SUCCESS	extern/libgit2/tests/transports/smart/packet.c	/^	PARSE_SUCCESS,$/;"	e	enum:expected_status	file:
PARSING_HEADER	extern/libgit2/deps/http-parser/http_parser.c	/^#define PARSING_HEADER(/;"	d	file:
PATCH_ADD_ORIGINAL	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ADD_ORIGINAL /;"	d
PATCH_APPEND_NO_NL	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_APPEND_NO_NL /;"	d
PATCH_APPEND_NO_NL_IN_OLD_FILE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_APPEND_NO_NL_IN_OLD_FILE /;"	d
PATCH_BINARY_ADD	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_BINARY_ADD /;"	d
PATCH_BINARY_DELETE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_BINARY_DELETE /;"	d
PATCH_BINARY_DELTA	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_BINARY_DELTA /;"	d
PATCH_BINARY_LITERAL	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_BINARY_LITERAL /;"	d
PATCH_BINARY_NOT_PRINTED	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_BINARY_NOT_PRINTED /;"	d
PATCH_BINARY_NOT_REVERSIBLE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_BINARY_NOT_REVERSIBLE /;"	d
PATCH_CACHE	extern/libgit2/tests/diff/diffiter.c	/^#define PATCH_CACHE /;"	d	file:
PATCH_CORRUPT_GIT_HEADER	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_CORRUPT_GIT_HEADER /;"	d
PATCH_CORRUPT_MISSING_HUNK_HEADER	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_CORRUPT_MISSING_HUNK_HEADER /;"	d
PATCH_CORRUPT_MISSING_NEW_FILE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_CORRUPT_MISSING_NEW_FILE /;"	d
PATCH_CORRUPT_MISSING_OLD_FILE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_CORRUPT_MISSING_OLD_FILE /;"	d
PATCH_CORRUPT_NO_CHANGES	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_CORRUPT_NO_CHANGES /;"	d
PATCH_CRLF	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_CRLF /;"	d
PATCH_DELETE_ORIGINAL	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_DELETE_ORIGINAL /;"	d
PATCH_EMPTY_CONTEXT	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_EMPTY_CONTEXT /;"	d
PATCH_EMPTY_FILE_TO_ORIGINAL	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_EMPTY_FILE_TO_ORIGINAL /;"	d
PATCH_IMAGE_INIT	extern/libgit2/src/apply.c	/^#define PATCH_IMAGE_INIT /;"	d	file:
PATCH_MODECHANGE_MODIFIED	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_MODECHANGE_MODIFIED /;"	d
PATCH_MODECHANGE_UNCHANGED	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_MODECHANGE_UNCHANGED /;"	d
PATCH_MULTIPLE_FILES	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_MULTIPLE_FILES /;"	d
PATCH_MULTIPLE_HUNKS	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_MULTIPLE_HUNKS /;"	d
PATCH_NAME_WHITESPACE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_NAME_WHITESPACE /;"	d
PATCH_NOISY	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_NOISY /;"	d
PATCH_NOISY_NOCONTEXT	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_NOISY_NOCONTEXT /;"	d
PATCH_NOT_A_PATCH	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_NOT_A_PATCH /;"	d
PATCH_ORIGINAL_NEW_FILE_WITH_SPACE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_NEW_FILE_WITH_SPACE /;"	d
PATCH_ORIGINAL_TO_APPEND	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_APPEND /;"	d
PATCH_ORIGINAL_TO_APPEND_NOCONTEXT	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_APPEND_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_CHANGE_FIRSTLINE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_FIRSTLINE /;"	d
PATCH_ORIGINAL_TO_CHANGE_LASTLINE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_LASTLINE /;"	d
PATCH_ORIGINAL_TO_CHANGE_MIDDLE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_MIDDLE /;"	d
PATCH_ORIGINAL_TO_CHANGE_MIDDLE_AND_LASTLINE_NOCONTEXT	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_MIDDLE_AND_LASTLINE_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_CHANGE_MIDDLE_GROW	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_MIDDLE_GROW /;"	d
PATCH_ORIGINAL_TO_CHANGE_MIDDLE_NOCONTEXT	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_MIDDLE_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_CHANGE_MIDDLE_SHRINK	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_MIDDLE_SHRINK /;"	d
PATCH_ORIGINAL_TO_DELETE_AND_CHANGE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_DELETE_AND_CHANGE /;"	d
PATCH_ORIGINAL_TO_DELETE_AND_CHANGE_NOCONTEXT	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_DELETE_AND_CHANGE_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_DELETE_FIRSTLINE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_DELETE_FIRSTLINE /;"	d
PATCH_ORIGINAL_TO_EMPTY_FILE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_EMPTY_FILE /;"	d
PATCH_ORIGINAL_TO_MIDDLE_GROW_NOCONTEXT	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_MIDDLE_GROW_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_MIDDLE_SHRINK_NOCONTEXT	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_MIDDLE_SHRINK_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_PREPEND	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_PREPEND /;"	d
PATCH_ORIGINAL_TO_PREPEND_AND_APPEND	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_PREPEND_AND_APPEND /;"	d
PATCH_ORIGINAL_TO_PREPEND_AND_CHANGE	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_PREPEND_AND_CHANGE /;"	d
PATCH_ORIGINAL_TO_PREPEND_AND_CHANGE_NOCONTEXT	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_PREPEND_AND_CHANGE_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_PREPEND_NOCONTEXT	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_PREPEND_NOCONTEXT /;"	d
PATCH_RENAME_EXACT	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_RENAME_EXACT /;"	d
PATCH_RENAME_EXACT_QUOTEDNAME	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_RENAME_EXACT_QUOTEDNAME /;"	d
PATCH_RENAME_SIMILAR	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_RENAME_SIMILAR /;"	d
PATCH_RENAME_SIMILAR_QUOTEDNAME	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_RENAME_SIMILAR_QUOTEDNAME /;"	d
PATCH_SIMPLE_COMMIT	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_SIMPLE_COMMIT /;"	d
PATCH_TRUNCATED_1	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_TRUNCATED_1 /;"	d
PATCH_TRUNCATED_2	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_TRUNCATED_2 /;"	d
PATCH_TRUNCATED_3	extern/libgit2/tests/patch/patch_common.h	/^#define PATCH_TRUNCATED_3 /;"	d
PATHSPEC_DATATYPE_DIFF	extern/libgit2/src/pathspec.h	/^	PATHSPEC_DATATYPE_DIFF = 1,$/;"	e	enum:__anon2b5915eb0103
PATHSPEC_DATATYPE_STRINGS	extern/libgit2/src/pathspec.h	/^	PATHSPEC_DATATYPE_STRINGS = 0,$/;"	e	enum:__anon2b5915eb0103
PATH_MAGIC	extern/libgit2/src/sysdir.c	/^#define PATH_MAGIC /;"	d	file:
PATH__ABSOLUTE_LEN	extern/libgit2/src/win32/path_w32.c	/^#define PATH__ABSOLUTE_LEN /;"	d	file:
PATH__NT_NAMESPACE	extern/libgit2/src/win32/path_w32.c	/^#define PATH__NT_NAMESPACE /;"	d	file:
PATH__NT_NAMESPACE_LEN	extern/libgit2/src/win32/path_w32.c	/^#define PATH__NT_NAMESPACE_LEN /;"	d	file:
PATTERNS	extern/libgit2/src/userdiff.h	/^#define PATTERNS(/;"	d
PCRE2_INCLUDE_DIRS	extern/libgit2/cmake/Modules/FindPCRE2.cmake	/^	SET(PCRE2_INCLUDE_DIRS ${PCRE2_INCLUDE_DIR})$/;"	v
PCRE2_INCLUDE_DIRS	extern/libgit2/cmake/Modules/FindPCRE2.cmake	/^	SET(PCRE2_INCLUDE_DIRS)$/;"	v
PCRE2_LIBRARIES	extern/libgit2/cmake/Modules/FindPCRE2.cmake	/^	SET(PCRE2_LIBRARIES ${PCRE2_LIBRARY} ${PCRE2_POSIX_LIBRARY})$/;"	v
PCRE2_LIBRARIES	extern/libgit2/cmake/Modules/FindPCRE2.cmake	/^	SET(PCRE2_LIBRARIES)$/;"	v
PCREGREP_BUFSIZE	extern/libgit2/deps/pcre/config.h.in	/^#define PCREGREP_BUFSIZE /;"	d	file:
PCREPOSIX_EXP_DECL	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCREPOSIX_EXP_DECL /;"	d
PCREPOSIX_EXP_DEFN	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCREPOSIX_EXP_DEFN /;"	d
PCREPOSIX_HEADERS	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(PCREPOSIX_HEADERS pcreposix.h)$/;"	v
PCREPOSIX_SOURCES	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(PCREPOSIX_SOURCES pcreposix.c)$/;"	v
PCRE_ANCHORED	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ANCHORED /;"	d
PCRE_AUTO_CALLOUT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_AUTO_CALLOUT /;"	d
PCRE_BSR_ANYCRLF	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_BSR_ANYCRLF /;"	d
PCRE_BSR_UNICODE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_BSR_UNICODE /;"	d
PCRE_CALL_CONVENTION	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_CALL_CONVENTION$/;"	d
PCRE_CASELESS	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CASELESS /;"	d
PCRE_CONFIG_BSR	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_BSR /;"	d
PCRE_CONFIG_JIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_JIT /;"	d
PCRE_CONFIG_JITTARGET	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_JITTARGET /;"	d
PCRE_CONFIG_LINK_SIZE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_LINK_SIZE /;"	d
PCRE_CONFIG_MATCH_LIMIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_MATCH_LIMIT /;"	d
PCRE_CONFIG_MATCH_LIMIT_RECURSION	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_MATCH_LIMIT_RECURSION /;"	d
PCRE_CONFIG_NEWLINE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_NEWLINE /;"	d
PCRE_CONFIG_PARENS_LIMIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_PARENS_LIMIT /;"	d
PCRE_CONFIG_POSIX_MALLOC_THRESHOLD	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_POSIX_MALLOC_THRESHOLD /;"	d
PCRE_CONFIG_STACKRECURSE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_STACKRECURSE /;"	d
PCRE_CONFIG_UNICODE_PROPERTIES	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_UNICODE_PROPERTIES /;"	d
PCRE_CONFIG_UTF16	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_UTF16 /;"	d
PCRE_CONFIG_UTF32	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_UTF32 /;"	d
PCRE_CONFIG_UTF8	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_UTF8 /;"	d
PCRE_DATE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_DATE /;"	d
PCRE_DFA_RESTART	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_DFA_RESTART /;"	d
PCRE_DFA_SHORTEST	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_DFA_SHORTEST /;"	d
PCRE_DOLLAR_ENDONLY	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_DOLLAR_ENDONLY /;"	d
PCRE_DOTALL	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_DOTALL /;"	d
PCRE_DUPNAMES	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_DUPNAMES /;"	d
PCRE_ERROR_BADCOUNT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADCOUNT /;"	d
PCRE_ERROR_BADENDIANNESS	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADENDIANNESS /;"	d
PCRE_ERROR_BADLENGTH	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADLENGTH /;"	d
PCRE_ERROR_BADMAGIC	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADMAGIC /;"	d
PCRE_ERROR_BADMODE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADMODE /;"	d
PCRE_ERROR_BADNEWLINE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADNEWLINE /;"	d
PCRE_ERROR_BADOFFSET	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADOFFSET /;"	d
PCRE_ERROR_BADOPTION	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADOPTION /;"	d
PCRE_ERROR_BADPARTIAL	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADPARTIAL /;"	d
PCRE_ERROR_BADUTF16	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADUTF16 /;"	d
PCRE_ERROR_BADUTF16_OFFSET	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADUTF16_OFFSET /;"	d
PCRE_ERROR_BADUTF32	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADUTF32 /;"	d
PCRE_ERROR_BADUTF8	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADUTF8 /;"	d
PCRE_ERROR_BADUTF8_OFFSET	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADUTF8_OFFSET /;"	d
PCRE_ERROR_CALLOUT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_CALLOUT /;"	d
PCRE_ERROR_DFA_BADRESTART	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_DFA_BADRESTART /;"	d
PCRE_ERROR_DFA_RECURSE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_DFA_RECURSE /;"	d
PCRE_ERROR_DFA_UCOND	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_DFA_UCOND /;"	d
PCRE_ERROR_DFA_UITEM	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_DFA_UITEM /;"	d
PCRE_ERROR_DFA_UMLIMIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_DFA_UMLIMIT /;"	d
PCRE_ERROR_DFA_WSSIZE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_DFA_WSSIZE /;"	d
PCRE_ERROR_INTERNAL	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_INTERNAL /;"	d
PCRE_ERROR_JIT_BADOPTION	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_JIT_BADOPTION /;"	d
PCRE_ERROR_JIT_STACKLIMIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_JIT_STACKLIMIT /;"	d
PCRE_ERROR_MATCHLIMIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_MATCHLIMIT /;"	d
PCRE_ERROR_NOMATCH	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_NOMATCH /;"	d
PCRE_ERROR_NOMEMORY	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_NOMEMORY /;"	d
PCRE_ERROR_NOSUBSTRING	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_NOSUBSTRING /;"	d
PCRE_ERROR_NULL	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_NULL /;"	d
PCRE_ERROR_NULLWSLIMIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_NULLWSLIMIT /;"	d
PCRE_ERROR_PARTIAL	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_PARTIAL /;"	d
PCRE_ERROR_RECURSELOOP	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_RECURSELOOP /;"	d
PCRE_ERROR_RECURSIONLIMIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_RECURSIONLIMIT /;"	d
PCRE_ERROR_SHORTUTF16	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_SHORTUTF16 /;"	d
PCRE_ERROR_SHORTUTF8	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_SHORTUTF8 /;"	d
PCRE_ERROR_UNKNOWN_NODE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_UNKNOWN_NODE /;"	d
PCRE_ERROR_UNKNOWN_OPCODE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_UNKNOWN_OPCODE /;"	d
PCRE_ERROR_UNSET	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_UNSET /;"	d
PCRE_EXP_DATA_DEFN	extern/libgit2/deps/pcre/pcre_internal.h	/^# define PCRE_EXP_DATA_DEFN$/;"	d
PCRE_EXP_DECL	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXP_DECL /;"	d
PCRE_EXP_DECL	extern/libgit2/deps/pcre/pcre_internal.h	/^# define PCRE_EXP_DECL /;"	d
PCRE_EXP_DEFN	extern/libgit2/deps/pcre/pcre_internal.h	/^# define PCRE_EXP_DEFN$/;"	d
PCRE_EXTENDED	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTENDED /;"	d
PCRE_EXTRA	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA /;"	d
PCRE_EXTRA_CALLOUT_DATA	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_CALLOUT_DATA /;"	d
PCRE_EXTRA_EXECUTABLE_JIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_EXECUTABLE_JIT /;"	d
PCRE_EXTRA_MARK	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_MARK /;"	d
PCRE_EXTRA_MATCH_LIMIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_MATCH_LIMIT /;"	d
PCRE_EXTRA_MATCH_LIMIT_RECURSION	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_MATCH_LIMIT_RECURSION /;"	d
PCRE_EXTRA_STUDY_DATA	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_STUDY_DATA /;"	d
PCRE_EXTRA_TABLES	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_TABLES /;"	d
PCRE_FCH_CASELESS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_FCH_CASELESS /;"	d
PCRE_FIRSTLINE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_FIRSTLINE /;"	d
PCRE_FIRSTSET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_FIRSTSET /;"	d
PCRE_HASCRORLF	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_HASCRORLF /;"	d
PCRE_HASTHEN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_HASTHEN /;"	d
PCRE_HEADERS	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(PCRE_HEADERS ${PROJECT_BINARY_DIR}\/src\/pcre\/config.h)$/;"	v
PCRE_INCLUDED	extern/libgit2/deps/pcre/pcre_compile.c	/^#define PCRE_INCLUDED$/;"	d	file:
PCRE_INCLUDE_DIRS	extern/libgit2/cmake/Modules/FindPCRE.cmake	/^	SET(PCRE_INCLUDE_DIRS ${PCRE_INCLUDE_DIR})$/;"	v
PCRE_INCLUDE_DIRS	extern/libgit2/cmake/Modules/FindPCRE.cmake	/^	SET(PCRE_INCLUDE_DIRS)$/;"	v
PCRE_INFO_BACKREFMAX	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_BACKREFMAX /;"	d
PCRE_INFO_CAPTURECOUNT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_CAPTURECOUNT /;"	d
PCRE_INFO_DEFAULT_TABLES	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_DEFAULT_TABLES /;"	d
PCRE_INFO_FIRSTBYTE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_FIRSTBYTE /;"	d
PCRE_INFO_FIRSTCHAR	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_FIRSTCHAR /;"	d
PCRE_INFO_FIRSTCHARACTER	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_FIRSTCHARACTER /;"	d
PCRE_INFO_FIRSTCHARACTERFLAGS	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_FIRSTCHARACTERFLAGS /;"	d
PCRE_INFO_FIRSTTABLE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_FIRSTTABLE /;"	d
PCRE_INFO_HASCRORLF	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_HASCRORLF /;"	d
PCRE_INFO_JCHANGED	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_JCHANGED /;"	d
PCRE_INFO_JIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_JIT /;"	d
PCRE_INFO_JITSIZE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_JITSIZE /;"	d
PCRE_INFO_LASTLITERAL	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_LASTLITERAL /;"	d
PCRE_INFO_MATCHLIMIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_MATCHLIMIT /;"	d
PCRE_INFO_MATCH_EMPTY	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_MATCH_EMPTY /;"	d
PCRE_INFO_MAXLOOKBEHIND	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_MAXLOOKBEHIND /;"	d
PCRE_INFO_MINLENGTH	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_MINLENGTH /;"	d
PCRE_INFO_NAMECOUNT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_NAMECOUNT /;"	d
PCRE_INFO_NAMEENTRYSIZE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_NAMEENTRYSIZE /;"	d
PCRE_INFO_NAMETABLE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_NAMETABLE /;"	d
PCRE_INFO_OKPARTIAL	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_OKPARTIAL /;"	d
PCRE_INFO_OPTIONS	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_OPTIONS /;"	d
PCRE_INFO_RECURSIONLIMIT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_RECURSIONLIMIT /;"	d
PCRE_INFO_REQUIREDCHAR	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_REQUIREDCHAR /;"	d
PCRE_INFO_REQUIREDCHARFLAGS	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_REQUIREDCHARFLAGS /;"	d
PCRE_INFO_SIZE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_SIZE /;"	d
PCRE_INFO_STUDYSIZE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_STUDYSIZE /;"	d
PCRE_INT16_MAX	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_INT16_MAX /;"	d
PCRE_INT32_MAX	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_INT32_MAX /;"	d
PCRE_INTERNAL_H	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_INTERNAL_H$/;"	d
PCRE_JAVASCRIPT_COMPAT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_JAVASCRIPT_COMPAT /;"	d
PCRE_JCHANGED	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_JCHANGED /;"	d
PCRE_LIBRARIES	extern/libgit2/cmake/Modules/FindPCRE.cmake	/^	SET(PCRE_LIBRARIES ${PCRE_LIBRARY} ${PCRE_POSIX_LIBRARY})$/;"	v
PCRE_LIBRARIES	extern/libgit2/cmake/Modules/FindPCRE.cmake	/^	SET(PCRE_LIBRARIES)$/;"	v
PCRE_LINK_SIZE	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(PCRE_LINK_SIZE "2")$/;"	v
PCRE_MAJOR	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_MAJOR /;"	d
PCRE_MATCH_EMPTY	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MATCH_EMPTY /;"	d
PCRE_MATCH_LIMIT	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(PCRE_MATCH_LIMIT "10000000")$/;"	v
PCRE_MATCH_LIMIT_RECURSION	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(PCRE_MATCH_LIMIT_RECURSION "MATCH_LIMIT")$/;"	v
PCRE_MINOR	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_MINOR /;"	d
PCRE_MLSET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MLSET /;"	d
PCRE_MODE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MODE /;"	d
PCRE_MODE16	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MODE16 /;"	d
PCRE_MODE32	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MODE32 /;"	d
PCRE_MODE8	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MODE8 /;"	d
PCRE_MODE_MASK	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MODE_MASK /;"	d
PCRE_MULTILINE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_MULTILINE /;"	d
PCRE_NEVER_UTF	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NEVER_UTF /;"	d
PCRE_NEWLINE	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(PCRE_NEWLINE "LF")$/;"	v
PCRE_NEWLINE_ANY	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NEWLINE_ANY /;"	d
PCRE_NEWLINE_ANYCRLF	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NEWLINE_ANYCRLF /;"	d
PCRE_NEWLINE_BITS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_NEWLINE_BITS /;"	d
PCRE_NEWLINE_CR	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NEWLINE_CR /;"	d
PCRE_NEWLINE_CRLF	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NEWLINE_CRLF /;"	d
PCRE_NEWLINE_LF	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NEWLINE_LF /;"	d
PCRE_NOPARTIAL	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_NOPARTIAL /;"	d
PCRE_NOTBOL	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NOTBOL /;"	d
PCRE_NOTEMPTY	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NOTEMPTY /;"	d
PCRE_NOTEMPTY_ATSTART	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NOTEMPTY_ATSTART /;"	d
PCRE_NOTEOL	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NOTEOL /;"	d
PCRE_NO_AUTO_CAPTURE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_AUTO_CAPTURE /;"	d
PCRE_NO_AUTO_POSSESS	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_AUTO_POSSESS /;"	d
PCRE_NO_START_OPTIMISE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_START_OPTIMISE /;"	d
PCRE_NO_START_OPTIMIZE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_START_OPTIMIZE /;"	d
PCRE_NO_UTF16_CHECK	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_UTF16_CHECK /;"	d
PCRE_NO_UTF32_CHECK	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_UTF32_CHECK /;"	d
PCRE_NO_UTF8_CHECK	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_UTF8_CHECK /;"	d
PCRE_PARENS_NEST_LIMIT	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(PCRE_PARENS_NEST_LIMIT "250")$/;"	v
PCRE_PARTIAL	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_PARTIAL /;"	d
PCRE_PARTIAL_HARD	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_PARTIAL_HARD /;"	d
PCRE_PARTIAL_SOFT	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_PARTIAL_SOFT /;"	d
PCRE_POSIX_MALLOC_THRESHOLD	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(PCRE_POSIX_MALLOC_THRESHOLD "10")$/;"	v
PCRE_PRERELEASE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_PRERELEASE$/;"	d
PCRE_PUCHAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_PUCHAR /;"	d
PCRE_RCH_CASELESS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_RCH_CASELESS /;"	d
PCRE_REG_ASSERT	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ASSERT = 1,  \/* internal error ? *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_BADBR	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_BADBR,       \/* invalid repeat counts in {} *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_BADPAT	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_BADPAT,      \/* pattern error *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_BADRPT	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_BADRPT,      \/* ? * + invalid *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_DOTALL	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_DOTALL /;"	d
PCRE_REG_EBRACE	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_EBRACE,      \/* unbalanced {} *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_EBRACK	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_EBRACK,      \/* unbalanced [] *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_ECOLLATE	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ECOLLATE,    \/* collation error - not relevant *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_ECTYPE	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ECTYPE,      \/* bad class *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_EESCAPE	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_EESCAPE,     \/* bad escape sequence *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_EMPTY	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_EMPTY,       \/* empty expression *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_EPAREN	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_EPAREN,      \/* unbalanced () *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_ERANGE	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ERANGE,      \/* bad range inside [] *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_ESIZE	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ESIZE,       \/* expression too big *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_ESPACE	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ESPACE,      \/* failed to get memory *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_ESUBREG	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ESUBREG,     \/* bad back reference *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_EXTENDED	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_EXTENDED /;"	d
PCRE_REG_ICASE	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_ICASE /;"	d
PCRE_REG_INVARG	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_INVARG,      \/* bad argument *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_NEWLINE	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_NEWLINE /;"	d
PCRE_REG_NOMATCH	extern/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_NOMATCH      \/* match failed *\/$/;"	e	enum:__anonf0efc70d0103
PCRE_REG_NOSUB	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_NOSUB /;"	d
PCRE_REG_NOTBOL	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_NOTBOL /;"	d
PCRE_REG_NOTEMPTY	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_NOTEMPTY /;"	d
PCRE_REG_NOTEOL	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_NOTEOL /;"	d
PCRE_REG_STARTEND	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_STARTEND /;"	d
PCRE_REG_UCP	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_UCP /;"	d
PCRE_REG_UNGREEDY	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_UNGREEDY /;"	d
PCRE_REG_UTF8	extern/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_UTF8 /;"	d
PCRE_REQCHSET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_REQCHSET /;"	d
PCRE_RLSET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_RLSET /;"	d
PCRE_SOURCES	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(PCRE_SOURCES$/;"	v
PCRE_SPTR	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_SPTR /;"	d
PCRE_SPTR16	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_SPTR16 /;"	d
PCRE_SPTR32	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_SPTR32 /;"	d
PCRE_STARTLINE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_STARTLINE /;"	d
PCRE_STUDY_EXTRA_NEEDED	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_STUDY_EXTRA_NEEDED /;"	d
PCRE_STUDY_JIT_COMPILE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_STUDY_JIT_COMPILE /;"	d
PCRE_STUDY_JIT_PARTIAL_HARD_COMPILE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_STUDY_JIT_PARTIAL_HARD_COMPILE /;"	d
PCRE_STUDY_JIT_PARTIAL_SOFT_COMPILE	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_STUDY_JIT_PARTIAL_SOFT_COMPILE /;"	d
PCRE_STUDY_MAPPED	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_STUDY_MAPPED /;"	d
PCRE_STUDY_MINLEN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_STUDY_MINLEN /;"	d
PCRE_UCHAR16	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UCHAR16 /;"	d
PCRE_UCHAR32	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UCHAR32 /;"	d
PCRE_UCP	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UCP /;"	d
PCRE_UINT16_MAX	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_UINT16_MAX /;"	d
PCRE_UINT32_MAX	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_UINT32_MAX /;"	d
PCRE_UNGREEDY	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UNGREEDY /;"	d
PCRE_UTF16	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF16 /;"	d
PCRE_UTF16_ERR0	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF16_ERR0 /;"	d
PCRE_UTF16_ERR1	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF16_ERR1 /;"	d
PCRE_UTF16_ERR2	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF16_ERR2 /;"	d
PCRE_UTF16_ERR3	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF16_ERR3 /;"	d
PCRE_UTF16_ERR4	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF16_ERR4 /;"	d
PCRE_UTF32	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF32 /;"	d
PCRE_UTF32_ERR0	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF32_ERR0 /;"	d
PCRE_UTF32_ERR1	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF32_ERR1 /;"	d
PCRE_UTF32_ERR2	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF32_ERR2 /;"	d
PCRE_UTF32_ERR3	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF32_ERR3 /;"	d
PCRE_UTF8	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8 /;"	d
PCRE_UTF8_ERR0	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR0 /;"	d
PCRE_UTF8_ERR1	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR1 /;"	d
PCRE_UTF8_ERR10	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR10 /;"	d
PCRE_UTF8_ERR11	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR11 /;"	d
PCRE_UTF8_ERR12	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR12 /;"	d
PCRE_UTF8_ERR13	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR13 /;"	d
PCRE_UTF8_ERR14	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR14 /;"	d
PCRE_UTF8_ERR15	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR15 /;"	d
PCRE_UTF8_ERR16	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR16 /;"	d
PCRE_UTF8_ERR17	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR17 /;"	d
PCRE_UTF8_ERR18	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR18 /;"	d
PCRE_UTF8_ERR19	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR19 /;"	d
PCRE_UTF8_ERR2	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR2 /;"	d
PCRE_UTF8_ERR20	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR20 /;"	d
PCRE_UTF8_ERR21	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR21 /;"	d
PCRE_UTF8_ERR22	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR22 /;"	d
PCRE_UTF8_ERR3	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR3 /;"	d
PCRE_UTF8_ERR4	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR4 /;"	d
PCRE_UTF8_ERR5	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR5 /;"	d
PCRE_UTF8_ERR6	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR6 /;"	d
PCRE_UTF8_ERR7	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR7 /;"	d
PCRE_UTF8_ERR8	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR8 /;"	d
PCRE_UTF8_ERR9	extern/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR9 /;"	d
PC_GRAPH	extern/libgit2/deps/pcre/pcre_compile.c	/^#define PC_GRAPH /;"	d	file:
PC_PRINT	extern/libgit2/deps/pcre/pcre_compile.c	/^#define PC_PRINT /;"	d	file:
PC_PUNCT	extern/libgit2/deps/pcre/pcre_compile.c	/^#define PC_PUNCT /;"	d	file:
PEELING_FULL	extern/libgit2/src/refdb_fs.c	/^	PEELING_FULL$/;"	e	enum:__anonbd02e2090203	file:
PEELING_NONE	extern/libgit2/src/refdb_fs.c	/^	PEELING_NONE = 0,$/;"	e	enum:__anonbd02e2090203	file:
PEELING_STANDARD	extern/libgit2/src/refdb_fs.c	/^	PEELING_STANDARD,$/;"	e	enum:__anonbd02e2090203	file:
PERF_TIMER_INIT	extern/libgit2/tests/perf/helper__perf__timer.h	/^#define PERF_TIMER_INIT /;"	d
PKGCONFIG_CFLAGS	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^        set(PKGCONFIG_CFLAGS "")$/;"	v	function:pkg_build_config
PKGCONFIG_FILE	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^    set(PKGCONFIG_FILE "${PROJECT_BINARY_DIR}\/${PKGCONFIG_FILENAME}.pc")$/;"	v	function:pkg_build_config
PKGCONFIG_FILENAME	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^        set(PKGCONFIG_FILENAME ${PKGCONFIG_NAME})$/;"	v	function:pkg_build_config
PKGCONFIG_INCLUDEDIR	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^            set(PKGCONFIG_INCLUDEDIR "\\${prefix}\/${PKG_BUILD_INCLUDEDIR}")$/;"	v	function:pkg_build_config
PKGCONFIG_INCLUDEDIR	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^            set(PKGCONFIG_INCLUDEDIR ${PKG_BUILD_INCLUDEDIR})$/;"	v	function:pkg_build_config
PKGCONFIG_INCLUDEDIR	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^        set(PKGCONFIG_INCLUDEDIR "\\${prefix}\/include")$/;"	v	function:pkg_build_config
PKGCONFIG_LIBDIR	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^            set(PKGCONFIG_LIBDIR "\\${prefix}\/${PKG_BUILD_LIBDIR}")$/;"	v	function:pkg_build_config
PKGCONFIG_LIBDIR	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^            set(PKGCONFIG_LIBDIR ${PKG_BUILD_LIBDIR})$/;"	v	function:pkg_build_config
PKGCONFIG_LIBDIR	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^        set(PKGCONFIG_LIBDIR "\\${prefix}\/lib")$/;"	v	function:pkg_build_config
PKGCONFIG_LIBS	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^        set(PKGCONFIG_LIBS "-l${PKGCONFIG_LIBS_SELF}")$/;"	v	function:pkg_build_config
PKGCONFIG_LIBS_SELF	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^        set(PKGCONFIG_LIBS_SELF "${PKGCONFIG_FILE}")$/;"	v	function:pkg_build_config
PKGCONFIG_PREFIX	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^        set(PKGCONFIG_PREFIX "${CMAKE_INSTALL_PREFIX}")$/;"	v	function:pkg_build_config
PKGCONFIG_PREFIX	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^        set(PKGCONFIG_PREFIX "${PKG_BUILD_PREFIX}")$/;"	v	function:pkg_build_config
PKT_LEN_SIZE	extern/libgit2/src/transports/smart_pkt.c	/^#define PKT_LEN_SIZE /;"	d	file:
POSIX_MALLOC_THRESHOLD	extern/libgit2/deps/pcre/config.h.in	/^#define POSIX_MALLOC_THRESHOLD	/;"	d	file:
POSIX_SUBSIZE	extern/libgit2/deps/pcre/pcre_compile.c	/^#define POSIX_SUBSIZE /;"	d	file:
POSSESSIVE0	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define POSSESSIVE0 /;"	d	file:
POSSESSIVE1	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define POSSESSIVE1 /;"	d	file:
POST_BLANK_WEIGHT	extern/libgit2/src/xdiff/xdiffi.c	/^#define POST_BLANK_WEIGHT /;"	d	file:
PQUEUE_LCHILD_OF	extern/libgit2/src/pqueue.c	/^#define PQUEUE_LCHILD_OF(/;"	d	file:
PQUEUE_PARENT_OF	extern/libgit2/src/pqueue.c	/^#define PQUEUE_PARENT_OF(/;"	d	file:
PQUEUE_RCHILD_OF	extern/libgit2/src/pqueue.c	/^#define PQUEUE_RCHILD_OF(/;"	d	file:
PREFIX	extern/libgit2/src/remote.c	/^#define PREFIX /;"	d	file:
PREPARE_PACK	extern/libgit2/src/pack-objects.c	/^#define PREPARE_PACK /;"	d	file:
PRESET_DICT	extern/libgit2/deps/zlib/zutil.h	/^#define PRESET_DICT /;"	d
PREVIOUS_BRANCH	extern/libgit2/tests/merge/analysis.c	/^#define PREVIOUS_BRANCH /;"	d	file:
PRINTABLE	extern/libgit2/deps/pcre/pcre_printint.c	/^#define PRINTABLE(/;"	d	file:
PRIV	extern/libgit2/deps/pcre/pcre_compile.c	/^PRIV(find_bracket)(const pcre_uchar *code, BOOL utf, int number)$/;"	f	typeref:typename:const pcre_uchar *
PRIV	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PRIV(/;"	d
PRIV	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^PRIV(jit_compile)(const REAL_PCRE *re, PUBL(extra) *extra, int mode)$/;"	f	typeref:typename:void
PRIV	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^PRIV(jit_exec)(const PUBL(extra) *extra_data, const pcre_uchar *subject,$/;"	f	typeref:typename:int
PRIV	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^PRIV(jit_free)(void *executable_funcs)$/;"	f	typeref:typename:void
PRIV	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^PRIV(jit_get_size)(void *executable_funcs)$/;"	f	typeref:typename:int
PRIV	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^PRIV(jit_get_target)(void)$/;"	f	typeref:typename:const char *
PRIV	extern/libgit2/deps/pcre/pcre_newline.c	/^PRIV(is_newline)(PCRE_PUCHAR ptr, int type, PCRE_PUCHAR endptr, int *lenptr,$/;"	f	typeref:typename:BOOL
PRIV	extern/libgit2/deps/pcre/pcre_newline.c	/^PRIV(was_newline)(PCRE_PUCHAR ptr, int type, PCRE_PUCHAR startptr, int *lenptr,$/;"	f	typeref:typename:BOOL
PRIV	extern/libgit2/deps/pcre/pcre_ord2utf8.c	/^PRIV(ord2utf)(pcre_uint32 cvalue, pcre_uchar *buffer)$/;"	f	typeref:typename:unsigned int
PRIV	extern/libgit2/deps/pcre/pcre_printint.c	/^#define PRIV(/;"	d	file:
PRIV	extern/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strcmp_uc_c8)(const pcre_uchar *str1, const char *str2)$/;"	f	typeref:typename:int
PRIV	extern/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strcmp_uc_c8_utf)(const pcre_uchar *str1, const char *str2)$/;"	f	typeref:typename:int
PRIV	extern/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strcmp_uc_uc)(const pcre_uchar *str1, const pcre_uchar *str2)$/;"	f	typeref:typename:int
PRIV	extern/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strcmp_uc_uc_utf)(const pcre_uchar *str1, const pcre_uchar *str2)$/;"	f	typeref:typename:int
PRIV	extern/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strlen_uc)(const pcre_uchar *str)$/;"	f	typeref:typename:unsigned int
PRIV	extern/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strncmp_uc_c8)(const pcre_uchar *str1, const char *str2, unsigned int num)$/;"	f	typeref:typename:int
PRIV	extern/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strncmp_uc_uc)(const pcre_uchar *str1, const pcre_uchar *str2, unsigned int num)$/;"	f	typeref:typename:int
PRIV	extern/libgit2/deps/pcre/pcre_valid_utf8.c	/^PRIV(valid_utf)(PCRE_PUCHAR string, int length, int *erroroffset)$/;"	f	typeref:typename:int
PRIV	extern/libgit2/deps/pcre/pcre_xclass.c	/^PRIV(xclass)(pcre_uint32 c, const pcre_uchar *data, BOOL utf)$/;"	f	typeref:typename:BOOL
PRIVATE_COMPAT_H__	extern/libgit2/deps/ntlmclient/compat.h	/^#define PRIVATE_COMPAT_H__$/;"	d
PRIVATE_CRYPT_COMMONCRYPTO_H__	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.h	/^#define PRIVATE_CRYPT_COMMONCRYPTO_H__$/;"	d
PRIVATE_CRYPT_COMMON_H__	extern/libgit2/deps/ntlmclient/crypt.h	/^#define PRIVATE_CRYPT_COMMON_H__$/;"	d
PRIVATE_CRYPT_MBEDTLS_H__	extern/libgit2/deps/ntlmclient/crypt_mbedtls.h	/^#define PRIVATE_CRYPT_MBEDTLS_H__$/;"	d
PRIVATE_CRYPT_OPENSSL_H__	extern/libgit2/deps/ntlmclient/crypt_openssl.h	/^#define PRIVATE_CRYPT_OPENSSL_H__$/;"	d
PRIVATE_DATA	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define PRIVATE_DATA(/;"	d	file:
PRIVATE_NTLM_H__	extern/libgit2/deps/ntlmclient/ntlm.h	/^#define PRIVATE_NTLM_H__$/;"	d
PRIVATE_UNICODE_H__	extern/libgit2/deps/ntlmclient/unicode.h	/^#define PRIVATE_UNICODE_H__$/;"	d
PRIVATE_UTIL_H__	extern/libgit2/deps/ntlmclient/util.h	/^#define PRIVATE_UTIL_H__$/;"	d
PRIXZ	extern/libgit2/src/cc-compat.h	/^#		define PRIXZ /;"	d
PRIXZ	extern/libgit2/src/cc-compat.h	/^#	define PRIXZ /;"	d
PRId64	extern/libgit2/src/cc-compat.h	/^#		define PRId64 /;"	d
PRIdZ	extern/libgit2/examples/checkout.c	/^#	define PRIdZ /;"	d	file:
PRIdZ	extern/libgit2/src/cc-compat.h	/^#		define PRIdZ /;"	d
PRIdZ	extern/libgit2/src/cc-compat.h	/^#	define PRIdZ /;"	d
PRIuZ	extern/libgit2/examples/checkout.c	/^#	define PRIuZ /;"	d	file:
PRIuZ	extern/libgit2/examples/common.h	/^#	define PRIuZ /;"	d
PRIuZ	extern/libgit2/src/cc-compat.h	/^#		define PRIuZ /;"	d
PRIuZ	extern/libgit2/src/cc-compat.h	/^#	define PRIuZ /;"	d
PRIuZ	extern/libgit2/tests/clar.c	/^#		define PRIuZ /;"	d	file:
PRIxZ	extern/libgit2/examples/checkout.c	/^#	define PRIxZ /;"	d	file:
PRIxZ	extern/libgit2/src/cc-compat.h	/^#		define PRIxZ /;"	d
PRIxZ	extern/libgit2/src/cc-compat.h	/^#	define PRIxZ /;"	d
PRIxZ	extern/libgit2/tests/clar.c	/^#		define PRIxZ /;"	d	file:
PROFILE	extern/libgit2/CMakeLists.txt	/^OPTION(PROFILE				"Generate profiling information"			OFF)$/;"	D
PROJECT_CONTACT	extern/OpenXLSX/CMakeLists.txt	/^set(PROJECT_CONTACT "kenneth.balslev@gmail.com")$/;"	v
PROJECT_DESCRIPTION	extern/OpenXLSX/CMakeLists.txt	/^set(PROJECT_DESCRIPTION "A C++17 library for reading, writing and modifying Excel spreadsheets")$/;"	v
PROJECT_URL	extern/OpenXLSX/CMakeLists.txt	/^set(PROJECT_URL "https:\/\/github.com\/troldal\/OpenXLSX")$/;"	v
PROJECT_VENDOR	extern/OpenXLSX/CMakeLists.txt	/^set(PROJECT_VENDOR "Kenneth Troldal Balslev")$/;"	v
PROXY_CONNECTION	extern/libgit2/deps/http-parser/http_parser.c	/^#define PROXY_CONNECTION /;"	d	file:
PSEND	extern/libgit2/deps/pcre/pcre_compile.c	/^#define PSEND /;"	d	file:
PSEND	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define PSEND /;"	d	file:
PSEND	extern/libgit2/deps/pcre/pcre_exec.c	/^#define PSEND /;"	d	file:
PSSTART	extern/libgit2/deps/pcre/pcre_compile.c	/^#define PSSTART /;"	d	file:
PSSTART	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define PSSTART /;"	d	file:
PSSTART	extern/libgit2/deps/pcre/pcre_exec.c	/^#define PSSTART /;"	d	file:
PTRDIFF_MAX	extern/libgit2/include/git2/stdint.h	/^#  define PTRDIFF_MAX /;"	d
PTRDIFF_MIN	extern/libgit2/include/git2/stdint.h	/^#  define PTRDIFF_MIN /;"	d
PT_ALNUM	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_ALNUM /;"	d
PT_ANY	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_ANY /;"	d
PT_CLIST	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_CLIST /;"	d
PT_GC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_GC /;"	d
PT_LAMP	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_LAMP /;"	d
PT_PC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_PC /;"	d
PT_PXGRAPH	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_PXGRAPH /;"	d
PT_PXPRINT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_PXPRINT /;"	d
PT_PXPUNCT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_PXPUNCT /;"	d
PT_PXSPACE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_PXSPACE /;"	d
PT_SC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_SC /;"	d
PT_SPACE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_SPACE /;"	d
PT_TABSIZE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_TABSIZE /;"	d
PT_UCNC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_UCNC /;"	d
PT_WORD	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PT_WORD /;"	d
PUBL	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PUBL(/;"	d
PUBLIC_COMPILE_OPTIONS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PUBLIC_COMPILE_OPTIONS /;"	d
PUBLIC_DFA_EXEC_OPTIONS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PUBLIC_DFA_EXEC_OPTIONS /;"	d
PUBLIC_EXEC_OPTIONS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PUBLIC_EXEC_OPTIONS /;"	d
PUBLIC_JIT_EXEC_OPTIONS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PUBLIC_JIT_EXEC_OPTIONS /;"	d
PUBLIC_STUDY_OPTIONS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PUBLIC_STUDY_OPTIONS /;"	d
PUGIXML_API	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#	define PUGIXML_API$/;"	d
PUGIXML_CHAR	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#	define PUGIXML_CHAR /;"	d
PUGIXML_CLASS	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#	define PUGIXML_CLASS /;"	d
PUGIXML_DEPRECATED	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#		define PUGIXML_DEPRECATED /;"	d
PUGIXML_DEPRECATED	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#		define PUGIXML_DEPRECATED$/;"	d
PUGIXML_FUNCTION	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#	define PUGIXML_FUNCTION /;"	d
PUGIXML_HAS_LONG_LONG	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#		define PUGIXML_HAS_LONG_LONG$/;"	d
PUGIXML_HAS_MOVE	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#		define PUGIXML_HAS_MOVE$/;"	d
PUGIXML_HEADER_ONLY	extern/OpenXLSX/library/pugixml/pugiconfig.hpp	/^#define PUGIXML_HEADER_ONLY$/;"	d
PUGIXML_NOEXCEPT	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#		define PUGIXML_NOEXCEPT /;"	d
PUGIXML_NOEXCEPT	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#		define PUGIXML_NOEXCEPT$/;"	d
PUGIXML_NOEXCEPT_IF_NOT_COMPACT	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#	define PUGIXML_NOEXCEPT_IF_NOT_COMPACT /;"	d
PUGIXML_NOEXCEPT_IF_NOT_COMPACT	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#	define PUGIXML_NOEXCEPT_IF_NOT_COMPACT$/;"	d
PUGIXML_NO_XPATH	extern/OpenXLSX/library/pugixml/pugiconfig.hpp	/^#define PUGIXML_NO_XPATH$/;"	d
PUGIXML_OVERRIDE	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#		define PUGIXML_OVERRIDE /;"	d
PUGIXML_OVERRIDE	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#		define PUGIXML_OVERRIDE$/;"	d
PUGIXML_SOURCE	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#	define PUGIXML_SOURCE /;"	d
PUGIXML_TEXT	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#	define PUGIXML_TEXT(/;"	d
PUGIXML_VERSION	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^#	define PUGIXML_VERSION /;"	d
PUGI__CHECK_ERROR	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__CHECK_ERROR(/;"	d	file:
PUGI__DMC_VOLATILE	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__DMC_VOLATILE /;"	d	file:
PUGI__DMC_VOLATILE	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__DMC_VOLATILE$/;"	d	file:
PUGI__ENDSEG	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__ENDSEG(/;"	d	file:
PUGI__ENDSWITH	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__ENDSWITH(/;"	d	file:
PUGI__FN	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__FN /;"	d	file:
PUGI__FN	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__FN$/;"	d	file:
PUGI__FN_NO_INLINE	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__FN_NO_INLINE /;"	d	file:
PUGI__GETHEADER_IMPL	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	d	file:
PUGI__GETHEADER_IMPL	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    #define PUGI__GETHEADER_IMPL(/;"	d	file:
PUGI__GETPAGE	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__GETPAGE(/;"	d	file:
PUGI__GETPAGE_IMPL	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	#define PUGI__GETPAGE_IMPL(/;"	d	file:
PUGI__GETPAGE_IMPL	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    #define PUGI__GETPAGE_IMPL(/;"	d	file:
PUGI__IS_CHARTYPE	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__IS_CHARTYPE(/;"	d	file:
PUGI__IS_CHARTYPEX	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__IS_CHARTYPEX(/;"	d	file:
PUGI__IS_CHARTYPE_IMPL	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    #define PUGI__IS_CHARTYPE_IMPL(/;"	d	file:
PUGI__MSVC_CRT_VERSION	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__MSVC_CRT_VERSION /;"	d	file:
PUGI__NODETYPE	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__NODETYPE(/;"	d	file:
PUGI__NO_INLINE	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__NO_INLINE /;"	d	file:
PUGI__NO_INLINE	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__NO_INLINE$/;"	d	file:
PUGI__NS_BEGIN	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#		define PUGI__NS_BEGIN /;"	d	file:
PUGI__NS_BEGIN	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__NS_BEGIN /;"	d	file:
PUGI__NS_END	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#		define PUGI__NS_END /;"	d	file:
PUGI__NS_END	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__NS_END /;"	d	file:
PUGI__OPTSET	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__OPTSET(/;"	d	file:
PUGI__POPNODE	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__POPNODE(/;"	d	file:
PUGI__PUSHNODE	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__PUSHNODE(/;"	d	file:
PUGI__SCANCHAR	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__SCANCHAR(/;"	d	file:
PUGI__SCANCHARTYPE	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__SCANCHARTYPE(/;"	d	file:
PUGI__SCANFOR	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__SCANFOR(/;"	d	file:
PUGI__SCANWHILE	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__SCANWHILE(/;"	d	file:
PUGI__SCANWHILE_UNROLL	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__SCANWHILE_UNROLL(/;"	d	file:
PUGI__SKIPWS	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__SKIPWS(/;"	d	file:
PUGI__SNPRINTF	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	d	file:
PUGI__SNPRINTF	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__SNPRINTF /;"	d	file:
PUGI__SNPRINTF	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__SNPRINTF(/;"	d	file:
PUGI__STATIC_ASSERT	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__STATIC_ASSERT(/;"	d	file:
PUGI__THROW_ERROR	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define PUGI__THROW_ERROR(/;"	d	file:
PUGI__UNLIKELY	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__UNLIKELY(/;"	d	file:
PUGI__UNSIGNED_OVERFLOW	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#		define PUGI__UNSIGNED_OVERFLOW /;"	d	file:
PUGI__UNSIGNED_OVERFLOW	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#		define PUGI__UNSIGNED_OVERFLOW$/;"	d	file:
PUGI__UNSIGNED_OVERFLOW	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define PUGI__UNSIGNED_OVERFLOW$/;"	d	file:
PULL	extern/libgit2/deps/zlib/infback.c	/^#define PULL(/;"	d	file:
PULLBYTE	extern/libgit2/deps/zlib/infback.c	/^#define PULLBYTE(/;"	d	file:
PULLBYTE	extern/libgit2/deps/zlib/inflate.c	/^#define PULLBYTE(/;"	d	file:
PUSH_BACKTRACK	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define PUSH_BACKTRACK(/;"	d	file:
PUSH_BACKTRACK_NOVALUE	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define PUSH_BACKTRACK_NOVALUE(/;"	d	file:
PUSH_NEXT	extern/libgit2/src/tsort.c	/^#define PUSH_NEXT(/;"	d	file:
PUT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PUT(/;"	d
PUT2	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PUT2(/;"	d
PUT2INC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PUT2INC(/;"	d
PUTINC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define PUTINC(/;"	d
P_REG_EXTENDED	extern/libgit2/src/posix_regex.h	/^# define P_REG_EXTENDED /;"	d
P_REG_ICASE	extern/libgit2/src/posix_regex.h	/^# define P_REG_ICASE /;"	d
P_REG_NOMATCH	extern/libgit2/src/posix_regex.h	/^# define P_REG_NOMATCH /;"	d
Parameters	extern/libgit2/docs/conventions.md	/^## Parameters$/;"	s
ParseXMLData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^bool Impl::XLAppProperties::ParseXMLData() {$/;"	f	class:Impl::XLAppProperties	typeref:typename:bool
ParseXMLData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLChartsheet_Impl.cpp	/^bool Impl::XLChartsheet::ParseXMLData() {$/;"	f	class:Impl::XLChartsheet	typeref:typename:bool
ParseXMLData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLContentTypes_Impl.cpp	/^bool Impl::XLContentTypes::ParseXMLData() {$/;"	f	class:Impl::XLContentTypes	typeref:typename:bool
ParseXMLData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCoreProperties_Impl.cpp	/^bool Impl::XLCoreProperties::ParseXMLData() {$/;"	f	class:Impl::XLCoreProperties	typeref:typename:bool
ParseXMLData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^bool Impl::XLRelationships::ParseXMLData() {$/;"	f	class:Impl::XLRelationships	typeref:typename:bool
ParseXMLData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSharedStrings_Impl.cpp	/^bool Impl::XLSharedStrings::ParseXMLData() {$/;"	f	class:Impl::XLSharedStrings	typeref:typename:bool
ParseXMLData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^bool Impl::XLWorkbook::ParseXMLData() {$/;"	f	class:Impl::XLWorkbook	typeref:typename:bool
ParseXMLData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^bool Impl::XLWorksheet::ParseXMLData() {$/;"	f	class:Impl::XLWorksheet	typeref:typename:bool
Patents	extern/OpenXLSX/library/zippy/Zippy/miniz/readme.md	/^## Patents$/;"	s
Path	extern/OpenXLSX/library/openxlsx/implementation/sources/XLContentTypes_Impl.cpp	/^const string Impl::XLContentItem::Path() const {$/;"	f	class:Impl::XLContentItem	typeref:typename:const string
PathBuffer	extern/libgit2/src/win32/reparse.h	/^			WCHAR  PathBuffer[1];$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470208	typeref:typename:WCHAR[1]
PathBuffer	extern/libgit2/src/win32/reparse.h	/^			WCHAR  PathBuffer[1];$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470308	typeref:typename:WCHAR[1]
Picking Actions	extern/libgit2/docs/checkout-internals.md	/^Picking Actions$/;"	c
Pith	oset.cpp	/^  using Pith = void (*)(const O &);$/;"	t	struct:union_bark	file:
Porting Code From Other Open-Source Projects	extern/libgit2/docs/contributing.md	/^## Porting Code From Other Open-Source Projects$/;"	s
Pos	extern/libgit2/deps/zlib/deflate.h	/^typedef ush Pos;$/;"	t	typeref:typename:ush
Posf	extern/libgit2/deps/zlib/deflate.h	/^typedef Pos FAR Posf;$/;"	t	typeref:typename:Pos FAR
PreIncrementable	extern/NamedType/underlying_functionalities.hpp	/^struct PreIncrementable : crtp<T, PreIncrementable>$/;"	s	namespace:fluent
PreIncrementable	ntskills.hpp	/^template <typename T> struct PreIncrementable : crtp<T, PreIncrementable> {$/;"	s	namespace:nt
PrepareDocument	extern/OpenXLSX/tests/c++/Test00_Main.cpp	/^void PrepareDocument(std::string name) {$/;"	f	typeref:typename:void
PrependChartsheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::PrependChartsheetName(const std::string& sheetName) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
PrependSheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::PrependSheetName(const std::string& sheetName) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
PrependWorksheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::PrependWorksheetName(const std::string& sheetName) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
Prerequisites** for building fuzz targets:	extern/libgit2/docs/fuzzing.md	/^## Prerequisites** for building fuzz targets:$/;"	s
PrintFooter	extern/OpenXLSX/benchmark/table_printer.h	/^    void TablePrinter::PrintFooter() {$/;"	f	class:bprinter::TablePrinter	typeref:typename:void
PrintHeader	extern/OpenXLSX/benchmark/table_printer.h	/^    void TablePrinter::PrintHeader() {$/;"	f	class:bprinter::TablePrinter	typeref:typename:void
PrintHorizontalLine	extern/OpenXLSX/benchmark/table_printer.h	/^    void TablePrinter::PrintHorizontalLine(char character) {$/;"	f	class:bprinter::TablePrinter	typeref:typename:void
PrintNameLength	extern/libgit2/src/win32/reparse.h	/^			USHORT PrintNameLength;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470208	typeref:typename:USHORT
PrintNameLength	extern/libgit2/src/win32/reparse.h	/^			USHORT PrintNameLength;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470308	typeref:typename:USHORT
PrintNameOffset	extern/libgit2/src/win32/reparse.h	/^			USHORT PrintNameOffset;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470208	typeref:typename:USHORT
PrintNameOffset	extern/libgit2/src/win32/reparse.h	/^			USHORT PrintNameOffset;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470308	typeref:typename:USHORT
PrintTitle	extern/OpenXLSX/benchmark/table_printer.h	/^    void TablePrinter::PrintTitle(const std::string& title) {$/;"	f	class:bprinter::TablePrinter	typeref:typename:void
Printable	extern/NamedType/underlying_functionalities.hpp	/^struct Printable : crtp<T, Printable>$/;"	s	namespace:fluent
Printable	ntskills.hpp	/^template <typename T> struct Printable : crtp<T, Printable> {$/;"	s	namespace:nt
PrinterSettings	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        PrinterSettings,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
ProcessUrlAction	extern/libgit2/deps/winhttp/urlmon.h	/^	LPVOID ProcessUrlAction;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
Projects For LibGit2	extern/libgit2/docs/projects.md	/^Projects For LibGit2$/;"	c
Property	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::Property(const string& name) const {$/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
Property	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCoreProperties_Impl.cpp	/^const XMLNode Impl::XLCoreProperties::Property(const std::string& name) const {$/;"	f	class:Impl::XLCoreProperties	typeref:typename:const XMLNode
Ptr	extern/libgit2/src/win32/thread.h	/^typedef struct { void *Ptr; } GIT_SRWLOCK;$/;"	m	struct:__anon7162bc2d0208	typeref:typename:void *
Public Header Template	extern/libgit2/docs/conventions.md	/^## Public Header Template$/;"	s
PugiXML	extern/OpenXLSX/library/pugixml/CMakeLists.txt	/^add_library(PugiXML INTERFACE)$/;"	t
Pull Requests	extern/libgit2/docs/contributing.md	/^## Pull Requests$/;"	s
QUIET_FILE	extern/libgit2/src/rebase.c	/^#define QUIET_FILE /;"	d	file:
QtXlsx	extern/OpenXLSX/README.md	/^### QtXlsx$/;"	S
QueryCustomPolicy	extern/libgit2/deps/winhttp/urlmon.h	/^	LPVOID QueryCustomPolicy;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
Quick Start	extern/libgit2/README.md	/^Quick Start$/;"	c
R	extern/libgit2/src/wildmatch.c	/^	R = GIT_REGEX_SPECIAL,	\/* $, (, ), +, ., ^, {, | *\/$/;"	e	enum:__anon17a406cb0103	file:
RABIN_SHIFT	extern/libgit2/src/delta.c	/^#define RABIN_SHIFT /;"	d	file:
RABIN_WINDOW	extern/libgit2/src/delta.c	/^#define RABIN_WINDOW /;"	d	file:
RANK	extern/libgit2/deps/zlib/deflate.c	/^#define RANK(/;"	d	file:
READLINE_FOUND	extern/libgit2/deps/pcre/cmake/FindReadline.cmake	/^  set(READLINE_FOUND TRUE)$/;"	v
READ_CHAR_MAX	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define READ_CHAR_MAX /;"	d	file:
REAL_GET_UCD	extern/libgit2/deps/pcre/pcre_internal.h	/^#define REAL_GET_UCD(/;"	d
REAL_PCRE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define REAL_PCRE /;"	d
REAL_PCRE_FLAGS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define REAL_PCRE_FLAGS(/;"	d
REAL_PCRE_MAGIC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define REAL_PCRE_MAGIC(/;"	d
REAL_PCRE_OPTIONS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define REAL_PCRE_OPTIONS(/;"	d
REAL_PCRE_SIZE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define REAL_PCRE_SIZE(/;"	d
REBASE_APPLY_DIR	extern/libgit2/src/rebase.c	/^#define REBASE_APPLY_DIR /;"	d	file:
REBASE_DIR_MODE	extern/libgit2/src/rebase.c	/^#define REBASE_DIR_MODE /;"	d	file:
REBASE_FILE_MODE	extern/libgit2/src/rebase.c	/^#define REBASE_FILE_MODE /;"	d	file:
REBASE_MERGE_DIR	extern/libgit2/src/rebase.c	/^#define REBASE_MERGE_DIR /;"	d	file:
REC	extern/libgit2/src/xdiff/xhistogram.c	/^#define REC(/;"	d	file:
RECORD_CALLBACKS_INIT	extern/libgit2/tests/online/push_util.h	/^#define RECORD_CALLBACKS_INIT(/;"	d
REC_STACK_SAVE_MAX	extern/libgit2/deps/pcre/pcre_exec.c	/^#define REC_STACK_SAVE_MAX /;"	d	file:
REFLOG	extern/libgit2/tests/worktree/reflog.c	/^#define REFLOG /;"	d	file:
REFLOG_MESSAGE	extern/libgit2/tests/worktree/reflog.c	/^#define REFLOG_MESSAGE /;"	d	file:
REFNAME_DECOMPOSED	extern/libgit2/tests/refs/unicode.c	/^#define REFNAME_DECOMPOSED /;"	d	file:
REFSPEC	extern/libgit2/tests/online/remotes.c	/^#define REFSPEC /;"	d	file:
REGEX_BACKEND	extern/libgit2/CMakeLists.txt	/^   SET(REGEX_BACKEND			"" CACHE STRING "Regular expression implementation. One of regcomp_l, pcr/;"	v
REGEX_BACKEND	extern/libgit2/src/CMakeLists.txt	/^		SET(REGEX_BACKEND "builtin")$/;"	v
REGEX_BACKEND	extern/libgit2/src/CMakeLists.txt	/^		SET(REGEX_BACKEND "pcre")$/;"	v
REGEX_BACKEND	extern/libgit2/src/CMakeLists.txt	/^		SET(REGEX_BACKEND "regcomp_l")$/;"	v
REGISTER	extern/libgit2/deps/pcre/pcre_exec.c	/^#define REGISTER /;"	d	file:
REGISTER	extern/libgit2/deps/pcre/pcre_exec.c	/^#define REGISTER$/;"	d	file:
REG_MSYSGIT_INSTALL	extern/libgit2/src/win32/findfile.c	/^#define REG_MSYSGIT_INSTALL /;"	d	file:
REG_MSYSGIT_INSTALL_LOCAL	extern/libgit2/src/win32/findfile.c	/^#define REG_MSYSGIT_INSTALL_LOCAL /;"	d	file:
REG_NEGATE	extern/libgit2/src/diff_driver.c	/^	REG_NEGATE = (1 << 15) \/* get out of the way of existing flags *\/$/;"	e	enum:__anon6fb9a4920303	file:
RELATIVE_DEDENT_PENALTY	extern/libgit2/src/xdiff/xdiffi.c	/^#define RELATIVE_DEDENT_PENALTY /;"	d	file:
RELATIVE_DEDENT_WITH_BLANK_PENALTY	extern/libgit2/src/xdiff/xdiffi.c	/^#define RELATIVE_DEDENT_WITH_BLANK_PENALTY /;"	d	file:
RELATIVE_INDENT_PENALTY	extern/libgit2/src/xdiff/xdiffi.c	/^#define RELATIVE_INDENT_PENALTY /;"	d	file:
RELATIVE_INDENT_WITH_BLANK_PENALTY	extern/libgit2/src/xdiff/xdiffi.c	/^#define RELATIVE_INDENT_WITH_BLANK_PENALTY /;"	d	file:
RELATIVE_OUTDENT_PENALTY	extern/libgit2/src/xdiff/xdiffi.c	/^#define RELATIVE_OUTDENT_PENALTY /;"	d	file:
RELATIVE_OUTDENT_WITH_BLANK_PENALTY	extern/libgit2/src/xdiff/xdiffi.c	/^#define RELATIVE_OUTDENT_WITH_BLANK_PENALTY /;"	d	file:
REMOTE_INSTEADOF	extern/libgit2/tests/remote/insteadof.c	/^#define REMOTE_INSTEADOF /;"	d	file:
REMOTE_ORIGIN	extern/libgit2/tests/remote/insteadof.c	/^#define REMOTE_ORIGIN /;"	d	file:
REMOVED_IN_BRANCH_REUC_ENTRY	extern/libgit2/tests/merge/trees/automerge.c	/^#define REMOVED_IN_BRANCH_REUC_ENTRY /;"	d	file:
REMOVED_IN_BRANCH_REUC_ENTRY	extern/libgit2/tests/merge/workdir/simple.c	/^#define REMOVED_IN_BRANCH_REUC_ENTRY /;"	d	file:
REMOVED_IN_MASTER_REUC_ENTRY	extern/libgit2/tests/merge/trees/automerge.c	/^#define REMOVED_IN_MASTER_REUC_ENTRY /;"	d	file:
REMOVED_IN_MASTER_REUC_ENTRY	extern/libgit2/tests/merge/workdir/simple.c	/^#define REMOVED_IN_MASTER_REUC_ENTRY /;"	d	file:
RENAME_MODIFICATION_COMMIT	extern/libgit2/tests/diff/rename.c	/^#define RENAME_MODIFICATION_COMMIT /;"	d	file:
REP1024	extern/libgit2/tests/clar_libgit2.h	/^#define REP1024(/;"	d
REP15	extern/libgit2/tests/clar_libgit2.h	/^#define REP15(/;"	d
REP16	extern/libgit2/tests/clar_libgit2.h	/^#define REP16(/;"	d
REP256	extern/libgit2/tests/clar_libgit2.h	/^#define REP256(/;"	d
REP4	extern/libgit2/tests/clar_libgit2.h	/^#define REP4(/;"	d
REPARSE_DATA_HEADER_SIZE	extern/libgit2/src/win32/reparse.h	/^#define REPARSE_DATA_HEADER_SIZE	/;"	d
REPARSE_DATA_MOUNTPOINT_HEADER_SIZE	extern/libgit2/src/win32/reparse.h	/^#define REPARSE_DATA_MOUNTPOINT_HEADER_SIZE	/;"	d
REPARSE_DATA_UNION_SIZE	extern/libgit2/src/win32/reparse.h	/^#define REPARSE_DATA_UNION_SIZE	/;"	d
REPEAT	extern/libgit2/tests/object/cache.c	/^#define REPEAT /;"	d	file:
REPEAT	extern/libgit2/tests/threads/refdb.c	/^#define REPEAT /;"	d	file:
REPOSITORY_ALTERNATE_FOLDER	extern/libgit2/tests/repo/discover.c	/^#define REPOSITORY_ALTERNATE_FOLDER /;"	d	file:
REPOSITORY_ALTERNATE_FOLDER_SUB	extern/libgit2/tests/repo/discover.c	/^#define REPOSITORY_ALTERNATE_FOLDER_SUB /;"	d	file:
REPOSITORY_ALTERNATE_FOLDER_SUB_SUB	extern/libgit2/tests/repo/discover.c	/^#define REPOSITORY_ALTERNATE_FOLDER_SUB_SUB /;"	d	file:
REPOSITORY_ALTERNATE_FOLDER_SUB_SUB_SUB	extern/libgit2/tests/repo/discover.c	/^#define REPOSITORY_ALTERNATE_FOLDER_SUB_SUB_SUB /;"	d	file:
REPO_NAME	extern/libgit2/tests/stash/foreach.c	/^#define REPO_NAME /;"	d	file:
REPO_PATH	extern/libgit2/tests/remote/insteadof.c	/^#define REPO_PATH /;"	d	file:
REPZ_11_138	extern/libgit2/deps/zlib/trees.c	/^#define REPZ_11_138 /;"	d	file:
REPZ_3_10	extern/libgit2/deps/zlib/trees.c	/^#define REPZ_3_10 /;"	d	file:
REP_3_6	extern/libgit2/deps/zlib/trees.c	/^#define REP_3_6 /;"	d	file:
REQ_BYTE_MAX	extern/libgit2/deps/pcre/pcre_internal.h	/^#define REQ_BYTE_MAX /;"	d
REQ_CASELESS	extern/libgit2/deps/pcre/pcre_compile.c	/^#define REQ_CASELESS /;"	d	file:
REQ_NONE	extern/libgit2/deps/pcre/pcre_compile.c	/^#define REQ_NONE /;"	d	file:
REQ_UNSET	extern/libgit2/deps/pcre/pcre_compile.c	/^#define REQ_UNSET /;"	d	file:
REQ_VARY	extern/libgit2/deps/pcre/pcre_compile.c	/^#define REQ_VARY /;"	d	file:
RESTORE	extern/libgit2/deps/zlib/infback.c	/^#define RESTORE(/;"	d	file:
RESTORE	extern/libgit2/deps/zlib/inflate.c	/^#define RESTORE(/;"	d	file:
RESULT	extern/libgit2/src/commit_list.h	/^#define RESULT /;"	d
RETURN_ADDR	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define RETURN_ADDR /;"	d	file:
REVERSED_DATA_LEN	extern/libgit2/tests/filter/custom.c	/^#define REVERSED_DATA_LEN /;"	d	file:
REVERSED_MAGIC_NUMBER	extern/libgit2/deps/pcre/pcre_internal.h	/^#define REVERSED_MAGIC_NUMBER /;"	d
REVERSE_FILTER_PRIORITY	extern/libgit2/tests/filter/custom.c	/^#define REVERSE_FILTER_PRIORITY /;"	d	file:
REWRITE_COPY_COMMIT	extern/libgit2/tests/diff/rename.c	/^#define REWRITE_COPY_COMMIT /;"	d	file:
REWRITE_DELETE_COMMIT	extern/libgit2/tests/diff/rename.c	/^#define REWRITE_DELETE_COMMIT /;"	d	file:
REWRITTEN_FILE	extern/libgit2/src/rebase.c	/^#define REWRITTEN_FILE /;"	d	file:
RM1	extern/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anonbd5617990103	file:
RM10	extern/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anonbd5617990103	file:
RM11	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anonbd5617990103	file:
RM12	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anonbd5617990103	file:
RM13	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anonbd5617990103	file:
RM14	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anonbd5617990103	file:
RM15	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anonbd5617990103	file:
RM16	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anonbd5617990103	file:
RM17	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anonbd5617990103	file:
RM18	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anonbd5617990103	file:
RM19	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anonbd5617990103	file:
RM2	extern/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anonbd5617990103	file:
RM20	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anonbd5617990103	file:
RM21	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anonbd5617990103	file:
RM22	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anonbd5617990103	file:
RM23	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anonbd5617990103	file:
RM24	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anonbd5617990103	file:
RM25	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anonbd5617990103	file:
RM26	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anonbd5617990103	file:
RM27	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anonbd5617990103	file:
RM28	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anonbd5617990103	file:
RM29	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anonbd5617990103	file:
RM3	extern/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anonbd5617990103	file:
RM30	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anonbd5617990103	file:
RM31	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anonbd5617990103	file:
RM32	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anonbd5617990103	file:
RM33	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anonbd5617990103	file:
RM34	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anonbd5617990103	file:
RM35	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anonbd5617990103	file:
RM36	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anonbd5617990103	file:
RM37	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anonbd5617990103	file:
RM38	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anonbd5617990103	file:
RM39	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anonbd5617990103	file:
RM4	extern/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anonbd5617990103	file:
RM40	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anonbd5617990103	file:
RM41	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anonbd5617990103	file:
RM42	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anonbd5617990103	file:
RM43	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anonbd5617990103	file:
RM44	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anonbd5617990103	file:
RM45	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anonbd5617990103	file:
RM46	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anonbd5617990103	file:
RM47	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anonbd5617990103	file:
RM48	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anonbd5617990103	file:
RM49	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anonbd5617990103	file:
RM5	extern/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anonbd5617990103	file:
RM50	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anonbd5617990103	file:
RM51	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anonbd5617990103	file:
RM52	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anonbd5617990103	file:
RM53	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anonbd5617990103	file:
RM54	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anonbd5617990103	file:
RM55	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anonbd5617990103	file:
RM56	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anonbd5617990103	file:
RM57	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anonbd5617990103	file:
RM58	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anonbd5617990103	file:
RM59	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anonbd5617990103	file:
RM6	extern/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anonbd5617990103	file:
RM60	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anonbd5617990103	file:
RM61	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anonbd5617990103	file:
RM62	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anonbd5617990103	file:
RM63	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anonbd5617990103	file:
RM64	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anonbd5617990103	file:
RM65	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anonbd5617990103	file:
RM66	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anonbd5617990103	file:
RM67	extern/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anonbd5617990103	file:
RM7	extern/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anonbd5617990103	file:
RM8	extern/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anonbd5617990103	file:
RM9	extern/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anonbd5617990103	file:
RMATCH	extern/libgit2/deps/pcre/pcre_exec.c	/^#define RMATCH(/;"	d	file:
RM_RETRY_COUNT	extern/libgit2/tests/clar/fs.h	/^#define RM_RETRY_COUNT	/;"	d
RM_RETRY_DELAY	extern/libgit2/tests/clar/fs.h	/^#define RM_RETRY_DELAY	/;"	d
ROOM	extern/libgit2/deps/zlib/infback.c	/^#define ROOM(/;"	d	file:
ROOT_PREFIX	extern/libgit2/tests/config/conditionals.c	/^# define ROOT_PREFIX /;"	d	file:
ROOT_PREFIX	extern/libgit2/tests/config/conditionals.c	/^# define ROOT_PREFIX$/;"	d	file:
RREF_ANY	extern/libgit2/deps/pcre/pcre_internal.h	/^#define RREF_ANY /;"	d
RRETURN	extern/libgit2/deps/pcre/pcre_exec.c	/^#define RRETURN(/;"	d	file:
R_OK	extern/libgit2/src/posix.h	/^#define R_OK /;"	d
Range	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^Impl::XLCellRange Impl::XLWorksheet::Range() {$/;"	f	class:Impl::XLWorksheet	typeref:typename:Impl::XLCellRange
Range	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^Impl::XLCellRange Impl::XLWorksheet::Range(const XLCellReference& topLeft, const XLCellReference/;"	f	class:Impl::XLWorksheet	typeref:typename:Impl::XLCellRange
Range	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const Impl::XLCellRange Impl::XLWorksheet::Range() const {$/;"	f	class:Impl::XLWorksheet	typeref:typename:const Impl::XLCellRange
Range	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const Impl::XLCellRange Impl::XLWorksheet::Range(const XLCellReference& topLeft,$/;"	f	class:Impl::XLWorksheet	typeref:typename:const Impl::XLCellRange
Range	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^XLCellRange XLWorksheet::Range() {$/;"	f	class:XLWorksheet	typeref:typename:XLCellRange
Range	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^XLCellRange XLWorksheet::Range(const XLCellReference& topLeft, const XLCellReference& bottomRigh/;"	f	class:XLWorksheet	typeref:typename:XLCellRange
Range	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^const XLCellRange XLWorksheet::Range() const {$/;"	f	class:XLWorksheet	typeref:typename:const XLCellRange
Range	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^const XLCellRange XLWorksheet::Range(const XLCellReference& topLeft, const XLCellReference& bott/;"	f	class:XLWorksheet	typeref:typename:const XLCellRange
ReadTest	extern/OpenXLSX/benchmark/Benchmark.cpp	/^unsigned long ReadTest(int repetitions, const std::string& fileName, ostream& destination) {$/;"	f	typeref:typename:unsigned long
Rectangle	extern/NamedType/main.cpp	/^    Rectangle(Width width, Height height) : width_(width.get()), height_(height.get()) {}$/;"	f	class:Rectangle	file:
Rectangle	extern/NamedType/main.cpp	/^class Rectangle$/;"	c	file:
Ref	git.hpp	/^using Ref = nt::NamedType<int, struct RefTag>;$/;"	t	namespace:git	typeref:typename:nt::NamedType<int,struct RefTag>
References	extern/libgit2/docs/fuzzing.md	/^## References$/;"	s
RegistrarForTagAliases	extern/NamedType/catch.hpp	/^    struct RegistrarForTagAliases {$/;"	s	namespace:Catch
RegistrarForTagAliases	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct RegistrarForTagAliases {$/;"	s	namespace:Catch
RelationshipByID	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^Impl::XLRelationshipItem Impl::XLRelationships::RelationshipByID(const std::string& id) const {$/;"	f	class:Impl::XLRelationships	typeref:typename:Impl::XLRelationshipItem
RelationshipByTarget	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^Impl::XLRelationshipItem Impl::XLRelationships::RelationshipByTarget(const std::string& target) /;"	f	class:Impl::XLRelationships	typeref:typename:Impl::XLRelationshipItem
Relationships	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^std::vector<const Impl::XLRelationshipItem*> Impl::XLRelationships::Relationships() const {$/;"	f	class:Impl::XLRelationships	typeref:typename:std::vector<const Impl::XLRelationshipItem * >
Relationships	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^Impl::XLRelationships* Impl::XLWorkbook::Relationships() {$/;"	f	class:Impl::XLWorkbook	typeref:typename:Impl::XLRelationships *
Relationships	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^const Impl::XLRelationships* Impl::XLWorkbook::Relationships() const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:const Impl::XLRelationships *
Releasing the library	extern/libgit2/docs/release.md	/^# Releasing the library$/;"	c
RemoteAddress	extern/libgit2/deps/winhttp/winhttp.h	/^    SOCKADDR_STORAGE RemoteAddress;$/;"	m	struct:__anonb531ffc20808	typeref:typename:SOCKADDR_STORAGE
ReparseDataLength	extern/libgit2/src/win32/reparse.h	/^	USHORT ReparseDataLength;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER	typeref:typename:USHORT
ReparseTag	extern/libgit2/src/win32/reparse.h	/^	ULONG  ReparseTag;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER	typeref:typename:ULONG
Reporting Bugs	extern/libgit2/docs/contributing.md	/^## Reporting Bugs$/;"	s
Reporting a Vulnerability	extern/libgit2/SECURITY.md	/^## Reporting a Vulnerability$/;"	s
Repository and Workdir Path Reporting	extern/libgit2/docs/differences-from-git.md	/^Repository and Workdir Path Reporting$/;"	s
Reserved	extern/libgit2/src/win32/reparse.h	/^	USHORT Reserved;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER	typeref:typename:USHORT
ResultDisposition	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultWas	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
Return codes	extern/libgit2/docs/conventions.md	/^## Return codes$/;"	s
ReusableStringStream	extern/OpenXLSX/tests/catch/catch.hpp	/^    class ReusableStringStream {$/;"	c	namespace:Catch
Row	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^unsigned long Impl::XLCellReference::Row() const {$/;"	f	class:Impl::XLCellReference	typeref:typename:unsigned long
Row	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^Impl::XLRow* Impl::XLWorksheet::Row(unsigned long rowNumber) {$/;"	f	class:Impl::XLWorksheet	typeref:typename:Impl::XLRow *
Row	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const Impl::XLRow* Impl::XLWorksheet::Row(unsigned long rowNumber) const {$/;"	f	class:Impl::XLWorksheet	typeref:typename:const Impl::XLRow *
Row	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellReference.cpp	/^unsigned long XLCellReference::Row() {$/;"	f	class:XLCellReference	typeref:typename:unsigned long
Row	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^XLRow XLWorksheet::Row(unsigned long rowNumber) {$/;"	f	class:XLWorksheet	typeref:typename:XLRow
Row	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^const XLRow XLWorksheet::Row(unsigned long rowNumber) const {$/;"	f	class:XLWorksheet	typeref:typename:const XLRow
RowAsNumber	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^unsigned long Impl::XLCellReference::RowAsNumber(const std::string& row) {$/;"	f	class:Impl::XLCellReference	typeref:typename:unsigned long
RowAsString	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^std::string Impl::XLCellReference::RowAsString(unsigned long row) {$/;"	f	class:Impl::XLCellReference	typeref:typename:std::string
RowCount	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^unsigned long Impl::XLWorksheet::RowCount() const noexcept {$/;"	f	class:Impl::XLWorksheet	typeref:typename:unsigned long
RowCount	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^unsigned long XLWorksheet::RowCount() const noexcept {$/;"	f	class:XLWorksheet	typeref:typename:unsigned long
RowNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^XMLNode Impl::XLRow::RowNode() const {$/;"	f	class:Impl::XLRow	typeref:typename:XMLNode
RowNumber	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^int64_t Impl::XLRow::RowNumber() const {$/;"	f	class:Impl::XLRow	typeref:typename:int64_t
Run the fuzz targets	extern/libgit2/docs/fuzzing.md	/^## Run the fuzz targets$/;"	s
Running Tests	extern/libgit2/README.md	/^Running Tests$/;"	s
S	extern/libgit2/src/wildmatch.c	/^	S = GIT_SPACE,$/;"	e	enum:__anon17a406cb0103	file:
S	p.cpp	/^  S() noexcept { puts("S()"); }$/;"	f	struct:S	file:
S	p.cpp	/^  S(S &&) noexcept { puts("S(S &&)"); }$/;"	f	struct:S	file:
S	p.cpp	/^  S(S const &) noexcept { puts("S(const S &)"); }$/;"	f	struct:S	file:
S	p.cpp	/^struct S {$/;"	s	file:
SCHECK_PARTIAL	extern/libgit2/deps/pcre/pcre_exec.c	/^#define SCHECK_PARTIAL(/;"	d	file:
SECTION_BAR	extern/libgit2/tests/config/write.c	/^#define SECTION_BAR /;"	d	file:
SECTION_FOO	extern/libgit2/tests/config/write.c	/^#define SECTION_FOO /;"	d	file:
SECTION_FOO_WITH_COMMENT	extern/libgit2/tests/config/write.c	/^#define SECTION_FOO_WITH_COMMENT /;"	d	file:
SECURITY_FLAG_IGNORE_CERT_CN_INVALID	extern/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_IGNORE_CERT_CN_INVALID /;"	d
SECURITY_FLAG_IGNORE_CERT_DATE_INVALID	extern/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_IGNORE_CERT_DATE_INVALID /;"	d
SECURITY_FLAG_IGNORE_CERT_WRONG_USAGE	extern/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_IGNORE_CERT_WRONG_USAGE /;"	d
SECURITY_FLAG_IGNORE_UNKNOWN_CA	extern/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_IGNORE_UNKNOWN_CA /;"	d
SECURITY_FLAG_SECURE	extern/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_SECURE /;"	d
SECURITY_FLAG_STRENGTH_MEDIUM	extern/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_STRENGTH_MEDIUM /;"	d
SECURITY_FLAG_STRENGTH_STRONG	extern/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_STRENGTH_STRONG /;"	d
SECURITY_FLAG_STRENGTH_WEAK	extern/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_STRENGTH_WEAK /;"	d
SECURITY_FOUND	extern/libgit2/cmake/Modules/FindSecurity.cmake	/^	SET(SECURITY_FOUND TRUE)$/;"	v
SECURITY_LDFLAGS	extern/libgit2/cmake/Modules/FindSecurity.cmake	/^	SET(SECURITY_LDFLAGS "-framework Security")$/;"	v
SEEK_CUR	extern/libgit2/deps/zlib/zconf.h	/^#  define SEEK_CUR /;"	d
SEEK_END	extern/libgit2/deps/zlib/zconf.h	/^#  define SEEK_END /;"	d
SEEK_SET	extern/libgit2/deps/zlib/zconf.h	/^#  define SEEK_SET /;"	d
SEEN	extern/libgit2/src/describe.c	/^#define SEEN /;"	d	file:
SEPARATOR	extern/libgit2/deps/zlib/trees.c	/^#  define SEPARATOR(/;"	d	file:
SERVER_TYPE_PROXY	extern/libgit2/src/transports/http.c	/^#define SERVER_TYPE_PROXY /;"	d	file:
SERVER_TYPE_REMOTE	extern/libgit2/src/transports/http.c	/^#define SERVER_TYPE_REMOTE /;"	d	file:
SETBIT	extern/libgit2/deps/pcre/pcre_compile.c	/^#define SETBIT(/;"	d	file:
SET_BIT	extern/libgit2/deps/pcre/pcre_study.c	/^#define SET_BIT(/;"	d	file:
SET_CHAR_OFFSET	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SET_CHAR_OFFSET(/;"	d	file:
SET_ERRNO	extern/libgit2/deps/http-parser/http_parser.c	/^#define SET_ERRNO(/;"	d	file:
SET_LABEL	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SET_LABEL(/;"	d	file:
SET_REPO_CONFIG	extern/libgit2/src/repository.c	/^#define SET_REPO_CONFIG(/;"	d	file:
SET_TYPE_OFFSET	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SET_TYPE_OFFSET(/;"	d	file:
SHA1COMPRESS_FULL_ROUND1_STEP_EXPAND	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define SHA1COMPRESS_FULL_ROUND1_STEP_EXPAND(/;"	d	file:
SHA1COMPRESS_FULL_ROUND1_STEP_LOAD	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define SHA1COMPRESS_FULL_ROUND1_STEP_LOAD(/;"	d	file:
SHA1COMPRESS_FULL_ROUND2_STEP	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define SHA1COMPRESS_FULL_ROUND2_STEP(/;"	d	file:
SHA1COMPRESS_FULL_ROUND3_STEP	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define SHA1COMPRESS_FULL_ROUND3_STEP(/;"	d	file:
SHA1COMPRESS_FULL_ROUND4_STEP	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define SHA1COMPRESS_FULL_ROUND4_STEP(/;"	d	file:
SHA1DCFinal	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^int SHA1DCFinal(unsigned char output[20], SHA1_CTX *ctx)$/;"	f	typeref:typename:int
SHA1DCInit	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^void SHA1DCInit(SHA1_CTX* ctx)$/;"	f	typeref:typename:void
SHA1DCSetCallback	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^void SHA1DCSetCallback(SHA1_CTX* ctx, collision_block_callback callback)$/;"	f	typeref:typename:void
SHA1DCSetDetectReducedRoundCollision	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^void SHA1DCSetDetectReducedRoundCollision(SHA1_CTX* ctx, int reduced_round_coll)$/;"	f	typeref:typename:void
SHA1DCSetSafeHash	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^void SHA1DCSetSafeHash(SHA1_CTX* ctx, int safehash)$/;"	f	typeref:typename:void
SHA1DCSetUseDetectColl	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^void SHA1DCSetUseDetectColl(SHA1_CTX* ctx, int detect_coll)$/;"	f	typeref:typename:void
SHA1DCSetUseUBC	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^void SHA1DCSetUseUBC(SHA1_CTX* ctx, int ubc_check)$/;"	f	typeref:typename:void
SHA1DCUpdate	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^void SHA1DCUpdate(SHA1_CTX* ctx, const char* buf, size_t len)$/;"	f	typeref:typename:void
SHA1DC_ALLOW_UNALIGNED_ACCESS	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define SHA1DC_ALLOW_UNALIGNED_ACCESS$/;"	d	file:
SHA1DC_BIGENDIAN	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define SHA1DC_BIGENDIAN$/;"	d	file:
SHA1DC_INIT_SAFE_HASH_DEFAULT	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define SHA1DC_INIT_SAFE_HASH_DEFAULT /;"	d	file:
SHA1DC_ON_INTEL_LIKE_PROCESSOR	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define SHA1DC_ON_INTEL_LIKE_PROCESSOR$/;"	d	file:
SHA1DC_SHA1_H	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^#define SHA1DC_SHA1_H$/;"	d
SHA1DC_UBC_CHECK_H	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^#define SHA1DC_UBC_CHECK_H$/;"	d
SHA1_BACKEND	extern/libgit2/cmake/Modules/SelectHashes.cmake	/^		SET(SHA1_BACKEND "CollisionDetection")$/;"	v
SHA1_BACKEND	extern/libgit2/cmake/Modules/SelectHashes.cmake	/^		SET(SHA1_BACKEND "CommonCrypto")$/;"	v
SHA1_BACKEND	extern/libgit2/cmake/Modules/SelectHashes.cmake	/^		SET(SHA1_BACKEND "Win32")$/;"	v
SHA1_BACKEND	extern/libgit2/cmake/Modules/SelectHashes.cmake	/^		SET(SHA1_BACKEND ${HTTPS_BACKEND})$/;"	v
SHA1_BACKEND	extern/libgit2/cmake/Modules/SelectHashes.cmake	/^	SET(SHA1_BACKEND "CollisionDetection")$/;"	v
SHA1_BACKEND	extern/libgit2/cmake/Modules/SelectHashes.cmake	/^	SET(SHA1_BACKEND "Generic")$/;"	v
SHA1_CTX	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^} SHA1_CTX;$/;"	t	typeref:struct:__anon3f63bb720108
SHA1_RECOMPRESS	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define SHA1_RECOMPRESS(/;"	d	file:
SHA1_STORE_STATE	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define SHA1_STORE_STATE(/;"	d	file:
SHA_ASM	extern/libgit2/src/hash/sha1/generic.c	/^#define SHA_ASM(/;"	d	file:
SHA_MIX	extern/libgit2/src/hash/sha1/generic.c	/^#define SHA_MIX(/;"	d	file:
SHA_ROL	extern/libgit2/src/hash/sha1/generic.c	/^#define SHA_ROL(/;"	d	file:
SHA_ROR	extern/libgit2/src/hash/sha1/generic.c	/^#define SHA_ROR(/;"	d	file:
SHA_ROT	extern/libgit2/src/hash/sha1/generic.c	/^#define SHA_ROT(/;"	d	file:
SHA_ROUND	extern/libgit2/src/hash/sha1/generic.c	/^#define SHA_ROUND(/;"	d	file:
SHA_SRC	extern/libgit2/src/hash/sha1/generic.c	/^#define SHA_SRC(/;"	d	file:
SHEREDOM_UTF8_H_INCLUDED	extern/libgit2/deps/ntlmclient/utf8.h	/^#define SHEREDOM_UTF8_H_INCLUDED$/;"	d
SHIFT_REG_IS_R3	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SHIFT_REG_IS_R3$/;"	d	file:
SHOW_NONE	extern/libgit2/examples/cat-file.c	/^	SHOW_NONE = 3,$/;"	e	enum:__anonf62753ca0103	file:
SHOW_PRETTY	extern/libgit2/examples/cat-file.c	/^	SHOW_PRETTY = 4$/;"	e	enum:__anonf62753ca0103	file:
SHOW_SIZE	extern/libgit2/examples/cat-file.c	/^	SHOW_SIZE = 2,$/;"	e	enum:__anonf62753ca0103	file:
SHOW_TYPE	extern/libgit2/examples/cat-file.c	/^	SHOW_TYPE = 1,$/;"	e	enum:__anonf62753ca0103	file:
SIG_ATOMIC_MAX	extern/libgit2/include/git2/stdint.h	/^#define SIG_ATOMIC_MAX /;"	d
SIG_ATOMIC_MIN	extern/libgit2/include/git2/stdint.h	/^#define SIG_ATOMIC_MIN /;"	d
SIMILARITY_TEST_DATA_1	extern/libgit2/tests/core/buffer.c	/^#define SIMILARITY_TEST_DATA_1 /;"	d	file:
SIZE_MAX	extern/libgit2/include/git2/stdint.h	/^#     define SIZE_MAX /;"	d
SKIP	extern/libgit2/examples/add.c	/^	SKIP = 1,$/;"	e	enum:print_options	file:
SLJIT_CONFIG_AUTO	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SLJIT_CONFIG_AUTO /;"	d	file:
SLJIT_CONFIG_STATIC	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SLJIT_CONFIG_STATIC /;"	d	file:
SLJIT_DEBUG	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SLJIT_DEBUG /;"	d	file:
SLJIT_FREE	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SLJIT_FREE(/;"	d	file:
SLJIT_MALLOC	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SLJIT_MALLOC(/;"	d	file:
SLJIT_VERBOSE	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SLJIT_VERBOSE /;"	d	file:
SLOP	extern/libgit2/src/revwalk.c	/^#define SLOP /;"	d	file:
SM1	extern/libgit2/tests/submodule/modify.c	/^#define SM1 /;"	d	file:
SM2	extern/libgit2/tests/submodule/modify.c	/^#define SM2 /;"	d	file:
SM3	extern/libgit2/tests/submodule/modify.c	/^#define SM3 /;"	d	file:
SMALLEST	extern/libgit2/deps/zlib/trees.c	/^#define SMALLEST /;"	d	file:
SMALL_MEDIUM	extern/libgit2/deps/zlib/zconf.h	/^#    define SMALL_MEDIUM$/;"	d
SMALL_STACK_SIZE	extern/libgit2/src/pack.c	/^#define SMALL_STACK_SIZE /;"	d	file:
SM_LIBGIT2	extern/libgit2/tests/submodule/modify.c	/^#define SM_LIBGIT2 /;"	d	file:
SM_LIBGIT2_BRANCH	extern/libgit2/tests/submodule/modify.c	/^#define SM_LIBGIT2_BRANCH /;"	d	file:
SM_LIBGIT2_URL	extern/libgit2/tests/submodule/modify.c	/^#define SM_LIBGIT2_URL /;"	d	file:
SOCK_CLOEXEC	extern/libgit2/src/posix.h	/^#define SOCK_CLOEXEC /;"	d
SONAME	extern/libgit2/CMakeLists.txt	/^OPTION(SONAME				"Set the (SO)VERSION of the target"			 ON)$/;"	D
SOURCE_PUGIXML_CPP	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#define SOURCE_PUGIXML_CPP$/;"	d	file:
SP	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define SP /;"	d	file:
SRC_CLAR	extern/libgit2/tests/CMakeLists.txt	/^SET(SRC_CLAR "main.c" "clar_libgit2.c" "clar_libgit2_trace.c" "clar_libgit2_timer.c" "clar.c")$/;"	v
SRC_NTLMCLIENT_CRYPTO	extern/libgit2/deps/ntlmclient/CMakeLists.txt	/^	SET(SRC_NTLMCLIENT_CRYPTO "crypt_commoncrypto.c")$/;"	v
SRC_NTLMCLIENT_CRYPTO	extern/libgit2/deps/ntlmclient/CMakeLists.txt	/^	SET(SRC_NTLMCLIENT_CRYPTO "crypt_mbedtls.c")$/;"	v
SRC_NTLMCLIENT_CRYPTO	extern/libgit2/deps/ntlmclient/CMakeLists.txt	/^	SET(SRC_NTLMCLIENT_CRYPTO "crypt_openssl.c")$/;"	v
SRC_REPO	extern/libgit2/tests/perf/merge.c	/^#define SRC_REPO /;"	d	file:
SSB_CONTINUE	extern/libgit2/deps/pcre/pcre_study.c	/^enum { SSB_FAIL, SSB_DONE, SSB_CONTINUE, SSB_UNKNOWN };$/;"	e	enum:__anon959707cd0103	file:
SSB_DONE	extern/libgit2/deps/pcre/pcre_study.c	/^enum { SSB_FAIL, SSB_DONE, SSB_CONTINUE, SSB_UNKNOWN };$/;"	e	enum:__anon959707cd0103	file:
SSB_FAIL	extern/libgit2/deps/pcre/pcre_study.c	/^enum { SSB_FAIL, SSB_DONE, SSB_CONTINUE, SSB_UNKNOWN };$/;"	e	enum:__anon959707cd0103	file:
SSB_UNKNOWN	extern/libgit2/deps/pcre/pcre_study.c	/^enum { SSB_FAIL, SSB_DONE, SSB_CONTINUE, SSB_UNKNOWN };$/;"	e	enum:__anon959707cd0103	file:
SSE2_COMPARE_TYPE_INDEX	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SSE2_COMPARE_TYPE_INDEX /;"	d	file:
SSH_AUTH_KEYBOARD_INTERACTIVE	extern/libgit2/src/transports/ssh.c	/^#define SSH_AUTH_KEYBOARD_INTERACTIVE /;"	d	file:
SSH_AUTH_PASSWORD	extern/libgit2/src/transports/ssh.c	/^#define SSH_AUTH_PASSWORD /;"	d	file:
SSH_AUTH_PUBLICKEY	extern/libgit2/src/transports/ssh.c	/^#define SSH_AUTH_PUBLICKEY /;"	d	file:
SSH_DEFAULT_PORT	extern/libgit2/src/transports/ssh.c	/^#define SSH_DEFAULT_PORT /;"	d	file:
SSH_REPO_URL	extern/libgit2/tests/online/clone.c	/^#define SSH_REPO_URL /;"	d	file:
SSIZE_MAX	extern/libgit2/src/win32/msvc-compat.h	/^# define SSIZE_MAX /;"	d
STACK	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define STACK(/;"	d	file:
STACK_GROWTH_RATE	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define STACK_GROWTH_RATE /;"	d	file:
STACK_LIMIT	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define STACK_LIMIT /;"	d	file:
STACK_TOP	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define STACK_TOP /;"	d	file:
STALE	extern/libgit2/src/commit_list.h	/^#define STALE /;"	d
STANDARD_REPOSITORY	extern/libgit2/tests/repo/init.c	/^	STANDARD_REPOSITORY = 0,$/;"	e	enum:repo_mode	file:
START_OF_FILE_PENALTY	extern/libgit2/src/xdiff/xdiffi.c	/^#define START_OF_FILE_PENALTY /;"	d	file:
STATE_COPY	extern/libgit2/src/patch_parse.c	/^	STATE_COPY,$/;"	e	enum:__anonadbd87d80203	file:
STATE_DIFF	extern/libgit2/src/patch_parse.c	/^	STATE_DIFF,$/;"	e	enum:__anonadbd87d80203	file:
STATE_END	extern/libgit2/src/patch_parse.c	/^	STATE_END,$/;"	e	enum:__anonadbd87d80203	file:
STATE_FILEMODE	extern/libgit2/src/patch_parse.c	/^	STATE_FILEMODE,$/;"	e	enum:__anonadbd87d80203	file:
STATE_INDEX	extern/libgit2/src/patch_parse.c	/^	STATE_INDEX,$/;"	e	enum:__anonadbd87d80203	file:
STATE_MODE	extern/libgit2/src/patch_parse.c	/^	STATE_MODE,$/;"	e	enum:__anonadbd87d80203	file:
STATE_PATH	extern/libgit2/src/patch_parse.c	/^	STATE_PATH,$/;"	e	enum:__anonadbd87d80203	file:
STATE_RENAME	extern/libgit2/src/patch_parse.c	/^	STATE_RENAME,$/;"	e	enum:__anonadbd87d80203	file:
STATE_SIMILARITY	extern/libgit2/src/patch_parse.c	/^	STATE_SIMILARITY,$/;"	e	enum:__anonadbd87d80203	file:
STATE_START	extern/libgit2/src/patch_parse.c	/^	STATE_START,$/;"	e	enum:__anonadbd87d80203	file:
STATIC	CMakeLists.txt	/^set(STATIC ON CACHE BOOL "" FORCE)$/;"	v
STATIC	extern/OpenXLSX/CMakeLists.txt	/^option(STATIC "Set to ON to build a static library instance of a shared library" OFF)$/;"	D
STATIC_CRT	extern/libgit2/CMakeLists.txt	/^	OPTION(STATIC_CRT		"Link the static CRT libraries"		 		 ON)$/;"	D
STATIC_TREES	extern/libgit2/deps/zlib/zutil.h	/^#define STATIC_TREES /;"	d
STATS_FULL_MIN_SCALE	extern/libgit2/src/diff_stats.c	/^#define STATS_FULL_MIN_SCALE /;"	d	file:
STATUS_INDEX_FLAGS	extern/libgit2/tests/index/addall.c	/^#define STATUS_INDEX_FLAGS /;"	d	file:
STATUS_WT_FLAGS	extern/libgit2/tests/index/addall.c	/^#define STATUS_WT_FLAGS /;"	d	file:
STAT_T	extern/libgit2/tests/clar.c	/^	typedef struct _stat STAT_T;$/;"	t	typeref:struct:_stat	file:
STAT_T	extern/libgit2/tests/clar.c	/^	typedef struct stat STAT_T;$/;"	t	typeref:struct:stat	file:
STDC	extern/libgit2/deps/zlib/zconf.h	/^#    define STDC$/;"	d
STDC	extern/libgit2/deps/zlib/zconf.h	/^#  define STDC$/;"	d
STDC99	extern/libgit2/deps/zlib/zconf.h	/^#      define STDC99$/;"	d
STORED	extern/libgit2/deps/zlib/inflate.h	/^        STORED,     \/* i: waiting for stored size (length and complement) *\/$/;"	e	enum:__anon92f8b1ba0103
STORED_BLOCK	extern/libgit2/deps/zlib/zutil.h	/^#define STORED_BLOCK /;"	d
STR1000	extern/libgit2/tests/diff/workdir.c	/^#define STR1000 /;"	d	file:
STR200	extern/libgit2/tests/diff/workdir.c	/^#define STR200 /;"	d	file:
STR3999Z	extern/libgit2/tests/diff/workdir.c	/^#define STR3999Z /;"	d	file:
STR40	extern/libgit2/tests/diff/workdir.c	/^#define STR40 /;"	d	file:
STR4000	extern/libgit2/tests/diff/workdir.c	/^#define STR4000 /;"	d	file:
STR7	extern/libgit2/tests/diff/workdir.c	/^#define STR7 /;"	d	file:
STR8	extern/libgit2/tests/diff/workdir.c	/^#define STR8 /;"	d	file:
STR999Z	extern/libgit2/tests/diff/workdir.c	/^#define STR999Z /;"	d	file:
STRCMP_CASESELECT	extern/libgit2/src/util.h	/^#define STRCMP_CASESELECT(/;"	d
STRCMP_UC_C8	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRCMP_UC_C8(/;"	d
STRCMP_UC_C8_TEST	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRCMP_UC_C8_TEST(/;"	d
STRCMP_UC_UC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRCMP_UC_UC(/;"	d
STRCMP_UC_UC_TEST	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRCMP_UC_UC_TEST(/;"	d
STRICT_CHECK	extern/libgit2/deps/http-parser/http_parser.c	/^# define STRICT_CHECK(/;"	d	file:
STRING	extern/libgit2/deps/pcre/pcre_compile.c	/^#define STRING(/;"	d	file:
STRING	extern/libgit2/deps/pcre/pcre_version.c	/^#define STRING(/;"	d	file:
STRINGIFY	extern/libgit2/tests/core/structinit.c	/^#define STRINGIFY(/;"	d	file:
STRING_ACCEPT0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_ACCEPT0 /;"	d
STRING_ANYCRLF_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_ANYCRLF_RIGHTPAR /;"	d
STRING_ANY_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_ANY_RIGHTPAR /;"	d
STRING_Any0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Any0 /;"	d	file:
STRING_Arabic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Arabic0 /;"	d	file:
STRING_Armenian0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Armenian0 /;"	d	file:
STRING_Avestan0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Avestan0 /;"	d	file:
STRING_BSR_ANYCRLF_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_BSR_ANYCRLF_RIGHTPAR /;"	d
STRING_BSR_UNICODE_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_BSR_UNICODE_RIGHTPAR /;"	d
STRING_Balinese0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Balinese0 /;"	d	file:
STRING_Bamum0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Bamum0 /;"	d	file:
STRING_Bassa_Vah0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Bassa_Vah0 /;"	d	file:
STRING_Batak0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Batak0 /;"	d	file:
STRING_Bengali0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Bengali0 /;"	d	file:
STRING_Bopomofo0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Bopomofo0 /;"	d	file:
STRING_Brahmi0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Brahmi0 /;"	d	file:
STRING_Braille0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Braille0 /;"	d	file:
STRING_Buginese0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Buginese0 /;"	d	file:
STRING_Buhid0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Buhid0 /;"	d	file:
STRING_C0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_C0 /;"	d	file:
STRING_COMMIT0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_COMMIT0 /;"	d
STRING_CRLF_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_CRLF_RIGHTPAR /;"	d
STRING_CR_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_CR_RIGHTPAR /;"	d
STRING_Canadian_Aboriginal0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Canadian_Aboriginal0 /;"	d	file:
STRING_Carian0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Carian0 /;"	d	file:
STRING_Caucasian_Albanian0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Caucasian_Albanian0 /;"	d	file:
STRING_Cc0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cc0 /;"	d	file:
STRING_Cf0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cf0 /;"	d	file:
STRING_Chakma0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Chakma0 /;"	d	file:
STRING_Cham0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cham0 /;"	d	file:
STRING_Cherokee0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cherokee0 /;"	d	file:
STRING_Cn0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cn0 /;"	d	file:
STRING_Co0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Co0 /;"	d	file:
STRING_Common0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Common0 /;"	d	file:
STRING_Coptic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Coptic0 /;"	d	file:
STRING_Cs0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cs0 /;"	d	file:
STRING_Cuneiform0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cuneiform0 /;"	d	file:
STRING_Cypriot0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cypriot0 /;"	d	file:
STRING_Cyrillic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cyrillic0 /;"	d	file:
STRING_DEFINE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_DEFINE /;"	d
STRING_Deseret0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Deseret0 /;"	d	file:
STRING_Devanagari0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Devanagari0 /;"	d	file:
STRING_Duployan0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Duployan0 /;"	d	file:
STRING_Egyptian_Hieroglyphs0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Egyptian_Hieroglyphs0 /;"	d	file:
STRING_Elbasan0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Elbasan0 /;"	d	file:
STRING_Ethiopic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Ethiopic0 /;"	d	file:
STRING_F0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_F0 /;"	d
STRING_FAIL0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_FAIL0 /;"	d
STRING_Georgian0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Georgian0 /;"	d	file:
STRING_Glagolitic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Glagolitic0 /;"	d	file:
STRING_Gothic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Gothic0 /;"	d	file:
STRING_Grantha0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Grantha0 /;"	d	file:
STRING_Greek0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Greek0 /;"	d	file:
STRING_Gujarati0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Gujarati0 /;"	d	file:
STRING_Gurmukhi0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Gurmukhi0 /;"	d	file:
STRING_Han0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Han0 /;"	d	file:
STRING_Hangul0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Hangul0 /;"	d	file:
STRING_Hanunoo0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Hanunoo0 /;"	d	file:
STRING_Hebrew0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Hebrew0 /;"	d	file:
STRING_Hiragana0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Hiragana0 /;"	d	file:
STRING_Imperial_Aramaic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Imperial_Aramaic0 /;"	d	file:
STRING_Inherited0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Inherited0 /;"	d	file:
STRING_Inscriptional_Pahlavi0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Inscriptional_Pahlavi0 /;"	d	file:
STRING_Inscriptional_Parthian0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Inscriptional_Parthian0 /;"	d	file:
STRING_Javanese0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Javanese0 /;"	d	file:
STRING_Kaithi0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Kaithi0 /;"	d	file:
STRING_Kannada0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Kannada0 /;"	d	file:
STRING_Katakana0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Katakana0 /;"	d	file:
STRING_Kayah_Li0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Kayah_Li0 /;"	d	file:
STRING_Kharoshthi0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Kharoshthi0 /;"	d	file:
STRING_Khmer0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Khmer0 /;"	d	file:
STRING_Khojki0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Khojki0 /;"	d	file:
STRING_Khudawadi0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Khudawadi0 /;"	d	file:
STRING_L0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_L0 /;"	d	file:
STRING_LF_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_LF_RIGHTPAR /;"	d
STRING_LIMIT_MATCH_EQ	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_LIMIT_MATCH_EQ /;"	d
STRING_LIMIT_RECURSION_EQ	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_LIMIT_RECURSION_EQ /;"	d
STRING_L_AMPERSAND0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_L_AMPERSAND0 /;"	d	file:
STRING_Lao0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lao0 /;"	d	file:
STRING_Latin0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Latin0 /;"	d	file:
STRING_Lepcha0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lepcha0 /;"	d	file:
STRING_Limbu0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Limbu0 /;"	d	file:
STRING_Linear_A0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Linear_A0 /;"	d	file:
STRING_Linear_B0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Linear_B0 /;"	d	file:
STRING_Lisu0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lisu0 /;"	d	file:
STRING_Ll0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Ll0 /;"	d	file:
STRING_Lm0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lm0 /;"	d	file:
STRING_Lo0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lo0 /;"	d	file:
STRING_Lt0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lt0 /;"	d	file:
STRING_Lu0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lu0 /;"	d	file:
STRING_Lycian0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lycian0 /;"	d	file:
STRING_Lydian0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lydian0 /;"	d	file:
STRING_M0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_M0 /;"	d	file:
STRING_MARK0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_MARK0 /;"	d
STRING_Mahajani0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mahajani0 /;"	d	file:
STRING_Malayalam0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Malayalam0 /;"	d	file:
STRING_Mandaic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mandaic0 /;"	d	file:
STRING_Manichaean0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Manichaean0 /;"	d	file:
STRING_Mc0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mc0 /;"	d	file:
STRING_Me0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Me0 /;"	d	file:
STRING_Meetei_Mayek0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Meetei_Mayek0 /;"	d	file:
STRING_Mende_Kikakui0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mende_Kikakui0 /;"	d	file:
STRING_Meroitic_Cursive0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Meroitic_Cursive0 /;"	d	file:
STRING_Meroitic_Hieroglyphs0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Meroitic_Hieroglyphs0 /;"	d	file:
STRING_Miao0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Miao0 /;"	d	file:
STRING_Mn0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mn0 /;"	d	file:
STRING_Modi0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Modi0 /;"	d	file:
STRING_Mongolian0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mongolian0 /;"	d	file:
STRING_Mro0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mro0 /;"	d	file:
STRING_Myanmar0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Myanmar0 /;"	d	file:
STRING_N0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_N0 /;"	d	file:
STRING_NO_AUTO_POSSESS_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_NO_AUTO_POSSESS_RIGHTPAR /;"	d
STRING_NO_START_OPT_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_NO_START_OPT_RIGHTPAR /;"	d
STRING_Nabataean0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Nabataean0 /;"	d	file:
STRING_Nd0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Nd0 /;"	d	file:
STRING_New_Tai_Lue0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_New_Tai_Lue0 /;"	d	file:
STRING_Nko0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Nko0 /;"	d	file:
STRING_Nl0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Nl0 /;"	d	file:
STRING_No0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_No0 /;"	d	file:
STRING_Ogham0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Ogham0 /;"	d	file:
STRING_Ol_Chiki0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Ol_Chiki0 /;"	d	file:
STRING_Old_Italic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Old_Italic0 /;"	d	file:
STRING_Old_North_Arabian0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Old_North_Arabian0 /;"	d	file:
STRING_Old_Permic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Old_Permic0 /;"	d	file:
STRING_Old_Persian0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Old_Persian0 /;"	d	file:
STRING_Old_South_Arabian0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Old_South_Arabian0 /;"	d	file:
STRING_Old_Turkic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Old_Turkic0 /;"	d	file:
STRING_Oriya0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Oriya0 /;"	d	file:
STRING_Osmanya0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Osmanya0 /;"	d	file:
STRING_P0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_P0 /;"	d	file:
STRING_PRUNE0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_PRUNE0 /;"	d
STRING_Pahawh_Hmong0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pahawh_Hmong0 /;"	d	file:
STRING_Palmyrene0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Palmyrene0 /;"	d	file:
STRING_Pau_Cin_Hau0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pau_Cin_Hau0 /;"	d	file:
STRING_Pc0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pc0 /;"	d	file:
STRING_Pd0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pd0 /;"	d	file:
STRING_Pe0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pe0 /;"	d	file:
STRING_Pf0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pf0 /;"	d	file:
STRING_Phags_Pa0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Phags_Pa0 /;"	d	file:
STRING_Phoenician0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Phoenician0 /;"	d	file:
STRING_Pi0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pi0 /;"	d	file:
STRING_Po0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Po0 /;"	d	file:
STRING_Ps0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Ps0 /;"	d	file:
STRING_Psalter_Pahlavi0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Psalter_Pahlavi0 /;"	d	file:
STRING_Rejang0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Rejang0 /;"	d	file:
STRING_Runic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Runic0 /;"	d	file:
STRING_S0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_S0 /;"	d	file:
STRING_SKIP0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_SKIP0 /;"	d
STRING_Samaritan0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Samaritan0 /;"	d	file:
STRING_Saurashtra0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Saurashtra0 /;"	d	file:
STRING_Sc0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sc0 /;"	d	file:
STRING_Sharada0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sharada0 /;"	d	file:
STRING_Shavian0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Shavian0 /;"	d	file:
STRING_Siddham0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Siddham0 /;"	d	file:
STRING_Sinhala0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sinhala0 /;"	d	file:
STRING_Sk0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sk0 /;"	d	file:
STRING_Sm0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sm0 /;"	d	file:
STRING_So0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_So0 /;"	d	file:
STRING_Sora_Sompeng0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sora_Sompeng0 /;"	d	file:
STRING_Sundanese0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sundanese0 /;"	d	file:
STRING_Syloti_Nagri0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Syloti_Nagri0 /;"	d	file:
STRING_Syriac0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Syriac0 /;"	d	file:
STRING_THEN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_THEN /;"	d
STRING_Tagalog0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tagalog0 /;"	d	file:
STRING_Tagbanwa0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tagbanwa0 /;"	d	file:
STRING_Tai_Le0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tai_Le0 /;"	d	file:
STRING_Tai_Tham0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tai_Tham0 /;"	d	file:
STRING_Tai_Viet0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tai_Viet0 /;"	d	file:
STRING_Takri0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Takri0 /;"	d	file:
STRING_Tamil0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tamil0 /;"	d	file:
STRING_Telugu0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Telugu0 /;"	d	file:
STRING_Thaana0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Thaana0 /;"	d	file:
STRING_Thai0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Thai0 /;"	d	file:
STRING_Tibetan0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tibetan0 /;"	d	file:
STRING_Tifinagh0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tifinagh0 /;"	d	file:
STRING_Tirhuta0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tirhuta0 /;"	d	file:
STRING_UCP_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_UCP_RIGHTPAR /;"	d
STRING_UTF16_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_UTF16_RIGHTPAR /;"	d
STRING_UTF32_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_UTF32_RIGHTPAR /;"	d
STRING_UTF8_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_UTF8_RIGHTPAR /;"	d
STRING_UTF_RIGHTPAR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_UTF_RIGHTPAR /;"	d
STRING_Ugaritic0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Ugaritic0 /;"	d	file:
STRING_Vai0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Vai0 /;"	d	file:
STRING_WEIRD_ENDWORD	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_WEIRD_ENDWORD /;"	d
STRING_WEIRD_STARTWORD	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_WEIRD_STARTWORD /;"	d
STRING_Warang_Citi0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Warang_Citi0 /;"	d	file:
STRING_Xan0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Xan0 /;"	d	file:
STRING_Xps0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Xps0 /;"	d	file:
STRING_Xsp0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Xsp0 /;"	d	file:
STRING_Xuc0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Xuc0 /;"	d	file:
STRING_Xwd0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Xwd0 /;"	d	file:
STRING_Yi0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Yi0 /;"	d	file:
STRING_Z0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Z0 /;"	d	file:
STRING_Zl0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Zl0 /;"	d	file:
STRING_Zp0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Zp0 /;"	d	file:
STRING_Zs0	extern/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Zs0 /;"	d	file:
STRING_alnum0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_alnum0 /;"	d
STRING_alpha0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_alpha0 /;"	d
STRING_ascii0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_ascii0 /;"	d
STRING_blank0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_blank0 /;"	d
STRING_cntrl0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_cntrl0 /;"	d
STRING_digit0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_digit0 /;"	d
STRING_graph0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_graph0 /;"	d
STRING_lower0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_lower0 /;"	d
STRING_print0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_print0 /;"	d
STRING_punct0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_punct0 /;"	d
STRING_space0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_space0 /;"	d
STRING_upper0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_upper0 /;"	d
STRING_word0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_word0 /;"	d
STRING_xdigit	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_xdigit /;"	d
STRLEN_UC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRLEN_UC(/;"	d
STRNCMP_UC_C8	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRNCMP_UC_C8(/;"	d
STRNCMP_UC_UC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STRNCMP_UC_UC(/;"	d
STR_0	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_0 /;"	d
STR_1	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_1 /;"	d
STR_2	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_2 /;"	d
STR_3	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_3 /;"	d
STR_4	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_4 /;"	d
STR_5	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_5 /;"	d
STR_6	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_6 /;"	d
STR_7	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_7 /;"	d
STR_8	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_8 /;"	d
STR_9	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_9 /;"	d
STR_A	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_A /;"	d
STR_AMPERSAND	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_AMPERSAND /;"	d
STR_APOSTROPHE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_APOSTROPHE /;"	d
STR_ASTERISK	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_ASTERISK /;"	d
STR_B	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_B /;"	d
STR_BACKSLASH	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_BACKSLASH /;"	d
STR_BEL	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_BEL /;"	d
STR_BS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_BS /;"	d
STR_C	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_C /;"	d
STR_CIRCUMFLEX_ACCENT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_CIRCUMFLEX_ACCENT /;"	d
STR_COLON	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_COLON /;"	d
STR_COMMA	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_COMMA /;"	d
STR_COMMERCIAL_AT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_COMMERCIAL_AT /;"	d
STR_CR	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_CR /;"	d
STR_D	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_D /;"	d
STR_DEL	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_DEL /;"	d
STR_DOLLAR_SIGN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_DOLLAR_SIGN /;"	d
STR_DOT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_DOT /;"	d
STR_E	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_E /;"	d
STR_END	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define STR_END /;"	d	file:
STR_EQUALS_SIGN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_EQUALS_SIGN /;"	d
STR_ESC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_ESC /;"	d
STR_EXCLAMATION_MARK	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_EXCLAMATION_MARK /;"	d
STR_F	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_F /;"	d
STR_FF	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_FF /;"	d
STR_G	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_G /;"	d
STR_GRAVE_ACCENT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_GRAVE_ACCENT /;"	d
STR_GREATER_THAN_SIGN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_GREATER_THAN_SIGN /;"	d
STR_H	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_H /;"	d
STR_HT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_HT /;"	d
STR_I	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_I /;"	d
STR_J	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_J /;"	d
STR_K	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_K /;"	d
STR_L	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_L /;"	d
STR_LEFT_CURLY_BRACKET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_LEFT_CURLY_BRACKET /;"	d
STR_LEFT_PARENTHESIS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_LEFT_PARENTHESIS /;"	d
STR_LEFT_SQUARE_BRACKET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_LEFT_SQUARE_BRACKET /;"	d
STR_LESS_THAN_SIGN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_LESS_THAN_SIGN /;"	d
STR_LF	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_LF /;"	d
STR_M	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_M /;"	d
STR_MINUS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_MINUS /;"	d
STR_N	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_N /;"	d
STR_NEL	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_NEL /;"	d
STR_NL	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_NL /;"	d
STR_NUMBER_SIGN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_NUMBER_SIGN /;"	d
STR_O	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_O /;"	d
STR_P	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_P /;"	d
STR_PERCENT_SIGN	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_PERCENT_SIGN /;"	d
STR_PLUS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_PLUS /;"	d
STR_PTR	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define STR_PTR /;"	d	file:
STR_Q	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_Q /;"	d
STR_QUESTION_MARK	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_QUESTION_MARK /;"	d
STR_QUOTATION_MARK	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_QUOTATION_MARK /;"	d
STR_R	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_R /;"	d
STR_RIGHT_CURLY_BRACKET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_RIGHT_CURLY_BRACKET /;"	d
STR_RIGHT_PARENTHESIS	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_RIGHT_PARENTHESIS /;"	d
STR_RIGHT_SQUARE_BRACKET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_RIGHT_SQUARE_BRACKET /;"	d
STR_S	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_S /;"	d
STR_SEMICOLON	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_SEMICOLON /;"	d
STR_SLASH	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_SLASH /;"	d
STR_SPACE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_SPACE /;"	d
STR_T	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_T /;"	d
STR_TILDE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_TILDE /;"	d
STR_U	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_U /;"	d
STR_UNDERSCORE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_UNDERSCORE /;"	d
STR_V	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_V /;"	d
STR_VERTICAL_LINE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_VERTICAL_LINE /;"	d
STR_VT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_VT /;"	d
STR_W	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_W /;"	d
STR_X	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_X /;"	d
STR_Y	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_Y /;"	d
STR_Z	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_Z /;"	d
STR_a	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_a /;"	d
STR_b	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_b /;"	d
STR_c	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_c /;"	d
STR_d	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_d /;"	d
STR_e	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_e /;"	d
STR_f	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_f /;"	d
STR_g	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_g /;"	d
STR_h	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_h /;"	d
STR_i	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_i /;"	d
STR_j	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_j /;"	d
STR_k	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_k /;"	d
STR_l	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_l /;"	d
STR_m	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_m /;"	d
STR_n	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_n /;"	d
STR_o	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_o /;"	d
STR_p	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_p /;"	d
STR_q	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_q /;"	d
STR_r	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_r /;"	d
STR_s	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_s /;"	d
STR_t	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_t /;"	d
STR_u	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_u /;"	d
STR_v	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_v /;"	d
STR_w	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_w /;"	d
STR_x	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_x /;"	d
STR_y	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_y /;"	d
STR_z	extern/libgit2/deps/pcre/pcre_internal.h	/^#define STR_z /;"	d
SUBCMD_APPLY	extern/libgit2/examples/stash.c	/^	SUBCMD_APPLY,$/;"	e	enum:subcmd	file:
SUBCMD_LIST	extern/libgit2/examples/stash.c	/^	SUBCMD_LIST,$/;"	e	enum:subcmd	file:
SUBCMD_POP	extern/libgit2/examples/stash.c	/^	SUBCMD_POP,$/;"	e	enum:subcmd	file:
SUBCMD_PUSH	extern/libgit2/examples/stash.c	/^	SUBCMD_PUSH$/;"	e	enum:subcmd	file:
SUBMODULE_DELETE_BRANCH	extern/libgit2/tests/merge/workdir/submodules.c	/^#define SUBMODULE_DELETE_BRANCH	/;"	d	file:
SUBMODULE_MAIN_BRANCH	extern/libgit2/tests/merge/workdir/submodules.c	/^#define SUBMODULE_MAIN_BRANCH	/;"	d	file:
SUBMODULE_OTHER2_BRANCH	extern/libgit2/tests/merge/workdir/submodules.c	/^#define SUBMODULE_OTHER2_BRANCH	/;"	d	file:
SUBMODULE_OTHER_BRANCH	extern/libgit2/tests/merge/workdir/submodules.c	/^#define SUBMODULE_OTHER_BRANCH	/;"	d	file:
SUB_REPOSITORY_FOLDER	extern/libgit2/tests/repo/discover.c	/^#define SUB_REPOSITORY_FOLDER /;"	d	file:
SUB_REPOSITORY_FOLDER_NAME	extern/libgit2/tests/repo/discover.c	/^#define SUB_REPOSITORY_FOLDER_NAME /;"	d	file:
SUB_REPOSITORY_FOLDER_SUB	extern/libgit2/tests/repo/discover.c	/^#define SUB_REPOSITORY_FOLDER_SUB /;"	d	file:
SUB_REPOSITORY_FOLDER_SUB_SUB	extern/libgit2/tests/repo/discover.c	/^#define SUB_REPOSITORY_FOLDER_SUB_SUB /;"	d	file:
SUB_REPOSITORY_FOLDER_SUB_SUB_SUB	extern/libgit2/tests/repo/discover.c	/^#define SUB_REPOSITORY_FOLDER_SUB_SUB_SUB /;"	d	file:
SUB_REPOSITORY_GITDIR	extern/libgit2/tests/repo/discover.c	/^#define SUB_REPOSITORY_GITDIR /;"	d	file:
SUFFIX_FETCH	extern/libgit2/src/remote.c	/^#define SUFFIX_FETCH /;"	d	file:
SUFFIX_PUSH	extern/libgit2/src/remote.c	/^#define SUFFIX_PUSH /;"	d	file:
SUPPORT_PCRE8	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(SUPPORT_PCRE8 1)$/;"	v
SUPPORT_UTF	extern/libgit2/deps/pcre/pcre_internal.h	/^#define SUPPORT_UTF /;"	d
SUPPORT_UTF8	extern/libgit2/deps/pcre/pcre_internal.h	/^#define SUPPORT_UTF8 /;"	d
SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE	extern/libgit2/src/win32/posix_w32.c	/^# define SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE /;"	d	file:
SYMBOLIC_LINK_FLAG_DIRECTORY	extern/libgit2/src/win32/posix_w32.c	/^# define SYMBOLIC_LINK_FLAG_DIRECTORY /;"	d	file:
SYNC	extern/libgit2/deps/zlib/inflate.h	/^    SYNC        \/* looking for synchronization bytes to restart inflate() *\/$/;"	e	enum:__anon92f8b1ba0103
SYS16BIT	extern/libgit2/deps/zlib/zconf.h	/^#      define SYS16BIT$/;"	d
S_IFGITLINK	extern/libgit2/src/posix.h	/^#define S_IFGITLINK /;"	d
S_IFLNK	extern/libgit2/src/posix.h	/^#define S_IFLNK /;"	d
S_IGNORE	extern/libgit2/src/trailer.c	/^	S_IGNORE = 7,$/;"	e	enum:trailer_state	file:
S_IREAD	extern/libgit2/tests/odb/loose.c	/^# define S_IREAD /;"	d	file:
S_ISDIR	extern/libgit2/src/posix.h	/^#define S_ISDIR(/;"	d
S_ISDIR	extern/libgit2/tests/clar.c	/^#			define S_ISDIR(/;"	d	file:
S_ISFIFO	extern/libgit2/src/posix.h	/^#define S_ISFIFO(/;"	d
S_ISGID	extern/libgit2/src/posix.h	/^#define S_ISGID /;"	d
S_ISGITLINK	extern/libgit2/src/posix.h	/^#define S_ISGITLINK(/;"	d
S_ISLNK	extern/libgit2/src/posix.h	/^#define S_ISLNK(/;"	d
S_ISREG	extern/libgit2/src/posix.h	/^#define S_ISREG(/;"	d
S_IWRITE	extern/libgit2/tests/odb/loose.c	/^# define S_IWRITE /;"	d	file:
S_IWUSR	extern/libgit2/src/posix.h	/^#define S_IWUSR /;"	d
S_IXUSR	extern/libgit2/src/posix.h	/^#define S_IXUSR /;"	d
S_KEY	extern/libgit2/src/trailer.c	/^	S_KEY = 1,$/;"	e	enum:trailer_state	file:
S_KEY_WS	extern/libgit2/src/trailer.c	/^	S_KEY_WS = 2,$/;"	e	enum:trailer_state	file:
S_SEP_WS	extern/libgit2/src/trailer.c	/^	S_SEP_WS = 3,$/;"	e	enum:trailer_state	file:
S_START	extern/libgit2/src/trailer.c	/^	S_START = 0,$/;"	e	enum:trailer_state	file:
S_VALUE	extern/libgit2/src/trailer.c	/^	S_VALUE = 4,$/;"	e	enum:trailer_state	file:
S_VALUE_END	extern/libgit2/src/trailer.c	/^	S_VALUE_END = 6,$/;"	e	enum:trailer_state	file:
S_VALUE_NL	extern/libgit2/src/trailer.c	/^	S_VALUE_NL = 5,$/;"	e	enum:trailer_state	file:
Save	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        void Save(std::ostream& stream) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:void
Save	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        void Save(std::string filename = "") {$/;"	f	class:Zippy::ZipArchive	typeref:typename:void
SaveDocument	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^bool Impl::XLDocument::SaveDocument() {$/;"	f	class:Impl::XLDocument	typeref:typename:bool
SaveDocument	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^bool XLDocument::SaveDocument() {$/;"	f	class:XLDocument	typeref:typename:bool
SaveDocumentAs	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^bool Impl::XLDocument::SaveDocumentAs(const string& fileName) {$/;"	f	class:Impl::XLDocument	typeref:typename:bool
SaveDocumentAs	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^bool XLDocument::SaveDocumentAs(const std::string& fileName) {$/;"	f	class:XLDocument	typeref:typename:bool
ScaleCrop	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        ScaleCrop,$/;"	e	enum:OpenXLSX::XLProperty
Scope	extern/libgit2/docs/code_of_conduct.md	/^## Scope$/;"	s
Security Policy	extern/libgit2/SECURITY.md	/^# Security Policy$/;"	c
Security releases	extern/libgit2/docs/release.md	/^## Security releases$/;"	s
SerialNumber	extern/NamedType/main.cpp	/^    using SerialNumber = fluent::NamedType<std::string, struct SerialNumberTag, fluent::Comparab/;"	t	typeref:typename:fluent::NamedType<std::string,struct SerialNumberTag,fluent::Comparable,fluent::Hashable>	file:
Set	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellValue_Impl.h	/^    void XLCellValue::Set(T numberValue) {$/;"	f	class:OpenXLSX::Impl::XLCellValue	typeref:typename:void
Set	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^void Impl::XLCellValue::Set(const char* stringValue) {$/;"	f	class:Impl::XLCellValue	typeref:typename:void
Set	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^void Impl::XLCellValue::Set(const string& stringValue) {$/;"	f	class:Impl::XLCellValue	typeref:typename:void
Set	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^void Impl::XLTokenizer::Set(const std::string& str, const std::string& delimiter) {$/;"	f	class:Impl::XLTokenizer	typeref:typename:void
Set	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellValue.h	/^    void XLCellValue::Set(T numberValue) {$/;"	f	class:OpenXLSX::XLCellValue	typeref:typename:void
Set	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^void XLCellValue::Set(const char* stringValue) {$/;"	f	class:XLCellValue	typeref:typename:void
Set	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^void XLCellValue::Set(const std::string& stringValue) {$/;"	f	class:XLCellValue	typeref:typename:void
SetAddress	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^void Impl::XLCellReference::SetAddress(const std::string& address) {$/;"	f	class:Impl::XLCellReference	typeref:typename:void
SetAddress	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellReference.cpp	/^void XLCellReference::SetAddress(const std::string& address) {$/;"	f	class:XLCellReference	typeref:typename:void
SetBoolean	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^void Impl::XLCellValue::SetBoolean(bool numberValue) {$/;"	f	class:Impl::XLCellValue	typeref:typename:void
SetBoolean	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^void XLCellValue::SetBoolean(bool numberValue) {$/;"	f	class:XLCellValue	typeref:typename:void
SetColumn	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^void Impl::XLCellReference::SetColumn(unsigned int column) {$/;"	f	class:Impl::XLCellReference	typeref:typename:void
SetColumn	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellReference.cpp	/^void XLCellReference::SetColumn(unsigned int column) {$/;"	f	class:XLCellReference	typeref:typename:void
SetData	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            void SetData(const ZipEntryData& data) {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:void
SetData	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            void SetData(const std::string& data) {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:void
SetData	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        void SetData(const ZipEntryData& data) {$/;"	f	class:Zippy::ZipEntry	typeref:typename:void
SetData	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        void SetData(const std::string& data) {$/;"	f	class:Zippy::ZipEntry	typeref:typename:void
SetDelimiter	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^void Impl::XLTokenizer::SetDelimiter(const std::string& delimiter) {$/;"	f	class:Impl::XLTokenizer	typeref:typename:void
SetDescent	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^void Impl::XLRow::SetDescent(float descent) {$/;"	f	class:Impl::XLRow	typeref:typename:void
SetDescent	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLRow.cpp	/^void XLRow::SetDescent(float descent) {$/;"	f	class:XLRow	typeref:typename:void
SetFirstCell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^void Impl::XLWorksheet::SetFirstCell(const XLCellReference& cellRef) noexcept {$/;"	f	class:Impl::XLWorksheet	typeref:typename:void
SetFloat	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^void Impl::XLCellValue::SetFloat(long double numberValue) {$/;"	f	class:Impl::XLCellValue	typeref:typename:void
SetFloat	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^void XLCellValue::SetFloat(long double numberValue) {$/;"	f	class:XLCellValue	typeref:typename:void
SetHeadingPair	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^void Impl::XLAppProperties::SetHeadingPair(const string& name, int newValue) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:void
SetHeight	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^void Impl::XLRow::SetHeight(float height) {$/;"	f	class:Impl::XLRow	typeref:typename:void
SetHeight	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLRow.cpp	/^void XLRow::SetHeight(float height) {$/;"	f	class:XLRow	typeref:typename:void
SetHidden	extern/OpenXLSX/library/openxlsx/implementation/sources/XLColumn_Impl.cpp	/^void Impl::XLColumn::SetHidden(bool state) {$/;"	f	class:Impl::XLColumn	typeref:typename:void
SetHidden	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^void Impl::XLRow::SetHidden(bool state) {$/;"	f	class:Impl::XLRow	typeref:typename:void
SetHidden	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLColumn.cpp	/^void OpenXLSX::XLColumn::SetHidden(bool state) {$/;"	f	class:OpenXLSX::XLColumn	typeref:typename:void
SetHidden	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLRow.cpp	/^void XLRow::SetHidden(bool state) {$/;"	f	class:XLRow	typeref:typename:void
SetIndex	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSheet_Impl.cpp	/^void Impl::XLSheet::SetIndex() {$/;"	f	class:Impl::XLSheet	typeref:typename:void
SetIndex	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLSheet.cpp	/^void XLSheet::SetIndex(int index) {$/;"	f	class:XLSheet	typeref:typename:void
SetInteger	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^void Impl::XLCellValue::SetInteger(long long int numberValue) {$/;"	f	class:Impl::XLCellValue	typeref:typename:void
SetInteger	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^void XLCellValue::SetInteger(long long int numberValue) {$/;"	f	class:XLCellValue	typeref:typename:void
SetLastCell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^void Impl::XLWorksheet::SetLastCell(const XLCellReference& cellRef) noexcept {$/;"	f	class:Impl::XLWorksheet	typeref:typename:void
SetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSheet_Impl.cpp	/^void Impl::XLSheet::SetName(const std::string& name) {$/;"	f	class:Impl::XLSheet	typeref:typename:void
SetName	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLSheet.cpp	/^void XLSheet::SetName(const std::string& name) {$/;"	f	class:XLSheet	typeref:typename:void
SetName	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            void SetName(const std::string& name) {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:void
SetProperty	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^bool Impl::XLAppProperties::SetProperty(const std::string& name, const std::string& value) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:bool
SetProperty	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCoreProperties_Impl.cpp	/^bool Impl::XLCoreProperties::SetProperty(const std::string& name, const std::string& value) {$/;"	f	class:Impl::XLCoreProperties	typeref:typename:bool
SetProperty	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCoreProperties_Impl.cpp	/^bool Impl::XLCoreProperties::SetProperty(const std::string& name, double value) {$/;"	f	class:Impl::XLCoreProperties	typeref:typename:bool
SetProperty	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCoreProperties_Impl.cpp	/^bool Impl::XLCoreProperties::SetProperty(const std::string& name, int value) {$/;"	f	class:Impl::XLCoreProperties	typeref:typename:bool
SetProperty	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^void Impl::XLDocument::SetProperty(XLProperty theProperty, const string& value) {$/;"	f	class:Impl::XLDocument	typeref:typename:void
SetProperty	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^void XLDocument::SetProperty(XLProperty theProperty, const std::string& value) {$/;"	f	class:XLDocument	typeref:typename:void
SetRow	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^void Impl::XLCellReference::SetRow(unsigned long row) {$/;"	f	class:Impl::XLCellReference	typeref:typename:void
SetRow	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellReference.cpp	/^void XLCellReference::SetRow(unsigned long row) {$/;"	f	class:XLCellReference	typeref:typename:void
SetRowAndColumn	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^void Impl::XLCellReference::SetRowAndColumn(unsigned long row, unsigned int column) {$/;"	f	class:Impl::XLCellReference	typeref:typename:void
SetRowAndColumn	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellReference.cpp	/^void XLCellReference::SetRowAndColumn(unsigned long row, unsigned int column) {$/;"	f	class:XLCellReference	typeref:typename:void
SetSecuritySite	extern/libgit2/deps/winhttp/urlmon.h	/^	LPVOID SetSecuritySite;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
SetSheetName	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^void Impl::XLAppProperties::SetSheetName(const string& oldTitle, const string& newTitle) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:void
SetState	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSheet_Impl.cpp	/^void Impl::XLSheet::SetState(XLSheetState state) {$/;"	f	class:Impl::XLSheet	typeref:typename:void
SetState	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLSheet.cpp	/^void XLSheet::SetState(XLSheetState state) {$/;"	f	class:XLSheet	typeref:typename:void
SetString	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^void Impl::XLTokenizer::SetString(const std::string& str) {$/;"	f	class:Impl::XLTokenizer	typeref:typename:void
SetTypeAttribute	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^void Impl::XLCellValue::SetTypeAttribute(const std::string& typeString) {$/;"	f	class:Impl::XLCellValue	typeref:typename:void
SetTypeAttribute	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^void Impl::XLCell::SetTypeAttribute(const std::string& typeString) {$/;"	f	class:Impl::XLCell	typeref:typename:void
SetValueNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^void Impl::XLCellValue::SetValueNode(string_view value) {$/;"	f	class:Impl::XLCellValue	typeref:typename:void
SetWidth	extern/OpenXLSX/library/openxlsx/implementation/sources/XLColumn_Impl.cpp	/^void Impl::XLColumn::SetWidth(float width) {$/;"	f	class:Impl::XLColumn	typeref:typename:void
SetWidth	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLColumn.cpp	/^void OpenXLSX::XLColumn::SetWidth(float width) {$/;"	f	class:OpenXLSX::XLColumn	typeref:typename:void
SetXmlData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAbstractXMLFile_Impl.cpp	/^void Impl::XLAbstractXMLFile::SetXmlData(const std::string& xmlData) {$/;"	f	class:Impl::XLAbstractXMLFile	typeref:typename:void
SetZoneMapping	extern/libgit2/deps/winhttp/urlmon.h	/^	LPVOID SetZoneMapping;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
SharedDoc	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        SharedDoc,$/;"	e	enum:OpenXLSX::XLProperty
SharedString	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^        String, SharedString, InlineString$/;"	e	enum:OpenXLSX::Impl::XLStringType
SharedStringNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^XMLNode Impl::XLCellValue::SharedStringNode(unsigned long index) const {$/;"	f	class:Impl::XLCellValue	typeref:typename:XMLNode
SharedStrings	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        SharedStrings,$/;"	e	enum:OpenXLSX::Impl::XLContentType
SharedStrings	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        SharedStrings,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
SharedStrings	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^Impl::XLSharedStrings* Impl::XLWorkbook::SharedStrings() const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:Impl::XLSharedStrings *
Sharing objects	extern/libgit2/docs/threading.md	/^Sharing objects$/;"	s
Sheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^Impl::XLSheet* Impl::XLWorkbook::Sheet(const std::string& sheetName) {$/;"	f	class:Impl::XLWorkbook	typeref:typename:Impl::XLSheet *
Sheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^Impl::XLSheet* Impl::XLWorkbook::Sheet(unsigned int index) {$/;"	f	class:Impl::XLWorkbook	typeref:typename:Impl::XLSheet *
Sheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^const Impl::XLSheet* Impl::XLWorkbook::Sheet(const std::string& sheetName) const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:const Impl::XLSheet *
Sheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^const Impl::XLSheet* Impl::XLWorkbook::Sheet(unsigned int index) const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:const Impl::XLSheet *
Sheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^XLSheet XLWorkbook::Sheet(const std::string& sheetName) {$/;"	f	class:XLWorkbook	typeref:typename:XLSheet
Sheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^XLSheet XLWorkbook::Sheet(unsigned int index) {$/;"	f	class:XLWorkbook	typeref:typename:XLSheet
Sheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^const XLSheet XLWorkbook::Sheet(const std::string& sheetName) const {$/;"	f	class:XLWorkbook	typeref:typename:const XLSheet
Sheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^const XLSheet XLWorkbook::Sheet(unsigned int index) const {$/;"	f	class:XLWorkbook	typeref:typename:const XLSheet
SheetCount	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^unsigned int Impl::XLWorkbook::SheetCount() const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:unsigned int
SheetCount	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^unsigned int XLWorkbook::SheetCount() const {$/;"	f	class:XLWorkbook	typeref:typename:unsigned int
SheetDataNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^XMLNode Impl::XLWorksheet::SheetDataNode() {$/;"	f	class:Impl::XLWorksheet	typeref:typename:XMLNode
SheetDataNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const XMLNode Impl::XLWorksheet::SheetDataNode() const {$/;"	f	class:Impl::XLWorksheet	typeref:typename:const XMLNode
SheetExists	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^bool Impl::XLWorkbook::SheetExists(const std::string& sheetName) const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:bool
SheetExists	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^bool XLWorkbook::SheetExists(const std::string& sheetName) const {$/;"	f	class:XLWorkbook	typeref:typename:bool
SheetNameNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^XMLNode Impl::XLAppProperties::SheetNameNode(const string& title) {$/;"	f	class:Impl::XLAppProperties	typeref:typename:XMLNode
SheetNameNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^XMLNode Impl::XLDocument::SheetNameNode(const std::string& sheetName) {$/;"	f	class:Impl::XLDocument	typeref:typename:XMLNode
SheetNames	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^std::vector<std::string> Impl::XLWorkbook::SheetNames() const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:std::vector<std::string>
SheetNames	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^std::vector<std::string> XLWorkbook::SheetNames() const {$/;"	f	class:XLWorkbook	typeref:typename:std::vector<std::string>
SheetNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^XMLNode Impl::XLWorkbook::SheetNode(const string& sheetName) {$/;"	f	class:Impl::XLWorkbook	typeref:typename:XMLNode
SheetViewsNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^XMLNode Impl::XLWorksheet::SheetViewsNode() {$/;"	f	class:Impl::XLWorksheet	typeref:typename:XMLNode
SheetViewsNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^const XMLNode Impl::XLWorksheet::SheetViewsNode() const {$/;"	f	class:Impl::XLWorksheet	typeref:typename:const XMLNode
SkipDelimiter	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^void Impl::XLTokenizer::SkipDelimiter() {$/;"	f	class:Impl::XLTokenizer	typeref:typename:void
SourceLineInfo	extern/NamedType/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	extern/OpenXLSX/tests/catch/catch.hpp	/^        SourceLineInfo( char const* _file, std::size_t _line ) noexcept$/;"	f	struct:Catch::SourceLineInfo
SourceLineInfo	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
Special Thanks	extern/OpenXLSX/library/zippy/Zippy/miniz/readme.md	/^## Special Thanks$/;"	s
Split	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^vector<Impl::XLToken> Impl::XLTokenizer::Split() {$/;"	f	class:Impl::XLTokenizer	typeref:typename:vector<Impl::XLToken>
Standalone mode	extern/libgit2/docs/fuzzing.md	/^## Standalone mode$/;"	s
Starter Projects	extern/libgit2/docs/contributing.md	/^## Starter Projects$/;"	s
Starter Projects	extern/libgit2/docs/projects.md	/^## Starter Projects$/;"	s
State	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSheet_Impl.cpp	/^const XLSheetState& Impl::XLSheet::State() const {$/;"	f	class:Impl::XLSheet	typeref:typename:const XLSheetState &
State	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLSheet.cpp	/^const XLSheetState& XLSheet::State() const {$/;"	f	class:XLSheet	typeref:typename:const XLSheetState &
StreamEndStop	extern/NamedType/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
String	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^        Empty, Boolean, Number, Error, String$/;"	e	enum:OpenXLSX::Impl::XLCellType
String	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^        String, SharedString, InlineString$/;"	e	enum:OpenXLSX::Impl::XLStringType
String	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Empty, Boolean, Integer, Float, Error, String$/;"	e	enum:OpenXLSX::XLValueType
StringExists	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSharedStrings_Impl.cpp	/^bool Impl::XLSharedStrings::StringExists(std::string_view str) const {$/;"	f	class:Impl::XLSharedStrings	typeref:typename:bool
StringExists	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSharedStrings_Impl.cpp	/^bool Impl::XLSharedStrings::StringExists(unsigned long index) const {$/;"	f	class:Impl::XLSharedStrings	typeref:typename:bool
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<NSObject*> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<NSString*> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<bool> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<char *> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<char const *> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<char> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<char[SZ]> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<double> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<float> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<int> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<long long> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<long> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<signed char> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<signed char[SZ]> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<std::nullptr_t> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<std::pair<T1, T2> > {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<std::string> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<std::vector<T, Allocator> > {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<std::wstring> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<unsigned char> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<unsigned char[SZ]> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<unsigned int> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<unsigned long long> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<unsigned long> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<wchar_t *> {$/;"	s	namespace:Catch
StringMaker	extern/NamedType/catch.hpp	/^    struct StringMaker<wchar_t const *> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<NSObject*> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<NSString*> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<R, typename std::enable_if<is_range<R>::value && !::Catch::Detail::IsStre/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<T[SZ]> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<T^> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<bool> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<char *> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<char const *> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<char> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<char[SZ]> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<double> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<float> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<int> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<long long> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<long> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<signed char> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<signed char[SZ]> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<std::byte> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<std::monostate> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<std::nullptr_t> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<std::optional<T> > {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<std::pair<T1, T2> > {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<std::string> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<std::string_view> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<std::wstring> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<std::wstring_view> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<unsigned char> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<unsigned char[SZ]> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<unsigned int> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<unsigned long long> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<unsigned long> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<wchar_t *> {$/;"	s	namespace:Catch
StringMaker	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct StringMaker<wchar_t const *> {$/;"	s	namespace:Catch
StringRef	extern/NamedType/catch.hpp	/^    class StringRef {$/;"	c	namespace:Catch
StringRef	extern/OpenXLSX/tests/catch/catch.hpp	/^        StringRef( StringRef const& other ) noexcept$/;"	f	class:Catch::StringRef
StringRef	extern/OpenXLSX/tests/catch/catch.hpp	/^        StringRef( StringRef&& other ) noexcept$/;"	f	class:Catch::StringRef
StringRef	extern/OpenXLSX/tests/catch/catch.hpp	/^        StringRef( char const* rawChars, size_type size ) noexcept$/;"	f	class:Catch::StringRef
StringRef	extern/OpenXLSX/tests/catch/catch.hpp	/^        StringRef( std::string const& stdString ) noexcept$/;"	f	class:Catch::StringRef
StringRef	extern/OpenXLSX/tests/catch/catch.hpp	/^        StringRef() noexcept$/;"	f	class:Catch::StringRef
StringRef	extern/OpenXLSX/tests/catch/catch.hpp	/^    class StringRef {$/;"	c	namespace:Catch
Strong typing over generic types	extern/NamedType/README.md	/^## Strong typing over generic types$/;"	s
Strong typing over references	extern/NamedType/README.md	/^## Strong typing over references$/;"	s
StrongA	extern/NamedType/main.cpp	/^    using StrongA = fluent::NamedType<A, struct StrongATag, fluent::Callable>;$/;"	t	typeref:typename:fluent::NamedType<A,struct StrongATag,fluent::Callable>	file:
StrongA	extern/NamedType/main.cpp	/^    using StrongA = fluent::NamedType<A, struct StrongATag, fluent::FunctionCallable>;$/;"	t	typeref:typename:fluent::NamedType<A,struct StrongATag,fluent::FunctionCallable>	file:
StrongA	extern/NamedType/main.cpp	/^    using StrongA = fluent::NamedType<A, struct StrongATag, fluent::ImplicitlyConvertibleTo<B>::/;"	t	typeref:typename:fluent::NamedType<A,struct StrongATag,fluent::ImplicitlyConvertibleTo<B>::templ>	file:
StrongA	extern/NamedType/main.cpp	/^    using StrongA = fluent::NamedType<A, struct StrongATag, fluent::MethodCallable>;$/;"	t	typeref:typename:fluent::NamedType<A,struct StrongATag,fluent::MethodCallable>	file:
StrongInt	extern/NamedType/main.cpp	/^    using StrongInt = fluent::NamedType<int, struct StrongIntTag>;$/;"	t	typeref:typename:fluent::NamedType<int,struct StrongIntTag>	file:
Structs	extern/libgit2/docs/conventions.md	/^## Structs$/;"	s
Style Guide	extern/libgit2/docs/contributing.md	/^## Style Guide$/;"	s
Styles	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Styles,$/;"	e	enum:OpenXLSX::Impl::XLContentType
Styles	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Styles,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
Subject	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Subject,$/;"	e	enum:OpenXLSX::XLProperty
SubstituteNameLength	extern/libgit2/src/win32/reparse.h	/^			USHORT SubstituteNameLength;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470208	typeref:typename:USHORT
SubstituteNameLength	extern/libgit2/src/win32/reparse.h	/^			USHORT SubstituteNameLength;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470308	typeref:typename:USHORT
SubstituteNameOffset	extern/libgit2/src/win32/reparse.h	/^			USHORT SubstituteNameOffset;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470208	typeref:typename:USHORT
SubstituteNameOffset	extern/libgit2/src/win32/reparse.h	/^			USHORT SubstituteNameOffset;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470308	typeref:typename:USHORT
Subtractable	extern/NamedType/underlying_functionalities.hpp	/^struct Subtractable : crtp<T, Subtractable>$/;"	s	namespace:fluent
Subtractable	ntskills.hpp	/^template <typename T> struct Subtractable : crtp<T, Subtractable> {$/;"	s	namespace:nt
SubtractableType	extern/NamedType/main.cpp	/^    using SubtractableType = fluent::NamedType<int, struct SubtractableTag, fluent::Subtractable/;"	t	typeref:typename:fluent::NamedType<int,struct SubtractableTag,fluent::Subtractable>	file:
Supported Versions	extern/libgit2/SECURITY.md	/^## Supported Versions$/;"	s
SuppressFail	extern/OpenXLSX/tests/catch/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SymbolicLinkReparseBuffer	extern/libgit2/src/win32/reparse.h	/^		} SymbolicLinkReparseBuffer;$/;"	m	union:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a	typeref:struct:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a::__anon4def82470208
T	extern/libgit2/deps/http-parser/http_parser.c	/^# define T(/;"	d	file:
T	extern/libgit2/src/delta.c	/^static const unsigned int T[256] = {$/;"	v	typeref:typename:const unsigned int[256]	file:
TABLE	extern/libgit2/deps/zlib/inflate.h	/^        TABLE,      \/* i: waiting for dynamic block table lengths *\/$/;"	e	enum:__anon92f8b1ba0103
TABLE_GET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define TABLE_GET(/;"	d
TABLE_HASH	extern/libgit2/src/xdiff/xhistogram.c	/^#define TABLE_HASH(/;"	d	file:
TAGS	extern/libgit2/CMakeLists.txt	/^OPTION(TAGS				"Generate tags"						OFF)$/;"	D
TAPReporter	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^    struct TAPReporter : StreamingReporterBase<TAPReporter> {$/;"	s	namespace:Catch
TBLS	extern/libgit2/deps/zlib/crc32.c	/^#  define TBLS /;"	d	file:
TDEFL_COMPUTE_ADLER32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_COMPUTE_ADLER32 = 0x02000,$/;"	e	enum:__anon09af45a70603
TDEFL_DEFAULT_MAX_PROBES	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_HUFFMAN_ONLY = 0, TDEFL_DEFAULT_MAX_PROBES = 128, TDEFL_MAX_PROBES_MASK = 0xFFF$/;"	e	enum:__anon09af45a70503
TDEFL_FILTER_MATCHES	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_FILTER_MATCHES = 0x20000,$/;"	e	enum:__anon09af45a70603
TDEFL_FINISH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_NO_FLUSH = 0, TDEFL_SYNC_FLUSH = 2, TDEFL_FULL_FLUSH = 3, TDEFL_FINISH = 4$/;"	e	enum:__anon09af45a70b03
TDEFL_FORCE_ALL_RAW_BLOCKS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_FORCE_ALL_RAW_BLOCKS = 0x80000$/;"	e	enum:__anon09af45a70603
TDEFL_FORCE_ALL_STATIC_BLOCKS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_FORCE_ALL_STATIC_BLOCKS = 0x40000,$/;"	e	enum:__anon09af45a70603
TDEFL_FULL_FLUSH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_NO_FLUSH = 0, TDEFL_SYNC_FLUSH = 2, TDEFL_FULL_FLUSH = 3, TDEFL_FINISH = 4$/;"	e	enum:__anon09af45a70b03
TDEFL_GREEDY_PARSING_FLAG	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_GREEDY_PARSING_FLAG = 0x04000,$/;"	e	enum:__anon09af45a70603
TDEFL_HUFFMAN_ONLY	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_HUFFMAN_ONLY = 0, TDEFL_DEFAULT_MAX_PROBES = 128, TDEFL_MAX_PROBES_MASK = 0xFFF$/;"	e	enum:__anon09af45a70503
TDEFL_LESS_MEMORY	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TDEFL_LESS_MEMORY /;"	d
TDEFL_LEVEL1_HASH_SIZE_MASK	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_LEVEL1_HASH_SIZE_MASK = 4095,$/;"	e	enum:__anon09af45a70803
TDEFL_LEVEL1_HASH_SIZE_MASK	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_LEVEL1_HASH_SIZE_MASK = 4095,$/;"	e	enum:__anon09af45a70903
TDEFL_LZ_CODE_BUF_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024,$/;"	e	enum:__anon09af45a70803
TDEFL_LZ_CODE_BUF_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024,$/;"	e	enum:__anon09af45a70903
TDEFL_LZ_DICT_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_LZ_DICT_SIZE = 32768,$/;"	e	enum:__anon09af45a70703
TDEFL_LZ_DICT_SIZE_MASK	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1,$/;"	e	enum:__anon09af45a70703
TDEFL_LZ_HASH_BITS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_LZ_HASH_BITS = 12,$/;"	e	enum:__anon09af45a70803
TDEFL_LZ_HASH_BITS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_LZ_HASH_BITS = 15,$/;"	e	enum:__anon09af45a70903
TDEFL_LZ_HASH_SHIFT	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3,$/;"	e	enum:__anon09af45a70803
TDEFL_LZ_HASH_SHIFT	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3,$/;"	e	enum:__anon09af45a70903
TDEFL_LZ_HASH_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS$/;"	e	enum:__anon09af45a70803
TDEFL_LZ_HASH_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS$/;"	e	enum:__anon09af45a70903
TDEFL_MAX_HUFF_SYMBOLS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_MAX_HUFF_SYMBOLS = 288,$/;"	e	enum:__anon09af45a70803
TDEFL_MAX_HUFF_SYMBOLS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_MAX_HUFF_SYMBOLS = 288,$/;"	e	enum:__anon09af45a70903
TDEFL_MAX_HUFF_SYMBOLS_0	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_MAX_HUFF_SYMBOLS_0 = 288,$/;"	e	enum:__anon09af45a70703
TDEFL_MAX_HUFF_SYMBOLS_1	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_MAX_HUFF_SYMBOLS_1 = 32,$/;"	e	enum:__anon09af45a70703
TDEFL_MAX_HUFF_SYMBOLS_2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_MAX_HUFF_SYMBOLS_2 = 19,$/;"	e	enum:__anon09af45a70703
TDEFL_MAX_HUFF_TABLES	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_MAX_HUFF_TABLES = 3,$/;"	e	enum:__anon09af45a70703
TDEFL_MAX_MATCH_LEN	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_MAX_MATCH_LEN = 258$/;"	e	enum:__anon09af45a70703
TDEFL_MAX_PROBES_MASK	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_HUFFMAN_ONLY = 0, TDEFL_DEFAULT_MAX_PROBES = 128, TDEFL_MAX_PROBES_MASK = 0xFFF$/;"	e	enum:__anon09af45a70503
TDEFL_MAX_SUPPORTED_HUFF_CODESIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_MAX_SUPPORTED_HUFF_CODESIZE = 32$/;"	e	enum:__anon09af45a71c03
TDEFL_MIN_MATCH_LEN	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_MIN_MATCH_LEN = 3,$/;"	e	enum:__anon09af45a70703
TDEFL_NONDETERMINISTIC_PARSING_FLAG	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_NONDETERMINISTIC_PARSING_FLAG = 0x08000,$/;"	e	enum:__anon09af45a70603
TDEFL_NO_FLUSH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_NO_FLUSH = 0, TDEFL_SYNC_FLUSH = 2, TDEFL_FULL_FLUSH = 3, TDEFL_FINISH = 4$/;"	e	enum:__anon09af45a70b03
TDEFL_OUT_BUF_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13) \/ 10,$/;"	e	enum:__anon09af45a70803
TDEFL_OUT_BUF_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13) \/ 10,$/;"	e	enum:__anon09af45a70903
TDEFL_PROBE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TDEFL_PROBE /;"	d
TDEFL_PUT_BITS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TDEFL_PUT_BITS(/;"	d
TDEFL_PUT_BITS_FAST	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TDEFL_PUT_BITS_FAST(/;"	d
TDEFL_READ_UNALIGNED_WORD	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TDEFL_READ_UNALIGNED_WORD(/;"	d
TDEFL_READ_UNALIGNED_WORD	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static inline mz_uint16 TDEFL_READ_UNALIGNED_WORD(const mz_uint8* p)$/;"	f	typeref:typename:mz_uint16
TDEFL_READ_UNALIGNED_WORD2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TDEFL_READ_UNALIGNED_WORD2(/;"	d
TDEFL_READ_UNALIGNED_WORD2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static inline mz_uint16 TDEFL_READ_UNALIGNED_WORD2(const mz_uint16* p)$/;"	f	typeref:typename:mz_uint16
TDEFL_RLE_MATCHES	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_RLE_MATCHES = 0x10000,$/;"	e	enum:__anon09af45a70603
TDEFL_RLE_PREV_CODE_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TDEFL_RLE_PREV_CODE_SIZE(/;"	d
TDEFL_RLE_ZERO_CODE_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TDEFL_RLE_ZERO_CODE_SIZE(/;"	d
TDEFL_STATUS_BAD_PARAM	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_STATUS_BAD_PARAM = -2, TDEFL_STATUS_PUT_BUF_FAILED = -1, TDEFL_STATUS_OKAY = 0, TDEFL_/;"	e	enum:__anon09af45a70a03
TDEFL_STATUS_DONE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_STATUS_BAD_PARAM = -2, TDEFL_STATUS_PUT_BUF_FAILED = -1, TDEFL_STATUS_OKAY = 0, TDEFL_/;"	e	enum:__anon09af45a70a03
TDEFL_STATUS_OKAY	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_STATUS_BAD_PARAM = -2, TDEFL_STATUS_PUT_BUF_FAILED = -1, TDEFL_STATUS_OKAY = 0, TDEFL_/;"	e	enum:__anon09af45a70a03
TDEFL_STATUS_PUT_BUF_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_STATUS_BAD_PARAM = -2, TDEFL_STATUS_PUT_BUF_FAILED = -1, TDEFL_STATUS_OKAY = 0, TDEFL_/;"	e	enum:__anon09af45a70a03
TDEFL_SYNC_FLUSH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_NO_FLUSH = 0, TDEFL_SYNC_FLUSH = 2, TDEFL_FULL_FLUSH = 3, TDEFL_FINISH = 4$/;"	e	enum:__anon09af45a70b03
TDEFL_WRITE_ZLIB_HEADER	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TDEFL_WRITE_ZLIB_HEADER = 0x01000,$/;"	e	enum:__anon09af45a70603
TEMP_REPO_FOLDER	extern/libgit2/tests/repo/discover.c	/^#define TEMP_REPO_FOLDER /;"	d	file:
TESTSTR	extern/libgit2/tests/core/buffer.c	/^#define TESTSTR /;"	d	file:
TESTSTR_4096	extern/libgit2/tests/core/buffer.c	/^#define TESTSTR_4096 /;"	d	file:
TESTSTR_8192	extern/libgit2/tests/core/buffer.c	/^#define TESTSTR_8192 /;"	d	file:
TEST_CONFIG	extern/libgit2/tests/config/new.c	/^#define TEST_CONFIG /;"	d	file:
TEST_CONFIG	extern/libgit2/tests/config/stress.c	/^#define TEST_CONFIG /;"	d	file:
TEST_DIR	extern/libgit2/tests/index/addall.c	/^#define TEST_DIR /;"	d	file:
TEST_INDEX2_PATH	extern/libgit2/tests/index/tests.c	/^#define TEST_INDEX2_PATH /;"	d	file:
TEST_INDEXBAD_PATH	extern/libgit2/tests/index/tests.c	/^#define TEST_INDEXBAD_PATH /;"	d	file:
TEST_INDEXBIG_PATH	extern/libgit2/tests/index/tests.c	/^#define TEST_INDEXBIG_PATH /;"	d	file:
TEST_INDEX_PATH	extern/libgit2/tests/index/conflicts.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	extern/libgit2/tests/index/names.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	extern/libgit2/tests/index/reuc.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	extern/libgit2/tests/index/stage.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	extern/libgit2/tests/index/tests.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	extern/libgit2/tests/merge/files.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	extern/libgit2/tests/merge/trees/automerge.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	extern/libgit2/tests/merge/trees/trivial.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	extern/libgit2/tests/merge/workdir/setup.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	extern/libgit2/tests/merge/workdir/simple.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	extern/libgit2/tests/merge/workdir/submodules.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	extern/libgit2/tests/merge/workdir/trivial.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_MAILMAP	extern/libgit2/tests/mailmap/basic.c	/^const char TEST_MAILMAP[] =$/;"	v	typeref:typename:const char[]
TEST_REPO_PATH	extern/libgit2/tests/apply/apply_helpers.h	/^#define TEST_REPO_PATH /;"	d
TEST_REPO_PATH	extern/libgit2/tests/apply/both.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/apply/callbacks.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/apply/index.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/apply/tree.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/apply/workdir.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/checkout/conflict.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/cherrypick/bare.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/cherrypick/workdir.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/index/conflicts.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/index/names.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/index/nsec.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/index/reuc.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/index/stage.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/analysis.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/driver.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/files.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/trees/automerge.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/trees/commits.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/trees/modeconflict.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/trees/recursive.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/trees/renames.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/trees/treediff.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/trees/trivial.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/trees/whitespace.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/workdir/dirty.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/workdir/recursive.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/workdir/renames.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/workdir/setup.c	/^#define TEST_REPO_PATH	/;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/workdir/simple.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/workdir/submodules.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/merge/workdir/trivial.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/odb/emptyobjects.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/revert/bare.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	extern/libgit2/tests/revert/workdir.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_URL	extern/libgit2/tests/remote/create.c	/^#define TEST_URL /;"	d	file:
TEST_URL	extern/libgit2/tests/remote/list.c	/^#define TEST_URL /;"	d	file:
THEIRS_AUTOMERGE_BRANCH	extern/libgit2/tests/merge/trees/automerge.c	/^#define THEIRS_AUTOMERGE_BRANCH /;"	d	file:
THEIRS_DIRECTORY_FILE	extern/libgit2/tests/merge/trees/automerge.c	/^#define THEIRS_DIRECTORY_FILE	/;"	d	file:
THEIRS_DIRECTORY_FILE	extern/libgit2/tests/merge/workdir/simple.c	/^#define THEIRS_DIRECTORY_FILE	/;"	d	file:
THEIRS_SIMPLE_BRANCH	extern/libgit2/tests/merge/workdir/setup.c	/^#define THEIRS_SIMPLE_BRANCH	/;"	d	file:
THEIRS_SIMPLE_BRANCH	extern/libgit2/tests/merge/workdir/simple.c	/^#define THEIRS_SIMPLE_BRANCH	/;"	d	file:
THEIRS_SIMPLE_OID	extern/libgit2/tests/merge/workdir/setup.c	/^#define THEIRS_SIMPLE_OID	/;"	d	file:
THEIRS_SIMPLE_OID	extern/libgit2/tests/merge/workdir/simple.c	/^#define THEIRS_SIMPLE_OID	/;"	d	file:
THEIRS_UNRELATED_BRANCH	extern/libgit2/tests/merge/trees/automerge.c	/^#define THEIRS_UNRELATED_BRANCH	/;"	d	file:
THEIRS_UNRELATED_BRANCH	extern/libgit2/tests/merge/workdir/simple.c	/^#define THEIRS_UNRELATED_BRANCH	/;"	d	file:
THEIRS_UNRELATED_OID	extern/libgit2/tests/merge/trees/automerge.c	/^#define THEIRS_UNRELATED_OID	/;"	d	file:
THEIRS_UNRELATED_OID	extern/libgit2/tests/merge/workdir/simple.c	/^#define THEIRS_UNRELATED_OID	/;"	d	file:
THEIRS_UNRELATED_PARENT	extern/libgit2/tests/merge/trees/automerge.c	/^#define THEIRS_UNRELATED_PARENT	/;"	d	file:
THEIRS_UNRELATED_PARENT	extern/libgit2/tests/merge/workdir/simple.c	/^#define THEIRS_UNRELATED_PARENT	/;"	d	file:
THREADCOUNT	extern/libgit2/tests/object/cache.c	/^#define THREADCOUNT /;"	d	file:
THREADS	extern/libgit2/tests/threads/diff.c	/^#define THREADS /;"	d	file:
THREADS	extern/libgit2/tests/threads/refdb.c	/^#define THREADS /;"	d	file:
THREADSAFE	extern/libgit2/CMakeLists.txt	/^OPTION(THREADSAFE			"Build libgit2 as threadsafe"				 ON)$/;"	D
TIME	extern/libgit2/deps/zlib/inflate.h	/^    TIME,       \/* i: waiting for modification time (gzip) *\/$/;"	e	enum:__anon92f8b1ba0103
TIMEOUT_INFINITE	extern/libgit2/src/transports/winhttp.c	/^#define TIMEOUT_INFINITE /;"	d	file:
TINFL_BITBUF_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_BITBUF_SIZE /;"	d
TINFL_CR_BEGIN	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_CR_BEGIN /;"	d
TINFL_CR_FINISH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_CR_FINISH /;"	d
TINFL_CR_RETURN	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_CR_RETURN(/;"	d
TINFL_CR_RETURN_FOREVER	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_CR_RETURN_FOREVER(/;"	d
TINFL_DECOMPRESS_MEM_TO_MEM_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_DECOMPRESS_MEM_TO_MEM_FAILED /;"	d
TINFL_FAST_LOOKUP_BITS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TINFL_FAST_LOOKUP_BITS = 10,$/;"	e	enum:__anon09af45a70f03
TINFL_FAST_LOOKUP_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TINFL_FAST_LOOKUP_SIZE = 1 << TINFL_FAST_LOOKUP_BITS$/;"	e	enum:__anon09af45a70f03
TINFL_FLAG_COMPUTE_ADLER32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TINFL_FLAG_COMPUTE_ADLER32 = 8$/;"	e	enum:__anon09af45a70d03
TINFL_FLAG_HAS_MORE_INPUT	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TINFL_FLAG_HAS_MORE_INPUT = 2,$/;"	e	enum:__anon09af45a70d03
TINFL_FLAG_PARSE_ZLIB_HEADER	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TINFL_FLAG_PARSE_ZLIB_HEADER = 1,$/;"	e	enum:__anon09af45a70d03
TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF = 4,$/;"	e	enum:__anon09af45a70d03
TINFL_GET_BITS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_GET_BITS(/;"	d
TINFL_GET_BYTE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_GET_BYTE(/;"	d
TINFL_HUFF_BITBUF_FILL	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_HUFF_BITBUF_FILL(/;"	d
TINFL_HUFF_DECODE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_HUFF_DECODE(/;"	d
TINFL_LZ_DICT_SIZE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_LZ_DICT_SIZE /;"	d
TINFL_MAX_HUFF_SYMBOLS_0	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TINFL_MAX_HUFF_SYMBOLS_0 = 288,$/;"	e	enum:__anon09af45a70f03
TINFL_MAX_HUFF_SYMBOLS_1	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TINFL_MAX_HUFF_SYMBOLS_1 = 32,$/;"	e	enum:__anon09af45a70f03
TINFL_MAX_HUFF_SYMBOLS_2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TINFL_MAX_HUFF_SYMBOLS_2 = 19,$/;"	e	enum:__anon09af45a70f03
TINFL_MAX_HUFF_TABLES	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    TINFL_MAX_HUFF_TABLES = 3,$/;"	e	enum:__anon09af45a70f03
TINFL_MEMCPY	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_MEMCPY(/;"	d
TINFL_MEMSET	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_MEMSET(/;"	d
TINFL_NEED_BITS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_NEED_BITS(/;"	d
TINFL_SKIP_BITS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_SKIP_BITS(/;"	d
TINFL_STATUS_ADLER32_MISMATCH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            TINFL_STATUS_ADLER32_MISMATCH = -2,$/;"	e	enum:__anon09af45a70e03
TINFL_STATUS_BAD_PARAM	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            TINFL_STATUS_BAD_PARAM = -3,$/;"	e	enum:__anon09af45a70e03
TINFL_STATUS_DONE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            TINFL_STATUS_DONE = 0,$/;"	e	enum:__anon09af45a70e03
TINFL_STATUS_FAILED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            TINFL_STATUS_FAILED = -1,$/;"	e	enum:__anon09af45a70e03
TINFL_STATUS_FAILED_CANNOT_MAKE_PROGRESS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            TINFL_STATUS_FAILED_CANNOT_MAKE_PROGRESS = -4,$/;"	e	enum:__anon09af45a70e03
TINFL_STATUS_HAS_MORE_OUTPUT	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            TINFL_STATUS_HAS_MORE_OUTPUT = 2$/;"	e	enum:__anon09af45a70e03
TINFL_STATUS_NEEDS_MORE_INPUT	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^            TINFL_STATUS_NEEDS_MORE_INPUT = 1,$/;"	e	enum:__anon09af45a70e03
TINFL_USE_64BIT_BITBUF	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define TINFL_USE_64BIT_BITBUF /;"	d
TMP1	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define TMP1 /;"	d	file:
TMP2	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define TMP2 /;"	d	file:
TMP3	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define TMP3 /;"	d	file:
TOKEN	extern/libgit2/deps/http-parser/http_parser.c	/^#define TOKEN(/;"	d	file:
TOO_FAR	extern/libgit2/deps/zlib/deflate.c	/^#  define TOO_FAR /;"	d	file:
TOTAL_BLANK_WEIGHT	extern/libgit2/src/xdiff/xdiffi.c	/^#define TOTAL_BLANK_WEIGHT /;"	d	file:
TRAILER_SEPARATORS	extern/libgit2/src/trailer.c	/^#define TRAILER_SEPARATORS /;"	d	file:
TRANSACTION_CONFIG	extern/libgit2/src/transaction.c	/^	TRANSACTION_CONFIG,$/;"	e	enum:__anon8eca35140103	file:
TRANSACTION_NONE	extern/libgit2/src/transaction.c	/^	TRANSACTION_NONE,$/;"	e	enum:__anon8eca35140103	file:
TRANSACTION_REFS	extern/libgit2/src/transaction.c	/^	TRANSACTION_REFS,$/;"	e	enum:__anon8eca35140103	file:
TRANSFER_ENCODING	extern/libgit2/deps/http-parser/http_parser.c	/^#define TRANSFER_ENCODING /;"	d	file:
TREE_ENTRY_CHECK_NAMELEN	extern/libgit2/src/tree.c	/^#define TREE_ENTRY_CHECK_NAMELEN(/;"	d	file:
TREE_IDX_ANCESTOR	extern/libgit2/src/merge.c	/^	TREE_IDX_ANCESTOR = 0,$/;"	e	enum:__anon41711a7e0103	file:
TREE_IDX_OURS	extern/libgit2/src/merge.c	/^	TREE_IDX_OURS = 1,$/;"	e	enum:__anon41711a7e0103	file:
TREE_IDX_THEIRS	extern/libgit2/src/merge.c	/^	TREE_IDX_THEIRS = 2$/;"	e	enum:__anon41711a7e0103	file:
TREE_OID_ANCESTOR	extern/libgit2/tests/merge/trees/treediff.c	/^#define TREE_OID_ANCESTOR	/;"	d	file:
TREE_OID_BRANCH	extern/libgit2/tests/merge/trees/treediff.c	/^#define TREE_OID_BRANCH	/;"	d	file:
TREE_OID_DF_ANCESTOR	extern/libgit2/tests/merge/trees/treediff.c	/^#define TREE_OID_DF_ANCESTOR	/;"	d	file:
TREE_OID_DF_SIDE1	extern/libgit2/tests/merge/trees/treediff.c	/^#define TREE_OID_DF_SIDE1	/;"	d	file:
TREE_OID_DF_SIDE2	extern/libgit2/tests/merge/trees/treediff.c	/^#define TREE_OID_DF_SIDE2	/;"	d	file:
TREE_OID_MASTER	extern/libgit2/tests/merge/trees/treediff.c	/^#define TREE_OID_MASTER	/;"	d	file:
TREE_OID_RENAMES1	extern/libgit2/tests/merge/trees/treediff.c	/^#define TREE_OID_RENAMES1	/;"	d	file:
TREE_OID_RENAMES2	extern/libgit2/tests/merge/trees/treediff.c	/^#define TREE_OID_RENAMES2	/;"	d	file:
TREE_OID_RENAME_CONFLICT_ANCESTOR	extern/libgit2/tests/merge/trees/treediff.c	/^#define TREE_OID_RENAME_CONFLICT_ANCESTOR	/;"	d	file:
TREE_OID_RENAME_CONFLICT_OURS	extern/libgit2/tests/merge/trees/treediff.c	/^#define TREE_OID_RENAME_CONFLICT_OURS	/;"	d	file:
TREE_OID_RENAME_CONFLICT_THEIRS	extern/libgit2/tests/merge/trees/treediff.c	/^#define TREE_OID_RENAME_CONFLICT_THEIRS	/;"	d	file:
TRUE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define TRUE /;"	d
TRY_FREE	extern/libgit2/deps/zlib/zutil.h	/^#define TRY_FREE(/;"	d
TWOBLUECUBES_CATCH_REPORTER_AUTOMAKE_HPP_INCLUDED	extern/OpenXLSX/tests/catch/catch_reporter_automake.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_AUTOMAKE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_TAP_HPP_INCLUDED	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_TAP_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_TEAMCITY_HPP_INCLUDED	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_TEAMCITY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	extern/NamedType/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	extern/OpenXLSX/tests/catch/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWO_ANCESTOR_OID	extern/libgit2/tests/index/reuc.c	/^#define TWO_ANCESTOR_OID /;"	d	file:
TWO_OUR_OID	extern/libgit2/tests/index/reuc.c	/^#define TWO_OUR_OID /;"	d	file:
TWO_THEIR_OID	extern/libgit2/tests/index/reuc.c	/^#define TWO_THEIR_OID /;"	d	file:
TYPE	extern/libgit2/deps/zlib/inflate.h	/^        TYPE,       \/* i: waiting for type bits, including last-flag bit *\/$/;"	e	enum:__anon92f8b1ba0103
TYPEDO	extern/libgit2/deps/zlib/inflate.h	/^        TYPEDO,     \/* i: same, but skip check to exit inflate on new block *\/$/;"	e	enum:__anon92f8b1ba0103
T_0_15	extern/libgit2/src/hash/sha1/generic.c	/^#define T_0_15(/;"	d	file:
T_16_19	extern/libgit2/src/hash/sha1/generic.c	/^#define T_16_19(/;"	d	file:
T_20_39	extern/libgit2/src/hash/sha1/generic.c	/^#define T_20_39(/;"	d	file:
T_40_59	extern/libgit2/src/hash/sha1/generic.c	/^#define T_40_59(/;"	d	file:
T_60_79	extern/libgit2/src/hash/sha1/generic.c	/^#define T_60_79(/;"	d	file:
Table	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Table,$/;"	e	enum:OpenXLSX::Impl::XLContentType
Table of Contents	extern/libgit2/README.md	/^Table of Contents$/;"	c
TablePrinter	extern/OpenXLSX/benchmark/table_printer.h	/^    TablePrinter::TablePrinter(std::ostream* output, const std::string& separator) {$/;"	f	class:bprinter::TablePrinter
TablePrinter	extern/OpenXLSX/benchmark/table_printer.h	/^    class TablePrinter$/;"	c	namespace:bprinter
TagId	git.hpp	/^using TagId = nt::NamedType<std::string, struct TagIdTag>;$/;"	t	namespace:git	typeref:typename:nt::NamedType<std::string,struct TagIdTag>
Target	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^XMLAttribute Impl::XLRelationshipItem::Target() const {$/;"	f	class:Impl::XLRelationshipItem	typeref:typename:XMLAttribute
TargetExists	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^bool Impl::XLRelationships::TargetExists(const std::string& target) const {$/;"	f	class:Impl::XLRelationships	typeref:typename:bool
TeamCityReporter	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        TeamCityReporter( ReporterConfig const& _config )$/;"	f	struct:Catch::TeamCityReporter
TeamCityReporter	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^    struct TeamCityReporter : StreamingReporterBase<TeamCityReporter> {$/;"	s	namespace:Catch
Template	extern/libgit2/tests/generate.py	/^    class Template(object):$/;"	c	class:Module
TestInvokerAsMethod	extern/NamedType/catch.hpp	/^    TestInvokerAsMethod( void (C::*testAsMethod)() ) noexcept : m_testAsMethod( testAsMethod ) {/;"	f	class:Catch::TestInvokerAsMethod
TestInvokerAsMethod	extern/NamedType/catch.hpp	/^class TestInvokerAsMethod : public ITestInvoker {$/;"	c	namespace:Catch
TestInvokerAsMethod	extern/OpenXLSX/tests/catch/catch.hpp	/^    TestInvokerAsMethod( void (C::*testAsMethod)() ) noexcept : m_testAsMethod( testAsMethod ) {/;"	f	class:Catch::TestInvokerAsMethod
TestInvokerAsMethod	extern/OpenXLSX/tests/catch/catch.hpp	/^class TestInvokerAsMethod : public ITestInvoker {$/;"	c	namespace:Catch
TestSuite	extern/libgit2/tests/generate.py	/^class TestSuite(object):$/;"	c
Tests	extern/libgit2/docs/conventions.md	/^## Tests$/;"	s
The internal error API	extern/libgit2/docs/error-handling.md	/^The internal error API$/;"	s
The public error API	extern/libgit2/docs/error-handling.md	/^The public error API$/;"	s
Theme	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Theme,$/;"	e	enum:OpenXLSX::Impl::XLContentType
Theme	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Theme,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
Threading	extern/libgit2/README.md	/^Threading$/;"	c
Threading and cryptographic libraries	extern/libgit2/docs/threading.md	/^Threading and cryptographic libraries$/;"	c
Threading in libgit2	extern/libgit2/docs/threading.md	/^Threading in libgit2$/;"	c
ThrewException	extern/OpenXLSX/tests/catch/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrowException	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        static void ThrowException(mz_zip_error error, const std::string& errorString) {$/;"	f	class:Zippy::ZipArchive	typeref:typename:void
Time	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            const time_t& Time() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:const time_t &
Time	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        const time_t Time;$/;"	m	struct:Zippy::ZipEntryMetaData	typeref:typename:const time_t
Time	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        const time_t& Time() const {$/;"	f	class:Zippy::ZipEntry	typeref:typename:const time_t &
Title	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Title,$/;"	e	enum:OpenXLSX::XLProperty
Trace	extern/libgit2/deps/zlib/zutil.h	/^#  define Trace(/;"	d
Tracec	extern/libgit2/deps/zlib/zutil.h	/^#  define Tracec(/;"	d
Tracecv	extern/libgit2/deps/zlib/zutil.h	/^#  define Tracecv(/;"	d
Tracev	extern/libgit2/deps/zlib/zutil.h	/^#  define Tracev(/;"	d
Tracevv	extern/libgit2/deps/zlib/zutil.h	/^#  define Tracevv(/;"	d
Transpose	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellRange_Impl.cpp	/^void Impl::XLCellRange::Transpose(bool state) const {$/;"	f	class:Impl::XLCellRange	typeref:typename:void
Transpose	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^void XLCellRange::Transpose(bool state) const {$/;"	f	class:XLCellRange	typeref:typename:void
TreeBark	git.hpp	/^  TreeBark(const UPtr<git_repository> &rhs) : repo(rhs) {}$/;"	f	struct:git::TreeBark
TreeBark	git.hpp	/^struct TreeBark {$/;"	s	namespace:git
TreeId	git.hpp	/^using TreeId = nt::NamedType<std::string, struct TreeIdTag>;$/;"	t	namespace:git	typeref:typename:nt::NamedType<std::string,struct TreeIdTag>
Troubleshooting libgit2 Problems	extern/libgit2/docs/troubleshooting.md	/^Troubleshooting libgit2 Problems$/;"	c
True	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^        True, False$/;"	e	enum:OpenXLSX::Impl::XLBool
TupleElementPrinter	extern/NamedType/catch.hpp	/^            struct TupleElementPrinter {$/;"	s	namespace:Catch::Detail
TupleElementPrinter	extern/NamedType/catch.hpp	/^            struct TupleElementPrinter<Tuple, N, false> {$/;"	s	namespace:Catch::Detail
TupleElementPrinter	extern/OpenXLSX/tests/catch/catch.hpp	/^            struct TupleElementPrinter {$/;"	s	namespace:Catch::Detail
TupleElementPrinter	extern/OpenXLSX/tests/catch/catch.hpp	/^            struct TupleElementPrinter<Tuple, N, false> {$/;"	s	namespace:Catch::Detail
Type	extern/OpenXLSX/library/openxlsx/implementation/sources/XLContentTypes_Impl.cpp	/^Impl::XLContentType Impl::XLContentItem::Type() const {$/;"	f	class:Impl::XLContentItem	typeref:typename:Impl::XLContentType
Type	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^Impl::XLRelationshipType Impl::XLRelationshipItem::Type() const {$/;"	f	class:Impl::XLRelationshipItem	typeref:typename:Impl::XLRelationshipType
Type	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSheet_Impl.cpp	/^const XLSheetType& Impl::XLSheet::Type() const {$/;"	f	class:Impl::XLSheet	typeref:typename:const XLSheetType &
Type	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLSheet.cpp	/^const XLSheetType& XLSheet::Type() const {$/;"	f	class:XLSheet	typeref:typename:const XLSheetType &
TypeAttribute	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^XMLAttribute Impl::XLCellValue::TypeAttribute() {$/;"	f	class:Impl::XLCellValue	typeref:typename:XMLAttribute
TypeAttribute	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^const XMLAttribute Impl::XLCellValue::TypeAttribute() const {$/;"	f	class:Impl::XLCellValue	typeref:typename:const XMLAttribute
TypeAttribute	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^const XMLAttribute Impl::XLCell::TypeAttribute() const {$/;"	f	class:Impl::XLCell	typeref:typename:const XMLAttribute
TypeOfSheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^XLSheetType Impl::XLWorkbook::TypeOfSheet(const std::string& sheetName) const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:XLSheetType
TypeOfSheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^XLSheetType Impl::XLWorkbook::TypeOfSheet(unsigned int index) const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:XLSheetType
TypeOfSheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^XLSheetType XLWorkbook::TypeOfSheet(const std::string& sheetName) const {$/;"	f	class:XLWorkbook	typeref:typename:XLSheetType
TypeOfSheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^XLSheetType XLWorkbook::TypeOfSheet(unsigned int index) const {$/;"	f	class:XLWorkbook	typeref:typename:XLSheetType
Typedefs	extern/libgit2/docs/conventions.md	/^## Typedefs$/;"	s
Types	extern/libgit2/tests/resources/typechanges/README.md	/^Types$/;"	s
U	extern/libgit2/src/delta.c	/^static const unsigned int U[256] = {$/;"	v	typeref:typename:const unsigned int[256]	file:
U	extern/libgit2/src/wildmatch.c	/^	U = GIT_PUNCT,$/;"	e	enum:__anon17a406cb0103	file:
UCD_BLOCK_MASK	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define UCD_BLOCK_MASK /;"	d	file:
UCD_BLOCK_SHIFT	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^#define UCD_BLOCK_SHIFT /;"	d	file:
UCD_BLOCK_SIZE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_BLOCK_SIZE /;"	d
UCD_CASESET	extern/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_CASESET(/;"	d
UCD_CATEGORY	extern/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_CATEGORY(/;"	d
UCD_CHARTYPE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_CHARTYPE(/;"	d
UCD_GRAPHBREAK	extern/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_GRAPHBREAK(/;"	d
UCD_OTHERCASE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_OTHERCASE(/;"	d
UCD_SCRIPT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_SCRIPT(/;"	d
UCHAR21	extern/libgit2/deps/pcre/pcre_internal.h	/^#define UCHAR21(/;"	d
UCHAR21INC	extern/libgit2/deps/pcre/pcre_internal.h	/^#define UCHAR21INC(/;"	d
UCHAR21INCTEST	extern/libgit2/deps/pcre/pcre_internal.h	/^#define UCHAR21INCTEST(/;"	d
UCHAR21TEST	extern/libgit2/deps/pcre/pcre_internal.h	/^#define UCHAR21TEST(/;"	d
UCHAR_SHIFT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define UCHAR_SHIFT /;"	d
UF_FRAGMENT	extern/libgit2/deps/http-parser/http_parser.h	/^  , UF_FRAGMENT         = 5$/;"	e	enum:http_parser_url_fields
UF_HOST	extern/libgit2/deps/http-parser/http_parser.h	/^  , UF_HOST             = 1$/;"	e	enum:http_parser_url_fields
UF_MAX	extern/libgit2/deps/http-parser/http_parser.h	/^  , UF_MAX              = 7$/;"	e	enum:http_parser_url_fields
UF_PATH	extern/libgit2/deps/http-parser/http_parser.h	/^  , UF_PATH             = 3$/;"	e	enum:http_parser_url_fields
UF_PORT	extern/libgit2/deps/http-parser/http_parser.h	/^  , UF_PORT             = 2$/;"	e	enum:http_parser_url_fields
UF_QUERY	extern/libgit2/deps/http-parser/http_parser.h	/^  , UF_QUERY            = 4$/;"	e	enum:http_parser_url_fields
UF_SCHEMA	extern/libgit2/deps/http-parser/http_parser.h	/^  { UF_SCHEMA           = 0$/;"	e	enum:http_parser_url_fields
UF_USERINFO	extern/libgit2/deps/http-parser/http_parser.h	/^  , UF_USERINFO         = 6$/;"	e	enum:http_parser_url_fields
UI	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		typedef uint32_t UI; \/\/ BCC5 workaround$/;"	t	function:gen_nan	typeref:typename:uint32_t	file:
UINT16_C	extern/libgit2/include/git2/stdint.h	/^#define UINT16_C(/;"	d
UINT16_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINT16_MAX /;"	d
UINT31_MAX	extern/libgit2/src/indexer.c	/^#define UINT31_MAX /;"	d	file:
UINT32_C	extern/libgit2/include/git2/stdint.h	/^#define UINT32_C(/;"	d
UINT32_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINT32_MAX /;"	d
UINT64_C	extern/libgit2/include/git2/stdint.h	/^#define UINT64_C(/;"	d
UINT64_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINT64_MAX /;"	d
UINT8_C	extern/libgit2/include/git2/stdint.h	/^#define UINT8_C(/;"	d
UINT8_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINT8_MAX /;"	d
UINTMAX_C	extern/libgit2/include/git2/stdint.h	/^#define UINTMAX_C /;"	d
UINTMAX_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINTMAX_MAX /;"	d
UINTPTR_MAX	extern/libgit2/include/git2/stdint.h	/^#  define UINTPTR_MAX /;"	d
UINT_FAST16_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINT_FAST16_MAX /;"	d
UINT_FAST32_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINT_FAST32_MAX /;"	d
UINT_FAST64_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINT_FAST64_MAX /;"	d
UINT_FAST8_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINT_FAST8_MAX /;"	d
UINT_LEAST16_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINT_LEAST16_MAX /;"	d
UINT_LEAST32_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINT_LEAST32_MAX /;"	d
UINT_LEAST64_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINT_LEAST64_MAX /;"	d
UINT_LEAST8_MAX	extern/libgit2/include/git2/stdint.h	/^#define UINT_LEAST8_MAX /;"	d
ULLONG_MAX	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^#	define ULLONG_MAX /;"	d	file:
ULLONG_MAX	extern/libgit2/deps/http-parser/http_parser.c	/^# define ULLONG_MAX /;"	d	file:
UNALIGNED_OK	extern/libgit2/deps/zlib/zconf.h	/^#  define UNALIGNED_OK$/;"	d
UNCHANGED_INDEX_ENTRY	extern/libgit2/tests/merge/trees/automerge.c	/^#define UNCHANGED_INDEX_ENTRY /;"	d	file:
UNCHANGED_INDEX_ENTRY	extern/libgit2/tests/merge/workdir/simple.c	/^#define UNCHANGED_INDEX_ENTRY /;"	d	file:
UNDERLYING_FUNCTIONALITIES_HPP	extern/NamedType/underlying_functionalities.hpp	/^#define UNDERLYING_FUNCTIONALITIES_HPP$/;"	d
UNDERLYING_FUNCTIONALITIES_HPP	ntskills.hpp	/^#define UNDERLYING_FUNCTIONALITIES_HPP$/;"	d
UNIQUE_BLOB_FN	extern/libgit2/tests/odb/freshen.c	/^#define UNIQUE_BLOB_FN /;"	d	file:
UNIQUE_BLOB_ID	extern/libgit2/tests/odb/freshen.c	/^#define UNIQUE_BLOB_ID /;"	d	file:
UNIQUE_STR	extern/libgit2/tests/odb/freshen.c	/^#define UNIQUE_STR /;"	d	file:
UNI_MAX_BMP	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_MAX_BMP /;"	d	file:
UNI_MAX_LEGAL_UTF32	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_MAX_LEGAL_UTF32 /;"	d	file:
UNI_MAX_UTF16	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_MAX_UTF16 /;"	d	file:
UNI_MAX_UTF32	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_MAX_UTF32 /;"	d	file:
UNI_MAX_UTF8_BYTES_PER_CODE_POINT	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_MAX_UTF8_BYTES_PER_CODE_POINT /;"	d	file:
UNI_REPLACEMENT_CHAR	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_REPLACEMENT_CHAR /;"	d	file:
UNI_SUR_HIGH_END	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_SUR_HIGH_END /;"	d	file:
UNI_SUR_HIGH_START	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_SUR_HIGH_START /;"	d	file:
UNI_SUR_LOW_END	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_SUR_LOW_END /;"	d	file:
UNI_SUR_LOW_START	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_SUR_LOW_START /;"	d	file:
UNRELATED_NEW1	extern/libgit2/tests/merge/workdir/simple.c	/^#define UNRELATED_NEW1 /;"	d	file:
UNRELATED_NEW2	extern/libgit2/tests/merge/workdir/simple.c	/^#define UNRELATED_NEW2 /;"	d	file:
UNUSED	extern/libgit2/examples/common.h	/^#define UNUSED(/;"	d
UNUSED	extern/libgit2/fuzzers/config_file_fuzzer.c	/^#define UNUSED(/;"	d	file:
UNUSED	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^#define UNUSED(/;"	d	file:
UNUSED	extern/libgit2/fuzzers/objects_fuzzer.c	/^#define UNUSED(/;"	d	file:
UPDATE	extern/libgit2/deps/zlib/inflate.c	/^#  define UPDATE(/;"	d	file:
UPDATE	extern/libgit2/examples/add.c	/^	UPDATE = 4,$/;"	e	enum:print_options	file:
UPDATE_HASH	extern/libgit2/deps/zlib/deflate.c	/^#define UPDATE_HASH(/;"	d	file:
UPGRADE	extern/libgit2/deps/http-parser/http_parser.c	/^#define UPGRADE /;"	d	file:
UPTODATE_BRANCH	extern/libgit2/tests/merge/analysis.c	/^#define UPTODATE_BRANCH /;"	d	file:
UPtr	git.hpp	/^template <typename T> using UPtr = std::unique_ptr<T, void (*)(T *)>;$/;"	t	namespace:git
URL	extern/libgit2/tests/online/remotes.c	/^#define URL /;"	d	file:
URLZONE_INTRANET	extern/libgit2/deps/winhttp/urlmon.h	/^#define URLZONE_INTRANET /;"	d
URLZONE_LOCAL_MACHINE	extern/libgit2/deps/winhttp/urlmon.h	/^#define URLZONE_LOCAL_MACHINE /;"	d
URLZONE_TRUSTED	extern/libgit2/deps/winhttp/urlmon.h	/^#define URLZONE_TRUSTED /;"	d
URL_COMPONENTS	extern/libgit2/deps/winhttp/winhttp.h	/^} URL_COMPONENTS, *LPURL_COMPONENTS;$/;"	t	typeref:struct:__anonb531ffc20108
URL_COMPONENTSW	extern/libgit2/deps/winhttp/winhttp.h	/^typedef URL_COMPONENTS URL_COMPONENTSW;$/;"	t	typeref:typename:URL_COMPONENTS
USE_BUNDLED_ZLIB	extern/libgit2/CMakeLists.txt	/^OPTION(USE_BUNDLED_ZLIB    		"Use the bundled version of zlib"			OFF)$/;"	D
USE_DEFAULT	extern/libgit2/src/diff_tform.c	/^#define USE_DEFAULT(/;"	d	file:
USE_GSSAPI	extern/libgit2/CMakeLists.txt	/^OPTION(USE_GSSAPI			"Link with libgssapi for SPNEGO auth"			OFF)$/;"	D
USE_HTTPS	extern/libgit2/CMakeLists.txt	/^OPTION(USE_HTTPS			"Enable HTTPS support. Can be set to a specific backend" ON)$/;"	D
USE_HTTP_PARSER	extern/libgit2/CMakeLists.txt	/^   SET(USE_HTTP_PARSER			"" CACHE STRING "Specifies the HTTP Parser implementation; either syste/;"	v
USE_ICONV	extern/libgit2/CMakeLists.txt	/^	OPTION(USE_ICONV		"Link with and use iconv library"			 ON)$/;"	D
USE_LEAK_CHECKER	extern/libgit2/CMakeLists.txt	/^OPTION(USE_LEAK_CHECKER			"Run tests with leak checker"				OFF)$/;"	D
USE_NSEC	extern/libgit2/cmake/Modules/FindStatNsec.cmake	/^	OPTION( USE_NSEC		"Care about sub-second file mtimes and ctimes"	ON  )$/;"	D
USE_NSEC	extern/libgit2/cmake/Modules/FindStatNsec.cmake	/^	SET(USE_NSEC OFF)$/;"	v
USE_NTLMCLIENT	extern/libgit2/CMakeLists.txt	/^	    OPTION(USE_NTLMCLIENT		"Enable NTLM support on Unix."				OFF )$/;"	D
USE_NTLMCLIENT	extern/libgit2/CMakeLists.txt	/^	    OPTION(USE_NTLMCLIENT		"Enable NTLM support on Unix."				ON )$/;"	D
USE_SHA1	extern/libgit2/CMakeLists.txt	/^OPTION(USE_SHA1				"Enable SHA1. Can be set to CollisionDetection(ON)\/HTTPS\/Generic" ON)$/;"	D
USE_SSH	extern/libgit2/CMakeLists.txt	/^OPTION(USE_SSH				"Link with libssh2 to enable SSH support"		 ON)$/;"	D
USE_STANDALONE_FUZZERS	extern/libgit2/CMakeLists.txt	/^OPTION(USE_STANDALONE_FUZZERS		"Enable standalone fuzzers (compatible with gcc)"	OFF)$/;"	D
UTF16	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^typedef unsigned short  UTF16;   \/* at least 16 bits *\/$/;"	t	typeref:typename:unsigned short	file:
UTF32	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^typedef unsigned int    UTF32;   \/* at least 32 bits *\/$/;"	t	typeref:typename:unsigned int	file:
UTF8	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^typedef unsigned char   UTF8;    \/* typically 8 bits *\/$/;"	t	typeref:typename:unsigned char	file:
UTF8_BOM	extern/libgit2/tests/filter/crlf.h	/^#define UTF8_BOM /;"	d
UTF8_HUNK_HEADER	extern/libgit2/tests/diff/patch.c	/^#define UTF8_HUNK_HEADER /;"	d	file:
UTF8_TRUNCATED_A_HUNK_HEADER	extern/libgit2/tests/diff/patch.c	/^#define UTF8_TRUNCATED_A_HUNK_HEADER /;"	d	file:
UTF8_TRUNCATED_L_HUNK_HEADER	extern/libgit2/tests/diff/patch.c	/^#define UTF8_TRUNCATED_L_HUNK_HEADER /;"	d	file:
UTF_LENGTH	extern/libgit2/deps/pcre/pcre_compile.c	/^#define UTF_LENGTH /;"	d	file:
UUID_LENGTH_CCH	extern/libgit2/src/transports/winhttp.c	/^#define UUID_LENGTH_CCH	/;"	d	file:
UncompressedSize	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            uint64_t UncompressedSize() const {$/;"	f	class:Zippy::Impl::ZipEntry	typeref:typename:uint64_t
UncompressedSize	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        uint64_t UncompressedSize() const {$/;"	f	class:Zippy::ZipEntry	typeref:typename:uint64_t
UncompressedSize	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        uint64_t UncompressedSize;$/;"	m	struct:Zippy::ZipEntryMetaData	typeref:typename:uint64_t
UnderlyingType	extern/NamedType/named_type_impl.hpp	/^    using UnderlyingType = T;$/;"	t	class:fluent::NamedType	typeref:typename:T
UnderlyingType	nt.hpp	/^  using UnderlyingType = T;$/;"	t	class:nt::NamedType	typeref:typename:T
UniqueGenerator	extern/libgit2/tests/resources/userdiff/after/file.php	/^class UniqueGenerator$/;"	c	namespace:Faker
UniqueGenerator	extern/libgit2/tests/resources/userdiff/before/file.php	/^class UniqueGenerator$/;"	c	namespace:Faker
UniqueGenerator	extern/libgit2/tests/resources/userdiff/files/file.php	/^class UniqueGenerator$/;"	c	namespace:Faker
Unit Tests	extern/libgit2/docs/contributing.md	/^## Unit Tests$/;"	s
Unknown	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Unknown$/;"	e	enum:OpenXLSX::Impl::XLContentType
Unknown	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Unknown$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
Unknown	extern/OpenXLSX/tests/catch/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Updating documentation	extern/libgit2/docs/release.md	/^## Updating documentation$/;"	s
Usage	extern/OpenXLSX/library/zippy/README.md	/^## Usage$/;"	s
Usage	extern/OpenXLSX/library/zippy/Zippy/miniz/readme.md	/^## Usage$/;"	s
VALGRIND	extern/libgit2/CMakeLists.txt	/^OPTION(VALGRIND				"Configure build for valgrind"				OFF)$/;"	D
VALUE	extern/libgit2/src/transports/http.c	/^	VALUE$/;"	e	enum:last_cb	file:
VBAProject	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        VBAProject,$/;"	e	enum:OpenXLSX::Impl::XLContentType
VBAProject	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        VBAProject,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
VERBOSE	extern/libgit2/examples/add.c	/^	VERBOSE = 2,$/;"	e	enum:print_options	file:
VERY_SECURE_ENCRYPTION	extern/libgit2/tests/filter/custom_helpers.c	/^#define VERY_SECURE_ENCRYPTION(/;"	d	file:
VMLDrawing	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        VMLDrawing,$/;"	e	enum:OpenXLSX::Impl::XLContentType
VMLDrawing	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        VMLDrawing,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
VOLUME_NAME_DOS	extern/libgit2/src/win32/mingw-compat.h	/^#define VOLUME_NAME_DOS /;"	d
VSPACE_BYTE_CASES	extern/libgit2/deps/pcre/pcre_internal.h	/^#define VSPACE_BYTE_CASES /;"	d
VSPACE_CASES	extern/libgit2/deps/pcre/pcre_internal.h	/^#define VSPACE_CASES /;"	d
VSPACE_LIST	extern/libgit2/deps/pcre/pcre_internal.h	/^#define VSPACE_LIST /;"	d
VSPACE_MULTIBYTE_CASES	extern/libgit2/deps/pcre/pcre_internal.h	/^#define VSPACE_MULTIBYTE_CASES /;"	d
VS_VERSION_INFO	extern/libgit2/src/win32/git2.rc	/^VS_VERSION_INFO		VERSIONINFO	MOVEABLE IMPURE LOADONCALL DISCARDABLE$/;"	v
Value	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^Impl::XLCellValue& Impl::XLCell::Value() {$/;"	f	class:Impl::XLCell	typeref:typename:Impl::XLCellValue &
Value	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^const Impl::XLCellValue& Impl::XLCell::Value() const {$/;"	f	class:Impl::XLCell	typeref:typename:const Impl::XLCellValue &
Value	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCell.cpp	/^XLCellValue XLCell::Value() {$/;"	f	class:XLCell	typeref:typename:XLCellValue
Value	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCell.cpp	/^const XLCellValue XLCell::Value() const {$/;"	f	class:XLCell	typeref:typename:const XLCellValue
ValueNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^XMLNode Impl::XLCellValue::ValueNode() {$/;"	f	class:Impl::XLCellValue	typeref:typename:XMLNode
ValueNode	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^const XMLNode Impl::XLCellValue::ValueNode() const {$/;"	f	class:Impl::XLCellValue	typeref:typename:const XMLNode
ValueType	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^XLValueType Impl::XLCellValue::ValueType() const {$/;"	f	class:Impl::XLCellValue	typeref:typename:XLValueType
ValueType	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^XLValueType Impl::XLCell::ValueType() const {$/;"	f	class:Impl::XLCell	typeref:typename:XLValueType
ValueType	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCell.cpp	/^XLValueType XLCell::ValueType() const {$/;"	f	class:XLCell	typeref:typename:XLValueType
ValueType	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^XLValueType XLCellValue::ValueType() const {$/;"	f	class:XLCellValue	typeref:typename:XLValueType
VeryHidden	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Visible, Hidden, VeryHidden$/;"	e	enum:OpenXLSX::XLSheetState
Visible	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        Visible, Hidden, VeryHidden$/;"	e	enum:OpenXLSX::XLSheetState
W	extern/libgit2/src/hash/sha1/generic.c	/^#define W(/;"	d	file:
W	extern/libgit2/src/hash/sha1/generic.h	/^	unsigned int W[16];$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:unsigned int[16]
WAS_NEWLINE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define WAS_NEWLINE(/;"	d
WCHAR_MAX	extern/libgit2/include/git2/stdint.h	/^#  define WCHAR_MAX /;"	d
WCHAR_MIN	extern/libgit2/include/git2/stdint.h	/^#  define WCHAR_MIN /;"	d
WC_ERR_INVALID_CHARS	extern/libgit2/src/win32/utf-conv.h	/^# define WC_ERR_INVALID_CHARS	/;"	d
WIDECHAR	extern/libgit2/deps/zlib/gzguts.h	/^#  define WIDECHAR$/;"	d
WIDEN	extern/libgit2/src/transports/winhttp.c	/^#define WIDEN(/;"	d	file:
WIDEN2	extern/libgit2/src/transports/winhttp.c	/^#define WIDEN2(/;"	d	file:
WIN32	extern/libgit2/deps/zlib/zconf.h	/^#    define WIN32$/;"	d
WIN32_IS_WSEP	extern/libgit2/src/win32/posix_w32.c	/^#define WIN32_IS_WSEP(/;"	d	file:
WIN32_LEAN_AND_MEAN	extern/libgit2/src/thread-utils.c	/^#	define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_MODE_MASK	extern/libgit2/src/win32/posix_w32.c	/^#define WIN32_MODE_MASK /;"	d	file:
WINDOWS	extern/libgit2/deps/zlib/zconf.h	/^#  define WINDOWS$/;"	d
WINHTTP	extern/libgit2/CMakeLists.txt	/^	OPTION(WINHTTP			"Use Win32 WinHTTP routines"				 ON)$/;"	D
WINHTTPAPI	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTPAPI$/;"	d
WINHTTP_ACCESS_TYPE_DEFAULT_PROXY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ACCESS_TYPE_DEFAULT_PROXY /;"	d
WINHTTP_ACCESS_TYPE_NAMED_PROXY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ACCESS_TYPE_NAMED_PROXY /;"	d
WINHTTP_ACCESS_TYPE_NO_PROXY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ACCESS_TYPE_NO_PROXY /;"	d
WINHTTP_ADDREQ_FLAGS_MASK	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAGS_MASK /;"	d
WINHTTP_ADDREQ_FLAG_ADD	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAG_ADD /;"	d
WINHTTP_ADDREQ_FLAG_ADD_IF_NEW	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAG_ADD_IF_NEW /;"	d
WINHTTP_ADDREQ_FLAG_COALESCE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAG_COALESCE /;"	d
WINHTTP_ADDREQ_FLAG_COALESCE_WITH_COMMA	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAG_COALESCE_WITH_COMMA /;"	d
WINHTTP_ADDREQ_FLAG_COALESCE_WITH_SEMICOLON	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAG_COALESCE_WITH_SEMICOLON /;"	d
WINHTTP_ADDREQ_FLAG_REPLACE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAG_REPLACE /;"	d
WINHTTP_ADDREQ_INDEX_MASK	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_INDEX_MASK /;"	d
WINHTTP_ASYNC_RESULT	extern/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_ASYNC_RESULT, *LPWINHTTP_ASYNC_RESULT;$/;"	t	typeref:struct:__anonb531ffc20208
WINHTTP_AUTH_SCHEME_BASIC	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_SCHEME_BASIC /;"	d
WINHTTP_AUTH_SCHEME_DIGEST	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_SCHEME_DIGEST /;"	d
WINHTTP_AUTH_SCHEME_NEGOTIATE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_SCHEME_NEGOTIATE /;"	d
WINHTTP_AUTH_SCHEME_NTLM	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_SCHEME_NTLM /;"	d
WINHTTP_AUTH_SCHEME_PASSPORT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_SCHEME_PASSPORT /;"	d
WINHTTP_AUTH_TARGET_PROXY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_TARGET_PROXY /;"	d
WINHTTP_AUTH_TARGET_SERVER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_TARGET_SERVER /;"	d
WINHTTP_AUTOLOGON_SECURITY_LEVEL_DEFAULT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOLOGON_SECURITY_LEVEL_DEFAULT /;"	d
WINHTTP_AUTOLOGON_SECURITY_LEVEL_HIGH	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOLOGON_SECURITY_LEVEL_HIGH /;"	d
WINHTTP_AUTOLOGON_SECURITY_LEVEL_LOW	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOLOGON_SECURITY_LEVEL_LOW /;"	d
WINHTTP_AUTOLOGON_SECURITY_LEVEL_MEDIUM	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOLOGON_SECURITY_LEVEL_MEDIUM /;"	d
WINHTTP_AUTOPROXY_AUTO_DETECT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOPROXY_AUTO_DETECT /;"	d
WINHTTP_AUTOPROXY_CONFIG_URL	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOPROXY_CONFIG_URL /;"	d
WINHTTP_AUTOPROXY_OPTIONS	extern/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_AUTOPROXY_OPTIONS;$/;"	t	typeref:struct:__anonb531ffc20608
WINHTTP_AUTOPROXY_RUN_INPROCESS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOPROXY_RUN_INPROCESS /;"	d
WINHTTP_AUTOPROXY_RUN_OUTPROCESS_ONLY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOPROXY_RUN_OUTPROCESS_ONLY /;"	d
WINHTTP_AUTO_DETECT_TYPE_DHCP	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTO_DETECT_TYPE_DHCP /;"	d
WINHTTP_AUTO_DETECT_TYPE_DNS_A	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTO_DETECT_TYPE_DNS_A /;"	d
WINHTTP_CALLBACK_FLAG_ALL_COMPLETIONS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_ALL_COMPLETIONS /;"	d
WINHTTP_CALLBACK_FLAG_ALL_NOTIFICATIONS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_ALL_NOTIFICATIONS /;"	d
WINHTTP_CALLBACK_FLAG_CLOSE_CONNECTION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_CLOSE_CONNECTION /;"	d
WINHTTP_CALLBACK_FLAG_CONNECT_TO_SERVER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_CONNECT_TO_SERVER /;"	d
WINHTTP_CALLBACK_FLAG_DATA_AVAILABLE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_DATA_AVAILABLE /;"	d
WINHTTP_CALLBACK_FLAG_DETECTING_PROXY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_DETECTING_PROXY /;"	d
WINHTTP_CALLBACK_FLAG_HANDLES	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_HANDLES /;"	d
WINHTTP_CALLBACK_FLAG_HEADERS_AVAILABLE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_HEADERS_AVAILABLE /;"	d
WINHTTP_CALLBACK_FLAG_INTERMEDIATE_RESPONSE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_INTERMEDIATE_RESPONSE /;"	d
WINHTTP_CALLBACK_FLAG_READ_COMPLETE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_READ_COMPLETE /;"	d
WINHTTP_CALLBACK_FLAG_RECEIVE_RESPONSE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_RECEIVE_RESPONSE /;"	d
WINHTTP_CALLBACK_FLAG_REDIRECT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_REDIRECT /;"	d
WINHTTP_CALLBACK_FLAG_REQUEST_ERROR	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_REQUEST_ERROR /;"	d
WINHTTP_CALLBACK_FLAG_RESOLVE_NAME	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_RESOLVE_NAME /;"	d
WINHTTP_CALLBACK_FLAG_SECURE_FAILURE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_SECURE_FAILURE /;"	d
WINHTTP_CALLBACK_FLAG_SENDREQUEST_COMPLETE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_SENDREQUEST_COMPLETE /;"	d
WINHTTP_CALLBACK_FLAG_SEND_REQUEST	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_SEND_REQUEST /;"	d
WINHTTP_CALLBACK_FLAG_WRITE_COMPLETE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_WRITE_COMPLETE /;"	d
WINHTTP_CALLBACK_STATUS_CLOSING_CONNECTION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_CLOSING_CONNECTION /;"	d
WINHTTP_CALLBACK_STATUS_CONNECTED_TO_SERVER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_CONNECTED_TO_SERVER /;"	d
WINHTTP_CALLBACK_STATUS_CONNECTING_TO_SERVER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_CONNECTING_TO_SERVER /;"	d
WINHTTP_CALLBACK_STATUS_CONNECTION_CLOSED	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_CONNECTION_CLOSED /;"	d
WINHTTP_CALLBACK_STATUS_DATA_AVAILABLE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_DATA_AVAILABLE /;"	d
WINHTTP_CALLBACK_STATUS_DETECTING_PROXY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_DETECTING_PROXY /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_CERT_CN_INVALID	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_CERT_CN_INVALID /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_CERT_DATE_INVALID	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_CERT_DATE_INVALID /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_CERT_REVOKED	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_CERT_REVOKED /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_CERT_REV_FAILED	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_CERT_REV_FAILED /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_CERT_WRONG_USAGE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_CERT_WRONG_USAGE /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_INVALID_CA	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_INVALID_CA /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_INVALID_CERT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_INVALID_CERT /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_SECURITY_CHANNEL_ERROR	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_SECURITY_CHANNEL_ERROR /;"	d
WINHTTP_CALLBACK_STATUS_HANDLE_CLOSING	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_HANDLE_CLOSING /;"	d
WINHTTP_CALLBACK_STATUS_HANDLE_CREATED	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_HANDLE_CREATED /;"	d
WINHTTP_CALLBACK_STATUS_HEADERS_AVAILABLE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_HEADERS_AVAILABLE /;"	d
WINHTTP_CALLBACK_STATUS_INTERMEDIATE_RESPONSE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_INTERMEDIATE_RESPONSE /;"	d
WINHTTP_CALLBACK_STATUS_NAME_RESOLVED	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_NAME_RESOLVED /;"	d
WINHTTP_CALLBACK_STATUS_READ_COMPLETE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_READ_COMPLETE /;"	d
WINHTTP_CALLBACK_STATUS_RECEIVING_RESPONSE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_RECEIVING_RESPONSE /;"	d
WINHTTP_CALLBACK_STATUS_REDIRECT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_REDIRECT /;"	d
WINHTTP_CALLBACK_STATUS_REQUEST_ERROR	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_REQUEST_ERROR /;"	d
WINHTTP_CALLBACK_STATUS_REQUEST_SENT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_REQUEST_SENT /;"	d
WINHTTP_CALLBACK_STATUS_RESOLVING_NAME	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_RESOLVING_NAME /;"	d
WINHTTP_CALLBACK_STATUS_RESPONSE_RECEIVED	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_RESPONSE_RECEIVED /;"	d
WINHTTP_CALLBACK_STATUS_SECURE_FAILURE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_SECURE_FAILURE /;"	d
WINHTTP_CALLBACK_STATUS_SENDING_REQUEST	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_SENDING_REQUEST /;"	d
WINHTTP_CALLBACK_STATUS_SENDREQUEST_COMPLETE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_SENDREQUEST_COMPLETE /;"	d
WINHTTP_CALLBACK_STATUS_WRITE_COMPLETE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_WRITE_COMPLETE /;"	d
WINHTTP_CERTIFICATE_INFO	extern/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_CERTIFICATE_INFO;$/;"	t	typeref:struct:__anonb531ffc20308
WINHTTP_CONNECTION_INFO	extern/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_CONNECTION_INFO;$/;"	t	typeref:struct:__anonb531ffc20808
WINHTTP_CONNS_PER_SERVER_UNLIMITED	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CONNS_PER_SERVER_UNLIMITED /;"	d
WINHTTP_CURRENT_USER_IE_PROXY_CONFIG	extern/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_CURRENT_USER_IE_PROXY_CONFIG;$/;"	t	typeref:struct:__anonb531ffc20508
WINHTTP_DEF	extern/libgit2/deps/winhttp/CMakeLists.txt	/^	set(WINHTTP_DEF "winhttp.def")$/;"	v
WINHTTP_DEF	extern/libgit2/deps/winhttp/CMakeLists.txt	/^	set(WINHTTP_DEF "winhttp64.def")$/;"	v
WINHTTP_DEFAULT_ACCEPT_TYPES	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DEFAULT_ACCEPT_TYPES /;"	d
WINHTTP_DISABLE_AUTHENTICATION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_AUTHENTICATION /;"	d
WINHTTP_DISABLE_COOKIES	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_COOKIES /;"	d
WINHTTP_DISABLE_KEEP_ALIVE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_KEEP_ALIVE /;"	d
WINHTTP_DISABLE_PASSPORT_AUTH	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_PASSPORT_AUTH /;"	d
WINHTTP_DISABLE_PASSPORT_KEYRING	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_PASSPORT_KEYRING /;"	d
WINHTTP_DISABLE_REDIRECTS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_REDIRECTS /;"	d
WINHTTP_DISABLE_SPN_SERVER_PORT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_SPN_SERVER_PORT /;"	d
WINHTTP_ENABLE_PASSPORT_AUTH	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ENABLE_PASSPORT_AUTH /;"	d
WINHTTP_ENABLE_PASSPORT_KEYRING	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ENABLE_PASSPORT_KEYRING /;"	d
WINHTTP_ENABLE_SPN_SERVER_PORT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ENABLE_SPN_SERVER_PORT /;"	d
WINHTTP_ENABLE_SSL_REVERT_IMPERSONATION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ENABLE_SSL_REVERT_IMPERSONATION /;"	d
WINHTTP_ENABLE_SSL_REVOCATION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ENABLE_SSL_REVOCATION /;"	d
WINHTTP_ERROR_BASE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ERROR_BASE /;"	d
WINHTTP_ERROR_LAST	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ERROR_LAST /;"	d
WINHTTP_FIRST_OPTION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FIRST_OPTION /;"	d
WINHTTP_FLAG_ASYNC	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_ASYNC /;"	d
WINHTTP_FLAG_BYPASS_PROXY_CACHE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_BYPASS_PROXY_CACHE /;"	d
WINHTTP_FLAG_ESCAPE_DISABLE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_ESCAPE_DISABLE /;"	d
WINHTTP_FLAG_ESCAPE_DISABLE_QUERY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_ESCAPE_DISABLE_QUERY /;"	d
WINHTTP_FLAG_ESCAPE_PERCENT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_ESCAPE_PERCENT /;"	d
WINHTTP_FLAG_NULL_CODEPAGE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_NULL_CODEPAGE /;"	d
WINHTTP_FLAG_REFRESH	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_REFRESH /;"	d
WINHTTP_FLAG_SECURE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_ALL	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE_PROTOCOL_ALL /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_SSL2	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE_PROTOCOL_SSL2 /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_SSL3	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE_PROTOCOL_SSL3 /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_TLS1	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE_PROTOCOL_TLS1 /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_1	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_1 /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_1	extern/libgit2/src/transports/winhttp.c	/^# define WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_1 /;"	d	file:
WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_2	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_2 /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_2	extern/libgit2/src/transports/winhttp.c	/^# define WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_2 /;"	d	file:
WINHTTP_HANDLE_TYPE_CONNECT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_HANDLE_TYPE_CONNECT /;"	d
WINHTTP_HANDLE_TYPE_REQUEST	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_HANDLE_TYPE_REQUEST /;"	d
WINHTTP_HANDLE_TYPE_SESSION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_HANDLE_TYPE_SESSION /;"	d
WINHTTP_HEADER_NAME_BY_INDEX	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_HEADER_NAME_BY_INDEX /;"	d
WINHTTP_IGNORE_REQUEST_TOTAL_LENGTH	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_IGNORE_REQUEST_TOTAL_LENGTH /;"	d
WINHTTP_IGNORE_REQUEST_TOTAL_LENGTH	extern/libgit2/src/transports/winhttp.c	/^#define WINHTTP_IGNORE_REQUEST_TOTAL_LENGTH /;"	d	file:
WINHTTP_INVALID_STATUS_CALLBACK	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_INVALID_STATUS_CALLBACK /;"	d
WINHTTP_LAST_OPTION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_LAST_OPTION /;"	d
WINHTTP_NO_ADDITIONAL_HEADERS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_ADDITIONAL_HEADERS /;"	d
WINHTTP_NO_HEADER_INDEX	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_HEADER_INDEX /;"	d
WINHTTP_NO_OUTPUT_BUFFER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_OUTPUT_BUFFER /;"	d
WINHTTP_NO_PROXY_BYPASS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_PROXY_BYPASS /;"	d
WINHTTP_NO_PROXY_NAME	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_PROXY_NAME /;"	d
WINHTTP_NO_REFERER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_REFERER /;"	d
WINHTTP_NO_REQUEST_DATA	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_REQUEST_DATA /;"	d
WINHTTP_OPTION_AUTOLOGON_POLICY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_AUTOLOGON_POLICY /;"	d
WINHTTP_OPTION_CALLBACK	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CALLBACK /;"	d
WINHTTP_OPTION_CLIENT_CERT_CONTEXT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CLIENT_CERT_CONTEXT /;"	d
WINHTTP_OPTION_CLIENT_CERT_ISSUER_LIST	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CLIENT_CERT_ISSUER_LIST /;"	d
WINHTTP_OPTION_CODEPAGE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CODEPAGE /;"	d
WINHTTP_OPTION_CONFIGURE_PASSPORT_AUTH	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CONFIGURE_PASSPORT_AUTH /;"	d
WINHTTP_OPTION_CONNECTION_INFO	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CONNECTION_INFO /;"	d
WINHTTP_OPTION_CONNECT_RETRIES	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CONNECT_RETRIES /;"	d
WINHTTP_OPTION_CONNECT_TIMEOUT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CONNECT_TIMEOUT /;"	d
WINHTTP_OPTION_CONTEXT_VALUE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CONTEXT_VALUE /;"	d
WINHTTP_OPTION_DISABLE_FEATURE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_DISABLE_FEATURE /;"	d
WINHTTP_OPTION_ENABLETRACING	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_ENABLETRACING /;"	d
WINHTTP_OPTION_ENABLE_FEATURE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_ENABLE_FEATURE /;"	d
WINHTTP_OPTION_EXTENDED_ERROR	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_EXTENDED_ERROR /;"	d
WINHTTP_OPTION_GLOBAL_PROXY_CREDS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_GLOBAL_PROXY_CREDS /;"	d
WINHTTP_OPTION_GLOBAL_SERVER_CREDS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_GLOBAL_SERVER_CREDS /;"	d
WINHTTP_OPTION_HANDLE_TYPE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_HANDLE_TYPE /;"	d
WINHTTP_OPTION_HTTP_VERSION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_HTTP_VERSION /;"	d
WINHTTP_OPTION_MAX_CONNS_PER_1_0_SERVER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_MAX_CONNS_PER_1_0_SERVER /;"	d
WINHTTP_OPTION_MAX_CONNS_PER_SERVER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_MAX_CONNS_PER_SERVER /;"	d
WINHTTP_OPTION_MAX_HTTP_AUTOMATIC_REDIRECTS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_MAX_HTTP_AUTOMATIC_REDIRECTS /;"	d
WINHTTP_OPTION_MAX_HTTP_STATUS_CONTINUE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_MAX_HTTP_STATUS_CONTINUE /;"	d
WINHTTP_OPTION_MAX_RESPONSE_DRAIN_SIZE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_MAX_RESPONSE_DRAIN_SIZE /;"	d
WINHTTP_OPTION_MAX_RESPONSE_HEADER_SIZE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_MAX_RESPONSE_HEADER_SIZE /;"	d
WINHTTP_OPTION_PARENT_HANDLE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PARENT_HANDLE /;"	d
WINHTTP_OPTION_PASSPORT_COBRANDING_TEXT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PASSPORT_COBRANDING_TEXT /;"	d
WINHTTP_OPTION_PASSPORT_COBRANDING_URL	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PASSPORT_COBRANDING_URL /;"	d
WINHTTP_OPTION_PASSPORT_RETURN_URL	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PASSPORT_RETURN_URL /;"	d
WINHTTP_OPTION_PASSPORT_SIGN_OUT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PASSPORT_SIGN_OUT /;"	d
WINHTTP_OPTION_PASSWORD	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PASSWORD /;"	d
WINHTTP_OPTION_PEERDIST_EXTENSION_STATE	extern/libgit2/src/transports/winhttp.c	/^#define WINHTTP_OPTION_PEERDIST_EXTENSION_STATE	/;"	d	file:
WINHTTP_OPTION_PROXY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PROXY /;"	d
WINHTTP_OPTION_PROXY_PASSWORD	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PROXY_PASSWORD /;"	d
WINHTTP_OPTION_PROXY_USERNAME	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PROXY_USERNAME /;"	d
WINHTTP_OPTION_READ_BUFFER_SIZE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_READ_BUFFER_SIZE /;"	d
WINHTTP_OPTION_RECEIVE_RESPONSE_TIMEOUT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_RECEIVE_RESPONSE_TIMEOUT /;"	d
WINHTTP_OPTION_RECEIVE_TIMEOUT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_RECEIVE_TIMEOUT /;"	d
WINHTTP_OPTION_REDIRECT_POLICY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REDIRECT_POLICY /;"	d
WINHTTP_OPTION_REDIRECT_POLICY_ALWAYS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REDIRECT_POLICY_ALWAYS /;"	d
WINHTTP_OPTION_REDIRECT_POLICY_DEFAULT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REDIRECT_POLICY_DEFAULT /;"	d
WINHTTP_OPTION_REDIRECT_POLICY_DISALLOW_HTTPS_TO_HTTP	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REDIRECT_POLICY_DISALLOW_HTTPS_TO_HTTP /;"	d
WINHTTP_OPTION_REDIRECT_POLICY_LAST	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REDIRECT_POLICY_LAST /;"	d
WINHTTP_OPTION_REDIRECT_POLICY_NEVER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REDIRECT_POLICY_NEVER /;"	d
WINHTTP_OPTION_REJECT_USERPWD_IN_URL	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REJECT_USERPWD_IN_URL /;"	d
WINHTTP_OPTION_REQUEST_PRIORITY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REQUEST_PRIORITY /;"	d
WINHTTP_OPTION_RESOLVE_TIMEOUT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_RESOLVE_TIMEOUT /;"	d
WINHTTP_OPTION_SECURE_PROTOCOLS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SECURE_PROTOCOLS /;"	d
WINHTTP_OPTION_SECURITY_CERTIFICATE_STRUCT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SECURITY_CERTIFICATE_STRUCT /;"	d
WINHTTP_OPTION_SECURITY_FLAGS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SECURITY_FLAGS /;"	d
WINHTTP_OPTION_SECURITY_KEY_BITNESS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SECURITY_KEY_BITNESS /;"	d
WINHTTP_OPTION_SEND_TIMEOUT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SEND_TIMEOUT /;"	d
WINHTTP_OPTION_SERVER_CERT_CONTEXT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SERVER_CERT_CONTEXT /;"	d
WINHTTP_OPTION_SPN	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SPN /;"	d
WINHTTP_OPTION_SPN_MASK	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SPN_MASK /;"	d
WINHTTP_OPTION_UNLOAD_NOTIFY_EVENT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_UNLOAD_NOTIFY_EVENT /;"	d
WINHTTP_OPTION_URL	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_URL /;"	d
WINHTTP_OPTION_USERNAME	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_USERNAME /;"	d
WINHTTP_OPTION_USER_AGENT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_USER_AGENT /;"	d
WINHTTP_OPTION_USE_GLOBAL_SERVER_CREDENTIALS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_USE_GLOBAL_SERVER_CREDENTIALS /;"	d
WINHTTP_OPTION_WORKER_THREAD_COUNT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_WORKER_THREAD_COUNT /;"	d
WINHTTP_OPTION_WRITE_BUFFER_SIZE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_WRITE_BUFFER_SIZE /;"	d
WINHTTP_PROXY_INFO	extern/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_PROXY_INFO, *LPWINHTTP_PROXY_INFO;$/;"	t	typeref:struct:__anonb531ffc20408
WINHTTP_PROXY_INFOW	extern/libgit2/deps/winhttp/winhttp.h	/^typedef WINHTTP_PROXY_INFO WINHTTP_PROXY_INFOW;$/;"	t	typeref:typename:WINHTTP_PROXY_INFO
WINHTTP_QUERY_ACCEPT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ACCEPT /;"	d
WINHTTP_QUERY_ACCEPT_CHARSET	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ACCEPT_CHARSET /;"	d
WINHTTP_QUERY_ACCEPT_ENCODING	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ACCEPT_ENCODING /;"	d
WINHTTP_QUERY_ACCEPT_LANGUAGE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ACCEPT_LANGUAGE /;"	d
WINHTTP_QUERY_ACCEPT_RANGES	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ACCEPT_RANGES /;"	d
WINHTTP_QUERY_AGE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_AGE /;"	d
WINHTTP_QUERY_ALLOW	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ALLOW /;"	d
WINHTTP_QUERY_AUTHENTICATION_INFO	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_AUTHENTICATION_INFO /;"	d
WINHTTP_QUERY_AUTHORIZATION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_AUTHORIZATION /;"	d
WINHTTP_QUERY_CACHE_CONTROL	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CACHE_CONTROL /;"	d
WINHTTP_QUERY_CONNECTION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONNECTION /;"	d
WINHTTP_QUERY_CONTENT_BASE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_BASE /;"	d
WINHTTP_QUERY_CONTENT_DESCRIPTION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_DESCRIPTION /;"	d
WINHTTP_QUERY_CONTENT_DISPOSITION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_DISPOSITION /;"	d
WINHTTP_QUERY_CONTENT_ENCODING	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_ENCODING /;"	d
WINHTTP_QUERY_CONTENT_ID	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_ID /;"	d
WINHTTP_QUERY_CONTENT_LANGUAGE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_LANGUAGE /;"	d
WINHTTP_QUERY_CONTENT_LENGTH	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_LENGTH /;"	d
WINHTTP_QUERY_CONTENT_LOCATION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_LOCATION /;"	d
WINHTTP_QUERY_CONTENT_MD5	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_MD5 /;"	d
WINHTTP_QUERY_CONTENT_RANGE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_RANGE /;"	d
WINHTTP_QUERY_CONTENT_TRANSFER_ENCODING	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_TRANSFER_ENCODING /;"	d
WINHTTP_QUERY_CONTENT_TYPE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_TYPE /;"	d
WINHTTP_QUERY_COOKIE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_COOKIE /;"	d
WINHTTP_QUERY_COST	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_COST /;"	d
WINHTTP_QUERY_CUSTOM	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CUSTOM /;"	d
WINHTTP_QUERY_DATE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_DATE /;"	d
WINHTTP_QUERY_DERIVED_FROM	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_DERIVED_FROM /;"	d
WINHTTP_QUERY_ETAG	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ETAG /;"	d
WINHTTP_QUERY_EXPECT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_EXPECT /;"	d
WINHTTP_QUERY_EXPIRES	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_EXPIRES /;"	d
WINHTTP_QUERY_FLAG_NUMBER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_FLAG_NUMBER /;"	d
WINHTTP_QUERY_FLAG_REQUEST_HEADERS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_FLAG_REQUEST_HEADERS /;"	d
WINHTTP_QUERY_FLAG_SYSTEMTIME	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_FLAG_SYSTEMTIME /;"	d
WINHTTP_QUERY_FORWARDED	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_FORWARDED /;"	d
WINHTTP_QUERY_FROM	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_FROM /;"	d
WINHTTP_QUERY_HOST	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_HOST /;"	d
WINHTTP_QUERY_IF_MATCH	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_IF_MATCH /;"	d
WINHTTP_QUERY_IF_MODIFIED_SINCE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_IF_MODIFIED_SINCE /;"	d
WINHTTP_QUERY_IF_NONE_MATCH	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_IF_NONE_MATCH /;"	d
WINHTTP_QUERY_IF_RANGE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_IF_RANGE /;"	d
WINHTTP_QUERY_IF_UNMODIFIED_SINCE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_IF_UNMODIFIED_SINCE /;"	d
WINHTTP_QUERY_LAST_MODIFIED	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_LAST_MODIFIED /;"	d
WINHTTP_QUERY_LINK	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_LINK /;"	d
WINHTTP_QUERY_LOCATION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_LOCATION /;"	d
WINHTTP_QUERY_MAX	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_MAX /;"	d
WINHTTP_QUERY_MAX_FORWARDS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_MAX_FORWARDS /;"	d
WINHTTP_QUERY_MESSAGE_ID	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_MESSAGE_ID /;"	d
WINHTTP_QUERY_MIME_VERSION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_MIME_VERSION /;"	d
WINHTTP_QUERY_ORIG_URI	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ORIG_URI /;"	d
WINHTTP_QUERY_PASSPORT_CONFIG	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PASSPORT_CONFIG /;"	d
WINHTTP_QUERY_PASSPORT_URLS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PASSPORT_URLS /;"	d
WINHTTP_QUERY_PRAGMA	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PRAGMA /;"	d
WINHTTP_QUERY_PROXY_AUTHENTICATE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PROXY_AUTHENTICATE /;"	d
WINHTTP_QUERY_PROXY_AUTHORIZATION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PROXY_AUTHORIZATION /;"	d
WINHTTP_QUERY_PROXY_CONNECTION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PROXY_CONNECTION /;"	d
WINHTTP_QUERY_PROXY_SUPPORT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PROXY_SUPPORT /;"	d
WINHTTP_QUERY_PUBLIC	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PUBLIC /;"	d
WINHTTP_QUERY_RANGE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_RANGE /;"	d
WINHTTP_QUERY_RAW_HEADERS	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_RAW_HEADERS /;"	d
WINHTTP_QUERY_RAW_HEADERS_CRLF	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_RAW_HEADERS_CRLF /;"	d
WINHTTP_QUERY_REFERER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_REFERER /;"	d
WINHTTP_QUERY_REFRESH	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_REFRESH /;"	d
WINHTTP_QUERY_REQUEST_METHOD	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_REQUEST_METHOD /;"	d
WINHTTP_QUERY_RETRY_AFTER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_RETRY_AFTER /;"	d
WINHTTP_QUERY_SERVER	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_SERVER /;"	d
WINHTTP_QUERY_SET_COOKIE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_SET_COOKIE /;"	d
WINHTTP_QUERY_STATUS_CODE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_STATUS_CODE /;"	d
WINHTTP_QUERY_STATUS_TEXT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_STATUS_TEXT /;"	d
WINHTTP_QUERY_TITLE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_TITLE /;"	d
WINHTTP_QUERY_TRANSFER_ENCODING	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_TRANSFER_ENCODING /;"	d
WINHTTP_QUERY_UNLESS_MODIFIED_SINCE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_UNLESS_MODIFIED_SINCE /;"	d
WINHTTP_QUERY_UPGRADE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_UPGRADE /;"	d
WINHTTP_QUERY_URI	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_URI /;"	d
WINHTTP_QUERY_USER_AGENT	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_USER_AGENT /;"	d
WINHTTP_QUERY_VARY	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_VARY /;"	d
WINHTTP_QUERY_VERSION	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_VERSION /;"	d
WINHTTP_QUERY_VIA	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_VIA /;"	d
WINHTTP_QUERY_WARNING	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_WARNING /;"	d
WINHTTP_QUERY_WWW_AUTHENTICATE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_WWW_AUTHENTICATE /;"	d
WINHTTP_STATUS_CALLBACK	extern/libgit2/deps/winhttp/winhttp.h	/^typedef VOID (CALLBACK *WINHTTP_STATUS_CALLBACK)(HINTERNET,DWORD_PTR,DWORD,LPVOID,DWORD);$/;"	t	typeref:typename:VOID (CALLBACK *)(HINTERNET,DWORD_PTR,DWORD,LPVOID,DWORD)
WINHTTP_TIME_FORMAT_BUFSIZE	extern/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_TIME_FORMAT_BUFSIZE /;"	d
WINT_MAX	extern/libgit2/include/git2/stdint.h	/^#define WINT_MAX /;"	d
WINT_MIN	extern/libgit2/include/git2/stdint.h	/^#define WINT_MIN /;"	d
WIN_INIT	extern/libgit2/deps/zlib/deflate.h	/^#define WIN_INIT /;"	d
WIN_RC	extern/libgit2/src/CMakeLists.txt	/^		SET(WIN_RC "win32\/git2.rc")$/;"	v
WM_ABORT_ALL	extern/libgit2/src/wildmatch.h	/^#define WM_ABORT_ALL /;"	d
WM_ABORT_TO_STARSTAR	extern/libgit2/src/wildmatch.h	/^#define WM_ABORT_TO_STARSTAR /;"	d
WM_CASEFOLD	extern/libgit2/src/wildmatch.h	/^#define WM_CASEFOLD /;"	d
WM_MATCH	extern/libgit2/src/wildmatch.h	/^#define WM_MATCH /;"	d
WM_NOMATCH	extern/libgit2/src/wildmatch.h	/^#define WM_NOMATCH /;"	d
WM_PATHNAME	extern/libgit2/src/wildmatch.h	/^#define WM_PATHNAME /;"	d
WORD_DEFAULT	extern/libgit2/src/userdiff.h	/^#define WORD_DEFAULT /;"	d
WORKDIR	extern/libgit2/tests/object/blob/write.c	/^#define WORKDIR /;"	d	file:
WORKTREE_CHILD	extern/libgit2/tests/worktree/submodule.c	/^#define WORKTREE_CHILD /;"	d	file:
WORKTREE_FIXTURE_INIT	extern/libgit2/tests/worktree/worktree_helpers.h	/^#define WORKTREE_FIXTURE_INIT(/;"	d
WORKTREE_PARENT	extern/libgit2/tests/worktree/submodule.c	/^#define WORKTREE_PARENT /;"	d	file:
WORKTREE_REPO	extern/libgit2/tests/worktree/bare.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	extern/libgit2/tests/worktree/config.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	extern/libgit2/tests/worktree/merge.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	extern/libgit2/tests/worktree/open.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	extern/libgit2/tests/worktree/reflog.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	extern/libgit2/tests/worktree/refs.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	extern/libgit2/tests/worktree/repository.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	extern/libgit2/tests/worktree/worktree.c	/^#define WORKTREE_REPO /;"	d	file:
WORK_SIZE_SAFETY_MARGIN	extern/libgit2/deps/pcre/pcre_compile.c	/^#define WORK_SIZE_SAFETY_MARGIN /;"	d	file:
WRITE_BUFFER_SIZE	extern/libgit2/src/filebuf.c	/^static const size_t WRITE_BUFFER_SIZE = (4096 * 2);$/;"	v	typeref:typename:const size_t	file:
WRITE_ONE_BREAK	extern/libgit2/src/pack-objects.c	/^	WRITE_ONE_BREAK = 0, \/* writing this will bust the limit; not written *\/$/;"	e	enum:write_one_status	file:
WRITE_ONE_RECURSIVE	extern/libgit2/src/pack-objects.c	/^	WRITE_ONE_RECURSIVE = 2 \/* already scheduled to be written *\/$/;"	e	enum:write_one_status	file:
WRITE_ONE_SKIP	extern/libgit2/src/pack-objects.c	/^	WRITE_ONE_SKIP = -1, \/* already written *\/$/;"	e	enum:write_one_status	file:
WRITE_ONE_WRITTEN	extern/libgit2/src/pack-objects.c	/^	WRITE_ONE_WRITTEN = 1, \/* normal *\/$/;"	e	enum:write_one_status	file:
W_OK	extern/libgit2/src/posix.h	/^#define W_OK /;"	d
W_OK	extern/libgit2/tests/clar.c	/^#			define W_OK /;"	d	file:
Warning	extern/OpenXLSX/tests/catch/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Welcome to libgit2!	extern/libgit2/docs/contributing.md	/^# Welcome to libgit2!$/;"	c
What It Can Do	extern/libgit2/README.md	/^What It Can Do$/;"	c
What's the Catch?	extern/OpenXLSX/tests/catch/README.md	/^## What's the Catch?$/;"	s
Width	extern/NamedType/main.cpp	/^using Width = fluent::NamedType<Meter, struct WidthParameter>;$/;"	t	typeref:typename:fluent::NamedType<Meter,struct WidthParameter>	file:
Width	extern/OpenXLSX/library/openxlsx/implementation/sources/XLColumn_Impl.cpp	/^float Impl::XLColumn::Width() const {$/;"	f	class:Impl::XLColumn	typeref:typename:float
Width	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLColumn.cpp	/^float OpenXLSX::XLColumn::Width() const {$/;"	f	class:OpenXLSX::XLColumn	typeref:typename:float
Windows Junction Points	extern/libgit2/docs/differences-from-git.md	/^Windows Junction Points$/;"	s
WorkSheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^        WorkSheet, ChartSheet, DialogSheet, MacroSheet$/;"	e	enum:OpenXLSX::XLSheetType
Workbook	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Workbook,$/;"	e	enum:OpenXLSX::Impl::XLContentType
Workbook	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Workbook,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
Workbook	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^Impl::XLWorkbook* Impl::XLDocument::Workbook() {$/;"	f	class:Impl::XLDocument	typeref:typename:Impl::XLWorkbook *
Workbook	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^const Impl::XLWorkbook* Impl::XLDocument::Workbook() const {$/;"	f	class:Impl::XLDocument	typeref:typename:const Impl::XLWorkbook *
Workbook	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSheet_Impl.cpp	/^Impl::XLWorkbook* Impl::XLSheet::Workbook() {$/;"	f	class:Impl::XLSheet	typeref:typename:Impl::XLWorkbook *
Workbook	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSheet_Impl.cpp	/^const Impl::XLWorkbook* Impl::XLSheet::Workbook() const {$/;"	f	class:Impl::XLSheet	typeref:typename:const Impl::XLWorkbook *
Workbook	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^XLWorkbook XLDocument::Workbook() {$/;"	f	class:XLDocument	typeref:typename:XLWorkbook
Workbook	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^const XLWorkbook XLDocument::Workbook() const {$/;"	f	class:XLDocument	typeref:typename:const XLWorkbook
WorkbookMacroEnabled	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        WorkbookMacroEnabled,$/;"	e	enum:OpenXLSX::Impl::XLContentType
Worksheet	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Worksheet,$/;"	e	enum:OpenXLSX::Impl::XLContentType
Worksheet	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^        Worksheet,$/;"	e	enum:OpenXLSX::Impl::XLRelationshipType
Worksheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^Impl::XLWorksheet* Impl::XLCell::Worksheet() {$/;"	f	class:Impl::XLCell	typeref:typename:Impl::XLWorksheet *
Worksheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^const Impl::XLWorksheet* Impl::XLCell::Worksheet() const {$/;"	f	class:Impl::XLCell	typeref:typename:const Impl::XLWorksheet *
Worksheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^Impl::XLWorksheet* Impl::XLWorkbook::Worksheet(const std::string& sheetName) {$/;"	f	class:Impl::XLWorkbook	typeref:typename:Impl::XLWorksheet *
Worksheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^const Impl::XLWorksheet* Impl::XLWorkbook::Worksheet(const std::string& sheetName) const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:const Impl::XLWorksheet *
Worksheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^XLWorksheet XLWorkbook::Worksheet(const std::string& sheetName) {$/;"	f	class:XLWorkbook	typeref:typename:XLWorksheet
Worksheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^const XLWorksheet XLWorkbook::Worksheet(const std::string& sheetName) const {$/;"	f	class:XLWorkbook	typeref:typename:const XLWorksheet
WorksheetCount	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^unsigned int Impl::XLWorkbook::WorksheetCount() const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:unsigned int
WorksheetCount	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^unsigned int XLWorkbook::WorksheetCount() const {$/;"	f	class:XLWorkbook	typeref:typename:unsigned int
WorksheetExists	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^bool Impl::XLWorkbook::WorksheetExists(const std::string& sheetName) const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:bool
WorksheetExists	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^bool XLWorkbook::WorksheetExists(const std::string& sheetName) const {$/;"	f	class:XLWorkbook	typeref:typename:bool
WorksheetNames	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^std::vector<std::string> Impl::XLWorkbook::WorksheetNames() const {$/;"	f	class:Impl::XLWorkbook	typeref:typename:std::vector<std::string>
WorksheetNames	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^std::vector<std::string> XLWorkbook::WorksheetNames() const {$/;"	f	class:XLWorkbook	typeref:typename:std::vector<std::string>
WriteTest	extern/OpenXLSX/benchmark/Benchmark.cpp	/^unsigned long WriteTest(T value,$/;"	f	typeref:typename:unsigned long
WriteXMLData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAbstractXMLFile_Impl.cpp	/^void Impl::XLAbstractXMLFile::WriteXMLData() {$/;"	f	class:Impl::XLAbstractXMLFile	typeref:typename:void
WriteXMLData	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^void Impl::XLWorkbook::WriteXMLData() {$/;"	f	class:Impl::XLWorkbook	typeref:typename:void
Writing Clar tests for libgit2	extern/libgit2/tests/README.md	/^Writing Clar tests for libgit2$/;"	c
Writing error messages	extern/libgit2/docs/error-handling.md	/^Writing error messages$/;"	s
X	extern/libgit2/src/wildmatch.c	/^	X = GIT_CNTRL,$/;"	e	enum:__anon17a406cb0103	file:
XCL_END	extern/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_END /;"	d
XCL_HASPROP	extern/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_HASPROP /;"	d
XCL_MAP	extern/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_MAP /;"	d
XCL_NOT	extern/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_NOT /;"	d
XCL_NOTPROP	extern/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_NOTPROP /;"	d
XCL_PROP	extern/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_PROP /;"	d
XCL_RANGE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_RANGE /;"	d
XCL_SINGLE	extern/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_SINGLE /;"	d
XDF_DIFF_ALG	extern/libgit2/src/xdiff/xdiff.h	/^#define XDF_DIFF_ALG(/;"	d
XDF_DIFF_ALGORITHM_MASK	extern/libgit2/src/xdiff/xdiff.h	/^#define XDF_DIFF_ALGORITHM_MASK /;"	d
XDF_HISTOGRAM_DIFF	extern/libgit2/src/xdiff/xdiff.h	/^#define XDF_HISTOGRAM_DIFF /;"	d
XDF_IGNORE_BLANK_LINES	extern/libgit2/src/xdiff/xdiff.h	/^#define XDF_IGNORE_BLANK_LINES /;"	d
XDF_IGNORE_CR_AT_EOL	extern/libgit2/src/xdiff/xdiff.h	/^#define XDF_IGNORE_CR_AT_EOL /;"	d
XDF_IGNORE_WHITESPACE	extern/libgit2/src/xdiff/xdiff.h	/^#define XDF_IGNORE_WHITESPACE /;"	d
XDF_IGNORE_WHITESPACE_AT_EOL	extern/libgit2/src/xdiff/xdiff.h	/^#define XDF_IGNORE_WHITESPACE_AT_EOL /;"	d
XDF_IGNORE_WHITESPACE_CHANGE	extern/libgit2/src/xdiff/xdiff.h	/^#define XDF_IGNORE_WHITESPACE_CHANGE /;"	d
XDF_INDENT_HEURISTIC	extern/libgit2/src/xdiff/xdiff.h	/^#define XDF_INDENT_HEURISTIC /;"	d
XDF_NEED_MINIMAL	extern/libgit2/src/xdiff/xdiff.h	/^#define XDF_NEED_MINIMAL /;"	d
XDF_PATIENCE_DIFF	extern/libgit2/src/xdiff/xdiff.h	/^#define XDF_PATIENCE_DIFF /;"	d
XDF_WHITESPACE_FLAGS	extern/libgit2/src/xdiff/xdiff.h	/^#define XDF_WHITESPACE_FLAGS /;"	d
XDIFFI_H	extern/libgit2/src/xdiff/xdiffi.h	/^#define XDIFFI_H$/;"	d
XDIFF_H	extern/libgit2/src/xdiff/xdiff.h	/^#define XDIFF_H$/;"	d
XDL_ABS	extern/libgit2/src/xdiff/xmacros.h	/^#define XDL_ABS(/;"	d
XDL_ADDBITS	extern/libgit2/src/xdiff/xmacros.h	/^#define XDL_ADDBITS(/;"	d
XDL_BDOP_CPY	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_BDOP_CPY /;"	d
XDL_BDOP_INS	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_BDOP_INS /;"	d
XDL_BDOP_INSB	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_BDOP_INSB /;"	d
XDL_EMIT_FUNCCONTEXT	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_EMIT_FUNCCONTEXT /;"	d
XDL_EMIT_FUNCNAMES	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_EMIT_FUNCNAMES /;"	d
XDL_GUESS_NLINES1	extern/libgit2/src/xdiff/xprepare.c	/^#define XDL_GUESS_NLINES1 /;"	d	file:
XDL_GUESS_NLINES2	extern/libgit2/src/xdiff/xprepare.c	/^#define XDL_GUESS_NLINES2 /;"	d	file:
XDL_HASHLONG	extern/libgit2/src/xdiff/xmacros.h	/^#define XDL_HASHLONG(/;"	d
XDL_HEUR_MIN_COST	extern/libgit2/src/xdiff/xdiffi.c	/^#define XDL_HEUR_MIN_COST /;"	d	file:
XDL_INLINE	extern/libgit2/src/xdiff/xdiffi.c	/^# define XDL_INLINE(/;"	d	file:
XDL_ISDIGIT	extern/libgit2/src/xdiff/xmacros.h	/^#define XDL_ISDIGIT(/;"	d
XDL_ISSPACE	extern/libgit2/src/xdiff/xmacros.h	/^#define XDL_ISSPACE(/;"	d
XDL_KPDIS_RUN	extern/libgit2/src/xdiff/xprepare.c	/^#define XDL_KPDIS_RUN /;"	d	file:
XDL_K_HEUR	extern/libgit2/src/xdiff/xdiffi.c	/^#define XDL_K_HEUR /;"	d	file:
XDL_LE32_GET	extern/libgit2/src/xdiff/xmacros.h	/^#define XDL_LE32_GET(/;"	d
XDL_LE32_PUT	extern/libgit2/src/xdiff/xmacros.h	/^#define XDL_LE32_PUT(/;"	d
XDL_LINE_MAX	extern/libgit2/src/xdiff/xdiffi.c	/^#define XDL_LINE_MAX /;"	d	file:
XDL_MASKBITS	extern/libgit2/src/xdiff/xmacros.h	/^#define XDL_MASKBITS(/;"	d
XDL_MAX	extern/libgit2/src/xdiff/xmacros.h	/^#define XDL_MAX(/;"	d
XDL_MAX_COST_MIN	extern/libgit2/src/xdiff/xdiffi.c	/^#define XDL_MAX_COST_MIN /;"	d	file:
XDL_MAX_EQLIMIT	extern/libgit2/src/xdiff/xprepare.c	/^#define XDL_MAX_EQLIMIT /;"	d	file:
XDL_MERGE_DIFF3	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_MERGE_DIFF3 /;"	d
XDL_MERGE_EAGER	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_MERGE_EAGER /;"	d
XDL_MERGE_FAVOR_OURS	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_MERGE_FAVOR_OURS /;"	d
XDL_MERGE_FAVOR_THEIRS	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_MERGE_FAVOR_THEIRS /;"	d
XDL_MERGE_FAVOR_UNION	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_MERGE_FAVOR_UNION /;"	d
XDL_MERGE_MINIMAL	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_MERGE_MINIMAL /;"	d
XDL_MERGE_ZEALOUS	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_MERGE_ZEALOUS /;"	d
XDL_MERGE_ZEALOUS_ALNUM	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_MERGE_ZEALOUS_ALNUM /;"	d
XDL_MIN	extern/libgit2/src/xdiff/xmacros.h	/^#define XDL_MIN(/;"	d
XDL_MMB_READONLY	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_MMB_READONLY /;"	d
XDL_MMF_ATOMIC	extern/libgit2/src/xdiff/xdiff.h	/^#define XDL_MMF_ATOMIC /;"	d
XDL_PTRFREE	extern/libgit2/src/xdiff/xmacros.h	/^#define XDL_PTRFREE(/;"	d
XDL_SIMSCAN_WINDOW	extern/libgit2/src/xdiff/xprepare.c	/^#define XDL_SIMSCAN_WINDOW /;"	d	file:
XDL_SNAKE_CNT	extern/libgit2/src/xdiff/xdiffi.c	/^#define XDL_SNAKE_CNT /;"	d	file:
XEMIT_H	extern/libgit2/src/xdiff/xemit.h	/^#define XEMIT_H$/;"	d
XINCLUDE_H	extern/libgit2/src/xdiff/xinclude.h	/^#define XINCLUDE_H$/;"	d
XLAbstractXMLFile	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAbstractXMLFile_Impl.h	/^    class XLAbstractXMLFile$/;"	c	namespace:OpenXLSX::Impl
XLAbstractXMLFile	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAbstractXMLFile_Impl.cpp	/^Impl::XLAbstractXMLFile::XLAbstractXMLFile(XLDocument& parent, std::string filePath, const std::/;"	f	class:Impl::XLAbstractXMLFile
XLAppProperties	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAppProperties_Impl.h	/^    class XLAppProperties : public XLAbstractXMLFile$/;"	c	namespace:OpenXLSX::Impl
XLAppProperties	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAppProperties_Impl.cpp	/^Impl::XLAppProperties::XLAppProperties(XLDocument& parent, const std::string& filePath)$/;"	f	class:Impl::XLAppProperties
XLBool	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^    enum class XLBool$/;"	g	namespace:OpenXLSX::Impl
XLCell	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCell_Impl.h	/^    class XLCell$/;"	c	namespace:OpenXLSX::Impl
XLCell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^Impl::XLCell::XLCell(Impl::XLCell const& other)$/;"	f	class:Impl::XLCell
XLCell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^Impl::XLCell::XLCell(Impl::XLCell&& other) noexcept$/;"	f	class:Impl::XLCell
XLCell	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^Impl::XLCell::XLCell(XLWorksheet& parent, XMLNode cellNode)$/;"	f	class:Impl::XLCell
XLCell	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCell.h	/^    class OPENXLSX_EXPORT XLCell$/;"	c	namespace:OpenXLSX
XLCell	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCell.cpp	/^XLCell::XLCell(Impl::XLCell& cell)$/;"	f	class:XLCell
XLCellData	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRow_Impl.h	/^        struct XLCellData$/;"	s	class:OpenXLSX::Impl::XLRow
XLCellIterator	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellRange.h	/^using XLCellIterator = std::vector<OpenXLSX::XLCell>::iterator;$/;"	t	typeref:typename:std::vector<OpenXLSX::XLCell>::iterator
XLCellIteratorConst	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellRange.h	/^using XLCellIteratorConst = std::vector<OpenXLSX::XLCell>::const_iterator;$/;"	t	typeref:typename:std::vector<OpenXLSX::XLCell>::const_iterator
XLCellRange	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellRange_Impl.h	/^    class XLCellRange$/;"	c	namespace:OpenXLSX::Impl
XLCellRange	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellRange_Impl.cpp	/^Impl::XLCellRange::XLCellRange(XLWorksheet& sheet, const XLCellReference& topLeft, const XLCellR/;"	f	class:Impl::XLCellRange
XLCellRange	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellRange_Impl.cpp	/^Impl::XLCellRange::XLCellRange(const XLWorksheet& sheet, const XLCellReference& topLeft,$/;"	f	class:Impl::XLCellRange
XLCellRange	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellRange.h	/^    class OPENXLSX_EXPORT XLCellRange$/;"	c	namespace:OpenXLSX
XLCellRange	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^XLCellRange::XLCellRange(Impl::XLCellRange range)$/;"	f	class:XLCellRange
XLCellRange	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^XLCellRange::XLCellRange(const XLCellRange& other)$/;"	f	class:XLCellRange
XLCellReference	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^    class XLCellReference final$/;"	c	namespace:OpenXLSX::Impl
XLCellReference	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^Impl::XLCellReference::XLCellReference(const std::string& cellAddress)$/;"	f	class:Impl::XLCellReference
XLCellReference	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^Impl::XLCellReference::XLCellReference(unsigned long row, const std::string& column)$/;"	f	class:Impl::XLCellReference
XLCellReference	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellReference_Impl.cpp	/^Impl::XLCellReference::XLCellReference(unsigned long row, unsigned int column)$/;"	f	class:Impl::XLCellReference
XLCellReference	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellReference.h	/^    class OPENXLSX_EXPORT XLCellReference$/;"	c	namespace:OpenXLSX
XLCellReference	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellReference.cpp	/^XLCellReference::XLCellReference(const Impl::XLCellReference& sheet)$/;"	f	class:XLCellReference
XLCellReference	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellReference.cpp	/^XLCellReference::XLCellReference(const XLCellReference& other)$/;"	f	class:XLCellReference
XLCellReference	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellReference.cpp	/^XLCellReference::XLCellReference(const std::string& cellAddress)$/;"	f	class:XLCellReference
XLCellReference	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellReference.cpp	/^XLCellReference::XLCellReference(unsigned long row, unsigned int column)$/;"	f	class:XLCellReference
XLCellType	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^    enum class XLCellType$/;"	g	namespace:OpenXLSX::Impl
XLCellValue	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellValue_Impl.h	/^    class XLCellValue$/;"	c	namespace:OpenXLSX::Impl
XLCellValue	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^Impl::XLCellValue::XLCellValue(XLCell& parent) noexcept$/;"	f	class:Impl::XLCellValue
XLCellValue	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellValue.h	/^    class OPENXLSX_EXPORT XLCellValue$/;"	c	namespace:OpenXLSX
XLCellValue	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^XLCellValue::XLCellValue(Impl::XLCellValue& value)$/;"	f	class:XLCellValue
XLChartsheet	extern/OpenXLSX/library/openxlsx/implementation/headers/XLChartsheet_Impl.h	/^    class XLChartsheet : public XLSheet$/;"	c	namespace:OpenXLSX::Impl
XLChartsheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLChartsheet_Impl.cpp	/^Impl::XLChartsheet::XLChartsheet(XLWorkbook& parent, XMLAttribute name, const std::string& fileP/;"	f	class:Impl::XLChartsheet
XLChartsheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLChartsheet.h	/^    class OPENXLSX_EXPORT XLChartsheet : public XLSheet$/;"	c	namespace:OpenXLSX
XLChartsheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLChartsheet.cpp	/^XLChartsheet::XLChartsheet(Impl::XLSheet& sheet)$/;"	f	class:XLChartsheet
XLColumn	extern/OpenXLSX/library/openxlsx/implementation/headers/XLColumn_Impl.h	/^    class XLColumn$/;"	c	namespace:OpenXLSX::Impl
XLColumn	extern/OpenXLSX/library/openxlsx/implementation/sources/XLColumn_Impl.cpp	/^Impl::XLColumn::XLColumn(XLWorksheet& parent, XMLNode columnNode)$/;"	f	class:Impl::XLColumn
XLColumn	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLColumn.h	/^    class OPENXLSX_EXPORT XLColumn$/;"	c	namespace:OpenXLSX
XLColumn	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLColumn.cpp	/^OpenXLSX::XLColumn::XLColumn(Impl::XLColumn& column)$/;"	f	class:OpenXLSX::XLColumn
XLColumns	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^    using XLColumns = std::map<unsigned int, XLColumn>;$/;"	t	namespace:OpenXLSX::Impl	typeref:typename:std::map<unsigned int,XLColumn>
XLContentItem	extern/OpenXLSX/library/openxlsx/implementation/headers/XLContentTypes_Impl.h	/^    class XLContentItem$/;"	c	namespace:OpenXLSX::Impl
XLContentItem	extern/OpenXLSX/library/openxlsx/implementation/sources/XLContentTypes_Impl.cpp	/^Impl::XLContentItem::XLContentItem(XMLNode node)$/;"	f	class:Impl::XLContentItem
XLContentType	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^    enum class XLContentType$/;"	g	namespace:OpenXLSX::Impl
XLContentTypes	extern/OpenXLSX/library/openxlsx/implementation/headers/XLContentTypes_Impl.h	/^    class XLContentTypes : public XLAbstractXMLFile$/;"	c	namespace:OpenXLSX::Impl
XLContentTypes	extern/OpenXLSX/library/openxlsx/implementation/sources/XLContentTypes_Impl.cpp	/^Impl::XLContentTypes::XLContentTypes(XLDocument& parent, const string& filePath)$/;"	f	class:Impl::XLContentTypes
XLCoordinates	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^    using XLCoordinates = std::pair<unsigned long, unsigned int>;$/;"	t	namespace:OpenXLSX::Impl	typeref:typename:std::pair<unsigned long,unsigned int>
XLCoreProperties	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCoreProperties_Impl.h	/^    class XLCoreProperties : public XLAbstractXMLFile$/;"	c	namespace:OpenXLSX::Impl
XLCoreProperties	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCoreProperties_Impl.cpp	/^Impl::XLCoreProperties::XLCoreProperties(XLDocument& parent, const std::string& filePath)$/;"	f	class:Impl::XLCoreProperties
XLDocument	extern/OpenXLSX/library/openxlsx/implementation/headers/XLDocument_Impl.h	/^    class XLDocument$/;"	c	namespace:OpenXLSX::Impl
XLDocument	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^Impl::XLDocument::XLDocument()$/;"	f	class:Impl::XLDocument
XLDocument	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^Impl::XLDocument::XLDocument(const std::string& docPath)$/;"	f	class:Impl::XLDocument
XLDocument	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDocument.h	/^    class OPENXLSX_EXPORT XLDocument$/;"	c	namespace:OpenXLSX
XLDocument	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^XLDocument::XLDocument()$/;"	f	class:XLDocument
XLDocument	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLDocument.cpp	/^XLDocument::XLDocument(const std::string& name)$/;"	f	class:XLDocument
XLException	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLException.h	/^        inline explicit XLException(const std::string& err)$/;"	f	class:OpenXLSX::XLException
XLException	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLException.h	/^    class OPENXLSX_EXPORT XLException : public std::runtime_error$/;"	c	namespace:OpenXLSX
XLNT	extern/OpenXLSX/README.md	/^### XLNT$/;"	S
XLNumberType	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^    enum class XLNumberType$/;"	g	namespace:OpenXLSX::Impl
XLProperty	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^    enum class XLProperty$/;"	g	namespace:OpenXLSX
XLRelationshipItem	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRelationships_Impl.h	/^    class XLRelationshipItem$/;"	c	namespace:OpenXLSX::Impl
XLRelationshipItem	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^Impl::XLRelationshipItem::XLRelationshipItem(XMLNode node)$/;"	f	class:Impl::XLRelationshipItem
XLRelationshipType	extern/OpenXLSX/library/openxlsx/implementation/headers/XLEnums_impl.h	/^    enum class XLRelationshipType$/;"	g	namespace:OpenXLSX::Impl
XLRelationships	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRelationships_Impl.h	/^    class XLRelationships : public XLAbstractXMLFile$/;"	c	namespace:OpenXLSX::Impl
XLRelationships	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^Impl::XLRelationships::XLRelationships(XLDocument& parent, const std::string& filePath)$/;"	f	class:Impl::XLRelationships
XLRow	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRow_Impl.h	/^    class XLRow$/;"	c	namespace:OpenXLSX::Impl
XLRow	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^Impl::XLRow::XLRow(XLWorksheet& parent, XMLNode rowNode)$/;"	f	class:Impl::XLRow
XLRow	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLRow.h	/^    class OPENXLSX_EXPORT XLRow$/;"	c	namespace:OpenXLSX
XLRow	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLRow.cpp	/^XLRow::XLRow(Impl::XLRow& row)$/;"	f	class:XLRow
XLRowData	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^        struct XLRowData$/;"	s	class:OpenXLSX::Impl::XLWorksheet
XLSharedStrings	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSharedStrings_Impl.h	/^    class XLSharedStrings : public XLAbstractXMLFile$/;"	c	namespace:OpenXLSX::Impl
XLSharedStrings	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSharedStrings_Impl.cpp	/^Impl::XLSharedStrings::XLSharedStrings(XLDocument& parent)$/;"	f	class:Impl::XLSharedStrings
XLSheet	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSheet_Impl.h	/^    class XLSheet : public XLAbstractXMLFile$/;"	c	namespace:OpenXLSX::Impl
XLSheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSheet_Impl.cpp	/^Impl::XLSheet::XLSheet(XLWorkbook& parent, XMLAttribute name, const std::string& filepath, const/;"	f	class:Impl::XLSheet
XLSheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLSheet.h	/^    class OPENXLSX_EXPORT XLSheet$/;"	c	namespace:OpenXLSX
XLSheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLSheet.cpp	/^XLSheet::XLSheet(Impl::XLSheet& sheet)$/;"	f	class:XLSheet
XLSheetData	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^        struct XLSheetData$/;"	s	class:OpenXLSX::Impl::XLWorkbook
XLSheetState	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^    enum class XLSheetState$/;"	g	namespace:OpenXLSX
XLSheetType	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^    enum class XLSheetType$/;"	g	namespace:OpenXLSX
XLStringType	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellType_Impl.h	/^    enum class XLStringType$/;"	g	namespace:OpenXLSX::Impl
XLToken	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTokenizer_Impl.h	/^    class XLToken$/;"	c	namespace:OpenXLSX::Impl
XLToken	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^Impl::XLToken::XLToken(std::string token)$/;"	f	class:Impl::XLToken
XLTokenizer	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTokenizer_Impl.h	/^    class XLTokenizer$/;"	c	namespace:OpenXLSX::Impl
XLTokenizer	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^Impl::XLTokenizer::XLTokenizer()$/;"	f	class:Impl::XLTokenizer
XLTokenizer	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^Impl::XLTokenizer::XLTokenizer(std::string str, std::string delimiter)$/;"	f	class:Impl::XLTokenizer
XLValueType	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^    enum class XLValueType$/;"	g	namespace:OpenXLSX
XLWorkbook	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^    class XLWorkbook : public XLAbstractXMLFile$/;"	c	namespace:OpenXLSX::Impl
XLWorkbook	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^Impl::XLWorkbook::XLWorkbook(XLDocument& parent, const std::string& filePath)$/;"	f	class:Impl::XLWorkbook
XLWorkbook	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLWorkbook.h	/^    class OPENXLSX_EXPORT XLWorkbook$/;"	c	namespace:OpenXLSX
XLWorkbook	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorkbook.cpp	/^XLWorkbook::XLWorkbook(Impl::XLWorkbook& workbook)$/;"	f	class:XLWorkbook
XLWorksheet	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^    class XLWorksheet : public XLSheet$/;"	c	namespace:OpenXLSX::Impl
XLWorksheet	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^Impl::XLWorksheet::XLWorksheet(XLWorkbook& parent, XMLAttribute name, const std::string& filePat/;"	f	class:Impl::XLWorksheet
XLWorksheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLWorksheet.h	/^    class OPENXLSX_EXPORT XLWorksheet : public XLSheet$/;"	c	namespace:OpenXLSX
XLWorksheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLWorksheet.cpp	/^XLWorksheet::XLWorksheet(Impl::XLSheet& sheet)$/;"	f	class:XLWorksheet
XMACROS_H	extern/libgit2/src/xdiff/xmacros.h	/^#define XMACROS_H$/;"	d
XMLAttribute	extern/OpenXLSX/library/openxlsx/implementation/headers/XLXml_Impl.h	/^using XMLAttribute = pugi::xml_attribute;$/;"	t	typeref:typename:pugi::xml_attribute
XMLDocument	extern/OpenXLSX/library/openxlsx/implementation/headers/XLXml_Impl.h	/^using XMLDocument = pugi::xml_document;$/;"	t	typeref:typename:pugi::xml_document
XMLNode	extern/OpenXLSX/library/openxlsx/implementation/headers/XLXml_Impl.h	/^using XMLNode = pugi::xml_node;$/;"	t	typeref:typename:pugi::xml_node
XPREPARE_H	extern/libgit2/src/xdiff/xprepare.h	/^#define XPREPARE_H$/;"	d
XSTRING	extern/libgit2/deps/pcre/pcre_compile.c	/^#define XSTRING(/;"	d	file:
XSTRING	extern/libgit2/deps/pcre/pcre_version.c	/^#define XSTRING(/;"	d	file:
XTYPES_H	extern/libgit2/src/xdiff/xtypes.h	/^#define XTYPES_H$/;"	d
XUTILS_H	extern/libgit2/src/xdiff/xutils.h	/^#define XUTILS_H$/;"	d
XX	extern/libgit2/deps/http-parser/http_parser.c	/^#define XX(/;"	d	file:
XX	extern/libgit2/deps/http-parser/http_parser.h	/^#define XX(/;"	d
Xcallpat	extern/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xcallpat;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xcharptr	extern/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xcharptr;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xcodelink	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xcodelink;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xcondition	extern/libgit2/deps/pcre/pcre_exec.c	/^  BOOL Xcondition;$/;"	m	struct:heapframe	typeref:typename:BOOL	file:
Xctype	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xctype;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xcur_is_word	extern/libgit2/deps/pcre/pcre_exec.c	/^  BOOL Xcur_is_word;$/;"	m	struct:heapframe	typeref:typename:BOOL	file:
Xdata	extern/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xdata;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xecode	extern/libgit2/deps/pcre/pcre_exec.c	/^  const pcre_uchar *Xecode;$/;"	m	struct:heapframe	typeref:typename:const pcre_uchar *	file:
Xeptr	extern/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xeptr;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xeptrb	extern/libgit2/deps/pcre/pcre_exec.c	/^  eptrblock *Xeptrb;$/;"	m	struct:heapframe	typeref:typename:eptrblock *	file:
Xfc	extern/libgit2/deps/pcre/pcre_exec.c	/^  unsigned int Xfc;$/;"	m	struct:heapframe	typeref:typename:unsigned int	file:
Xfi	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xfi;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xlength	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xlength;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xmax	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xmax;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xmin	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xmin;$/;"	m	struct:heapframe	typeref:typename:int	file:
XmlDocument	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAbstractXMLFile_Impl.cpp	/^XMLDocument* Impl::XLAbstractXMLFile::XmlDocument() {$/;"	f	class:Impl::XLAbstractXMLFile	typeref:typename:XMLDocument *
XmlDocument	extern/OpenXLSX/library/openxlsx/implementation/sources/XLAbstractXMLFile_Impl.cpp	/^const XMLDocument* Impl::XLAbstractXMLFile::XmlDocument() const {$/;"	f	class:Impl::XLAbstractXMLFile	typeref:typename:const XMLDocument *
XmlDocument	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^XMLDocument* Impl::XLCell::XmlDocument() {$/;"	f	class:Impl::XLCell	typeref:typename:XMLDocument *
XmlDocument	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^const XMLDocument* Impl::XLCell::XmlDocument() const {$/;"	f	class:Impl::XLCell	typeref:typename:const XMLDocument *
Xmstart	extern/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xmstart;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xnew_recursive	extern/libgit2/deps/pcre/pcre_exec.c	/^  recursion_info Xnew_recursive;$/;"	m	struct:heapframe	typeref:typename:recursion_info	file:
Xnewptrb	extern/libgit2/deps/pcre/pcre_exec.c	/^  eptrblock Xnewptrb;$/;"	m	struct:heapframe	typeref:typename:eptrblock	file:
Xnext	extern/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xnext;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xnextframe	extern/libgit2/deps/pcre/pcre_exec.c	/^  struct heapframe *Xnextframe;$/;"	m	struct:heapframe	typeref:struct:heapframe *	file:
Xnumber	extern/libgit2/deps/pcre/pcre_exec.c	/^  unsigned int Xnumber;$/;"	m	struct:heapframe	typeref:typename:unsigned int	file:
Xocchars	extern/libgit2/deps/pcre/pcre_exec.c	/^  pcre_uchar Xocchars[6];$/;"	m	struct:heapframe	typeref:typename:pcre_uchar[6]	file:
Xoclength	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xoclength;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xoffset	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xoffset;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xoffset_top	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xoffset_top;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xop	extern/libgit2/deps/pcre/pcre_exec.c	/^  unsigned int Xop;$/;"	m	struct:heapframe	typeref:typename:unsigned int	file:
Xpp	extern/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xpp;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xprev	extern/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xprev;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xprev_is_word	extern/libgit2/deps/pcre/pcre_exec.c	/^  BOOL Xprev_is_word;$/;"	m	struct:heapframe	typeref:typename:BOOL	file:
Xprevframe	extern/libgit2/deps/pcre/pcre_exec.c	/^  struct heapframe *Xprevframe;$/;"	m	struct:heapframe	typeref:struct:heapframe *	file:
Xprop_fail_result	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xprop_fail_result;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xprop_type	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xprop_type;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xprop_value	extern/libgit2/deps/pcre/pcre_exec.c	/^  unsigned int Xprop_value;$/;"	m	struct:heapframe	typeref:typename:unsigned int	file:
Xrdepth	extern/libgit2/deps/pcre/pcre_exec.c	/^  unsigned int Xrdepth;$/;"	m	struct:heapframe	typeref:typename:unsigned int	file:
Xsave_capture_last	extern/libgit2/deps/pcre/pcre_exec.c	/^  pcre_int32 Xsave_capture_last;$/;"	m	struct:heapframe	typeref:typename:pcre_int32	file:
Xsave_offset1	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xsave_offset1, Xsave_offset2, Xsave_offset3;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xsave_offset2	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xsave_offset1, Xsave_offset2, Xsave_offset3;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xsave_offset3	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xsave_offset1, Xsave_offset2, Xsave_offset3;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xsaved_eptr	extern/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xsaved_eptr;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xstacksave	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xstacksave[REC_STACK_SAVE_MAX];$/;"	m	struct:heapframe	typeref:typename:int[]	file:
Xwhere	extern/libgit2/deps/pcre/pcre_exec.c	/^  int Xwhere;$/;"	m	struct:heapframe	typeref:typename:int	file:
Yes	extern/NamedType/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	extern/OpenXLSX/tests/catch/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Z	extern/libgit2/src/wildmatch.c	/^	Z = GIT_CNTRL | GIT_SPACE$/;"	e	enum:__anon17a406cb0103	file:
ZALLOC	extern/libgit2/deps/zlib/zutil.h	/^#define ZALLOC(/;"	d
ZCONF_H	extern/libgit2/deps/zlib/zconf.h	/^#define ZCONF_H$/;"	d
ZEXPORT	extern/libgit2/deps/zlib/zconf.h	/^#      define ZEXPORT /;"	d
ZEXPORT	extern/libgit2/deps/zlib/zconf.h	/^#    define ZEXPORT /;"	d
ZEXPORT	extern/libgit2/deps/zlib/zconf.h	/^#  define ZEXPORT$/;"	d
ZEXPORTVA	extern/libgit2/deps/zlib/zconf.h	/^#      define ZEXPORTVA /;"	d
ZEXPORTVA	extern/libgit2/deps/zlib/zconf.h	/^#  define ZEXPORTVA$/;"	d
ZEXTERN	extern/libgit2/deps/zlib/zconf.h	/^#        define ZEXTERN /;"	d
ZEXTERN	extern/libgit2/deps/zlib/zconf.h	/^#  define ZEXTERN /;"	d
ZFREE	extern/libgit2/deps/zlib/zutil.h	/^#define ZFREE(/;"	d
ZLIB_H	extern/libgit2/deps/zlib/zlib.h	/^#define ZLIB_H$/;"	d
ZLIB_INTERNAL	extern/libgit2/deps/zlib/gzguts.h	/^#  define ZLIB_INTERNAL /;"	d
ZLIB_INTERNAL	extern/libgit2/deps/zlib/gzguts.h	/^#  define ZLIB_INTERNAL$/;"	d
ZLIB_INTERNAL	extern/libgit2/deps/zlib/zutil.h	/^#  define ZLIB_INTERNAL /;"	d
ZLIB_INTERNAL	extern/libgit2/deps/zlib/zutil.h	/^#  define ZLIB_INTERNAL$/;"	d
ZLIB_VERNUM	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define ZLIB_VERNUM /;"	d
ZLIB_VERNUM	extern/libgit2/deps/zlib/zlib.h	/^#define ZLIB_VERNUM /;"	d
ZLIB_VERSION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define ZLIB_VERSION /;"	d
ZLIB_VERSION	extern/libgit2/deps/zlib/zlib.h	/^#define ZLIB_VERSION /;"	d
ZLIB_VER_MAJOR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define ZLIB_VER_MAJOR /;"	d
ZLIB_VER_MAJOR	extern/libgit2/deps/zlib/zlib.h	/^#define ZLIB_VER_MAJOR /;"	d
ZLIB_VER_MINOR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define ZLIB_VER_MINOR /;"	d
ZLIB_VER_MINOR	extern/libgit2/deps/zlib/zlib.h	/^#define ZLIB_VER_MINOR /;"	d
ZLIB_VER_REVISION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define ZLIB_VER_REVISION /;"	d
ZLIB_VER_REVISION	extern/libgit2/deps/zlib/zlib.h	/^#define ZLIB_VER_REVISION /;"	d
ZLIB_VER_SUBREVISION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define ZLIB_VER_SUBREVISION /;"	d
ZLIB_VER_SUBREVISION	extern/libgit2/deps/zlib/zlib.h	/^#define ZLIB_VER_SUBREVISION /;"	d
ZSTREAM_BUFFER_MIN_EXTRA	extern/libgit2/src/zstream.c	/^#define ZSTREAM_BUFFER_MIN_EXTRA /;"	d	file:
ZSTREAM_BUFFER_SIZE	extern/libgit2/src/zstream.c	/^#define ZSTREAM_BUFFER_SIZE /;"	d	file:
ZSWAP32	extern/libgit2/deps/zlib/zutil.h	/^#define ZSWAP32(/;"	d
ZUTIL_H	extern/libgit2/deps/zlib/zutil.h	/^#define ZUTIL_H$/;"	d
Z_ARG	extern/libgit2/deps/zlib/zconf.h	/^#    define Z_ARG(/;"	d
Z_ASCII	extern/libgit2/deps/zlib/zlib.h	/^#define Z_ASCII /;"	d
Z_BEST_COMPRESSION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_BEST_COMPRESSION /;"	d
Z_BEST_COMPRESSION	extern/libgit2/deps/zlib/zlib.h	/^#define Z_BEST_COMPRESSION /;"	d
Z_BEST_SPEED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_BEST_SPEED /;"	d
Z_BEST_SPEED	extern/libgit2/deps/zlib/zlib.h	/^#define Z_BEST_SPEED /;"	d
Z_BINARY	extern/libgit2/deps/zlib/zlib.h	/^#define Z_BINARY /;"	d
Z_BLOCK	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_BLOCK /;"	d
Z_BLOCK	extern/libgit2/deps/zlib/zlib.h	/^#define Z_BLOCK /;"	d
Z_BUF_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_BUF_ERROR /;"	d
Z_BUF_ERROR	extern/libgit2/deps/zlib/zlib.h	/^#define Z_BUF_ERROR /;"	d
Z_DATA_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_DATA_ERROR /;"	d
Z_DATA_ERROR	extern/libgit2/deps/zlib/zlib.h	/^#define Z_DATA_ERROR /;"	d
Z_DEFAULT_COMPRESSION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_DEFAULT_COMPRESSION /;"	d
Z_DEFAULT_COMPRESSION	extern/libgit2/deps/zlib/zlib.h	/^#define Z_DEFAULT_COMPRESSION /;"	d
Z_DEFAULT_STRATEGY	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_DEFAULT_STRATEGY /;"	d
Z_DEFAULT_STRATEGY	extern/libgit2/deps/zlib/zlib.h	/^#define Z_DEFAULT_STRATEGY /;"	d
Z_DEFAULT_WINDOW_BITS	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_DEFAULT_WINDOW_BITS /;"	d
Z_DEFLATED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_DEFLATED /;"	d
Z_DEFLATED	extern/libgit2/deps/zlib/zlib.h	/^#define Z_DEFLATED /;"	d
Z_ERRNO	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_ERRNO /;"	d
Z_ERRNO	extern/libgit2/deps/zlib/zlib.h	/^#define Z_ERRNO /;"	d
Z_FILTERED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_FILTERED /;"	d
Z_FILTERED	extern/libgit2/deps/zlib/zlib.h	/^#define Z_FILTERED /;"	d
Z_FINISH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_FINISH /;"	d
Z_FINISH	extern/libgit2/deps/zlib/zlib.h	/^#define Z_FINISH /;"	d
Z_FIXED	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_FIXED /;"	d
Z_FIXED	extern/libgit2/deps/zlib/zlib.h	/^#define Z_FIXED /;"	d
Z_FULL_FLUSH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_FULL_FLUSH /;"	d
Z_FULL_FLUSH	extern/libgit2/deps/zlib/zlib.h	/^#define Z_FULL_FLUSH /;"	d
Z_HAVE_STDARG_H	extern/libgit2/deps/zlib/zconf.h	/^#  define Z_HAVE_STDARG_H$/;"	d
Z_HAVE_UNISTD_H	extern/libgit2/deps/zlib/zconf.h	/^#  define Z_HAVE_UNISTD_H$/;"	d
Z_HUFFMAN_ONLY	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_HUFFMAN_ONLY /;"	d
Z_HUFFMAN_ONLY	extern/libgit2/deps/zlib/zlib.h	/^#define Z_HUFFMAN_ONLY /;"	d
Z_LARGE64	extern/libgit2/deps/zlib/zconf.h	/^#  define Z_LARGE64$/;"	d
Z_LFS64	extern/libgit2/deps/zlib/zconf.h	/^#  define Z_LFS64$/;"	d
Z_MEM_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_MEM_ERROR /;"	d
Z_MEM_ERROR	extern/libgit2/deps/zlib/zlib.h	/^#define Z_MEM_ERROR /;"	d
Z_NEED_DICT	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_NEED_DICT /;"	d
Z_NEED_DICT	extern/libgit2/deps/zlib/zlib.h	/^#define Z_NEED_DICT /;"	d
Z_NO_COMPRESSION	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_NO_COMPRESSION /;"	d
Z_NO_COMPRESSION	extern/libgit2/deps/zlib/zlib.h	/^#define Z_NO_COMPRESSION /;"	d
Z_NO_FLUSH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_NO_FLUSH /;"	d
Z_NO_FLUSH	extern/libgit2/deps/zlib/zlib.h	/^#define Z_NO_FLUSH /;"	d
Z_NULL	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_NULL /;"	d
Z_NULL	extern/libgit2/deps/zlib/zlib.h	/^#define Z_NULL /;"	d
Z_OK	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_OK /;"	d
Z_OK	extern/libgit2/deps/zlib/zlib.h	/^#define Z_OK /;"	d
Z_PARAM_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_PARAM_ERROR /;"	d
Z_PARTIAL_FLUSH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_PARTIAL_FLUSH /;"	d
Z_PARTIAL_FLUSH	extern/libgit2/deps/zlib/zlib.h	/^#define Z_PARTIAL_FLUSH /;"	d
Z_PREFIX_SET	extern/libgit2/deps/zlib/zconf.h	/^#  define Z_PREFIX_SET$/;"	d
Z_RLE	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_RLE /;"	d
Z_RLE	extern/libgit2/deps/zlib/zlib.h	/^#define Z_RLE /;"	d
Z_STREAM_END	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_STREAM_END /;"	d
Z_STREAM_END	extern/libgit2/deps/zlib/zlib.h	/^#define Z_STREAM_END /;"	d
Z_STREAM_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_STREAM_ERROR /;"	d
Z_STREAM_ERROR	extern/libgit2/deps/zlib/zlib.h	/^#define Z_STREAM_ERROR /;"	d
Z_SYNC_FLUSH	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_SYNC_FLUSH /;"	d
Z_SYNC_FLUSH	extern/libgit2/deps/zlib/zlib.h	/^#define Z_SYNC_FLUSH /;"	d
Z_TEXT	extern/libgit2/deps/zlib/zlib.h	/^#define Z_TEXT /;"	d
Z_TREES	extern/libgit2/deps/zlib/zlib.h	/^#define Z_TREES /;"	d
Z_U4	extern/libgit2/deps/zlib/zconf.h	/^#    define Z_U4 /;"	d
Z_UNKNOWN	extern/libgit2/deps/zlib/zlib.h	/^#define Z_UNKNOWN /;"	d
Z_VERSION_ERROR	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define Z_VERSION_ERROR /;"	d
Z_VERSION_ERROR	extern/libgit2/deps/zlib/zlib.h	/^#define Z_VERSION_ERROR /;"	d
Z_WANT64	extern/libgit2/deps/zlib/zconf.h	/^#  define Z_WANT64$/;"	d
ZipArchive	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        explicit ZipArchive(const std::string& fileName)$/;"	f	class:Zippy::ZipArchive
ZipArchive	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^    class ZipArchive$/;"	c	namespace:Zippy
ZipEntry	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            ZipEntry(const std::string& name, const ZipEntryData& data) {$/;"	f	class:Zippy::Impl::ZipEntry
ZipEntry	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            ZipEntry(const std::string& name, const std::string& data) {$/;"	f	class:Zippy::Impl::ZipEntry
ZipEntry	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            explicit ZipEntry(const ZipEntryInfo& info)$/;"	f	class:Zippy::Impl::ZipEntry
ZipEntry	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        class ZipEntry$/;"	c	namespace:Zippy::Impl
ZipEntry	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        explicit ZipEntry(Impl::ZipEntry* entry)$/;"	f	class:Zippy::ZipEntry
ZipEntry	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^    class ZipEntry$/;"	c	namespace:Zippy
ZipEntryData	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^    using ZipEntryData = std::vector<std::byte>;$/;"	t	namespace:Zippy	typeref:typename:std::vector<std::byte>
ZipEntryInfo	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^    using ZipEntryInfo = mz_zip_archive_file_stat;$/;"	t	namespace:Zippy	typeref:typename:mz_zip_archive_file_stat
ZipEntryMetaData	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        explicit ZipEntryMetaData(const ZipEntryInfo& info)$/;"	f	struct:Zippy::ZipEntryMetaData
ZipEntryMetaData	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^    struct ZipEntryMetaData$/;"	s	namespace:Zippy
ZipException	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipException(const std::string& err)$/;"	f	class:Zippy::ZipException
ZipException	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipException : public std::runtime_error$/;"	c	namespace:Zippy
ZipExceptionAllocFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionAllocFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionAllocFailed
ZipExceptionAllocFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionAllocFailed : public ZipException$/;"	c	namespace:Zippy
ZipExceptionArchiveTooLarge	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionArchiveTooLarge(const std::string& err)$/;"	f	class:Zippy::ZipExceptionArchiveTooLarge
ZipExceptionArchiveTooLarge	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionArchiveTooLarge : public ZipException$/;"	c	namespace:Zippy
ZipExceptionBufferTooSmall	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionBufferTooSmall(const std::string& err)$/;"	f	class:Zippy::ZipExceptionBufferTooSmall
ZipExceptionBufferTooSmall	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionBufferTooSmall : public ZipException$/;"	c	namespace:Zippy
ZipExceptionCompressionFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionCompressionFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionCompressionFailed
ZipExceptionCompressionFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionCompressionFailed : public ZipException$/;"	c	namespace:Zippy
ZipExceptionCrcCheckFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionCrcCheckFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionCrcCheckFailed
ZipExceptionCrcCheckFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionCrcCheckFailed : public ZipException$/;"	c	namespace:Zippy
ZipExceptionDecompressionFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionDecompressionFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionDecompressionFailed
ZipExceptionDecompressionFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionDecompressionFailed : public ZipException$/;"	c	namespace:Zippy
ZipExceptionFailedFindingCentralDir	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionFailedFindingCentralDir(const std::string& err)$/;"	f	class:Zippy::ZipExceptionFailedFindingCentralDir
ZipExceptionFailedFindingCentralDir	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionFailedFindingCentralDir : public ZipException$/;"	c	namespace:Zippy
ZipExceptionFileCloseFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionFileCloseFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionFileCloseFailed
ZipExceptionFileCloseFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionFileCloseFailed : public ZipException$/;"	c	namespace:Zippy
ZipExceptionFileCreateFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionFileCreateFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionFileCreateFailed
ZipExceptionFileCreateFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionFileCreateFailed : public ZipException$/;"	c	namespace:Zippy
ZipExceptionFileNotFound	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionFileNotFound(const std::string& err)$/;"	f	class:Zippy::ZipExceptionFileNotFound
ZipExceptionFileNotFound	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionFileNotFound : public ZipException$/;"	c	namespace:Zippy
ZipExceptionFileOpenFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionFileOpenFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionFileOpenFailed
ZipExceptionFileOpenFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionFileOpenFailed : public ZipException$/;"	c	namespace:Zippy
ZipExceptionFileReadFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionFileReadFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionFileReadFailed
ZipExceptionFileReadFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionFileReadFailed : public ZipException$/;"	c	namespace:Zippy
ZipExceptionFileSeekFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionFileSeekFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionFileSeekFailed
ZipExceptionFileSeekFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionFileSeekFailed : public ZipException$/;"	c	namespace:Zippy
ZipExceptionFileStatFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionFileStatFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionFileStatFailed
ZipExceptionFileStatFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionFileStatFailed : public ZipException$/;"	c	namespace:Zippy
ZipExceptionFileTooLarge	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionFileTooLarge(const std::string& err)$/;"	f	class:Zippy::ZipExceptionFileTooLarge
ZipExceptionFileTooLarge	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionFileTooLarge : public ZipException$/;"	c	namespace:Zippy
ZipExceptionFileWriteFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionFileWriteFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionFileWriteFailed
ZipExceptionFileWriteFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionFileWriteFailed : public ZipException$/;"	c	namespace:Zippy
ZipExceptionInternalError	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionInternalError(const std::string& err)$/;"	f	class:Zippy::ZipExceptionInternalError
ZipExceptionInternalError	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionInternalError : public ZipException$/;"	c	namespace:Zippy
ZipExceptionInvalidFilename	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionInvalidFilename(const std::string& err)$/;"	f	class:Zippy::ZipExceptionInvalidFilename
ZipExceptionInvalidFilename	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionInvalidFilename : public ZipException$/;"	c	namespace:Zippy
ZipExceptionInvalidHeader	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionInvalidHeader(const std::string& err)$/;"	f	class:Zippy::ZipExceptionInvalidHeader
ZipExceptionInvalidHeader	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionInvalidHeader : public ZipException$/;"	c	namespace:Zippy
ZipExceptionInvalidParameter	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionInvalidParameter(const std::string& err)$/;"	f	class:Zippy::ZipExceptionInvalidParameter
ZipExceptionInvalidParameter	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionInvalidParameter : public ZipException$/;"	c	namespace:Zippy
ZipExceptionMultidiskUnsupported	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionMultidiskUnsupported(const std::string& err)$/;"	f	class:Zippy::ZipExceptionMultidiskUnsupported
ZipExceptionMultidiskUnsupported	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionMultidiskUnsupported : public ZipException$/;"	c	namespace:Zippy
ZipExceptionNotAnArchive	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionNotAnArchive(const std::string& err)$/;"	f	class:Zippy::ZipExceptionNotAnArchive
ZipExceptionNotAnArchive	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionNotAnArchive : public ZipException$/;"	c	namespace:Zippy
ZipExceptionTooManyFiles	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionTooManyFiles(const std::string& err)$/;"	f	class:Zippy::ZipExceptionTooManyFiles
ZipExceptionTooManyFiles	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionTooManyFiles : public ZipException$/;"	c	namespace:Zippy
ZipExceptionUndefined	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionUndefined(const std::string& err)$/;"	f	class:Zippy::ZipExceptionUndefined
ZipExceptionUndefined	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionUndefined : public ZipException$/;"	c	namespace:Zippy
ZipExceptionUnexpectedDecompSize	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionUnexpectedDecompSize(const std::string& err)$/;"	f	class:Zippy::ZipExceptionUnexpectedDecompSize
ZipExceptionUnexpectedDecompSize	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionUnexpectedDecompSize : public ZipException$/;"	c	namespace:Zippy
ZipExceptionUnsupportedCDirSize	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionUnsupportedCDirSize(const std::string& err)$/;"	f	class:Zippy::ZipExceptionUnsupportedCDirSize
ZipExceptionUnsupportedCDirSize	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionUnsupportedCDirSize : public ZipException$/;"	c	namespace:Zippy
ZipExceptionUnsupportedEncryption	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionUnsupportedEncryption(const std::string& err)$/;"	f	class:Zippy::ZipExceptionUnsupportedEncryption
ZipExceptionUnsupportedEncryption	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionUnsupportedEncryption : public ZipException$/;"	c	namespace:Zippy
ZipExceptionUnsupportedFeature	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionUnsupportedFeature(const std::string& err)$/;"	f	class:Zippy::ZipExceptionUnsupportedFeature
ZipExceptionUnsupportedFeature	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionUnsupportedFeature : public ZipException$/;"	c	namespace:Zippy
ZipExceptionUnsupportedMethod	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionUnsupportedMethod(const std::string& err)$/;"	f	class:Zippy::ZipExceptionUnsupportedMethod
ZipExceptionUnsupportedMethod	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionUnsupportedMethod : public ZipException$/;"	c	namespace:Zippy
ZipExceptionValidationFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionValidationFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionValidationFailed
ZipExceptionValidationFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionValidationFailed : public ZipException$/;"	c	namespace:Zippy
ZipExceptionWriteCallbackFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^        inline explicit ZipExceptionWriteCallbackFailed(const std::string& err)$/;"	f	class:Zippy::ZipExceptionWriteCallbackFailed
ZipExceptionWriteCallbackFailed	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^    class ZipExceptionWriteCallbackFailed : public ZipException$/;"	c	namespace:Zippy
Zippy	extern/OpenXLSX/library/zippy/CMakeLists.txt	/^add_library(Zippy INTERFACE)$/;"	t
Zippy	extern/OpenXLSX/library/zippy/README.md	/^# Zippy$/;"	c
Zippy	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^namespace Zippy$/;"	n
Zippy	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^namespace Zippy$/;"	n
Zippy	extern/OpenXLSX/library/zippy/Zippy/ZipException.h	/^namespace Zippy$/;"	n
Zippy_ZIPARCHIVE_H	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^#define Zippy_ZIPARCHIVE_H$/;"	d
Zippy_ZIPENTRY_H	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^#define Zippy_ZIPENTRY_H$/;"	d
Zippy_Zippy_H	extern/OpenXLSX/library/zippy/Zippy.h	/^#define Zippy_Zippy_H$/;"	d
_BSD_SOURCE	extern/NamedType/catch.hpp	/^#   define _BSD_SOURCE$/;"	d
_BSD_SOURCE	extern/OpenXLSX/tests/catch/catch.hpp	/^#   define _BSD_SOURCE$/;"	d
_FAIL_MESSAGE	extern/libgit2/deps/pcre/cmake/FindPackageHandleStandardArgs.cmake	/^      SET(_FAIL_MESSAGE "Could not find OPTIONAL package ${_NAME}")$/;"	v
_FAIL_MESSAGE	extern/libgit2/deps/pcre/cmake/FindPackageHandleStandardArgs.cmake	/^      SET(_FAIL_MESSAGE "Could not find REQUIRED package ${_NAME}")$/;"	v
_FAIL_MESSAGE	extern/libgit2/deps/pcre/cmake/FindPackageHandleStandardArgs.cmake	/^    SET(_FAIL_MESSAGE "${_FAIL_MSG}")$/;"	v
_GIT_REPARSE_DATA_BUFFER	extern/libgit2/src/win32/reparse.h	/^typedef struct _GIT_REPARSE_DATA_BUFFER {$/;"	s
_INCLUDE_git_indexer_h__	extern/libgit2/include/git2/indexer.h	/^#define _INCLUDE_git_indexer_h__$/;"	d
_Iter_cat	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN std::bidirectional_iterator_tag _Iter_cat(const pugi::xml_attribute_iterator&)$/;"	f	namespace:std	typeref:typename:PUGI__FN std::bidirectional_iterator_tag
_Iter_cat	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN std::bidirectional_iterator_tag _Iter_cat(const pugi::xml_named_node_iterator&)$/;"	f	namespace:std	typeref:typename:PUGI__FN std::bidirectional_iterator_tag
_Iter_cat	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN std::bidirectional_iterator_tag _Iter_cat(const pugi::xml_node_iterator&)$/;"	f	namespace:std	typeref:typename:PUGI__FN std::bidirectional_iterator_tag
_LARGEFILE_SOURCE	extern/libgit2/deps/zlib/gzguts.h	/^#    define _LARGEFILE_SOURCE /;"	d
_MAIN_CC	extern/libgit2/tests/clar.c	/^#	define _MAIN_CC /;"	d	file:
_MAIN_CC	extern/libgit2/tests/clar.c	/^#	define _MAIN_CC$/;"	d	file:
_MBEDTLS_ROOT_HINTS	extern/libgit2/cmake/Modules/FindmbedTLS.cmake	/^SET(_MBEDTLS_ROOT_HINTS$/;"	v
_MBEDTLS_ROOT_HINTS_AND_PATHS	extern/libgit2/cmake/Modules/FindmbedTLS.cmake	/^SET(_MBEDTLS_ROOT_HINTS_AND_PATHS$/;"	v
_MSC_STDINT_H_	extern/libgit2/include/git2/stdint.h	/^#define _MSC_STDINT_H_$/;"	d
_PCREPOSIX_H	extern/libgit2/deps/pcre/pcreposix.h	/^#define _PCREPOSIX_H$/;"	d
_PCRE_H	extern/libgit2/deps/pcre/pcre.h	/^#define _PCRE_H$/;"	d
_POSIX_SOURCE	extern/libgit2/deps/zlib/gzguts.h	/^#  define _POSIX_SOURCE$/;"	d
_PTRDIFF_T_DEFINED	extern/libgit2/deps/zlib/zutil.h	/^#      define _PTRDIFF_T_DEFINED$/;"	d
_SC_NPROCESSORS_ONLN	extern/libgit2/src/thread-utils.c	/^#		define _SC_NPROCESSORS_ONLN /;"	d	file:
_S_IFLNK	extern/libgit2/src/posix.h	/^#define _S_IFLNK /;"	d
_UCP_H	extern/libgit2/deps/pcre/ucp.h	/^#define _UCP_H$/;"	d
_W64	extern/libgit2/include/git2/stdint.h	/^#     define _W64 /;"	d
_W64	extern/libgit2/include/git2/stdint.h	/^#     define _W64$/;"	d
__AC_KHASH_H	extern/libgit2/src/khash.h	/^#define __AC_KHASH_H$/;"	d
__CLAR_LIBGIT2_TIMER__	extern/libgit2/tests/clar_libgit2_timer.h	/^#define __CLAR_LIBGIT2_TIMER__$/;"	d
__CLAR_LIBGIT2_TRACE__	extern/libgit2/tests/clar_libgit2_trace.h	/^#define __CLAR_LIBGIT2_TRACE__$/;"	d
__CLAR_LIBGIT2__	extern/libgit2/tests/clar_libgit2.h	/^#define __CLAR_LIBGIT2__$/;"	d
__CLAR_TEST_ATTR_EXPECT__	extern/libgit2/tests/attr/attr_expect.h	/^#define __CLAR_TEST_ATTR_EXPECT__$/;"	d
__CLAR_TEST_H__	extern/libgit2/tests/clar.h	/^#define __CLAR_TEST_H__$/;"	d
__CUSTOM_URLMON_H	extern/libgit2/deps/winhttp/urlmon.h	/^#define __CUSTOM_URLMON_H$/;"	d
__KHASH_IMPL	extern/libgit2/src/khash.h	/^#define __KHASH_IMPL(/;"	d
__KHASH_PROTOTYPES	extern/libgit2/src/khash.h	/^#define __KHASH_PROTOTYPES(/;"	d
__KHASH_TYPE	extern/libgit2/src/idxmap.c	/^__KHASH_TYPE(idx, const git_index_entry *, git_index_entry *)$/;"	f	file:
__KHASH_TYPE	extern/libgit2/src/khash.h	/^#define __KHASH_TYPE(/;"	d
__KHASH_TYPE	extern/libgit2/src/offmap.c	/^__KHASH_TYPE(off, git_off_t, void *)$/;"	f
__KHASH_TYPE	extern/libgit2/src/oidmap.c	/^__KHASH_TYPE(oid, const git_oid *, void *)$/;"	f
__KHASH_TYPE	extern/libgit2/src/strmap.c	/^__KHASH_TYPE(str, const char *, void *)$/;"	f
__WINE_WINHTTP_H	extern/libgit2/deps/winhttp/winhttp.h	/^#define __WINE_WINHTTP_H$/;"	d
__ac_HASH_UPPER	extern/libgit2/src/khash.h	/^static const double __ac_HASH_UPPER = 0.77;$/;"	v	typeref:typename:const double
__ac_Wang_hash	extern/libgit2/src/khash.h	/^static kh_inline khint_t __ac_Wang_hash(khint_t key)$/;"	f	typeref:typename:kh_inline khint_t
__ac_X31_hash_string	extern/libgit2/src/khash.h	/^static kh_inline khint_t __ac_X31_hash_string(const char *s)$/;"	f	typeref:typename:kh_inline khint_t
__ac_fsize	extern/libgit2/src/khash.h	/^#define __ac_fsize(/;"	d
__ac_isdel	extern/libgit2/src/khash.h	/^#define __ac_isdel(/;"	d
__ac_iseither	extern/libgit2/src/khash.h	/^#define __ac_iseither(/;"	d
__ac_isempty	extern/libgit2/src/khash.h	/^#define __ac_isempty(/;"	d
__ac_set_isboth_false	extern/libgit2/src/khash.h	/^#define __ac_set_isboth_false(/;"	d
__ac_set_isdel_false	extern/libgit2/src/khash.h	/^#define __ac_set_isdel_false(/;"	d
__ac_set_isdel_true	extern/libgit2/src/khash.h	/^#define __ac_set_isdel_true(/;"	d
__ac_set_isempty_false	extern/libgit2/src/khash.h	/^#define __ac_set_isempty_false(/;"	d
__anon01a529ef0108	extern/libgit2/src/revwalk.h	/^typedef struct {$/;"	s
__anon041cc2a30108	extern/libgit2/src/config_file.c	/^typedef struct {$/;"	s	file:
__anon041cc2a30208	extern/libgit2/src/config_file.c	/^typedef struct {$/;"	s	file:
__anon041cc2a30308	extern/libgit2/src/config_file.c	/^static const struct {$/;"	s	file:
__anon044bd2810102	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^    return *find_if(m_relationships.begin(), m_relationships.end(), [&](const XLRelationshipItem/;"	f	function:Impl::XLRelationships::RelationshipByID	file:
__anon044bd2810202	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^    return *find_if(m_relationships.begin(), m_relationships.end(), [&](const XLRelationshipItem/;"	f	function:Impl::XLRelationships::RelationshipByTarget	file:
__anon044bd2810302	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^    remove_if(m_relationships.begin(), m_relationships.end(), [&](const XLRelationshipItem& thei/;"	f	function:Impl::XLRelationships::DeleteRelationship	file:
__anon044bd2810402	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^                                   [](const XLRelationshipItem& a, const XLRelationshipItem& b) /;"	f	function:Impl::XLRelationships::GetNewRelsID	file:
__anon044bd2810502	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^    return find_if(m_relationships.begin(), m_relationships.end(), [&](const XLRelationshipItem&/;"	f	function:Impl::XLRelationships::TargetExists	file:
__anon044bd2810602	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRelationships_Impl.cpp	/^    return find_if(m_relationships.begin(), m_relationships.end(), [&](const XLRelationshipItem&/;"	f	function:Impl::XLRelationships::IdExists	file:
__anon0458035d0108	extern/libgit2/src/transports/http.c	/^typedef struct {$/;"	s	file:
__anon0458035d0208	extern/libgit2/src/transports/http.c	/^typedef struct {$/;"	s	file:
__anon0458035d0308	extern/libgit2/src/transports/http.c	/^typedef struct {$/;"	s	file:
__anon0458035d0408	extern/libgit2/src/transports/http.c	/^typedef struct {$/;"	s	file:
__anon047407f10108	extern/libgit2/src/diff_generate.c	/^typedef struct {$/;"	s	file:
__anon047407f10208	extern/libgit2/src/diff_generate.c	/^typedef struct {$/;"	s	file:
__anon047407f60103	extern/libgit2/src/diff_generate.h	/^enum {$/;"	g
__anon047407f60203	extern/libgit2/src/diff_generate.h	/^enum {$/;"	g
__anon05b1158e0108	extern/libgit2/src/repository.c	/^static const struct {$/;"	s	file:
__anon05b115930103	extern/libgit2/src/repository.h	/^typedef enum {$/;"	g
__anon05b115930203	extern/libgit2/src/repository.h	/^typedef enum {$/;"	g
__anon05b115930303	extern/libgit2/src/repository.h	/^enum {$/;"	g
__anon05b115930403	extern/libgit2/src/repository.h	/^enum {$/;"	g
__anon06a03a090108	extern/libgit2/tests/object/tree/write.c	/^	struct {$/;"	s	function:test_object_tree_write__sorted_subtrees	file:
__anon06a03a090208	extern/libgit2/tests/object/tree/write.c	/^static struct {$/;"	s	file:
__anon09af45a70103	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70203	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70303	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70403	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70503	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70603	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70703	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70803	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70903	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70a03	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70b03	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70c08	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	s
__anon09af45a70d03	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70e03	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a70f03	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a71008	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	s
__anon09af45a71103	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a71208	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	s
__anon09af45a71303	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a71403	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a71503	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a71603	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a71708	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	s
__anon09af45a71808	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	s
__anon09af45a71908	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	s
__anon09af45a71a08	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    {$/;"	s	function:mz_error
__anon09af45a71b08	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	s
__anon09af45a71c03	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a71d08	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	s
__anon09af45a71e03	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	g
__anon09af45a71f08	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	s
__anon09af45a72008	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^{$/;"	s
__anon0a4c2abc0108	extern/libgit2/src/branch.c	/^typedef struct {$/;"	s	file:
__anon0bf614d90102	lr.hpp	/^          overloaded{[](L &&l) { return R(std::forward<L>(l)); },$/;"	f	struct:lr::fmap	file:
__anon0bf614d90202	lr.hpp	/^                     [&](auto &&a) { return f(std::forward<decltype(a)>(a)); }},$/;"	f	struct:lr::fmap	file:
__anon0bf614d90302	lr.hpp	/^              [](L &&l) { return LR<R>(std::forward<L>(l)); },$/;"	f	struct:lr::fmap	file:
__anon0bf614d90402	lr.hpp	/^              [&](auto &&a) { return LR<R>(f(std::forward<decltype(a)>(a))); }},$/;"	f	struct:lr::fmap	file:
__anon0c727dee0108	extern/libgit2/src/unix/pthread.h	/^typedef struct {$/;"	s
__anon0dbafed00103	extern/libgit2/include/git2/revwalk.h	/^typedef enum {$/;"	g
__anon0ede51f80102	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^    auto dataItem = lower_bound(m_rows.begin(), m_rows.end(), searchItem, [](const XLRowData& a,/;"	f	function:Impl::XLWorksheet::Row	file:
__anon0ede51f80202	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorksheet_Impl.cpp	/^    auto result = find_if(m_rows.begin(), m_rows.end(), [=](const XLRowData& data) {$/;"	f	function:Impl::XLWorksheet::Row	file:
__anon14ca16370108	extern/libgit2/src/diff_xdiff.c	/^typedef struct {$/;"	s	file:
__anon14ca163c0108	extern/libgit2/src/diff_xdiff.h	/^typedef struct {$/;"	s
__anon1764a4980103	extern/libgit2/include/git2/status.h	/^typedef enum {$/;"	g
__anon1764a4980203	extern/libgit2/include/git2/status.h	/^typedef enum {$/;"	g
__anon1764a4980303	extern/libgit2/include/git2/status.h	/^typedef enum {$/;"	g
__anon1764a4980408	extern/libgit2/include/git2/status.h	/^typedef struct {$/;"	s
__anon1764a4980508	extern/libgit2/include/git2/status.h	/^typedef struct {$/;"	s
__anon17a406cb0103	extern/libgit2/src/wildmatch.c	/^enum {$/;"	g	file:
__anon1a079f760102	extern/NamedType/main.cpp	/^    auto addOne = [](StrongInt::ref si) { ++(si.get()); };$/;"	f	file:
__anon1a079f760202	extern/NamedType/main.cpp	/^    auto addOne = [](StrongInt::ref si) { ++(si.get()); };$/;"	f	file:
__anon1a079f760302	extern/NamedType/main.cpp	/^    REQUIRE(performAction(fluent::make_named<Comparator>([](){ return std::string("compare"); })/;"	f	file:
__anon1a079f760402	extern/NamedType/main.cpp	/^    auto functionTakingA = [](A const& a){ return a.x; };$/;"	f	file:
__anon1a079f760502	extern/NamedType/main.cpp	/^    auto functionTakingA = [](A const& a){ return a.constMethod(); };$/;"	f	file:
__anon1a079f760602	extern/NamedType/main.cpp	/^    {$/;"	f	file:
__anon1db902980103	extern/libgit2/deps/pcre/ucp.h	/^enum {$/;"	g
__anon1db902980203	extern/libgit2/deps/pcre/ucp.h	/^enum {$/;"	g
__anon1db902980303	extern/libgit2/deps/pcre/ucp.h	/^enum {$/;"	g
__anon1db902980403	extern/libgit2/deps/pcre/ucp.h	/^enum {$/;"	g
__anon1efd6cf50103	extern/libgit2/include/git2/blame.h	/^typedef enum {$/;"	g
__anon1f11c2ce0108	extern/libgit2/src/parse.h	/^typedef struct {$/;"	s
__anon1f2d3a830108	extern/libgit2/src/patch.h	/^typedef struct {$/;"	s
__anon209df0b40108	extern/libgit2/src/filter.c	/^typedef struct {$/;"	s	file:
__anon209df0b40208	extern/libgit2/src/filter.c	/^typedef struct {$/;"	s	file:
__anon209df0b90108	extern/libgit2/src/filter.h	/^typedef struct {$/;"	s
__anon218876260103	extern/libgit2/src/index.c	/^enum {$/;"	g	file:
__anon2188762b0108	extern/libgit2/src/index.h	/^typedef struct {$/;"	s
__anon2493e46b0108	extern/libgit2/src/diff_file.h	/^typedef struct {$/;"	s
__anon2493e46b0208	extern/libgit2/src/diff_file.h	/^typedef struct {$/;"	s
__anon2929e89b0108	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.h	/^typedef struct {$/;"	s
__anon29b823750108	extern/libgit2/examples/merge.c	/^typedef struct {$/;"	s	file:
__anon2b5915eb0103	extern/libgit2/src/pathspec.h	/^enum {$/;"	g
__anon2b8e95b70108	extern/libgit2/src/commit.c	/^typedef struct {$/;"	s	file:
__anon2b8e95b70208	extern/libgit2/src/commit.c	/^typedef struct {$/;"	s	file:
__anon2b8e95b70308	extern/libgit2/src/commit.c	/^typedef struct {$/;"	s	file:
__anon2d64db840108	extern/libgit2/src/config.c	/^typedef struct {$/;"	s	file:
__anon2d64db840208	extern/libgit2/src/config.c	/^typedef struct {$/;"	s	file:
__anon2d64db840303	extern/libgit2/src/config.c	/^typedef enum {$/;"	g	file:
__anon2d64db840403	extern/libgit2/src/config.c	/^enum {$/;"	g	file:
__anon2d64db840508	extern/libgit2/src/config.c	/^typedef struct {$/;"	s	file:
__anon2e3324090108	extern/libgit2/src/transports/auth_ntlm.c	/^typedef struct {$/;"	s	file:
__anon2ed3f7800103	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^typedef enum {$/;"	g	file:
__anon2f3ed9fe0108	extern/libgit2/tests/core/path.c	/^typedef struct {$/;"	s	file:
__anon313b80c3010a	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  union {$/;"	u	struct:bracket_backtrack	file:
__anon313b80c3020a	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  union {$/;"	u	struct:char_iterator_backtrack	file:
__anon313b80c30308	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    struct {$/;"	s	union:char_iterator_backtrack::__anon313b80c3020a	file:
__anon313b80c3040a	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  union {$/;"	u	struct:compare_context	file:
__anon313b80c3050a	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  union {$/;"	u	struct:compare_context	file:
__anon313b80c30603	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^enum {$/;"	g	function:copy_private_data	file:
__anon313b80c3070a	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^union {$/;"	u	function:jit_machine_stack_exec	file:
__anon313b80c3080a	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^union {$/;"	u	function:PRIV	file:
__anon313b80c3090a	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^union {$/;"	u	function:pcre_jit_exec	file:
__anon32d629ad0103	extern/libgit2/src/attr_file.h	/^typedef enum {$/;"	g
__anon32d629ad0208	extern/libgit2/src/attr_file.h	/^typedef struct {$/;"	s
__anon32d629ad0308	extern/libgit2/src/attr_file.h	/^typedef struct {$/;"	s
__anon32d629ad0408	extern/libgit2/src/attr_file.h	/^typedef struct {$/;"	s
__anon32d629ad0508	extern/libgit2/src/attr_file.h	/^typedef struct {$/;"	s
__anon32d629ad0608	extern/libgit2/src/attr_file.h	/^typedef struct {$/;"	s
__anon32d629ad070a	extern/libgit2/src/attr_file.h	/^	union {$/;"	u	struct:__anon32d629ad0608
__anon32d629ad0808	extern/libgit2/src/attr_file.h	/^typedef struct {$/;"	s
__anon32d629ad0908	extern/libgit2/src/attr_file.h	/^typedef struct {$/;"	s
__anon32d629ad0a03	extern/libgit2/src/attr_file.h	/^typedef enum { GIT_DIR_FLAG_TRUE = 1, GIT_DIR_FLAG_FALSE = 0, GIT_DIR_FLAG_UNKNOWN = -1 } git_di/;"	g
__anon34648bcf0103	extern/libgit2/include/git2/sys/transport.h	/^typedef enum {$/;"	g
__anon34648bcf0203	extern/libgit2/include/git2/sys/transport.h	/^typedef enum {$/;"	g
__anon354735470103	extern/libgit2/src/cache.h	/^enum {$/;"	g
__anon354735470208	extern/libgit2/src/cache.h	/^typedef struct {$/;"	s
__anon354735470308	extern/libgit2/src/cache.h	/^typedef struct {$/;"	s
__anon36e9f1a20108	extern/libgit2/src/config_mem.c	/^typedef struct {$/;"	s	file:
__anon36e9f1a20208	extern/libgit2/src/config_mem.c	/^typedef struct {$/;"	s	file:
__anon38a310860108	extern/libgit2/examples/describe.c	/^typedef struct {$/;"	s	file:
__anon3a1a5d7e0103	extern/libgit2/examples/diff.c	/^enum {$/;"	g	file:
__anon3a1a5d7e0203	extern/libgit2/examples/diff.c	/^enum {$/;"	g	file:
__anon3b5b11db0102	main.cpp	/^            lr::fmap([](const git::UPtr<git_repository> &repo) {$/;"	f	function:main	file:
__anon3b5b11db0202	main.cpp	/^              return bark([&repo](const TreeBark::O &) {$/;"	f	function:main::__anon3b5b11db0102	file:
__anon3b5b11db0302	main.cpp	/^                       lr::fmap([&](const auto &id) {$/;"	f	function:main::__anon3b5b11db0102::__anon3b5b11db0202	file:
__anon3b5b11db0402	main.cpp	/^                       lr::fmap([](const auto &pTree) {$/;"	f	function:main::__anon3b5b11db0102::__anon3b5b11db0202	file:
__anon3b5b11db0502	main.cpp	/^            | lr::fmap([](auto &&a) { return a; });$/;"	f	function:main	file:
__anon3b5b11db0602	main.cpp	/^                 [](lr::L &&l) { std::cout << "L: " << l.message; },$/;"	f	function:main	file:
__anon3b5b11db0702	main.cpp	/^                 [](git_oid &&l) { std::cout << "R: " << git_oid_tostr_s(&l); },$/;"	f	function:main	file:
__anon3e7abff70102	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^                        [](int c1, int c2) {$/;"	f	function:Impl::XLToken::IsBoolean	file:
__anon3e7abff70202	extern/OpenXLSX/library/openxlsx/implementation/sources/XLTokenizer_Impl.cpp	/^                         [](int c1, int c2) {$/;"	f	function:Impl::XLToken::IsBoolean	file:
__anon3eb19ecc0108	extern/libgit2/include/git2/index.h	/^typedef struct {$/;"	s
__anon3eb19ecc0203	extern/libgit2/include/git2/index.h	/^typedef enum {$/;"	g
__anon3eb19ecc0303	extern/libgit2/include/git2/index.h	/^typedef enum {$/;"	g
__anon3eb19ecc0403	extern/libgit2/include/git2/index.h	/^typedef enum {$/;"	g
__anon3eb19ecc0503	extern/libgit2/include/git2/index.h	/^typedef enum {$/;"	g
__anon3eb19ecc0603	extern/libgit2/include/git2/index.h	/^typedef enum {$/;"	g
__anon3f63bb720108	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^typedef struct {$/;"	s
__anon4085ff9a0108	extern/libgit2/tests/notes/notes.c	/^static struct {$/;"	s	file:
__anon41711a7e0103	extern/libgit2/src/merge.c	/^typedef enum {$/;"	g	file:
__anon41711a7e0208	extern/libgit2/src/merge.c	/^typedef struct {$/;"	s	file:
__anon41711a830103	extern/libgit2/src/merge.h	/^enum {$/;"	g
__anon41711a830203	extern/libgit2/src/merge.h	/^enum {$/;"	g
__anon41711a830303	extern/libgit2/src/merge.h	/^typedef enum {$/;"	g
__anon41711a830408	extern/libgit2/src/merge.h	/^typedef struct {$/;"	s
__anon41711a830508	extern/libgit2/src/merge.h	/^typedef struct {$/;"	s
__anon46261b870103	extern/libgit2/include/git2/worktree.h	/^typedef enum {$/;"	g
__anon463e8fa90103	extern/libgit2/examples/status.c	/^enum {$/;"	g	file:
__anon46ced4e80108	extern/libgit2/include/git2/cherrypick.h	/^typedef struct {$/;"	s
__anon4996472a0103	extern/libgit2/include/git2/checkout.h	/^typedef enum {$/;"	g
__anon4996472a0203	extern/libgit2/include/git2/checkout.h	/^typedef enum {$/;"	g
__anon4996472a0308	extern/libgit2/include/git2/checkout.h	/^typedef struct {$/;"	s
__anon4b0087f90103	extern/libgit2/src/annotated_commit.h	/^typedef enum {$/;"	g
__anon4def8247010a	extern/libgit2/src/win32/reparse.h	/^	union {$/;"	u	struct:_GIT_REPARSE_DATA_BUFFER
__anon4def82470208	extern/libgit2/src/win32/reparse.h	/^		struct {$/;"	s	union:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a
__anon4def82470308	extern/libgit2/src/win32/reparse.h	/^		struct {$/;"	s	union:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a
__anon4def82470408	extern/libgit2/src/win32/reparse.h	/^		struct {$/;"	s	union:_GIT_REPARSE_DATA_BUFFER::__anon4def8247010a
__anon4e4811d70103	extern/libgit2/include/git2/stash.h	/^typedef enum {$/;"	g
__anon4e4811d70203	extern/libgit2/include/git2/stash.h	/^typedef enum {$/;"	g
__anon4e4811d70303	extern/libgit2/include/git2/stash.h	/^typedef enum {$/;"	g
__anon4e5bf2450108	extern/libgit2/src/object.c	/^typedef struct {$/;"	s	file:
__anon4fc5b6370108	extern/libgit2/src/ignore.h	/^typedef struct {$/;"	s
__anon4fc5b6370203	extern/libgit2/src/ignore.h	/^enum {$/;"	g
__anon5111880b0108	extern/libgit2/tests/core/oidmap.c	/^static struct {$/;"	s	file:
__anon51bacafb0103	extern/libgit2/include/git2/net.h	/^typedef enum {$/;"	g
__anon521ee3d40108	extern/libgit2/tests/iterator/workdir.c	/^	static struct {$/;"	s	function:test_iterator_workdir__builtin_ignores	file:
__anon53f50bfa0103	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^typedef enum {$/;"	g
__anon56a1c92f0108	extern/libgit2/tests/online/push_util.h	/^typedef struct {$/;"	s
__anon56a1c92f0208	extern/libgit2/tests/online/push_util.h	/^typedef struct {$/;"	s
__anon56a1c92f0308	extern/libgit2/tests/online/push_util.h	/^typedef struct {$/;"	s
__anon56a1c92f0408	extern/libgit2/tests/online/push_util.h	/^typedef struct {$/;"	s
__anon5aa68d020108	extern/libgit2/src/attrcache.h	/^typedef struct {$/;"	s
__anon5b6b8b690108	extern/libgit2/src/attr.c	/^typedef struct {$/;"	s	file:
__anon5b6b8b690208	extern/libgit2/src/attr.c	/^typedef struct {$/;"	s	file:
__anon5cee94ee0108	extern/libgit2/include/git2/sys/stream.h	/^typedef struct {$/;"	s
__anon5cee94ee0203	extern/libgit2/include/git2/sys/stream.h	/^typedef enum {$/;"	g
__anon5d2cee0d0108	extern/libgit2/src/blob.c	/^typedef struct {$/;"	s	file:
__anon5d2cee12010a	extern/libgit2/src/blob.h	/^	union {$/;"	u	struct:git_blob
__anon5d2cee120208	extern/libgit2/src/blob.h	/^		struct {$/;"	s	union:git_blob::__anon5d2cee12010a
__anon5e9a43240108	extern/libgit2/include/git2/merge.h	/^typedef struct {$/;"	s
__anon5e9a43240203	extern/libgit2/include/git2/merge.h	/^typedef enum {$/;"	g
__anon5e9a43240303	extern/libgit2/include/git2/merge.h	/^typedef enum {$/;"	g
__anon5e9a43240403	extern/libgit2/include/git2/merge.h	/^typedef enum {$/;"	g
__anon5e9a43240508	extern/libgit2/include/git2/merge.h	/^typedef struct {$/;"	s
__anon5e9a43240608	extern/libgit2/include/git2/merge.h	/^typedef struct {$/;"	s
__anon5e9a43240708	extern/libgit2/include/git2/merge.h	/^typedef struct {$/;"	s
__anon5e9a43240803	extern/libgit2/include/git2/merge.h	/^typedef enum {$/;"	g
__anon5e9a43240903	extern/libgit2/include/git2/merge.h	/^typedef enum {$/;"	g
__anon5fed15950103	extern/libgit2/src/crlf.c	/^typedef enum {$/;"	g	file:
__anon60a8fbc40108	extern/libgit2/src/repo_template.h	/^typedef struct {$/;"	s
__anon6112fc6c0103	extern/libgit2/src/date.c	/^typedef enum {$/;"	g	file:
__anon6112fc6c0208	extern/libgit2/src/date.c	/^static const struct {$/;"	s	file:
__anon61187bac0103	extern/libgit2/src/netops.h	/^enum {$/;"	g
__anon619c176c0103	extern/libgit2/src/diff.h	/^typedef enum {$/;"	g
__anon63af67960103	extern/libgit2/include/git2/proxy.h	/^typedef enum {$/;"	g
__anon63af67960208	extern/libgit2/include/git2/proxy.h	/^typedef struct {$/;"	s
__anon63ef94e80108	extern/libgit2/src/patch_generate.c	/^typedef struct {$/;"	s	file:
__anon63ef94ed0103	extern/libgit2/src/patch_generate.h	/^enum {$/;"	g
__anon6544ff4b0108	extern/libgit2/tests/fetchhead/nonetwork.c	/^typedef struct {$/;"	s	file:
__anon67941f950108	extern/libgit2/src/hash/sha1/win32.h	/^typedef struct {$/;"	s
__anon67941f95020a	extern/libgit2/src/hash/sha1/win32.h	/^	union {$/;"	u	struct:__anon67941f950108
__anon67941f95030a	extern/libgit2/src/hash/sha1/win32.h	/^	union {$/;"	u	struct:git_hash_sha1_ctx
__anon6890d5050108	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^typedef struct {$/;"	s	file:
__anon6890d5050208	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^typedef struct {$/;"	s	file:
__anon6a671f570108	extern/libgit2/src/hash.h	/^typedef struct {$/;"	s
__anon6a671f570203	extern/libgit2/src/hash.h	/^typedef enum {$/;"	g
__anon6a671f57030a	extern/libgit2/src/hash.h	/^	union {$/;"	u	struct:git_hash_ctx
__anon6aee9ba20108	extern/libgit2/tests/index/addall.c	/^typedef struct {$/;"	s	file:
__anon6b0c21600108	extern/libgit2/src/streams/openssl.c	/^typedef struct {$/;"	s	file:
__anon6bd1a3ef0103	extern/libgit2/include/git2/attr.h	/^typedef enum {$/;"	g
__anon6cf58d250103	extern/libgit2/include/git2/clone.h	/^typedef enum {$/;"	g
__anon6d9306930103	extern/libgit2/include/git2/blob.h	/^typedef enum {$/;"	g
__anon6d9306930208	extern/libgit2/include/git2/blob.h	/^typedef struct {$/;"	s
__anon6db101b40103	extern/libgit2/src/buf_text.h	/^typedef enum {$/;"	g
__anon6db101b40208	extern/libgit2/src/buf_text.h	/^typedef struct {$/;"	s
__anon6ee27a8d0108	extern/libgit2/include/git2/sys/alloc.h	/^typedef struct {$/;"	s
__anon6f6b75620103	extern/libgit2/include/git2/cert.h	/^typedef enum {$/;"	g
__anon6f6b75620208	extern/libgit2/include/git2/cert.h	/^typedef struct {$/;"	s
__anon6f6b75620308	extern/libgit2/include/git2/cert.h	/^typedef struct {$/;"	s
__anon6fb9a4920103	extern/libgit2/src/diff_driver.c	/^typedef enum {$/;"	g	file:
__anon6fb9a4920208	extern/libgit2/src/diff_driver.c	/^typedef struct {$/;"	s	file:
__anon6fb9a4920303	extern/libgit2/src/diff_driver.c	/^enum {$/;"	g	file:
__anon6fb9a4970108	extern/libgit2/src/diff_driver.h	/^typedef struct {$/;"	s
__anon704f4ef20103	extern/libgit2/include/git2/cred.h	/^typedef enum {$/;"	g
__anon7162bc2d0108	extern/libgit2/src/win32/thread.h	/^typedef struct {$/;"	s
__anon7162bc2d0208	extern/libgit2/src/win32/thread.h	/^typedef struct { void *Ptr; } GIT_SRWLOCK;$/;"	s
__anon7162bc2d0308	extern/libgit2/src/win32/thread.h	/^typedef struct {$/;"	s
__anon7162bc2d040a	extern/libgit2/src/win32/thread.h	/^	union {$/;"	u	struct:__anon7162bc2d0308
__anon7181b0a80108	extern/libgit2/tests/core/strmap.c	/^	struct {$/;"	s	function:test_core_strmap__iteration	file:
__anon72022fed0103	extern/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon72022fed0203	extern/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon72022fed0303	extern/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon72022fed0408	extern/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon72022fed0508	extern/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon72022fed0608	extern/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon72022fed0703	extern/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon72022fed0808	extern/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon72022fed0908	extern/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon72022fed0a08	extern/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon72022fed0b03	extern/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon72022fed0c08	extern/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon72022fed0d03	extern/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon72022fed0e08	extern/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon72022fed0f08	extern/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon72022fed1003	extern/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon72022fed1103	extern/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon72022fed1203	extern/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon72022fed1308	extern/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon748ef1b10102	oset.cpp	/^  auto os = oset{+[](int &&) {}, +[](float &&) {}};$/;"	f	function:main	file:
__anon748ef1b10202	oset.cpp	/^  auto os = oset{+[](int &&) {}, +[](float &&) {}};$/;"	f	function:main	file:
__anon748ef1b10302	oset.cpp	/^  auto r = union_bark<int, float>{+[](const union_bark<int, float>::O &o) {$/;"	f	function:main	file:
__anon748f06f60102	oset.hpp	/^  auto a = oset{[](int) {}};$/;"	f	function:main	file:
__anon7558639b0108	extern/libgit2/deps/zlib/gzguts.h	/^typedef struct {$/;"	s
__anon75f7307c0108	extern/libgit2/tests/submodule/status.c	/^typedef struct {$/;"	s	file:
__anon76b5c0160108	extern/libgit2/tests/core/sortedcache.c	/^typedef struct {$/;"	s	file:
__anon76bd502b0108	extern/libgit2/src/userdiff.h	/^typedef struct {$/;"	s
__anon774755630108	extern/libgit2/src/config_parse.h	/^typedef struct {$/;"	s
__anon7d07ab120108	extern/libgit2/src/pack.h	/^typedef struct {$/;"	s
__anon7d10f0bb0108	extern/libgit2/src/path.c	/^static const struct {$/;"	s	file:
__anon7d10f0c00103	extern/libgit2/src/path.h	/^enum {$/;"	g
__anon7d10f0c00203	extern/libgit2/src/path.h	/^enum { GIT_PATH_NOTEQUAL = 0, GIT_PATH_EQUAL = 1, GIT_PATH_PREFIX = 2 };$/;"	g
__anon7d10f0c00308	extern/libgit2/src/path.h	/^typedef struct {$/;"	s
__anon7e0b9aed0108	extern/libgit2/src/pool.h	/^typedef struct {$/;"	s
__anon7e0b9aed0208	extern/libgit2/src/pool.h	/^typedef struct {$/;"	s
__anon7e7f02bb0108	extern/libgit2/include/git2/sys/diff.h	/^typedef struct {$/;"	s
__anon7ee03db30108	extern/libgit2/tests/odb/backend/backend_helpers.h	/^typedef struct {$/;"	s
__anon7ee03db30208	extern/libgit2/tests/odb/backend/backend_helpers.h	/^typedef struct {$/;"	s
__anon7f3464670108	extern/libgit2/src/streams/mbedtls.c	/^typedef struct {$/;"	s	file:
__anon807a30970108	extern/libgit2/deps/zlib/inftrees.h	/^typedef struct {$/;"	s
__anon807a30970203	extern/libgit2/deps/zlib/inftrees.h	/^typedef enum {$/;"	g
__anon81c02f840108	extern/libgit2/src/odb_loose.c	/^typedef struct { \/* object header data *\/$/;"	s	file:
__anon81c02f840208	extern/libgit2/src/odb_loose.c	/^typedef struct {$/;"	s	file:
__anon81c02f840308	extern/libgit2/src/odb_loose.c	/^typedef struct {$/;"	s	file:
__anon81c02f840408	extern/libgit2/src/odb_loose.c	/^typedef struct {$/;"	s	file:
__anon81c540870202	extern/OpenXLSX/tests/catch/catch.hpp	/^                    [](const auto& value) {$/;"	f	namespace:Catch	file:
__anon81fc257e0103	extern/libgit2/src/refs.c	/^enum {$/;"	g	file:
__anon81fc257e0208	extern/libgit2/src/refs.c	/^typedef struct {$/;"	s	file:
__anon81fc2583010a	extern/libgit2/src/refs.h	/^	union {$/;"	u	struct:git_reference
__anon8263d3700108	extern/libgit2/src/bitvec.h	/^typedef struct {$/;"	s
__anon8263d370020a	extern/libgit2/src/bitvec.h	/^	union {$/;"	u	struct:__anon8263d3700108
__anon834bf2e90108	extern/libgit2/src/thread-utils.h	/^typedef struct {$/;"	s
__anon834bf2e90208	extern/libgit2/src/thread-utils.h	/^typedef struct {$/;"	s
__anon8624cbbb0103	extern/libgit2/deps/ntlmclient/ntlm.h	/^typedef enum {$/;"	g
__anon8624cbbb0208	extern/libgit2/deps/ntlmclient/ntlm.h	/^typedef struct {$/;"	s
__anon8624cbbb0308	extern/libgit2/deps/ntlmclient/ntlm.h	/^typedef struct {$/;"	s
__anon8624cbbb0408	extern/libgit2/deps/ntlmclient/ntlm.h	/^typedef struct {$/;"	s
__anon8624cbbb0503	extern/libgit2/deps/ntlmclient/ntlm.h	/^typedef enum {$/;"	g
__anon8624cbbb0603	extern/libgit2/deps/ntlmclient/ntlm.h	/^typedef enum {$/;"	g
__anon8624cbbb0703	extern/libgit2/deps/ntlmclient/ntlm.h	/^typedef enum {$/;"	g
__anon8790ed5e0108	extern/libgit2/src/tree.c	/^typedef struct {$/;"	s	file:
__anon89f64fa30108	extern/libgit2/tests/odb/sorting.c	/^typedef struct {$/;"	s	file:
__anon8a0c964c0108	extern/libgit2/src/util.c	/^typedef struct {$/;"	s	file:
__anon8a0c96510108	extern/libgit2/src/util.h	/^typedef struct {$/;"	s
__anon8a61cad40103	extern/libgit2/include/git2/repository.h	/^typedef enum {$/;"	g
__anon8a61cad40203	extern/libgit2/include/git2/repository.h	/^typedef enum {$/;"	g
__anon8a61cad40303	extern/libgit2/include/git2/repository.h	/^typedef enum {$/;"	g
__anon8a61cad40408	extern/libgit2/include/git2/repository.h	/^typedef struct {$/;"	s
__anon8a61cad40503	extern/libgit2/include/git2/repository.h	/^typedef enum {$/;"	g
__anon8a61cad40603	extern/libgit2/include/git2/repository.h	/^typedef enum {$/;"	g
__anon8bc72ece0108	extern/libgit2/src/transports/auth_negotiate.c	/^typedef struct {$/;"	s	file:
__anon8d5767c90108	extern/libgit2/src/merge_driver.c	/^typedef struct {$/;"	s	file:
__anon8d6dc3930103	extern/libgit2/include/git2/pack.h	/^typedef enum {$/;"	g
__anon8df46cca0108	extern/libgit2/examples/lg2.c	/^struct {$/;"	s	file:
__anon8e82c8010108	extern/libgit2/examples/tag.c	/^typedef struct {$/;"	s	file:
__anon8e82c8010208	extern/libgit2/examples/tag.c	/^typedef struct {$/;"	s	file:
__anon8eca35140103	extern/libgit2/src/transaction.c	/^typedef enum {$/;"	g	file:
__anon8eca35140208	extern/libgit2/src/transaction.c	/^typedef struct {$/;"	s	file:
__anon8eca3514030a	extern/libgit2/src/transaction.c	/^	union {$/;"	u	struct:__anon8eca35140208	file:
__anon91269fe40108	extern/libgit2/tests/core/vector.c	/^typedef struct {$/;"	s	file:
__anon92623e040103	extern/libgit2/include/git2/refs.h	/^typedef enum {$/;"	g
__anon92f8b1ba0103	extern/libgit2/deps/zlib/inflate.h	/^typedef enum {$/;"	g
__anon936e62c10108	extern/libgit2/src/transports/git.c	/^typedef struct {$/;"	s	file:
__anon936e62c10208	extern/libgit2/src/transports/git.c	/^typedef struct {$/;"	s	file:
__anon944cd18b0108	extern/libgit2/src/transports/ssh.c	/^typedef struct {$/;"	s	file:
__anon944cd18b0208	extern/libgit2/src/transports/ssh.c	/^typedef struct {$/;"	s	file:
__anon949726940108	extern/libgit2/src/win32/dir.h	/^typedef struct {$/;"	s
__anon952effbe0103	extern/libgit2/src/submodule.c	/^enum {$/;"	g	file:
__anon952effbe0203	extern/libgit2/src/submodule.c	/^enum {$/;"	g	file:
__anon952effbe0308	extern/libgit2/src/submodule.c	/^typedef struct {$/;"	s	file:
__anon952effbe0408	extern/libgit2/src/submodule.c	/^typedef struct {$/;"	s	file:
__anon952effc30103	extern/libgit2/src/submodule.h	/^enum {$/;"	g
__anon959707cd0103	extern/libgit2/deps/pcre/pcre_study.c	/^enum { SSB_FAIL, SSB_DONE, SSB_CONTINUE, SSB_UNKNOWN };$/;"	g	file:
__anon966719eb0108	extern/libgit2/tests/mailmap/basic.c	/^struct {$/;"	s	file:
__anon968f2a830103	extern/libgit2/include/git2/trace.h	/^typedef enum {$/;"	g
__anon96974fbb0108	extern/libgit2/examples/checkout.c	/^typedef struct {$/;"	s	file:
__anon97f705e40103	extern/libgit2/include/git2/tree.h	/^typedef enum {$/;"	g
__anon97f705e40203	extern/libgit2/include/git2/tree.h	/^typedef enum {$/;"	g
__anon97f705e40308	extern/libgit2/include/git2/tree.h	/^typedef struct {$/;"	s
__anon981dd28b0103	extern/libgit2/src/transports/winhttp.c	/^typedef enum {$/;"	g	file:
__anon981dd28b0208	extern/libgit2/src/transports/winhttp.c	/^typedef struct {$/;"	s	file:
__anon981dd28b0308	extern/libgit2/src/transports/winhttp.c	/^typedef struct {$/;"	s	file:
__anon981dd28b0408	extern/libgit2/src/transports/winhttp.c	/^typedef struct {$/;"	s	file:
__anon991580610108	extern/libgit2/src/win32/w32_stack.c	/^	struct {$/;"	s	function:git_win32__stack_format	file:
__anon991580660108	extern/libgit2/src/win32/w32_stack.h	/^typedef struct {$/;"	s
__anon99f3dc0f0103	extern/libgit2/include/git2/sys/path.h	/^typedef enum {$/;"	g
__anon99f3dc0f0203	extern/libgit2/include/git2/sys/path.h	/^typedef enum {$/;"	g
__anon9abb87050108	extern/libgit2/tests/worktree/worktree_helpers.h	/^typedef struct {$/;"	s
__anon9bd959e60103	extern/libgit2/src/vector.h	/^enum {$/;"	g
__anon9cf2f0870108	extern/libgit2/tests/status/status_helpers.h	/^typedef struct {$/;"	s
__anon9cf2f0870208	extern/libgit2/tests/status/status_helpers.h	/^typedef struct {$/;"	s
__anon9f0fab110108	extern/libgit2/src/win32/findfile.c	/^typedef struct {$/;"	s	file:
__anon9f4c7e120108	extern/libgit2/tests/submodule/lookup.c	/^typedef struct {$/;"	s	file:
__anona6a2af860108	extern/libgit2/src/diff_parse.h	/^typedef struct {$/;"	s
__anona765b0910108	extern/libgit2/tests/diff/diff_helpers.h	/^typedef struct {$/;"	s
__anona765b0910208	extern/libgit2/tests/diff/diff_helpers.h	/^typedef struct {$/;"	s
__anona7f40ac90103	extern/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anona7f40ac90203	extern/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anona7f40ac90303	extern/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anona7f40ac90403	extern/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anona7f40ac90503	extern/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anona7f40ac90603	extern/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anona7f40ac90703	extern/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anona97543260108	extern/libgit2/include/git2/rebase.h	/^typedef struct {$/;"	s
__anona97543260203	extern/libgit2/include/git2/rebase.h	/^typedef enum {$/;"	g
__anona97543260308	extern/libgit2/include/git2/rebase.h	/^typedef struct {$/;"	s
__anonaab5087c0103	extern/libgit2/include/git2/revparse.h	/^typedef enum {$/;"	g
__anonaab5087c0208	extern/libgit2/include/git2/revparse.h	/^typedef struct {$/;"	s
__anonab24499b0108	extern/libgit2/tests/clar.c	/^static struct {$/;"	s	file:
__anonadbd87d80108	extern/libgit2/src/patch_parse.c	/^typedef struct {$/;"	s	file:
__anonadbd87d80203	extern/libgit2/src/patch_parse.c	/^typedef enum {$/;"	g	file:
__anonadbd87d80308	extern/libgit2/src/patch_parse.c	/^typedef struct {$/;"	s	file:
__anonadbd87dd0108	extern/libgit2/src/patch_parse.h	/^typedef struct {$/;"	s
__anonb487a9b80103	extern/libgit2/src/iterator.c	/^typedef enum {$/;"	g	file:
__anonb487a9b80208	extern/libgit2/src/iterator.c	/^typedef struct {$/;"	s	file:
__anonb487a9b80308	extern/libgit2/src/iterator.c	/^typedef struct {$/;"	s	file:
__anonb487a9b80408	extern/libgit2/src/iterator.c	/^typedef struct {$/;"	s	file:
__anonb487a9b80508	extern/libgit2/src/iterator.c	/^typedef struct {$/;"	s	file:
__anonb487a9b80608	extern/libgit2/src/iterator.c	/^typedef struct {$/;"	s	file:
__anonb487a9b80708	extern/libgit2/src/iterator.c	/^typedef struct {$/;"	s	file:
__anonb487a9b80808	extern/libgit2/src/iterator.c	/^typedef struct {$/;"	s	file:
__anonb487a9b80908	extern/libgit2/src/iterator.c	/^typedef struct {$/;"	s	file:
__anonb487a9bd0103	extern/libgit2/src/iterator.h	/^typedef enum {$/;"	g
__anonb487a9bd0203	extern/libgit2/src/iterator.h	/^typedef enum {$/;"	g
__anonb487a9bd0303	extern/libgit2/src/iterator.h	/^typedef enum {$/;"	g
__anonb487a9bd0408	extern/libgit2/src/iterator.h	/^typedef struct {$/;"	s
__anonb487a9bd0508	extern/libgit2/src/iterator.h	/^typedef struct {$/;"	s
__anonb531ffc20108	extern/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anonb531ffc20208	extern/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anonb531ffc20308	extern/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anonb531ffc20408	extern/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anonb531ffc20508	extern/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anonb531ffc20608	extern/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anonb531ffc20708	extern/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anonb531ffc20808	extern/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anonb65cbde80108	extern/libgit2/src/transports/local.c	/^typedef struct {$/;"	s	file:
__anonb6e7d1470108	extern/libgit2/deps/http-parser/http_parser.c	/^static struct {$/;"	s	file:
__anonb6e7d14c0108	extern/libgit2/deps/http-parser/http_parser.h	/^  struct {$/;"	s	struct:http_parser_url
__anonb814e4160103	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	g
__anonb814e4160203	extern/libgit2/deps/pcre/pcre_internal.h	/^enum {$/;"	g
__anonb814e4160303	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	g
__anonb814e4160403	extern/libgit2/deps/pcre/pcre_internal.h	/^enum { JIT_COMPILE, JIT_PARTIAL_SOFT_COMPILE, JIT_PARTIAL_HARD_COMPILE,$/;"	g
__anonb814e4160508	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct {$/;"	s
__anonb814e4160608	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct {$/;"	s
__anonb8a4a6330108	extern/libgit2/src/config_snapshot.c	/^typedef struct {$/;"	s	file:
__anonb8b091150108	extern/libgit2/src/diff_stats.c	/^typedef struct {$/;"	s	file:
__anonb92219d10103	extern/libgit2/include/git2/errors.h	/^typedef enum {$/;"	g
__anonb92219d10208	extern/libgit2/include/git2/errors.h	/^typedef struct {$/;"	s
__anonb92219d10303	extern/libgit2/include/git2/errors.h	/^typedef enum {$/;"	g
__anonba2986ec0103	extern/libgit2/include/git2/pathspec.h	/^typedef enum {$/;"	g
__anonbac5d6240103	extern/libgit2/src/checkout.c	/^enum {$/;"	g	file:
__anonbac5d6240208	extern/libgit2/src/checkout.c	/^typedef struct {$/;"	s	file:
__anonbac5d6240308	extern/libgit2/src/checkout.c	/^typedef struct {$/;"	s	file:
__anonbb1957950108	extern/libgit2/src/hashsig.c	/^typedef struct {$/;"	s	file:
__anonbb1957950208	extern/libgit2/src/hashsig.c	/^typedef struct {$/;"	s	file:
__anonbd02e2090103	extern/libgit2/src/refdb_fs.c	/^enum {$/;"	g	file:
__anonbd02e2090203	extern/libgit2/src/refdb_fs.c	/^enum {$/;"	g	file:
__anonbd02e2090308	extern/libgit2/src/refdb_fs.c	/^typedef struct {$/;"	s	file:
__anonbd02e20e0108	extern/libgit2/src/refdb_fs.h	/^typedef struct {$/;"	s
__anonbd5617990103	extern/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	g	file:
__anonbea3682e0108	extern/libgit2/include/git2/buffer.h	/^typedef struct {$/;"	s
__anonbf3de2540108	extern/libgit2/src/apply.c	/^typedef struct {$/;"	s	file:
__anonbf3de2540208	extern/libgit2/src/apply.c	/^typedef struct {$/;"	s	file:
__anonc1a5ebab0108	extern/libgit2/tests/checkout/checkout_helpers.h	/^typedef struct {$/;"	s
__anonc38fbaf40102	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^                                [](const XLCellData& a, const XLCellData& b) {$/;"	f	function:Impl::XLRow::Cell	file:
__anonc38fbaf40202	extern/OpenXLSX/library/openxlsx/implementation/sources/XLRow_Impl.cpp	/^    auto result = find_if(m_cells.begin(), m_cells.end(), [=](const XLCellData& data) {$/;"	f	function:Impl::XLRow::Cell	file:
__anonc41be5800103	extern/libgit2/include/git2/remote.h	/^typedef enum {$/;"	g
__anonc41be5800208	extern/libgit2/include/git2/remote.h	/^typedef struct {$/;"	s
__anonc41be5800303	extern/libgit2/include/git2/remote.h	/^typedef enum {$/;"	g
__anonc41be5800403	extern/libgit2/include/git2/remote.h	/^typedef enum {$/;"	g
__anonc41be5800508	extern/libgit2/include/git2/remote.h	/^typedef struct {$/;"	s
__anonc41be5800608	extern/libgit2/include/git2/remote.h	/^typedef struct {$/;"	s
__anonc4c32e390108	extern/libgit2/tests/object/tree/parse.c	/^typedef struct {$/;"	s	file:
__anonc5c3b4890103	extern/libgit2/include/git2/sys/hashsig.h	/^typedef enum {$/;"	g
__anonc5fef1dc0108	extern/libgit2/src/streams/stransport.c	/^typedef struct {$/;"	s	file:
__anonc7d6e3c70108	extern/libgit2/tests/clar_libgit2.c	/^typedef struct {$/;"	s	file:
__anonc7d6e3cc0108	extern/libgit2/tests/clar_libgit2.h	/^typedef struct {$/;"	s
__anoncc6f59690103	extern/libgit2/src/transports/smart.h	/^typedef enum {$/;"	g
__anoncc6f59690208	extern/libgit2/src/transports/smart.h	/^typedef struct {$/;"	s
__anoncc6f59690308	extern/libgit2/src/transports/smart.h	/^typedef struct {$/;"	s
__anoncc6f59690408	extern/libgit2/src/transports/smart.h	/^typedef struct {$/;"	s
__anoncc6f59690508	extern/libgit2/src/transports/smart.h	/^typedef struct {$/;"	s
__anoncc6f59690608	extern/libgit2/src/transports/smart.h	/^typedef struct {$/;"	s
__anoncc6f59690708	extern/libgit2/src/transports/smart.h	/^typedef struct {$/;"	s
__anoncc6f59690808	extern/libgit2/src/transports/smart.h	/^typedef struct {$/;"	s
__anoncc6f59690908	extern/libgit2/src/transports/smart.h	/^typedef struct {$/;"	s
__anoncc6f59690a08	extern/libgit2/src/transports/smart.h	/^typedef struct {$/;"	s
__anoncc6f59690b08	extern/libgit2/src/transports/smart.h	/^typedef struct {$/;"	s
__anoncda507930108	extern/libgit2/src/diff_print.c	/^typedef struct {$/;"	s	file:
__anonce3edc250108	extern/libgit2/src/futils.c	/^typedef struct {$/;"	s	file:
__anonce3edc250208	extern/libgit2/src/futils.c	/^typedef struct {$/;"	s	file:
__anonce3edc2a0103	extern/libgit2/src/futils.h	/^typedef enum {$/;"	g
__anonce3edc2a0203	extern/libgit2/src/futils.h	/^typedef enum {$/;"	g
__anonce3edc2a0303	extern/libgit2/src/futils.h	/^typedef enum {$/;"	g
__anonce3edc2a0408	extern/libgit2/src/futils.h	/^typedef struct {$/;"	s
__anonce5e58f80103	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^typedef enum {$/;"	g	file:
__anonce5e58f80203	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^typedef enum {$/;"	g	file:
__anonce5e58f80303	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^typedef enum {$/;"	g	file:
__anoncf0ee4500108	extern/libgit2/tests/ignore/status.c	/^	struct {$/;"	s	function:test_ignore_status__0	file:
__anond124c25c0108	extern/libgit2/deps/ntlmclient/crypt_mbedtls.h	/^typedef struct {$/;"	s
__anond3a8d8530108	extern/libgit2/tests/object/cache.c	/^static struct {$/;"	s	file:
__anond44356cc0108	extern/libgit2/tests/commit/parse.c	/^typedef struct {$/;"	s	file:
__anond44356cc0208	extern/libgit2/tests/commit/parse.c	/^typedef struct {$/;"	s	file:
__anond44356cc0308	extern/libgit2/tests/commit/parse.c	/^typedef struct {$/;"	s	file:
__anond6f9b4680103	extern/libgit2/src/pqueue.h	/^enum {$/;"	g
__anond70699990108	extern/libgit2/include/git2/message.h	/^typedef struct {$/;"	s
__anond70699990208	extern/libgit2/include/git2/message.h	/^typedef struct {$/;"	s
__anond864852c0108	extern/libgit2/include/git2/revert.h	/^typedef struct {$/;"	s
__anond92d40380108	extern/libgit2/src/sortedcache.h	/^typedef struct {$/;"	s
__anonda4e2ebc0108	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	s
__anondc670afa0108	extern/libgit2/include/git2/apply.h	/^typedef struct {$/;"	s
__anondc670afa0203	extern/libgit2/include/git2/apply.h	/^typedef enum {$/;"	g
__anonde82408a0108	extern/libgit2/src/streams/socket.h	/^typedef struct {$/;"	s
__anondf8eb2770103	extern/libgit2/include/git2/reset.h	/^typedef enum {$/;"	g
__anone2ec2d7a0103	extern/libgit2/include/git2/filter.h	/^typedef enum {$/;"	g
__anone2ec2d7a0203	extern/libgit2/include/git2/filter.h	/^typedef enum {$/;"	g
__anone3edc9c60108	extern/libgit2/tests/checkout/typechange.c	/^typedef struct {$/;"	s	file:
__anone500b1410108	extern/libgit2/src/reader.c	/^typedef struct {$/;"	s	file:
__anone500b1410208	extern/libgit2/src/reader.c	/^typedef struct {$/;"	s	file:
__anone500b1410308	extern/libgit2/src/reader.c	/^typedef struct {$/;"	s	file:
__anone5feb9ce0108	extern/libgit2/src/diff_tform.c	/^typedef struct {$/;"	s	file:
__anone5feb9ce0208	extern/libgit2/src/diff_tform.c	/^typedef struct {$/;"	s	file:
__anone69a74500103	extern/libgit2/include/git2/odb_backend.h	/^typedef enum {$/;"	g
__anone72706600103	extern/libgit2/src/rebase.c	/^typedef enum {$/;"	g	file:
__anone9359e2a0102	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    auto sheetData = find_if(m_sheets.begin(), m_sheets.end(), [&](const XLSheetData& data) {$/;"	f	function:Impl::XLWorkbook::Sheet	file:
__anone9359e2a0202	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    auto sheetData = find_if(m_sheets.begin(), m_sheets.end(), [&](const XLSheetData& data) {$/;"	f	function:Impl::XLWorkbook::Sheet	file:
__anone9359e2a0302	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    auto sheetData = find_if(m_sheets.begin(), m_sheets.end(), [&](const XLSheetData& data) {$/;"	f	function:Impl::XLWorkbook::Worksheet	file:
__anone9359e2a0402	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    auto sheetData = find_if(m_sheets.begin(), m_sheets.end(), [&](const XLSheetData& data) {$/;"	f	function:Impl::XLWorkbook::Worksheet	file:
__anone9359e2a0502	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    auto sheetData = find_if(m_sheets.begin(), m_sheets.end(), [&](const XLSheetData& data) {$/;"	f	function:Impl::XLWorkbook::Chartsheet	file:
__anone9359e2a0602	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    auto sheetData = find_if(m_sheets.begin(), m_sheets.end(), [&](const XLSheetData& data) {$/;"	f	function:Impl::XLWorkbook::Chartsheet	file:
__anone9359e2a0702	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    auto sheetData = find_if(m_sheets.begin(), m_sheets.end(), [&](const XLSheetData& data) {$/;"	f	function:Impl::XLWorkbook::DeleteSheet	file:
__anone9359e2a0802	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    m_sheets.erase(find_if(m_sheets.begin(), m_sheets.end(), [&](const XLSheetData& item) {$/;"	f	function:Impl::XLWorkbook::DeleteSheet	file:
__anone9359e2a0902	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    return max_element(m_sheets.begin(), m_sheets.end(), [](const XLSheetData& a, const XLSheetD/;"	f	function:Impl::XLWorkbook::GetNewSheetID	file:
__anone9359e2a0a02	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    auto sheetData = find_if(m_sheets.begin(), m_sheets.end(), [&](const XLSheetData& data) {$/;"	f	function:Impl::XLWorkbook::TypeOfSheet	file:
__anone9359e2a0b02	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    return count_if(m_sheets.begin(), m_sheets.end(), [](const XLSheetData& iter) {$/;"	f	function:Impl::XLWorkbook::WorksheetCount	file:
__anone9359e2a0c02	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    return count_if(m_sheets.begin(), m_sheets.end(), [](const XLSheetData& iter) {$/;"	f	function:Impl::XLWorkbook::ChartsheetCount	file:
__anone9359e2a0d02	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    return find_if(m_sheets.begin(), m_sheets.end(), [&](const XLSheetData& item) {$/;"	f	function:Impl::XLWorkbook::SheetExists	file:
__anone9359e2a0e02	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    return find_if(m_sheets.begin(), m_sheets.end(), [&](const XLSheetData& item) {$/;"	f	function:Impl::XLWorkbook::WorksheetExists	file:
__anone9359e2a0f02	extern/OpenXLSX/library/openxlsx/implementation/sources/XLWorkbook_Impl.cpp	/^    return find_if(m_sheets.begin(), m_sheets.end(), [&](const XLSheetData& item) {$/;"	f	function:Impl::XLWorkbook::ChartsheetExists	file:
__anone9839ae90108	extern/libgit2/tests/diff/racediffiter.c	/^{$/;"	s	file:
__anone9839ae90208	extern/libgit2/tests/diff/racediffiter.c	/^typedef struct {$/;"	s	file:
__anoneba207f50103	extern/libgit2/include/git2/describe.h	/^typedef enum {$/;"	g
__anoneba207f50208	extern/libgit2/include/git2/describe.h	/^typedef struct {$/;"	s
__anonebc673f90103	extern/libgit2/src/zstream.h	/^typedef enum {$/;"	g
__anonebc673f90208	extern/libgit2/src/zstream.h	/^typedef struct {$/;"	s
__anonebdfd2bf0102	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^            auto isEqual = [](const Impl::ZipEntry& a, const Impl::ZipEntry& b) {$/;"	f	function:Zippy::ZipArchive::Open	file:
__anonebdfd2bf0202	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^            result.erase(std::remove_if(result.begin(), result.end(), [&](const std::string& fil/;"	f	function:Zippy::ZipArchive::GetEntryNamesInDir	file:
__anonebdfd2bf0302	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^                    .erase(std::remove_if(m_ZipEntries.begin(), m_ZipEntries.end(), [&](const Im/;"	f	function:Zippy::ZipArchive::DeleteEntry	file:
__anonebdfd2bf0402	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^            auto result = std::find_if(m_ZipEntries.begin(), m_ZipEntries.end(), [&](const Impl:/;"	f	function:Zippy::ZipArchive::GetEntry	file:
__anonebdfd2bf0502	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^            auto result = std::find_if(m_ZipEntries.begin(), m_ZipEntries.end(), [&](const Impl:/;"	f	function:Zippy::ZipArchive::AddEntry	file:
__anonebdfd2bf0602	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^            auto result = std::find_if(m_ZipEntries.begin(), m_ZipEntries.end(), [&](const Impl:/;"	f	function:Zippy::ZipArchive::AddEntry	file:
__anonebdfd2bf0702	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^            auto result = std::find_if(m_ZipEntries.begin(), m_ZipEntries.end(), [&](const Impl:/;"	f	function:Zippy::ZipArchive::AddEntry	file:
__anonede0033d0103	extern/libgit2/include/git2/common.h	/^typedef enum {$/;"	g
__anonede0033d0203	extern/libgit2/include/git2/common.h	/^typedef enum {$/;"	g
__anonefb3184a0103	extern/libgit2/include/git2/config.h	/^typedef enum {$/;"	g
__anonefb3184a0203	extern/libgit2/include/git2/config.h	/^typedef enum {$/;"	g
__anonefb3184a0308	extern/libgit2/include/git2/config.h	/^typedef struct {$/;"	s
__anonefee04e40108	extern/libgit2/examples/ls-files.c	/^typedef struct {$/;"	s	file:
__anonf0efc70d0103	extern/libgit2/deps/pcre/pcreposix.h	/^enum {$/;"	g
__anonf0efc70d0208	extern/libgit2/deps/pcre/pcreposix.h	/^typedef struct {$/;"	s
__anonf0efc70d0308	extern/libgit2/deps/pcre/pcreposix.h	/^typedef struct {$/;"	s
__anonf415dd740103	extern/libgit2/src/transports/auth.h	/^typedef enum {$/;"	g
__anonf415dd740208	extern/libgit2/src/transports/auth.h	/^typedef struct {$/;"	s
__anonf62753ca0103	extern/libgit2/examples/cat-file.c	/^enum {$/;"	g	file:
__anonf6d3dd100108	extern/libgit2/src/errors.h	/^typedef struct {$/;"	s
__anonf8182e5d0102	function_ref.hpp	/^    callback_ = [](void *obj, Args... args) -> R {$/;"	f	function:abo::function_ref::function_ref	typeref:typename:R	file:
__anonf985f1a40108	extern/libgit2/src/global.h	/^typedef struct {$/;"	s
__anonf9a9c0fa0102	git.cpp	/^  auto f = lr::fmap{[](git_oid &&) { return 1; }};$/;"	f	function:git::commit	file:
__anonf9a9d63f0102	git.hpp	/^             | lr::fmap([](auto) { return LR<git_oid>(lr::L{"9"}); });$/;"	f	function:git::TreeBark::operator ()	file:
__anonfbd1e3910108	extern/libgit2/src/map.h	/^typedef struct { \/* memory mapped buffer	*\/$/;"	s
__anonfbf77e230108	extern/libgit2/src/odb.c	/^{$/;"	s	file:
__anonfbf77e230208	extern/libgit2/src/odb.c	/^typedef struct {$/;"	s	file:
__anonfbf77e280108	extern/libgit2/src/odb.h	/^typedef struct {$/;"	s
__anonfbf77e280203	extern/libgit2/src/odb.h	/^typedef enum {$/;"	g
__anonfbfa448a010a	extern/libgit2/src/oid.c	/^typedef union {$/;"	u	file:
__anonfc5068ca0108	extern/libgit2/src/tag.c	/^typedef struct {$/;"	s	file:
__anonfc5068ca0208	extern/libgit2/src/tag.c	/^typedef struct {$/;"	s	file:
__anonfceed08a0103	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        {$/;"	g	struct:opt_false	file:
__anonfceed08a0203	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        {$/;"	g	struct:opt_true	file:
__anonfceed08a0303	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        {$/;"	g	class:xml_buffered_writer	file:
__anonfceed08a040a	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        {$/;"	u	class:xml_buffered_writer	file:
__anonfceed08a050a	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		{$/;"	u	struct:xpath_memory_block	file:
__anonfceed08a060a	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		union { float f; UI i; } u;$/;"	u	function:gen_nan	file:
__anonfceed08a070a	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		{$/;"	u	class:xpath_ast_node	file:
__anonfe0d90e40103	extern/libgit2/include/git2/submodule.h	/^typedef enum {$/;"	g
__anonfe3a00c70103	extern/libgit2/deps/zlib/deflate.c	/^typedef enum {$/;"	g	file:
__anonfe3a00cc010a	extern/libgit2/deps/zlib/deflate.h	/^    union {$/;"	u	struct:ct_data_s
__anonfe3a00cc020a	extern/libgit2/deps/zlib/deflate.h	/^    union {$/;"	u	struct:ct_data_s
__anonfece52110103	extern/libgit2/src/sysdir.h	/^typedef enum {$/;"	g
__assert_pcre_uchar32_size	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef int __assert_pcre_uchar32_size[sizeof(PCRE_UCHAR32) == 4 ? 1 : -1];$/;"	t	typeref:typename:int[sizeof (PCRE_UCHAR32)==4?1:-1]
__assert_real_pcre_size_divisible_8	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef int __assert_real_pcre_size_divisible_8[(sizeof(REAL_PCRE) % 8) == 0 ? 1 : -1];$/;"	t	typeref:typename:int[(sizeof (REAL_PCRE)%8)==0?1:-1]
__call	extern/libgit2/tests/resources/userdiff/after/file.php	/^    public function __call($name, $arguments)$/;"	f	class:Faker\\UniqueGenerator
__call	extern/libgit2/tests/resources/userdiff/before/file.php	/^    public function __call($name, $arguments)$/;"	f	class:Faker\\UniqueGenerator
__call	extern/libgit2/tests/resources/userdiff/files/file.php	/^    public function __call($name, $arguments)$/;"	f	class:Faker\\UniqueGenerator
__construct	extern/libgit2/tests/resources/userdiff/after/file.php	/^    public function __construct(Generator $generator, $maxRetries)$/;"	f	class:Faker\\UniqueGenerator
__construct	extern/libgit2/tests/resources/userdiff/before/file.php	/^    public function __construct(Generator $generator, $maxRetries)$/;"	f	class:Faker\\UniqueGenerator
__construct	extern/libgit2/tests/resources/userdiff/files/file.php	/^    public function __construct(Generator $generator, $maxRetries)$/;"	f	class:Faker\\UniqueGenerator
__get	extern/libgit2/tests/resources/userdiff/after/file.php	/^    public function __get($attribute)$/;"	f	class:Faker\\UniqueGenerator
__get	extern/libgit2/tests/resources/userdiff/before/file.php	/^    public function __get($attribute)$/;"	f	class:Faker\\UniqueGenerator
__get	extern/libgit2/tests/resources/userdiff/files/file.php	/^    public function __get($attribute)$/;"	f	class:Faker\\UniqueGenerator
__has_builtin	extern/libgit2/src/common.h	/^# define __has_builtin(/;"	d
__init__	extern/libgit2/tests/generate.py	/^        def __init__(self, module):$/;"	m	class:Module.Template
__init__	extern/libgit2/tests/generate.py	/^    def __init__(self, name):$/;"	m	class:Module
__init__	extern/libgit2/tests/generate.py	/^    def __init__(self, path, output):$/;"	m	class:TestSuite
__iterator_category	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN std::bidirectional_iterator_tag __iterator_category(const pugi::xml_attribute_iterator/;"	f	namespace:std	typeref:typename:PUGI__FN std::bidirectional_iterator_tag
__iterator_category	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN std::bidirectional_iterator_tag __iterator_category(const pugi::xml_named_node_iterato/;"	f	namespace:std	typeref:typename:PUGI__FN std::bidirectional_iterator_tag
__iterator_category	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN std::bidirectional_iterator_tag __iterator_category(const pugi::xml_node_iterator&)$/;"	f	namespace:std	typeref:typename:PUGI__FN std::bidirectional_iterator_tag
__state	extern/libgit2/src/global.c	/^static git_global_st __state;$/;"	v	typeref:typename:git_global_st	file:
_a	extern/libgit2/tests/threads/diff.c	/^static git_tree *_a, *_b;$/;"	v	typeref:typename:git_tree *	file:
_alloc	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_allocator* _alloc;$/;"	m	struct:xpath_parser	typeref:typename:xpath_allocator *	file:
_alloc_size	extern/libgit2/src/vector.h	/^	size_t _alloc_size;$/;"	m	struct:git_vector	typeref:typename:size_t
_assert_sorted	extern/libgit2/tests/core/qsort.c	/^static void _assert_sorted(void *els, size_t n, size_t elsize, git__sort_r_cmp cmp)$/;"	f	typeref:typename:void	file:
_assign	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN void xpath_node_set::_assign(const_iterator begin_, const_iterator end_, type_t type_)$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN void
_assign	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN void xpath_variable_set::_assign(const xpath_variable_set& rhs)$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN void
_attr	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xml_attribute_struct* _attr;$/;"	m	class:pugi::xml_attribute	typeref:typename:xml_attribute_struct *
_attribute	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xml_attribute _attribute;$/;"	m	class:pugi::xpath_node	typeref:typename:xml_attribute
_axis	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		char _axis;$/;"	m	class:xpath_ast_node	typeref:typename:char	file:
_b	extern/libgit2/tests/threads/diff.c	/^static git_tree *_a, *_b;$/;"	v	typeref:typename:git_tree **	file:
_begin	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_node* _begin;$/;"	m	class:xpath_node_set_raw	typeref:typename:xpath_node *	file:
_begin	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        It _begin, _end;$/;"	m	class:pugi::xml_object_range	typeref:typename:It
_begin	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_node* _begin;$/;"	m	class:pugi::xpath_node_set	typeref:typename:xpath_node *
_buf	extern/libgit2/tests/buf/splice.c	/^static git_buf _buf;$/;"	v	typeref:typename:git_buf	file:
_buffer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		const char_t* _buffer;$/;"	m	class:xpath_string	typeref:typename:const char_t *	file:
_buffer	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        char_t* _buffer;$/;"	m	class:pugi::xml_document	typeref:typename:char_t *
_busy_size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        size_t _busy_size;$/;"	m	struct:xml_allocator	typeref:typename:size_t	file:
_capacity	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		size_t _capacity;$/;"	m	class:compact_hash_table	typeref:typename:size_t	file:
_cfg	extern/libgit2/tests/notes/notesref.c	/^static git_config *_cfg;$/;"	v	typeref:typename:git_config *	file:
_check_counts	extern/libgit2/tests/threads/diff.c	/^static int _check_counts;$/;"	v	typeref:typename:int	file:
_check_dir_contents	extern/libgit2/src/path.c	/^static bool _check_dir_contents($/;"	f	typeref:typename:bool	file:
_cl_repo	extern/libgit2/tests/clar_libgit2.c	/^static git_repository *_cl_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
_cl_restore_home	extern/libgit2/tests/clar_libgit2.c	/^static char *_cl_restore_home = NULL;$/;"	v	typeref:typename:char *	file:
_cl_sandbox	extern/libgit2/tests/clar_libgit2.c	/^static const char *_cl_sandbox = NULL;$/;"	v	typeref:typename:const char *	file:
_cl_trace_cb__event_handler	extern/libgit2/tests/clar_libgit2_trace.c	/^void _cl_trace_cb__event_handler($/;"	f	typeref:typename:void
_clar	extern/libgit2/tests/clar.c	/^} _clar;$/;"	v	typeref:struct:__anonab24499b0108
_clar_path	extern/libgit2/tests/clar/sandbox.h	/^static char _clar_path[4096];$/;"	v	typeref:typename:char[4096]
_clone	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_variable_set::_clone(xpath_variable* var, xpath_variable** out_result)$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN bool
_cmp	extern/libgit2/src/vector.h	/^	git_vector_cmp _cmp;$/;"	m	struct:git_vector	typeref:typename:git_vector_cmp
_commits	extern/libgit2/tests/pack/packbuilder.c	/^static git_vector _commits;$/;"	v	typeref:typename:git_vector	file:
_commits_is_initialized	extern/libgit2/tests/pack/packbuilder.c	/^static int _commits_is_initialized;$/;"	v	typeref:typename:int	file:
_config	extern/libgit2/src/repository.h	/^	git_config *_config;$/;"	m	struct:git_repository	typeref:typename:git_config *
_config	extern/libgit2/tests/remote/create.c	/^static git_config *_config;$/;"	v	typeref:typename:git_config *	file:
_configmap_autocrlf	extern/libgit2/src/config_cache.c	/^static git_configmap _configmap_autocrlf[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_configmap_eol	extern/libgit2/src/config_cache.c	/^static git_configmap _configmap_eol[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_configmap_int	extern/libgit2/src/config_cache.c	/^static git_configmap _configmap_int[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_configmap_logallrefupdates	extern/libgit2/src/config_cache.c	/^static git_configmap _configmap_logallrefupdates[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_configmap_safecrlf	extern/libgit2/src/config_cache.c	/^static git_configmap _configmap_safecrlf[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_configmaps	extern/libgit2/src/config_cache.c	/^static struct map_data _configmaps[] = {$/;"	v	typeref:struct:map_data[]	file:
_count	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		size_t _count;$/;"	m	class:compact_hash_table	typeref:typename:size_t	file:
_counts	extern/libgit2/tests/threads/diff.c	/^static git_atomic _counts[4];$/;"	v	typeref:typename:git_atomic[4]	file:
_cp_r_callback	extern/libgit2/src/futils.c	/^static int _cp_r_callback(void *ref, git_buf *from)$/;"	f	typeref:typename:int	file:
_cp_r_mkdir	extern/libgit2/src/futils.c	/^static int _cp_r_mkdir(cp_r_info *info, git_buf *from)$/;"	f	typeref:typename:int	file:
_create	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_document::_create() {$/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN void
_cur	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		const char_t* _cur;$/;"	m	class:xpath_lexer	typeref:typename:const char_t *	file:
_cur_lexeme	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lexeme_t _cur_lexeme;$/;"	m	class:xpath_lexer	typeref:typename:lexeme_t	file:
_cur_lexeme_contents	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_lexer_string _cur_lexeme_contents;$/;"	m	class:xpath_lexer	typeref:typename:xpath_lexer_string	file:
_cur_lexeme_pos	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		const char_t* _cur_lexeme_pos;$/;"	m	class:xpath_lexer	typeref:typename:const char_t *	file:
_data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		uint16_t _data;$/;"	m	class:compact_pointer_parent	typeref:typename:uint16_t	file:
_data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		unsigned char _data;$/;"	m	class:compact_pointer	typeref:typename:unsigned char	file:
_data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		unsigned char _data;$/;"	m	class:compact_string	typeref:typename:unsigned char	file:
_data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		} _data;$/;"	m	class:xpath_ast_node	typeref:union:xpath_ast_node::__anonfceed08a070a	file:
_data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node_struct* xml_text::_data() const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_node_struct *
_data	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_variable* _data[64];$/;"	m	class:pugi::xpath_variable_set	typeref:typename:xpath_variable * [64]
_data_new	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node_struct* xml_text::_data_new() {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_node_struct *
_depth	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        int _depth;$/;"	m	class:pugi::xml_tree_walker	typeref:typename:int
_destroy	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN void xpath_variable_set::_destroy(xpath_variable* var)$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN void
_destroy	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_document::_destroy() {$/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN void
_dirent_loose_load	extern/libgit2/src/refdb_fs.c	/^static int _dirent_loose_load(void *payload, git_buf *full_path)$/;"	f	typeref:typename:int	file:
_dist_code	extern/libgit2/deps/zlib/trees.c	/^uch _dist_code[DIST_CODE_LEN];$/;"	v	typeref:typename:uch[]
_dist_code	extern/libgit2/deps/zlib/trees.h	/^const uch ZLIB_INTERNAL _dist_code[DIST_CODE_LEN] = {$/;"	v	typeref:typename:const uch ZLIB_INTERNAL[]
_dist_code	extern/libgit2/deps/zlib/zconf.h	/^#  define _dist_code /;"	d
_dummy	extern/libgit2/tests/network/remote/push.c	/^static git_repository *_repo, *_dummy;$/;"	v	typeref:typename:git_repository **	file:
_end	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_node* _end;$/;"	m	class:xpath_node_set_raw	typeref:typename:xpath_node *	file:
_end	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        It _begin, _end;$/;"	m	class:pugi::xml_object_range	typeref:typename:It
_end	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_node* _end;$/;"	m	class:pugi::xpath_node_set	typeref:typename:xpath_node *
_entries	extern/libgit2/tests/object/tree/write.c	/^} _entries[] = {$/;"	v	typeref:struct:__anon06a03a090208[]
_eos	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_node* _eos;$/;"	m	class:xpath_node_set_raw	typeref:typename:xpath_node *	file:
_error	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool* _error;$/;"	m	struct:xpath_allocator	typeref:typename:bool *	file:
_existing_oid	extern/libgit2/tests/odb/backend/multiple.c	/^static git_oid _existing_oid;$/;"	v	typeref:typename:git_oid	file:
_existing_oid	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^static git_oid _existing_oid;$/;"	v	typeref:typename:git_oid	file:
_extend	extern/libgit2/tests/core/ftruncate.c	/^static void _extend(git_off_t i64len)$/;"	f	typeref:typename:void	file:
_fake	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^static fake_backend *_fake;$/;"	v	typeref:typename:fake_backend *	file:
_fake_empty	extern/libgit2/tests/odb/backend/multiple.c	/^static fake_backend *_fake_empty;$/;"	v	typeref:typename:fake_backend *	file:
_fake_filled	extern/libgit2/tests/odb/backend/multiple.c	/^static fake_backend *_fake_filled;$/;"	v	typeref:typename:fake_backend *	file:
_find	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_variable* xpath_variable_set::_find(const char_t* name) const$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN xpath_variable *
_findfile_path	extern/libgit2/src/win32/findfile.c	/^} _findfile_path;$/;"	t	typeref:struct:__anon9f0fab110108	file:
_fixture	extern/libgit2/tests/revwalk/basic.c	/^static const char *_fixture = NULL;$/;"	v	typeref:typename:const char *	file:
_flags	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		unsigned char _flags;$/;"	m	class:compact_header	typeref:typename:unsigned char	file:
_git_action	extern/libgit2/src/transports/git.c	/^static int _git_action($/;"	f	typeref:typename:int	file:
_git_close	extern/libgit2/src/transports/git.c	/^static int _git_close(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:int	file:
_git_free	extern/libgit2/src/transports/git.c	/^static void _git_free(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:void	file:
_git_receivepack	extern/libgit2/src/transports/git.c	/^static int _git_receivepack($/;"	f	typeref:typename:int	file:
_git_receivepack_ls	extern/libgit2/src/transports/git.c	/^static int _git_receivepack_ls($/;"	f	typeref:typename:int	file:
_git_repository_open_ext_from_env	extern/libgit2/src/repository.c	/^static int _git_repository_open_ext_from_env($/;"	f	typeref:typename:int	file:
_git_ssh_authenticate_session	extern/libgit2/src/transports/ssh.c	/^static int _git_ssh_authenticate_session($/;"	f	typeref:typename:int	file:
_git_ssh_session_create	extern/libgit2/src/transports/ssh.c	/^static int _git_ssh_session_create($/;"	f	typeref:typename:int	file:
_git_ssh_setup_conn	extern/libgit2/src/transports/ssh.c	/^static int _git_ssh_setup_conn($/;"	f	typeref:typename:int	file:
_git_trace_cb__debug	extern/libgit2/tests/clar_libgit2_trace.c	/^#define _git_trace_cb__debug /;"	d	file:
_git_trace_cb__debug	extern/libgit2/tests/clar_libgit2_trace.c	/^static void _git_trace_cb__debug(git_trace_level_t level, const char *msg)$/;"	f	typeref:typename:void	file:
_git_trace_cb__printf	extern/libgit2/tests/clar_libgit2_trace.c	/^static void _git_trace_cb__printf(git_trace_level_t level, const char *msg)$/;"	f	typeref:typename:void	file:
_git_uploadpack	extern/libgit2/src/transports/git.c	/^static int _git_uploadpack($/;"	f	typeref:typename:int	file:
_git_uploadpack_ls	extern/libgit2/src/transports/git.c	/^static int _git_uploadpack_ls($/;"	f	typeref:typename:int	file:
_global_path	extern/libgit2/tests/repo/init.c	/^static git_buf _global_path = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
_global_path	extern/libgit2/tests/repo/template.c	/^static git_buf _global_path = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
_halloc	extern/libgit2/deps/zlib/zutil.c	/^#  define _halloc /;"	d	file:
_hash	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        compact_hash_table* _hash;$/;"	m	struct:xml_allocator	typeref:typename:compact_hash_table *	file:
_head_id	extern/libgit2/tests/revwalk/hidecb.c	/^static git_oid _head_id;$/;"	v	typeref:typename:git_oid	file:
_hfree	extern/libgit2/deps/zlib/zutil.c	/^#  define _hfree /;"	d	file:
_impl	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        void* _impl;$/;"	m	class:pugi::xpath_query	typeref:typename:void *
_index	extern/libgit2/src/repository.h	/^	git_index *_index;$/;"	m	struct:git_repository	typeref:typename:git_index *
_index	extern/libgit2/tests/index/read_index.c	/^static git_index *_index;$/;"	v	typeref:typename:git_index *	file:
_index	extern/libgit2/tests/rebase/iterator.c	/^static git_index *_index;$/;"	v	typeref:typename:git_index *	file:
_index	extern/libgit2/tests/rebase/setup.c	/^static git_index *_index;$/;"	v	typeref:typename:git_index *	file:
_index	extern/libgit2/tests/reset/default.c	/^static git_index *_index;$/;"	v	typeref:typename:git_index *	file:
_indexer	extern/libgit2/tests/pack/packbuilder.c	/^static git_indexer *_indexer;$/;"	v	typeref:typename:git_indexer *	file:
_init_mutex	extern/libgit2/src/global.c	/^static pthread_mutex_t _init_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t	file:
_items	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		item_t* _items;$/;"	m	class:compact_hash_table	typeref:typename:item_t *	file:
_left	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* _left;$/;"	m	class:xpath_ast_node	typeref:typename:xpath_ast_node *	file:
_length_code	extern/libgit2/deps/zlib/trees.c	/^uch _length_code[MAX_MATCH-MIN_MATCH+1];$/;"	v	typeref:typename:uch[]
_length_code	extern/libgit2/deps/zlib/trees.h	/^const uch ZLIB_INTERNAL _length_code[MAX_MATCH-MIN_MATCH+1]= {$/;"	v	typeref:typename:const uch ZLIB_INTERNAL[]
_length_code	extern/libgit2/deps/zlib/zconf.h	/^#  define _length_code /;"	d
_length_heap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		size_t _length_heap;$/;"	m	class:xpath_string	typeref:typename:size_t	file:
_lexer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_lexer _lexer;$/;"	m	struct:xpath_parser	typeref:typename:xpath_lexer	file:
_load_trace_params	extern/libgit2/tests/clar_libgit2_trace.c	/^static void _load_trace_params(void)$/;"	f	typeref:typename:void	file:
_memory	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        char _memory[192];$/;"	m	class:pugi::xml_document	typeref:typename:char[192]
_move	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN void xpath_node_set::_move(xpath_node_set& rhs) PUGIXML_NOEXCEPT$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN void
_move	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_document::_move(xml_document& rhs) PUGIXML_NOEXCEPT_IF_NOT_COMPACT {$/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN void
_mutex	extern/libgit2/src/global.c	/^static volatile LONG _mutex = 0;$/;"	v	typeref:typename:volatile LONG	file:
_name	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        const char_t* _name;$/;"	m	class:pugi::xml_named_node_iterator	typeref:typename:const char_t *
_name	extern/libgit2/tests/config/multivar.c	/^static const char *_name = "remote.ab.url";$/;"	v	typeref:typename:const char *	file:
_next	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* _next;$/;"	m	class:xpath_ast_node	typeref:typename:xpath_ast_node *	file:
_next	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_variable* _next;$/;"	m	class:pugi::xpath_variable	typeref:typename:xpath_variable *
_node	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xml_node _node;$/;"	m	class:pugi::xpath_node	typeref:typename:xml_node
_nonexisting_oid	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^static git_oid _nonexisting_oid;$/;"	v	typeref:typename:git_oid	file:
_note	extern/libgit2/tests/notes/notesref.c	/^static git_note *_note;$/;"	v	typeref:typename:git_note *	file:
_obj	extern/libgit2/tests/odb/backend/mempack.c	/^static git_odb_object *_obj;$/;"	v	typeref:typename:git_odb_object *	file:
_obj	extern/libgit2/tests/odb/backend/multiple.c	/^static git_odb_object *_obj;$/;"	v	typeref:typename:git_odb_object *	file:
_obj	extern/libgit2/tests/odb/backend/simple.c	/^static git_odb_object *_obj;$/;"	v	typeref:typename:git_odb_object *	file:
_objects	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^static const fake_object _objects[] = {$/;"	v	typeref:typename:const fake_object[]	file:
_objects_empty	extern/libgit2/tests/odb/backend/multiple.c	/^static const fake_object _objects_empty[] = {$/;"	v	typeref:typename:const fake_object[]	file:
_objects_filled	extern/libgit2/tests/odb/backend/multiple.c	/^static const fake_object _objects_filled[] = {$/;"	v	typeref:typename:const fake_object[]	file:
_odb	extern/libgit2/src/repository.h	/^	git_odb *_odb;$/;"	m	struct:git_repository	typeref:typename:git_odb *
_odb	extern/libgit2/tests/odb/backend/mempack.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	extern/libgit2/tests/odb/backend/simple.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	extern/libgit2/tests/odb/foreach.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	extern/libgit2/tests/odb/mixed.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	extern/libgit2/tests/odb/packed.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	extern/libgit2/tests/odb/packed_one.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	extern/libgit2/tests/odb/sorting.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_oid	extern/libgit2/tests/odb/backend/mempack.c	/^static git_oid _oid;$/;"	v	typeref:typename:git_oid	file:
_oid	extern/libgit2/tests/odb/backend/simple.c	/^static git_oid _oid;$/;"	v	typeref:typename:git_oid	file:
_oid_b1	extern/libgit2/tests/online/push.c	/^static git_oid _oid_b1;$/;"	v	typeref:typename:git_oid	file:
_oid_b2	extern/libgit2/tests/online/push.c	/^static git_oid _oid_b2;$/;"	v	typeref:typename:git_oid	file:
_oid_b3	extern/libgit2/tests/online/push.c	/^static git_oid _oid_b3;$/;"	v	typeref:typename:git_oid	file:
_oid_b4	extern/libgit2/tests/online/push.c	/^static git_oid _oid_b4;$/;"	v	typeref:typename:git_oid	file:
_oid_b5	extern/libgit2/tests/online/push.c	/^static git_oid _oid_b5;$/;"	v	typeref:typename:git_oid	file:
_oid_b6	extern/libgit2/tests/online/push.c	/^static git_oid _oid_b6;$/;"	v	typeref:typename:git_oid	file:
_once_init	extern/libgit2/src/global.c	/^static pthread_once_t _once_init = PTHREAD_ONCE_INIT;$/;"	v	typeref:typename:pthread_once_t	file:
_orig_http_proxy	extern/libgit2/tests/online/clone.c	/^static char *_orig_http_proxy = NULL;$/;"	v	typeref:typename:char *	file:
_orig_https_proxy	extern/libgit2/tests/online/clone.c	/^static char *_orig_https_proxy = NULL;$/;"	v	typeref:typename:char *	file:
_orig_proxies_need_reset	extern/libgit2/tests/online/clone.c	/^static int _orig_proxies_need_reset = 0;$/;"	v	typeref:typename:int	file:
_packbuilder	extern/libgit2/tests/pack/packbuilder.c	/^static git_packbuilder *_packbuilder;$/;"	v	typeref:typename:git_packbuilder *	file:
_page	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		unsigned char _page;$/;"	m	class:compact_header	typeref:typename:unsigned char	file:
_parent	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xml_node _parent;$/;"	m	class:pugi::xml_attribute_iterator	typeref:typename:xml_node
_parent	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xml_node _parent;$/;"	m	class:pugi::xml_named_node_iterator	typeref:typename:xml_node
_parent	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xml_node _parent;$/;"	m	class:pugi::xml_node_iterator	typeref:typename:xml_node
_path	extern/libgit2/tests/repo/state.c	/^static git_buf _path;$/;"	v	typeref:typename:git_buf	file:
_pathspecs	extern/libgit2/tests/reset/default.c	/^static git_strarray _pathspecs;$/;"	v	typeref:typename:git_strarray	file:
_query	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		const char_t* _query;$/;"	m	struct:xpath_parser	typeref:typename:const char_t *	file:
_record_cbs	extern/libgit2/tests/online/push.c	/^static git_remote_callbacks _record_cbs = RECORD_CALLBACKS_INIT(&_record_cbs_data);$/;"	v	typeref:typename:git_remote_callbacks	file:
_record_cbs_data	extern/libgit2/tests/online/push.c	/^static record_callbacks_data _record_cbs_data = {{ 0 }};$/;"	v	typeref:typename:record_callbacks_data	file:
_refdb	extern/libgit2/src/repository.h	/^	git_refdb *_refdb;$/;"	m	struct:git_repository	typeref:typename:git_refdb *
_refspec	extern/libgit2/tests/network/remote/remotes.c	/^static const git_refspec *_refspec;$/;"	v	typeref:typename:const git_refspec *	file:
_remote	extern/libgit2/tests/network/remote/push.c	/^static git_remote *_remote;$/;"	v	typeref:typename:git_remote *	file:
_remote	extern/libgit2/tests/network/remote/remotes.c	/^static git_remote *_remote;$/;"	v	typeref:typename:git_remote *	file:
_remote	extern/libgit2/tests/online/push.c	/^static git_remote *_remote;$/;"	v	typeref:typename:git_remote *	file:
_remote_default	extern/libgit2/tests/online/push.c	/^static char *_remote_default = NULL;$/;"	v	typeref:typename:char *	file:
_remote_name	extern/libgit2/tests/network/remote/rename.c	/^static const char *_remote_name = "test";$/;"	v	typeref:typename:const char *	file:
_remote_pass	extern/libgit2/tests/online/clone.c	/^static char *_remote_pass = NULL;$/;"	v	typeref:typename:char *	file:
_remote_pass	extern/libgit2/tests/online/push.c	/^static char *_remote_pass = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_host	extern/libgit2/tests/online/clone.c	/^static char *_remote_proxy_host = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_pass	extern/libgit2/tests/online/clone.c	/^static char *_remote_proxy_pass = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_scheme	extern/libgit2/tests/online/clone.c	/^static char *_remote_proxy_scheme = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_selfsigned	extern/libgit2/tests/online/clone.c	/^static char *_remote_proxy_selfsigned = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_user	extern/libgit2/tests/online/clone.c	/^static char *_remote_proxy_user = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_fingerprint	extern/libgit2/tests/online/clone.c	/^static char *_remote_ssh_fingerprint = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_key	extern/libgit2/tests/online/push.c	/^static char *_remote_ssh_key = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_passphrase	extern/libgit2/tests/online/clone.c	/^static char *_remote_ssh_passphrase = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_passphrase	extern/libgit2/tests/online/push.c	/^static char *_remote_ssh_passphrase = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_privkey	extern/libgit2/tests/online/clone.c	/^static char *_remote_ssh_privkey = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_pubkey	extern/libgit2/tests/online/clone.c	/^static char *_remote_ssh_pubkey = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_pubkey	extern/libgit2/tests/online/push.c	/^static char *_remote_ssh_pubkey = NULL;$/;"	v	typeref:typename:char *	file:
_remote_sslnoverify	extern/libgit2/tests/online/clone.c	/^static char *_remote_sslnoverify = NULL;$/;"	v	typeref:typename:char *	file:
_remote_url	extern/libgit2/tests/online/clone.c	/^static char *_remote_url = NULL;$/;"	v	typeref:typename:char *	file:
_remote_url	extern/libgit2/tests/online/push.c	/^static char *_remote_url = NULL;$/;"	v	typeref:typename:char *	file:
_remote_user	extern/libgit2/tests/online/clone.c	/^static char *_remote_user = NULL;$/;"	v	typeref:typename:char *	file:
_remote_user	extern/libgit2/tests/online/push.c	/^static char *_remote_user = NULL;$/;"	v	typeref:typename:char *	file:
_rename_helper	extern/libgit2/tests/status/renames.c	/^static void _rename_helper($/;"	f	typeref:typename:void	file:
_render_callback	extern/libgit2/tests/generate.py	/^        def _render_callback(self, cb):$/;"	m	class:Module.Template
_replacer	extern/libgit2/tests/generate.py	/^        def _replacer(match):$/;"	f	member:Module._skip_comments	file:
_repo	extern/libgit2/tests/commit/commit.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/commit/parent.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/config/conditionals.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/diff/stats.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/graph/ahead_behind.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/graph/descendant_of.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/index/read_index.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/network/remote/delete.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/network/remote/push.c	/^static git_repository *_repo, *_dummy;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/network/remote/remotes.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/network/remote/rename.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/notes/notes.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/notes/notesref.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/object/shortid.c	/^git_repository *_repo;$/;"	v	typeref:typename:git_repository *
_repo	extern/libgit2/tests/object/tree/duplicateentries.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/odb/backend/mempack.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/odb/backend/multiple.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/odb/backend/nobackend.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/odb/backend/simple.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/odb/foreach.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/online/fetch.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/online/push.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/pack/packbuilder.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/remote/create.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/remote/list.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/repo/hashfile.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/repo/init.c	/^static git_repository *_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/repo/message.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/repo/state.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/repo/template.c	/^static git_repository *_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/reset/default.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/revwalk/basic.c	/^static git_repository *_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/revwalk/hidecb.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/revwalk/mergebase.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/revwalk/signatureparsing.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/threads/diff.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	extern/libgit2/tests/threads/iterator.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo2	extern/libgit2/tests/revwalk/mergebase.c	/^static git_repository *_repo2;$/;"	v	typeref:typename:git_repository *	file:
_result	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_parse_result* _result;$/;"	m	struct:xpath_parser	typeref:typename:xpath_parse_result *	file:
_result	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_parse_result _result;$/;"	m	class:pugi::xpath_exception	typeref:typename:xpath_parse_result
_result	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_parse_result _result;$/;"	m	class:pugi::xpath_query	typeref:typename:xpath_parse_result
_retries	extern/libgit2/tests/threads/diff.c	/^static int _retries;$/;"	v	typeref:typename:int	file:
_rettype	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		char _rettype;$/;"	m	class:xpath_ast_node	typeref:typename:char	file:
_revwalker	extern/libgit2/tests/pack/packbuilder.c	/^static git_revwalk *_revwalker;$/;"	v	typeref:typename:git_revwalk *	file:
_right	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* _right;$/;"	m	class:xpath_ast_node	typeref:typename:xpath_ast_node *	file:
_root	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_memory_block* _root;$/;"	m	struct:xpath_allocator	typeref:typename:xpath_memory_block *	file:
_root	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_memory_page* _root;$/;"	m	struct:xml_allocator	typeref:typename:xml_memory_page *	file:
_root	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xml_node_struct* _root;$/;"	m	class:pugi::xml_node	typeref:typename:xml_node_struct *
_root	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xml_node_struct* _root;$/;"	m	class:pugi::xml_text	typeref:typename:xml_node_struct *
_root_size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		size_t _root_size;$/;"	m	struct:xpath_allocator	typeref:typename:size_t	file:
_scratch	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		char_t _scratch[32];$/;"	m	struct:xpath_parser	typeref:typename:char_t[32]	file:
_sig	extern/libgit2/tests/notes/notes.c	/^static git_signature *_sig;$/;"	v	typeref:typename:git_signature *	file:
_sig	extern/libgit2/tests/notes/notesref.c	/^static git_signature *_sig;$/;"	v	typeref:typename:git_signature *	file:
_skip_comments	extern/libgit2/tests/generate.py	/^    def _skip_comments(self, text):$/;"	m	class:Module
_sm_ignore_map	extern/libgit2/src/submodule.c	/^static git_configmap _sm_ignore_map[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_sm_recurse_map	extern/libgit2/src/submodule.c	/^static git_configmap _sm_recurse_map[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_sm_update_map	extern/libgit2/src/submodule.c	/^static git_configmap _sm_update_map[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_ssh_action	extern/libgit2/src/transports/ssh.c	/^static int _ssh_action($/;"	f	typeref:typename:int	file:
_ssh_close	extern/libgit2/src/transports/ssh.c	/^static int _ssh_close(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:int	file:
_ssh_free	extern/libgit2/src/transports/ssh.c	/^static void _ssh_free(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:void	file:
_state	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_allocator _state;$/;"	m	struct:xpath_allocator_capture	typeref:typename:xpath_allocator	file:
_stats	extern/libgit2/tests/diff/stats.c	/^static git_diff_stats *_stats;$/;"	v	typeref:typename:git_diff_stats *	file:
_stats	extern/libgit2/tests/pack/packbuilder.c	/^static git_indexer_progress _stats;$/;"	v	typeref:typename:git_indexer_progress	file:
_storage	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_node _storage;$/;"	m	class:pugi::xpath_node_set	typeref:typename:xpath_node
_struct_count	extern/libgit2/tests/core/vector.c	/^static int _struct_count = 0;$/;"	v	typeref:typename:int	file:
_swap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN void xpath_variable_set::_swap(xpath_variable_set& rhs)$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN void
_tag_blob	extern/libgit2/tests/online/push.c	/^static git_oid _tag_blob;$/;"	v	typeref:typename:git_oid	file:
_tag_commit	extern/libgit2/tests/online/push.c	/^static git_oid _tag_commit;$/;"	v	typeref:typename:git_oid	file:
_tag_lightweight	extern/libgit2/tests/online/push.c	/^static git_oid _tag_lightweight;$/;"	v	typeref:typename:git_oid	file:
_tag_tag	extern/libgit2/tests/online/push.c	/^static git_oid _tag_tag;$/;"	v	typeref:typename:git_oid	file:
_tag_tree	extern/libgit2/tests/online/push.c	/^static git_oid _tag_tree;$/;"	v	typeref:typename:git_oid	file:
_target	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_allocator* _target;$/;"	m	struct:xpath_allocator_capture	typeref:typename:xpath_allocator *	file:
_target	extern/libgit2/tests/reset/default.c	/^static git_object *_target;$/;"	v	typeref:typename:git_object *	file:
_test	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		char _test;$/;"	m	class:xpath_ast_node	typeref:typename:char	file:
_tls_index	extern/libgit2/src/global.c	/^static DWORD _tls_index;$/;"	v	typeref:typename:DWORD	file:
_tls_key	extern/libgit2/src/global.c	/^static pthread_key_t _tls_key;$/;"	v	typeref:typename:pthread_key_t	file:
_tr_align	extern/libgit2/deps/zlib/trees.c	/^void ZLIB_INTERNAL _tr_align(s)$/;"	f
_tr_align	extern/libgit2/deps/zlib/zconf.h	/^#  define _tr_align /;"	d
_tr_flush_bits	extern/libgit2/deps/zlib/trees.c	/^void ZLIB_INTERNAL _tr_flush_bits(s)$/;"	f
_tr_flush_bits	extern/libgit2/deps/zlib/zconf.h	/^#  define _tr_flush_bits /;"	d
_tr_flush_block	extern/libgit2/deps/zlib/trees.c	/^void ZLIB_INTERNAL _tr_flush_block(s, buf, stored_len, last)$/;"	f
_tr_flush_block	extern/libgit2/deps/zlib/zconf.h	/^#  define _tr_flush_block /;"	d
_tr_init	extern/libgit2/deps/zlib/trees.c	/^void ZLIB_INTERNAL _tr_init(s)$/;"	f
_tr_init	extern/libgit2/deps/zlib/zconf.h	/^#  define _tr_init /;"	d
_tr_stored_block	extern/libgit2/deps/zlib/trees.c	/^void ZLIB_INTERNAL _tr_stored_block(s, buf, stored_len, last)$/;"	f
_tr_stored_block	extern/libgit2/deps/zlib/zconf.h	/^#  define _tr_stored_block /;"	d
_tr_tally	extern/libgit2/deps/zlib/trees.c	/^int ZLIB_INTERNAL _tr_tally (s, dist, lc)$/;"	f
_tr_tally	extern/libgit2/deps/zlib/zconf.h	/^#  define _tr_tally /;"	d
_tr_tally_dist	extern/libgit2/deps/zlib/deflate.h	/^# define _tr_tally_dist(/;"	d
_tr_tally_lit	extern/libgit2/deps/zlib/deflate.h	/^# define _tr_tally_lit(/;"	d
_trace_debug_close	extern/libgit2/tests/clar_libgit2_trace.c	/^#define _trace_debug_close /;"	d	file:
_trace_printf_close	extern/libgit2/tests/clar_libgit2_trace.c	/^static void _trace_printf_close(void)$/;"	f	typeref:typename:void	file:
_trailer_block	extern/libgit2/include/git2/message.h	/^  char *_trailer_block;$/;"	m	struct:__anond70699990208	typeref:typename:char *
_transport	extern/libgit2/tests/transport/register.c	/^static git_transport _transport = GIT_TRANSPORT_INIT;$/;"	v	typeref:typename:git_transport	file:
_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		char _type;$/;"	m	class:xpath_ast_node	typeref:typename:char	file:
_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_node_set::type_t _type;$/;"	m	class:xpath_node_set_raw	typeref:typename:xpath_node_set::type_t	file:
_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        type_t _type;$/;"	m	class:pugi::xpath_node_set	typeref:typename:type_t
_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_value_type _type;$/;"	m	class:pugi::xpath_variable	typeref:typename:xpath_value_type
_uses_heap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool _uses_heap;$/;"	m	class:xpath_string	typeref:typename:bool	file:
_variables	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_variable_set* _variables;$/;"	m	struct:xpath_parser	typeref:typename:xpath_variable_set *	file:
_walk	extern/libgit2/tests/revwalk/basic.c	/^static git_revwalk *_walk = NULL;$/;"	v	typeref:typename:git_revwalk *	file:
_walk	extern/libgit2/tests/revwalk/signatureparsing.c	/^static git_revwalk *_walk;$/;"	v	typeref:typename:git_revwalk *	file:
_wrap	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        mutable xml_attribute _wrap;$/;"	m	class:pugi::xml_attribute_iterator	typeref:typename:xml_attribute
_wrap	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        mutable xml_node _wrap;$/;"	m	class:pugi::xml_named_node_iterator	typeref:typename:xml_node
_wrap	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        mutable xml_node _wrap;$/;"	m	class:pugi::xml_node_iterator	typeref:typename:xml_node
a	extern/OpenXLSX/doxy/customdoxygen.css	/^a {$/;"	s
a	extern/libgit2/tests/diff/tree.c	/^static git_tree *a, *b;$/;"	v	typeref:typename:git_tree *	file:
a	extern/libgit2/tests/trace/windows/stacktrace.c	/^static void a(void)$/;"	f	typeref:typename:void	file:
a.code	extern/OpenXLSX/doxy/customdoxygen.css	/^a.code, a.code:visited {$/;"	c
a.code:visited	extern/OpenXLSX/doxy/customdoxygen.css	/^a.code, a.code:visited {$/;"	c
a.codeRef	extern/OpenXLSX/doxy/customdoxygen.css	/^a.codeRef, a.codeRef:visited {$/;"	c
a.codeRef:visited	extern/OpenXLSX/doxy/customdoxygen.css	/^a.codeRef, a.codeRef:visited {$/;"	c
a.el	extern/OpenXLSX/doxy/customdoxygen.css	/^a.el {$/;"	c
a.el	extern/OpenXLSX/doxy/customdoxygen.css	/^tt, code, kbd, samp, a.el,$/;"	c
a.elRef	extern/OpenXLSX/doxy/customdoxygen.css	/^a.elRef {$/;"	c
a.qindex	extern/OpenXLSX/doxy/customdoxygen.css	/^a.qindex, a.qindex:visited {$/;"	c
a.qindex:visited	extern/OpenXLSX/doxy/customdoxygen.css	/^a.qindex, a.qindex:visited {$/;"	c
a.qindexHL	extern/OpenXLSX/doxy/customdoxygen.css	/^a.qindexHL {$/;"	c
a:hover	extern/OpenXLSX/doxy/customdoxygen.css	/^a:hover {$/;"	s
abbreviated_size	extern/libgit2/include/git2/describe.h	/^	unsigned int abbreviated_size;$/;"	m	struct:__anoneba207f50208	typeref:typename:unsigned int
abo	function_ref.hpp	/^namespace abo {$/;"	n
abo	git_.hpp	/^namespace abo {$/;"	n
abo	newtype.hpp	/^namespace abo::nt {$/;"	n
abort_addition	extern/libgit2/tests/apply/partial.c	/^static int abort_addition($/;"	f	typeref:typename:int	file:
abort_change	extern/libgit2/tests/apply/partial.c	/^static int abort_change($/;"	f	typeref:typename:int	file:
abort_deletion	extern/libgit2/tests/apply/partial.c	/^static int abort_deletion($/;"	f	typeref:typename:int	file:
abort_diff	extern/libgit2/tests/diff/notify.c	/^static int abort_diff($/;"	f	typeref:typename:int	file:
abort_test	extern/libgit2/tests/clar.c	/^static void abort_test(void)$/;"	f	typeref:typename:void	file:
aborting_progress_cb	extern/libgit2/tests/stash/apply.c	/^int aborting_progress_cb($/;"	f	typeref:typename:int
accept	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *accept;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
accept_label	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *accept_label;$/;"	m	struct:compiler_common	typeref:struct:sljit_label *	file:
access	extern/libgit2/src/win32/posix_w32.c	/^	DWORD access;$/;"	m	struct:open_opts	typeref:typename:DWORD	file:
access	extern/libgit2/tests/clar.c	/^#		define access(/;"	d	file:
ack_pkt	extern/libgit2/src/transports/smart_pkt.c	/^static int ack_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
acquire_credentials	extern/libgit2/src/transports/winhttp.c	/^static int acquire_credentials($/;"	f	typeref:typename:int	file:
acquire_fallback_cred	extern/libgit2/src/transports/winhttp.c	/^static int acquire_fallback_cred($/;"	f	typeref:typename:int	file:
acquire_url_cred	extern/libgit2/src/transports/winhttp.c	/^static int acquire_url_cred($/;"	f	typeref:typename:int	file:
action	extern/libgit2/examples/cat-file.c	/^	int action;$/;"	m	struct:opts	typeref:typename:int	file:
action	extern/libgit2/include/git2/tree.h	/^	git_tree_update_t action;$/;"	m	struct:__anon97f705e40308	typeref:typename:git_tree_update_t
action_create_lighweight_tag	extern/libgit2/examples/tag.c	/^static void action_create_lighweight_tag(tag_state *state)$/;"	f	typeref:typename:void	file:
action_create_tag	extern/libgit2/examples/tag.c	/^static void action_create_tag(tag_state *state)$/;"	f	typeref:typename:void	file:
action_delete_tag	extern/libgit2/examples/tag.c	/^static void action_delete_tag(tag_state *state)$/;"	f	typeref:typename:void	file:
action_list_tags	extern/libgit2/examples/tag.c	/^static void action_list_tags(tag_state *state)$/;"	f	typeref:typename:void	file:
active_refspecs	extern/libgit2/src/remote.h	/^	git_vector active_refspecs;$/;"	m	struct:git_remote	typeref:typename:git_vector
active_suite	extern/libgit2/tests/clar.c	/^	const char *active_suite;$/;"	m	struct:__anonab24499b0108	typeref:typename:const char *	file:
active_test	extern/libgit2/tests/clar.c	/^	const char *active_test;$/;"	m	struct:__anonab24499b0108	typeref:typename:const char *	file:
add	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_variable* xpath_variable_set::add(const char_t* name, xpath_value_type type)$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN xpath_variable *
addOne	extern/NamedType/main.cpp	/^    auto addOne = [](StrongInt::ref si) { ++(si.get()); };$/;"	v	typeref:typename:auto
add_and_check_file	extern/libgit2/tests/index/crlf.c	/^static int add_and_check_file(void *payload, git_buf *actual_path)$/;"	f	typeref:typename:int	file:
add_and_check_mode	extern/libgit2/tests/index/filemodes.c	/^#define add_and_check_mode(/;"	d	file:
add_and_check_mode_	extern/libgit2/tests/index/filemodes.c	/^static void add_and_check_mode_($/;"	f	typeref:typename:void	file:
add_backend_internal	extern/libgit2/src/odb.c	/^static int add_backend_internal($/;"	f	typeref:typename:int	file:
add_blame_entry	extern/libgit2/src/blame_git.c	/^static void add_blame_entry(git_blame *blame, git_blame__entry *e)$/;"	f	typeref:typename:void	file:
add_blob_and_filter	extern/libgit2/tests/filter/ident.c	/^static void add_blob_and_filter($/;"	f	typeref:typename:void	file:
add_conflict	extern/libgit2/tests/checkout/index.c	/^static void add_conflict(git_index *index, const char *path)$/;"	f	typeref:typename:void	file:
add_conflict	extern/libgit2/tests/iterator/index.c	/^static void add_conflict($/;"	f	typeref:typename:void	file:
add_conflicts	extern/libgit2/tests/index/read_index.c	/^static void add_conflicts(git_index *index, const char *filename)$/;"	f	typeref:typename:void	file:
add_descendants_to_write_order	extern/libgit2/src/pack-objects.c	/^static void add_descendants_to_write_order(git_pobject **wo, size_t *endp,$/;"	f	typeref:typename:void	file:
add_entry_and_check_mode	extern/libgit2/tests/index/filemodes.c	/^#define add_entry_and_check_mode(/;"	d	file:
add_entry_and_check_mode_	extern/libgit2/tests/index/filemodes.c	/^static void add_entry_and_check_mode_($/;"	f	typeref:typename:void	file:
add_expected_oid	extern/libgit2/src/indexer.c	/^static int add_expected_oid(git_indexer *idx, const git_oid *oid)$/;"	f	typeref:typename:int	file:
add_fake_conflicts	extern/libgit2/tests/object/tree/duplicateentries.c	/^static void add_fake_conflicts(git_index *index)$/;"	f	typeref:typename:void	file:
add_family_to_write_order	extern/libgit2/src/pack-objects.c	/^static void add_family_to_write_order(git_pobject **wo, size_t *endp,$/;"	f	typeref:typename:void	file:
add_invalid_filename	extern/libgit2/tests/index/tests.c	/^static void add_invalid_filename(git_repository *repo, const char *fn)$/;"	f	typeref:typename:void	file:
add_jump	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void add_jump(struct sljit_compiler *compiler, jump_list **list, struct slji/;"	f	typeref:typename:SLJIT_INLINE void	file:
add_label_addr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void add_label_addr(compiler_common *common, sljit_uw *update_addr)$/;"	f	typeref:typename:void	file:
add_list_to_class	extern/libgit2/deps/pcre/pcre_compile.c	/^add_list_to_class(pcre_uint8 *classbits, pcre_uchar **uchardptr, int options,$/;"	f	typeref:typename:int	file:
add_name	extern/libgit2/deps/pcre/pcre_compile.c	/^add_name(compile_data *cd, const pcre_uchar *name, int length,$/;"	f	typeref:typename:void	file:
add_not_list_to_class	extern/libgit2/deps/pcre/pcre_compile.c	/^add_not_list_to_class(pcre_uint8 *classbits, pcre_uchar **uchardptr,$/;"	f	typeref:typename:int	file:
add_one_to_index	extern/libgit2/tests/ignore/status.c	/^static void add_one_to_index(const char *file)$/;"	f	typeref:typename:void	file:
add_parents_to_list	extern/libgit2/src/revwalk.c	/^static int add_parents_to_list(git_revwalk *walk, git_commit_list_node *commit, git_commit_list /;"	f	typeref:typename:int	file:
add_prefix_char	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void add_prefix_char(pcre_uchar chr, pcre_uchar *chars)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
add_push_report_pkt	extern/libgit2/src/transports/smart_protocol.c	/^static int add_push_report_pkt(git_push *push, git_pkt *pkt)$/;"	f	typeref:typename:int	file:
add_push_report_sideband_pkt	extern/libgit2/src/transports/smart_protocol.c	/^static int add_push_report_sideband_pkt(git_push *push, git_pkt_data *data_pkt, git_buf *data_pk/;"	f	typeref:typename:int	file:
add_ref	extern/libgit2/src/transports/local.c	/^static int add_ref(transport_local *t, const char *name)$/;"	f	typeref:typename:int	file:
add_ref_from_push_spec	extern/libgit2/src/transports/smart_protocol.c	/^static int add_ref_from_push_spec(git_vector *refs, push_spec *push_spec)$/;"	f	typeref:typename:int	file:
add_refspec	extern/libgit2/src/remote.c	/^static int add_refspec(git_remote *remote, const char *string, bool is_fetch)$/;"	f	typeref:typename:int	file:
add_refspec_to	extern/libgit2/src/remote.c	/^static int add_refspec_to(git_vector *vector, const char *string, bool is_fetch)$/;"	f	typeref:typename:int	file:
add_repo_as_submodule	extern/libgit2/src/index.c	/^static int add_repo_as_submodule(git_index_entry **out, git_index *index, const char *path)$/;"	f	typeref:typename:int	file:
add_revision	extern/libgit2/examples/log.c	/^static int add_revision(struct log_state *s, const char *revstr)$/;"	f	typeref:typename:int	file:
add_stub	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void add_stub(compiler_common *common, struct sljit_jump *start)$/;"	f	typeref:typename:void	file:
add_submodule_to_index	extern/libgit2/tests/submodule/status.c	/^static void add_submodule_to_index(const char *name)$/;"	f	typeref:typename:void	file:
add_submodule_with_commit	extern/libgit2/tests/submodule/lookup.c	/^static void add_submodule_with_commit(const char *name)$/;"	f	typeref:typename:void	file:
add_to_cache	extern/libgit2/src/filebuf.c	/^GIT_INLINE(void) add_to_cache(git_filebuf *file, const void *buf, size_t len)$/;"	f	typeref:typename:void
add_to_class	extern/libgit2/deps/pcre/pcre_compile.c	/^add_to_class(pcre_uint8 *classbits, pcre_uchar **uchardptr, int options,$/;"	f	typeref:typename:int	file:
add_to_known_names	extern/libgit2/src/describe.c	/^static int add_to_known_names($/;"	f	typeref:typename:int	file:
add_to_workdir	extern/libgit2/tests/attr/repo.c	/^static void add_to_workdir(const char *filename, const char *content)$/;"	f	typeref:typename:void	file:
add_to_write_order	extern/libgit2/src/pack-objects.c	/^GIT_INLINE(void) add_to_write_order(git_pobject **wo, size_t *endp,$/;"	f	typeref:typename:void
add_update	extern/libgit2/src/push.c	/^static int add_update(git_push *push, push_spec *spec)$/;"	f	typeref:typename:int	file:
addall_cancel_at	extern/libgit2/tests/index/addall.c	/^static int addall_cancel_at($/;"	f	typeref:typename:int	file:
addall_create_test_repo	extern/libgit2/tests/index/addall.c	/^static void addall_create_test_repo(bool check_every_step)$/;"	f	typeref:typename:void	file:
addall_match_prefix	extern/libgit2/tests/index/addall.c	/^static int addall_match_prefix($/;"	f	typeref:typename:int	file:
addall_match_suffix	extern/libgit2/tests/index/addall.c	/^static int addall_match_suffix($/;"	f	typeref:typename:int	file:
added	extern/libgit2/src/commit_list.h	/^			 added:1,$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned int:1
address	extern/OpenXLSX/doxy/customdoxygen.css	/^address {$/;"	s
address.footer	extern/OpenXLSX/doxy/customdoxygen.css	/^address.footer {$/;"	c
addrinfo	extern/libgit2/src/posix.h	/^struct addrinfo {$/;"	s
adjust_recurse	extern/libgit2/deps/pcre/pcre_compile.c	/^adjust_recurse(pcre_uchar *group, int adjust, BOOL utf, compile_data *cd,$/;"	f	typeref:typename:void	file:
adler	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_ulong adler;    \/* adler32 of the @library or uncompressed data *\/$/;"	m	struct:mz_stream_s	typeref:typename:mz_ulong
adler	extern/libgit2/deps/zlib/zlib.h	/^    uLong   adler;      \/* Adler-32 or CRC-32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s	typeref:typename:uLong
adler32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define adler32 /;"	d
adler32	extern/libgit2/deps/zlib/adler32.c	/^uLong ZEXPORT adler32(adler, buf, len)$/;"	f
adler32	extern/libgit2/deps/zlib/zconf.h	/^#  define adler32 /;"	d
adler32_combine	extern/libgit2/deps/zlib/adler32.c	/^uLong ZEXPORT adler32_combine(adler1, adler2, len2)$/;"	f
adler32_combine	extern/libgit2/deps/zlib/zconf.h	/^#  define adler32_combine /;"	d
adler32_combine	extern/libgit2/deps/zlib/zlib.h	/^#    define adler32_combine /;"	d
adler32_combine64	extern/libgit2/deps/zlib/zconf.h	/^#  define adler32_combine64 /;"	d
adler32_combine_	extern/libgit2/deps/zlib/adler32.c	/^local uLong adler32_combine_(adler1, adler2, len2)$/;"	f
adler32_z	extern/libgit2/deps/zlib/adler32.c	/^uLong ZEXPORT adler32_z(adler, buf, len)$/;"	f
adler32_z	extern/libgit2/deps/zlib/zconf.h	/^#  define adler32_z /;"	d
advance	extern/libgit2/src/iterator.h	/^	int (*advance)(const git_index_entry **, git_iterator *);$/;"	m	struct:__anonb487a9bd0508	typeref:typename:int (*)(const git_index_entry **,git_iterator *)
advance_delta_offset	extern/libgit2/src/indexer.c	/^static int advance_delta_offset(git_indexer *idx, git_object_t type)$/;"	f	typeref:typename:int	file:
advance_into	extern/libgit2/src/iterator.h	/^	int (*advance_into)(const git_index_entry **, git_iterator *);$/;"	m	struct:__anonb487a9bd0508	typeref:typename:int (*)(const git_index_entry **,git_iterator *)
advance_over	extern/libgit2/src/iterator.h	/^	int (*advance_over)($/;"	m	struct:__anonb487a9bd0508	typeref:typename:int (*)(const git_index_entry **,git_iterator_status_t *,git_iterator *)
advance_until	extern/libgit2/src/mailmap.c	/^static int advance_until($/;"	f	typeref:typename:int	file:
affected	extern/libgit2/tests/merge/workdir/dirty.c	/^static char *affected[][5] = {$/;"	v	typeref:typename:char * [][5]	file:
after	extern/libgit2/examples/log.c	/^	git_time_t after;$/;"	m	struct:log_options	typeref:typename:git_time_t	file:
ahead	extern/libgit2/tests/graph/ahead_behind.c	/^static size_t ahead;$/;"	v	typeref:typename:size_t	file:
ahead_behind	extern/libgit2/src/graph.c	/^static int ahead_behind(git_commit_list_node *one, git_commit_list_node *two,$/;"	f	typeref:typename:int	file:
ai_addr	extern/libgit2/src/posix.h	/^	struct sockaddr *ai_addr;$/;"	m	struct:addrinfo	typeref:struct:sockaddr *
ai_addr_in	extern/libgit2/src/posix.h	/^	struct sockaddr_in ai_addr_in;$/;"	m	struct:addrinfo	typeref:struct:sockaddr_in
ai_addrlen	extern/libgit2/src/posix.h	/^	size_t ai_addrlen;$/;"	m	struct:addrinfo	typeref:typename:size_t
ai_family	extern/libgit2/src/posix.h	/^	int ai_family;$/;"	m	struct:addrinfo	typeref:typename:int
ai_hostent	extern/libgit2/src/posix.h	/^	struct hostent *ai_hostent;$/;"	m	struct:addrinfo	typeref:struct:hostent *
ai_next	extern/libgit2/src/posix.h	/^	struct addrinfo *ai_next;$/;"	m	struct:addrinfo	typeref:struct:addrinfo *
ai_port	extern/libgit2/src/posix.h	/^	long ai_port;$/;"	m	struct:addrinfo	typeref:typename:long
ai_protocol	extern/libgit2/src/posix.h	/^	int ai_protocol;$/;"	m	struct:addrinfo	typeref:typename:int
ai_servent	extern/libgit2/src/posix.h	/^	struct servent *ai_servent;$/;"	m	struct:addrinfo	typeref:struct:servent *
ai_socktype	extern/libgit2/src/posix.h	/^	int ai_socktype;$/;"	m	struct:addrinfo	typeref:typename:int
aiterator	p.cpp	/^struct aiterator {$/;"	s	file:
algo	extern/libgit2/src/hash.h	/^	git_hash_algo_t algo;$/;"	m	struct:git_hash_ctx	typeref:typename:git_hash_algo_t
alien	extern/libgit2/tests/diff/blob.c	/^static git_blob *d, *alien;$/;"	v	typeref:typename:git_blob **	file:
alignment	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			double alignment;$/;"	m	union:xpath_memory_block::__anonfceed08a050a	typeref:typename:double	file:
all_iter	extern/libgit2/src/config.c	/^} all_iter;$/;"	t	typeref:struct:__anon2d64db840208	file:
all_iter_free	extern/libgit2/src/config.c	/^static void all_iter_free(git_config_iterator *_iter)$/;"	f	typeref:typename:void	file:
all_iter_glob_free	extern/libgit2/src/config.c	/^static void all_iter_glob_free(git_config_iterator *_iter)$/;"	f	typeref:typename:void	file:
all_iter_glob_next	extern/libgit2/src/config.c	/^static int all_iter_glob_next(git_config_entry **entry, git_config_iterator *_iter)$/;"	f	typeref:typename:int	file:
all_iter_next	extern/libgit2/src/config.c	/^static int all_iter_next(git_config_entry **entry, git_config_iterator *_iter)$/;"	f	typeref:typename:int	file:
alloc	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_allocator alloc;$/;"	m	struct:xpath_query_impl	typeref:typename:xpath_allocator	file:
alloc	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_allocator* alloc;$/;"	m	struct:xml_parser	typeref:typename:xml_allocator *	file:
alloc	extern/libgit2/src/tsort.c	/^	size_t alloc;$/;"	m	struct:tsort_store	typeref:typename:size_t	file:
alloc	extern/libgit2/src/xdiff/xpatience.c	/^	int nr, alloc;$/;"	m	struct:hashmap	typeref:typename:int	file:
alloc	extern/libgit2/src/xdiff/xprepare.c	/^	long alloc;$/;"	m	struct:s_xdlclassifier	typeref:typename:long	file:
alloc_entry	extern/libgit2/src/tree.c	/^static git_tree_entry *alloc_entry(const char *filename, size_t filename_len, const git_oid *id)$/;"	f	typeref:typename:git_tree_entry *	file:
alloc_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define alloc_func /;"	d
alloc_func	extern/libgit2/deps/zlib/zconf.h	/^#  define alloc_func /;"	d
alloc_func	extern/libgit2/deps/zlib/zlib.h	/^typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));$/;"	t
alloc_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void* alloc_node()$/;"	f	struct:xpath_parser	typeref:typename:void *	file:
alloc_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* alloc_node(ast_type_t type, xpath_ast_node* left, axis_t axis, nodetest_t test/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
alloc_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* alloc_node(ast_type_t type, xpath_ast_node* left, xpath_ast_node* right, predi/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
alloc_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* alloc_node(ast_type_t type, xpath_value_type rettype, const char_t* value)$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
alloc_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* alloc_node(ast_type_t type, xpath_value_type rettype, double value)$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
alloc_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* alloc_node(ast_type_t type, xpath_value_type rettype, xpath_ast_node* left = 0/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
alloc_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* alloc_node(ast_type_t type, xpath_value_type rettype, xpath_variable* value)$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
alloc_parents	extern/libgit2/src/commit_list.c	/^static git_commit_list_node **alloc_parents($/;"	f	typeref:typename:git_commit_list_node **	file:
alloc_ref	extern/libgit2/src/refs.c	/^static git_reference *alloc_ref(const char *name)$/;"	f	typeref:typename:git_reference *	file:
alloc_size	extern/libgit2/src/pool.c	/^static size_t alloc_size(git_pool *pool, size_t count)$/;"	f	typeref:typename:size_t	file:
alloc_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		const char_t* alloc_string(const xpath_lexer_string& value)$/;"	f	struct:xpath_parser	typeref:typename:const char_t *	file:
alloc_struct	extern/libgit2/tests/core/vector.c	/^static my_struct *alloc_struct(int value)$/;"	f	typeref:typename:my_struct *	file:
allocate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void* allocate(size_t size)$/;"	f	struct:xpath_allocator	typeref:typename:void *	file:
allocate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static allocation_function allocate;$/;"	m	struct:xml_memory_management_function_storage	typeref:typename:allocation_function	file:
allocate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<typename T> allocation_function xml_memory_management_function_storage<T>::allocate/;"	m	class:xml_memory_management_function_storage<T>	typeref:typename:allocation_function
allocate_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline xml_attribute_struct* allocate_attribute(xml_allocator& alloc) {$/;"	f	typeref:typename:PUGI__NS_END PUGI__NS_BEGIN xml_attribute_struct *
allocate_memory	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void* allocate_memory(size_t size, xml_memory_page*& out_page) {$/;"	f	struct:xml_allocator	typeref:typename:void *	file:
allocate_memory_oob	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN_NO_INLINE void* xml_allocator::allocate_memory_oob(size_t size, xml_memory_page*& o/;"	f	class:xml_allocator	typeref:typename:PUGI__FN_NO_INLINE void *
allocate_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline xml_node_struct* allocate_node(xml_allocator& alloc, xml_node_type type) {$/;"	f	typeref:typename:xml_node_struct *
allocate_object	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	f	struct:xml_allocator	typeref:typename:void *	file:
allocate_object	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void* allocate_object(size_t size, xml_memory_page*& out_page) {$/;"	f	struct:xml_allocator	typeref:typename:void *	file:
allocate_page	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_memory_page* allocate_page(size_t data_size) {$/;"	f	struct:xml_allocator	typeref:typename:xml_memory_page *	file:
allocate_read_only_data	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static sljit_uw * allocate_read_only_data(compiler_common *common, sljit_uw size)$/;"	f	typeref:typename:sljit_uw *	file:
allocate_stack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void allocate_stack(compiler_common *common, int size)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
allocate_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t* allocate_string(size_t length) {$/;"	f	struct:xml_allocator	typeref:typename:char_t *	file:
allocation_function	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    typedef void* (* allocation_function)(size_t size);$/;"	t	namespace:pugi	typeref:typename:void * (*)(size_t size)
allocations	extern/libgit2/src/pool.h	/^	git_vector allocations;$/;"	m	struct:__anon7e0b9aed0208	typeref:typename:git_vector
allocator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_allocator* allocator;$/;"	m	struct:xml_memory_page	typeref:typename:xml_allocator *	file:
allow_fetch	extern/libgit2/include/git2/submodule.h	/^	int allow_fetch;$/;"	m	struct:git_submodule_update_options	typeref:typename:int
allow_insert_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool allow_insert_attribute(xml_node_type parent) {$/;"	f	typeref:typename:PUGI__FN bool
allow_insert_child	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool allow_insert_child(xml_node_type parent, xml_node_type child) {$/;"	f	typeref:typename:PUGI__FN bool
allow_move	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool allow_move(xml_node parent, xml_node child) {$/;"	f	typeref:typename:PUGI__FN bool
allow_zero	extern/libgit2/deps/pcre/pcre_exec.c	/^#define allow_zero /;"	d	file:
alphabetSize	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^    constexpr uint8_t alphabetSize = 26;$/;"	v	namespace:OpenXLSX	typeref:typename:uint8_t
alternative_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *alternative_matchingpath;$/;"	m	struct:bracket_backtrack	typeref:struct:sljit_label *	file:
always_false	extern/OpenXLSX/tests/catch/catch.hpp	/^struct always_false : std::false_type {};$/;"	s	namespace:Catch
always_use_long_format	extern/libgit2/include/git2/describe.h	/^	int always_use_long_format;$/;"	m	struct:__anoneba207f50208	typeref:typename:int
ambiguous	extern/libgit2/src/status.c	/^	int ambiguous;$/;"	m	struct:status_file_info	typeref:typename:int	file:
analysis_from_branch	extern/libgit2/tests/merge/analysis.c	/^static void analysis_from_branch($/;"	f	typeref:typename:void	file:
ancestor	extern/libgit2/include/git2/sys/index.h	/^	char *ancestor;$/;"	m	struct:git_index_name_entry	typeref:typename:char *
ancestor	extern/libgit2/src/checkout.c	/^	const git_index_entry *ancestor;$/;"	m	struct:__anonbac5d6240308	typeref:typename:const git_index_entry *	file:
ancestor	extern/libgit2/src/merge_driver.h	/^	const git_index_entry *ancestor;$/;"	m	struct:git_merge_driver_source	typeref:typename:const git_index_entry *
ancestor	extern/libgit2/src/xdiff/xdiff.h	/^	const char *ancestor;	\/* label for orig *\/$/;"	m	struct:s_xmparam	typeref:typename:const char *
ancestor	extern/libgit2/tests/checkout/conflict.c	/^	char ancestor[64];$/;"	m	struct:checkout_name_entry	typeref:typename:char[64]	file:
ancestor	extern/libgit2/tests/merge/merge_helpers.h	/^	struct merge_index_with_status ancestor;$/;"	m	struct:merge_index_conflict_data	typeref:struct:merge_index_with_status
ancestor_entry	extern/libgit2/src/merge.h	/^	git_index_entry ancestor_entry;$/;"	m	struct:__anon41711a830508	typeref:typename:git_index_entry
ancestor_label	extern/libgit2/include/git2/checkout.h	/^	const char *ancestor_label; \/**< the name of the common ancestor side of conflicts *\/$/;"	m	struct:git_checkout_options	typeref:typename:const char *
ancestor_label	extern/libgit2/include/git2/merge.h	/^	const char *ancestor_label;$/;"	m	struct:__anon5e9a43240508	typeref:typename:const char *
ancestor_mode	extern/libgit2/tests/merge/merge_helpers.h	/^	unsigned int ancestor_mode;$/;"	m	struct:merge_reuc_entry	typeref:typename:unsigned int
ancestor_oid_str	extern/libgit2/tests/merge/merge_helpers.h	/^	char ancestor_oid_str[GIT_OID_HEXSZ+1];$/;"	m	struct:merge_reuc_entry	typeref:typename:char[]
ancestor_path	extern/libgit2/tests/merge/merge_helpers.h	/^	char ancestor_path[128];$/;"	m	struct:merge_name_entry	typeref:typename:char[128]
anchor	extern/libgit2/src/xdiff/xpatience.c	/^		unsigned anchor : 1;$/;"	m	struct:hashmap::entry	typeref:typename:unsigned:1	file:
anchors	extern/libgit2/src/xdiff/xdiff.h	/^	char **anchors;$/;"	m	struct:s_xpparam	typeref:typename:char **
anchors_nr	extern/libgit2/src/xdiff/xdiff.h	/^	size_t anchors_nr;$/;"	m	struct:s_xpparam	typeref:typename:size_t
ancur	extern/libgit2/src/xdiff/xtypes.h	/^	chanode_t *ancur;$/;"	m	struct:s_chastore	typeref:typename:chanode_t *
annotated	extern/libgit2/examples/merge.c	/^	git_annotated_commit **annotated;$/;"	m	struct:__anon29b823750108	typeref:typename:git_annotated_commit **	file:
annotated_commit_cb_data	extern/libgit2/tests/merge/workdir/setup.c	/^struct annotated_commit_cb_data {$/;"	s	file:
annotated_commit_foreach_cb	extern/libgit2/tests/merge/workdir/setup.c	/^static int annotated_commit_foreach_cb(const git_oid *oid, void *payload)$/;"	f	typeref:typename:int	file:
annotated_commit_init	extern/libgit2/src/annotated_commit.c	/^static int annotated_commit_init($/;"	f	typeref:typename:int	file:
annotated_commit_init_from_id	extern/libgit2/src/annotated_commit.c	/^static int annotated_commit_init_from_id($/;"	f	typeref:typename:int	file:
annotated_count	extern/libgit2/examples/merge.c	/^	size_t annotated_count;$/;"	m	struct:__anon29b823750108	typeref:typename:size_t	file:
annotated_object_sha	extern/libgit2/tests/notes/notes.c	/^	const char *annotated_object_sha;$/;"	m	struct:__anon4085ff9a0108	typeref:typename:const char *	file:
any	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type any(value_type result, uint32_t ch) {$/;"	f	struct:utf16_writer	typeref:typename:value_type	file:
any	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type any(value_type result, uint32_t ch) {$/;"	f	struct:utf32_writer	typeref:typename:value_type	file:
any	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type any(value_type result, uint32_t ch) {$/;"	f	struct:utf8_writer	typeref:typename:value_type	file:
any_left_hand_identifier	extern/libgit2/src/revparse.c	/^static bool any_left_hand_identifier(git_object *object, git_reference *reference, size_t identi/;"	f	typeref:typename:bool	file:
anynewline	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *anynewline;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
append	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void append(const xpath_node* begin_, const xpath_node* end_, xpath_allocator* alloc)$/;"	f	class:xpath_node_set_raw	typeref:typename:void	file:
append	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void append(const xpath_string& o, xpath_allocator* alloc)$/;"	f	class:xpath_string	typeref:typename:void	file:
append_abbreviated_oid	extern/libgit2/src/stash.c	/^static int append_abbreviated_oid(git_buf *out, const git_oid *b_commit)$/;"	f	typeref:typename:int	file:
append_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_node::append_attribute(const char_t* name_) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_attribute
append_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline void append_attribute(xml_attribute_struct* attr, xml_node_struct* node) {$/;"	f	typeref:typename:void
append_buffer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result xml_node::append_buffer(const void* contents, size_t size, unsigne/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_parse_result
append_ceiling_dir	extern/libgit2/tests/repo/discover.c	/^static void append_ceiling_dir(git_buf *ceiling_dirs, const char *path)$/;"	f	typeref:typename:void	file:
append_child	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::append_child(const char_t* name_) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
append_child	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::append_child(xml_node_type type_) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
append_commit_description	extern/libgit2/src/stash.c	/^static int append_commit_description(git_buf *out, git_commit* commit)$/;"	f	typeref:typename:int	file:
append_copy	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_node::append_copy(const xml_attribute& proto) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_attribute
append_copy	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::append_copy(const xml_node& proto) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
append_entry	extern/libgit2/src/tree.c	/^static int append_entry($/;"	f	typeref:typename:int	file:
append_move	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::append_move(const xml_node& moved) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
append_new_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN_NO_INLINE xml_attribute_struct* append_new_attribute(xml_node_struct* node, xml_all/;"	f	typeref:typename:PUGI__FN_NO_INLINE xml_attribute_struct *
append_new_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN_NO_INLINE xml_node_struct* append_new_node(xml_node_struct* node, xml_allocator& al/;"	f	typeref:typename:PUGI__FN_NO_INLINE xml_node_struct *
append_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline void append_node(xml_node_struct* child, xml_node_struct* node) {$/;"	f	typeref:typename:void
append_symref	extern/libgit2/src/transports/smart_protocol.c	/^static int append_symref(const char **out, git_vector *symrefs, const char *ptr)$/;"	f	typeref:typename:int	file:
append_to_pack	extern/libgit2/src/indexer.c	/^static int append_to_pack(git_indexer *idx, const void *data, size_t size)$/;"	f	typeref:typename:int	file:
apply	extern/libgit2/include/git2/sys/filter.h	/^	git_filter_apply_fn    apply;$/;"	m	struct:git_filter	typeref:typename:git_filter_apply_fn
apply	extern/libgit2/include/git2/sys/merge.h	/^	git_merge_driver_apply_fn    apply;$/;"	m	struct:git_merge_driver	typeref:typename:git_merge_driver_apply_fn
apply_binary	extern/libgit2/src/apply.c	/^static int apply_binary($/;"	f	typeref:typename:int	file:
apply_binary_delta	extern/libgit2/src/apply.c	/^static int apply_binary_delta($/;"	f	typeref:typename:int	file:
apply_buf	extern/libgit2/tests/apply/fromdiff.c	/^static int apply_buf($/;"	f	typeref:typename:int	file:
apply_buf	extern/libgit2/tests/apply/partial.c	/^static int apply_buf($/;"	f	typeref:typename:int	file:
apply_credentials	extern/libgit2/src/transports/http.c	/^static int apply_credentials($/;"	f	typeref:typename:int	file:
apply_credentials	extern/libgit2/src/transports/winhttp.c	/^static int apply_credentials($/;"	f	typeref:typename:int	file:
apply_default_credentials	extern/libgit2/src/transports/winhttp.c	/^static int apply_default_credentials(HINTERNET request, DWORD target, int mechanisms)$/;"	f	typeref:typename:int	file:
apply_deltas	extern/libgit2/src/apply.c	/^static int apply_deltas($/;"	f	typeref:typename:int	file:
apply_each_file	extern/libgit2/src/index.c	/^static int apply_each_file(const git_diff_delta *delta, float progress, void *payload)$/;"	f	typeref:typename:int	file:
apply_err	extern/libgit2/src/apply.c	/^static int apply_err(const char *fmt, ...)$/;"	f	typeref:typename:int	file:
apply_gitbuf	extern/libgit2/tests/apply/fromdiff.c	/^static int apply_gitbuf($/;"	f	typeref:typename:int	file:
apply_hunk	extern/libgit2/src/apply.c	/^static int apply_hunk($/;"	f	typeref:typename:int	file:
apply_hunks	extern/libgit2/src/apply.c	/^static int apply_hunks($/;"	f	typeref:typename:int	file:
apply_hunks_ctx	extern/libgit2/src/apply.c	/^} apply_hunks_ctx;$/;"	t	typeref:struct:__anonbf3de2540208	file:
apply_insteadof	extern/libgit2/src/remote.c	/^char *apply_insteadof(git_config *config, const char *url, int direction)$/;"	f	typeref:typename:char *
apply_one	extern/libgit2/src/apply.c	/^static int apply_one($/;"	f	typeref:typename:int	file:
apply_patchfile	extern/libgit2/tests/apply/fromfile.c	/^static int apply_patchfile($/;"	f	typeref:typename:int	file:
apply_predicate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void apply_predicate(xpath_node_set_raw& ns, size_t first, const xpath_stack& stack, bool once/;"	f	class:xpath_ast_node	typeref:typename:void	file:
apply_predicate_boolean	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static void apply_predicate_boolean(xpath_node_set_raw& ns, size_t first, xpath_ast_node* expr/;"	f	class:xpath_ast_node	typeref:typename:void	file:
apply_predicate_number	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static void apply_predicate_number(xpath_node_set_raw& ns, size_t first, xpath_ast_node* expr,/;"	f	class:xpath_ast_node	typeref:typename:void	file:
apply_predicate_number_const	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static void apply_predicate_number_const(xpath_node_set_raw& ns, size_t first, xpath_ast_node*/;"	f	class:xpath_ast_node	typeref:typename:void	file:
apply_predicates	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void apply_predicates(xpath_node_set_raw& ns, size_t first, const xpath_stack& stack, nodeset_/;"	f	class:xpath_ast_node	typeref:typename:void	file:
apply_splits_and_deletes	extern/libgit2/src/diff_tform.c	/^static int apply_splits_and_deletes($/;"	f	typeref:typename:int	file:
apply_url_credentials	extern/libgit2/src/transports/http.c	/^static int apply_url_credentials($/;"	f	typeref:typename:int	file:
apply_userpass_credentials	extern/libgit2/src/transports/winhttp.c	/^static int apply_userpass_credentials(HINTERNET request, DWORD target, int mechanisms, git_cred /;"	f	typeref:typename:int	file:
approxidate_alpha	extern/libgit2/src/date.c	/^static const char *approxidate_alpha(const char *date, struct tm *tm, struct tm *now, int *num, /;"	f	typeref:typename:const char *	file:
approxidate_digit	extern/libgit2/src/date.c	/^static const char *approxidate_digit(const char *date, struct tm *tm, int *num)$/;"	f	typeref:typename:const char *	file:
approxidate_str	extern/libgit2/src/date.c	/^static git_time_t approxidate_str(const char *date,$/;"	f	typeref:typename:git_time_t	file:
arcSafeRelease	extern/NamedType/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f	typeref:typename:void
arcSafeRelease	extern/NamedType/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f	typeref:typename:void
arcSafeRelease	extern/OpenXLSX/tests/catch/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f	typeref:typename:void
arcSafeRelease	extern/OpenXLSX/tests/catch/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f	typeref:typename:void
are_symlinks_supported	extern/libgit2/src/repository.c	/^static bool are_symlinks_supported(const char *wd_path)$/;"	f	typeref:typename:bool	file:
argc	extern/libgit2/examples/common.h	/^	int    argc;$/;"	m	struct:args_info	typeref:typename:int
argc	extern/libgit2/examples/remote.c	/^	int argc;$/;"	m	struct:opts	typeref:typename:int	file:
argc	extern/libgit2/examples/stash.c	/^	int argc;$/;"	m	struct:opts	typeref:typename:int	file:
args	extern/libgit2/src/commit.c	/^	va_list args;$/;"	m	struct:__anon2b8e95b70108	typeref:typename:va_list	file:
args	extern/libgit2/tests/generate.py	/^    options, args = parser.parse_args()$/;"	v
args_info	extern/libgit2/examples/common.h	/^struct args_info {$/;"	s
args_info	extern/libgit2/examples/describe.c	/^typedef struct args_info args_info;$/;"	t	typeref:struct:args_info	file:
args_info	extern/libgit2/examples/tag.c	/^typedef struct args_info args_info;$/;"	t	typeref:struct:args_info	file:
argument	extern/NamedType/named_type_impl.hpp	/^    struct argument$/;"	s	class:fluent::NamedType
argument	nt.hpp	/^  struct argument {$/;"	s	class:nt::NamedType
argv	extern/libgit2/examples/common.h	/^	char **argv;$/;"	m	struct:args_info	typeref:typename:char **
argv	extern/libgit2/examples/remote.c	/^	char **argv;$/;"	m	struct:opts	typeref:typename:char **	file:
argv	extern/libgit2/examples/stash.c	/^	char **argv;$/;"	m	struct:opts	typeref:typename:char **	file:
as_bool	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::as_bool(bool def) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
as_bool	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::as_bool(bool def) const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
as_double	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN double xml_attribute::as_double(double def) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN double
as_double	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN double xml_text::as_double(double def) const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN double
as_float	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN float xml_attribute::as_float(float def) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN float
as_float	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN float xml_text::as_float(float def) const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN float
as_int	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN int xml_attribute::as_int(int def) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN int
as_int	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN int xml_text::as_int(int def) const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN int
as_llong	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN long long xml_attribute::as_llong(long long def) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN long long
as_llong	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN long long xml_text::as_llong(long long def) const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN long long
as_path	extern/libgit2/src/diff_file.h	/^	const char *as_path;$/;"	m	struct:__anon2493e46b0208	typeref:typename:const char *
as_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const char_t* xml_attribute::as_string(const char_t* def) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN const char_t *
as_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const char_t* xml_text::as_string(const char_t* def) const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN const char_t *
as_uint	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN unsigned int xml_attribute::as_uint(unsigned int def) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN unsigned int
as_uint	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN unsigned int xml_text::as_uint(unsigned int def) const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN unsigned int
as_ullong	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN unsigned long long xml_attribute::as_ullong(unsigned long long def) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN unsigned long long
as_ullong	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN unsigned long long xml_text::as_ullong(unsigned long long def) const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN unsigned long long
as_utf8	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN std::string PUGIXML_FUNCTION as_utf8(const std::basic_string<wchar_t>& str) {$/;"	f	namespace:pugi	typeref:typename:PUGI__FN std::string PUGIXML_FUNCTION
as_utf8	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN std::string PUGIXML_FUNCTION as_utf8(const wchar_t* str) {$/;"	f	namespace:pugi	typeref:typename:PUGI__FN std::string PUGIXML_FUNCTION
as_utf8_begin	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN size_t as_utf8_begin(const wchar_t* str, size_t length) {$/;"	f	typeref:typename:PUGI__FN size_t
as_utf8_end	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void as_utf8_end(char* buffer, size_t size, const wchar_t* str, size_t length) {$/;"	f	typeref:typename:PUGI__FN void
as_utf8_impl	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN std::string as_utf8_impl(const wchar_t* str, size_t length) {$/;"	f	typeref:typename:PUGI__FN std::string
as_wide	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN std::basic_string<wchar_t> PUGIXML_FUNCTION as_wide(const char* str) {$/;"	f	namespace:pugi	typeref:typename:PUGI__FN std::basic_string<wchar_t> PUGIXML_FUNCTION
as_wide	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN std::basic_string<wchar_t> PUGIXML_FUNCTION as_wide(const std::string& str) {$/;"	f	namespace:pugi	typeref:typename:PUGI__FN std::basic_string<wchar_t> PUGIXML_FUNCTION
as_wide_impl	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN std::basic_string<wchar_t> as_wide_impl(const char* str, size_t size) {$/;"	f	typeref:typename:PUGI__FN std::basic_string<wchar_t>
asbyte	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u8 asbyte;$/;"	m	union:compare_context::__anon313b80c3040a	typeref:typename:sljit_u8	file:
asbyte	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u8 asbyte;$/;"	m	union:compare_context::__anon313b80c3050a	typeref:typename:sljit_u8	file:
asciiOffset	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^    constexpr uint8_t asciiOffset = 64;$/;"	v	namespace:OpenXLSX	typeref:typename:uint8_t
asint	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_s32 asint;$/;"	m	union:compare_context::__anon313b80c3040a	typeref:typename:sljit_s32	file:
asint	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_s32 asint;$/;"	m	union:compare_context::__anon313b80c3050a	typeref:typename:sljit_s32	file:
asize	extern/libgit2/include/git2/buffer.h	/^	size_t asize;$/;"	m	struct:__anonbea3682e0108	typeref:typename:size_t
asize	extern/libgit2/script/user_model.c	/^	size_t asize, size;$/;"	m	struct:git_buf	typeref:typename:size_t	file:
asize	extern/libgit2/src/hashsig.c	/^	int size, asize;$/;"	m	struct:__anonbb1957950108	typeref:typename:int	file:
ask	extern/libgit2/examples/common.c	/^static int ask(char **out, const char *prompt, char optional)$/;"	f	typeref:typename:int	file:
assert	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    assert_backtrack *assert;$/;"	m	union:bracket_backtrack::__anon313b80c3010a	typeref:typename:assert_backtrack *	file:
assert__submodule_exists	extern/libgit2/tests/submodule/submodule_helpers.c	/^void assert__submodule_exists($/;"	f	typeref:typename:void
assert_absent	extern/libgit2/tests/core/memmem.c	/^static void assert_absent(const char *haystack, const char *needle)$/;"	f	typeref:typename:void	file:
assert_ack_parses	extern/libgit2/tests/transports/smart/packet.c	/^static void assert_ack_parses(const char *line, const char *expected_oid, enum git_ack_status ex/;"	f	typeref:typename:void	file:
assert_all_refnames_match	extern/libgit2/tests/refs/iterator.c	/^static void assert_all_refnames_match(const char **expected, git_vector *names)$/;"	f	typeref:typename:void	file:
assert_allowed	extern/libgit2/tests/object/tree/write.c	/^#define assert_allowed(/;"	d	file:
assert_appends	extern/libgit2/tests/refs/reflog/reflog.c	/^static void assert_appends(const git_signature *committer, const git_oid *oid)$/;"	f	typeref:typename:void	file:
assert_at_end	extern/libgit2/tests/iterator/iterator_helpers.c	/^static void assert_at_end(git_iterator *i, bool verbose)$/;"	f	typeref:typename:void	file:
assert_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct assert_backtrack {$/;"	s	file:
assert_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} assert_backtrack;$/;"	t	typeref:struct:assert_backtrack	file:
assert_binary_blobs_comparison	extern/libgit2/tests/diff/blob.c	/^static void assert_binary_blobs_comparison(diff_expects *expected)$/;"	f	typeref:typename:void	file:
assert_blob_creation	extern/libgit2/tests/object/blob/write.c	/^static void assert_blob_creation(const char *path_to_file, const char *blob_from_path, blob_crea/;"	f	typeref:typename:void	file:
assert_blob_oid	extern/libgit2/tests/stash/save.c	/^static void assert_blob_oid(const char* revision, const char* expected_oid)$/;"	f	typeref:typename:void	file:
assert_branch_has_been_found	extern/libgit2/tests/refs/branches/iterator.c	/^static void assert_branch_has_been_found(struct expectations *findings, const char* expected_bra/;"	f	typeref:typename:void	file:
assert_branch_matches_name	extern/libgit2/tests/refs/branches/create.c	/^static void assert_branch_matches_name($/;"	f	typeref:typename:void	file:
assert_called_notifications	extern/libgit2/tests/diff/notify.c	/^static int assert_called_notifications($/;"	f	typeref:typename:int	file:
assert_changed_single_one_line_file	extern/libgit2/tests/diff/blob.c	/^static void assert_changed_single_one_line_file($/;"	f	typeref:typename:void	file:
assert_checked_out	extern/libgit2/tests/refs/branches/checkedout.c	/^static void assert_checked_out(git_repository *repo, const char *branch, int checked_out)$/;"	f	typeref:typename:void	file:
assert_comment_parses	extern/libgit2/tests/transports/smart/packet.c	/^static void assert_comment_parses(const char *line, const char *expected_comment)$/;"	f	typeref:typename:void	file:
assert_commit_body	extern/libgit2/tests/commit/commit.c	/^void assert_commit_body(const char *expected, const char *given)$/;"	f	typeref:typename:void
assert_commit_fails	extern/libgit2/tests/object/commit/parse.c	/^static void assert_commit_fails(const char *data, size_t datalen)$/;"	f	typeref:typename:void	file:
assert_commit_is_head	extern/libgit2/tests/object/commit/commitstagedfile.c	/^#define assert_commit_is_head(/;"	d	file:
assert_commit_is_head_	extern/libgit2/tests/object/commit/commitstagedfile.c	/^static void assert_commit_is_head_(git_commit *c, const char *file, int line)$/;"	f	typeref:typename:void	file:
assert_commit_message_contains	extern/libgit2/tests/stash/save.c	/^static void assert_commit_message_contains(const char *revision, const char *fragment)$/;"	f	typeref:typename:void	file:
assert_commit_parses	extern/libgit2/tests/object/commit/parse.c	/^static void assert_commit_parses(const char *data, size_t datalen,$/;"	f	typeref:typename:void	file:
assert_commit_summary	extern/libgit2/tests/commit/commit.c	/^void assert_commit_summary(const char *expected, const char *given)$/;"	f	typeref:typename:void
assert_commit_tree_has_n_entries	extern/libgit2/tests/object/commit/commitstagedfile.c	/^static void assert_commit_tree_has_n_entries(git_commit *c, int count)$/;"	f	typeref:typename:void	file:
assert_common_dirlen	extern/libgit2/tests/core/path.c	/^#define assert_common_dirlen(/;"	d	file:
assert_condition_includes	extern/libgit2/tests/config/conditionals.c	/^static void assert_condition_includes(const char *keyword, const char *path, bool expected)$/;"	f	typeref:typename:void	file:
assert_config_contains	extern/libgit2/tests/config/memory.c	/^static void assert_config_contains(git_config_backend *backend,$/;"	f	typeref:typename:void	file:
assert_config_contains_all	extern/libgit2/tests/config/memory.c	/^static void assert_config_contains_all(git_config_backend *backend,$/;"	f	typeref:typename:void	file:
assert_config_entry_existence	extern/libgit2/tests/config/config_helpers.c	/^void assert_config_entry_existence($/;"	f	typeref:typename:void
assert_config_entry_on_init	extern/libgit2/tests/repo/init.c	/^static void assert_config_entry_on_init($/;"	f	typeref:typename:void	file:
assert_config_entry_on_init_bytype	extern/libgit2/tests/repo/init.c	/^static void assert_config_entry_on_init_bytype($/;"	f	typeref:typename:void	file:
assert_config_entry_value	extern/libgit2/tests/config/config_helpers.c	/^void assert_config_entry_value($/;"	f	typeref:typename:void
assert_config_value	extern/libgit2/tests/config/stress.c	/^void assert_config_value(git_config *config, const char *key, const char *value)$/;"	f	typeref:typename:void
assert_conflict	extern/libgit2/tests/checkout/tree.c	/^void assert_conflict($/;"	f	typeref:typename:void
assert_content_in_index	extern/libgit2/tests/reset/default.c	/^static void assert_content_in_index($/;"	f	typeref:typename:void	file:
assert_correct_reflog	extern/libgit2/tests/clone/nonetwork.c	/^static void assert_correct_reflog(const char *name)$/;"	f	typeref:typename:void	file:
assert_data_pkt_parses	extern/libgit2/tests/transports/smart/packet.c	/^static void assert_data_pkt_parses(const char *line, const char *expected_data, size_t expected_/;"	f	typeref:typename:void	file:
assert_default_branch	extern/libgit2/tests/network/remote/defaultbranch.c	/^static void assert_default_branch(const char *should)$/;"	f	typeref:typename:void	file:
assert_delta_binary	extern/libgit2/tests/diff/workdir.c	/^static void assert_delta_binary(git_diff *diff, size_t idx, int is_binary)$/;"	f	typeref:typename:void	file:
assert_depth	extern/libgit2/deps/pcre/pcre_internal.h	/^  int  assert_depth;                \/* Depth of nested assertions *\/$/;"	m	struct:compile_data	typeref:typename:int
assert_describe	extern/libgit2/tests/describe/describe_helpers.c	/^void assert_describe($/;"	f	typeref:typename:void
assert_describe_workdir	extern/libgit2/tests/describe/describe_helpers.c	/^void assert_describe_workdir($/;"	f	typeref:typename:void
assert_dir_exists	extern/libgit2/tests/checkout/typechange.c	/^static void assert_dir_exists(const char *path)$/;"	f	typeref:typename:void	file:
assert_email_match	extern/libgit2/tests/diff/format_email.c	/^static void assert_email_match($/;"	f	typeref:typename:void	file:
assert_error_parses	extern/libgit2/tests/transports/smart/packet.c	/^static void assert_error_parses(const char *line, const char *expected_error, size_t expected_le/;"	f	typeref:typename:void	file:
assert_examples	extern/libgit2/tests/attr/file.c	/^static void assert_examples(git_attr_file *file)$/;"	f	typeref:typename:void	file:
assert_file_exists	extern/libgit2/tests/checkout/typechange.c	/^static void assert_file_exists(const char *path)$/;"	f	typeref:typename:void	file:
assert_flush_parses	extern/libgit2/tests/transports/smart/packet.c	/^static void assert_flush_parses(const char *line)$/;"	f	typeref:typename:void	file:
assert_found	extern/libgit2/tests/core/memmem.c	/^static void assert_found(const char *haystack, const char *needle, size_t expected_pos)$/;"	f	typeref:typename:void	file:
assert_found_objects	extern/libgit2/tests/odb/mixed.c	/^static void assert_found_objects(git_odb_expand_id *ids)$/;"	f	typeref:typename:void	file:
assert_hard_link	extern/libgit2/tests/core/copy.c	/^void assert_hard_link(const char *path)$/;"	f	typeref:typename:void
assert_has_reflog	extern/libgit2/tests/refs/reflog/reflog.c	/^static void assert_has_reflog(bool expected_result, const char *name)$/;"	f	typeref:typename:void	file:
assert_head_is_correctly_detached	extern/libgit2/tests/repo/head.c	/^static void assert_head_is_correctly_detached(void)$/;"	f	typeref:typename:void	file:
assert_hooks_match	extern/libgit2/tests/repo/template.c	/^static void assert_hooks_match($/;"	f	typeref:typename:void	file:
assert_identical_blobs_comparison	extern/libgit2/tests/diff/blob.c	/^static void assert_identical_blobs_comparison(diff_expects *expected)$/;"	f	typeref:typename:void	file:
assert_ignore_case	extern/libgit2/tests/status/worktree.c	/^static void assert_ignore_case($/;"	f	typeref:typename:void	file:
assert_ignore_change	extern/libgit2/tests/submodule/modify.c	/^void assert_ignore_change(git_submodule_ignore_t ignore)$/;"	f	typeref:typename:void
assert_ignored	extern/libgit2/tests/ignore/status.c	/^#define assert_ignored(/;"	d	file:
assert_ignored_	extern/libgit2/tests/ignore/status.c	/^static void assert_ignored_($/;"	f	typeref:typename:void	file:
assert_invalid_config_key_name	extern/libgit2/tests/config/validkeyname.c	/^static void assert_invalid_config_key_name(const char *name)$/;"	f	typeref:typename:void	file:
assert_invalid_config_section_name	extern/libgit2/tests/config/rename.c	/^static void assert_invalid_config_section_name($/;"	f	typeref:typename:void	file:
assert_invalid_rtransform	extern/libgit2/tests/network/refspecs.c	/^static void assert_invalid_rtransform(const char *refspec, const char *name)$/;"	f	typeref:typename:void	file:
assert_invalid_single_spec	extern/libgit2/tests/refs/revparse.c	/^static void assert_invalid_single_spec(const char *invalid_spec)$/;"	f	typeref:typename:void	file:
assert_invalid_transform	extern/libgit2/tests/network/refspecs.c	/^static void assert_invalid_transform(const char *refspec, const char *name)$/;"	f	typeref:typename:void	file:
assert_is_branch	extern/libgit2/tests/refs/read.c	/^static void assert_is_branch(const char *name, bool expected_branchness)$/;"	f	typeref:typename:void	file:
assert_is_ignored	extern/libgit2/tests/ignore/path.c	/^#define assert_is_ignored(/;"	d	file:
assert_is_ignored	extern/libgit2/tests/ignore/status.c	/^#define assert_is_ignored(/;"	d	file:
assert_is_ignored_	extern/libgit2/tests/ignore/path.c	/^static void assert_is_ignored_($/;"	f	typeref:typename:void	file:
assert_is_note	extern/libgit2/tests/refs/read.c	/^static void assert_is_note(const char *name, bool expected_noteness)$/;"	f	typeref:typename:void	file:
assert_is_tag	extern/libgit2/tests/refs/read.c	/^static void assert_is_tag(const char *name, bool expected_tagness)$/;"	f	typeref:typename:void	file:
assert_l32_fails	extern/libgit2/tests/core/strtol.c	/^static void assert_l32_fails(const char *string, int base)$/;"	f	typeref:typename:void	file:
assert_l32_parses	extern/libgit2/tests/core/strtol.c	/^static void assert_l32_parses(const char *string, int32_t expected, int base)$/;"	f	typeref:typename:void	file:
assert_l64_fails	extern/libgit2/tests/core/strtol.c	/^static void assert_l64_fails(const char *string, int base)$/;"	f	typeref:typename:void	file:
assert_l64_parses	extern/libgit2/tests/core/strtol.c	/^static void assert_l64_parses(const char *string, int64_t expected, int base)$/;"	f	typeref:typename:void	file:
assert_master_for_merge	extern/libgit2/tests/fetchhead/nonetwork.c	/^static int assert_master_for_merge(const char *ref, const char *url, const git_oid *id, unsigned/;"	f	typeref:typename:int	file:
assert_matches	extern/libgit2/tests/core/wildmatch.c	/^#define assert_matches(/;"	d	file:
assert_matches_	extern/libgit2/tests/core/wildmatch.c	/^static void assert_matches_(const char *string, const char *pattern,$/;"	f	typeref:typename:void	file:
assert_merge_and_or_remote_key_missing	extern/libgit2/tests/refs/branches/upstream.c	/^static void assert_merge_and_or_remote_key_missing(git_repository *repository, const git_commit /;"	f	typeref:typename:void	file:
assert_mergebase_many	extern/libgit2/tests/revwalk/mergebase.c	/^static void assert_mergebase_many(const char *expected_sha, int count, ...)$/;"	f	typeref:typename:void	file:
assert_mergebase_octopus	extern/libgit2/tests/revwalk/mergebase.c	/^static void assert_mergebase_octopus(const char *expected_sha, int count, ...)$/;"	f	typeref:typename:void	file:
assert_message_prettifying	extern/libgit2/tests/object/message.c	/^static void assert_message_prettifying(char *expected_output, char *input, int strip_comments)$/;"	f	typeref:typename:void	file:
assert_mode_seems_okay	extern/libgit2/tests/repo/template.c	/^static void assert_mode_seems_okay($/;"	f	typeref:typename:void	file:
assert_nak_parses	extern/libgit2/tests/transports/smart/packet.c	/^static void assert_nak_parses(const char *line)$/;"	f	typeref:typename:void	file:
assert_name_and_email	extern/libgit2/tests/commit/signature.c	/^static void assert_name_and_email($/;"	f	typeref:typename:void	file:
assert_name_is	extern/libgit2/tests/checkout/icase.c	/^static void assert_name_is(const char *expected)$/;"	f	typeref:typename:void	file:
assert_name_too_long	extern/libgit2/tests/win32/longpath.c	/^void assert_name_too_long(void)$/;"	f	typeref:typename:void
assert_named_chunked_blob	extern/libgit2/tests/object/blob/fromstream.c	/^static void assert_named_chunked_blob(const char *expected_sha, const char *fake_name)$/;"	f	typeref:typename:void	file:
assert_needs_str_ptr_saving	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE BOOL assert_needs_str_ptr_saving(pcre_uchar *cc)$/;"	f	typeref:typename:SLJIT_INLINE BOOL	file:
assert_ng_parses	extern/libgit2/tests/transports/smart/packet.c	/^static void assert_ng_parses(const char *line, const char *expected_ref, const char *expected_ms/;"	f	typeref:typename:void	file:
assert_no_reflog_update	extern/libgit2/tests/refs/reflog/reflog.c	/^static void assert_no_reflog_update(void)$/;"	f	typeref:typename:void	file:
assert_note_equal	extern/libgit2/tests/notes/notes.c	/^static void assert_note_equal(git_note *note, char *message, git_oid *note_oid) {$/;"	f	typeref:typename:void	file:
assert_notes_seen	extern/libgit2/tests/notes/notes.c	/^void assert_notes_seen(struct note_create_payload payload[], size_t n)$/;"	f	typeref:typename:void
assert_notfound_objects	extern/libgit2/tests/odb/mixed.c	/^static void assert_notfound_objects(git_odb_expand_id *ids)$/;"	f	typeref:typename:void	file:
assert_nth_gen_parent	extern/libgit2/tests/commit/parent.c	/^static void assert_nth_gen_parent(unsigned int gen, const char *expected_oid)$/;"	f	typeref:typename:void	file:
assert_object_contains	extern/libgit2/tests/odb/backend/simple.c	/^static void assert_object_contains(git_odb_object *obj, const char *expected)$/;"	f	typeref:typename:void	file:
assert_object_oid	extern/libgit2/tests/stash/save.c	/^static void assert_object_oid(const char* revision, const char* expected_oid, git_object_t type)$/;"	f	typeref:typename:void	file:
assert_ok_parses	extern/libgit2/tests/transports/smart/packet.c	/^static void assert_ok_parses(const char *line, const char *expected_ref)$/;"	f	typeref:typename:void	file:
assert_on_branch	extern/libgit2/tests/checkout/checkout_helpers.c	/^void assert_on_branch(git_repository *repo, const char *branch)$/;"	f	typeref:typename:void
assert_one_modified	extern/libgit2/tests/diff/blob.c	/^static void assert_one_modified($/;"	f	typeref:typename:void	file:
assert_one_modified_with_lines	extern/libgit2/tests/diff/blob.c	/^static void assert_one_modified_with_lines(diff_expects *expected, int lines)$/;"	f	typeref:typename:void	file:
assert_patch_matches_blobs	extern/libgit2/tests/diff/blob.c	/^static void assert_patch_matches_blobs($/;"	f	typeref:typename:void	file:
assert_peel	extern/libgit2/tests/object/peel.c	/^static void assert_peel($/;"	f	typeref:typename:void	file:
assert_peel	extern/libgit2/tests/refs/peel.c	/^static void assert_peel($/;"	f	typeref:typename:void	file:
assert_peel_error	extern/libgit2/tests/object/peel.c	/^static void assert_peel_error(int error, const char *sha, git_object_t requested_type)$/;"	f	typeref:typename:void	file:
assert_peel_error	extern/libgit2/tests/refs/peel.c	/^static void assert_peel_error(int error, const char *ref_name, git_object_t requested_type)$/;"	f	typeref:typename:void	file:
assert_peel_generic	extern/libgit2/tests/refs/peel.c	/^static void assert_peel_generic($/;"	f	typeref:typename:void	file:
assert_pkt_fails	extern/libgit2/tests/transports/smart/packet.c	/^static void assert_pkt_fails(const char *line)$/;"	f	typeref:typename:void	file:
assert_proper_normalization	extern/libgit2/tests/attr/repo.c	/^static void assert_proper_normalization(git_index *index, const char *filename, const char *expe/;"	f	typeref:typename:void	file:
assert_recurse_change	extern/libgit2/tests/submodule/modify.c	/^void assert_recurse_change(git_submodule_recurse_t recurse)$/;"	f	typeref:typename:void
assert_ref_exists	extern/libgit2/tests/network/fetchlocal.c	/^void assert_ref_exists(git_repository *repo, const char *name)$/;"	f	typeref:typename:void
assert_ref_parses	extern/libgit2/tests/transports/smart/packet.c	/^#define assert_ref_parses(/;"	d	file:
assert_ref_parses_	extern/libgit2/tests/transports/smart/packet.c	/^static void assert_ref_parses_(const char *line, size_t linelen, const char *expected_oid,$/;"	f	typeref:typename:void	file:
assert_refspec	extern/libgit2/tests/network/refspecs.c	/^static void assert_refspec(unsigned int direction, const char *input, bool is_expected_to_be_val/;"	f	typeref:typename:void	file:
assert_repo_state	extern/libgit2/tests/repo/state.c	/^static void assert_repo_state(git_repository_state_t state)$/;"	f	typeref:typename:void	file:
assert_reset_soft	extern/libgit2/tests/reset/soft.c	/^static void assert_reset_soft(bool should_be_detached)$/;"	f	typeref:typename:void	file:
assert_resolve_relative	extern/libgit2/tests/core/path.c	/^static void assert_resolve_relative($/;"	f	typeref:typename:void	file:
assert_retrieval	extern/libgit2/tests/refs/branches/iterator.c	/^static void assert_retrieval(unsigned int flags, unsigned int expected_count)$/;"	f	typeref:typename:void	file:
assert_retrieval	extern/libgit2/tests/refs/foreachglob.c	/^static void assert_retrieval(const char *glob, int expected_count)$/;"	f	typeref:typename:void	file:
assert_shorthand	extern/libgit2/tests/refs/shorthand.c	/^void assert_shorthand(git_repository *repo, const char *refname, const char *shorthand)$/;"	f	typeref:typename:void
assert_show	extern/libgit2/tests/status/worktree.c	/^void assert_show($/;"	f	typeref:typename:void
assert_sideband_progress_parses	extern/libgit2/tests/transports/smart/packet.c	/^static void assert_sideband_progress_parses(const char *line, const char *expected_data, size_t /;"	f	typeref:typename:void	file:
assert_signature	extern/libgit2/tests/refs/reflog/reflog.c	/^static void assert_signature(const git_signature *expected, const git_signature *actual)$/;"	f	typeref:typename:void	file:
assert_sm_valid	extern/libgit2/tests/submodule/open.c	/^static void assert_sm_valid(git_repository *parent, git_repository *child, const char *sm_name)$/;"	f	typeref:typename:void	file:
assert_sorted	extern/libgit2/tests/core/qsort.c	/^#define assert_sorted(/;"	d	file:
assert_status	extern/libgit2/tests/stash/stash_helpers.c	/^void assert_status($/;"	f	typeref:typename:void
assert_status_entrycount	extern/libgit2/tests/checkout/tree.c	/^static void assert_status_entrycount(git_repository *repo, size_t count)$/;"	f	typeref:typename:void	file:
assert_submodule_exists	extern/libgit2/tests/submodule/submodule_helpers.h	/^#define assert_submodule_exists(/;"	d
assert_submodule_url	extern/libgit2/tests/submodule/add.c	/^static void assert_submodule_url(const char* name, const char *url)$/;"	f	typeref:typename:void	file:
assert_submodule_url_is_synced	extern/libgit2/tests/submodule/modify.c	/^static void assert_submodule_url_is_synced($/;"	f	typeref:typename:void	file:
assert_tag_fails	extern/libgit2/tests/object/tag/parse.c	/^static void assert_tag_fails(const char *data, size_t datalen)$/;"	f	typeref:typename:void	file:
assert_tag_parses	extern/libgit2/tests/object/tag/parse.c	/^static void assert_tag_parses(const char *data, size_t datalen,$/;"	f	typeref:typename:void	file:
assert_trailers	extern/libgit2/tests/message/trailer.c	/^static void assert_trailers(const char *message, git_message_trailer *trailers)$/;"	f	typeref:typename:void	file:
assert_tree_fails	extern/libgit2/tests/object/tree/parse.c	/^static void assert_tree_fails(const char *data, size_t datalen)$/;"	f	typeref:typename:void	file:
assert_tree_from_path	extern/libgit2/tests/object/tree/frompath.c	/^static void assert_tree_from_path($/;"	f	typeref:typename:void	file:
assert_tree_parses	extern/libgit2/tests/object/tree/parse.c	/^static void assert_tree_parses(const char *data, size_t datalen,$/;"	f	typeref:typename:void	file:
assert_unescape	extern/libgit2/tests/core/buffer.c	/^static void assert_unescape(char *expected, char *to_unescape) {$/;"	f	typeref:typename:void	file:
assert_unpack_parses	extern/libgit2/tests/transports/smart/packet.c	/^static void assert_unpack_parses(const char *line, bool ok)$/;"	f	typeref:typename:void	file:
assert_update_change	extern/libgit2/tests/submodule/modify.c	/^void assert_update_change(git_submodule_update_t update)$/;"	f	typeref:typename:void
assert_valid_transform	extern/libgit2/tests/network/refspecs.c	/^static void assert_valid_transform(const char *refspec, const char *name, const char *result)$/;"	f	typeref:typename:void	file:
assert_vector	extern/libgit2/tests/core/vector.c	/^static void assert_vector(git_vector *x, void *expected[], size_t len)$/;"	f	typeref:typename:void	file:
assert_workdir_matches_tree	extern/libgit2/tests/checkout/typechange.c	/^static void assert_workdir_matches_tree($/;"	f	typeref:typename:void	file:
assert_worktree_valid	extern/libgit2/tests/worktree/open.c	/^static void assert_worktree_valid(git_repository *wt, const char *parentdir, const char *wtdir)$/;"	f	typeref:typename:void	file:
assert_zlib_equal	extern/libgit2/tests/core/zstream.c	/^#define assert_zlib_equal(/;"	d	file:
assert_zlib_equal_	extern/libgit2/tests/core/zstream.c	/^static void assert_zlib_equal_($/;"	f	typeref:typename:void	file:
assertionEnded	extern/OpenXLSX/tests/catch/catch_reporter_automake.hpp	/^        bool assertionEnded( AssertionStats const& \/*_assertionStats*\/ ) override { return tru/;"	f	struct:Catch::AutomakeReporter	typeref:typename:bool
assertionEnded	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^        bool assertionEnded( AssertionStats const& _assertionStats ) override {$/;"	f	struct:Catch::TAPReporter	typeref:typename:bool
assertionEnded	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        bool assertionEnded( AssertionStats const& assertionStats ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:bool
assertionStarting	extern/OpenXLSX/tests/catch/catch_reporter_automake.hpp	/^        void assertionStarting( AssertionInfo const& ) override {}$/;"	f	struct:Catch::AutomakeReporter	typeref:typename:void
assertionStarting	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^        void assertionStarting( AssertionInfo const& ) override {}$/;"	f	struct:Catch::TAPReporter	typeref:typename:void
assertionStarting	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        void assertionStarting( AssertionInfo const& ) override {}$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
assigns	extern/libgit2/src/attr_file.h	/^	git_vector assigns;		\/* vector of <git_attr_assignment*> *\/$/;"	m	struct:__anon32d629ad0308	typeref:typename:git_vector
ast_filter	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_filter,						\/\/ select * from left where right$/;"	e	enum:ast_type_t	file:
ast_func_boolean	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_boolean,				\/\/ boolean(left)$/;"	e	enum:ast_type_t	file:
ast_func_ceiling	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_ceiling,				\/\/ ceiling(left)$/;"	e	enum:ast_type_t	file:
ast_func_concat	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_concat,				\/\/ concat(left, right, siblings)$/;"	e	enum:ast_type_t	file:
ast_func_contains	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_contains,				\/\/ contains(left, right)$/;"	e	enum:ast_type_t	file:
ast_func_count	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_count,					\/\/ count(left)$/;"	e	enum:ast_type_t	file:
ast_func_false	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_false,					\/\/ false()$/;"	e	enum:ast_type_t	file:
ast_func_floor	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_floor,					\/\/ floor(left)$/;"	e	enum:ast_type_t	file:
ast_func_id	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_id,					\/\/ id(left)$/;"	e	enum:ast_type_t	file:
ast_func_lang	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_lang,					\/\/ lang(left)$/;"	e	enum:ast_type_t	file:
ast_func_last	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_last,					\/\/ last()$/;"	e	enum:ast_type_t	file:
ast_func_local_name_0	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_local_name_0,			\/\/ local-name()$/;"	e	enum:ast_type_t	file:
ast_func_local_name_1	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_local_name_1,			\/\/ local-name(left)$/;"	e	enum:ast_type_t	file:
ast_func_name_0	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_name_0,				\/\/ name()$/;"	e	enum:ast_type_t	file:
ast_func_name_1	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_name_1,				\/\/ name(left)$/;"	e	enum:ast_type_t	file:
ast_func_namespace_uri_0	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_namespace_uri_0,		\/\/ namespace-uri()$/;"	e	enum:ast_type_t	file:
ast_func_namespace_uri_1	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_namespace_uri_1,		\/\/ namespace-uri(left)$/;"	e	enum:ast_type_t	file:
ast_func_normalize_space_0	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_normalize_space_0,		\/\/ normalize-space()$/;"	e	enum:ast_type_t	file:
ast_func_normalize_space_1	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_normalize_space_1,		\/\/ normalize-space(left)$/;"	e	enum:ast_type_t	file:
ast_func_not	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_not,					\/\/ not(left)$/;"	e	enum:ast_type_t	file:
ast_func_number_0	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_number_0,				\/\/ number()$/;"	e	enum:ast_type_t	file:
ast_func_number_1	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_number_1,				\/\/ number(left)$/;"	e	enum:ast_type_t	file:
ast_func_position	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_position,				\/\/ position()$/;"	e	enum:ast_type_t	file:
ast_func_round	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_round,					\/\/ round(left)$/;"	e	enum:ast_type_t	file:
ast_func_starts_with	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_starts_with,			\/\/ starts_with(left, right)$/;"	e	enum:ast_type_t	file:
ast_func_string_0	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_string_0,				\/\/ string()$/;"	e	enum:ast_type_t	file:
ast_func_string_1	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_string_1,				\/\/ string(left)$/;"	e	enum:ast_type_t	file:
ast_func_string_length_0	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_string_length_0,		\/\/ string-length()$/;"	e	enum:ast_type_t	file:
ast_func_string_length_1	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_string_length_1,		\/\/ string-length(left)$/;"	e	enum:ast_type_t	file:
ast_func_substring_2	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_substring_2,			\/\/ substring(left, right)$/;"	e	enum:ast_type_t	file:
ast_func_substring_3	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_substring_3,			\/\/ substring(left, right, third)$/;"	e	enum:ast_type_t	file:
ast_func_substring_after	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_substring_after,		\/\/ substring-after(left, right)$/;"	e	enum:ast_type_t	file:
ast_func_substring_before	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_substring_before,		\/\/ substring-before(left, right)$/;"	e	enum:ast_type_t	file:
ast_func_sum	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_sum,					\/\/ sum(left)$/;"	e	enum:ast_type_t	file:
ast_func_translate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_translate,				\/\/ translate(left, right, third)$/;"	e	enum:ast_type_t	file:
ast_func_true	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_func_true,					\/\/ true()$/;"	e	enum:ast_type_t	file:
ast_number_constant	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_number_constant,			\/\/ number constant$/;"	e	enum:ast_type_t	file:
ast_op_add	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_add,						\/\/ left + right$/;"	e	enum:ast_type_t	file:
ast_op_and	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_and,						\/\/ left and right$/;"	e	enum:ast_type_t	file:
ast_op_divide	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_divide,					\/\/ left \/ right$/;"	e	enum:ast_type_t	file:
ast_op_equal	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_equal,					\/\/ left = right$/;"	e	enum:ast_type_t	file:
ast_op_greater	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_greater,					\/\/ left > right$/;"	e	enum:ast_type_t	file:
ast_op_greater_or_equal	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_greater_or_equal,		\/\/ left >= right$/;"	e	enum:ast_type_t	file:
ast_op_less	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_less,					\/\/ left < right$/;"	e	enum:ast_type_t	file:
ast_op_less_or_equal	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_less_or_equal,			\/\/ left <= right$/;"	e	enum:ast_type_t	file:
ast_op_mod	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_mod,						\/\/ left % right$/;"	e	enum:ast_type_t	file:
ast_op_multiply	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_multiply,				\/\/ left * right$/;"	e	enum:ast_type_t	file:
ast_op_negate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_negate,					\/\/ left - right$/;"	e	enum:ast_type_t	file:
ast_op_not_equal	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_not_equal,				\/\/ left != right$/;"	e	enum:ast_type_t	file:
ast_op_or	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_or,						\/\/ left or right$/;"	e	enum:ast_type_t	file:
ast_op_subtract	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_subtract,				\/\/ left - right$/;"	e	enum:ast_type_t	file:
ast_op_union	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_op_union,					\/\/ left | right$/;"	e	enum:ast_type_t	file:
ast_opt_compare_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_opt_compare_attribute		\/\/ @name = 'string'$/;"	e	enum:ast_type_t	file:
ast_opt_translate_table	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_opt_translate_table,		\/\/ translate(left, right, third) where right\/third are constants$/;"	e	enum:ast_type_t	file:
ast_predicate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_predicate,					\/\/ apply predicate to set; next points to next predicate$/;"	e	enum:ast_type_t	file:
ast_step	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_step,						\/\/ process set left with step$/;"	e	enum:ast_type_t	file:
ast_step_root	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_step_root,					\/\/ select root node$/;"	e	enum:ast_type_t	file:
ast_string_constant	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_string_constant,			\/\/ string constant$/;"	e	enum:ast_type_t	file:
ast_type_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	enum ast_type_t$/;"	g	file:
ast_unknown	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_unknown,$/;"	e	enum:ast_type_t	file:
ast_variable	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		ast_variable,					\/\/ variable$/;"	e	enum:ast_type_t	file:
asttype	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			ast_type_t asttype;$/;"	m	struct:xpath_parser::binary_op_t	typeref:typename:ast_type_t	file:
asuchars	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u16 asuchars[2];$/;"	m	union:compare_context::__anon313b80c3040a	typeref:typename:sljit_u16[2]	file:
asuchars	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u16 asuchars[2];$/;"	m	union:compare_context::__anon313b80c3050a	typeref:typename:sljit_u16[2]	file:
asuchars	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u32 asuchars[1];$/;"	m	union:compare_context::__anon313b80c3040a	typeref:typename:sljit_u32[1]	file:
asuchars	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u32 asuchars[1];$/;"	m	union:compare_context::__anon313b80c3050a	typeref:typename:sljit_u32[1]	file:
asuchars	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u8 asuchars[4];$/;"	m	union:compare_context::__anon313b80c3040a	typeref:typename:sljit_u8[4]	file:
asuchars	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u8 asuchars[4];$/;"	m	union:compare_context::__anon313b80c3050a	typeref:typename:sljit_u8[4]	file:
asushort	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u16 asushort;$/;"	m	union:compare_context::__anon313b80c3040a	typeref:typename:sljit_u16	file:
asushort	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u16 asushort;$/;"	m	union:compare_context::__anon313b80c3050a	typeref:typename:sljit_u16	file:
at_least_one_cb	extern/libgit2/src/repository.c	/^static int at_least_one_cb(const char *refname, void *payload)$/;"	f	typeref:typename:int	file:
attr	extern/libgit2/src/tree.h	/^	uint16_t attr;$/;"	m	struct:git_tree_entry	typeref:typename:uint16_t
attr	extern/libgit2/tests/attr/attr_expect.h	/^	const char *attr;$/;"	m	struct:attr_expected	typeref:typename:const char *
attr	extern/libgit2/tests/object/tree/parse.c	/^	uint16_t attr;$/;"	m	struct:__anonc4c32e390108	typeref:typename:uint16_t	file:
attr	extern/libgit2/tests/object/tree/write.c	/^		unsigned int attr;$/;"	m	struct:test_object_tree_write__sorted_subtrees::__anon06a03a090108	typeref:typename:unsigned int	file:
attr	extern/libgit2/tests/object/tree/write.c	/^	unsigned int attr;$/;"	m	struct:__anon06a03a090208	typeref:typename:unsigned int	file:
attr_action	extern/libgit2/src/crlf.c	/^	int attr_action; \/* the .gitattributes setting *\/$/;"	m	struct:crlf_attrs	typeref:typename:int	file:
attr_cache__free	extern/libgit2/src/attrcache.c	/^static void attr_cache__free(git_attr_cache *cache)$/;"	f	typeref:typename:void	file:
attr_cache__lookup_path	extern/libgit2/src/attrcache.c	/^static int attr_cache__lookup_path($/;"	f	typeref:typename:int	file:
attr_cache_lock	extern/libgit2/src/attrcache.c	/^GIT_INLINE(int) attr_cache_lock(git_attr_cache *cache)$/;"	f	typeref:typename:int
attr_cache_lookup	extern/libgit2/src/attrcache.c	/^static int attr_cache_lookup($/;"	f	typeref:typename:int	file:
attr_cache_lookup_entry	extern/libgit2/src/attrcache.c	/^GIT_INLINE(git_attr_file_entry *) attr_cache_lookup_entry($/;"	f	typeref:typename:git_attr_file_entry *
attr_cache_make_entry	extern/libgit2/src/attrcache.c	/^static int attr_cache_make_entry($/;"	f	typeref:typename:int	file:
attr_cache_remove	extern/libgit2/src/attrcache.c	/^static int attr_cache_remove(git_attr_cache *cache, git_attr_file *file)$/;"	f	typeref:typename:int	file:
attr_cache_unlock	extern/libgit2/src/attrcache.c	/^GIT_INLINE(void) attr_cache_unlock(git_attr_cache *cache)$/;"	f	typeref:typename:void
attr_cache_upsert	extern/libgit2/src/attrcache.c	/^static int attr_cache_upsert(git_attr_cache *cache, git_attr_file *file)$/;"	f	typeref:typename:int	file:
attr_check_expected	extern/libgit2/tests/attr/attr_expect.h	/^GIT_INLINE(void) attr_check_expected($/;"	f	typeref:typename:void
attr_decide_sources	extern/libgit2/src/attr.c	/^static int attr_decide_sources($/;"	f	typeref:typename:int	file:
attr_expect_t	extern/libgit2/tests/attr/attr_expect.h	/^enum attr_expect_t {$/;"	g
attr_expected	extern/libgit2/tests/attr/attr_expect.h	/^struct attr_expected {$/;"	s
attr_file_free	extern/libgit2/src/attr_file.c	/^static void attr_file_free(git_attr_file *file)$/;"	f	typeref:typename:void	file:
attr_file_oid_from_index	extern/libgit2/src/attr_file.c	/^static int attr_file_oid_from_index($/;"	f	typeref:typename:int	file:
attr_get_many_info	extern/libgit2/src/attr.c	/^} attr_get_many_info;$/;"	t	typeref:struct:__anon5b6b8b690108	file:
attr_session	extern/libgit2/src/attr.c	/^	git_attr_session *attr_session;$/;"	m	struct:__anon5b6b8b690208	typeref:typename:git_attr_session *	file:
attr_session	extern/libgit2/src/checkout.c	/^	git_attr_session attr_session;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_attr_session	file:
attr_session	extern/libgit2/src/filter.h	/^	git_attr_session *attr_session;$/;"	m	struct:__anon209df0b90108	typeref:typename:git_attr_session *
attr_session_key	extern/libgit2/src/repository.h	/^	git_atomic attr_session_key;$/;"	m	struct:git_repository	typeref:typename:git_atomic
attr_setup	extern/libgit2/src/attr.c	/^static int attr_setup($/;"	f	typeref:typename:int	file:
attr_walk_up_info	extern/libgit2/src/attr.c	/^} attr_walk_up_info;$/;"	t	typeref:struct:__anon5b6b8b690208	file:
attrcache	extern/libgit2/src/repository.h	/^	git_attr_cache *attrcache;$/;"	m	struct:git_repository	typeref:typename:git_attr_cache *
attrdata	extern/libgit2/src/filter.c	/^	char *attrdata;$/;"	m	struct:__anon209df0b40208	typeref:typename:char *	file:
attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xml_attribute xpath_node::attribute() const$/;"	f	class:pugi::xpath_node	typeref:typename:PUGI__FN xml_attribute
attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_node::attribute(const char_t* name_) const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_attribute
attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_node::attribute(const char_t* name_, xml_attribute& hint_) const /;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_attribute
attribute_iterator	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef xml_attribute_iterator attribute_iterator;$/;"	t	class:pugi::xml_node	typeref:typename:xml_attribute_iterator
attributes	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_object_range<xml_attribute_iterator> xml_node::attributes() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_object_range<xml_attribute_iterator>
attributes	extern/libgit2/include/git2/sys/filter.h	/^	const char            *attributes;$/;"	m	struct:git_filter	typeref:typename:const char *
attributes	extern/libgit2/src/win32/posix_w32.c	/^	DWORD attributes;$/;"	m	struct:open_opts	typeref:typename:DWORD	file:
attributes_begin	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node::attribute_iterator xml_node::attributes_begin() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node::attribute_iterator
attributes_end	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node::attribute_iterator xml_node::attributes_end() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node::attribute_iterator
attrs	extern/libgit2/src/filter.c	/^	const char *attrs[GIT_FLEX_ARRAY];$/;"	m	struct:__anon209df0b40208	typeref:typename:const char * []	file:
attrs	extern/libgit2/tests/checkout/crlf.c	/^	const char *attrs;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
attrs	extern/libgit2/tests/index/crlf.c	/^	const char *attrs;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
attrsession	extern/libgit2/src/diff.h	/^	git_attr_session attrsession;$/;"	m	struct:git_diff	typeref:typename:git_attr_session
auth_challenges	extern/libgit2/src/transports/http.c	/^	git_vector auth_challenges;$/;"	m	struct:__anon0458035d0208	typeref:typename:git_vector	file:
auth_context	extern/libgit2/src/transports/http.c	/^	git_http_auth_context *auth_context;$/;"	m	struct:__anon0458035d0208	typeref:typename:git_http_auth_context *	file:
auth_context_complete	extern/libgit2/src/transports/http.c	/^static bool auth_context_complete(http_server *server)$/;"	f	typeref:typename:bool	file:
auth_mechanisms	extern/libgit2/src/transports/winhttp.c	/^	int auth_mechanisms;$/;"	m	struct:__anon981dd28b0308	typeref:typename:int	file:
auth_schemes	extern/libgit2/src/transports/http.c	/^git_http_auth_scheme auth_schemes[] = {$/;"	v	typeref:typename:git_http_auth_scheme[]
authenticated	extern/libgit2/src/transports/http.c	/^	    authenticated : 1;$/;"	m	struct:__anon0458035d0208	typeref:typename:unsigned:1	file:
author	extern/libgit2/examples/log.c	/^	const char *author;$/;"	m	struct:log_options	typeref:typename:const char *	file:
author	extern/libgit2/include/git2/diff.h	/^	const git_signature *author;$/;"	m	struct:__anon72022fed1308	typeref:typename:const git_signature *
author	extern/libgit2/src/commit.h	/^	git_signature *author;$/;"	m	struct:git_commit	typeref:typename:git_signature *
author	extern/libgit2/src/notes.h	/^	git_signature *author;$/;"	m	struct:git_note	typeref:typename:git_signature *
authtypes	extern/libgit2/src/transports/http.c	/^	git_http_authtype_t authtypes;$/;"	m	struct:__anon0458035d0208	typeref:typename:git_http_authtype_t	file:
auto_callout	extern/libgit2/deps/pcre/pcre_compile.c	/^auto_callout(pcre_uchar *code, const pcre_uchar *ptr, compile_data *cd)$/;"	f	typeref:typename:pcre_uchar *	file:
auto_crlf	extern/libgit2/src/crlf.c	/^	int auto_crlf;$/;"	m	struct:crlf_attrs	typeref:typename:int	file:
auto_deleter	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        auto_deleter(T* data_, D deleter_) : data(data_), deleter(deleter_) {$/;"	f	struct:auto_deleter	file:
auto_deleter	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<typename T> struct auto_deleter$/;"	s	file:
auto_possessify	extern/libgit2/deps/pcre/pcre_compile.c	/^auto_possessify(pcre_uchar *code, BOOL utf, const compile_data *cd)$/;"	f	typeref:typename:void	file:
autocrlf	extern/libgit2/tests/checkout/crlf.c	/^	const char *autocrlf;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
autocrlf	extern/libgit2/tests/index/crlf.c	/^	const char *autocrlf;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
automergeable	extern/libgit2/include/git2/merge.h	/^	unsigned int automergeable;$/;"	m	struct:__anon5e9a43240608	typeref:typename:unsigned int
automergeable_id	extern/libgit2/tests/merge/driver.c	/^static git_oid automergeable_id;$/;"	v	typeref:typename:git_oid	file:
autoposstab	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 autoposstab[APTROWS][APTCOLS] = {$/;"	v	typeref:typename:const pcre_uint8[][]	file:
aux_cb_alloc__1	extern/libgit2/tests/trace/windows/stacktrace.c	/^static void aux_cb_alloc__1(unsigned int *aux_id)$/;"	f	typeref:typename:void	file:
aux_cb_lookup__1	extern/libgit2/tests/trace/windows/stacktrace.c	/^static void aux_cb_lookup__1(unsigned int aux_id, char *aux_msg, size_t aux_msg_len)$/;"	f	typeref:typename:void	file:
aux_id	extern/libgit2/src/win32/w32_stack.h	/^	unsigned int aux_id;$/;"	m	struct:__anon991580660108	typeref:typename:unsigned int
avail	extern/libgit2/src/pool.c	/^	size_t avail;$/;"	m	struct:git_pool_page	typeref:typename:size_t	file:
avail_in	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    unsigned int avail_in;        \/* number of bytes available at next_in *\/$/;"	m	struct:mz_stream_s	typeref:typename:unsigned int
avail_in	extern/libgit2/deps/zlib/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s	typeref:typename:uInt
avail_out	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    unsigned int avail_out;  \/* number of bytes that can be written to next_out *\/$/;"	m	struct:mz_stream_s	typeref:typename:unsigned int
avail_out	extern/libgit2/deps/zlib/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s	typeref:typename:uInt
axis	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static const axis_t axis;$/;"	m	struct:axis_to_type	typeref:typename:const axis_t	file:
axis	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <axis_t N> const axis_t axis_to_type<N>::axis = N;$/;"	m	class:axis_to_type<N>	typeref:typename:const axis_t
axis_ancestor	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_ancestor,$/;"	e	enum:axis_t	file:
axis_ancestor_or_self	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_ancestor_or_self,$/;"	e	enum:axis_t	file:
axis_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_attribute,$/;"	e	enum:axis_t	file:
axis_child	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_child,$/;"	e	enum:axis_t	file:
axis_descendant	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_descendant,$/;"	e	enum:axis_t	file:
axis_descendant_or_self	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_descendant_or_self,$/;"	e	enum:axis_t	file:
axis_following	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_following,$/;"	e	enum:axis_t	file:
axis_following_sibling	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_following_sibling,$/;"	e	enum:axis_t	file:
axis_namespace	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_namespace,$/;"	e	enum:axis_t	file:
axis_parent	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_parent,$/;"	e	enum:axis_t	file:
axis_preceding	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_preceding,$/;"	e	enum:axis_t	file:
axis_preceding_sibling	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_preceding_sibling,$/;"	e	enum:axis_t	file:
axis_self	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_self$/;"	e	enum:axis_t	file:
axis_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	enum axis_t$/;"	g	file:
axis_to_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <axis_t N> struct axis_to_type$/;"	s	file:
b	extern/NamedType/main.cpp	/^    B b = strongA;$/;"	v	typeref:typename:B
b	extern/libgit2/tests/diff/tree.c	/^static git_tree *a, *b;$/;"	v	typeref:typename:git_tree **	file:
b	extern/libgit2/tests/trace/windows/stacktrace.c	/^static void b(void)$/;"	f	typeref:typename:void	file:
back	extern/libgit2/deps/zlib/inflate.h	/^    int back;                   \/* bits back of last unprocessed length\/lit *\/$/;"	m	struct:inflate_state	typeref:typename:int
backend	extern/libgit2/include/git2/odb_backend.h	/^	git_odb_backend *backend;$/;"	m	struct:git_odb_stream	typeref:typename:git_odb_backend *
backend	extern/libgit2/include/git2/odb_backend.h	/^	git_odb_backend *backend;$/;"	m	struct:git_odb_writepack	typeref:typename:git_odb_backend *
backend	extern/libgit2/include/git2/sys/config.h	/^	git_config_backend *backend;$/;"	m	struct:git_config_iterator	typeref:typename:git_config_backend *
backend	extern/libgit2/src/config.c	/^	git_config_backend *backend;$/;"	m	struct:__anon2d64db840108	typeref:typename:git_config_backend *	file:
backend	extern/libgit2/src/odb.c	/^	git_odb_backend *backend;$/;"	m	struct:__anonfbf77e230108	typeref:typename:git_odb_backend *	file:
backend	extern/libgit2/src/refdb.h	/^	git_refdb_backend *backend;$/;"	m	struct:git_refdb	typeref:typename:git_refdb_backend *
backend	extern/libgit2/tests/config/memory.c	/^static git_config_backend *backend;$/;"	v	typeref:typename:git_config_backend *	file:
backend_free	extern/libgit2/src/config_file.c	/^static void backend_free(git_config_backend *_backend)$/;"	f	typeref:typename:void	file:
backend_internal	extern/libgit2/src/config.c	/^} backend_internal;$/;"	t	typeref:struct:__anon2d64db840108	file:
backend_internal	extern/libgit2/src/odb.c	/^} backend_internal;$/;"	t	typeref:struct:__anonfbf77e230108	file:
backend_internal_free	extern/libgit2/src/config.c	/^static void backend_internal_free(backend_internal *internal)$/;"	f	typeref:typename:void	file:
backend_readonly_free	extern/libgit2/src/config_snapshot.c	/^static void backend_readonly_free(git_config_backend *_backend)$/;"	f	typeref:typename:void	file:
backend_sort_cmp	extern/libgit2/src/odb.c	/^static int backend_sort_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
backend_use	extern/libgit2/src/config.c	/^} backend_use;$/;"	t	typeref:enum:__anon2d64db840303	file:
backends	extern/libgit2/src/config.h	/^	git_vector backends;$/;"	m	struct:git_config	typeref:typename:git_vector
backends	extern/libgit2/src/odb.h	/^	git_vector backends;$/;"	m	struct:git_odb	typeref:typename:git_vector
backref_map	extern/libgit2/deps/pcre/pcre_internal.h	/^  unsigned int backref_map;         \/* Bitmap of low back refs *\/$/;"	m	struct:compile_data	typeref:typename:unsigned int
backtrack_common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct backtrack_common {$/;"	s	file:
backtrack_common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} backtrack_common;$/;"	t	typeref:struct:backtrack_common	file:
backtracks	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    jump_list *backtracks;$/;"	m	union:char_iterator_backtrack::__anon313b80c3020a	typeref:typename:jump_list *	file:
bad_object_sha1	extern/libgit2/src/pack.h	/^	git_oid *bad_object_sha1; \/* array of git_oid *\/$/;"	m	struct:git_pack_file	typeref:typename:git_oid *
bad_tag_id	extern/libgit2/tests/object/tag/read.c	/^static const char *bad_tag_id = "eda9f45a2a98d4c17a09d681d88569fa4ea91755";$/;"	v	typeref:typename:const char *	file:
badly_tagged_commit	extern/libgit2/tests/object/tag/read.c	/^static const char *badly_tagged_commit = "e90810b8df3e80c413d903f631643c716887138d";$/;"	v	typeref:typename:const char *	file:
bare	extern/libgit2/examples/init.c	/^	int bare;$/;"	m	struct:opts	typeref:typename:int	file:
bare	extern/libgit2/include/git2/clone.h	/^	int bare;$/;"	m	struct:git_clone_options	typeref:typename:int
bare_resolved_with_blob_override	extern/libgit2/tests/mailmap/parsing.c	/^static const mailmap_entry bare_resolved_with_blob_override[] = {$/;"	v	typeref:typename:const mailmap_entry[]	file:
bark	oset.cpp	/^using bark = union_bark<int>;$/;"	t	typeref:typename:union_bark<int>	file:
base	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^	git_smart_subtransport base;$/;"	m	struct:fuzzer_subtransport	typeref:typename:git_smart_subtransport	file:
base	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^	git_smart_subtransport_stream base;$/;"	m	struct:fuzzer_stream	typeref:typename:git_smart_subtransport_stream	file:
base	extern/libgit2/src/checkout.c	/^	git_writestream base;$/;"	m	struct:checkout_stream	typeref:typename:git_writestream	file:
base	extern/libgit2/src/diff_generate.c	/^	struct git_diff base;$/;"	m	struct:__anon047407f10108	typeref:struct:git_diff	file:
base	extern/libgit2/src/diff_parse.h	/^	struct git_diff base;$/;"	m	struct:__anona6a2af860108	typeref:struct:git_diff
base	extern/libgit2/src/futils.c	/^	const char *base;$/;"	m	struct:__anonce3edc250108	typeref:typename:const char *	file:
base	extern/libgit2/src/iterator.c	/^	git_iterator base;$/;"	m	struct:__anonb487a9b80208	typeref:typename:git_iterator	file:
base	extern/libgit2/src/iterator.c	/^	git_iterator base;$/;"	m	struct:__anonb487a9b80508	typeref:typename:git_iterator	file:
base	extern/libgit2/src/iterator.c	/^	git_iterator base;$/;"	m	struct:__anonb487a9b80808	typeref:typename:git_iterator	file:
base	extern/libgit2/src/iterator.c	/^	git_iterator base;$/;"	m	struct:__anonb487a9b80908	typeref:typename:git_iterator	file:
base	extern/libgit2/src/merge_driver.h	/^	git_merge_driver base;$/;"	m	struct:git_merge_driver__builtin	typeref:typename:git_merge_driver
base	extern/libgit2/src/patch_generate.h	/^	struct git_patch base;$/;"	m	struct:git_patch_generated	typeref:struct:git_patch
base	extern/libgit2/src/patch_parse.c	/^	git_patch base;$/;"	m	struct:__anonadbd87d80108	typeref:typename:git_patch	file:
base	extern/libgit2/tests/filter/file.c	/^	git_writestream base;$/;"	m	struct:buf_writestream	typeref:typename:git_writestream	file:
base	extern/libgit2/tests/merge/driver.c	/^	git_merge_driver base;$/;"	m	struct:test_merge_driver	typeref:typename:git_merge_driver	file:
base	extern/libgit2/tests/odb/sorting.c	/^	git_odb_backend base;$/;"	m	struct:__anon89f64fa30108	typeref:typename:git_odb_backend	file:
base64_decode	extern/libgit2/src/buffer.c	/^static const int8_t base64_decode[] = {$/;"	v	typeref:typename:const int8_t[]	file:
base64_encode	extern/libgit2/src/buffer.c	/^static const char base64_encode[] =$/;"	v	typeref:typename:const char[]	file:
base85_decode	extern/libgit2/src/buffer.c	/^static const int8_t base85_decode[] = {$/;"	v	typeref:typename:const int8_t[]	file:
base85_encode	extern/libgit2/src/buffer.c	/^static const char base85_encode[] =$/;"	v	typeref:typename:const char[]	file:
base_dist	extern/libgit2/deps/zlib/trees.c	/^local int base_dist[D_CODES];$/;"	v	typeref:typename:local int[]
base_dist	extern/libgit2/deps/zlib/trees.h	/^local const int base_dist[D_CODES] = {$/;"	v	typeref:typename:local const int[]
base_key	extern/libgit2/src/pack.h	/^	git_off_t base_key;$/;"	m	struct:pack_chain_elem	typeref:typename:git_off_t
base_length	extern/libgit2/deps/zlib/trees.c	/^local int base_length[LENGTH_CODES];$/;"	v	typeref:typename:local int[]
base_length	extern/libgit2/deps/zlib/trees.h	/^local const int base_length[LENGTH_CODES] = {$/;"	v	typeref:typename:local const int[]
base_obj	extern/libgit2/fuzzers/packfile_fuzzer.c	/^static const unsigned char base_obj[] = { 07, 076 };$/;"	v	typeref:typename:const unsigned char[]	file:
base_obj	extern/libgit2/tests/pack/indexer.c	/^static const unsigned char base_obj[] = { 07, 076 };$/;"	v	typeref:typename:const unsigned char[]	file:
base_obj_len	extern/libgit2/fuzzers/packfile_fuzzer.c	/^static const unsigned int base_obj_len = 2;$/;"	v	typeref:typename:const unsigned int	file:
base_obj_len	extern/libgit2/tests/pack/indexer.c	/^static const unsigned int base_obj_len = 2;$/;"	v	typeref:typename:const unsigned int	file:
baselen	extern/libgit2/src/futils.c	/^	size_t baselen;$/;"	m	struct:__anonce3edc250108	typeref:typename:size_t	file:
baseline	extern/libgit2/include/git2/checkout.h	/^	git_tree *baseline;$/;"	m	struct:git_checkout_options	typeref:typename:git_tree *
baseline	extern/libgit2/include/git2/status.h	/^	git_tree          *baseline;$/;"	m	struct:__anon1764a4980408	typeref:typename:git_tree *
baseline_index	extern/libgit2/include/git2/checkout.h	/^	git_index *baseline_index;$/;"	m	struct:git_checkout_options	typeref:typename:git_index *
baseline_tests	extern/libgit2/tests/submodule/lookup.c	/^static void baseline_tests(void)$/;"	f	typeref:typename:void	file:
basename	extern/libgit2/src/attr_file.h	/^	char    *basename;$/;"	m	struct:__anon32d629ad0808	typeref:typename:char *
bases	extern/libgit2/src/pack.h	/^	git_pack_cache bases; \/* delta base cache *\/$/;"	m	struct:git_pack_file	typeref:typename:git_pack_cache
basic_context	extern/libgit2/src/transports/auth.c	/^static git_http_auth_context basic_context = {$/;"	v	typeref:typename:git_http_auth_context	file:
basic_diff_status	extern/libgit2/tests/diff/workdir.c	/^static void basic_diff_status(git_diff **out, const git_diff_options *opts)$/;"	f	typeref:typename:void	file:
basic_next_token	extern/libgit2/src/transports/auth.c	/^static int basic_next_token($/;"	f	typeref:typename:int	file:
basic_payload	extern/libgit2/tests/diff/racediffiter.c	/^	basic_payload *basic_payload;$/;"	m	struct:__anone9839ae90208	typeref:typename:basic_payload *	file:
basic_payload	extern/libgit2/tests/diff/racediffiter.c	/^} basic_payload;$/;"	t	typeref:struct:__anone9839ae90108	file:
bdiffparam_t	extern/libgit2/src/xdiff/xdiff.h	/^} bdiffparam_t;$/;"	t	typeref:struct:s_bdiffparam
before	extern/libgit2/examples/log.c	/^	git_time_t before;$/;"	m	struct:log_options	typeref:typename:git_time_t	file:
begin	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^XLCellIterator XLCellRange::begin() {$/;"	f	class:XLCellRange	typeref:typename:XLCellIterator
begin	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^XLCellIteratorConst XLCellRange::begin() const {$/;"	f	class:XLCellRange	typeref:typename:XLCellIteratorConst
begin	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		const char_t* begin;$/;"	m	struct:xpath_lexer_string	typeref:typename:const char_t *	file:
begin	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_node* begin() const$/;"	f	class:xpath_node_set_raw	typeref:typename:xpath_node *	file:
begin	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set::const_iterator xpath_node_set::begin() const$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN xpath_node_set::const_iterator
begin	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_tree_walker::begin(xml_node&) {$/;"	f	class:pugi::xml_tree_walker	typeref:typename:PUGI__FN bool
begin	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node::iterator xml_node::begin() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node::iterator
begin	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        It begin() const { return _begin; }$/;"	f	class:pugi::xml_object_range	typeref:typename:It
begin	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  const pcre_uchar *begin;$/;"	m	struct:jit_arguments	typeref:typename:const pcre_uchar *	file:
begin	p.cpp	/^  aiterator begin() { return aiterator{}; }$/;"	f	struct:tree_iterator	typeref:typename:aiterator	file:
begin1	extern/libgit2/src/xdiff/xhistogram.c	/^	unsigned int begin1, end1;$/;"	m	struct:region	typeref:typename:unsigned int	file:
begin2	extern/libgit2/src/xdiff/xhistogram.c	/^	unsigned int begin2, end2;$/;"	m	struct:region	typeref:typename:unsigned int	file:
behind	extern/libgit2/tests/graph/ahead_behind.c	/^static size_t behind;$/;"	v	typeref:typename:size_t	file:
bi_buf	extern/libgit2/deps/zlib/deflate.h	/^    ush bi_buf;$/;"	m	struct:internal_state	typeref:typename:ush
bi_flush	extern/libgit2/deps/zlib/trees.c	/^local void bi_flush(s)$/;"	f
bi_reverse	extern/libgit2/deps/zlib/trees.c	/^local unsigned bi_reverse(code, len)$/;"	f
bi_valid	extern/libgit2/deps/zlib/deflate.h	/^    int bi_valid;$/;"	m	struct:internal_state	typeref:typename:int
bi_windup	extern/libgit2/deps/zlib/trees.c	/^local void bi_windup(s)$/;"	f
big_entries	extern/libgit2/tests/core/qsort.c	/^struct big_entries {$/;"	s	file:
big_file_threshold	extern/libgit2/src/pack-objects.h	/^	size_t big_file_threshold;$/;"	m	struct:git_packbuilder	typeref:typename:size_t
binary	extern/libgit2/src/checkout.c	/^		binary:1,$/;"	m	struct:__anonbac5d6240308	typeref:typename:int:1	file:
binary	extern/libgit2/src/patch.h	/^	git_diff_binary binary;$/;"	m	struct:git_patch	typeref:typename:git_diff_binary
binary_cb	extern/libgit2/src/patch_generate.h	/^	git_diff_binary_cb binary_cb;$/;"	m	struct:git_patch_generated_output	typeref:typename:git_diff_binary_cb
binary_cb	extern/libgit2/tests/diff/binary.c	/^static int binary_cb($/;"	f	typeref:typename:int	file:
binary_flags	extern/libgit2/src/diff_driver.c	/^	uint32_t binary_flags;$/;"	m	struct:git_diff_driver	typeref:typename:uint32_t	file:
binary_op_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			binary_op_t(): asttype(ast_unknown), rettype(xpath_type_none), precedence(0)$/;"	f	struct:xpath_parser::binary_op_t	file:
binary_op_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			binary_op_t(ast_type_t asttype_, xpath_value_type rettype_, int precedence_): asttype(asttype/;"	f	struct:xpath_parser::binary_op_t	file:
binary_op_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		struct binary_op_t$/;"	s	struct:xpath_parser	file:
binary_opts	extern/libgit2/tests/apply/fromdiff.c	/^static git_diff_options binary_opts = GIT_DIFF_OPTIONS_INIT;$/;"	v	typeref:typename:git_diff_options	file:
binary_search	extern/libgit2/src/xdiff/xpatience.c	/^static int binary_search(struct entry **sequence, int longest,$/;"	f	typeref:typename:int	file:
binsearch	extern/libgit2/src/tsort.c	/^static int binsearch($/;"	f	typeref:typename:int	file:
bio_create	extern/libgit2/src/streams/openssl.c	/^static int bio_create(BIO *b)$/;"	f	typeref:typename:int	file:
bio_ctrl	extern/libgit2/src/streams/openssl.c	/^static long bio_ctrl(BIO *b, int cmd, long num, void *ptr)$/;"	f	typeref:typename:long	file:
bio_destroy	extern/libgit2/src/streams/openssl.c	/^static int bio_destroy(BIO *b)$/;"	f	typeref:typename:int	file:
bio_gets	extern/libgit2/src/streams/openssl.c	/^static int bio_gets(BIO *b, char *buf, int len)$/;"	f	typeref:typename:int	file:
bio_puts	extern/libgit2/src/streams/openssl.c	/^static int bio_puts(BIO *b, const char *str)$/;"	f	typeref:typename:int	file:
bio_read	extern/libgit2/src/streams/mbedtls.c	/^static int bio_read(void *b, unsigned char *buf, size_t len)$/;"	f	typeref:typename:int	file:
bio_read	extern/libgit2/src/streams/openssl.c	/^static int bio_read(BIO *b, char *buf, int len)$/;"	f	typeref:typename:int	file:
bio_write	extern/libgit2/src/streams/mbedtls.c	/^static int bio_write(void *b, const unsigned char *buf, size_t len)$/;"	f	typeref:typename:int	file:
bio_write	extern/libgit2/src/streams/openssl.c	/^static int bio_write(BIO *b, const char *buf, int len)$/;"	f	typeref:typename:int	file:
bisort	extern/libgit2/src/tsort.c	/^static void bisort($/;"	f	typeref:typename:void	file:
bitflip_filter_apply	extern/libgit2/tests/filter/custom_helpers.c	/^int bitflip_filter_apply($/;"	f	typeref:typename:int
bitflip_filter_free	extern/libgit2/tests/filter/custom_helpers.c	/^static void bitflip_filter_free(git_filter *f)$/;"	f	typeref:typename:void	file:
bitflipped_and_reversed_data	extern/libgit2/tests/filter/custom.c	/^static unsigned char bitflipped_and_reversed_data[] =$/;"	v	typeref:typename:unsigned char[]	file:
bits	extern/libgit2/deps/zlib/inflate.h	/^    unsigned bits;              \/* number of bits in "in" *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
bits	extern/libgit2/deps/zlib/inftrees.h	/^    unsigned char bits;         \/* bits in this part of the code *\/$/;"	m	struct:__anon807a30970108	typeref:typename:unsigned char
bits	extern/libgit2/src/bitvec.h	/^		uint64_t bits;$/;"	m	union:__anon8263d3700108::__anon8263d370020a	typeref:typename:uint64_t
bits_sent	extern/libgit2/deps/zlib/deflate.h	/^    ulg bits_sent;      \/* bit length of compressed data sent mod 2^32 *\/$/;"	m	struct:internal_state	typeref:typename:ulg
bitsizeof	extern/libgit2/src/util.h	/^#define bitsizeof(/;"	d
bl_count	extern/libgit2/deps/zlib/deflate.h	/^    ush bl_count[MAX_BITS+1];$/;"	m	struct:internal_state	typeref:typename:ush[]
bl_desc	extern/libgit2/deps/zlib/deflate.h	/^    struct tree_desc_s bl_desc;              \/* desc. for bit length tree *\/$/;"	m	struct:internal_state	typeref:struct:tree_desc_s
bl_order	extern/libgit2/deps/zlib/trees.c	/^local const uch bl_order[BL_CODES]$/;"	v	typeref:typename:local const uch[]
bl_tree	extern/libgit2/deps/zlib/deflate.h	/^    struct ct_data_s bl_tree[2*BL_CODES+1];  \/* Huffman tree for bit lengths *\/$/;"	m	struct:internal_state	typeref:struct:ct_data_s[]
blame	extern/libgit2/src/blame_git.c	/^	git_blame *blame;$/;"	m	struct:blame_chunk_cb_data	typeref:typename:git_blame *	file:
blame_chunk	extern/libgit2/src/blame_git.c	/^static int blame_chunk($/;"	f	typeref:typename:int	file:
blame_chunk_cb_data	extern/libgit2/src/blame_git.c	/^typedef struct blame_chunk_cb_data {$/;"	s	file:
blame_chunk_cb_data	extern/libgit2/src/blame_git.c	/^}blame_chunk_cb_data;$/;"	t	typeref:struct:blame_chunk_cb_data	file:
blame_internal	extern/libgit2/src/blame.c	/^static int blame_internal(git_blame *blame)$/;"	f	typeref:typename:int	file:
blame_overlap	extern/libgit2/src/blame_git.c	/^static int blame_overlap($/;"	f	typeref:typename:int	file:
bld	extern/libgit2/src/tree.c	/^	git_treebuilder *bld;$/;"	m	struct:__anon8790ed5e0108	typeref:typename:git_treebuilder *	file:
blen	extern/libgit2/tests/odb/loose_data.h	/^    size_t        blen;    \/* length of data in object store            *\/$/;"	m	struct:object_data	typeref:typename:size_t
blob	extern/libgit2/src/blame.h	/^	git_blob *blob;$/;"	m	struct:git_blame__origin	typeref:typename:git_blob *
blob	extern/libgit2/src/diff_file.h	/^	const git_blob *blob;$/;"	m	struct:__anon2493e46b0108	typeref:typename:const git_blob *
blob	extern/libgit2/src/diff_file.h	/^	const git_blob *blob;$/;"	m	struct:__anon2493e46b0208	typeref:typename:const git_blob *
blob	extern/libgit2/src/diff_tform.c	/^	git_blob *blob;$/;"	m	struct:__anone5feb9ce0108	typeref:typename:git_blob *	file:
blob_content_to_file	extern/libgit2/src/checkout.c	/^static int blob_content_to_file($/;"	f	typeref:typename:int	file:
blob_content_to_link	extern/libgit2/src/checkout.c	/^static int blob_content_to_link($/;"	f	typeref:typename:int	file:
blob_creator_fn	extern/libgit2/tests/object/blob/write.c	/^typedef int (*blob_creator_fn)($/;"	t	typeref:typename:int (*)(git_oid *,git_repository *,const char *)	file:
blob_oid	extern/libgit2/tests/object/tree/attributes.c	/^static const char *blob_oid = "3d0970ec547fc41ef8a5882dde99c6adce65b021";$/;"	v	typeref:typename:const char *	file:
blob_oid	extern/libgit2/tests/object/tree/write.c	/^static const char *blob_oid = "fa49b077972391ad58037050f2a75f74e3671e92";$/;"	v	typeref:typename:const char *	file:
blob_parsing	extern/libgit2/examples/general.c	/^static void blob_parsing(git_repository *repo)$/;"	f	typeref:typename:void	file:
blob_writestream	extern/libgit2/src/blob.c	/^} blob_writestream;$/;"	t	typeref:struct:__anon5d2cee0d0108	file:
blob_writestream_close	extern/libgit2/src/blob.c	/^static int blob_writestream_close(git_writestream *_stream)$/;"	f	typeref:typename:int	file:
blob_writestream_free	extern/libgit2/src/blob.c	/^static void blob_writestream_free(git_writestream *_stream)$/;"	f	typeref:typename:void	file:
blob_writestream_write	extern/libgit2/src/blob.c	/^static int blob_writestream_write(git_writestream *_stream, const char *buffer, size_t len)$/;"	f	typeref:typename:int	file:
block	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_memory_block block;$/;"	m	struct:xpath_query_impl	typeref:typename:xpath_memory_block	file:
block_done	extern/libgit2/deps/zlib/deflate.c	/^    block_done,     \/* block flush performed *\/$/;"	e	enum:__anonfe3a00c70103	file:
block_start	extern/libgit2/deps/zlib/deflate.h	/^    long block_start;$/;"	m	struct:internal_state	typeref:typename:long
block_state	extern/libgit2/deps/zlib/deflate.c	/^} block_state;$/;"	t	typeref:enum:__anonfe3a00c70103	file:
blockquote	extern/OpenXLSX/doxy/customdoxygen.css	/^blockquote {$/;"	s
blocks	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_memory_block blocks[2];$/;"	m	struct:xpath_stack_data	typeref:typename:xpath_memory_block[2]	file:
body	extern/OpenXLSX/doxy/customdoxygen.css	/^    body {$/;"	s
body	extern/OpenXLSX/doxy/customdoxygen.css	/^body {$/;"	s
body	extern/OpenXLSX/doxy/customdoxygen.css	/^body, table, div, p, dl,$/;"	s
body	extern/libgit2/include/git2/diff.h	/^	const char *body;$/;"	m	struct:__anon72022fed1308	typeref:typename:const char *
body	extern/libgit2/src/commit.h	/^	char *body;$/;"	m	struct:git_commit	typeref:typename:char *
bom	extern/libgit2/src/buf_text.h	/^	git_bom_t bom; \/* BOM found at head of text *\/$/;"	m	struct:__anon6db101b40208	typeref:typename:git_bom_t
boundary	extern/libgit2/include/git2/blame.h	/^	char boundary;$/;"	m	struct:git_blame_hunk	typeref:typename:char
bprinter	extern/OpenXLSX/benchmark/table_printer.h	/^namespace bprinter$/;"	n
bracket_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct bracket_backtrack {$/;"	s	file:
bracket_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} bracket_backtrack;$/;"	t	typeref:struct:bracket_backtrack	file:
bracketend	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *bracketend(pcre_uchar *cc)$/;"	f	typeref:typename:pcre_uchar *	file:
bracketpos_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct bracketpos_backtrack {$/;"	s	file:
bracketpos_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} bracketpos_backtrack;$/;"	t	typeref:struct:bracketpos_backtrack	file:
bracount	extern/libgit2/deps/pcre/pcre_internal.h	/^  unsigned int bracount;            \/* Count of capturing parens as we compile *\/$/;"	m	struct:compile_data	typeref:typename:unsigned int
braminzero_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct braminzero_backtrack {$/;"	s	file:
braminzero_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} braminzero_backtrack;$/;"	t	typeref:struct:braminzero_backtrack	file:
branch	extern/libgit2/src/submodule.h	/^	char *branch;$/;"	m	struct:git_submodule	typeref:typename:char *
branch	extern/libgit2/tests/commit/write.c	/^static git_reference *head, *branch;$/;"	v	typeref:typename:git_reference **	file:
branch	extern/libgit2/tests/refs/branches/create.c	/^static git_reference *branch;$/;"	v	typeref:typename:git_reference *	file:
branch	extern/libgit2/tests/refs/branches/ishead.c	/^static git_reference *branch;$/;"	v	typeref:typename:git_reference *	file:
branch	extern/libgit2/tests/refs/branches/lookup.c	/^static git_reference *branch;$/;"	v	typeref:typename:git_reference *	file:
branch	extern/libgit2/tests/refs/branches/upstream.c	/^static git_reference *branch, *upstream;$/;"	v	typeref:typename:git_reference *	file:
branch_chain	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct branch_chain {$/;"	s
branch_chain	extern/libgit2/deps/pcre/pcre_internal.h	/^} branch_chain;$/;"	t	typeref:struct:branch_chain
branch_equals	extern/libgit2/src/branch.c	/^static int branch_equals(git_repository *repo, const char *path, void *payload)$/;"	f	typeref:typename:int	file:
branch_iter	extern/libgit2/src/branch.c	/^} branch_iter;$/;"	t	typeref:struct:__anon0a4c2abc0108	file:
branch_name	extern/libgit2/tests/refs/branches/iterator.c	/^	const char *branch_name;$/;"	m	struct:expectations	typeref:typename:const char *	file:
break_rewrite_threshold	extern/libgit2/include/git2/diff.h	/^	uint16_t break_rewrite_threshold;$/;"	m	struct:__anon72022fed0f08	typeref:typename:uint16_t
bsize	extern/libgit2/src/xdiff/xdiff.h	/^	long bsize;$/;"	m	struct:s_bdiffparam	typeref:typename:long
bsr_anycrlf	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   bsr_anycrlf;             \/* \\R is just any CRLF, not full Unicode *\/$/;"	m	struct:match_data	typeref:typename:BOOL
bsr_nlmax	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 bsr_nlmax;$/;"	m	struct:compiler_common	typeref:typename:sljit_u32	file:
bsr_nlmin	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 bsr_nlmin;$/;"	m	struct:compiler_common	typeref:typename:sljit_u32	file:
bsr_nltype	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int bsr_nltype;$/;"	m	struct:compiler_common	typeref:typename:int	file:
buf	extern/libgit2/deps/ntlmclient/ntlm.h	/^	unsigned char *buf;$/;"	m	struct:__anon8624cbbb0208	typeref:typename:unsigned char *
buf	extern/libgit2/src/config_file.c	/^	git_buf *buf;$/;"	m	struct:write_data	typeref:typename:git_buf *	file:
buf	extern/libgit2/src/diff_file.h	/^	const void *buf;$/;"	m	struct:__anon2493e46b0208	typeref:typename:const void *
buf	extern/libgit2/src/diff_print.c	/^	git_buf *buf;$/;"	m	struct:__anoncda507930108	typeref:typename:git_buf *	file:
buf	extern/libgit2/src/pack-objects.c	/^	git_buf buf;$/;"	m	struct:tree_walk_context	typeref:typename:git_buf	file:
buf	extern/libgit2/src/path.h	/^	git_buf buf;$/;"	m	struct:__anon7d10f0c00308	typeref:typename:git_buf
buf	extern/libgit2/src/sysdir.c	/^	git_buf buf;$/;"	m	struct:git_sysdir__dir	typeref:typename:git_buf	file:
buf	extern/libgit2/src/xdiff/xemit.c	/^	char buf[80];$/;"	m	struct:func_line	typeref:typename:char[80]	file:
buf	extern/libgit2/tests/config/include.c	/^static git_buf buf;$/;"	v	typeref:typename:git_buf	file:
buf	extern/libgit2/tests/config/read.c	/^static git_buf buf = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
buf	extern/libgit2/tests/config/stress.c	/^static git_buf buf = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
buf	extern/libgit2/tests/filter/file.c	/^	git_buf buf;$/;"	m	struct:buf_writestream	typeref:typename:git_buf	file:
buf_from_blob	extern/libgit2/src/filter.c	/^static int buf_from_blob(git_buf *out, git_blob *blob)$/;"	f	typeref:typename:int	file:
buf_pos	extern/libgit2/src/filebuf.h	/^	size_t buf_size, buf_pos;$/;"	m	struct:git_filebuf	typeref:typename:size_t
buf_size	extern/libgit2/src/filebuf.h	/^	size_t buf_size, buf_pos;$/;"	m	struct:git_filebuf	typeref:typename:size_t
buf_size	extern/libgit2/src/transports/http.c	/^	size_t buf_size;$/;"	m	struct:__anon0458035d0408	typeref:typename:size_t	file:
buf_stream	extern/libgit2/src/filter.c	/^struct buf_stream {$/;"	s	file:
buf_stream_close	extern/libgit2/src/filter.c	/^static int buf_stream_close(git_writestream *s)$/;"	f	typeref:typename:int	file:
buf_stream_free	extern/libgit2/src/filter.c	/^static void buf_stream_free(git_writestream *s)$/;"	f	typeref:typename:void	file:
buf_stream_init	extern/libgit2/src/filter.c	/^static void buf_stream_init(struct buf_stream *writer, git_buf *target)$/;"	f	typeref:typename:void	file:
buf_stream_write	extern/libgit2/src/filter.c	/^static int buf_stream_write($/;"	f	typeref:typename:int	file:
buf_writestream	extern/libgit2/tests/filter/file.c	/^struct buf_writestream {$/;"	s	file:
buf_writestream_close	extern/libgit2/tests/filter/file.c	/^int buf_writestream_close(git_writestream *s)$/;"	f	typeref:typename:int
buf_writestream_free	extern/libgit2/tests/filter/file.c	/^void buf_writestream_free(git_writestream *s)$/;"	f	typeref:typename:void
buf_writestream_write	extern/libgit2/tests/filter/file.c	/^int buf_writestream_write(git_writestream *s, const char *buf, size_t len)$/;"	f	typeref:typename:int
bufcapacity	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^            bufcapacity = bufcapacitybytes \/ (sizeof(char_t) + 4)$/;"	e	enum:xml_buffered_writer::__anonfceed08a0303	file:
bufcapacitybytes	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^            bufcapacitybytes =$/;"	e	enum:xml_buffered_writer::__anonfceed08a0303	file:
buferr_t	extern/libgit2/src/filebuf.c	/^enum buferr_t {$/;"	g	file:
buffer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t buffer[bufcapacity];$/;"	m	class:xml_buffered_writer	typeref:typename:char_t[]	file:
buffer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t* buffer;$/;"	m	struct:xml_extra_buffer	typeref:typename:char_t *	file:
buffer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        const char_t* buffer;$/;"	m	struct:xml_document_struct	typeref:typename:const char_t *	file:
buffer	extern/libgit2/src/filebuf.h	/^	unsigned char *buffer;$/;"	m	struct:git_filebuf	typeref:typename:unsigned char *
buffer	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	unsigned char buffer[64];$/;"	m	struct:__anon3f63bb720108	typeref:typename:unsigned char[64]
buffer	extern/libgit2/src/odb.c	/^	char *buffer;$/;"	m	struct:__anonfbf77e230208	typeref:typename:char *	file:
buffer	extern/libgit2/src/odb.h	/^	void *buffer;$/;"	m	struct:git_odb_object	typeref:typename:void *
buffer	extern/libgit2/src/transports/http.c	/^	char *buffer;$/;"	m	struct:__anon0458035d0408	typeref:typename:char *	file:
buffer	extern/libgit2/src/transports/smart.h	/^	gitno_buffer buffer;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:gitno_buffer
buffer_data	extern/libgit2/src/transports/smart.h	/^	char buffer_data[65536];$/;"	m	struct:__anoncc6f59690b08	typeref:typename:char[65536]
buffer_hunk_cb	extern/libgit2/src/blame.c	/^static int buffer_hunk_cb($/;"	f	typeref:typename:int	file:
buffer_line_cb	extern/libgit2/src/blame.c	/^static int buffer_line_cb($/;"	f	typeref:typename:int	file:
buffer_want_with_caps	extern/libgit2/src/transports/smart_pkt.c	/^static int buffer_want_with_caps(const git_remote_head *head, transport_smart_caps *caps, git_bu/;"	f	typeref:typename:int	file:
buffered_comment	extern/libgit2/src/config_file.c	/^	git_buf buffered_comment;$/;"	m	struct:write_data	typeref:typename:git_buf	file:
buflen	extern/libgit2/src/diff_file.h	/^	size_t buflen;$/;"	m	struct:__anon2493e46b0208	typeref:typename:size_t
bufsize	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        size_t bufsize;$/;"	m	class:xml_buffered_writer	typeref:typename:size_t	file:
build	extern/libgit2/deps/ntlmclient/ntlm.h	/^	uint16_t build;$/;"	m	struct:__anon8624cbbb0308	typeref:typename:uint16_t
build_bl_tree	extern/libgit2/deps/zlib/trees.c	/^local int build_bl_tree(s)$/;"	f
build_fake_backend	extern/libgit2/tests/odb/backend/backend_helpers.c	/^int build_fake_backend($/;"	f	typeref:typename:int
build_regex	extern/libgit2/src/revparse.c	/^static int build_regex(p_regex_t *regex, const char *pattern)$/;"	f	typeref:typename:int	file:
build_sandbox_path	extern/libgit2/tests/clar/sandbox.h	/^static int build_sandbox_path(void)$/;"	f	typeref:typename:int
build_test_tree	extern/libgit2/tests/iterator/tree.c	/^static void build_test_tree($/;"	f	typeref:typename:void	file:
build_tree	extern/libgit2/deps/zlib/trees.c	/^local void build_tree(s, desc)$/;"	f
build_tree_from_index	extern/libgit2/src/stash.c	/^static int build_tree_from_index($/;"	f	typeref:typename:int	file:
build_untracked_tree	extern/libgit2/src/stash.c	/^static int build_untracked_tree($/;"	f	typeref:typename:int	file:
build_workdir_tree	extern/libgit2/src/stash.c	/^static int build_workdir_tree($/;"	f	typeref:typename:int	file:
build_workdir_tree	extern/libgit2/tests/iterator/workdir.c	/^static void build_workdir_tree(const char *root, int dirs, int subs)$/;"	f	typeref:typename:void	file:
builtin_defs	extern/libgit2/src/userdiff.h	/^static git_diff_driver_definition builtin_defs[] = {$/;"	v	typeref:typename:git_diff_driver_definition[]
busy_size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        size_t busy_size;$/;"	m	struct:xml_memory_page	typeref:typename:size_t	file:
bye_id	extern/libgit2/tests/object/raw/hash.c	/^static char *bye_id = "ce08fe4884650f067bd5703b6a59a8b3b3c99a09";$/;"	v	typeref:typename:char *	file:
bye_text	extern/libgit2/tests/object/raw/hash.c	/^static char *bye_text = "bye world\\n";$/;"	v	typeref:typename:char *	file:
byte_sequence_compare	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *byte_sequence_compare(compiler_common *common, BOOL caseless, pcre_uchar *cc,$/;"	f	typeref:typename:pcre_uchar *	file:
bytes	extern/OpenXLSX/tests/catch/catch.hpp	/^            auto bytes = System::Text::Encoding::UTF8->GetBytes(ref->ToString());$/;"	v	namespace:Catch::Detail	typeref:typename:auto
bytes	extern/libgit2/tests/odb/loose_data.h	/^    unsigned char *bytes;  \/* (compressed) bytes stored in object store *\/$/;"	m	struct:object_data	typeref:typename:unsigned char *
bytes_read	extern/libgit2/src/transports/http.c	/^	size_t *bytes_read;$/;"	m	struct:__anon0458035d0408	typeref:typename:size_t *	file:
c	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  } c;$/;"	m	struct:compare_context	typeref:union:compare_context::__anon313b80c3040a	file:
c	extern/libgit2/src/hash/sha1/collisiondetect.h	/^	SHA1_CTX c;$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:SHA1_CTX
c	extern/libgit2/src/hash/sha1/common_crypto.h	/^	CC_SHA1_CTX c;$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:CC_SHA1_CTX
c	extern/libgit2/src/hash/sha1/mbedtls.h	/^    mbedtls_sha1_context c;$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:mbedtls_sha1_context
c	extern/libgit2/src/hash/sha1/openssl.h	/^	SHA_CTX c;$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:SHA_CTX
c	extern/libgit2/tests/core/qsort.c	/^	char c[311];$/;"	m	struct:big_entries	typeref:typename:char[311]	file:
c	extern/libgit2/tests/trace/windows/stacktrace.c	/^static void c(void)$/;"	f	typeref:typename:void	file:
c	git.hpp	/^  C c;$/;"	m	struct:git::make	typeref:typename:C
c	git.hpp	/^  C c;$/;"	m	struct:git::make2	typeref:typename:C
c_str	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		const char_t* c_str() const$/;"	f	class:xpath_string	typeref:typename:const char_t *	file:
cache	extern/libgit2/examples/diff.c	/^	int cache;$/;"	m	struct:opts	typeref:typename:int	file:
cache	extern/libgit2/src/refdb_fs.c	/^	git_sortedcache *cache;$/;"	m	struct:__anonbd02e2090308	typeref:typename:git_sortedcache *	file:
cache_add	extern/libgit2/src/pack.c	/^static int cache_add($/;"	f	typeref:typename:int	file:
cache_data	extern/libgit2/src/attr_file.h	/^	} cache_data;$/;"	m	struct:__anon32d629ad0608	typeref:union:__anon32d629ad0608::__anon32d629ad070a
cache_evict_entries	extern/libgit2/src/cache.c	/^static void cache_evict_entries(git_cache *cache)$/;"	f	typeref:typename:void	file:
cache_free	extern/libgit2/src/pack.c	/^static void cache_free(git_pack_cache *cache)$/;"	f	typeref:typename:void	file:
cache_get	extern/libgit2/src/cache.c	/^static void *cache_get(git_cache *cache, const git_oid *oid, unsigned int flags)$/;"	f	typeref:typename:void *	file:
cache_get	extern/libgit2/src/pack.c	/^static git_pack_cache_entry *cache_get(git_pack_cache *cache, git_off_t offset)$/;"	f	typeref:typename:git_pack_cache_entry *	file:
cache_init	extern/libgit2/src/pack.c	/^static int cache_init(git_pack_cache *cache)$/;"	f	typeref:typename:int	file:
cache_limit	extern/libgit2/tests/object/cache.c	/^static size_t cache_limit;$/;"	v	typeref:typename:size_t	file:
cache_max_small_delta_size	extern/libgit2/src/pack-objects.h	/^	size_t cache_max_small_delta_size;$/;"	m	struct:git_packbuilder	typeref:typename:size_t
cache_mutex	extern/libgit2/src/pack-objects.h	/^	git_mutex cache_mutex;$/;"	m	struct:git_packbuilder	typeref:typename:git_mutex
cache_parsed	extern/libgit2/tests/object/cache.c	/^static void *cache_parsed(void *arg)$/;"	f	typeref:typename:void *	file:
cache_quick	extern/libgit2/tests/object/cache.c	/^static void *cache_quick(void *arg)$/;"	f	typeref:typename:void *	file:
cache_raw	extern/libgit2/tests/object/cache.c	/^static void *cache_raw(void *arg)$/;"	f	typeref:typename:void *	file:
cache_should_store	extern/libgit2/src/cache.c	/^static bool cache_should_store(git_object_t object_type, size_t object_size)$/;"	f	typeref:typename:bool	file:
cache_store	extern/libgit2/src/cache.c	/^static void *cache_store(git_cache *cache, git_cached_obj *entry)$/;"	f	typeref:typename:void *	file:
cached	extern/libgit2/src/object.h	/^	git_cached_obj cached;$/;"	m	struct:git_object	typeref:typename:git_cached_obj
cached	extern/libgit2/src/odb.h	/^	git_cached_obj cached;$/;"	m	struct:git_odb_object	typeref:typename:git_cached_obj
calc_self_similarity	extern/libgit2/src/diff_tform.c	/^static int calc_self_similarity($/;"	f	typeref:typename:int	file:
calculate_work	extern/libgit2/src/push.c	/^static int calculate_work(git_push *push)$/;"	f	typeref:typename:int	file:
call_executable_func	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^   jit_function call_executable_func;$/;"	m	union:PRIV::__anon313b80c3080a	typeref:typename:jit_function	file:
call_executable_func	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^   jit_function call_executable_func;$/;"	m	union:jit_machine_stack_exec::__anon313b80c3070a	typeref:typename:jit_function	file:
call_executable_func	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^   jit_function call_executable_func;$/;"	m	union:pcre_jit_exec::__anon313b80c3090a	typeref:typename:jit_function	file:
callback	extern/libgit2/include/git2/sys/transport.h	/^	git_smart_subtransport_cb callback;$/;"	m	struct:git_smart_subtransport_definition	typeref:typename:git_smart_subtransport_cb
callback	extern/libgit2/src/diff_xdiff.h	/^	xdemitcb_t   callback;$/;"	m	struct:__anon14ca163c0108	typeref:typename:xdemitcb_t
callback	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	collision_block_callback callback;$/;"	m	struct:__anon3f63bb720108	typeref:typename:collision_block_callback
callback	extern/libgit2/src/trace.h	/^	git_trace_cb callback;$/;"	m	struct:git_trace_data	typeref:typename:git_trace_cb
callback	extern/libgit2/src/transports/smart_protocol.c	/^	git_indexer_progress_cb callback;$/;"	m	struct:network_packetsize_payload	typeref:typename:git_indexer_progress_cb	file:
callback_	function_ref.hpp	/^  R (*callback_)(void *, Args...) = nullptr;$/;"	m	struct:abo::function_ref	typeref:typename:R (*)(void *,Args...)
callback_cb	extern/libgit2/tests/stash/foreach.c	/^static int callback_cb($/;"	f	typeref:typename:int	file:
callback_count	extern/libgit2/tests/generate.py	/^    def callback_count(self):$/;"	m	class:TestSuite
callback_data	extern/libgit2/tests/stash/foreach.c	/^struct callback_data$/;"	s	file:
callbacks	extern/libgit2/include/git2/remote.h	/^	git_remote_callbacks callbacks;$/;"	m	struct:__anonc41be5800508	typeref:typename:git_remote_callbacks
callbacks	extern/libgit2/include/git2/remote.h	/^	git_remote_callbacks callbacks;$/;"	m	struct:__anonc41be5800608	typeref:typename:git_remote_callbacks
callbacks	extern/libgit2/src/streams/registry.c	/^	git_stream_registration callbacks;$/;"	m	struct:stream_registry	typeref:typename:git_stream_registration	file:
called_proxy_creds	extern/libgit2/tests/online/clone.c	/^static int called_proxy_creds;$/;"	v	typeref:typename:int	file:
calllimit	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *calllimit;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
callout_data	extern/libgit2/deps/pcre/pcre.h	/^  void        *callout_data;      \/* Data passed in with the call *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:void *
callout_data	extern/libgit2/deps/pcre/pcre.h	/^  void        *callout_data;      \/* Data passed in with the call *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:void *
callout_data	extern/libgit2/deps/pcre/pcre.h	/^  void        *callout_data;      \/* Data passed in with the call *\/$/;"	m	struct:pcre_callout_block	typeref:typename:void *
callout_data	extern/libgit2/deps/pcre/pcre.h	/^  void *callout_data;             \/* Data passed back in callouts *\/$/;"	m	struct:pcre16_extra	typeref:typename:void *
callout_data	extern/libgit2/deps/pcre/pcre.h	/^  void *callout_data;             \/* Data passed back in callouts *\/$/;"	m	struct:pcre32_extra	typeref:typename:void *
callout_data	extern/libgit2/deps/pcre/pcre.h	/^  void *callout_data;             \/* Data passed back in callouts *\/$/;"	m	struct:pcre_extra	typeref:typename:void *
callout_data	extern/libgit2/deps/pcre/pcre_internal.h	/^  void  *callout_data;            \/* To pass back to callouts *\/$/;"	m	struct:match_data	typeref:typename:void *
callout_data	extern/libgit2/deps/pcre/pcre_internal.h	/^  void *callout_data;               \/* To pass back to callouts *\/$/;"	m	struct:dfa_match_data	typeref:typename:void *
callout_data	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  void *callout_data;$/;"	m	struct:jit_arguments	typeref:typename:void *	file:
callout_number	extern/libgit2/deps/pcre/pcre.h	/^  int          callout_number;    \/* Number compiled into pattern *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
callout_number	extern/libgit2/deps/pcre/pcre.h	/^  int          callout_number;    \/* Number compiled into pattern *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
callout_number	extern/libgit2/deps/pcre/pcre.h	/^  int          callout_number;    \/* Number compiled into pattern *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
callpat	extern/libgit2/deps/pcre/pcre_exec.c	/^#define callpat /;"	d	file:
calls	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *calls;$/;"	m	struct:recurse_entry	typeref:typename:jump_list *	file:
can_link	extern/libgit2/src/clone.c	/^static bool can_link(const char *src, const char *dst, int link)$/;"	f	typeref:typename:bool	file:
can_symlink	extern/libgit2/src/checkout.c	/^	int can_symlink;$/;"	m	struct:__anonbac5d6240208	typeref:typename:int	file:
cancel_after	extern/libgit2/tests/core/path.c	/^	int cancel_after;$/;"	m	struct:__anon2f3ed9fe0108	typeref:typename:int	file:
cancel_at_half	extern/libgit2/tests/online/clone.c	/^static int cancel_at_half(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
cancel_at_half	extern/libgit2/tests/online/fetch.c	/^static int cancel_at_half(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
cancel_iteration	extern/libgit2/tests/attr/repo.c	/^static int cancel_iteration($/;"	f	typeref:typename:int	file:
cancelled	extern/libgit2/src/transports/local.c	/^	git_atomic cancelled;$/;"	m	struct:__anonb65cbde80108	typeref:typename:git_atomic	file:
cancelled	extern/libgit2/src/transports/smart.h	/^	git_atomic cancelled;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_atomic
canonicalize_directory_path	extern/libgit2/src/index.c	/^static int canonicalize_directory_path($/;"	f	typeref:typename:int	file:
canonicalize_url	extern/libgit2/src/remote.c	/^static int canonicalize_url(git_buf *out, const char *in)$/;"	f	typeref:typename:int	file:
capabilities	extern/libgit2/src/transports/smart.h	/^	char *capabilities;$/;"	m	struct:__anoncc6f59690308	typeref:typename:char *
capacity	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		size_t capacity;$/;"	m	struct:xpath_memory_block	typeref:typename:size_t	file:
caps	extern/libgit2/src/transports/smart.h	/^	transport_smart_caps caps;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:transport_smart_caps
caption	extern/OpenXLSX/doxy/customdoxygen.css	/^caption {$/;"	s
capture_last	extern/libgit2/deps/pcre/pcre.h	/^  int          capture_last;      \/* Most recently closed capture *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
capture_last	extern/libgit2/deps/pcre/pcre.h	/^  int          capture_last;      \/* Most recently closed capture *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
capture_last	extern/libgit2/deps/pcre/pcre.h	/^  int          capture_last;      \/* Most recently closed capture *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
capture_last	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_int32 capture_last;        \/* Most recent capture number + overflow flag *\/$/;"	m	struct:match_data	typeref:typename:pcre_int32
capture_last_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 capture_last_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
capture_top	extern/libgit2/deps/pcre/pcre.h	/^  int          capture_top;       \/* Max current capture *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
capture_top	extern/libgit2/deps/pcre/pcre.h	/^  int          capture_top;       \/* Max current capture *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
capture_top	extern/libgit2/deps/pcre/pcre.h	/^  int          capture_top;       \/* Max current capture *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
capturedExpression	extern/OpenXLSX/tests/catch/catch.hpp	/^        StringRef capturedExpression;$/;"	m	struct:Catch::AssertionInfo	typeref:typename:StringRef
case_paths	extern/libgit2/tests/status/worktree.c	/^static const char *case_paths[] = { "B", "H", "c", "g" };$/;"	v	typeref:typename:const char * []	file:
case_statuses	extern/libgit2/tests/status/worktree.c	/^static unsigned int case_statuses[] = {$/;"	v	typeref:typename:unsigned int[]	file:
casefulcmp	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *casefulcmp;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
caselesscmp	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *caselesscmp;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
caseset	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint8 caseset;    \/* offset to multichar other cases or zero *\/$/;"	m	struct:__anonb814e4160608	typeref:typename:pcre_uint8
catposstab	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 catposstab[7][30] = {$/;"	v	typeref:typename:const pcre_uint8[7][30]	file:
cb	extern/libgit2/src/index.c	/^	git_index_matched_path_cb cb;$/;"	m	struct:foreach_diff_data	typeref:typename:git_index_matched_path_cb	file:
cb	extern/libgit2/src/iterator.c	/^	git_iterator_callbacks cb;$/;"	m	struct:__anonb487a9b80208	typeref:typename:git_iterator_callbacks	file:
cb	extern/libgit2/src/iterator.h	/^	git_iterator_callbacks *cb;$/;"	m	struct:git_iterator	typeref:typename:git_iterator_callbacks *
cb	extern/libgit2/src/odb_loose.c	/^	git_odb_foreach_cb cb;$/;"	m	struct:foreach_state	typeref:typename:git_odb_foreach_cb	file:
cb	extern/libgit2/src/tag.c	/^	git_tag_foreach_cb cb;$/;"	m	struct:__anonfc5068ca0108	typeref:typename:git_tag_foreach_cb	file:
cb	extern/libgit2/src/transports/smart_protocol.c	/^	git_push_transfer_progress_cb cb;$/;"	m	struct:push_packbuilder_payload	typeref:typename:git_push_transfer_progress_cb	file:
cb	extern/libgit2/tests/config/multivar.c	/^static int cb(const git_config_entry *entry, void *data)$/;"	f	typeref:typename:int	file:
cbSize	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD cbSize;$/;"	m	struct:__anonb531ffc20808	typeref:typename:DWORD
cb__free_status	extern/libgit2/src/global.c	/^static void cb__free_status(void *st)$/;"	f	typeref:typename:void	file:
cb__reflist_add	extern/libgit2/src/refs.c	/^static int cb__reflist_add(const char *ref, void *data)$/;"	f	typeref:typename:int	file:
cb_data	extern/libgit2/src/netops.h	/^	void *cb_data;$/;"	m	struct:gitno_buffer	typeref:typename:void *
cb_data	extern/libgit2/src/tag.c	/^	void *cb_data;$/;"	m	struct:__anonfc5068ca0108	typeref:typename:void *	file:
cb_payload	extern/libgit2/src/transports/smart_protocol.c	/^	void *cb_payload;$/;"	m	struct:push_packbuilder_payload	typeref:typename:void *	file:
cb_status__check_592	extern/libgit2/tests/status/worktree.c	/^static int cb_status__check_592(const char *p, unsigned int s, void *payload)$/;"	f	typeref:typename:int	file:
cb_status__count	extern/libgit2/tests/status/status_helpers.c	/^int cb_status__count(const char *p, unsigned int s, void *payload)$/;"	f	typeref:typename:int
cb_status__expected_path	extern/libgit2/tests/status/worktree_init.c	/^static int cb_status__expected_path(const char *p, unsigned int s, void *payload)$/;"	f	typeref:typename:int	file:
cb_status__interrupt	extern/libgit2/tests/status/worktree.c	/^static int cb_status__interrupt(const char *p, unsigned int s, void *payload)$/;"	f	typeref:typename:int	file:
cb_status__match	extern/libgit2/tests/status/submodules.c	/^static int cb_status__match(const char *p, unsigned int s, void *payload)$/;"	f	typeref:typename:int	file:
cb_status__normal	extern/libgit2/tests/status/status_helpers.c	/^int cb_status__normal($/;"	f	typeref:typename:int
cb_status__print	extern/libgit2/tests/status/status_helpers.c	/^int cb_status__print($/;"	f	typeref:typename:int
cb_status__single	extern/libgit2/tests/status/status_helpers.c	/^int cb_status__single(const char *p, unsigned int s, void *payload)$/;"	f	typeref:typename:int
cb_tag_foreach	extern/libgit2/src/pack-objects.c	/^static int cb_tag_foreach(const char *name, git_oid *oid, void *data)$/;"	f	typeref:typename:int	file:
cb_tree_walk	extern/libgit2/src/pack-objects.c	/^static int cb_tree_walk($/;"	f	typeref:typename:int	file:
cbegroup	extern/libgit2/deps/pcre/pcre_exec.c	/^#define cbegroup /;"	d	file:
cbit_cntrl	extern/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_cntrl /;"	d
cbit_digit	extern/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_digit /;"	d
cbit_graph	extern/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_graph /;"	d
cbit_length	extern/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_length /;"	d
cbit_lower	extern/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_lower /;"	d
cbit_print	extern/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_print /;"	d
cbit_punct	extern/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_punct /;"	d
cbit_space	extern/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_space /;"	d
cbit_upper	extern/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_upper /;"	d
cbit_word	extern/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_word /;"	d
cbit_xdigit	extern/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_xdigit /;"	d
cbits	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *cbits;          \/* Points to character type table *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uint8 *
cbits_offset	extern/libgit2/deps/pcre/pcre_internal.h	/^#define cbits_offset /;"	d
cbra_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 cbra_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
cc	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  pcre_uchar *cc;$/;"	m	struct:backtrack_common	typeref:typename:pcre_uchar *	file:
cc33	extern/NamedType/main.cpp	/^    SerialNumber cc33{"CC33"};$/;"	v	typeref:typename:SerialNumber
ccopy	extern/OpenXLSX/tests/c++/Test03_Workbook.cpp	/^auto ccopy = cwbk;$/;"	v	typeref:typename:auto
cdoc	extern/OpenXLSX/tests/c++/Test03_Workbook.cpp	/^const XLDocument cdoc = mdoc;$/;"	v	typeref:typename:const XLDocument
ceiling_dirs	extern/libgit2/tests/repo/discover.c	/^static git_buf ceiling_dirs;$/;"	v	typeref:typename:git_buf	file:
cellIndex	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRow_Impl.h	/^            unsigned int cellIndex;$/;"	m	struct:OpenXLSX::Impl::XLRow::XLCellData	typeref:typename:unsigned int
cellItem	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRow_Impl.h	/^            std::unique_ptr<XLCell> cellItem = nullptr;$/;"	m	struct:OpenXLSX::Impl::XLRow::XLCellData	typeref:typename:std::unique_ptr<XLCell>
cert_check_assert_invalid	extern/libgit2/tests/online/badssl.c	/^static int cert_check_assert_invalid(git_cert *cert, int valid, const char* host, void *payload)$/;"	f	typeref:typename:int	file:
cert_info	extern/libgit2/src/streams/mbedtls.c	/^	git_cert_x509 cert_info;$/;"	m	struct:__anon7f3464670108	typeref:typename:git_cert_x509	file:
cert_info	extern/libgit2/src/streams/openssl.c	/^	git_cert_x509 cert_info;$/;"	m	struct:__anon6b0c21600108	typeref:typename:git_cert_x509	file:
cert_info	extern/libgit2/src/streams/stransport.c	/^	git_cert_x509 cert_info;$/;"	m	struct:__anonc5fef1dc0108	typeref:typename:git_cert_x509	file:
cert_type	extern/libgit2/include/git2/cert.h	/^	git_cert_t cert_type;$/;"	m	struct:git_cert	typeref:typename:git_cert_t
certificate_check	extern/libgit2/include/git2/proxy.h	/^	git_transport_certificate_check_cb certificate_check;$/;"	m	struct:__anon63af67960208	typeref:typename:git_transport_certificate_check_cb
certificate_check	extern/libgit2/include/git2/remote.h	/^	git_transport_certificate_check_cb certificate_check;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_transport_certificate_check_cb
certificate_check	extern/libgit2/src/transports/winhttp.c	/^static int certificate_check(winhttp_stream *s, int valid)$/;"	f	typeref:typename:int	file:
certificate_check_cb	extern/libgit2/src/transports/smart.h	/^	git_transport_certificate_check_cb certificate_check_cb;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_transport_certificate_check_cb
cfg	extern/libgit2/include/git2/sys/config.h	/^	struct git_config *cfg;$/;"	m	struct:git_config_backend	typeref:struct:git_config *
cfg	extern/libgit2/src/config.c	/^	const git_config *cfg;$/;"	m	struct:__anon2d64db840208	typeref:typename:const git_config *	file:
cfg	extern/libgit2/src/config_mem.c	/^	git_buf cfg;$/;"	m	struct:__anon36e9f1a20108	typeref:typename:git_buf	file:
cfg	extern/libgit2/src/transaction.c	/^	git_config *cfg;$/;"	m	struct:git_transaction	typeref:typename:git_config *	file:
cfg	extern/libgit2/tests/config/include.c	/^static git_config *cfg;$/;"	v	typeref:typename:git_config *	file:
cfg	extern/libgit2/tests/config/readonly.c	/^static git_config *cfg;$/;"	v	typeref:typename:git_config *	file:
cfg	extern/libgit2/tests/config/snapshot.c	/^static git_config *cfg;$/;"	v	typeref:typename:git_config *	file:
cfg	extern/libgit2/tests/config/validkeyname.c	/^static git_config *cfg;$/;"	v	typeref:typename:git_config *	file:
cfg_attr_file	extern/libgit2/src/attrcache.h	/^	char *cfg_attr_file; \/* cached value of core.attributesfile *\/$/;"	m	struct:__anon5aa68d020108	typeref:typename:char *
cfg_callback_countdown	extern/libgit2/tests/config/read.c	/^static int cfg_callback_countdown(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
cfg_excl_file	extern/libgit2/src/attrcache.h	/^	char *cfg_excl_file; \/* cached value of core.excludesfile *\/$/;"	m	struct:__anon5aa68d020108	typeref:typename:char *
challenge	extern/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_challenge challenge;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_challenge
challenge	extern/libgit2/src/transports/auth_negotiate.c	/^	char *challenge;$/;"	m	struct:__anon8bc72ece0108	typeref:typename:char *	file:
challenge	extern/libgit2/src/transports/auth_ntlm.c	/^	char *challenge;$/;"	m	struct:__anon2e3324090108	typeref:typename:char *	file:
changeValue	extern/NamedType/main.cpp	/^void changeValue(const NameRef name)$/;"	f	typeref:typename:void
change_type	extern/libgit2/tests/merge/merge_helpers.h	/^	git_merge_diff_type_t change_type;$/;"	m	struct:merge_index_conflict_data	typeref:typename:git_merge_diff_type_t
channel	extern/libgit2/src/transports/ssh.c	/^	LIBSSH2_CHANNEL *channel;$/;"	m	struct:__anon944cd18b0108	typeref:typename:LIBSSH2_CHANNEL *	file:
chanode_t	extern/libgit2/src/xdiff/xtypes.h	/^} chanode_t;$/;"	t	typeref:struct:s_chanode
char_get_othercase_bit	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static unsigned int char_get_othercase_bit(compiler_common *common, pcre_uchar *cc)$/;"	f	typeref:typename:unsigned int	file:
char_has_othercase	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE BOOL char_has_othercase(compiler_common *common, pcre_uchar *cc)$/;"	f	typeref:typename:SLJIT_INLINE BOOL	file:
char_iterator_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct char_iterator_backtrack {$/;"	s	file:
char_iterator_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} char_iterator_backtrack;$/;"	t	typeref:struct:char_iterator_backtrack	file:
char_othercase	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE unsigned int char_othercase(compiler_common *common, unsigned int c)$/;"	f	typeref:typename:SLJIT_INLINE unsigned int	file:
char_t	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    typedef PUGIXML_CHAR char_t;$/;"	t	namespace:pugi	typeref:typename:PUGIXML_CHAR
character_to_int32	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static sljit_s32 character_to_int32(pcre_uchar chr)$/;"	f	typeref:typename:sljit_s32	file:
charf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef char charf;$/;"	t	typeref:typename:char
charf	extern/libgit2/deps/zlib/zconf.h	/^#  define charf /;"	d
charf	extern/libgit2/deps/zlib/zconf.h	/^typedef char  FAR charf;$/;"	t	typeref:typename:char FAR
charpos	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    } charpos;$/;"	m	union:char_iterator_backtrack::__anon313b80c3020a	typeref:struct:char_iterator_backtrack::__anon313b80c3020a::__anon313b80c30308	file:
charptr	extern/libgit2/deps/pcre/pcre_exec.c	/^#define charptr /;"	d	file:
chartype	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint8 chartype;   \/* ucp_Cc, etc. (general categories) *\/$/;"	m	struct:__anonb814e4160608	typeref:typename:pcre_uint8
chartype_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    enum chartype_t$/;"	g	file:
chartype_table	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    static const unsigned char chartype_table[256] =$/;"	v	typeref:typename:const unsigned char[256]	file:
chartypex_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    enum chartypex_t$/;"	g	file:
chartypex_table	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    static const unsigned char chartypex_table[256] =$/;"	v	typeref:typename:const unsigned char[256]	file:
chastore_t	extern/libgit2/src/xdiff/xtypes.h	/^} chastore_t;$/;"	t	typeref:struct:s_chastore
chdir	extern/libgit2/tests/clar.c	/^#		define chdir(/;"	d	file:
check	extern/libgit2/deps/zlib/inflate.h	/^    unsigned long check;        \/* protected copy of check value *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned long
check	extern/libgit2/examples/tag.c	/^static void check(int result, const char *message)$/;"	f	typeref:typename:void	file:
check	extern/libgit2/include/git2/sys/filter.h	/^	git_filter_check_fn    check;$/;"	m	struct:git_filter	typeref:typename:git_filter_check_fn
checkSymbol	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.c.in	/^static void checkSymbol(void) {$/;"	f	typeref:typename:void	file:
check_anynewline	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_anynewline(compiler_common *common)$/;"	f	typeref:typename:void	file:
check_backend_sorting	extern/libgit2/tests/odb/sorting.c	/^static void check_backend_sorting(git_odb *odb)$/;"	f	typeref:typename:void	file:
check_basename	extern/libgit2/tests/core/path.c	/^check_basename(const char *A, const char *B)$/;"	f	typeref:typename:void	file:
check_blame_hunk_index	extern/libgit2/tests/blame/blame_helpers.c	/^void check_blame_hunk_index(git_repository *repo, git_blame *blame, int idx,$/;"	f	typeref:typename:void
check_buf	extern/libgit2/tests/core/buffer.c	/^#define check_buf(/;"	d	file:
check_buf_append	extern/libgit2/tests/core/buffer.c	/^check_buf_append($/;"	f	typeref:typename:void	file:
check_buf_append_abc	extern/libgit2/tests/core/buffer.c	/^check_buf_append_abc($/;"	f	typeref:typename:void	file:
check_certificate	extern/libgit2/src/transports/http.c	/^static int check_certificate($/;"	f	typeref:typename:int	file:
check_char_prop	extern/libgit2/deps/pcre/pcre_compile.c	/^check_char_prop(pcre_uint32 c, unsigned int ptype, unsigned int pdata,$/;"	f	typeref:typename:BOOL	file:
check_class_ranges	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static BOOL check_class_ranges(compiler_common *common, const sljit_u8 *bits, BOOL nclass, BOOL /;"	f	typeref:typename:BOOL	file:
check_counts	extern/libgit2/tests/core/dirent.c	/^static void check_counts(walk_data *d)$/;"	f	typeref:typename:void	file:
check_crlf	extern/libgit2/src/crlf.c	/^static git_crlf_t check_crlf(const char *value)$/;"	f	typeref:typename:git_crlf_t	file:
check_delta_limit	extern/libgit2/src/pack-objects.c	/^static size_t check_delta_limit(git_pobject *me, size_t n)$/;"	f	typeref:typename:size_t	file:
check_diff_patches	extern/libgit2/tests/diff/submodules.c	/^#define check_diff_patches(/;"	d	file:
check_diff_patches_at_line	extern/libgit2/tests/diff/submodules.c	/^static void check_diff_patches_at_line($/;"	f	typeref:typename:void	file:
check_dirname	extern/libgit2/tests/core/path.c	/^check_dirname(const char *A, const char *B)$/;"	f	typeref:typename:void	file:
check_entry	extern/libgit2/src/tree.c	/^static int check_entry(git_repository *repo, const char *filename, const git_oid *id, git_filemo/;"	f	typeref:typename:int	file:
check_eol	extern/libgit2/src/crlf.c	/^static git_configmap_value check_eol(const char *value)$/;"	f	typeref:typename:git_configmap_value	file:
check_error	extern/libgit2/examples/general.c	/^static void check_error(int error_code, const char *action)$/;"	f	typeref:typename:void	file:
check_escape	extern/libgit2/deps/pcre/pcre_compile.c	/^check_escape(const pcre_uchar **ptrptr, pcre_uint32 *chptr, int *errorcodeptr,$/;"	f	typeref:typename:int	file:
check_file_contents	extern/libgit2/tests/checkout/checkout_helpers.h	/^#define check_file_contents(/;"	d
check_file_contents_nocr	extern/libgit2/tests/checkout/checkout_helpers.h	/^#define check_file_contents_nocr(/;"	d
check_file_directory_collision	extern/libgit2/src/index.c	/^static int check_file_directory_collision(git_index *index,$/;"	f	typeref:typename:int	file:
check_filenames	extern/libgit2/src/patch_parse.c	/^static int check_filenames(git_patch_parsed *patch)$/;"	f	typeref:typename:int	file:
check_fromurl	extern/libgit2/tests/core/path.c	/^static void check_fromurl(const char *expected_result, const char *input, int should_fail)$/;"	f	typeref:typename:void	file:
check_get_multivar	extern/libgit2/tests/config/multivar.c	/^static void check_get_multivar(git_config *cfg, int expected)$/;"	f	typeref:typename:void	file:
check_get_multivar_foreach	extern/libgit2/tests/config/multivar.c	/^static void check_get_multivar_foreach($/;"	f	typeref:typename:void	file:
check_glob_iter	extern/libgit2/tests/config/read.c	/^static void check_glob_iter(git_config *cfg, const char *regexp, int expected)$/;"	f	typeref:typename:void	file:
check_global_searchpath	extern/libgit2/tests/core/env.c	/^static void check_global_searchpath($/;"	f	typeref:typename:void	file:
check_header_names	extern/libgit2/src/patch_parse.c	/^int check_header_names($/;"	f	typeref:typename:int
check_host_name	extern/libgit2/src/streams/openssl.c	/^static int check_host_name(const char *name, const char *host)$/;"	f	typeref:typename:int	file:
check_hspace	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_hspace(compiler_common *common)$/;"	f	typeref:typename:void	file:
check_index_range	extern/libgit2/tests/iterator/index.c	/^static void check_index_range($/;"	f	typeref:typename:void	file:
check_invariant	extern/libgit2/src/tsort.c	/^static int check_invariant(struct tsort_run *stack, ssize_t stack_curr)$/;"	f	typeref:typename:int	file:
check_joinbuf_2	extern/libgit2/tests/core/buffer.c	/^check_joinbuf_2($/;"	f	typeref:typename:void	file:
check_joinbuf_n_2	extern/libgit2/tests/core/buffer.c	/^check_joinbuf_n_2($/;"	f	typeref:typename:void	file:
check_joinbuf_n_4	extern/libgit2/tests/core/buffer.c	/^check_joinbuf_n_4($/;"	f	typeref:typename:void	file:
check_joinbuf_overlapped	extern/libgit2/tests/core/buffer.c	/^check_joinbuf_overlapped($/;"	f	typeref:typename:void	file:
check_joinpath	extern/libgit2/tests/core/path.c	/^check_joinpath(const char *path_a, const char *path_b, const char *expected_path)$/;"	f	typeref:typename:void	file:
check_joinpath_n	extern/libgit2/tests/core/path.c	/^check_joinpath_n($/;"	f	typeref:typename:void	file:
check_lg2	extern/libgit2/examples/common.c	/^void check_lg2(int error, const char *message, const char *extra)$/;"	f	typeref:typename:void
check_lookbehind	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL check_lookbehind;            \/* Lookbehinds need later checking *\/$/;"	m	struct:compile_data	typeref:typename:BOOL
check_lref	extern/libgit2/src/push.c	/^static int check_lref(git_push *push, char *ref)$/;"	f	typeref:typename:int	file:
check_mailmap_entries	extern/libgit2/tests/mailmap/parsing.c	/^static void check_mailmap_entries($/;"	f	typeref:typename:void	file:
check_mailmap_resolve	extern/libgit2/tests/mailmap/parsing.c	/^static void check_mailmap_resolve($/;"	f	typeref:typename:void	file:
check_match	extern/libgit2/deps/zlib/deflate.c	/^#  define check_match(/;"	d	file:
check_match	extern/libgit2/deps/zlib/deflate.c	/^local void check_match(s, start, match, length)$/;"	f
check_mode	extern/libgit2/tests/core/mkdir.c	/^#define check_mode(/;"	d	file:
check_mode_at_line	extern/libgit2/tests/core/mkdir.c	/^static void check_mode_at_line($/;"	f	typeref:typename:void	file:
check_newlinechar	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_newlinechar(compiler_common *common, int nltype, jump_list **backtracks, BOOL /;"	f	typeref:typename:void	file:
check_object_connectivity	extern/libgit2/src/indexer.c	/^static int check_object_connectivity(git_indexer *idx, const git_rawobj *obj)$/;"	f	typeref:typename:int	file:
check_object_files	extern/libgit2/tests/object/raw/write.c	/^static void check_object_files(object_data *d)$/;"	f	typeref:typename:void	file:
check_one_assign	extern/libgit2/tests/attr/file.c	/^static void check_one_assign($/;"	f	typeref:typename:void	file:
check_one_walkup_step	extern/libgit2/tests/core/path.c	/^static int check_one_walkup_step(void *ref, const char *path)$/;"	f	typeref:typename:int	file:
check_opcode_types	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static BOOL check_opcode_types(compiler_common *common, pcre_uchar *cc, pcre_uchar *ccend)$/;"	f	typeref:typename:BOOL	file:
check_partial	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_partial(compiler_common *common, BOOL force)$/;"	f	typeref:typename:void	file:
check_partial_oid	extern/libgit2/tests/object/raw/convert.c	/^static void check_partial_oid($/;"	f	typeref:typename:void	file:
check_patch	extern/libgit2/src/patch_parse.c	/^static int check_patch(git_patch_parsed *patch)$/;"	f	typeref:typename:int	file:
check_path_to_dir	extern/libgit2/tests/core/path.c	/^check_path_to_dir($/;"	f	typeref:typename:void	file:
check_percent_decoding	extern/libgit2/tests/core/path.c	/^static void check_percent_decoding(const char *expected_result, const char *input)$/;"	f	typeref:typename:void	file:
check_posix_name	extern/libgit2/deps/pcre/pcre_compile.c	/^check_posix_name(const pcre_uchar *ptr, int len)$/;"	f	typeref:typename:int	file:
check_posix_syntax	extern/libgit2/deps/pcre/pcre_compile.c	/^check_posix_syntax(const pcre_uchar *ptr, const pcre_uchar **endptr)$/;"	f	typeref:typename:BOOL	file:
check_prefix	extern/libgit2/src/patch_parse.c	/^static int check_prefix($/;"	f	typeref:typename:int	file:
check_removal_cb	extern/libgit2/tests/diff/patch.c	/^static int check_removal_cb($/;"	f	typeref:typename:int	file:
check_repositoryformatversion	extern/libgit2/src/repository.c	/^static int check_repositoryformatversion(git_config *config)$/;"	f	typeref:typename:int	file:
check_rref	extern/libgit2/src/push.c	/^static int check_rref(char *ref)$/;"	f	typeref:typename:int	file:
check_safecrlf	extern/libgit2/src/crlf.c	/^GIT_INLINE(int) check_safecrlf($/;"	f	typeref:typename:int
check_single_patch_stats	extern/libgit2/tests/diff/patch.c	/^static void check_single_patch_stats($/;"	f	typeref:typename:void	file:
check_some_bits	extern/libgit2/tests/core/bitvec.c	/^static void check_some_bits(git_bitvec *bv, size_t length)$/;"	f	typeref:typename:void	file:
check_ssh_auth_methods	extern/libgit2/tests/online/clone.c	/^static int check_ssh_auth_methods(git_cred **cred, const char *url, const char *username_from_ur/;"	f	typeref:typename:int	file:
check_start_used_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void check_start_used_ptr(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
check_stat_data	extern/libgit2/tests/index/addall.c	/^static void check_stat_data(git_index *index, const char *path, bool match)$/;"	f	typeref:typename:void	file:
check_status	extern/libgit2/tests/index/addall.c	/^#define check_status(/;"	d	file:
check_status	extern/libgit2/tests/status/renames.c	/^static void check_status($/;"	f	typeref:typename:void	file:
check_status0	extern/libgit2/tests/status/worktree.c	/^static void check_status0(git_status_list *status)$/;"	f	typeref:typename:void	file:
check_status_at_line	extern/libgit2/tests/index/addall.c	/^static void check_status_at_line($/;"	f	typeref:typename:void	file:
check_str_end	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_str_end(compiler_common *common, jump_list **end_reached)$/;"	f	typeref:typename:void	file:
check_string_to_dir	extern/libgit2/tests/core/path.c	/^check_string_to_dir($/;"	f	typeref:typename:void	file:
check_string_to_number_format	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool check_string_to_number_format(const char_t* string)$/;"	f	typeref:typename:PUGI__FN bool
check_topdir	extern/libgit2/tests/core/path.c	/^check_topdir(const char *A, const char *B)$/;"	f	typeref:typename:void	file:
check_tree_entry	extern/libgit2/tests/iterator/tree.c	/^static void check_tree_entry($/;"	f	typeref:typename:void	file:
check_tree_range	extern/libgit2/tests/iterator/tree.c	/^static void check_tree_range($/;"	f	typeref:typename:void	file:
check_type_combination	extern/libgit2/src/object.c	/^static int check_type_combination(git_object_t type, git_object_t target)$/;"	f	typeref:typename:int	file:
check_vspace	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_vspace(compiler_common *common)$/;"	f	typeref:typename:void	file:
check_walkup_info	extern/libgit2/tests/core/path.c	/^} check_walkup_info;$/;"	t	typeref:struct:__anon2f3ed9fe0108	file:
check_wd_first_through_third_range	extern/libgit2/tests/iterator/workdir.c	/^static void check_wd_first_through_third_range($/;"	f	typeref:typename:void	file:
check_wordboundary	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_wordboundary(compiler_common *common)$/;"	f	typeref:typename:void	file:
checkout_action	extern/libgit2/src/checkout.c	/^static int checkout_action($/;"	f	typeref:typename:int	file:
checkout_action_common	extern/libgit2/src/checkout.c	/^static int checkout_action_common($/;"	f	typeref:typename:int	file:
checkout_action_no_wd	extern/libgit2/src/checkout.c	/^static int checkout_action_no_wd($/;"	f	typeref:typename:int	file:
checkout_action_wd_only	extern/libgit2/src/checkout.c	/^static int checkout_action_wd_only($/;"	f	typeref:typename:int	file:
checkout_action_with_wd	extern/libgit2/src/checkout.c	/^static int checkout_action_with_wd($/;"	f	typeref:typename:int	file:
checkout_action_with_wd_blocker	extern/libgit2/src/checkout.c	/^static int checkout_action_with_wd_blocker($/;"	f	typeref:typename:int	file:
checkout_action_with_wd_dir	extern/libgit2/src/checkout.c	/^static int checkout_action_with_wd_dir($/;"	f	typeref:typename:int	file:
checkout_action_with_wd_dir_empty	extern/libgit2/src/checkout.c	/^static int checkout_action_with_wd_dir_empty($/;"	f	typeref:typename:int	file:
checkout_blob	extern/libgit2/src/checkout.c	/^static int checkout_blob($/;"	f	typeref:typename:int	file:
checkout_branch	extern/libgit2/include/git2/clone.h	/^	const char* checkout_branch;$/;"	m	struct:git_clone_options	typeref:typename:const char *
checkout_branch	extern/libgit2/src/clone.c	/^static int checkout_branch(git_repository *repo, git_remote *remote, const git_checkout_options /;"	f	typeref:typename:int	file:
checkout_cancel_at	extern/libgit2/tests/checkout/tree.c	/^struct checkout_cancel_at {$/;"	s	file:
checkout_cancel_cb	extern/libgit2/tests/checkout/tree.c	/^static int checkout_cancel_cb($/;"	f	typeref:typename:int	file:
checkout_conflict_add	extern/libgit2/src/checkout.c	/^static int checkout_conflict_add($/;"	f	typeref:typename:int	file:
checkout_conflict_append_remove	extern/libgit2/src/checkout.c	/^static int checkout_conflict_append_remove($/;"	f	typeref:typename:int	file:
checkout_conflict_append_update	extern/libgit2/src/checkout.c	/^static int checkout_conflict_append_update($/;"	f	typeref:typename:int	file:
checkout_conflict_count_cb	extern/libgit2/tests/checkout/tree.c	/^static int checkout_conflict_count_cb($/;"	f	typeref:typename:int	file:
checkout_conflict_detect_binary	extern/libgit2/src/checkout.c	/^GIT_INLINE(int) checkout_conflict_detect_binary(git_repository *repo, checkout_conflictdata *con/;"	f	typeref:typename:int
checkout_conflict_detect_submodule	extern/libgit2/src/checkout.c	/^GIT_INLINE(int) checkout_conflict_detect_submodule(checkout_conflictdata *conflict)$/;"	f	typeref:typename:int
checkout_conflict_update_index	extern/libgit2/src/checkout.c	/^static int checkout_conflict_update_index($/;"	f	typeref:typename:int	file:
checkout_conflictdata	extern/libgit2/src/checkout.c	/^} checkout_conflictdata;$/;"	t	typeref:struct:__anonbac5d6240308	file:
checkout_conflictdata_cmp	extern/libgit2/src/checkout.c	/^static int checkout_conflictdata_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
checkout_conflictdata_empty	extern/libgit2/src/checkout.c	/^int checkout_conflictdata_empty($/;"	f	typeref:typename:int
checkout_conflicts_cmp_ancestor	extern/libgit2/src/checkout.c	/^static int checkout_conflicts_cmp_ancestor(const void *p, const void *c)$/;"	f	typeref:typename:int	file:
checkout_conflicts_cmp_entry	extern/libgit2/src/checkout.c	/^GIT_INLINE(int) checkout_conflicts_cmp_entry($/;"	f	typeref:typename:int
checkout_conflicts_coalesce_renames	extern/libgit2/src/checkout.c	/^static int checkout_conflicts_coalesce_renames($/;"	f	typeref:typename:int	file:
checkout_conflicts_foreach	extern/libgit2/src/checkout.c	/^static int checkout_conflicts_foreach($/;"	f	typeref:typename:int	file:
checkout_conflicts_load	extern/libgit2/src/checkout.c	/^static int checkout_conflicts_load(checkout_data *data, git_iterator *workdir, git_vector *paths/;"	f	typeref:typename:int	file:
checkout_conflicts_load_byname_entry	extern/libgit2/src/checkout.c	/^static int checkout_conflicts_load_byname_entry($/;"	f	typeref:typename:int	file:
checkout_conflicts_mark_directoryfile	extern/libgit2/src/checkout.c	/^static int checkout_conflicts_mark_directoryfile($/;"	f	typeref:typename:int	file:
checkout_conflicts_search_ancestor	extern/libgit2/src/checkout.c	/^static checkout_conflictdata *checkout_conflicts_search_ancestor($/;"	f	typeref:typename:checkout_conflictdata *	file:
checkout_conflicts_search_branch	extern/libgit2/src/checkout.c	/^static checkout_conflictdata *checkout_conflicts_search_branch($/;"	f	typeref:typename:checkout_conflictdata *	file:
checkout_count_callback	extern/libgit2/tests/checkout/checkout_helpers.c	/^int checkout_count_callback($/;"	f	typeref:typename:int
checkout_counts	extern/libgit2/tests/checkout/checkout_helpers.h	/^} checkout_counts;$/;"	t	typeref:struct:__anonc1a5ebab0108
checkout_create_conflicts	extern/libgit2/src/checkout.c	/^static int checkout_create_conflicts(checkout_data *data)$/;"	f	typeref:typename:int	file:
checkout_create_submodules	extern/libgit2/src/checkout.c	/^static int checkout_create_submodules($/;"	f	typeref:typename:int	file:
checkout_create_the_new	extern/libgit2/src/checkout.c	/^static int checkout_create_the_new($/;"	f	typeref:typename:int	file:
checkout_data	extern/libgit2/src/checkout.c	/^} checkout_data;$/;"	t	typeref:struct:__anonbac5d6240208	file:
checkout_data_clear	extern/libgit2/src/checkout.c	/^static void checkout_data_clear(checkout_data *data)$/;"	f	typeref:typename:void	file:
checkout_data_init	extern/libgit2/src/checkout.c	/^static int checkout_data_init($/;"	f	typeref:typename:int	file:
checkout_deferred_remove	extern/libgit2/src/checkout.c	/^static int checkout_deferred_remove(git_repository *repo, const char *path)$/;"	f	typeref:typename:int	file:
checkout_extensions_update_index	extern/libgit2/src/checkout.c	/^static int checkout_extensions_update_index(checkout_data *data)$/;"	f	typeref:typename:int	file:
checkout_get_actions	extern/libgit2/src/checkout.c	/^static int checkout_get_actions($/;"	f	typeref:typename:int	file:
checkout_get_remove_conflicts	extern/libgit2/src/checkout.c	/^static int checkout_get_remove_conflicts($/;"	f	typeref:typename:int	file:
checkout_get_update_conflicts	extern/libgit2/src/checkout.c	/^static int checkout_get_update_conflicts($/;"	f	typeref:typename:int	file:
checkout_idxentry_cmp	extern/libgit2/src/checkout.c	/^GIT_INLINE(int) checkout_idxentry_cmp($/;"	f	typeref:typename:int
checkout_index_entry	extern/libgit2/tests/checkout/conflict.c	/^struct checkout_index_entry {$/;"	s	file:
checkout_is_empty_dir	extern/libgit2/src/checkout.c	/^static bool checkout_is_empty_dir(checkout_data *data, const char *path)$/;"	f	typeref:typename:bool	file:
checkout_is_workdir_modified	extern/libgit2/src/checkout.c	/^static bool checkout_is_workdir_modified($/;"	f	typeref:typename:bool	file:
checkout_lookup_head_tree	extern/libgit2/src/checkout.c	/^static int checkout_lookup_head_tree(git_tree **out, git_repository *repo)$/;"	f	typeref:typename:int	file:
checkout_merge_path	extern/libgit2/src/checkout.c	/^static int checkout_merge_path($/;"	f	typeref:typename:int	file:
checkout_message	extern/libgit2/src/repository.c	/^static int checkout_message(git_buf *out, git_reference *old, const char *new)$/;"	f	typeref:typename:int	file:
checkout_mkdir	extern/libgit2/src/checkout.c	/^static int checkout_mkdir($/;"	f	typeref:typename:int	file:
checkout_name_entry	extern/libgit2/tests/checkout/conflict.c	/^struct checkout_name_entry {$/;"	s	file:
checkout_notify	extern/libgit2/src/checkout.c	/^static int checkout_notify($/;"	f	typeref:typename:int	file:
checkout_notify	extern/libgit2/tests/stash/apply.c	/^int checkout_notify($/;"	f	typeref:typename:int
checkout_notify_called	extern/libgit2/tests/submodule/update.c	/^	int checkout_notify_called;$/;"	m	struct:update_submodule_cb_payload	typeref:typename:int	file:
checkout_notify_cb	extern/libgit2/tests/submodule/update.c	/^static int checkout_notify_cb($/;"	f	typeref:typename:int	file:
checkout_options	extern/libgit2/examples/checkout.c	/^} checkout_options;$/;"	t	typeref:struct:__anon96974fbb0108	file:
checkout_options	extern/libgit2/include/git2/rebase.h	/^	git_checkout_options checkout_options;$/;"	m	struct:__anona97543260108	typeref:typename:git_checkout_options
checkout_options	extern/libgit2/include/git2/stash.h	/^	git_checkout_options checkout_options;$/;"	m	struct:git_stash_apply_options	typeref:typename:git_checkout_options
checkout_opts	extern/libgit2/include/git2/cherrypick.h	/^	git_checkout_options checkout_opts; \/**< Options for the checkout *\/$/;"	m	struct:__anon46ced4e80108	typeref:typename:git_checkout_options
checkout_opts	extern/libgit2/include/git2/clone.h	/^	git_checkout_options checkout_opts;$/;"	m	struct:git_clone_options	typeref:typename:git_checkout_options
checkout_opts	extern/libgit2/include/git2/revert.h	/^	git_checkout_options checkout_opts; \/**< Options for the checkout *\/$/;"	m	struct:__anond864852c0108	typeref:typename:git_checkout_options
checkout_opts	extern/libgit2/include/git2/submodule.h	/^	git_checkout_options checkout_opts;$/;"	m	struct:git_submodule_update_options	typeref:typename:git_checkout_options
checkout_opts	extern/libgit2/tests/checkout/icase.c	/^static git_checkout_options checkout_opts;$/;"	v	typeref:typename:git_checkout_options	file:
checkout_opts	extern/libgit2/tests/checkout/nasty.c	/^static git_checkout_options checkout_opts;$/;"	v	typeref:typename:git_checkout_options	file:
checkout_path_suffixed	extern/libgit2/src/checkout.c	/^static int checkout_path_suffixed(git_buf *path, const char *suffix)$/;"	f	typeref:typename:int	file:
checkout_progress	extern/libgit2/examples/clone.c	/^static void checkout_progress(const char *path, size_t cur, size_t tot, void *payload)$/;"	f	typeref:typename:void	file:
checkout_progress	extern/libgit2/tests/online/clone.c	/^static void checkout_progress(const char *path, size_t cur, size_t tot, void *payload)$/;"	f	typeref:typename:void	file:
checkout_progress_called	extern/libgit2/tests/submodule/update.c	/^	int checkout_progress_called;$/;"	m	struct:update_submodule_cb_payload	typeref:typename:int	file:
checkout_progress_cb	extern/libgit2/tests/submodule/update.c	/^static void checkout_progress_cb($/;"	f	typeref:typename:void	file:
checkout_progress_counter	extern/libgit2/tests/checkout/index.c	/^static void checkout_progress_counter($/;"	f	typeref:typename:void	file:
checkout_queue_remove	extern/libgit2/src/checkout.c	/^static int checkout_queue_remove(checkout_data *data, const char *path)$/;"	f	typeref:typename:int	file:
checkout_remaining_wd_items	extern/libgit2/src/checkout.c	/^static int checkout_remaining_wd_items($/;"	f	typeref:typename:int	file:
checkout_remove_conflicts	extern/libgit2/src/checkout.c	/^static int checkout_remove_conflicts(checkout_data *data)$/;"	f	typeref:typename:int	file:
checkout_remove_the_old	extern/libgit2/src/checkout.c	/^static int checkout_remove_the_old($/;"	f	typeref:typename:int	file:
checkout_safe_for_update_only	extern/libgit2/src/checkout.c	/^static int checkout_safe_for_update_only($/;"	f	typeref:typename:int	file:
checkout_strategy	extern/libgit2/include/git2/checkout.h	/^	unsigned int checkout_strategy; \/**< default will be a safe checkout *\/$/;"	m	struct:git_checkout_options	typeref:typename:unsigned int
checkout_stream	extern/libgit2/src/checkout.c	/^struct checkout_stream {$/;"	s	file:
checkout_stream_close	extern/libgit2/src/checkout.c	/^static int checkout_stream_close(git_writestream *s)$/;"	f	typeref:typename:int	file:
checkout_stream_free	extern/libgit2/src/checkout.c	/^static void checkout_stream_free(git_writestream *s)$/;"	f	typeref:typename:void	file:
checkout_stream_write	extern/libgit2/src/checkout.c	/^static int checkout_stream_write($/;"	f	typeref:typename:int	file:
checkout_submodule	extern/libgit2/src/checkout.c	/^static int checkout_submodule($/;"	f	typeref:typename:int	file:
checkout_submodule_update_index	extern/libgit2/src/checkout.c	/^static int checkout_submodule_update_index($/;"	f	typeref:typename:int	file:
checkout_target_fullpath	extern/libgit2/src/checkout.c	/^static int checkout_target_fullpath($/;"	f	typeref:typename:int	file:
checkout_tree_with_blob_ignored_in_workdir	extern/libgit2/tests/checkout/tree.c	/^static int checkout_tree_with_blob_ignored_in_workdir(int strategy, bool isdir)$/;"	f	typeref:typename:int	file:
checkout_update_index	extern/libgit2/src/checkout.c	/^static int checkout_update_index($/;"	f	typeref:typename:int	file:
checkout_verify_paths	extern/libgit2/src/checkout.c	/^static int checkout_verify_paths($/;"	f	typeref:typename:int	file:
checkout_write_content	extern/libgit2/src/checkout.c	/^static int checkout_write_content($/;"	f	typeref:typename:int	file:
checkout_write_entries	extern/libgit2/src/checkout.c	/^static int checkout_write_entries($/;"	f	typeref:typename:int	file:
checkout_write_entry	extern/libgit2/src/checkout.c	/^static int checkout_write_entry($/;"	f	typeref:typename:int	file:
checkout_write_merge	extern/libgit2/src/checkout.c	/^static int checkout_write_merge($/;"	f	typeref:typename:int	file:
checksum	extern/libgit2/src/config_file.c	/^	git_oid checksum;$/;"	m	struct:config_file	typeref:typename:git_oid	file:
checksum	extern/libgit2/src/index.h	/^	git_oid checksum;   \/* checksum at the end of the file *\/$/;"	m	struct:git_index	typeref:typename:git_oid
cherrypick_normalize_opts	extern/libgit2/src/cherrypick.c	/^static int cherrypick_normalize_opts($/;"	f	typeref:typename:int	file:
cherrypick_seterr	extern/libgit2/src/cherrypick.c	/^static int cherrypick_seterr(git_commit *commit, const char *fmt)$/;"	f	typeref:typename:int	file:
cherrypick_state_cleanup	extern/libgit2/src/cherrypick.c	/^static int cherrypick_state_cleanup(git_repository *repo)$/;"	f	typeref:typename:int	file:
chg0	extern/libgit2/src/xdiff/xmerge.c	/^	long chg0;$/;"	m	struct:s_xdmerge	typeref:typename:long	file:
chg1	extern/libgit2/src/xdiff/xdiffi.h	/^	long chg1, chg2;$/;"	m	struct:s_xdchange	typeref:typename:long
chg1	extern/libgit2/src/xdiff/xmerge.c	/^	long chg1, chg2;$/;"	m	struct:s_xdmerge	typeref:typename:long	file:
chg2	extern/libgit2/src/xdiff/xdiffi.h	/^	long chg1, chg2;$/;"	m	struct:s_xdchange	typeref:typename:long
chg2	extern/libgit2/src/xdiff/xmerge.c	/^	long chg1, chg2;$/;"	m	struct:s_xdmerge	typeref:typename:long	file:
child	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::child(const char_t* name_) const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
child_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const char_t* xml_node::child_value() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN const char_t *
child_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const char_t* xml_node::child_value(const char_t* name_) const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN const char_t *
children	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_object_range<xml_named_node_iterator> xml_node::children(const char_t* name_) c/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_object_range<xml_named_node_iterator>
children	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_object_range<xml_node_iterator> xml_node::children() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_object_range<xml_node_iterator>
children	extern/libgit2/src/oid.c	/^	node_index children[16];$/;"	m	union:__anonfbfa448a010a	typeref:typename:node_index[16]	file:
children	extern/libgit2/src/tree-cache.h	/^	struct git_tree_cache **children;$/;"	m	struct:git_tree_cache	typeref:struct:git_tree_cache **
children_count	extern/libgit2/src/tree-cache.h	/^	size_t children_count;$/;"	m	struct:git_tree_cache	typeref:typename:size_t
chmod_calls	extern/libgit2/include/git2/checkout.h	/^	size_t chmod_calls;$/;"	m	struct:__anon4996472a0308	typeref:typename:size_t
chmod_calls	extern/libgit2/src/futils.h	/^	size_t chmod_calls;$/;"	m	struct:git_futils_mkdir_perfdata	typeref:typename:size_t
chr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^      pcre_uchar chr;$/;"	m	struct:char_iterator_backtrack::__anon313b80c3020a::__anon313b80c30308	typeref:typename:pcre_uchar	file:
chunk_buffer	extern/libgit2/src/transports/http.c	/^	char *chunk_buffer;$/;"	m	struct:__anon0458035d0108	typeref:typename:char *	file:
chunk_buffer	extern/libgit2/src/transports/winhttp.c	/^	char *chunk_buffer;$/;"	m	struct:__anon981dd28b0208	typeref:typename:char *	file:
chunk_buffer_len	extern/libgit2/src/transports/http.c	/^	unsigned chunk_buffer_len;$/;"	m	struct:__anon0458035d0108	typeref:typename:unsigned	file:
chunk_buffer_len	extern/libgit2/src/transports/winhttp.c	/^	unsigned chunk_buffer_len;$/;"	m	struct:__anon981dd28b0208	typeref:typename:unsigned	file:
chunked	extern/libgit2/src/transports/http.c	/^		chunked : 1;$/;"	m	struct:__anon0458035d0108	typeref:typename:unsigned:1	file:
chunked	extern/libgit2/src/transports/winhttp.c	/^		chunked : 1;$/;"	m	struct:__anon981dd28b0208	typeref:typename:unsigned:1	file:
ciphers_list	extern/libgit2/src/streams/mbedtls.c	/^static int ciphers_list[GIT_SSL_DEFAULT_CIPHERS_COUNT];$/;"	v	typeref:typename:int[]	file:
cl_assert	extern/libgit2/tests/clar.h	/^#define cl_assert(/;"	d
cl_assert_	extern/libgit2/tests/clar.h	/^#define cl_assert_(/;"	d
cl_assert_at_line	extern/libgit2/tests/clar_libgit2.h	/^#define cl_assert_at_line(/;"	d
cl_assert_equal_b	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_b(/;"	d
cl_assert_equal_file	extern/libgit2/tests/clar_libgit2.h	/^#define cl_assert_equal_file(/;"	d
cl_assert_equal_file_ignore_cr	extern/libgit2/tests/clar_libgit2.h	/^#define cl_assert_equal_file_ignore_cr(/;"	d
cl_assert_equal_i	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_i(/;"	d
cl_assert_equal_i_	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_i_(/;"	d
cl_assert_equal_i_fmt	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_i_fmt(/;"	d
cl_assert_equal_i_src	extern/libgit2/tests/diff/parse.c	/^#define cl_assert_equal_i_src(/;"	d	file:
cl_assert_equal_oid	extern/libgit2/tests/clar_libgit2.h	/^#define cl_assert_equal_oid(/;"	d
cl_assert_equal_p	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_p(/;"	d
cl_assert_equal_s	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_s(/;"	d
cl_assert_equal_s_	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_s_(/;"	d
cl_assert_equal_strn	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_strn(/;"	d
cl_assert_equal_strn_	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_strn_(/;"	d
cl_assert_equal_sz	extern/libgit2/tests/clar_libgit2.h	/^#define cl_assert_equal_sz(/;"	d
cl_assert_equal_wcs	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_wcs(/;"	d
cl_assert_equal_wcs_	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_wcs_(/;"	d
cl_assert_equal_wcsn	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_wcsn(/;"	d
cl_assert_equal_wcsn_	extern/libgit2/tests/clar.h	/^#define cl_assert_equal_wcsn_(/;"	d
cl_assert_error	extern/libgit2/tests/core/stat.c	/^#define cl_assert_error(/;"	d	file:
cl_assert_in_range	extern/libgit2/tests/clar_libgit2.h	/^#define cl_assert_in_range(/;"	d
cl_check	extern/libgit2/tests/clar.h	/^#define cl_check(/;"	d
cl_check_	extern/libgit2/tests/clar.h	/^#define cl_check_(/;"	d
cl_check_fail	extern/libgit2/tests/clar.h	/^#define cl_check_fail(/;"	d
cl_check_fail_	extern/libgit2/tests/clar.h	/^#define cl_check_fail_(/;"	d
cl_check_pass	extern/libgit2/tests/clar.h	/^#define cl_check_pass(/;"	d
cl_check_pass_	extern/libgit2/tests/clar.h	/^#define cl_check_pass_(/;"	d
cl_fail	extern/libgit2/tests/clar.h	/^#define cl_fail(/;"	d
cl_fake_home	extern/libgit2/tests/clar_libgit2.c	/^void cl_fake_home(void)$/;"	f	typeref:typename:void
cl_fake_home_cleanup	extern/libgit2/tests/clar_libgit2.c	/^void cl_fake_home_cleanup(void *payload)$/;"	f	typeref:typename:void
cl_fixture	extern/libgit2/tests/clar/fixtures.h	/^const char *cl_fixture(const char *fixture_name)$/;"	f	typeref:typename:const char *
cl_fixture_basename	extern/libgit2/tests/clar/fixtures.h	/^const char *cl_fixture_basename(const char *fixture_name)$/;"	f	typeref:typename:const char *
cl_fixture_cleanup	extern/libgit2/tests/clar/fixtures.h	/^void cl_fixture_cleanup(const char *fixture_name)$/;"	f	typeref:typename:void
cl_fixture_sandbox	extern/libgit2/tests/clar/fixtures.h	/^void cl_fixture_sandbox(const char *fixture_name)$/;"	f	typeref:typename:void
cl_fs_cleanup	extern/libgit2/tests/clar/fs.h	/^cl_fs_cleanup(void)$/;"	f	typeref:typename:void
cl_getenv	extern/libgit2/tests/clar_libgit2.c	/^char *cl_getenv(const char *name)$/;"	f	typeref:typename:char *
cl_git_append2file	extern/libgit2/tests/clar_libgit2.c	/^void cl_git_append2file(const char *path, const char *content)$/;"	f	typeref:typename:void
cl_git_assert_lineinfo	extern/libgit2/tests/diff/parse.c	/^#define cl_git_assert_lineinfo(/;"	d	file:
cl_git_assert_lineinfo_	extern/libgit2/tests/diff/parse.c	/^static void cl_git_assert_lineinfo_(int old_lineno, int new_lineno, int num_lines, git_patch *pa/;"	f	typeref:typename:void	file:
cl_git_expect	extern/libgit2/tests/clar_libgit2.h	/^#define cl_git_expect(/;"	d
cl_git_fail	extern/libgit2/tests/clar_libgit2.h	/^#define cl_git_fail(/;"	d
cl_git_fail_at_line	extern/libgit2/tests/repo/env.c	/^#define cl_git_fail_at_line(/;"	d	file:
cl_git_fail_with	extern/libgit2/tests/clar_libgit2.h	/^#define cl_git_fail_with(/;"	d
cl_git_fixture_url	extern/libgit2/tests/clar_libgit2.c	/^const char* cl_git_fixture_url(const char *fixturename)$/;"	f	typeref:typename:const char *
cl_git_mkfile	extern/libgit2/tests/clar_libgit2.c	/^void cl_git_mkfile(const char *filename, const char *content)$/;"	f	typeref:typename:void
cl_git_pass	extern/libgit2/tests/clar_libgit2.h	/^#define cl_git_pass(/;"	d
cl_git_path_url	extern/libgit2/tests/clar_libgit2.c	/^const char* cl_git_path_url(const char *path)$/;"	f	typeref:typename:const char *
cl_git_remove_placeholders	extern/libgit2/tests/clar_libgit2.c	/^int cl_git_remove_placeholders(const char *directory_path, const char *filename)$/;"	f	typeref:typename:int
cl_git_report_failure	extern/libgit2/tests/clar_libgit2.c	/^void cl_git_report_failure($/;"	f	typeref:typename:void
cl_git_rewritefile	extern/libgit2/tests/clar_libgit2.c	/^void cl_git_rewritefile(const char *path, const char *content)$/;"	f	typeref:typename:void
cl_git_rmfile	extern/libgit2/tests/clar_libgit2.c	/^void cl_git_rmfile(const char *filename)$/;"	f	typeref:typename:void
cl_git_sandbox_cleanup	extern/libgit2/tests/clar_libgit2.c	/^void cl_git_sandbox_cleanup(void)$/;"	f	typeref:typename:void
cl_git_sandbox_init	extern/libgit2/tests/clar_libgit2.c	/^git_repository *cl_git_sandbox_init(const char *sandbox)$/;"	f	typeref:typename:git_repository *
cl_git_sandbox_init_new	extern/libgit2/tests/clar_libgit2.c	/^git_repository *cl_git_sandbox_init_new(const char *sandbox)$/;"	f	typeref:typename:git_repository *
cl_git_sandbox_path	extern/libgit2/tests/clar_libgit2.c	/^const char *cl_git_sandbox_path(int is_dir, ...)$/;"	f	typeref:typename:const char *
cl_git_sandbox_reopen	extern/libgit2/tests/clar_libgit2.c	/^git_repository *cl_git_sandbox_reopen(void)$/;"	f	typeref:typename:git_repository *
cl_git_thread_check	extern/libgit2/tests/clar_libgit2.h	/^GIT_INLINE(void) cl_git_thread_check(void *data)$/;"	f	typeref:typename:void
cl_git_thread_err	extern/libgit2/tests/clar_libgit2.h	/^} cl_git_thread_err;$/;"	t	typeref:struct:__anonc7d6e3cc0108
cl_git_thread_pass	extern/libgit2/tests/clar_libgit2.h	/^# define cl_git_thread_pass(/;"	d
cl_git_thread_pass_	extern/libgit2/tests/clar_libgit2.h	/^#define cl_git_thread_pass_(/;"	d
cl_git_write2file	extern/libgit2/tests/clar_libgit2.c	/^void cl_git_write2file($/;"	f	typeref:typename:void
cl_global_trace_disable	extern/libgit2/tests/clar_libgit2_trace.c	/^void cl_global_trace_disable(void)$/;"	f	typeref:typename:void
cl_global_trace_register	extern/libgit2/tests/clar_libgit2_trace.c	/^void cl_global_trace_register(void)$/;"	f	typeref:typename:void
cl_is_chmod_supported	extern/libgit2/tests/clar_libgit2.c	/^bool cl_is_chmod_supported(void)$/;"	f	typeref:typename:bool
cl_is_env_set	extern/libgit2/tests/clar_libgit2.c	/^bool cl_is_env_set(const char *name)$/;"	f	typeref:typename:bool
cl_msleep	extern/libgit2/tests/clar_libgit2.h	/^# define cl_msleep(/;"	d
cl_must_fail	extern/libgit2/tests/clar.h	/^#define cl_must_fail(/;"	d
cl_must_fail_	extern/libgit2/tests/clar.h	/^#define cl_must_fail_(/;"	d
cl_must_pass	extern/libgit2/tests/clar.h	/^#define cl_must_pass(/;"	d
cl_must_pass_	extern/libgit2/tests/clar.h	/^#define cl_must_pass_(/;"	d
cl_perf_timer	extern/libgit2/tests/clar_libgit2_timer.h	/^struct cl_perf_timer$/;"	s
cl_perf_timer	extern/libgit2/tests/clar_libgit2_timer.h	/^typedef struct cl_perf_timer cl_perf_timer;$/;"	t	typeref:struct:cl_perf_timer
cl_perf_timer__init	extern/libgit2/tests/clar_libgit2_timer.c	/^void cl_perf_timer__init(cl_perf_timer *t)$/;"	f	typeref:typename:void
cl_perf_timer__last	extern/libgit2/tests/clar_libgit2_timer.c	/^double cl_perf_timer__last(const cl_perf_timer *t)$/;"	f	typeref:typename:double
cl_perf_timer__start	extern/libgit2/tests/clar_libgit2_timer.c	/^void cl_perf_timer__start(cl_perf_timer *t)$/;"	f	typeref:typename:void
cl_perf_timer__stop	extern/libgit2/tests/clar_libgit2_timer.c	/^void cl_perf_timer__stop(cl_perf_timer *t)$/;"	f	typeref:typename:void
cl_perf_timer__sum	extern/libgit2/tests/clar_libgit2_timer.c	/^double cl_perf_timer__sum(const cl_perf_timer *t)$/;"	f	typeref:typename:double
cl_reflog_check_entry	extern/libgit2/tests/refs/reflog/reflog_helpers.h	/^#define cl_reflog_check_entry(/;"	d
cl_reflog_check_entry_	extern/libgit2/tests/refs/reflog/reflog_helpers.c	/^void cl_reflog_check_entry_(git_repository *repo, const char *reflog, size_t idx,$/;"	f	typeref:typename:void
cl_rename	extern/libgit2/tests/clar_libgit2.c	/^int cl_rename(const char *source, const char *dest)$/;"	f	typeref:typename:int
cl_repo_commit_from_index	extern/libgit2/tests/clar_libgit2.c	/^void cl_repo_commit_from_index($/;"	f	typeref:typename:void
cl_repo_get_bool	extern/libgit2/tests/clar_libgit2.c	/^int cl_repo_get_bool(git_repository *repo, const char *cfg)$/;"	f	typeref:typename:int
cl_repo_set_bool	extern/libgit2/tests/clar_libgit2.c	/^void cl_repo_set_bool(git_repository *repo, const char *cfg, int value)$/;"	f	typeref:typename:void
cl_repo_set_string	extern/libgit2/tests/clar_libgit2.c	/^void cl_repo_set_string(git_repository *repo, const char *cfg, const char *value)$/;"	f	typeref:typename:void
cl_sandbox_set_search_path_defaults	extern/libgit2/tests/clar_libgit2.c	/^void cl_sandbox_set_search_path_defaults(void)$/;"	f	typeref:typename:void
cl_sandbox_supports_8dot3	extern/libgit2/tests/clar_libgit2.c	/^bool cl_sandbox_supports_8dot3(void)$/;"	f	typeref:typename:bool
cl_set_cleanup	extern/libgit2/tests/clar.c	/^void cl_set_cleanup(void (*cleanup)(void *), void *opaque)$/;"	f	typeref:typename:void
cl_setenv	extern/libgit2/tests/clar_libgit2.c	/^int cl_setenv(const char *name, const char *value)$/;"	f	typeref:typename:int
cl_setenv_printf	extern/libgit2/tests/repo/env.c	/^static int GIT_FORMAT_PRINTF(2, 3) cl_setenv_printf(const char *name, const char *fmt, ...)$/;"	f	typeref:typename:int GIT_FORMAT_PRINTF (2,3)	file:
cl_skip	extern/libgit2/tests/clar.h	/^#define cl_skip(/;"	d
cl_test_status	extern/libgit2/tests/clar.h	/^enum cl_test_status {$/;"	g
cl_toggle_filemode	extern/libgit2/tests/clar_libgit2.c	/^bool cl_toggle_filemode(const char *filename)$/;"	f	typeref:typename:bool
cl_trace_cb	extern/libgit2/tests/clar.h	/^typedef void (cl_trace_cb)($/;"	t	typeref:typename:void ()(cl_trace_event ev,const char * suite_name,const char * test_name,void * payload)
cl_trace_event	extern/libgit2/tests/clar.h	/^typedef enum cl_trace_event {$/;"	g
cl_trace_event	extern/libgit2/tests/clar.h	/^} cl_trace_event;$/;"	t	typeref:enum:cl_trace_event
cl_trace_register	extern/libgit2/tests/clar.c	/^void cl_trace_register(cl_trace_cb *cb, void *payload)$/;"	f	typeref:typename:void
cl_warning	extern/libgit2/tests/clar.h	/^#define cl_warning(/;"	d
cl_win32_pass	extern/libgit2/tests/clar_libgit2.h	/^#define cl_win32_pass(/;"	d
clar__assert	extern/libgit2/script/user_model.c	/^void clar__assert($/;"	f	typeref:typename:void
clar__assert	extern/libgit2/tests/clar.c	/^void clar__assert($/;"	f	typeref:typename:void
clar__assert_equal	extern/libgit2/tests/clar.c	/^void clar__assert_equal($/;"	f	typeref:typename:void
clar__assert_equal_file	extern/libgit2/tests/clar_libgit2.c	/^void clar__assert_equal_file($/;"	f	typeref:typename:void
clar__assert_equal_oid	extern/libgit2/tests/clar_libgit2.h	/^GIT_INLINE(void) clar__assert_equal_oid($/;"	f	typeref:typename:void
clar__assert_in_range	extern/libgit2/tests/clar_libgit2.h	/^GIT_INLINE(void) clar__assert_in_range($/;"	f	typeref:typename:void
clar__fail	extern/libgit2/script/user_model.c	/^void clar__fail($/;"	f	typeref:typename:void
clar__fail	extern/libgit2/tests/clar.c	/^void clar__fail($/;"	f	typeref:typename:void
clar__skip	extern/libgit2/tests/clar.c	/^void clar__skip(void)$/;"	f	typeref:typename:void
clar_error	extern/libgit2/tests/clar.c	/^struct clar_error {$/;"	s	file:
clar_explicit	extern/libgit2/tests/clar.c	/^struct clar_explicit {$/;"	s	file:
clar_func	extern/libgit2/tests/clar.c	/^struct clar_func {$/;"	s	file:
clar_parse_args	extern/libgit2/tests/clar.c	/^clar_parse_args(int argc, char **argv)$/;"	f	typeref:typename:void	file:
clar_print_error	extern/libgit2/tests/clar/print.h	/^static void clar_print_error(int num, const struct clar_report *report, const struct clar_error /;"	f	typeref:typename:void
clar_print_init	extern/libgit2/tests/clar/print.h	/^static void clar_print_init(int test_count, int suite_count, const char *suite_names)$/;"	f	typeref:typename:void
clar_print_onabort	extern/libgit2/tests/clar/print.h	/^static void clar_print_onabort(const char *msg, ...)$/;"	f	typeref:typename:void
clar_print_onsuite	extern/libgit2/tests/clar/print.h	/^static void clar_print_onsuite(const char *suite_name, int suite_index)$/;"	f	typeref:typename:void
clar_print_ontest	extern/libgit2/tests/clar/print.h	/^static void clar_print_ontest(const char *test_name, int test_number, enum cl_test_status status/;"	f	typeref:typename:void
clar_print_shutdown	extern/libgit2/tests/clar/print.h	/^static void clar_print_shutdown(int test_count, int suite_count, int error_count)$/;"	f	typeref:typename:void
clar_report	extern/libgit2/tests/clar.c	/^struct clar_report {$/;"	s	file:
clar_report_all	extern/libgit2/tests/clar.c	/^clar_report_all(void)$/;"	f	typeref:typename:void	file:
clar_report_errors	extern/libgit2/tests/clar.c	/^clar_report_errors(struct clar_report *report)$/;"	f	typeref:typename:void	file:
clar_run_suite	extern/libgit2/tests/clar.c	/^clar_run_suite(const struct clar_suite *suite, const char *filter)$/;"	f	typeref:typename:void	file:
clar_run_test	extern/libgit2/tests/clar.c	/^clar_run_test($/;"	f	typeref:typename:void	file:
clar_sandbox	extern/libgit2/tests/clar/sandbox.h	/^static int clar_sandbox(void)$/;"	f	typeref:typename:int
clar_sandbox_path	extern/libgit2/tests/clar/sandbox.h	/^const char *clar_sandbox_path(void)$/;"	f	typeref:typename:const char *
clar_suite	extern/libgit2/tests/clar.c	/^struct clar_suite {$/;"	s	file:
clar_summary	extern/libgit2/tests/clar.c	/^struct clar_summary {$/;"	s	file:
clar_summary_close_tag	extern/libgit2/tests/clar/summary.h	/^int clar_summary_close_tag($/;"	f	typeref:typename:int
clar_summary_failure	extern/libgit2/tests/clar/summary.h	/^int clar_summary_failure(struct clar_summary *summary,$/;"	f	typeref:typename:int
clar_summary_init	extern/libgit2/tests/clar/summary.h	/^struct clar_summary *clar_summary_init(const char *filename)$/;"	f	typeref:struct:clar_summary *
clar_summary_shutdown	extern/libgit2/tests/clar/summary.h	/^int clar_summary_shutdown(struct clar_summary *summary)$/;"	f	typeref:typename:int
clar_summary_testcase	extern/libgit2/tests/clar/summary.h	/^int clar_summary_testcase(struct clar_summary *summary,$/;"	f	typeref:typename:int
clar_summary_testsuite	extern/libgit2/tests/clar/summary.h	/^int clar_summary_testsuite(struct clar_summary *summary,$/;"	f	typeref:typename:int
clar_summary_testsuites	extern/libgit2/tests/clar/summary.h	/^int clar_summary_testsuites(struct clar_summary *summary)$/;"	f	typeref:typename:int
clar_test	extern/libgit2/tests/clar.c	/^clar_test(int argc, char **argv)$/;"	f	typeref:typename:int
clar_test_init	extern/libgit2/tests/clar.c	/^clar_test_init(int argc, char **argv)$/;"	f	typeref:typename:void
clar_test_run	extern/libgit2/tests/clar.c	/^clar_test_run(void)$/;"	f	typeref:typename:int
clar_test_shutdown	extern/libgit2/tests/clar.c	/^clar_test_shutdown(void)$/;"	f	typeref:typename:void
clar_unsandbox	extern/libgit2/tests/clar/sandbox.h	/^static void clar_unsandbox(void)$/;"	f	typeref:typename:void
clar_usage	extern/libgit2/tests/clar.c	/^clar_usage(const char *arg)$/;"	f	typeref:typename:void	file:
clean_name	extern/libgit2/tests/generate.py	/^    def clean_name(self):$/;"	m	class:Module
clean_test_config	extern/libgit2/tests/config/read.c	/^static void clean_test_config(void *unused)$/;"	f	typeref:typename:void	file:
cleanup	extern/libgit2/azure-pipelines/test.sh	/^cleanup() {$/;"	f
cleanup	extern/libgit2/include/git2/sys/filter.h	/^	git_filter_cleanup_fn  cleanup;$/;"	m	struct:git_filter	typeref:typename:git_filter_cleanup_fn
cleanup	extern/libgit2/tests/clar.c	/^	struct clar_func cleanup;$/;"	m	struct:clar_suite	typeref:struct:clar_func	file:
cleanup_1397	extern/libgit2/tests/index/tests.c	/^static void cleanup_1397(void *opaque)$/;"	f	typeref:typename:void	file:
cleanup__remove_file	extern/libgit2/tests/status/single.c	/^cleanup__remove_file(void *_file)$/;"	f	typeref:typename:void	file:
cleanup_basedir	extern/libgit2/tests/core/mkdir.c	/^static void cleanup_basedir(void *ref)$/;"	f	typeref:typename:void	file:
cleanup_basic_dirs	extern/libgit2/tests/core/mkdir.c	/^static void cleanup_basic_dirs(void *ref)$/;"	f	typeref:typename:void	file:
cleanup_chmod_root	extern/libgit2/tests/core/mkdir.c	/^static void cleanup_chmod_root(void *ref)$/;"	f	typeref:typename:void	file:
cleanup_fixture_submodules	extern/libgit2/tests/submodule/submodule_helpers.c	/^static void cleanup_fixture_submodules(void *payload)$/;"	f	typeref:typename:void	file:
cleanup_fixture_worktree	extern/libgit2/tests/worktree/worktree_helpers.c	/^void cleanup_fixture_worktree(worktree_fixture *fixture)$/;"	f	typeref:typename:void
cleanup_local_repo	extern/libgit2/tests/network/fetchlocal.c	/^static void cleanup_local_repo(void *path)$/;"	f	typeref:typename:void	file:
cleanup_myrepo	extern/libgit2/tests/index/tests.c	/^static void cleanup_myrepo(void *opaque)$/;"	f	typeref:typename:void	file:
cleanup_new_repo	extern/libgit2/tests/status/worktree_init.c	/^static void cleanup_new_repo(void *path)$/;"	f	typeref:typename:void	file:
cleanup_repository	extern/libgit2/tests/clone/empty.c	/^static void cleanup_repository(void *path)$/;"	f	typeref:typename:void	file:
cleanup_repository	extern/libgit2/tests/clone/nonetwork.c	/^static void cleanup_repository(void *path)$/;"	f	typeref:typename:void	file:
cleanup_repository	extern/libgit2/tests/fetchhead/nonetwork.c	/^static void cleanup_repository(void *path)$/;"	f	typeref:typename:void	file:
cleanup_repository	extern/libgit2/tests/repo/init.c	/^static void cleanup_repository(void *path)$/;"	f	typeref:typename:void	file:
clear	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void clear()$/;"	f	class:compact_hash_table	typeref:typename:void	file:
clear_cache	extern/libgit2/src/cache.c	/^static void clear_cache(git_cache *cache)$/;"	f	typeref:typename:void	file:
clear_commit_marks	extern/libgit2/src/merge.c	/^static int clear_commit_marks(git_commit_list_node *commit, unsigned int mark)$/;"	f	typeref:typename:int	file:
clear_commit_marks_1	extern/libgit2/src/merge.c	/^static int clear_commit_marks_1(git_commit_list **plist,$/;"	f	typeref:typename:int	file:
clear_commit_marks_many	extern/libgit2/src/merge.c	/^static int clear_commit_marks_many(git_vector *commits, unsigned int mark)$/;"	f	typeref:typename:int	file:
clear_git_env	extern/libgit2/tests/repo/env.c	/^static void clear_git_env(void)$/;"	f	typeref:typename:void	file:
clear_parser_state	extern/libgit2/src/transports/http.c	/^static void clear_parser_state(http_subtransport *t)$/;"	f	typeref:typename:void	file:
clear_uptodate	extern/libgit2/src/index.c	/^static void clear_uptodate(git_index *index)$/;"	f	typeref:typename:void	file:
clone_cancel_checkout_cb	extern/libgit2/tests/clone/nonetwork.c	/^static int clone_cancel_checkout_cb($/;"	f	typeref:typename:int	file:
clone_cancel_fetch_transfer_progress_cb	extern/libgit2/tests/clone/nonetwork.c	/^static int clone_cancel_fetch_transfer_progress_cb($/;"	f	typeref:typename:int	file:
clone_into	extern/libgit2/src/clone.c	/^static int clone_into(git_repository *repo, git_remote *_remote, const git_fetch_options *opts, /;"	f	typeref:typename:int	file:
clone_local_into	extern/libgit2/src/clone.c	/^static int clone_local_into(git_repository *repo, git_remote *remote, const git_fetch_options *f/;"	f	typeref:typename:int	file:
close	extern/libgit2/deps/zlib/gzguts.h	/^#  define close /;"	d
close	extern/libgit2/examples/common.h	/^# define close /;"	d
close	extern/libgit2/tests/clar_libgit2_trace.c	/^	void (*close)(void);$/;"	m	struct:method	typeref:typename:void (*)(void)	file:
close_algorithm_provider	extern/libgit2/src/hash/sha1/win32.h	/^	hash_win32_cng_close_algorithm_provider_fn close_algorithm_provider;$/;"	m	struct:hash_cng_prov	typeref:typename:hash_win32_cng_close_algorithm_provider_fn
close_file	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void close_file(FILE* file) {$/;"	f	typeref:typename:PUGI__FN void
close_socket	extern/libgit2/src/streams/socket.c	/^static int close_socket(GIT_SOCKET s)$/;"	f	typeref:typename:int	file:
closedir	extern/libgit2/src/win32/dir.h	/^#	define closedir /;"	d
cmakeRequireSymbol	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.c.in	/^static void cmakeRequireSymbol(int dummy, ...) {$/;"	f	typeref:typename:@CHECK_PROTOTYPE_DEFINITION_HEADER@void	file:
cmd	extern/libgit2/examples/remote.c	/^	enum subcmd cmd;$/;"	m	struct:opts	typeref:enum:subcmd	file:
cmd	extern/libgit2/examples/stash.c	/^	enum subcmd cmd;$/;"	m	struct:opts	typeref:enum:subcmd	file:
cmd	extern/libgit2/src/transports/git.c	/^	const char *cmd;$/;"	m	struct:__anon936e62c10108	typeref:typename:const char *	file:
cmd	extern/libgit2/src/transports/smart.h	/^	char *cmd;$/;"	m	struct:git_pkt_cmd	typeref:typename:char *
cmd	extern/libgit2/src/transports/ssh.c	/^	const char *cmd;$/;"	m	struct:__anon944cd18b0108	typeref:typename:const char *	file:
cmd_add	extern/libgit2/examples/remote.c	/^static int cmd_add(git_repository *repo, struct opts *o)$/;"	f	typeref:typename:int	file:
cmd_apply	extern/libgit2/examples/stash.c	/^static int cmd_apply(git_repository *repo, struct opts *opts)$/;"	f	typeref:typename:int	file:
cmd_list	extern/libgit2/examples/stash.c	/^static int cmd_list(git_repository *repo, struct opts *opts)$/;"	f	typeref:typename:int	file:
cmd_pop	extern/libgit2/examples/stash.c	/^static int cmd_pop(git_repository *repo, struct opts *opts)$/;"	f	typeref:typename:int	file:
cmd_push	extern/libgit2/examples/stash.c	/^static int cmd_push(git_repository *repo, struct opts *opts)$/;"	f	typeref:typename:int	file:
cmd_receivepack	extern/libgit2/src/transports/git.c	/^static const char cmd_receivepack[] = "git-receive-pack";$/;"	v	typeref:typename:const char[]	file:
cmd_receivepack	extern/libgit2/src/transports/ssh.c	/^	char *cmd_receivepack;$/;"	m	struct:__anon944cd18b0208	typeref:typename:char *	file:
cmd_receivepack	extern/libgit2/src/transports/ssh.c	/^static const char cmd_receivepack[] = "git-receive-pack";$/;"	v	typeref:typename:const char[]	file:
cmd_remove	extern/libgit2/examples/remote.c	/^static int cmd_remove(git_repository *repo, struct opts *o)$/;"	f	typeref:typename:int	file:
cmd_rename	extern/libgit2/examples/remote.c	/^static int cmd_rename(git_repository *repo, struct opts *o)$/;"	f	typeref:typename:int	file:
cmd_seturl	extern/libgit2/examples/remote.c	/^static int cmd_seturl(git_repository *repo, struct opts *o)$/;"	f	typeref:typename:int	file:
cmd_show	extern/libgit2/examples/remote.c	/^static int cmd_show(git_repository *repo, struct opts *o)$/;"	f	typeref:typename:int	file:
cmd_uploadpack	extern/libgit2/src/transports/git.c	/^static const char cmd_uploadpack[] = "git-upload-pack";$/;"	v	typeref:typename:const char[]	file:
cmd_uploadpack	extern/libgit2/src/transports/ssh.c	/^	char *cmd_uploadpack;$/;"	m	struct:__anon944cd18b0208	typeref:typename:char *	file:
cmd_uploadpack	extern/libgit2/src/transports/ssh.c	/^static const char cmd_uploadpack[] = "git-upload-pack";$/;"	v	typeref:typename:const char[]	file:
cmp	extern/libgit2/src/hashsig.c	/^	hashsig_cmp cmp;$/;"	m	struct:__anonbb1957950108	typeref:typename:hashsig_cmp	file:
cmp	extern/libgit2/src/tsort.c	/^	git__sort_r_cmp cmp;$/;"	m	struct:tsort_store	typeref:typename:git__sort_r_cmp	file:
cmp	extern/libgit2/src/util.c	/^	git__sort_r_cmp cmp;$/;"	m	struct:__anon8a0c964c0108	typeref:typename:git__sort_r_cmp	file:
cmp_big	extern/libgit2/tests/core/qsort.c	/^static int cmp_big(const void *_a, const void *_b, void *payload)$/;"	f	typeref:typename:int	file:
cmp_int	extern/libgit2/tests/core/qsort.c	/^static int cmp_int(const void *_a, const void *_b, void *payload)$/;"	f	typeref:typename:int	file:
cmp_ints	extern/libgit2/tests/core/pqueue.c	/^static int cmp_ints(const void *v1, const void *v2)$/;"	f	typeref:typename:int	file:
cmp_ints_like_commit_time	extern/libgit2/tests/core/pqueue.c	/^static int cmp_ints_like_commit_time(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
cmp_objects	extern/libgit2/tests/object/raw/write.c	/^static void cmp_objects(git_rawobj *o1, git_rawobj *o2)$/;"	f	typeref:typename:void	file:
cmp_objects	extern/libgit2/tests/odb/loose.c	/^static void cmp_objects(git_rawobj *o, object_data *d)$/;"	f	typeref:typename:void	file:
cmp_old_ref	extern/libgit2/src/refdb_fs.c	/^static int cmp_old_ref(int *cmp, git_refdb_backend *backend, const char *name,$/;"	f	typeref:typename:int	file:
cmp_recs	extern/libgit2/src/xdiff/xhistogram.c	/^static int cmp_recs(xpparam_t const *xpp,$/;"	f	typeref:typename:int	file:
cmp_str	extern/libgit2/tests/core/qsort.c	/^static int cmp_str(const void *_a, const void *_b, void *payload)$/;"	f	typeref:typename:int	file:
cng	extern/libgit2/src/hash/sha1/win32.h	/^		struct hash_cng_ctx cng;$/;"	m	union:git_hash_sha1_ctx::__anon67941f95030a	typeref:struct:hash_cng_ctx
cng	extern/libgit2/src/hash/sha1/win32.h	/^		struct hash_cng_prov cng;$/;"	m	union:__anon67941f950108::__anon67941f95020a	typeref:struct:hash_cng_prov
cnt	extern/libgit2/src/xdiff/xhistogram.c	/^		unsigned int ptr, cnt;$/;"	m	struct:histindex::record	typeref:typename:unsigned int	file:
cnt	extern/libgit2/src/xdiff/xhistogram.c	/^	unsigned int cnt,$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
cnt	extern/libgit2/tests/apply/apply_helpers.c	/^	size_t cnt;$/;"	m	struct:iterator_compare_data	typeref:typename:size_t	file:
coalesce	extern/libgit2/src/blame_git.c	/^static void coalesce(git_blame *blame)$/;"	f	typeref:typename:void	file:
code	extern/OpenXLSX/doxy/customdoxygen.css	/^tt, code, kbd, samp, a.el,$/;"	s
code	extern/libgit2/deps/zlib/deflate.h	/^        ush  code;       \/* bit string *\/$/;"	m	union:ct_data_s::__anonfe3a00cc010a	typeref:typename:ush
code	extern/libgit2/deps/zlib/inftrees.h	/^} code;$/;"	t	typeref:struct:__anon807a30970108
code_offset	extern/libgit2/deps/pcre/pcre_exec.c	/^#define code_offset /;"	d	file:
codelink	extern/libgit2/deps/pcre/pcre_exec.c	/^#define codelink /;"	d	file:
codes	extern/libgit2/deps/zlib/inflate.h	/^    code codes[ENOUGH];         \/* space for code tables *\/$/;"	m	struct:inflate_state	typeref:typename:code[]
codetype	extern/libgit2/deps/zlib/inftrees.h	/^} codetype;$/;"	t	typeref:enum:__anon807a30970203
collapse	extern/libgit2/src/tsort.c	/^static ssize_t collapse(void **dst, struct tsort_run *stack, ssize_t stack_curr, struct tsort_st/;"	f	typeref:typename:ssize_t	file:
collect_attr_files	extern/libgit2/src/attr.c	/^static int collect_attr_files($/;"	f	typeref:typename:int	file:
collect_progress	extern/libgit2/tests/checkout/conflict.c	/^static void collect_progress($/;"	f	typeref:typename:void	file:
collision_block_callback	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^typedef void(*collision_block_callback)(uint64_t, const uint32_t*, const uint32_t*, const uint32/;"	t	typeref:typename:void (*)(uint64_t,const uint32_t *,const uint32_t *,const uint32_t *,const uint32_t *)
color	extern/libgit2/examples/diff.c	/^	int color;$/;"	m	struct:opts	typeref:typename:int	file:
color_printer	extern/libgit2/examples/diff.c	/^static int color_printer($/;"	f	typeref:typename:int	file:
colors	extern/libgit2/examples/diff.c	/^static const char *colors[] = {$/;"	v	typeref:typename:const char * []	file:
column_headers_	extern/OpenXLSX/benchmark/table_printer.h	/^        std::vector<std::string> column_headers_;$/;"	m	class:bprinter::TablePrinter	typeref:typename:std::vector<std::string>
column_widths_	extern/OpenXLSX/benchmark/table_printer.h	/^        std::vector<int> column_widths_;$/;"	m	class:bprinter::TablePrinter	typeref:typename:std::vector<int>
comm_max	extern/libgit2/deps/zlib/zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s	typeref:typename:uInt
commands	extern/libgit2/examples/lg2.c	/^} commands[] = {$/;"	v	typeref:struct:__anon8df46cca0108[]
comment	extern/libgit2/deps/zlib/zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s	typeref:typename:Bytef *
comment	extern/libgit2/src/transports/smart.h	/^	char comment[GIT_FLEX_ARRAY];$/;"	m	struct:__anoncc6f59690508	typeref:typename:char[]
comment_pkt	extern/libgit2/src/transports/smart_pkt.c	/^static int comment_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
commit	extern/libgit2/src/annotated_commit.h	/^	git_commit *commit;$/;"	m	struct:git_annotated_commit	typeref:typename:git_commit *
commit	extern/libgit2/src/blame.h	/^	git_commit *commit;$/;"	m	struct:git_blame__origin	typeref:typename:git_commit *
commit	extern/libgit2/tests/commit/parent.c	/^static git_commit *commit;$/;"	v	typeref:typename:git_commit *	file:
commit	extern/libgit2/tests/commit/write.c	/^static git_commit *commit;$/;"	v	typeref:typename:git_commit *	file:
commit	extern/libgit2/tests/graph/ahead_behind.c	/^static git_commit *commit;$/;"	v	typeref:typename:git_commit *	file:
commit	extern/libgit2/tests/graph/descendant_of.c	/^static git_commit *commit;$/;"	v	typeref:typename:git_commit *	file:
commit	extern/libgit2/tests/odb/loose_data.h	/^static object_data commit = {$/;"	v	typeref:typename:object_data
commit	git.cpp	/^lr::LR<git_oid> commit(const char *, lr::LR<git_oid> &&tree,$/;"	f	namespace:git	typeref:typename:lr::LR<git_oid>
commit_and_tag	extern/libgit2/tests/describe/t6120.c	/^static void commit_and_tag($/;"	f	typeref:typename:void	file:
commit_bytes	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char commit_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
commit_count	extern/libgit2/examples/describe.c	/^	size_t commit_count;$/;"	m	struct:__anon38a310860108	typeref:typename:size_t	file:
commit_count	extern/libgit2/tests/revwalk/basic.c	/^#define commit_count /;"	d	file:
commit_count	extern/libgit2/tests/revwalk/hidecb.c	/^#define commit_count /;"	d	file:
commit_data	extern/libgit2/tests/object/raw/data.h	/^static unsigned char commit_data[] = {$/;"	v	typeref:typename:unsigned char[]
commit_data	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char commit_data[] = {$/;"	v	typeref:typename:unsigned char[]
commit_error	extern/libgit2/src/commit_list.c	/^static int commit_error(git_commit_list_node *commit, const char *msg)$/;"	f	typeref:typename:int	file:
commit_head	extern/libgit2/tests/revwalk/basic.c	/^static const char *commit_head = "a4a7dce85cf63874e984719f4fdd239f5145052f";$/;"	v	typeref:typename:const char *	file:
commit_head	extern/libgit2/tests/revwalk/hidecb.c	/^static const char *commit_head = "a4a7dce85cf63874e984719f4fdd239f5145052f";$/;"	v	typeref:typename:const char *	file:
commit_head	extern/libgit2/tests/revwalk/simplify.c	/^static const char *commit_head = "a4a7dce85cf63874e984719f4fdd239f5145052f";$/;"	v	typeref:typename:const char *	file:
commit_id	extern/libgit2/src/describe.c	/^	git_oid commit_id;$/;"	m	struct:git_describe_result	typeref:typename:git_oid	file:
commit_id	extern/libgit2/tests/object/raw/data.h	/^static char *commit_id = "3d7f8a6af076c8c3f20071a8935cdbe8228594d1";$/;"	v	typeref:typename:char *
commit_id	extern/libgit2/tests/refs/races.c	/^static const char *commit_id = "099fabac3a9ea935598528c27f866e34089c2eff";$/;"	v	typeref:typename:const char *	file:
commit_ids	extern/libgit2/tests/revwalk/basic.c	/^static const char *commit_ids[] = {$/;"	v	typeref:typename:const char * []	file:
commit_ids	extern/libgit2/tests/revwalk/hidecb.c	/^static git_oid commit_ids[commit_count];$/;"	v	typeref:typename:git_oid[]	file:
commit_index	extern/libgit2/src/stash.c	/^static int commit_index($/;"	f	typeref:typename:int	file:
commit_message	extern/libgit2/tests/commit/write.c	/^static const char *commit_message = "This commit has been created in memory\\n\\$/;"	v	typeref:typename:const char *	file:
commit_msg	extern/libgit2/tests/refs/reflog/reflog.c	/^#define commit_msg /;"	d	file:
commit_name	extern/libgit2/src/describe.c	/^struct commit_name {$/;"	s	file:
commit_name_dup	extern/libgit2/src/describe.c	/^static int commit_name_dup(struct commit_name **out, struct commit_name *in)$/;"	f	typeref:typename:int	file:
commit_obj	extern/libgit2/tests/object/raw/data.h	/^static git_rawobj commit_obj = {$/;"	v	typeref:typename:git_rawobj
commit_parent_data	extern/libgit2/src/commit.c	/^} commit_parent_data;$/;"	t	typeref:struct:__anon2b8e95b70308	file:
commit_parent_for_amend	extern/libgit2/src/commit.c	/^static const git_oid *commit_parent_for_amend(size_t curr, void *payload)$/;"	f	typeref:typename:const git_oid *	file:
commit_parent_from_array	extern/libgit2/src/commit.c	/^static const git_oid *commit_parent_from_array(size_t curr, void *payload)$/;"	f	typeref:typename:const git_oid *	file:
commit_parent_from_ids	extern/libgit2/src/commit.c	/^static const git_oid *commit_parent_from_ids(size_t curr, void *payload)$/;"	f	typeref:typename:const git_oid *	file:
commit_parent_from_varargs	extern/libgit2/src/commit.c	/^static const git_oid *commit_parent_from_varargs(size_t curr, void *payload)$/;"	f	typeref:typename:const git_oid *	file:
commit_parent_oids	extern/libgit2/src/commit.c	/^} commit_parent_oids;$/;"	t	typeref:struct:__anon2b8e95b70208	file:
commit_parent_varargs	extern/libgit2/src/commit.c	/^} commit_parent_varargs;$/;"	t	typeref:struct:__anon2b8e95b70108	file:
commit_parsing	extern/libgit2/examples/general.c	/^static void commit_parsing(git_repository *repo)$/;"	f	typeref:typename:void	file:
commit_pool	extern/libgit2/src/revwalk.h	/^	git_pool commit_pool;$/;"	m	struct:git_revwalk	typeref:typename:git_pool
commit_quick_parse	extern/libgit2/src/commit_list.c	/^static int commit_quick_parse($/;"	f	typeref:typename:int	file:
commit_sorting_segment	extern/libgit2/tests/revwalk/basic.c	/^static const int commit_sorting_segment[][6] = {$/;"	v	typeref:typename:const int[][6]	file:
commit_sorting_time	extern/libgit2/tests/revwalk/basic.c	/^static const int commit_sorting_time[][6] = {$/;"	v	typeref:typename:const int[][6]	file:
commit_sorting_time_reverse	extern/libgit2/tests/revwalk/basic.c	/^static const int commit_sorting_time_reverse[][6] = {$/;"	v	typeref:typename:const int[][6]	file:
commit_sorting_topo	extern/libgit2/tests/revwalk/basic.c	/^static const int commit_sorting_topo[][6] = {$/;"	v	typeref:typename:const int[][6]	file:
commit_sorting_topo_reverse	extern/libgit2/tests/revwalk/basic.c	/^static const int commit_sorting_topo_reverse[][6] = {$/;"	v	typeref:typename:const int[][6]	file:
commit_strs	extern/libgit2/tests/revwalk/hidecb.c	/^static const char *commit_strs[] = {$/;"	v	typeref:typename:const char * []	file:
commit_type	extern/libgit2/src/refs.c	/^static const char *commit_type(const git_commit *commit)$/;"	f	typeref:typename:const char *	file:
commit_untracked	extern/libgit2/src/stash.c	/^static int commit_untracked($/;"	f	typeref:typename:int	file:
commit_worktree	extern/libgit2/src/stash.c	/^static int commit_worktree($/;"	f	typeref:typename:int	file:
commit_writing	extern/libgit2/examples/general.c	/^static void commit_writing(git_repository *repo)$/;"	f	typeref:typename:void	file:
commits	extern/libgit2/examples/describe.c	/^	const char **commits;$/;"	m	struct:__anon38a310860108	typeref:typename:const char **	file:
commits	extern/libgit2/src/revwalk.h	/^	git_oidmap *commits;$/;"	m	struct:git_revwalk	typeref:typename:git_oidmap *
commitspec	extern/libgit2/examples/blame.c	/^	char *commitspec;$/;"	m	struct:opts	typeref:typename:char *	file:
committed	extern/libgit2/src/transaction.c	/^	unsigned int committed :1,$/;"	m	struct:__anon8eca35140208	typeref:typename:unsigned int:1	file:
committer	extern/libgit2/examples/log.c	/^	const char *committer;$/;"	m	struct:log_options	typeref:typename:const char *	file:
committer	extern/libgit2/src/commit.h	/^	git_signature *committer;$/;"	m	struct:git_commit	typeref:typename:git_signature *
committer	extern/libgit2/src/notes.h	/^	git_signature *committer;$/;"	m	struct:git_note	typeref:typename:git_signature *
committer	extern/libgit2/src/reflog.h	/^	git_signature *committer;$/;"	m	struct:git_reflog_entry	typeref:typename:git_signature *
committer_email	extern/libgit2/tests/commit/write.c	/^static const char *committer_email = "vicent@github.com";$/;"	v	typeref:typename:const char *	file:
committer_name	extern/libgit2/tests/commit/write.c	/^static const char *committer_name = "Vicent Marti";$/;"	v	typeref:typename:const char *	file:
common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:assert_backtrack	typeref:typename:backtrack_common	file:
common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:bracket_backtrack	typeref:typename:backtrack_common	file:
common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:bracketpos_backtrack	typeref:typename:backtrack_common	file:
common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:braminzero_backtrack	typeref:typename:backtrack_common	file:
common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:char_iterator_backtrack	typeref:typename:backtrack_common	file:
common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:recurse_backtrack	typeref:typename:backtrack_common	file:
common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:ref_iterator_backtrack	typeref:typename:backtrack_common	file:
common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:then_trap_backtrack	typeref:typename:backtrack_common	file:
common	extern/libgit2/src/transports/smart.h	/^	git_vector common;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_vector
common	extern/libgit2/src/transports/smart.h	/^	int common:1,$/;"	m	struct:transport_smart_caps	typeref:typename:int:1
common_prefix_icase	extern/libgit2/src/path.c	/^GIT_INLINE(size_t) common_prefix_icase(const char *str, size_t len, const char *prefix)$/;"	f	typeref:typename:size_t
commondir	extern/libgit2/src/repository.h	/^	char *commondir;$/;"	m	struct:git_repository	typeref:typename:char *
commondir_path	extern/libgit2/src/worktree.h	/^	char *commondir_path;$/;"	m	struct:git_worktree	typeref:typename:char *
commonpath	extern/libgit2/src/refdb_fs.c	/^	char *commonpath;$/;"	m	struct:refdb_fs_backend	typeref:typename:char *	file:
comp_remaining	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 read_buf_size, read_buf_ofs, read_buf_avail, comp_remaining, out_buf_ofs, cur_file/;"	m	struct:__anon09af45a71808	typeref:typename:mz_uint64
compact_alignment	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	static const uintptr_t compact_alignment = 1 << compact_alignment_log2;$/;"	v	typeref:typename:const uintptr_t	file:
compact_alignment_log2	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	static const uintptr_t compact_alignment_log2 = 2;$/;"	v	typeref:typename:PUGI__NS_END PUGI__NS_BEGIN const uintptr_t	file:
compact_get_page	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xml_memory_page* compact_get_page(const void* object, int header_offset)$/;"	f	typeref:typename:PUGI__FN xml_memory_page *
compact_get_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <int header_offset, typename T> PUGI__FN_NO_INLINE T* compact_get_value(const void* ob/;"	f	typeref:typename:PUGI__FN_NO_INLINE T *
compact_hash_table	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		compact_hash_table(): _items(0), _capacity(0), _count(0)$/;"	f	class:compact_hash_table	file:
compact_hash_table	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	class compact_hash_table$/;"	c	file:
compact_header	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		compact_header(xml_memory_page* page, unsigned int flags)$/;"	f	class:compact_header	file:
compact_header	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	class compact_header$/;"	c	file:
compact_page_marker	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		uint32_t* compact_page_marker;$/;"	m	struct:xml_memory_page	typeref:typename:uint32_t *	file:
compact_pointer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		compact_pointer(): _data(0)$/;"	f	class:compact_pointer	file:
compact_pointer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename T, int header_offset, int start = -126> class compact_pointer$/;"	c	file:
compact_pointer_parent	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		compact_pointer_parent(): _data(0)$/;"	f	class:compact_pointer_parent	file:
compact_pointer_parent	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename T, int header_offset> class compact_pointer_parent$/;"	c	file:
compact_set_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <int header_offset, typename T> PUGI__FN_NO_INLINE void compact_set_value(const void* /;"	f	typeref:typename:PUGI__FN_NO_INLINE void
compact_shared_parent	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void* compact_shared_parent;$/;"	m	struct:xml_memory_page	typeref:typename:void *	file:
compact_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		compact_string(): _data(0)$/;"	f	class:compact_string	file:
compact_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <int header_offset, int base_offset> class compact_string$/;"	c	file:
compact_string_base	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	m	struct:xml_memory_page	typeref:typename:char_t *	file:
compare_checksum	extern/libgit2/src/index.c	/^static int compare_checksum(git_index *index)$/;"	f	typeref:typename:int	file:
compare_context	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct compare_context {$/;"	s	file:
compare_context	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} compare_context;$/;"	t	typeref:struct:compare_context	file:
compare_data	extern/libgit2/tests/checkout/crlf.c	/^struct compare_data$/;"	s	file:
compare_data	extern/libgit2/tests/index/crlf.c	/^struct compare_data$/;"	s	file:
compare_entries	extern/libgit2/src/tree.c	/^static int compare_entries(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
compare_eq	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		template <class Comp> static bool compare_eq(xpath_ast_node* lhs, xpath_ast_node* rhs, const x/;"	f	class:xpath_ast_node	typeref:typename:bool	file:
compare_file	extern/libgit2/tests/checkout/crlf.c	/^static int compare_file(void *payload, git_buf *actual_path)$/;"	f	typeref:typename:int	file:
compare_opcodes	extern/libgit2/deps/pcre/pcre_compile.c	/^compare_opcodes(const pcre_uchar *code, BOOL utf, const compile_data *cd,$/;"	f	typeref:typename:BOOL	file:
compare_pt	extern/libgit2/src/describe.c	/^static int compare_pt(const void *a_, const void *b_)$/;"	f	typeref:typename:int	file:
compare_rel	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		template <class Comp> static bool compare_rel(xpath_ast_node* lhs, xpath_ast_node* rhs, const /;"	f	class:xpath_ast_node	typeref:typename:bool	file:
compare_structs	extern/libgit2/tests/core/vector.c	/^static int compare_structs(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
compare_them	extern/libgit2/tests/core/vector.c	/^static int compare_them(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
compile_assert_backtrackingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_assert_backtrackingpath(compiler_common *common, struct backtrack_common *cu/;"	f	typeref:typename:void	file:
compile_assert_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *compile_assert_matchingpath(compiler_common *common, pcre_uchar *cc, assert_b/;"	f	typeref:typename:pcre_uchar *	file:
compile_backtrackingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_backtrackingpath(compiler_common *common, struct backtrack_common *current)$/;"	f	typeref:typename:void	file:
compile_bracket_backtrackingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_bracket_backtrackingpath(compiler_common *common, struct backtrack_common *c/;"	f	typeref:typename:void	file:
compile_bracket_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *compile_bracket_matchingpath(compiler_common *common, pcre_uchar *cc, backtra/;"	f	typeref:typename:pcre_uchar *	file:
compile_bracketpos_backtrackingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_bracketpos_backtrackingpath(compiler_common *common, struct bac/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_bracketpos_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *compile_bracketpos_matchingpath(compiler_common *common, pcre_uchar *cc, back/;"	f	typeref:typename:pcre_uchar *	file:
compile_braminzero_backtrackingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_braminzero_backtrackingpath(compiler_common *common, struct bac/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_branch	extern/libgit2/deps/pcre/pcre_compile.c	/^compile_branch(int *optionsptr, pcre_uchar **codeptr,$/;"	f	typeref:typename:BOOL	file:
compile_callout_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_callout_matchingpath(compiler_common *common, pcre_uchar/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_char1_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *compile_char1_matchingpath(compiler_common *common, pcre_uchar type, pcre_uch/;"	f	typeref:typename:pcre_uchar *	file:
compile_charn_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_charn_matchingpath(compiler_common *common, pcre_uchar */;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_close_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_close_matchingpath(compiler_common *common, pcre_uchar */;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_control_verb_backtrackingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_control_verb_backtrackingpath(compiler_common *common, struct b/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_control_verb_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_control_verb_matchingpath(compiler_common *common, pcre_/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_data	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct compile_data {$/;"	s
compile_data	extern/libgit2/deps/pcre/pcre_internal.h	/^} compile_data;$/;"	t	typeref:struct:compile_data
compile_dnref_search	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_dnref_search(compiler_common *common, pcre_uchar *cc, jump_list **backtracks/;"	f	typeref:typename:void	file:
compile_fail_accept_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_fail_accept_matchingpath(compiler_common *common, pcre_u/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_iterator_backtrackingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_iterator_backtrackingpath(compiler_common *common, struct backtrack_common */;"	f	typeref:typename:void	file:
compile_iterator_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *compile_iterator_matchingpath(compiler_common *common, pcre_uchar *cc, backtr/;"	f	typeref:typename:pcre_uchar *	file:
compile_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_matchingpath(compiler_common *common, pcre_uchar *cc, pcre_uchar *ccend, bac/;"	f	typeref:typename:void	file:
compile_recurse	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_recurse(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_recurse_backtrackingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_recurse_backtrackingpath(compiler_common *common, struct backtr/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_recurse_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_recurse_matchingpath(compiler_common *common, pcre_uchar/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_ref_iterator_backtrackingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_ref_iterator_backtrackingpath(compiler_common *common, struct b/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_ref_iterator_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_ref_iterator_matchingpath(compiler_common *common, pcre_/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_ref_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_ref_matchingpath(compiler_common *common, pcre_uchar *cc, jump_list **backtr/;"	f	typeref:typename:void	file:
compile_regex	extern/libgit2/deps/pcre/pcre_compile.c	/^compile_regex(int options, pcre_uchar **codeptr, const pcre_uchar **ptrptr,$/;"	f	typeref:typename:BOOL	file:
compile_simple_assertion_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *compile_simple_assertion_matchingpath(compiler_common *common, pcre_uchar typ/;"	f	typeref:typename:pcre_uchar *	file:
compile_then_trap_backtrackingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_then_trap_backtrackingpath(compiler_common *common, struct back/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_then_trap_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_then_trap_matchingpath(compiler_common *common, pcre_uchar *cc,/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_xclass_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_xclass_matchingpath(compiler_common *common, pcre_uchar *cc, jump_list **bac/;"	f	typeref:typename:void	file:
compiler	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_compiler *compiler;$/;"	m	struct:compiler_common	typeref:struct:sljit_compiler *	file:
compiler_common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct compiler_common {$/;"	s	file:
compiler_common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} compiler_common;$/;"	t	typeref:struct:compiler_common	file:
complete	extern/libgit2/src/filter.c	/^	bool complete;$/;"	m	struct:buf_stream	typeref:typename:bool	file:
complete	extern/libgit2/src/transports/auth_negotiate.c	/^		complete : 1;$/;"	m	struct:__anon8bc72ece0108	typeref:typename:unsigned:1	file:
complete	extern/libgit2/src/transports/auth_ntlm.c	/^	bool complete;$/;"	m	struct:__anon2e3324090108	typeref:typename:bool	file:
complete_callout	extern/libgit2/deps/pcre/pcre_compile.c	/^complete_callout(pcre_uchar *previous_callout, const pcre_uchar *ptr, compile_data *cd)$/;"	f	typeref:typename:void	file:
completed_steps	extern/libgit2/examples/clone.c	/^	size_t completed_steps;$/;"	m	struct:progress_data	typeref:typename:size_t	file:
completed_steps	extern/libgit2/src/checkout.c	/^	size_t completed_steps;$/;"	m	struct:__anonbac5d6240208	typeref:typename:size_t	file:
compress	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define compress /;"	d
compress	extern/libgit2/deps/zlib/zconf.h	/^#    define compress /;"	d
compress2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define compress2 /;"	d
compress2	extern/libgit2/deps/zlib/zconf.h	/^#    define compress2 /;"	d
compressBound	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define compressBound /;"	d
compressBound	extern/libgit2/deps/zlib/zconf.h	/^#    define compressBound /;"	d
compress_and_decompress_input_various_ways	extern/libgit2/tests/core/zstream.c	/^static void compress_and_decompress_input_various_ways(git_buf *input)$/;"	f	typeref:typename:void	file:
compress_block	extern/libgit2/deps/zlib/trees.c	/^local void compress_block(s, ltree, dtree)$/;"	f
compress_filter	extern/libgit2/tests/filter/stream.c	/^static git_filter *compress_filter;$/;"	v	typeref:typename:git_filter *	file:
compress_filter_stream_init	extern/libgit2/tests/filter/stream.c	/^static int compress_filter_stream_init($/;"	f	typeref:typename:int	file:
compress_func	extern/libgit2/deps/zlib/deflate.c	/^typedef block_state (*compress_func) OF((deflate_state *s, int flush));$/;"	t	file:
compress_stream	extern/libgit2/tests/filter/stream.c	/^struct compress_stream {$/;"	s	file:
compress_stream_close	extern/libgit2/tests/filter/stream.c	/^static int compress_stream_close(git_writestream *s)$/;"	f	typeref:typename:int	file:
compress_stream_free	extern/libgit2/tests/filter/stream.c	/^static void compress_stream_free(git_writestream *stream)$/;"	f	typeref:typename:void	file:
compress_stream_write	extern/libgit2/tests/filter/stream.c	/^static int compress_stream_write(git_writestream *s, const char *buffer, size_t len)$/;"	f	typeref:typename:int	file:
compress_stream_write__deflated	extern/libgit2/tests/filter/stream.c	/^static int compress_stream_write__deflated(struct compress_stream *stream, const char *buffer, s/;"	f	typeref:typename:int	file:
compress_stream_write__inflated	extern/libgit2/tests/filter/stream.c	/^static int compress_stream_write__inflated(struct compress_stream *stream, const char *buffer, s/;"	f	typeref:typename:int	file:
compressed_len	extern/libgit2/deps/zlib/deflate.h	/^    ulg compressed_len; \/* total bit length of compressed file mod 2^32 *\/$/;"	m	struct:internal_state	typeref:typename:ulg
compressing_objects_fmt	extern/libgit2/src/transports/local.c	/^static const char *compressing_objects_fmt = "Compressing objects: %.0f%% (%d\/%d)";$/;"	v	typeref:typename:const char *	file:
compute_base	extern/libgit2/src/merge.c	/^static int compute_base($/;"	f	typeref:typename:int	file:
compute_diff_no_index	extern/libgit2/examples/diff.c	/^static void compute_diff_no_index(git_diff **diff, struct opts *o) {$/;"	f	typeref:typename:void	file:
compute_digest	extern/libgit2/src/filebuf.h	/^	bool compute_digest;$/;"	m	struct:git_filebuf	typeref:typename:bool
compute_minrun	extern/libgit2/src/tsort.c	/^static size_t compute_minrun(size_t n)$/;"	f	typeref:typename:size_t	file:
compute_new_size	extern/libgit2/src/vector.c	/^GIT_INLINE(size_t) compute_new_size(git_vector *v)$/;"	f	typeref:typename:size_t
compute_write_order	extern/libgit2/src/pack-objects.c	/^static git_pobject **compute_write_order(git_packbuilder *pb)$/;"	f	typeref:typename:git_pobject **	file:
concurrent_compress	extern/libgit2/tests/threads/refdb.c	/^static bool concurrent_compress = false;$/;"	v	typeref:typename:bool	file:
concurrent_compress	extern/libgit2/tests/threads/refdb.c	/^static bool concurrent_compress = true;$/;"	v	typeref:typename:bool	file:
cond	extern/libgit2/src/pack-objects.c	/^	git_cond cond;$/;"	m	struct:thread_params	typeref:typename:git_cond	file:
condassert	extern/libgit2/deps/pcre/pcre_exec.c	/^#define condassert /;"	d	file:
condfailed	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    jump_list *condfailed;$/;"	m	union:bracket_backtrack::__anon313b80c3010a	typeref:typename:jump_list *	file:
condfailed	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *condfailed;$/;"	m	struct:assert_backtrack	typeref:typename:jump_list *	file:
condition	extern/libgit2/deps/pcre/pcre_exec.c	/^#define condition /;"	d	file:
conditional_match_gitdir	extern/libgit2/src/config_file.c	/^static int conditional_match_gitdir($/;"	f	typeref:typename:int	file:
conditional_match_gitdir_i	extern/libgit2/src/config_file.c	/^static int conditional_match_gitdir_i($/;"	f	typeref:typename:int	file:
conditional_match_onbranch	extern/libgit2/src/config_file.c	/^static int conditional_match_onbranch($/;"	f	typeref:typename:int	file:
conditions	extern/libgit2/src/config_file.c	/^} conditions[] = {$/;"	v	typeref:typename:const struct __anon041cc2a30308[]
config	extern/libgit2/deps/zlib/deflate.c	/^} config;$/;"	t	typeref:struct:config_s	file:
config	extern/libgit2/src/config.c	/^	git_config *config;$/;"	m	struct:rename_data	typeref:typename:git_config *	file:
config	extern/libgit2/src/diff_xdiff.h	/^	xdemitconf_t config;$/;"	m	struct:__anon14ca163c0108	typeref:typename:xdemitconf_t
config	extern/libgit2/src/remote.c	/^	git_config *config;$/;"	m	struct:update_data	typeref:typename:git_config *	file:
config_backend_cmp	extern/libgit2/src/config.c	/^static int config_backend_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
config_delete	extern/libgit2/src/config_file.c	/^static int config_delete(git_config_backend *cfg, const char *name)$/;"	f	typeref:typename:int	file:
config_delete_multivar	extern/libgit2/src/config_file.c	/^static int config_delete_multivar(git_config_backend *cfg, const char *name, const char *regexp)$/;"	f	typeref:typename:int	file:
config_delete_multivar_readonly	extern/libgit2/src/config_snapshot.c	/^static int config_delete_multivar_readonly(git_config_backend *cfg, const char *name, const char/;"	f	typeref:typename:int	file:
config_delete_readonly	extern/libgit2/src/config_snapshot.c	/^static int config_delete_readonly(git_config_backend *cfg, const char *name)$/;"	f	typeref:typename:int	file:
config_entries_free	extern/libgit2/src/config_entries.c	/^static void config_entries_free(git_config_entries *entries)$/;"	f	typeref:typename:void	file:
config_entries_iterator	extern/libgit2/src/config_entries.c	/^typedef struct config_entries_iterator {$/;"	s	file:
config_entries_iterator	extern/libgit2/src/config_entries.c	/^} config_entries_iterator;$/;"	t	typeref:struct:config_entries_iterator	file:
config_entry_get	extern/libgit2/src/config_entries.c	/^int config_entry_get(config_entry_list **out, git_config_entries *entries, const char *key)$/;"	f	typeref:typename:int
config_entry_list	extern/libgit2/src/config_entries.c	/^typedef struct config_entry_list {$/;"	s	file:
config_entry_list	extern/libgit2/src/config_entries.c	/^} config_entry_list;$/;"	t	typeref:struct:config_entry_list	file:
config_entry_list_append	extern/libgit2/src/config_entries.c	/^static void config_entry_list_append(config_entry_list **list, config_entry_list *entry)$/;"	f	typeref:typename:void	file:
config_entry_list_free	extern/libgit2/src/config_entries.c	/^static void config_entry_list_free(config_entry_list *list)$/;"	f	typeref:typename:void	file:
config_error_notfound	extern/libgit2/src/config.c	/^static int config_error_notfound(const char *name)$/;"	f	typeref:typename:int	file:
config_error_readonly	extern/libgit2/src/config_mem.c	/^static int config_error_readonly(void)$/;"	f	typeref:typename:int	file:
config_error_readonly	extern/libgit2/src/config_snapshot.c	/^static int config_error_readonly(void)$/;"	f	typeref:typename:int	file:
config_file	extern/libgit2/src/config_file.c	/^typedef struct config_file {$/;"	s	file:
config_file	extern/libgit2/src/config_file.c	/^} config_file;$/;"	t	typeref:struct:config_file	file:
config_file_backend	extern/libgit2/src/config_file.c	/^} config_file_backend;$/;"	t	typeref:struct:__anon041cc2a30108	file:
config_file_clear	extern/libgit2/src/config_file.c	/^static void config_file_clear(config_file *file)$/;"	f	typeref:typename:void	file:
config_file_parse_data	extern/libgit2/src/config_file.c	/^} config_file_parse_data;$/;"	t	typeref:struct:__anon041cc2a30208	file:
config_files	extern/libgit2/examples/general.c	/^static void config_files(const char *repo_path, git_repository* repo)$/;"	f	typeref:typename:void	file:
config_free	extern/libgit2/src/config.c	/^static void config_free(git_config *cfg)$/;"	f	typeref:typename:void	file:
config_get	extern/libgit2/examples/config.c	/^static int config_get(git_config *cfg, const char *key)$/;"	f	typeref:typename:int	file:
config_get	extern/libgit2/src/config_file.c	/^static int config_get(git_config_backend *cfg, const char *key, git_config_entry **out)$/;"	f	typeref:typename:int	file:
config_get	extern/libgit2/src/pack-objects.c	/^#define config_get(/;"	d	file:
config_get_readonly	extern/libgit2/src/config_snapshot.c	/^static int config_get_readonly(git_config_backend *cfg, const char *key, git_config_entry **out)$/;"	f	typeref:typename:int	file:
config_is_modified	extern/libgit2/src/config_file.c	/^static int config_is_modified(int *modified, config_file *file)$/;"	f	typeref:typename:int	file:
config_iterator_free	extern/libgit2/src/config_entries.c	/^void config_iterator_free(git_config_iterator *iter)$/;"	f	typeref:typename:void
config_iterator_new	extern/libgit2/src/config_file.c	/^static int config_iterator_new($/;"	f	typeref:typename:int	file:
config_iterator_new_readonly	extern/libgit2/src/config_snapshot.c	/^static int config_iterator_new_readonly($/;"	f	typeref:typename:int	file:
config_iterator_next	extern/libgit2/src/config_entries.c	/^int config_iterator_next($/;"	f	typeref:typename:int
config_keychar	extern/libgit2/src/config_parse.c	/^GIT_INLINE(int) config_keychar(int c)$/;"	f	typeref:typename:int
config_level_to_sysdir	extern/libgit2/src/settings.c	/^static int config_level_to_sysdir(int config_level)$/;"	f	typeref:typename:int	file:
config_lock	extern/libgit2/src/config_file.c	/^static int config_lock(git_config_backend *_cfg)$/;"	f	typeref:typename:int	file:
config_lock_readonly	extern/libgit2/src/config_snapshot.c	/^static int config_lock_readonly(git_config_backend *_cfg)$/;"	f	typeref:typename:int	file:
config_memory_backend	extern/libgit2/src/config_mem.c	/^} config_memory_backend;$/;"	t	typeref:struct:__anon36e9f1a20108	file:
config_memory_delete	extern/libgit2/src/config_mem.c	/^static int config_memory_delete(git_config_backend *backend, const char *name)$/;"	f	typeref:typename:int	file:
config_memory_delete_multivar	extern/libgit2/src/config_mem.c	/^static int config_memory_delete_multivar(git_config_backend *backend, const char *name, const ch/;"	f	typeref:typename:int	file:
config_memory_free	extern/libgit2/src/config_mem.c	/^static void config_memory_free(git_config_backend *_backend)$/;"	f	typeref:typename:void	file:
config_memory_get	extern/libgit2/src/config_mem.c	/^static int config_memory_get(git_config_backend *backend, const char *key, git_config_entry **ou/;"	f	typeref:typename:int	file:
config_memory_iterator	extern/libgit2/src/config_mem.c	/^static int config_memory_iterator($/;"	f	typeref:typename:int	file:
config_memory_lock	extern/libgit2/src/config_mem.c	/^static int config_memory_lock(git_config_backend *backend)$/;"	f	typeref:typename:int	file:
config_memory_open	extern/libgit2/src/config_mem.c	/^static int config_memory_open(git_config_backend *backend, git_config_level_t level, const git_r/;"	f	typeref:typename:int	file:
config_memory_parse_data	extern/libgit2/src/config_mem.c	/^} config_memory_parse_data;$/;"	t	typeref:struct:__anon36e9f1a20208	file:
config_memory_set	extern/libgit2/src/config_mem.c	/^static int config_memory_set(git_config_backend *backend, const char *name, const char *value)$/;"	f	typeref:typename:int	file:
config_memory_set_multivar	extern/libgit2/src/config_mem.c	/^static int config_memory_set_multivar($/;"	f	typeref:typename:int	file:
config_memory_snapshot	extern/libgit2/src/config_mem.c	/^static int config_memory_snapshot(git_config_backend **out, git_config_backend *backend)$/;"	f	typeref:typename:int	file:
config_memory_unlock	extern/libgit2/src/config_mem.c	/^static int config_memory_unlock(git_config_backend *backend, int success)$/;"	f	typeref:typename:int	file:
config_open	extern/libgit2/src/config_file.c	/^static int config_open(git_config_backend *cfg, git_config_level_t level, const git_repository */;"	f	typeref:typename:int	file:
config_read	extern/libgit2/src/config_file.c	/^static int config_read($/;"	f	typeref:typename:int	file:
config_read_buffer	extern/libgit2/src/config_file.c	/^static int config_read_buffer($/;"	f	typeref:typename:int	file:
config_readonly_open	extern/libgit2/src/config_snapshot.c	/^static int config_readonly_open(git_config_backend *cfg, git_config_level_t level, const git_rep/;"	f	typeref:typename:int	file:
config_refresh	extern/libgit2/src/config_file.c	/^static int config_refresh(git_config_backend *cfg)$/;"	f	typeref:typename:int	file:
config_refresh_from_buffer	extern/libgit2/src/config_file.c	/^static int config_refresh_from_buffer(git_config_backend *cfg, const char *buf, size_t buflen)$/;"	f	typeref:typename:int	file:
config_s	extern/libgit2/deps/zlib/deflate.c	/^typedef struct config_s {$/;"	s	file:
config_set	extern/libgit2/examples/config.c	/^static int config_set(git_config *cfg, const char *key, const char *value)$/;"	f	typeref:typename:int	file:
config_set	extern/libgit2/src/config_file.c	/^static int config_set(git_config_backend *cfg, const char *name, const char *value)$/;"	f	typeref:typename:int	file:
config_set_entries	extern/libgit2/src/config_file.c	/^static int config_set_entries(git_config_backend *cfg, git_config_entries *entries)$/;"	f	typeref:typename:int	file:
config_set_multivar	extern/libgit2/src/config_file.c	/^static int config_set_multivar($/;"	f	typeref:typename:int	file:
config_set_multivar_readonly	extern/libgit2/src/config_snapshot.c	/^static int config_set_multivar_readonly($/;"	f	typeref:typename:int	file:
config_set_readonly	extern/libgit2/src/config_snapshot.c	/^static int config_set_readonly(git_config_backend *cfg, const char *name, const char *value)$/;"	f	typeref:typename:int	file:
config_snapshot_backend	extern/libgit2/src/config_snapshot.c	/^} config_snapshot_backend;$/;"	t	typeref:struct:__anonb8a4a6330108	file:
config_unlock	extern/libgit2/src/config_file.c	/^static int config_unlock(git_config_backend *_cfg, int success)$/;"	f	typeref:typename:int	file:
config_unlock_readonly	extern/libgit2/src/config_snapshot.c	/^static int config_unlock_readonly(git_config_backend *_cfg, int success)$/;"	f	typeref:typename:int	file:
config_write	extern/libgit2/src/config_file.c	/^static int config_write(config_file_backend *cfg, const char *orig_key, const char *key, const p/;"	f	typeref:typename:int	file:
configmap_cache	extern/libgit2/src/repository.h	/^	git_configmap_value configmap_cache[GIT_CONFIGMAP_CACHE_MAX];$/;"	m	struct:git_repository	typeref:typename:git_configmap_value[]
configuration_table	extern/libgit2/deps/zlib/deflate.c	/^local const config configuration_table[10] = {$/;"	v	typeref:typename:local const config[10]
configuration_table	extern/libgit2/deps/zlib/deflate.c	/^local const config configuration_table[2] = {$/;"	v	typeref:typename:local const config[2]
configured	extern/libgit2/src/transports/auth_negotiate.c	/^	unsigned configured : 1,$/;"	m	struct:__anon8bc72ece0108	typeref:typename:unsigned:1	file:
configured_ident	extern/libgit2/src/refs.c	/^int configured_ident(git_signature **out, const git_repository *repo)$/;"	f	typeref:typename:int
confirm_submodule_status	extern/libgit2/tests/submodule/status.c	/^static int confirm_submodule_status($/;"	f	typeref:typename:int	file:
conflict_driver_apply	extern/libgit2/tests/merge/driver.c	/^static int conflict_driver_apply($/;"	f	typeref:typename:int	file:
conflict_entry_name	extern/libgit2/src/checkout.c	/^static int conflict_entry_name($/;"	f	typeref:typename:int	file:
conflict_name_cmp	extern/libgit2/src/index.c	/^static int conflict_name_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
conflict_pathspec_match	extern/libgit2/src/checkout.c	/^GIT_INLINE(bool) conflict_pathspec_match($/;"	f	typeref:typename:bool
conflicts	extern/libgit2/src/merge.h	/^	git_vector conflicts;$/;"	m	struct:__anon41711a830408	typeref:typename:git_vector
conflicts	extern/libgit2/tests/checkout/typechange.c	/^	int conflicts;$/;"	m	struct:__anone3edc9c60108	typeref:typename:int	file:
conflicts	extern/libgit2/tests/index/addall.c	/^	size_t conflicts;$/;"	m	struct:__anon6aee9ba20108	typeref:typename:size_t	file:
conndata	extern/libgit2/tests/network/redirect.c	/^static git_net_url conndata;$/;"	v	typeref:typename:git_net_url	file:
conndata	extern/libgit2/tests/network/urlparse.c	/^static git_net_url conndata;$/;"	v	typeref:typename:git_net_url	file:
connect_to_local_repository	extern/libgit2/tests/network/remote/local.c	/^static void connect_to_local_repository(const char *local_repository)$/;"	f	typeref:typename:void	file:
connected	extern/libgit2/src/streams/mbedtls.c	/^	bool connected;$/;"	m	struct:__anon7f3464670108	typeref:typename:bool	file:
connected	extern/libgit2/src/streams/openssl.c	/^	bool connected;$/;"	m	struct:__anon6b0c21600108	typeref:typename:bool	file:
connected	extern/libgit2/src/transports/http.c	/^	bool connected;$/;"	m	struct:__anon0458035d0308	typeref:typename:bool	file:
connected	extern/libgit2/src/transports/local.c	/^	unsigned connected : 1,$/;"	m	struct:__anonb65cbde80108	typeref:typename:unsigned:1	file:
connected	extern/libgit2/src/transports/smart.h	/^		connected : 1;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:unsigned:1
connection	extern/libgit2/src/push.h	/^	git_remote_connection_opts connection;$/;"	m	struct:git_push	typeref:typename:git_remote_connection_opts
connection	extern/libgit2/src/transports/winhttp.c	/^	HINTERNET connection;$/;"	m	struct:__anon981dd28b0408	typeref:typename:HINTERNET	file:
connection_affinity	extern/libgit2/src/transports/auth.h	/^	unsigned connection_affinity : 1;$/;"	m	struct:git_http_auth_context	typeref:typename:unsigned:1
const	extern/libgit2/deps/zlib/zconf.h	/^#    define const /;"	d
constMethod	extern/NamedType/main.cpp	/^        int constMethod() const{ return x; }$/;"	f	class:A	typeref:typename:int	file:
constStrongA	extern/NamedType/main.cpp	/^    const StrongA constStrongA(A(42));$/;"	v	typeref:typename:const StrongA
const_iterator	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef It const_iterator;$/;"	t	class:pugi::xml_object_range	typeref:typename:It
const_iterator	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef const xpath_node* const_iterator;$/;"	t	class:pugi::xpath_node_set	typeref:typename:const xpath_node *
construct	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static xml_memory_page* construct(void* memory) {$/;"	f	struct:xml_memory_page	typeref:typename:xml_memory_page *	file:
containing_dir	extern/libgit2/src/attr_file.h	/^	char *containing_dir;$/;"	m	struct:__anon32d629ad0208	typeref:typename:char *
containing_dir_length	extern/libgit2/src/attr_file.h	/^	size_t containing_dir_length;$/;"	m	struct:__anon32d629ad0208	typeref:typename:size_t
contains_all_cb	extern/libgit2/tests/config/memory.c	/^static int contains_all_cb(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
contains_angle_brackets	extern/libgit2/src/signature.c	/^static bool contains_angle_brackets(const char *input)$/;"	f	typeref:typename:bool	file:
contains_branches	extern/libgit2/tests/refs/branches/iterator.c	/^static void contains_branches(struct expectations exp[], git_branch_iterator *iter)$/;"	f	typeref:typename:void	file:
contains_data	extern/libgit2/include/git2/diff.h	/^	unsigned int contains_data;$/;"	m	struct:__anon72022fed0908	typeref:typename:unsigned int
content	extern/libgit2/include/git2/diff.h	/^	const char *content; \/**< Pointer to diff text, not NUL-byte terminated *\/$/;"	m	struct:__anon72022fed0c08	typeref:typename:const char *
content	extern/libgit2/src/parse.h	/^	const char *content;$/;"	m	struct:__anon1f11c2ce0108	typeref:typename:const char *
content	extern/libgit2/src/repo_template.h	/^	const char *content;$/;"	m	struct:__anon60a8fbc40108	typeref:typename:const char *
content	extern/libgit2/tests/core/vector.c	/^	int content;$/;"	m	struct:__anon91269fe40108	typeref:typename:int	file:
content	extern/libgit2/tests/odb/backend/backend_helpers.h	/^	const char *content;$/;"	m	struct:__anon7ee03db30108	typeref:typename:const char *
content_len	extern/libgit2/include/git2/diff.h	/^	size_t content_len;  \/**< Number of bytes of data *\/$/;"	m	struct:__anon72022fed0c08	typeref:typename:size_t
content_len	extern/libgit2/src/parse.h	/^	size_t content_len;$/;"	m	struct:__anon1f11c2ce0108	typeref:typename:size_t
content_length	extern/libgit2/deps/http-parser/http_parser.h	/^  uint64_t content_length; \/* # bytes in body (0 if no Content-Length header) *\/$/;"	m	struct:http_parser	typeref:typename:uint64_t
content_length	extern/libgit2/src/transports/http.c	/^	char *content_length;$/;"	m	struct:__anon0458035d0308	typeref:typename:char *	file:
content_offset	extern/libgit2/include/git2/diff.h	/^	git_off_t content_offset; \/**< Offset in the original file to the content *\/$/;"	m	struct:__anon72022fed0c08	typeref:typename:git_off_t
content_size	extern/libgit2/src/patch.h	/^	size_t content_size;$/;"	m	struct:git_patch	typeref:typename:size_t
content_type	extern/libgit2/src/transports/http.c	/^	char *content_type;$/;"	m	struct:__anon0458035d0308	typeref:typename:char *	file:
contents	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		const xpath_lexer_string& contents() const$/;"	f	class:xpath_lexer	typeref:typename:const xpath_lexer_string &	file:
contents	extern/libgit2/script/user_model.c	/^	void **contents;$/;"	m	struct:git_vector	typeref:typename:void **	file:
contents	extern/libgit2/src/vector.h	/^	void **contents;$/;"	m	struct:git_vector	typeref:typename:void **
context_lines	extern/libgit2/include/git2/diff.h	/^	uint32_t    context_lines;$/;"	m	struct:__anon72022fed0608	typeref:typename:uint32_t
context_size	extern/libgit2/src/patch.h	/^	size_t context_size;$/;"	m	struct:git_patch	typeref:typename:size_t
control_head_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 control_head_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
control_types	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^enum control_types {$/;"	g	file:
conversionOK	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^	conversionOK,           \/* conversion successful *\/$/;"	e	enum:__anonce5e58f80103	file:
convert	extern/NamedType/catch.hpp	/^            convert(const Fake& t) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::enable_if<::Catch::Detail::IsStreamInsertable<Fake>::value,std::string>::type
convert	extern/NamedType/catch.hpp	/^        static std::string convert( std::vector<T,Allocator> const& v ) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/NamedType/catch.hpp	/^        static std::string convert(NSObject* nsObject) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/NamedType/catch.hpp	/^        static std::string convert(NSString * nsstring) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/NamedType/catch.hpp	/^        static std::string convert(R C::* p) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/NamedType/catch.hpp	/^        static std::string convert(U* p) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/NamedType/catch.hpp	/^        static std::string convert(const T& t) {$/;"	f	struct:Catch::EnumStringMaker	typeref:typename:std::string
convert	extern/NamedType/catch.hpp	/^        static std::string convert(const char* str) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/NamedType/catch.hpp	/^        static std::string convert(const std::pair<T1, T2>& pair) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^            convert(const Fake& value) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::enable_if<::Catch::Detail::IsStreamInsertable<Fake>::value,std::string>::type
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^        static std::string convert( R const& range ) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^        static std::string convert(NSObject* nsObject) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^        static std::string convert(NSString * nsstring) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^        static std::string convert(R C::* p) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^        static std::string convert(T const(&arr)[SZ]) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^        static std::string convert(U* p) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^        static std::string convert(char const* str) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^        static std::string convert(const std::monostate&) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^        static std::string convert(const std::optional<T>& optional) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^        static std::string convert(const std::pair<T1, T2>& pair) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^        static std::string convert(signed char const* str) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	extern/OpenXLSX/tests/catch/catch.hpp	/^        static std::string convert(unsigned char const* str) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convertUnknownEnumToString	extern/OpenXLSX/tests/catch/catch.hpp	/^        std::string convertUnknownEnumToString( E e ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
convertUnstreamable	extern/OpenXLSX/tests/catch/catch.hpp	/^         std::string>::type convertUnstreamable(T const& ex) {$/;"	f	namespace:Catch::Detail
convertUnstreamable	extern/OpenXLSX/tests/catch/catch.hpp	/^        , std::string>::type convertUnstreamable( T const& value ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::enable_if<std::is_enum<T>::value,std::string>::type
convertUnstreamable	extern/OpenXLSX/tests/catch/catch.hpp	/^        std::string>::type convertUnstreamable( T const& ) {$/;"	f	namespace:Catch::Detail
convert_attrs	extern/libgit2/src/crlf.c	/^static int convert_attrs($/;"	f	typeref:typename:int	file:
convert_buffer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool convert_buffer(char_t*& out_buffer, size_t& out_length, xml_encoding encoding, co/;"	f	typeref:typename:PUGI__FN bool
convert_buffer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool convert_buffer(char_t*& out_buffer, size_t& out_length, xml_encoding encoding,/;"	f	typeref:typename:PUGI__FN bool
convert_buffer_endian_swap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool convert_buffer_endian_swap(char_t*& out_buffer, size_t& out_length, const void* c/;"	f	typeref:typename:PUGI__FN bool
convert_buffer_generic	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename D> PUGI__FN bool convert_buffer_generic(char_t*& out_buffer, size_t& out_len/;"	f	typeref:typename:PUGI__FN bool
convert_buffer_generic	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool convert_buffer_generic(char_t*& out_buffer, size_t& out_length, const void* co/;"	f	typeref:typename:PUGI__FN bool
convert_buffer_latin1	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool convert_buffer_latin1(char_t*& out_buffer, size_t& out_length, const void* con/;"	f	typeref:typename:PUGI__FN bool
convert_buffer_output	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN size_t convert_buffer_output(char_t* r_char, uint8_t* r_u8, uint16_t* r_u16, uint32_t*/;"	f	typeref:typename:PUGI__FN size_t
convert_buffer_output	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN size_t convert_buffer_output(char_t* \/* r_char *\/, uint8_t* r_u8, uint16_t* r_u16/;"	f	typeref:typename:PUGI__FN size_t
convert_buffer_output_generic	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN size_t convert_buffer_output_generic(typename T::value_type dest, const char_t* dat/;"	f	typeref:typename:PUGI__FN size_t
convert_number_to_boolean	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool convert_number_to_boolean(double value)$/;"	f	typeref:typename:PUGI__FN bool
convert_number_to_mantissa_exponent	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN void convert_number_to_mantissa_exponent(double value, char (&buffer)[32], char** out_/;"	f	typeref:typename:PUGI__FN void
convert_number_to_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_string convert_number_to_string(double value, xpath_allocator* alloc)$/;"	f	typeref:typename:PUGI__FN xpath_string
convert_number_to_string_special	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const char_t* convert_number_to_string_special(double value)$/;"	f	typeref:typename:PUGI__FN const char_t *
convert_path_heap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN char* convert_path_heap(const wchar_t* str) {$/;"	f	typeref:typename:PUGI__FN char *
convert_string_to_number	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN double convert_string_to_number(const char_t* string)$/;"	f	typeref:typename:PUGI__FN double
convert_string_to_number_scratch	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool convert_string_to_number_scratch(char_t (&buffer)[32], const char_t* begin, const/;"	f	typeref:typename:PUGI__FN bool
convert_wchar_endian_swap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	f	typeref:typename:PUGI__FN void
coptable	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^static const pcre_uint8 coptable[] = {$/;"	v	typeref:typename:const pcre_uint8[]	file:
copy	extern/OpenXLSX/tests/c++/Test01_DocumentCreation.cpp	/^XLDocument copy = doc;$/;"	v	typeref:typename:XLDocument
copy	extern/OpenXLSX/tests/c++/Test01_DocumentCreation.cpp	/^XLDocument copy = std::move(doc);$/;"	v	typeref:typename:XLDocument
copy	extern/OpenXLSX/tests/c++/Test01_DocumentCreation.cpp	/^XLDocument copy;$/;"	v	typeref:typename:XLDocument
copy_common	extern/libgit2/src/transaction.c	/^static int copy_common(transaction_node *node, git_transaction *tx, const git_signature *sig, co/;"	f	typeref:typename:int	file:
copy_file	extern/libgit2/tests/index/tests.c	/^static void copy_file(const char *src, const char *dst)$/;"	f	typeref:typename:void	file:
copy_ovector	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void copy_ovector(compiler_common *common, int topbracket)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
copy_private_data	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void copy_private_data(compiler_common *common, pcre_uchar *cc, pcre_uchar *ccend,$/;"	f	typeref:typename:void	file:
copy_refspecs	extern/libgit2/src/remote.c	/^static int copy_refspecs(git_strarray *array, const git_remote *remote, unsigned int push)$/;"	f	typeref:typename:int	file:
copy_threshold	extern/libgit2/include/git2/diff.h	/^	uint16_t copy_threshold;$/;"	m	struct:__anon72022fed0f08	typeref:typename:uint16_t
copy_xpath_variable	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool copy_xpath_variable(xpath_variable* lhs, const xpath_variable* rhs)$/;"	f	typeref:typename:PUGI__FN bool
core_eol	extern/libgit2/src/crlf.c	/^	int core_eol;$/;"	m	struct:crlf_attrs	typeref:typename:int	file:
corrupt_thin_pack	extern/libgit2/tests/pack/indexer.c	/^static const unsigned char corrupt_thin_pack[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
corrupt_thin_pack_len	extern/libgit2/tests/pack/indexer.c	/^static const unsigned int corrupt_thin_pack_len = 67;$/;"	v	typeref:typename:const unsigned int	file:
could_be_empty	extern/libgit2/deps/pcre/pcre_compile.c	/^could_be_empty(const pcre_uchar *code, const pcre_uchar *endcode,$/;"	f	typeref:typename:BOOL	file:
could_be_empty_branch	extern/libgit2/deps/pcre/pcre_compile.c	/^could_be_empty_branch(const pcre_uchar *code, const pcre_uchar *endcode,$/;"	f	typeref:typename:BOOL	file:
count	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^  int count;                      \/* Count for repeats *\/$/;"	m	struct:stateblock	typeref:typename:int	file:
count	extern/libgit2/include/git2/message.h	/^  size_t count;$/;"	m	struct:__anond70699990208	typeref:typename:size_t
count	extern/libgit2/include/git2/oidarray.h	/^	size_t count;$/;"	m	struct:git_oidarray	typeref:typename:size_t
count	extern/libgit2/include/git2/strarray.h	/^	size_t count;$/;"	m	struct:git_strarray	typeref:typename:size_t
count	extern/libgit2/src/status.c	/^	unsigned int count;$/;"	m	struct:status_file_info	typeref:typename:unsigned int	file:
count	extern/libgit2/src/xdiff/xprepare.c	/^	long count;$/;"	m	struct:s_xdlclassifier	typeref:typename:long	file:
count	extern/libgit2/tests/checkout/tree.c	/^	int count;$/;"	m	struct:checkout_cancel_at	typeref:typename:int	file:
count	extern/libgit2/tests/core/dirent.c	/^	int count; \/* return count *\/$/;"	m	struct:name_data	typeref:typename:int	file:
count	extern/libgit2/tests/core/vector.c	/^	int count;$/;"	m	struct:__anon91269fe40108	typeref:typename:int	file:
count	extern/libgit2/tests/fetchhead/nonetwork.c	/^	int count;$/;"	m	struct:prefix_count	typeref:typename:int	file:
count	extern/libgit2/tests/status/status_helpers.h	/^	int count;$/;"	m	struct:__anon9cf2f0870208	typeref:typename:int
count	extern/libgit2/tests/submodule/lookup.c	/^	int count;$/;"	m	struct:__anon9f4c7e120108	typeref:typename:int	file:
count_allocs	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^	unsigned int count_allocs; \/* times this alloc signature seen since init *\/$/;"	m	struct:__anon6890d5050208	typeref:typename:unsigned int	file:
count_allocs_at_last_checkpoint	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^	unsigned int count_allocs_at_last_checkpoint; \/* times since last mark *\/$/;"	m	struct:__anon6890d5050208	typeref:typename:unsigned int	file:
count_attrs	extern/libgit2/tests/attr/repo.c	/^static int count_attrs($/;"	f	typeref:typename:int	file:
count_cb	extern/libgit2/tests/refs/foreachglob.c	/^static int count_cb(const char *reference_name, void *payload)$/;"	f	typeref:typename:int	file:
count_cfg_entries	extern/libgit2/tests/config/read.c	/^static int count_cfg_entries(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
count_cfg_entries_and_compare_levels	extern/libgit2/tests/config/read.c	/^static int count_cfg_entries_and_compare_levels($/;"	f	typeref:typename:int	file:
count_config_entries_cb	extern/libgit2/tests/config/config_helpers.c	/^static int count_config_entries_cb($/;"	f	typeref:typename:int	file:
count_config_entries_match	extern/libgit2/tests/config/config_helpers.c	/^int count_config_entries_match(git_repository *repo, const char *pattern)$/;"	f	typeref:typename:int
count_fsyncs	extern/libgit2/tests/refs/create.c	/^static void count_fsyncs(size_t *create_count, size_t *compress_count)$/;"	f	typeref:typename:void	file:
count_match	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void count_match(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
count_me	extern/libgit2/tests/config/snapshot.c	/^static int count_me(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
count_references	extern/libgit2/tests/online/fetchhead.c	/^static size_t count_references(void)$/;"	f	typeref:typename:size_t	file:
count_refs	extern/libgit2/tests/fetchhead/nonetwork.c	/^int count_refs(const char *ref_name, const char *remote_url, const git_oid *oid, unsigned int is/;"	f	typeref:typename:int
count_refs_called	extern/libgit2/tests/fetchhead/nonetwork.c	/^static bool count_refs_called;$/;"	v	typeref:typename:bool	file:
count_run	extern/libgit2/src/tsort.c	/^static ssize_t count_run($/;"	f	typeref:typename:ssize_t	file:
count_slashes	extern/libgit2/src/tree.c	/^GIT_INLINE(size_t) count_slashes(const char *path)$/;"	f	typeref:typename:size_t
counter	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef utf16_counter counter;$/;"	t	struct:wchar_selector	typeref:typename:utf16_counter	file:
counter	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef utf32_counter counter;$/;"	t	struct:wchar_selector	typeref:typename:utf32_counter	file:
counter	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            std::size_t counter;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:std::size_t
counter	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^        std::size_t counter = 0;$/;"	m	struct:Catch::TAPReporter	typeref:typename:std::size_t
counter	extern/libgit2/tests/online/fetch.c	/^static int counter;$/;"	v	typeref:typename:int	file:
counter	extern/libgit2/tests/submodule/status.c	/^	size_t counter;$/;"	m	struct:__anon75f7307c0108	typeref:typename:size_t	file:
counting_objects_fmt	extern/libgit2/src/transports/local.c	/^static const char *counting_objects_fmt = "Counting objects %d\\r";$/;"	v	typeref:typename:const char *	file:
cp_by_fd	extern/libgit2/src/futils.c	/^static int cp_by_fd(int ifd, int ofd, bool close_fd_when_done)$/;"	f	typeref:typename:int	file:
cp_link	extern/libgit2/src/futils.c	/^static int cp_link(const char *from, const char *to, size_t link_size)$/;"	f	typeref:typename:int	file:
cp_r_info	extern/libgit2/src/futils.c	/^} cp_r_info;$/;"	t	typeref:struct:__anonce3edc250208	file:
cr	extern/libgit2/src/buf_text.h	/^	unsigned int nul, cr, lf, crlf; \/* NUL, CR, LF and CRLF counts *\/$/;"	m	struct:__anon6db101b40208	typeref:typename:unsigned int
crc	extern/libgit2/src/indexer.c	/^	uint32_t crc;$/;"	m	struct:entry	typeref:typename:uint32_t	file:
crc32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define crc32 /;"	d
crc32	extern/libgit2/deps/zlib/crc32.c	/^unsigned long ZEXPORT crc32(crc, buf, len)$/;"	f
crc32	extern/libgit2/deps/zlib/zconf.h	/^#  define crc32 /;"	d
crc32_big	extern/libgit2/deps/zlib/crc32.c	/^local unsigned long crc32_big(crc, buf, len)$/;"	f
crc32_combine	extern/libgit2/deps/zlib/crc32.c	/^uLong ZEXPORT crc32_combine(crc1, crc2, len2)$/;"	f
crc32_combine	extern/libgit2/deps/zlib/zconf.h	/^#  define crc32_combine /;"	d
crc32_combine	extern/libgit2/deps/zlib/zlib.h	/^#    define crc32_combine /;"	d
crc32_combine64	extern/libgit2/deps/zlib/zconf.h	/^#  define crc32_combine64 /;"	d
crc32_combine_	extern/libgit2/deps/zlib/crc32.c	/^local uLong crc32_combine_(crc1, crc2, len2)$/;"	f
crc32_little	extern/libgit2/deps/zlib/crc32.c	/^local unsigned long crc32_little(crc, buf, len)$/;"	f
crc32_z	extern/libgit2/deps/zlib/crc32.c	/^unsigned long ZEXPORT crc32_z(crc, buf, len)$/;"	f
crc32_z	extern/libgit2/deps/zlib/zconf.h	/^#  define crc32_z /;"	d
crc_object	extern/libgit2/src/indexer.c	/^static int crc_object(uint32_t *crc_out, git_mwindow_file *mwf, git_off_t start, git_off_t size)$/;"	f	typeref:typename:int	file:
crc_table	extern/libgit2/deps/zlib/crc32.c	/^local z_crc_t FAR crc_table[TBLS][256];$/;"	v	typeref:typename:local z_crc_t FAR[][256]
crc_table	extern/libgit2/deps/zlib/crc32.h	/^local const z_crc_t FAR crc_table[TBLS][256] =$/;"	v	typeref:typename:local const z_crc_t FAR[][256]
crc_table_empty	extern/libgit2/deps/zlib/crc32.c	/^local volatile int crc_table_empty = 1;$/;"	v	typeref:typename:local volatile int
create	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static xpath_query_impl* create()$/;"	f	struct:xpath_query_impl	typeref:typename:xpath_query_impl *	file:
create	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static xml_stream_chunk* create() {$/;"	f	struct:xml_stream_chunk	typeref:typename:xml_stream_chunk *	file:
create	lr.hpp	/^template <typename T> inline constexpr std::variant<L, T> create(T &&t) {$/;"	f	namespace:lr	typeref:typename:std::variant<L,T>
create_and_configure_origin	extern/libgit2/src/clone.c	/^static int create_and_configure_origin($/;"	f	typeref:typename:int	file:
create_annotation	extern/libgit2/tests/object/tag/write.c	/^void create_annotation(git_oid *tag_id, const char *name)$/;"	f	typeref:typename:void
create_binary	extern/libgit2/src/patch_generate.c	/^static int create_binary($/;"	f	typeref:typename:int	file:
create_bitflip_filter	extern/libgit2/tests/filter/custom_helpers.c	/^git_filter *create_bitflip_filter(void)$/;"	f	typeref:typename:git_filter *
create_branch	extern/libgit2/src/branch.c	/^static int create_branch($/;"	f	typeref:typename:int	file:
create_branch	extern/libgit2/src/clone.c	/^static int create_branch($/;"	f	typeref:typename:int	file:
create_commit_from_ids	extern/libgit2/tests/commit/write.c	/^static int create_commit_from_ids($/;"	f	typeref:typename:int	file:
create_compress_filter	extern/libgit2/tests/filter/stream.c	/^git_filter *create_compress_filter(void)$/;"	f	typeref:typename:git_filter *
create_conflict	extern/libgit2/tests/checkout/tree.c	/^static void create_conflict(const char *path)$/;"	f	typeref:typename:void	file:
create_conflicting_index	extern/libgit2/tests/checkout/conflict.c	/^static void create_conflicting_index(void)$/;"	f	typeref:typename:void	file:
create_deletion_refspecs	extern/libgit2/tests/online/push_util.c	/^int create_deletion_refspecs(git_vector *out, const git_remote_head **heads, size_t heads_len)$/;"	f	typeref:typename:int
create_dummy_commit	extern/libgit2/tests/network/remote/push.c	/^void create_dummy_commit(git_reference **out, git_repository *repo)$/;"	f	typeref:typename:void
create_empty_file	extern/libgit2/src/repository.c	/^static int create_empty_file(const char *path, mode_t mode)$/;"	f	typeref:typename:int	file:
create_erroneous_filter	extern/libgit2/tests/filter/custom_helpers.c	/^git_filter *create_erroneous_filter(const char *attrs)$/;"	f	typeref:typename:git_filter *
create_error	extern/libgit2/src/stash.c	/^static int create_error(int error, const char *msg)$/;"	f	typeref:typename:int	file:
create_fake_stash_reference_and_reflog	extern/libgit2/tests/refs/revparse.c	/^static void create_fake_stash_reference_and_reflog(git_repository *repo)$/;"	f	typeref:typename:void	file:
create_hash	extern/libgit2/src/hash/sha1/win32.h	/^	hash_win32_cng_create_hash_fn create_hash;$/;"	m	struct:hash_cng_prov	typeref:typename:hash_win32_cng_create_hash_fn
create_index	extern/libgit2/tests/checkout/conflict.c	/^static void create_index(struct checkout_index_entry *entries, size_t entries_len)$/;"	f	typeref:typename:void	file:
create_index_error	extern/libgit2/src/index.c	/^static int create_index_error(int error, const char *msg)$/;"	f	typeref:typename:int	file:
create_index_names	extern/libgit2/tests/checkout/conflict.c	/^static void create_index_names(struct checkout_name_entry *entries, size_t entries_len)$/;"	f	typeref:typename:void	file:
create_initial_commit	extern/libgit2/examples/init.c	/^static void create_initial_commit(git_repository *repo)$/;"	f	typeref:typename:void	file:
create_merge_commit	extern/libgit2/examples/merge.c	/^static int create_merge_commit(git_repository *repo, git_index *index, merge_options *opts)$/;"	f	typeref:typename:int	file:
create_name_extension_data	extern/libgit2/src/index.c	/^static int create_name_extension_data(git_buf *name_buf, git_index_name_entry *conflict_name)$/;"	f	typeref:typename:int	file:
create_new_reflog_file	extern/libgit2/src/refdb_fs.c	/^static int create_new_reflog_file(const char *filepath)$/;"	f	typeref:typename:int	file:
create_note	extern/libgit2/tests/notes/notes.c	/^static void create_note(git_oid *note_oid, const char *canonical_namespace, const char *target_s/;"	f	typeref:typename:void	file:
create_paths	extern/libgit2/tests/iterator/index.c	/^static void create_paths(git_index *index, const char *root, int depth)$/;"	f	typeref:typename:void	file:
create_paths	extern/libgit2/tests/iterator/workdir.c	/^static void create_paths(const char *root, int depth)$/;"	f	typeref:typename:void	file:
create_popped_tree	extern/libgit2/src/tree.c	/^static int create_popped_tree(tree_stack_entry *current, tree_stack_entry *popped, git_buf *comp/;"	f	typeref:typename:int	file:
create_refs	extern/libgit2/tests/threads/refdb.c	/^static void *create_refs(void *arg)$/;"	f	typeref:typename:void *	file:
create_remote_tracking_branch	extern/libgit2/tests/merge/workdir/setup.c	/^static int create_remote_tracking_branch(const char *branch_name, const char *oid_str)$/;"	f	typeref:typename:int	file:
create_reuc_extension_data	extern/libgit2/src/index.c	/^static int create_reuc_extension_data(git_buf *reuc_buf, git_index_reuc_entry *reuc)$/;"	f	typeref:typename:int	file:
create_reverse_filter	extern/libgit2/tests/filter/custom_helpers.c	/^git_filter *create_reverse_filter(const char *attrs)$/;"	f	typeref:typename:git_filter *
create_tmp_global_config	extern/libgit2/tests/repo/repo_helpers.c	/^void create_tmp_global_config(const char *dirname, const char *key, const char *val)$/;"	f	typeref:typename:void
create_to_odb_data	extern/libgit2/tests/resources/generate_crlf.sh	/^create_to_odb_data() {$/;"	f
create_to_workdir_data	extern/libgit2/tests/resources/generate_crlf.sh	/^create_to_workdir_data() {$/;"	f
create_tracking_branch	extern/libgit2/src/clone.c	/^static int create_tracking_branch($/;"	f	typeref:typename:int	file:
create_virtual_base	extern/libgit2/src/merge.c	/^static int create_virtual_base($/;"	f	typeref:typename:int	file:
create_wildcard_filter	extern/libgit2/tests/filter/wildcard.c	/^static git_filter *create_wildcard_filter(void)$/;"	f	typeref:typename:git_filter *	file:
create_with_name	extern/libgit2/tests/remote/create.c	/^static int create_with_name(git_remote **remote, git_repository *repo, const char *name, const c/;"	f	typeref:typename:int	file:
created_lock	extern/libgit2/src/filebuf.h	/^	bool created_lock;$/;"	m	struct:git_filebuf	typeref:typename:bool
creation_disposition	extern/libgit2/src/win32/posix_w32.c	/^	DWORD creation_disposition;$/;"	m	struct:open_opts	typeref:typename:DWORD	file:
cred	extern/libgit2/src/transports/http.c	/^	git_cred *cred;$/;"	m	struct:__anon0458035d0208	typeref:typename:git_cred *	file:
cred	extern/libgit2/src/transports/ssh.c	/^	git_cred *cred;$/;"	m	struct:__anon944cd18b0208	typeref:typename:git_cred *	file:
cred	extern/libgit2/src/transports/winhttp.c	/^	git_cred *cred;$/;"	m	struct:__anon981dd28b0308	typeref:typename:git_cred *	file:
cred_acquire_cb	extern/libgit2/examples/common.c	/^int cred_acquire_cb(git_cred **out,$/;"	f	typeref:typename:int
cred_acquire_cb	extern/libgit2/src/transports/smart.h	/^	git_cred_acquire_cb cred_acquire_cb;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_cred_acquire_cb
cred_acquire_cb	extern/libgit2/tests/online/push.c	/^static int cred_acquire_cb($/;"	f	typeref:typename:int	file:
cred_acquire_payload	extern/libgit2/src/transports/smart.h	/^	void *cred_acquire_payload;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:void *
cred_cb	extern/libgit2/tests/online/clone.c	/^static int cred_cb(git_cred **cred, const char *url, const char *user_from_url,$/;"	f	typeref:typename:int	file:
cred_count_calls_cb	extern/libgit2/tests/online/clone.c	/^static int cred_count_calls_cb(git_cred **cred, const char *url, const char *user,$/;"	f	typeref:typename:int	file:
cred_default	extern/libgit2/tests/online/clone.c	/^int cred_default($/;"	f	typeref:typename:int
cred_failure_cb	extern/libgit2/tests/online/clone.c	/^static int cred_failure_cb($/;"	f	typeref:typename:int	file:
cred_foo_bar	extern/libgit2/tests/online/clone.c	/^static int cred_foo_bar(git_cred **cred, const char *url, const char *username_from_url,$/;"	f	typeref:typename:int	file:
credentials	extern/libgit2/include/git2/proxy.h	/^	git_cred_acquire_cb credentials;$/;"	m	struct:__anon63af67960208	typeref:typename:git_cred_acquire_cb
credentials	extern/libgit2/include/git2/remote.h	/^	git_cred_acquire_cb credentials;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_cred_acquire_cb
credtype	extern/libgit2/include/git2/sys/cred.h	/^	git_credtype_t credtype; \/**< A type of credential *\/$/;"	m	struct:git_cred	typeref:typename:git_credtype_t
credtypes	extern/libgit2/src/transports/auth.h	/^	git_credtype_t credtypes;$/;"	m	struct:__anonf415dd740208	typeref:typename:git_credtype_t
credtypes	extern/libgit2/src/transports/auth.h	/^	git_credtype_t credtypes;$/;"	m	struct:git_http_auth_context	typeref:typename:git_credtype_t
credtypes	extern/libgit2/src/transports/http.c	/^	git_credtype_t credtypes;$/;"	m	struct:__anon0458035d0208	typeref:typename:git_credtype_t	file:
crlf	extern/libgit2/src/buf_text.h	/^	unsigned int nul, cr, lf, crlf; \/* NUL, CR, LF and CRLF counts *\/$/;"	m	struct:__anon6db101b40208	typeref:typename:unsigned int
crlf_action	extern/libgit2/src/crlf.c	/^	int crlf_action; \/* the core.autocrlf setting *\/$/;"	m	struct:crlf_attrs	typeref:typename:int	file:
crlf_apply	extern/libgit2/src/crlf.c	/^static int crlf_apply($/;"	f	typeref:typename:int	file:
crlf_apply_to_odb	extern/libgit2/src/crlf.c	/^static int crlf_apply_to_odb($/;"	f	typeref:typename:int	file:
crlf_apply_to_workdir	extern/libgit2/src/crlf.c	/^static int crlf_apply_to_workdir($/;"	f	typeref:typename:int	file:
crlf_attrs	extern/libgit2/src/crlf.c	/^struct crlf_attrs {$/;"	s	file:
crlf_check	extern/libgit2/src/crlf.c	/^static int crlf_check($/;"	f	typeref:typename:int	file:
crlf_cleanup	extern/libgit2/src/crlf.c	/^static void crlf_cleanup($/;"	f	typeref:typename:void	file:
crlf_filter	extern/libgit2/src/crlf.c	/^struct crlf_filter {$/;"	s	file:
crtdbg__calloc	extern/libgit2/src/allocators/win32_crtdbg.c	/^static void *crtdbg__calloc(size_t nelem, size_t elsize, const char *file, int line)$/;"	f	typeref:typename:void *	file:
crtdbg__free	extern/libgit2/src/allocators/win32_crtdbg.c	/^static void crtdbg__free(void *ptr)$/;"	f	typeref:typename:void	file:
crtdbg__malloc	extern/libgit2/src/allocators/win32_crtdbg.c	/^static void *crtdbg__malloc(size_t len, const char *file, int line)$/;"	f	typeref:typename:void *	file:
crtdbg__mallocarray	extern/libgit2/src/allocators/win32_crtdbg.c	/^static void *crtdbg__mallocarray(size_t nelem, size_t elsize, const char *file, int line)$/;"	f	typeref:typename:void *	file:
crtdbg__realloc	extern/libgit2/src/allocators/win32_crtdbg.c	/^static void *crtdbg__realloc(void *ptr, size_t size, const char *file, int line)$/;"	f	typeref:typename:void *	file:
crtdbg__reallocarray	extern/libgit2/src/allocators/win32_crtdbg.c	/^static void *crtdbg__reallocarray(void *ptr, size_t nelem, size_t elsize, const char *file, int /;"	f	typeref:typename:void *	file:
crtdbg__strdup	extern/libgit2/src/allocators/win32_crtdbg.c	/^static char *crtdbg__strdup(const char *str, const char *file, int line)$/;"	f	typeref:typename:char *	file:
crtdbg__strndup	extern/libgit2/src/allocators/win32_crtdbg.c	/^static char *crtdbg__strndup(const char *str, size_t n, const char *file, int line)$/;"	f	typeref:typename:char *	file:
crtdbg__substrdup	extern/libgit2/src/allocators/win32_crtdbg.c	/^static char *crtdbg__substrdup(const char *start, size_t n, const char *file, int line)$/;"	f	typeref:typename:char *	file:
crtp	extern/NamedType/crtp.hpp	/^struct crtp$/;"	s	namespace:fluent
crtp	newtype.hpp	/^template <typename T, template <typename> class crtpType> struct crtp {$/;"	s	namespace:abo::nt
crtp	ntskills.hpp	/^template <typename T, template <typename> class crtpType> struct crtp {$/;"	s	namespace:nt
cryptoapi	extern/libgit2/src/hash/sha1/win32.h	/^		struct hash_cryptoapi_ctx cryptoapi;$/;"	m	union:git_hash_sha1_ctx::__anon67941f95030a	typeref:struct:hash_cryptoapi_ctx
cryptoapi	extern/libgit2/src/hash/sha1/win32.h	/^		struct hash_cryptoapi_prov cryptoapi;$/;"	m	union:__anon67941f950108::__anon67941f95020a	typeref:struct:hash_cryptoapi_prov
csec	extern/libgit2/src/win32/thread.h	/^		CRITICAL_SECTION csec;$/;"	m	union:__anon7162bc2d0308::__anon7162bc2d040a	typeref:typename:CRITICAL_SECTION
ct_data	extern/libgit2/deps/zlib/deflate.h	/^} FAR ct_data;$/;"	t	typeref:struct:ct_data_s FAR
ct_data_s	extern/libgit2/deps/zlib/deflate.h	/^typedef struct ct_data_s {$/;"	s
ct_parse_attr	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ct_parse_attr = 2,        \/\/ \\0, &, \\r, ', "$/;"	e	enum:chartype_t	file:
ct_parse_attr_ws	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ct_parse_attr_ws = 4,    \/\/ \\0, &, \\r, ', ", \\n, tab$/;"	e	enum:chartype_t	file:
ct_parse_cdata	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ct_parse_cdata = 16,    \/\/ \\0, ], >, \\r$/;"	e	enum:chartype_t	file:
ct_parse_comment	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ct_parse_comment = 32,    \/\/ \\0, -, >, \\r$/;"	e	enum:chartype_t	file:
ct_parse_pcdata	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ct_parse_pcdata = 1,    \/\/ \\0, &, \\r, <$/;"	e	enum:chartype_t	file:
ct_space	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ct_space = 8,            \/\/ \\r, \\n, space, tab$/;"	e	enum:chartype_t	file:
ct_start_symbol	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ct_start_symbol = 128    \/\/ Any symbol > 127, a-z, A-Z, _, :$/;"	e	enum:chartype_t	file:
ct_symbol	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ct_symbol = 64,            \/\/ Any symbol > 127, a-z, A-Z, 0-9, _, :, -, .$/;"	e	enum:chartype_t	file:
ctime	extern/libgit2/include/git2/index.h	/^	git_index_time ctime;$/;"	m	struct:git_index_entry	typeref:typename:git_index_time
ctime	extern/libgit2/src/index.c	/^	struct entry_time ctime;$/;"	m	struct:entry_long	typeref:struct:entry_time	file:
ctime	extern/libgit2/src/index.c	/^	struct entry_time ctime;$/;"	m	struct:entry_short	typeref:struct:entry_time	file:
ctor_called	extern/libgit2/tests/stream/deprecated.c	/^static int ctor_called;$/;"	v	typeref:typename:int	file:
ctor_called	extern/libgit2/tests/stream/registration.c	/^static int ctor_called;$/;"	v	typeref:typename:int	file:
ctx	extern/libgit2/src/config_parse.h	/^	git_parse_ctx ctx;$/;"	m	struct:__anon774755630108	typeref:typename:git_parse_ctx
ctx	extern/libgit2/src/diff.c	/^	git_hash_ctx ctx;$/;"	m	struct:patch_id_args	typeref:typename:git_hash_ctx	file:
ctx	extern/libgit2/src/hash/sha1/win32.h	/^	} ctx;$/;"	m	struct:git_hash_sha1_ctx	typeref:union:git_hash_sha1_ctx::__anon67941f95030a
ctx	extern/libgit2/src/pack-objects.h	/^	git_hash_ctx ctx;$/;"	m	struct:git_packbuilder	typeref:typename:git_hash_ctx
ctx	extern/libgit2/src/patch_parse.c	/^	git_patch_parse_ctx *ctx;$/;"	m	struct:__anonadbd87d80108	typeref:typename:git_patch_parse_ctx *	file:
ctx	extern/libgit2/src/streams/stransport.c	/^	SSLContextRef ctx;$/;"	m	struct:__anonc5fef1dc0108	typeref:typename:SSLContextRef	file:
ctx_digit	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ctx_digit = 8,              \/\/ 0-9$/;"	e	enum:chartypex_t	file:
ctx_special_attr	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ctx_special_attr = 2,     \/\/ Any symbol >= 0 and < 32 (except \\t), &, <, >, "$/;"	e	enum:chartypex_t	file:
ctx_special_pcdata	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ctx_special_pcdata = 1,   \/\/ Any symbol >= 0 and < 32 (except \\t, \\r, \\n), &, <, >$/;"	e	enum:chartypex_t	file:
ctx_start_symbol	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ctx_start_symbol = 4,      \/\/ Any symbol > 127, a-z, A-Z, _$/;"	e	enum:chartypex_t	file:
ctx_symbol	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ctx_symbol = 16              \/\/ Any symbol > 127, a-z, A-Z, 0-9, _, -, .$/;"	e	enum:chartypex_t	file:
ctxlen	extern/libgit2/src/xdiff/xdiff.h	/^	long ctxlen;$/;"	m	struct:s_xdemitconf	typeref:typename:long
ctype	extern/libgit2/deps/pcre/pcre_exec.c	/^#define ctype /;"	d	file:
ctype_digit	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ctype_digit /;"	d
ctype_letter	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ctype_letter /;"	d
ctype_meta	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ctype_meta /;"	d
ctype_space	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ctype_space /;"	d
ctype_word	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ctype_word /;"	d
ctype_xdigit	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ctype_xdigit /;"	d
ctypes	extern/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uint8 *ctypes;      \/* Points to table of type maps *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uint8 *
ctypes	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *ctypes;         \/* Points to table of type maps *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uint8 *
ctypes	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_sw ctypes;$/;"	m	struct:compiler_common	typeref:typename:sljit_sw	file:
ctypes_offset	extern/libgit2/deps/pcre/pcre_internal.h	/^#define ctypes_offset /;"	d
cur	extern/libgit2/src/index.h	/^	size_t cur;$/;"	m	struct:git_index_conflict_iterator	typeref:typename:size_t
cur	extern/libgit2/src/index.h	/^	size_t cur;$/;"	m	struct:git_index_iterator	typeref:typename:size_t
cur_file_ofs	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 read_buf_size, read_buf_ofs, read_buf_avail, comp_remaining, out_buf_ofs, cur_file/;"	m	struct:__anon09af45a71808	typeref:typename:mz_uint64
cur_is_word	extern/libgit2/deps/pcre/pcre_exec.c	/^#define cur_is_word /;"	d	file:
curpos	extern/libgit2/src/pack.h	/^	git_off_t curpos;$/;"	m	struct:git_packfile_stream	typeref:typename:git_off_t
current	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lexeme_t current() const$/;"	f	class:xpath_lexer	typeref:typename:lexeme_t	file:
current	extern/libgit2/src/config.c	/^	git_config_iterator *current;$/;"	m	struct:__anon2d64db840208	typeref:typename:git_config_iterator *	file:
current	extern/libgit2/src/iterator.c	/^	tree_iterator_entry *current;$/;"	m	struct:__anonb487a9b80408	typeref:typename:tree_iterator_entry *	file:
current	extern/libgit2/src/iterator.h	/^	int (*current)(const git_index_entry **, git_iterator *);$/;"	m	struct:__anonb487a9bd0508	typeref:typename:int (*)(const git_index_entry **,git_iterator *)
current	extern/libgit2/src/path.h	/^	WIN32_FIND_DATAW current;$/;"	m	struct:git_path_diriter	typeref:typename:WIN32_FIND_DATAW
current	extern/libgit2/src/rebase.c	/^	size_t current;$/;"	m	struct:git_rebase	typeref:typename:size_t	file:
current	extern/libgit2/tests/filter/stream.c	/^	char current;$/;"	m	struct:compress_stream	typeref:typename:char	file:
current_branch	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar *current_branch;$/;"	m	struct:branch_chain	typeref:typename:pcre_uchar *
current_chunk	extern/libgit2/tests/filter/stream.c	/^	size_t current_chunk;$/;"	m	struct:compress_stream	typeref:typename:size_t	file:
current_diff_line	extern/libgit2/src/blame.h	/^	size_t current_diff_line;$/;"	m	struct:git_blame	typeref:typename:size_t
current_head_target	extern/libgit2/tests/refs/create.c	/^static const char *current_head_target = "refs\/heads\/master";$/;"	v	typeref:typename:const char *	file:
current_head_target	extern/libgit2/tests/refs/read.c	/^static const char *current_head_target = "refs\/heads\/master";$/;"	v	typeref:typename:const char *	file:
current_hunk	extern/libgit2/src/blame.h	/^	git_blame_hunk *current_hunk;$/;"	m	struct:git_blame	typeref:typename:git_blame_hunk *
current_is_ignored	extern/libgit2/src/iterator.c	/^	int current_is_ignored;$/;"	m	struct:__anonb487a9b80808	typeref:typename:int	file:
current_master_tip	extern/libgit2/tests/refs/create.c	/^static const char *current_master_tip = "099fabac3a9ea935598528c27f866e34089c2eff";$/;"	v	typeref:typename:const char *	file:
current_master_tip	extern/libgit2/tests/refs/delete.c	/^static const char *current_master_tip = "a65fedf39aefe402d3bb6e24df4d4f5fe4547750";$/;"	v	typeref:typename:const char *	file:
current_master_tip	extern/libgit2/tests/refs/read.c	/^static const char *current_master_tip = "a65fedf39aefe402d3bb6e24df4d4f5fe4547750";$/;"	v	typeref:typename:const char *	file:
current_master_tip	extern/libgit2/tests/refs/reflog/reflog.c	/^static const char *current_master_tip = "a65fedf39aefe402d3bb6e24df4d4f5fe4547750";$/;"	v	typeref:typename:const char *	file:
current_path	extern/libgit2/src/iterator.c	/^	git_buf current_path;$/;"	m	struct:__anonb487a9b80808	typeref:typename:git_buf	file:
current_pos	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		const char_t* current_pos() const$/;"	f	class:xpath_lexer	typeref:typename:const char_t *	file:
current_position	extern/libgit2/deps/pcre/pcre.h	/^  int          current_position;  \/* Where we currently are in the subject *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
current_position	extern/libgit2/deps/pcre/pcre.h	/^  int          current_position;  \/* Where we currently are in the subject *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
current_position	extern/libgit2/deps/pcre/pcre.h	/^  int          current_position;  \/* Where we currently are in the subject *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
current_stream	extern/libgit2/src/transports/git.c	/^	git_proto_stream *current_stream;$/;"	m	struct:__anon936e62c10208	typeref:typename:git_proto_stream *	file:
current_stream	extern/libgit2/src/transports/smart.h	/^	git_smart_subtransport_stream *current_stream;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_smart_subtransport_stream *
current_stream	extern/libgit2/src/transports/ssh.c	/^	ssh_stream *current_stream;$/;"	m	struct:__anon944cd18b0208	typeref:typename:ssh_stream *	file:
current_thread	extern/libgit2/src/global.h	/^	git_thread *current_thread;$/;"	m	struct:__anonf985f1a40108	typeref:typename:git_thread *
currententry	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  recurse_entry *currententry;$/;"	m	struct:compiler_common	typeref:typename:recurse_entry *	file:
custom_headers	extern/libgit2/include/git2/remote.h	/^	git_strarray custom_headers;$/;"	m	struct:__anonc41be5800508	typeref:typename:git_strarray
custom_headers	extern/libgit2/include/git2/remote.h	/^	git_strarray custom_headers;$/;"	m	struct:__anonc41be5800608	typeref:typename:git_strarray
custom_headers	extern/libgit2/src/remote.h	/^	const git_strarray *custom_headers;$/;"	m	struct:git_remote_connection_opts	typeref:typename:const git_strarray *
custom_headers	extern/libgit2/src/transports/smart.h	/^	git_strarray custom_headers;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_strarray
custom_origin_name_remote_create	extern/libgit2/tests/clone/nonetwork.c	/^int custom_origin_name_remote_create($/;"	f	typeref:typename:int
custom_remote_ssh_with_paths	extern/libgit2/tests/online/clone.c	/^static int custom_remote_ssh_with_paths($/;"	f	typeref:typename:int	file:
custom_transport	extern/libgit2/tests/clone/transport.c	/^static int custom_transport($/;"	f	typeref:typename:int	file:
custom_transport_remote_create	extern/libgit2/tests/clone/transport.c	/^static int custom_transport_remote_create($/;"	f	typeref:typename:int	file:
custom_transports	extern/libgit2/src/transport.c	/^static git_vector custom_transports = GIT_VECTOR_INIT;$/;"	v	typeref:typename:git_vector	file:
cwbk	extern/OpenXLSX/tests/c++/Test03_Workbook.cpp	/^auto cwbk = cdoc.Workbook();$/;"	v	typeref:typename:auto
d	extern/libgit2/tests/diff/blob.c	/^static git_blob *d, *alien;$/;"	v	typeref:typename:git_blob *	file:
d	git.hpp	/^  D d;$/;"	m	struct:git::make	typeref:typename:D
d_buf	extern/libgit2/deps/zlib/deflate.h	/^    ushf *d_buf;$/;"	m	struct:internal_state	typeref:typename:ushf *
d_code	extern/libgit2/deps/zlib/deflate.h	/^#define d_code(/;"	d
d_desc	extern/libgit2/deps/zlib/deflate.h	/^    struct tree_desc_s d_desc;               \/* desc. for distance tree *\/$/;"	m	struct:internal_state	typeref:struct:tree_desc_s
d_ino	extern/libgit2/src/win32/dir.h	/^	int d_ino;$/;"	m	struct:git__dirent	typeref:typename:int
d_name	extern/libgit2/src/win32/dir.h	/^	git_win32_utf8_path d_name;$/;"	m	struct:git__dirent	typeref:typename:git_win32_utf8_path
dad	extern/libgit2/deps/zlib/deflate.h	/^        ush  dad;        \/* father node in Huffman tree *\/$/;"	m	union:ct_data_s::__anonfe3a00cc020a	typeref:typename:ush
data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			char data[xpath_memory_page_size];$/;"	m	union:xpath_memory_block::__anonfceed08a050a	typeref:typename:char[]	file:
data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		char_t* data(xpath_allocator* alloc)$/;"	f	class:xpath_string	typeref:typename:char_t *	file:
data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        T data[xml_memory_page_size \/ sizeof(T)];$/;"	m	struct:xml_stream_chunk	typeref:typename:T[]	file:
data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        T* data;$/;"	m	struct:auto_deleter	typeref:typename:T *	file:
data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_text::data() const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_node
data	extern/libgit2/deps/http-parser/http_parser.h	/^  void *data; \/* A pointer to get hook to the "connection" or "socket" object *\/$/;"	m	struct:http_parser	typeref:typename:void *
data	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^  int data;                       \/* Some use extra data *\/$/;"	m	struct:stateblock	typeref:typename:int	file:
data	extern/libgit2/deps/pcre/pcre_exec.c	/^#define data /;"	d	file:
data	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^	const unsigned char *data;$/;"	m	struct:fuzzer_buffer	typeref:typename:const unsigned char *	file:
data	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^	struct fuzzer_buffer data;$/;"	m	struct:fuzzer_subtransport	typeref:struct:fuzzer_buffer	file:
data	extern/libgit2/include/git2/cert.h	/^	void *data;$/;"	m	struct:__anon6f6b75620308	typeref:typename:void *
data	extern/libgit2/include/git2/diff.h	/^	const char *data;$/;"	m	struct:__anon72022fed0808	typeref:typename:const char *
data	extern/libgit2/src/blob.h	/^			const char *data;$/;"	m	struct:git_blob::__anon5d2cee12010a::__anon5d2cee120208	typeref:typename:const char *
data	extern/libgit2/src/blob.h	/^	} data;$/;"	m	struct:git_blob	typeref:union:git_blob::__anon5d2cee12010a
data	extern/libgit2/src/diff_tform.c	/^	git_buf data;$/;"	m	struct:__anone5feb9ce0108	typeref:typename:git_buf	file:
data	extern/libgit2/src/hash.h	/^	void *data;$/;"	m	struct:__anon6a671f570108	typeref:typename:void *
data	extern/libgit2/src/map.h	/^	void *data; \/* data bytes			*\/$/;"	m	struct:__anonfbd1e3910108	typeref:typename:void *
data	extern/libgit2/src/netops.h	/^	char *data;$/;"	m	struct:gitno_buffer	typeref:typename:char *
data	extern/libgit2/src/odb.h	/^	void *data;			\/**< Raw, decompressed object data. *\/$/;"	m	struct:__anonfbf77e280108	typeref:typename:void *
data	extern/libgit2/src/odb_loose.c	/^	void *data;$/;"	m	struct:foreach_state	typeref:typename:void *	file:
data	extern/libgit2/src/odb_mempack.c	/^	char data[GIT_FLEX_ARRAY];$/;"	m	struct:memobject	typeref:typename:char[]	file:
data	extern/libgit2/src/pack-objects.c	/^	void *data;$/;"	m	struct:unpacked	typeref:typename:void *	file:
data	extern/libgit2/src/transports/smart.h	/^	char data[GIT_FLEX_ARRAY];$/;"	m	struct:__anoncc6f59690608	typeref:typename:char[]
data	extern/libgit2/tests/core/zstream.c	/^static const char *data = "This is a test test test of This is a test";$/;"	v	typeref:typename:const char *	file:
data	extern/libgit2/tests/odb/loose_data.h	/^    unsigned char *data;   \/* (uncompressed) object data                *\/$/;"	m	struct:object_data	typeref:typename:unsigned char *
data	extern/libgit2/tests/stash/foreach.c	/^struct callback_data data;$/;"	v	typeref:struct:callback_data
data_cb	extern/libgit2/src/patch_generate.h	/^	git_diff_line_cb data_cb;$/;"	m	struct:git_patch_generated_output	typeref:typename:git_diff_line_cb
data_char	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^            char_t data_char[bufcapacity];$/;"	m	union:xml_buffered_writer::__anonfceed08a040a	typeref:typename:char_t[]	file:
data_pkt	extern/libgit2/src/transports/smart_pkt.c	/^static int data_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
data_ready	extern/libgit2/src/pack-objects.c	/^	size_t data_ready;$/;"	m	struct:thread_params	typeref:typename:size_t	file:
data_type	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    int data_type;     \/* data_type (unused) *\/$/;"	m	struct:mz_stream_s	typeref:typename:int
data_type	extern/libgit2/deps/zlib/zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text$/;"	m	struct:z_stream_s	typeref:typename:int
data_u16	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^            uint16_t data_u16[2 * bufcapacity];$/;"	m	union:xml_buffered_writer::__anonfceed08a040a	typeref:typename:uint16_t[]	file:
data_u32	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^            uint32_t data_u32[bufcapacity];$/;"	m	union:xml_buffered_writer::__anonfceed08a040a	typeref:typename:uint32_t[]	file:
data_u8	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^            uint8_t data_u8[4 * bufcapacity];$/;"	m	union:xml_buffered_writer::__anonfceed08a040a	typeref:typename:uint8_t[]	file:
datalen	extern/libgit2/include/git2/diff.h	/^	size_t datalen;$/;"	m	struct:__anon72022fed0808	typeref:typename:size_t
datatype	extern/libgit2/src/pathspec.h	/^	int datatype;$/;"	m	struct:git_pathspec_match_list	typeref:typename:int
date_am	extern/libgit2/src/date.c	/^static void date_am(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_midnight	extern/libgit2/src/date.c	/^static void date_midnight(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_mode	extern/libgit2/src/date.c	/^} date_mode;$/;"	t	typeref:enum:__anon6112fc6c0103	file:
date_never	extern/libgit2/src/date.c	/^static void date_never(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_noon	extern/libgit2/src/date.c	/^static void date_noon(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_now	extern/libgit2/src/date.c	/^static void date_now(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_pm	extern/libgit2/src/date.c	/^static void date_pm(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_tea	extern/libgit2/src/date.c	/^static void date_tea(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_time	extern/libgit2/src/date.c	/^static void date_time(struct tm *tm, struct tm *now, int hour)$/;"	f	typeref:typename:void	file:
date_yesterday	extern/libgit2/src/date.c	/^static void date_yesterday(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
datetime	extern/OpenXLSX/tests/c++/Test02_DocumentProperties.cpp	/^auto datetime = ss.str();$/;"	v	typeref:typename:auto
db	extern/libgit2/include/git2/sys/refdb_backend.h	/^	git_refdb *db;$/;"	m	struct:git_reference_iterator	typeref:typename:git_refdb *
db	extern/libgit2/src/reflog.h	/^	git_refdb *db;$/;"	m	struct:git_reflog	typeref:typename:git_refdb *
db	extern/libgit2/src/refs.h	/^	git_refdb *db;$/;"	m	struct:git_reference	typeref:typename:git_refdb *
db	extern/libgit2/src/transaction.c	/^	git_refdb *db;$/;"	m	struct:git_transaction	typeref:typename:git_refdb *	file:
deallocate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static deallocation_function deallocate;$/;"	m	struct:xml_memory_management_function_storage	typeref:typename:deallocation_function	file:
deallocate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<typename T> deallocation_function xml_memory_management_function_storage<T>::deallo/;"	m	class:xml_memory_management_function_storage<T>	typeref:typename:deallocation_function
deallocate_memory	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void deallocate_memory(void* ptr, size_t size, xml_memory_page* page) {$/;"	f	struct:xml_allocator	typeref:typename:void	file:
deallocate_page	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static void deallocate_page(xml_memory_page* page) {$/;"	f	struct:xml_allocator	typeref:typename:void	file:
deallocate_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void deallocate_string(char_t* string) {$/;"	f	struct:xml_allocator	typeref:typename:void	file:
deallocation_function	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    typedef void (* deallocation_function)(void* ptr);$/;"	t	namespace:pugi	typeref:typename:void (*)(void * ptr)
debug	extern/libgit2/tests/checkout/checkout_helpers.h	/^	int debug;$/;"	m	struct:__anonc1a5ebab0108	typeref:typename:int
debug	extern/libgit2/tests/diff/diff_helpers.h	/^	int debug;$/;"	m	struct:__anona765b0910108	typeref:typename:int
debug	extern/libgit2/tests/status/status_helpers.h	/^	bool debug;$/;"	m	struct:__anon9cf2f0870108	typeref:typename:bool
debug	extern/libgit2/tests/status/status_helpers.h	/^	bool debug;$/;"	m	struct:__anon9cf2f0870208	typeref:typename:bool
declared_size	extern/libgit2/include/git2/odb_backend.h	/^	git_off_t declared_size;$/;"	m	struct:git_odb_stream	typeref:typename:git_off_t
decoder	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^            typedef wchar_selector<sizeof(wchar_t)>::decoder decoder;$/;"	t	function:wchar_decoder::process	file:
decoder	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef utf16_decoder<opt_false> decoder;$/;"	t	struct:wchar_selector	typeref:typename:utf16_decoder<opt_false>	file:
decoder	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef utf32_decoder<opt_false> decoder;$/;"	t	struct:wchar_selector	typeref:typename:utf32_decoder<opt_false>	file:
decref_split	extern/libgit2/src/blame_git.c	/^static void decref_split(git_blame__entry *split)$/;"	f	typeref:typename:void	file:
def_ff	extern/libgit2/src/xdiff/xemit.c	/^static long def_ff(const char *rec, long len, char *buf, long sz, void *priv)$/;"	f	typeref:typename:long	file:
default_allocate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void* default_allocate(size_t size) {$/;"	f	typeref:typename:PUGI__NS_BEGIN PUGI__FN void *
default_deallocate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void default_deallocate(void* ptr) {$/;"	f	typeref:typename:PUGI__FN void
default_driver	extern/libgit2/include/git2/merge.h	/^	const char *default_driver;$/;"	m	struct:__anon5e9a43240708	typeref:typename:const char *
default_driver	extern/libgit2/src/merge_driver.h	/^	const char *default_driver;$/;"	m	struct:git_merge_driver_source	typeref:typename:const char *
default_fetchspec_for_name	extern/libgit2/src/remote.c	/^static int default_fetchspec_for_name(git_buf *buf, const char *name)$/;"	f	typeref:typename:int	file:
default_free	extern/libgit2/src/transports/cred.c	/^static void default_free(struct git_cred *cred)$/;"	f	typeref:typename:void	file:
default_port_for_scheme	extern/libgit2/src/net.c	/^static const char *default_port_for_scheme(const char *scheme)$/;"	f	typeref:typename:const char *	file:
default_remote_create	extern/libgit2/src/clone.c	/^static int default_remote_create($/;"	f	typeref:typename:int	file:
default_repository_create	extern/libgit2/src/clone.c	/^static int default_repository_create(git_repository **out, const char *path, int bare, void *pay/;"	f	typeref:typename:int	file:
default_socket_stream_new	extern/libgit2/src/streams/socket.c	/^static int default_socket_stream_new($/;"	f	typeref:typename:int	file:
default_tables	extern/libgit2/deps/pcre/pcre_chartables.c	/^const pcre_uint8 PRIV(default_tables)[] = {$/;"	v	typeref:typename:const pcre_uint8 PRIV ()[]
default_value	extern/libgit2/src/config_cache.c	/^	int default_value;$/;"	m	struct:map_data	typeref:typename:int	file:
defer_driver_apply	extern/libgit2/tests/merge/driver.c	/^static int defer_driver_apply($/;"	f	typeref:typename:int	file:
deflate	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define deflate /;"	d
deflate	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflate (strm, flush)$/;"	f
deflate	extern/libgit2/deps/zlib/zconf.h	/^#  define deflate /;"	d
deflateBound	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define deflateBound /;"	d
deflateBound	extern/libgit2/deps/zlib/deflate.c	/^uLong ZEXPORT deflateBound(strm, sourceLen)$/;"	f
deflateBound	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateBound /;"	d
deflateCopy	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateCopy (dest, source)$/;"	f
deflateCopy	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateCopy /;"	d
deflateEnd	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define deflateEnd /;"	d
deflateEnd	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateEnd (strm)$/;"	f
deflateEnd	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateEnd /;"	d
deflateGetDictionary	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateGetDictionary (strm, dictionary, dictLength)$/;"	f
deflateGetDictionary	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateGetDictionary /;"	d
deflateInit	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define deflateInit /;"	d
deflateInit	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateInit /;"	d
deflateInit	extern/libgit2/deps/zlib/zlib.h	/^#  define deflateInit(/;"	d
deflateInit2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define deflateInit2 /;"	d
deflateInit2	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateInit2 /;"	d
deflateInit2	extern/libgit2/deps/zlib/zlib.h	/^#  define deflateInit2(/;"	d
deflateInit2_	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateInit2_(strm, level, method, windowBits, memLevel, strategy,$/;"	f
deflateInit2_	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateInit2_ /;"	d
deflateInit_	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateInit_(strm, level, version, stream_size)$/;"	f
deflateInit_	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateInit_ /;"	d
deflateParams	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateParams(strm, level, strategy)$/;"	f
deflateParams	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateParams /;"	d
deflatePending	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflatePending (strm, pending, bits)$/;"	f
deflatePending	extern/libgit2/deps/zlib/zconf.h	/^#  define deflatePending /;"	d
deflatePrime	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflatePrime (strm, bits, value)$/;"	f
deflatePrime	extern/libgit2/deps/zlib/zconf.h	/^#  define deflatePrime /;"	d
deflateReset	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define deflateReset /;"	d
deflateReset	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateReset (strm)$/;"	f
deflateReset	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateReset /;"	d
deflateResetKeep	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateResetKeep (strm)$/;"	f
deflateResetKeep	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateResetKeep /;"	d
deflateSetDictionary	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateSetDictionary (strm, dictionary, dictLength)$/;"	f
deflateSetDictionary	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateSetDictionary /;"	d
deflateSetHeader	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateSetHeader (strm, head)$/;"	f
deflateSetHeader	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateSetHeader /;"	d
deflateStateCheck	extern/libgit2/deps/zlib/deflate.c	/^local int deflateStateCheck (strm)$/;"	f
deflateTune	extern/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateTune(strm, good_length, max_lazy, nice_length, max_chain)$/;"	f
deflateTune	extern/libgit2/deps/zlib/zconf.h	/^#  define deflateTune /;"	d
deflate_copyright	extern/libgit2/deps/zlib/deflate.c	/^const char deflate_copyright[] =$/;"	v	typeref:typename:const char[]
deflate_copyright	extern/libgit2/deps/zlib/zconf.h	/^#  define deflate_copyright /;"	d
deflate_fast	extern/libgit2/deps/zlib/deflate.c	/^local block_state deflate_fast(s, flush)$/;"	f
deflate_huff	extern/libgit2/deps/zlib/deflate.c	/^local block_state deflate_huff(s, flush)$/;"	f
deflate_rle	extern/libgit2/deps/zlib/deflate.c	/^local block_state deflate_rle(s, flush)$/;"	f
deflate_slow	extern/libgit2/deps/zlib/deflate.c	/^local block_state deflate_slow(s, flush)$/;"	f
deflate_state	extern/libgit2/deps/zlib/deflate.h	/^} FAR deflate_state;$/;"	t	typeref:struct:internal_state FAR
deflate_stored	extern/libgit2/deps/zlib/deflate.c	/^local block_state deflate_stored(s, flush)$/;"	f
delete_cb	extern/libgit2/tests/describe/describe.c	/^static int delete_cb(git_reference *ref, void *payload)$/;"	f	typeref:typename:int	file:
delete_head	extern/libgit2/tests/repo/repo_helpers.c	/^void delete_head(git_repository* repo)$/;"	f	typeref:typename:void
delete_one_config	extern/libgit2/tests/submodule/modify.c	/^static int delete_one_config(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
delete_refs	extern/libgit2/src/transports/smart.h	/^		delete_refs:1,$/;"	m	struct:transport_smart_caps	typeref:typename:int:1
delete_refs	extern/libgit2/tests/threads/refdb.c	/^static void *delete_refs(void *arg)$/;"	f	typeref:typename:void *	file:
delete_xpath_variable	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN void delete_xpath_variable(xpath_value_type type, xpath_variable* var)$/;"	f	typeref:typename:PUGI__FN void
delete_xpath_variable	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename T> PUGI__FN void delete_xpath_variable(T* var)$/;"	f	typeref:typename:PUGI__FN void
deleted	extern/libgit2/src/index.h	/^	git_vector deleted; \/* deleted entries if readers > 0 *\/$/;"	m	struct:git_index	typeref:typename:git_vector
deleter	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        D deleter;$/;"	m	struct:auto_deleter	typeref:typename:D	file:
deletes_by_oid_dequeue	extern/libgit2/src/merge.c	/^static int deletes_by_oid_dequeue(size_t *idx, git_oidmap *map, const git_oid *id)$/;"	f	typeref:typename:int	file:
deletes_by_oid_enqueue	extern/libgit2/src/merge.c	/^static int deletes_by_oid_enqueue(git_oidmap *map, git_pool* pool, const git_oid *id, size_t idx/;"	f	typeref:typename:int	file:
deletes_by_oid_free	extern/libgit2/src/merge.c	/^static void deletes_by_oid_free(git_oidmap *map) {$/;"	f	typeref:typename:void	file:
deletes_by_oid_queue	extern/libgit2/src/merge.c	/^} deletes_by_oid_queue;$/;"	t	typeref:struct:__anon41711a7e0208	file:
deletions	extern/libgit2/src/diff_stats.c	/^	size_t deletions;$/;"	m	struct:__anonb8b091150108	typeref:typename:size_t	file:
deletions	extern/libgit2/src/diff_stats.c	/^	size_t deletions;$/;"	m	struct:git_diff_stats	typeref:typename:size_t	file:
delta	extern/libgit2/src/pack-objects.h	/^	struct git_pobject *delta; \/* delta base object *\/$/;"	m	struct:git_pobject	typeref:struct:git_pobject *
delta	extern/libgit2/src/patch.h	/^	git_diff_delta *delta;$/;"	m	struct:git_patch	typeref:typename:git_diff_delta *
delta	extern/libgit2/src/patch_generate.c	/^	git_diff_delta delta;$/;"	m	struct:__anon63ef94e80108	typeref:typename:git_diff_delta	file:
delta_abort_cb	extern/libgit2/tests/apply/callbacks.c	/^static int delta_abort_cb(const git_diff_delta *delta, void *payload)$/;"	f	typeref:typename:int	file:
delta_cache_size	extern/libgit2/src/pack-objects.h	/^	size_t delta_cache_size;$/;"	m	struct:git_packbuilder	typeref:typename:size_t
delta_cacheable	extern/libgit2/src/pack-objects.c	/^static int delta_cacheable($/;"	f	typeref:typename:int	file:
delta_cb	extern/libgit2/include/git2/apply.h	/^	git_apply_delta_cb delta_cb;$/;"	m	struct:__anondc670afa0108	typeref:typename:git_apply_delta_cb
delta_child	extern/libgit2/src/pack-objects.h	/^	struct git_pobject *delta_child; \/* deltified objects who bases me *\/$/;"	m	struct:git_pobject	typeref:struct:git_pobject *
delta_data	extern/libgit2/src/pack-objects.h	/^	void *delta_data;$/;"	m	struct:git_pobject	typeref:typename:void *
delta_index	extern/libgit2/src/patch_generate.h	/^	size_t delta_index;$/;"	m	struct:git_patch_generated	typeref:typename:size_t
delta_info	extern/libgit2/src/indexer.c	/^struct delta_info {$/;"	s	file:
delta_is_new_only	extern/libgit2/src/diff_tform.c	/^GIT_INLINE(bool) delta_is_new_only(git_diff_delta *delta)$/;"	f	typeref:typename:bool
delta_is_split	extern/libgit2/src/diff_tform.c	/^GIT_INLINE(bool) delta_is_split(git_diff_delta *delta)$/;"	f	typeref:typename:bool
delta_is_unchanged	extern/libgit2/src/diff_print.c	/^static bool delta_is_unchanged(const git_diff_delta *delta)$/;"	f	typeref:typename:bool	file:
delta_make_rename	extern/libgit2/src/diff_tform.c	/^GIT_INLINE(void) delta_make_rename($/;"	f	typeref:typename:void
delta_off	extern/libgit2/src/indexer.c	/^	git_off_t delta_off;$/;"	m	struct:delta_info	typeref:typename:git_off_t	file:
delta_sibling	extern/libgit2/src/pack-objects.h	/^	struct git_pobject *delta_sibling; \/* other deltified objects$/;"	m	struct:git_pobject	typeref:struct:git_pobject *
delta_size	extern/libgit2/src/pack-objects.h	/^	size_t delta_size;$/;"	m	struct:git_pobject	typeref:typename:size_t
delta_skip_cb	extern/libgit2/tests/apply/callbacks.c	/^static int delta_skip_cb(const git_diff_delta *delta, void *payload)$/;"	f	typeref:typename:int	file:
deltas	extern/libgit2/src/diff.h	/^	git_vector       deltas;    \/* vector of git_diff_delta *\/$/;"	m	struct:git_diff	typeref:typename:git_vector
deltas	extern/libgit2/src/indexer.c	/^	git_vector deltas;$/;"	m	struct:git_indexer	typeref:typename:git_vector	file:
dend	extern/libgit2/src/xdiff/xtypes.h	/^	long dstart, dend;$/;"	m	struct:s_xdfile	typeref:typename:long
depth	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN int xml_tree_walker::depth() const {$/;"	f	class:pugi::xml_tree_walker	typeref:typename:PUGI__FN int
depth	extern/libgit2/deps/zlib/deflate.h	/^    uch depth[2*L_CODES+1];$/;"	m	struct:internal_state	typeref:typename:uch[]
depth	extern/libgit2/src/config_file.c	/^	unsigned int depth;$/;"	m	struct:__anon041cc2a30208	typeref:typename:unsigned int	file:
depth	extern/libgit2/src/describe.c	/^	int depth;$/;"	m	struct:possible_tag	typeref:typename:int	file:
depth	extern/libgit2/src/futils.c	/^	int depth;$/;"	m	struct:__anonce3edc250108	typeref:typename:int	file:
depth	extern/libgit2/src/ignore.h	/^	int depth;$/;"	m	struct:__anon4fc5b6370108	typeref:typename:int
depth	extern/libgit2/src/pack-objects.c	/^	size_t depth;$/;"	m	struct:thread_params	typeref:typename:size_t	file:
depth	extern/libgit2/src/pack-objects.c	/^	size_t depth;$/;"	m	struct:unpacked	typeref:typename:size_t	file:
der_data	extern/libgit2/src/streams/stransport.c	/^	CFDataRef der_data;$/;"	m	struct:__anonc5fef1dc0108	typeref:typename:CFDataRef	file:
dereference_object	extern/libgit2/src/object.c	/^static int dereference_object(git_object **dereferenced, git_object *obj)$/;"	f	typeref:typename:int	file:
dereference_to_non_tag	extern/libgit2/src/revparse.c	/^static int dereference_to_non_tag(git_object **out, git_object *obj)$/;"	f	typeref:typename:int	file:
des_key_from_password	extern/libgit2/deps/ntlmclient/ntlm.c	/^static void des_key_from_password($/;"	f	typeref:typename:void	file:
des_keys_from_lm_hash	extern/libgit2/deps/ntlmclient/ntlm.c	/^static void des_keys_from_lm_hash(ntlm_des_block out[3], ntlm_des_block lm_hash[2])$/;"	f	typeref:typename:void	file:
describe	extern/libgit2/src/describe.c	/^static int describe($/;"	f	typeref:typename:int	file:
describe_not_found	extern/libgit2/src/describe.c	/^static int describe_not_found(const git_oid *oid, const char *message_format) {$/;"	f	typeref:typename:int	file:
describe_options	extern/libgit2/examples/describe.c	/^	git_describe_options describe_options;$/;"	m	struct:__anon38a310860108	typeref:typename:git_describe_options	file:
describe_options	extern/libgit2/examples/describe.c	/^} describe_options;$/;"	t	typeref:struct:__anon38a310860108	file:
describe_options_init	extern/libgit2/examples/describe.c	/^static void describe_options_init(describe_options *opts)$/;"	f	typeref:typename:void	file:
describe_strategy	extern/libgit2/include/git2/describe.h	/^	unsigned int describe_strategy; \/**< default: GIT_DESCRIBE_DEFAULT *\/$/;"	m	struct:git_describe_options	typeref:typename:unsigned int
description	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const char* xpath_parse_result::description() const$/;"	f	class:pugi::xpath_parse_result	typeref:typename:PUGI__FN const char *
description	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const char* xml_parse_result::description() const {$/;"	f	class:pugi::xml_parse_result	typeref:typename:PUGI__FN const char *
description	extern/libgit2/deps/http-parser/http_parser.c	/^  const char *description;$/;"	m	struct:__anonb6e7d1470108	typeref:typename:const char *	file:
description	extern/libgit2/include/git2/repository.h	/^	const char *description;$/;"	m	struct:__anon8a61cad40408	typeref:typename:const char *
description	extern/libgit2/package.json	/^  "description": " A cross-platform, linkable library implementation of Git that you can use in /;"	s
description	extern/libgit2/src/annotated_commit.h	/^	const char *description;$/;"	m	struct:git_annotated_commit	typeref:typename:const char *
description	extern/libgit2/tests/clar.c	/^	char *description;$/;"	m	struct:clar_error	typeref:typename:char *	file:
destpath	extern/libgit2/tests/odb/alternates.c	/^static git_buf destpath, filepath;$/;"	v	typeref:typename:git_buf	file:
destroy	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static void destroy(xpath_query_impl* impl)$/;"	f	struct:xpath_query_impl	typeref:typename:void	file:
destroy	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static void destroy(xml_stream_chunk* chunk) {$/;"	f	struct:xml_stream_chunk	typeref:typename:void	file:
destroy_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline void destroy_attribute(xml_attribute_struct* a, xml_allocator& alloc) {$/;"	f	typeref:typename:void
destroy_hash	extern/libgit2/src/hash/sha1/win32.h	/^	hash_win32_cng_destroy_hash_fn destroy_hash;$/;"	m	struct:hash_cng_prov	typeref:typename:hash_win32_cng_destroy_hash_fn
destroy_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline void destroy_node(xml_node_struct* n, xml_allocator& alloc) {$/;"	f	typeref:typename:void
detach	extern/libgit2/src/repository.c	/^static int detach(git_repository *repo, const git_oid *id, const char *new)$/;"	f	typeref:typename:int	file:
detect_coll	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	int detect_coll;$/;"	m	struct:__anon3f63bb720108	typeref:typename:int
detect_data_type	extern/libgit2/deps/zlib/trees.c	/^local int detect_data_type(s)$/;"	f
detect_fast_fail	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void detect_fast_fail(compiler_common *common, pcre_uchar *cc, int *private_/;"	f	typeref:typename:SLJIT_INLINE void	file:
detect_fast_forward_skip	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE BOOL detect_fast_forward_skip(compiler_common *common, int *private_data_sta/;"	f	typeref:typename:SLJIT_INLINE BOOL	file:
detect_partial_match	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void detect_partial_match(compiler_common *common, jump_list **backtracks)$/;"	f	typeref:typename:void	file:
detect_repeat	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static BOOL detect_repeat(compiler_common *common, pcre_uchar *begin)$/;"	f	typeref:typename:BOOL	file:
dev	extern/libgit2/include/git2/index.h	/^	uint32_t dev;$/;"	m	struct:git_index_entry	typeref:typename:uint32_t
dev	extern/libgit2/src/index.c	/^	uint32_t dev;$/;"	m	struct:entry_long	typeref:typename:uint32_t	file:
dev	extern/libgit2/src/index.c	/^	uint32_t dev;$/;"	m	struct:entry_short	typeref:typename:uint32_t	file:
df_data	extern/libgit2/src/merge.c	/^	struct merge_diff_df_data df_data;$/;"	m	struct:merge_diff_find_data	typeref:struct:merge_diff_df_data	file:
df_path	extern/libgit2/src/merge.c	/^	const char *df_path;$/;"	m	struct:merge_diff_df_data	typeref:typename:const char *	file:
dfa_match_data	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct dfa_match_data {$/;"	s
dfa_match_data	extern/libgit2/deps/pcre/pcre_internal.h	/^} dfa_match_data;$/;"	t	typeref:struct:dfa_match_data
dfa_recursion_info	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct dfa_recursion_info {$/;"	s
dfa_recursion_info	extern/libgit2/deps/pcre/pcre_internal.h	/^} dfa_recursion_info;$/;"	t	typeref:struct:dfa_recursion_info
did_hide	extern/libgit2/src/revwalk.h	/^		did_hide: 1,$/;"	m	struct:git_revwalk	typeref:typename:unsigned:1
did_push	extern/libgit2/src/revwalk.h	/^		did_push: 1,$/;"	m	struct:git_revwalk	typeref:typename:unsigned:1
did_rename	extern/libgit2/src/filebuf.h	/^	bool did_rename;$/;"	m	struct:git_filebuf	typeref:typename:bool
diff	extern/libgit2/src/checkout.c	/^	git_diff *diff;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_diff *	file:
diff	extern/libgit2/src/diff_stats.c	/^	git_diff *diff;$/;"	m	struct:git_diff_stats	typeref:typename:git_diff *	file:
diff	extern/libgit2/src/patch_generate.h	/^	git_diff *diff; \/* for refcount purposes, maybe NULL for blob diffs *\/$/;"	m	struct:git_patch_generated	typeref:typename:git_diff *
diff	extern/libgit2/tests/diff/tree.c	/^static git_diff *diff;$/;"	v	typeref:typename:git_diff *	file:
diff_assert_equal	extern/libgit2/tests/diff/diff_helpers.c	/^void diff_assert_equal(git_diff *a, git_diff *b)$/;"	f	typeref:typename:void
diff_binary	extern/libgit2/src/patch_generate.c	/^static int diff_binary(git_patch_generated_output *output, git_patch_generated *patch)$/;"	f	typeref:typename:int	file:
diff_binary_cb	extern/libgit2/tests/diff/diff_helpers.c	/^int diff_binary_cb($/;"	f	typeref:typename:int
diff_cb	extern/libgit2/src/patch_generate.h	/^	int (*diff_cb)(git_patch_generated_output *output,$/;"	m	struct:git_patch_generated_output	typeref:typename:int (*)(git_patch_generated_output * output,git_patch_generated * patch)
diff_context_find	extern/libgit2/src/diff_driver.c	/^static long diff_context_find($/;"	f	typeref:typename:long	file:
diff_context_line__pattern_match	extern/libgit2/src/diff_driver.c	/^static int diff_context_line__pattern_match($/;"	f	typeref:typename:int	file:
diff_context_line__simple	extern/libgit2/src/diff_driver.c	/^static int diff_context_line__simple($/;"	f	typeref:typename:int	file:
diff_data	extern/libgit2/tests/diff/binary.c	/^struct diff_data {$/;"	s	file:
diff_delta__alloc	extern/libgit2/src/diff_generate.c	/^static git_diff_delta *diff_delta__alloc($/;"	f	typeref:typename:git_diff_delta *	file:
diff_delta__from_one	extern/libgit2/src/diff_generate.c	/^static int diff_delta__from_one($/;"	f	typeref:typename:int	file:
diff_delta__from_two	extern/libgit2/src/diff_generate.c	/^static int diff_delta__from_two($/;"	f	typeref:typename:int	file:
diff_delta__i2w_path	extern/libgit2/src/diff_generate.c	/^GIT_INLINE(const char *) diff_delta__i2w_path(const git_diff_delta *delta)$/;"	f	typeref:typename:const char *
diff_delta__last_for_item	extern/libgit2/src/diff_generate.c	/^static git_diff_delta *diff_delta__last_for_item($/;"	f	typeref:typename:git_diff_delta *	file:
diff_delta__path	extern/libgit2/src/diff.c	/^GIT_INLINE(const char *) diff_delta__path(const git_diff_delta *delta)$/;"	f	typeref:typename:const char *
diff_delta_format_path	extern/libgit2/src/diff_print.c	/^static int diff_delta_format_path($/;"	f	typeref:typename:int	file:
diff_delta_format_similarity_header	extern/libgit2/src/diff_print.c	/^int diff_delta_format_similarity_header($/;"	f	typeref:typename:int
diff_delta_format_with_paths	extern/libgit2/src/diff_print.c	/^static int diff_delta_format_with_paths($/;"	f	typeref:typename:int	file:
diff_driver_add_patterns	extern/libgit2/src/diff_driver.c	/^static int diff_driver_add_patterns($/;"	f	typeref:typename:int	file:
diff_driver_alloc	extern/libgit2/src/diff_driver.c	/^static int diff_driver_alloc($/;"	f	typeref:typename:int	file:
diff_driver_funcname	extern/libgit2/src/diff_driver.c	/^static int diff_driver_funcname(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
diff_driver_xfuncname	extern/libgit2/src/diff_driver.c	/^static int diff_driver_xfuncname(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
diff_drivers	extern/libgit2/src/repository.h	/^	git_diff_driver_registry *diff_drivers;$/;"	m	struct:git_repository	typeref:typename:git_diff_driver_registry *
diff_expects	extern/libgit2/tests/diff/diff_helpers.h	/^} diff_expects;$/;"	t	typeref:struct:__anona765b0910108
diff_file_cb	extern/libgit2/tests/diff/diff_helpers.c	/^int diff_file_cb($/;"	f	typeref:typename:int
diff_file_content_binary_by_content	extern/libgit2/src/diff_file.c	/^static void diff_file_content_binary_by_content(git_diff_file_content *fc)$/;"	f	typeref:typename:void	file:
diff_file_content_binary_by_size	extern/libgit2/src/diff_file.c	/^static bool diff_file_content_binary_by_size(git_diff_file_content *fc)$/;"	f	typeref:typename:bool	file:
diff_file_content_commit_to_str	extern/libgit2/src/diff_file.c	/^static int diff_file_content_commit_to_str($/;"	f	typeref:typename:int	file:
diff_file_content_init_common	extern/libgit2/src/diff_file.c	/^static int diff_file_content_init_common($/;"	f	typeref:typename:int	file:
diff_file_content_load_blob	extern/libgit2/src/diff_file.c	/^static int diff_file_content_load_blob($/;"	f	typeref:typename:int	file:
diff_file_content_load_workdir	extern/libgit2/src/diff_file.c	/^static int diff_file_content_load_workdir($/;"	f	typeref:typename:int	file:
diff_file_content_load_workdir_file	extern/libgit2/src/diff_file.c	/^static int diff_file_content_load_workdir_file($/;"	f	typeref:typename:int	file:
diff_file_content_load_workdir_symlink	extern/libgit2/src/diff_file.c	/^static int diff_file_content_load_workdir_symlink($/;"	f	typeref:typename:int	file:
diff_file_content_load_workdir_symlink_fake	extern/libgit2/src/diff_file.c	/^static int diff_file_content_load_workdir_symlink_fake($/;"	f	typeref:typename:int	file:
diff_file_stats	extern/libgit2/src/diff_stats.c	/^} diff_file_stats;$/;"	t	typeref:struct:__anonb8b091150108	file:
diff_find_match	extern/libgit2/src/diff_tform.c	/^} diff_find_match;$/;"	t	typeref:struct:__anone5feb9ce0208	file:
diff_foreach_via_iterator	extern/libgit2/tests/diff/diff_helpers.c	/^int diff_foreach_via_iterator($/;"	f	typeref:typename:int
diff_from_sources	extern/libgit2/src/patch_generate.c	/^static int diff_from_sources($/;"	f	typeref:typename:int	file:
diff_generated_alloc	extern/libgit2/src/diff_generate.c	/^static git_diff_generated *diff_generated_alloc($/;"	f	typeref:typename:git_diff_generated *	file:
diff_generated_apply_options	extern/libgit2/src/diff_generate.c	/^static int diff_generated_apply_options($/;"	f	typeref:typename:int	file:
diff_generated_free	extern/libgit2/src/diff_generate.c	/^static void diff_generated_free(git_diff *d)$/;"	f	typeref:typename:void	file:
diff_hunk_cb	extern/libgit2/tests/diff/diff_helpers.c	/^int diff_hunk_cb($/;"	f	typeref:typename:int
diff_hunks	extern/libgit2/src/blame_git.c	/^static int diff_hunks(mmfile_t file_a, mmfile_t file_b, void *cb_data)$/;"	f	typeref:typename:int	file:
diff_in_progress	extern/libgit2/src/diff_generate.c	/^} diff_in_progress;$/;"	t	typeref:struct:__anon047407f10208	file:
diff_insert_delta	extern/libgit2/src/diff_generate.c	/^static int diff_insert_delta($/;"	f	typeref:typename:int	file:
diff_line_cb	extern/libgit2/tests/diff/diff_helpers.c	/^int diff_line_cb($/;"	f	typeref:typename:int
diff_list	extern/libgit2/src/merge.c	/^	git_merge_diff_list *diff_list;$/;"	m	struct:merge_diff_find_data	typeref:typename:git_merge_diff_list *	file:
diff_load_index	extern/libgit2/src/diff_generate.c	/^static int diff_load_index(git_index **index, git_repository *repo)$/;"	f	typeref:typename:int	file:
diff_mnemonic_prefix	extern/libgit2/src/diff_generate.c	/^static const char *diff_mnemonic_prefix($/;"	f	typeref:typename:const char *	file:
diff_opts	extern/libgit2/src/patch.h	/^	git_diff_options diff_opts;$/;"	m	struct:git_patch	typeref:typename:git_diff_options
diff_output	extern/libgit2/examples/common.c	/^int diff_output($/;"	f	typeref:typename:int
diff_output_init	extern/libgit2/src/patch_generate.c	/^static void diff_output_init($/;"	f	typeref:typename:void	file:
diff_output_to_patch	extern/libgit2/src/patch_generate.c	/^static void diff_output_to_patch($/;"	f	typeref:typename:void	file:
diff_parsed_alloc	extern/libgit2/src/diff_parse.c	/^static git_diff_parsed *diff_parsed_alloc(void)$/;"	f	typeref:typename:git_diff_parsed *	file:
diff_parsed_free	extern/libgit2/src/diff_parse.c	/^static void diff_parsed_free(git_diff *d)$/;"	f	typeref:typename:void	file:
diff_pathspec_match	extern/libgit2/src/diff_generate.c	/^static bool diff_pathspec_match($/;"	f	typeref:typename:bool	file:
diff_pick_suffix	extern/libgit2/src/diff_print.c	/^static char diff_pick_suffix(int mode)$/;"	f	typeref:typename:char	file:
diff_pick_suffix	extern/libgit2/tests/diff/diff_helpers.c	/^static char diff_pick_suffix(int mode)$/;"	f	typeref:typename:char	file:
diff_prepare_iterator_opts	extern/libgit2/src/diff_generate.c	/^static int diff_prepare_iterator_opts(char **prefix, git_iterator_options *a, int aflags,$/;"	f	typeref:typename:int	file:
diff_print	extern/libgit2/tests/diff/diff_helpers.c	/^void diff_print(FILE *fp, git_diff *diff)$/;"	f	typeref:typename:void
diff_print_file_cb	extern/libgit2/tests/diff/diff_helpers.c	/^int diff_print_file_cb($/;"	f	typeref:typename:int
diff_print_info	extern/libgit2/src/diff_print.c	/^} diff_print_info;$/;"	t	typeref:struct:__anoncda507930108	file:
diff_print_info_init__common	extern/libgit2/src/diff_print.c	/^static int diff_print_info_init__common($/;"	f	typeref:typename:int	file:
diff_print_info_init_fromdiff	extern/libgit2/src/diff_print.c	/^static int diff_print_info_init_fromdiff($/;"	f	typeref:typename:int	file:
diff_print_info_init_frompatch	extern/libgit2/src/diff_print.c	/^static int diff_print_info_init_frompatch($/;"	f	typeref:typename:int	file:
diff_print_modes	extern/libgit2/src/diff_print.c	/^static int diff_print_modes($/;"	f	typeref:typename:int	file:
diff_print_oid_range	extern/libgit2/src/diff_print.c	/^static int diff_print_oid_range($/;"	f	typeref:typename:int	file:
diff_print_one_name_only	extern/libgit2/src/diff_print.c	/^static int diff_print_one_name_only($/;"	f	typeref:typename:int	file:
diff_print_one_name_status	extern/libgit2/src/diff_print.c	/^static int diff_print_one_name_status($/;"	f	typeref:typename:int	file:
diff_print_one_raw	extern/libgit2/src/diff_print.c	/^static int diff_print_one_raw($/;"	f	typeref:typename:int	file:
diff_print_patch_binary	extern/libgit2/src/diff_print.c	/^static int diff_print_patch_binary($/;"	f	typeref:typename:int	file:
diff_print_patch_file	extern/libgit2/src/diff_print.c	/^static int diff_print_patch_file($/;"	f	typeref:typename:int	file:
diff_print_patch_file_binary	extern/libgit2/src/diff_print.c	/^static int diff_print_patch_file_binary($/;"	f	typeref:typename:int	file:
diff_print_patch_file_binary_noshow	extern/libgit2/src/diff_print.c	/^static int diff_print_patch_file_binary_noshow($/;"	f	typeref:typename:int	file:
diff_print_patch_hunk	extern/libgit2/src/diff_print.c	/^static int diff_print_patch_hunk($/;"	f	typeref:typename:int	file:
diff_print_patch_line	extern/libgit2/src/diff_print.c	/^static int diff_print_patch_line($/;"	f	typeref:typename:int	file:
diff_print_raw	extern/libgit2/tests/diff/diff_helpers.c	/^void diff_print_raw(FILE *fp, git_diff *diff)$/;"	f	typeref:typename:void
diff_print_stats	extern/libgit2/examples/diff.c	/^static void diff_print_stats(git_diff *diff, struct opts *o)$/;"	f	typeref:typename:void	file:
diff_required	extern/libgit2/src/patch_generate.c	/^static int diff_required(git_diff *diff, const char *action)$/;"	f	typeref:typename:int	file:
diff_single_generate	extern/libgit2/src/patch_generate.c	/^static int diff_single_generate(patch_generated_with_delta *pd, git_xdiff_output *xo)$/;"	f	typeref:typename:int	file:
diff_stats_from_commit_oid	extern/libgit2/tests/diff/stats.c	/^static void diff_stats_from_commit_oid($/;"	f	typeref:typename:void	file:
diff_stop_after_2_files	extern/libgit2/tests/diff/index.c	/^static int diff_stop_after_2_files($/;"	f	typeref:typename:int	file:
diff_strdup_prefix	extern/libgit2/src/diff_generate.c	/^static char *diff_strdup_prefix(git_pool *pool, const char *prefix)$/;"	f	typeref:typename:char *	file:
diff_update_lines	extern/libgit2/src/diff_xdiff.c	/^static int diff_update_lines($/;"	f	typeref:typename:int	file:
diffcaps	extern/libgit2/src/diff_generate.c	/^	uint32_t diffcaps;$/;"	m	struct:__anon047407f10108	typeref:typename:uint32_t	file:
diffdata_t	extern/libgit2/src/xdiff/xdiffi.h	/^} diffdata_t;$/;"	t	typeref:struct:s_diffdata
difference_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef ptrdiff_t difference_type;$/;"	t	class:pugi::xml_attribute_iterator	typeref:typename:ptrdiff_t
difference_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef ptrdiff_t difference_type;$/;"	t	class:pugi::xml_named_node_iterator	typeref:typename:ptrdiff_t
difference_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef ptrdiff_t difference_type;$/;"	t	class:pugi::xml_node_iterator	typeref:typename:ptrdiff_t
difference_type	p.cpp	/^  using difference_type = int;$/;"	t	struct:aiterator	typeref:typename:int	file:
diffopts	extern/libgit2/examples/diff.c	/^	git_diff_options diffopts;$/;"	m	struct:opts	typeref:typename:git_diff_options	file:
digest	extern/libgit2/src/filebuf.h	/^	git_hash_ctx digest;$/;"	m	struct:git_filebuf	typeref:typename:git_hash_ctx
digitab	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 digitab[] =$/;"	v	typeref:typename:const pcre_uint8[]	file:
digits_for_value	extern/libgit2/src/diff_stats.c	/^static int digits_for_value(size_t val)$/;"	f	typeref:typename:int	file:
dimColour	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            static Colour::Code dimColour() { return Colour::FileName; }$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:Colour::Code
dir	extern/libgit2/examples/cat-file.c	/^	const char *dir;$/;"	m	struct:opts	typeref:typename:const char *	file:
dir	extern/libgit2/examples/diff.c	/^	const char *dir;$/;"	m	struct:opts	typeref:typename:const char *	file:
dir	extern/libgit2/examples/init.c	/^	const char *dir;$/;"	m	struct:opts	typeref:typename:const char *	file:
dir	extern/libgit2/src/ignore.h	/^	git_buf dir; \/* current directory reflected in ign_path *\/$/;"	m	struct:__anon4fc5b6370108	typeref:typename:git_buf
dir	extern/libgit2/src/path.h	/^	DIR *dir;$/;"	m	struct:git_path_diriter	typeref:typename:DIR *
dir	extern/libgit2/src/win32/dir.h	/^	char dir[GIT_FLEX_ARRAY];$/;"	m	struct:__anon949726940108	typeref:typename:char[]
dir	extern/libgit2/tests/diff/racediffiter.c	/^	const char *dir;$/;"	m	struct:__anone9839ae90208	typeref:typename:const char *	file:
dir	extern/libgit2/tests/object/raw/write.c	/^    char *dir;    \/* object store (fan-out) directory name     *\/$/;"	m	struct:object_data	typeref:typename:char *	file:
dir	extern/libgit2/tests/odb/loose_data.h	/^    char          *dir;    \/* object store (fan-out) directory name     *\/$/;"	m	struct:object_data	typeref:typename:char *
dir_len	extern/libgit2/src/odb_loose.c	/^	size_t dir_len;$/;"	m	struct:__anon81c02f840408	typeref:typename:size_t	file:
dir_len	extern/libgit2/src/odb_loose.c	/^	size_t dir_len;$/;"	m	struct:foreach_state	typeref:typename:size_t	file:
dir_map	extern/libgit2/src/futils.h	/^	git_strmap *dir_map;$/;"	m	struct:git_futils_mkdir_options	typeref:typename:git_strmap *
dir_mode	extern/libgit2/include/git2/checkout.h	/^	unsigned int dir_mode;  \/**< default is 0755 *\/$/;"	m	struct:git_checkout_options	typeref:typename:unsigned int
dir_root	extern/libgit2/src/ignore.h	/^	size_t dir_root; \/* offset in dir to repo root *\/$/;"	m	struct:__anon4fc5b6370108	typeref:typename:size_t
dircount	extern/libgit2/tests/merge/merge_helpers.c	/^int dircount(void *payload, git_buf *pathbuf)$/;"	f	typeref:typename:int
direach_flags	extern/libgit2/src/refdb_fs.c	/^	uint32_t direach_flags;$/;"	m	struct:refdb_fs_backend	typeref:typename:uint32_t	file:
direct	extern/libgit2/deps/zlib/gzguts.h	/^    int direct;             \/* 0 if processing gzip, 1 if transparent *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:int
direction	extern/libgit2/src/transports/local.c	/^	int direction;$/;"	m	struct:__anonb65cbde80108	typeref:typename:int	file:
direction	extern/libgit2/src/transports/smart.h	/^	int direction;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:int
directory	extern/libgit2/src/repository.c	/^    bool directory;$/;"	m	struct:__anon05b1158e0108	typeref:typename:bool	file:
directoryfile	extern/libgit2/src/checkout.c	/^		directoryfile:1,$/;"	m	struct:__anonbac5d6240308	typeref:typename:int:1	file:
dirent	extern/libgit2/src/win32/dir.h	/^#	define dirent /;"	d
dirent_cleanup__cb	extern/libgit2/tests/core/dirent.c	/^static void dirent_cleanup__cb(void *_d)$/;"	f	typeref:typename:void	file:
diriter_update_paths	extern/libgit2/src/path.c	/^static int diriter_update_paths(git_path_diriter *diriter)$/;"	f	typeref:typename:int	file:
dirload_flags	extern/libgit2/src/iterator.c	/^	unsigned int dirload_flags;$/;"	m	struct:__anonb487a9b80808	typeref:typename:unsigned int	file:
dirmode	extern/libgit2/src/futils.c	/^	mode_t dirmode;$/;"	m	struct:__anonce3edc250208	typeref:typename:mode_t	file:
dirname	extern/libgit2/tests/checkout/crlf.c	/^	const char *dirname;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
dirname	extern/libgit2/tests/index/crlf.c	/^	const char *dirname;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
dirs	extern/libgit2/tests/object/tree/walk.c	/^	int dirs;$/;"	m	struct:treewalk_skip_data	typeref:typename:int	file:
dirty	extern/libgit2/src/describe.c	/^	int dirty;$/;"	m	struct:git_describe_result	typeref:typename:int	file:
dirty	extern/libgit2/src/index.h	/^	unsigned int dirty:1;	\/* whether we have unsaved changes *\/$/;"	m	struct:git_index	typeref:typename:unsigned int:1
dirty	extern/libgit2/tests/checkout/typechange.c	/^	int dirty;$/;"	m	struct:__anone3edc9c60108	typeref:typename:int	file:
dirty_suffix	extern/libgit2/include/git2/describe.h	/^	const char *dirty_suffix;$/;"	m	struct:__anoneba207f50208	typeref:typename:const char *
disable	extern/libgit2/tests/generate.py	/^    def disable(self, excluded):$/;"	m	class:TestSuite
disable_filters	extern/libgit2/include/git2/checkout.h	/^	int disable_filters;    \/**< don't apply filters like CRLF conversion *\/$/;"	m	struct:git_checkout_options	typeref:typename:int
discovered	extern/libgit2/tests/repo/discover.c	/^static git_buf discovered;$/;"	v	typeref:typename:git_buf	file:
disk_inode	extern/libgit2/src/odb.c	/^	ino_t disk_inode;$/;"	m	struct:__anonfbf77e230108	typeref:typename:ino_t	file:
diskfile_entries_take	extern/libgit2/src/config_file.c	/^static git_config_entries *diskfile_entries_take(config_file_backend *b)$/;"	f	typeref:typename:git_config_entries *	file:
display_name	extern/libgit2/src/describe.c	/^static int display_name(git_buf *buf, git_repository *repo, struct commit_name *n)$/;"	f	typeref:typename:int	file:
distbits	extern/libgit2/deps/zlib/inflate.h	/^    unsigned distbits;          \/* index bits for distcode *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
distcode	extern/libgit2/deps/zlib/inflate.h	/^    code const FAR *distcode;   \/* starting table for distance codes *\/$/;"	m	struct:inflate_state	typeref:typename:code const FAR *
distfix	extern/libgit2/deps/zlib/inffixed.h	/^    static const code distfix[32] = {$/;"	v	typeref:typename:const code[32]
distrust_filemode	extern/libgit2/src/index.h	/^	unsigned int distrust_filemode:1;$/;"	m	struct:git_index	typeref:typename:unsigned int:1
div	extern/OpenXLSX/doxy/customdoxygen.css	/^body, table, div, p, dl,$/;"	s
div.ah	extern/OpenXLSX/doxy/customdoxygen.css	/^div.ah {$/;"	c
div.center	extern/OpenXLSX/doxy/customdoxygen.css	/^div.center {$/;"	c
div.center img	extern/OpenXLSX/doxy/customdoxygen.css	/^div.center img {$/;"	s
div.contents	extern/OpenXLSX/doxy/customdoxygen.css	/^div.contents {$/;"	c
div.directory	extern/OpenXLSX/doxy/customdoxygen.css	/^div.directory {$/;"	c
div.dynheader	extern/OpenXLSX/doxy/customdoxygen.css	/^div.dynheader {$/;"	c
div.fragment	extern/OpenXLSX/doxy/customdoxygen.css	/^div.fragment {$/;"	c
div.groupHeader	extern/OpenXLSX/doxy/customdoxygen.css	/^div.groupHeader {$/;"	c
div.groupText	extern/OpenXLSX/doxy/customdoxygen.css	/^div.groupText {$/;"	c
div.header	extern/OpenXLSX/doxy/customdoxygen.css	/^div.header {$/;"	c
div.headertitle	extern/OpenXLSX/doxy/customdoxygen.css	/^div.headertitle {$/;"	c
div.ingroups	extern/OpenXLSX/doxy/customdoxygen.css	/^div.ingroups {$/;"	c
div.ingroups a	extern/OpenXLSX/doxy/customdoxygen.css	/^div.ingroups a {$/;"	s
div.line	extern/OpenXLSX/doxy/customdoxygen.css	/^div.line {$/;"	c
div.line	extern/OpenXLSX/doxy/customdoxygen.css	/^pre.fragment, div.line,$/;"	c
div.line.glow	extern/OpenXLSX/doxy/customdoxygen.css	/^div.line.glow {$/;"	c
div.multicol	extern/OpenXLSX/doxy/customdoxygen.css	/^div.multicol {$/;"	c
div.navpath	extern/OpenXLSX/doxy/customdoxygen.css	/^div.qindex, div.navpath {$/;"	c
div.navtab	extern/OpenXLSX/doxy/customdoxygen.css	/^div.navtab {$/;"	c
div.navtab	extern/OpenXLSX/doxy/customdoxygen.css	/^div.qindex, div.navtab {$/;"	c
div.qindex	extern/OpenXLSX/doxy/customdoxygen.css	/^div.qindex, div.navpath {$/;"	c
div.qindex	extern/OpenXLSX/doxy/customdoxygen.css	/^div.qindex, div.navtab {$/;"	c
div.summary	extern/OpenXLSX/doxy/customdoxygen.css	/^div.summary {$/;"	c
div.summary a	extern/OpenXLSX/doxy/customdoxygen.css	/^div.summary a {$/;"	s
div.toc	extern/OpenXLSX/doxy/customdoxygen.css	/^div.toc {$/;"	c
div.toc h3	extern/OpenXLSX/doxy/customdoxygen.css	/^div.toc h3 {$/;"	s
div.toc li	extern/OpenXLSX/doxy/customdoxygen.css	/^div.toc li {$/;"	s
div.toc li.level1	extern/OpenXLSX/doxy/customdoxygen.css	/^div.toc li.level1 {$/;"	c
div.toc li.level2	extern/OpenXLSX/doxy/customdoxygen.css	/^div.toc li.level2 {$/;"	c
div.toc li.level3	extern/OpenXLSX/doxy/customdoxygen.css	/^div.toc li.level3 {$/;"	c
div.toc li.level4	extern/OpenXLSX/doxy/customdoxygen.css	/^div.toc li.level4 {$/;"	c
div.toc ul	extern/OpenXLSX/doxy/customdoxygen.css	/^div.toc ul {$/;"	s
div.zoom	extern/OpenXLSX/doxy/customdoxygen.css	/^div.zoom {$/;"	c
dl	extern/OpenXLSX/doxy/customdoxygen.css	/^body, table, div, p, dl,$/;"	s
dl	extern/OpenXLSX/doxy/customdoxygen.css	/^dl {$/;"	s
dl	extern/libgit2/deps/zlib/deflate.h	/^    } dl;$/;"	m	struct:ct_data_s	typeref:union:ct_data_s::__anonfe3a00cc020a
dl.attention	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.warning, dl.attention {$/;"	c
dl.bug	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.bug {$/;"	c
dl.citelist	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.citelist {$/;"	c
dl.citelist dd	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.citelist dd {$/;"	s
dl.citelist dt	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.citelist dt {$/;"	s
dl.deprecated	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.deprecated {$/;"	c
dl.deprecated dt a.el	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.deprecated dt a.el {$/;"	c
dl.el	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.el {$/;"	c
dl.invariant	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.pre, dl.post, dl.invariant {$/;"	c
dl.note	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.note {$/;"	c
dl.post	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.pre, dl.post, dl.invariant {$/;"	c
dl.pre	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.pre, dl.post, dl.invariant {$/;"	c
dl.reflist dd	extern/OpenXLSX/doxy/customdoxygen.css	/^.memdoc, dl.reflist dd {$/;"	s
dl.reflist dd	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.reflist dd {$/;"	s
dl.reflist dt	extern/OpenXLSX/doxy/customdoxygen.css	/^.memproto, dl.reflist dt {$/;"	s
dl.reflist dt	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.reflist dt {$/;"	s
dl.section	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.section {$/;"	c
dl.section dd	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.section dd {$/;"	s
dl.test	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.test {$/;"	c
dl.todo	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.todo {$/;"	c
dl.warning	extern/OpenXLSX/doxy/customdoxygen.css	/^dl.warning, dl.attention {$/;"	c
dlen	extern/libgit2/tests/odb/loose_data.h	/^    size_t        dlen;    \/* length of (uncompressed) object data      *\/$/;"	m	struct:object_data	typeref:typename:size_t
dll	extern/libgit2/src/hash/sha1/win32.h	/^	HINSTANCE dll;$/;"	m	struct:hash_cng_prov	typeref:typename:HINSTANCE
dm	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonda4e2ebc0108	typeref:typename:uint32_t[80]
dmax	extern/libgit2/deps/zlib/inflate.h	/^    unsigned dmax;              \/* zlib header max distance (INFLATE_STRICT) *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
do_callout	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static sljit_s32 SLJIT_FUNC do_callout(struct jit_arguments *arguments, PUBL(callout_block) *cal/;"	f	typeref:typename:sljit_s32 SLJIT_FUNC	file:
do_casefulcmp	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_casefulcmp(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_caselesscmp	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_caselesscmp(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_conflicted_diff	extern/libgit2/tests/diff/index.c	/^static void do_conflicted_diff(diff_expects *exp, unsigned long flags)$/;"	f	typeref:typename:void	file:
do_custom_reparse	extern/libgit2/tests/core/link.c	/^static void do_custom_reparse(const char *path)$/;"	f	typeref:typename:void	file:
do_describe	extern/libgit2/examples/describe.c	/^static void do_describe(git_repository *repo, describe_options *opts)$/;"	f	typeref:typename:void	file:
do_describe_single	extern/libgit2/examples/describe.c	/^static void do_describe_single(git_repository *repo, describe_options *opts, const char *rev)$/;"	f	typeref:typename:void	file:
do_fetch	extern/libgit2/tests/online/fetch.c	/^static void do_fetch(const char *url, git_remote_autotag_option_t flag, int n)$/;"	f	typeref:typename:void	file:
do_fsync	extern/libgit2/src/filebuf.h	/^	bool do_fsync;$/;"	m	struct:git_filebuf	typeref:typename:bool
do_fsync	extern/libgit2/src/indexer.c	/^		do_fsync :1,$/;"	m	struct:git_indexer	typeref:typename:unsigned int:1	file:
do_fsync	extern/libgit2/src/odb.h	/^	unsigned int do_fsync :1;$/;"	m	struct:git_odb	typeref:typename:unsigned int:1
do_getucd	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_getucd(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_hardlink	extern/libgit2/tests/core/link.c	/^static void do_hardlink(const char *old, const char *new)$/;"	f	typeref:typename:void	file:
do_junction	extern/libgit2/tests/core/link.c	/^static void do_junction(const char *old, const char *new)$/;"	f	typeref:typename:void	file:
do_lstat	extern/libgit2/src/win32/posix_w32.c	/^static int do_lstat(const char *path, struct stat *buf, bool posixly_correct)$/;"	f	typeref:typename:int	file:
do_match_gitdir	extern/libgit2/src/config_file.c	/^static int do_match_gitdir($/;"	f	typeref:typename:int	file:
do_not_buffer	extern/libgit2/src/filebuf.h	/^	bool do_not_buffer;$/;"	m	struct:git_filebuf	typeref:typename:bool
do_progress_callback	extern/libgit2/src/indexer.c	/^static int do_progress_callback(git_indexer *idx, git_indexer_progress *stats)$/;"	f	typeref:typename:int	file:
do_push	extern/libgit2/src/push.c	/^static int do_push(git_push *push, const git_remote_callbacks *callbacks)$/;"	f	typeref:typename:int	file:
do_push	extern/libgit2/tests/online/push.c	/^static void do_push($/;"	f	typeref:typename:void	file:
do_reset_match	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void do_reset_match(compiler_common *common, int length)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
do_revertframes	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_revertframes(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_search_mark	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static sljit_sw SLJIT_FUNC do_search_mark(sljit_sw *current, const pcre_uchar *skip_arg)$/;"	f	typeref:typename:sljit_sw SLJIT_FUNC	file:
do_send_request	extern/libgit2/src/transports/winhttp.c	/^static int do_send_request(winhttp_stream *s, size_t len, int ignore_length)$/;"	f	typeref:typename:int	file:
do_symlink	extern/libgit2/tests/core/link.c	/^static void do_symlink(const char *old, const char *new, int is_dir)$/;"	f	typeref:typename:void	file:
do_tags	extern/libgit2/CMakeLists.txt	/^		do_tags ALL$/;"	t
do_utf_caselesscmp	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static const pcre_uchar * SLJIT_FUNC do_utf_caselesscmp(pcre_uchar *src1, pcre_uchar *src2, pcre/;"	f	typeref:typename:const pcre_uchar * SLJIT_FUNC	file:
do_utfreadchar	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_utfreadchar(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_utfreadchar16	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_utfreadchar16(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_utfreadtype8	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_utfreadtype8(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_verify	extern/libgit2/src/indexer.c	/^		do_verify :1;$/;"	m	struct:git_indexer	typeref:typename:unsigned int:1	file:
do_verify_push_status	extern/libgit2/tests/online/push.c	/^static void do_verify_push_status(record_callbacks_data *data, const push_status expected[], con/;"	f	typeref:typename:void	file:
do_with_retries	extern/libgit2/src/win32/posix_w32.c	/^#define do_with_retries(/;"	d	file:
doc	extern/OpenXLSX/tests/c++/Test01_DocumentCreation.cpp	/^XLDocument doc;$/;"	v	typeref:typename:XLDocument
doc	extern/OpenXLSX/tests/c++/Test02_DocumentProperties.cpp	/^XLDocument doc;$/;"	v	typeref:typename:XLDocument
doc	extern/OpenXLSX/tests/c++/Test04-06_Sheet.cpp	/^XLDocument doc;$/;"	v	typeref:typename:XLDocument
doc	extern/OpenXLSX/tests/c++/Test08_Cell.cpp	/^XLDocument doc;$/;"	v	typeref:typename:XLDocument
document_buffer_order	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const void* document_buffer_order(const xpath_node& xnode)$/;"	f	typeref:typename:PUGI__FN const void *
document_element	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_document::document_element() const {$/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN xml_node
document_order_comparator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct document_order_comparator$/;"	s	file:
does_negate_pattern	extern/libgit2/src/ignore.c	/^static int does_negate_pattern(git_attr_fnmatch *rule, git_attr_fnmatch *neg)$/;"	f	typeref:typename:int	file:
does_negate_rule	extern/libgit2/src/ignore.c	/^static int does_negate_rule(int *out, git_vector *rules, git_attr_fnmatch *match)$/;"	f	typeref:typename:int	file:
done	extern/libgit2/deps/zlib/zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s	typeref:typename:int
done	extern/libgit2/src/pack-objects.h	/^	bool done;$/;"	m	struct:git_packbuilder	typeref:typename:bool
done	extern/libgit2/src/pack.h	/^	int done;$/;"	m	struct:git_packfile_stream	typeref:typename:int
dont_notify_cb	extern/libgit2/tests/checkout/index.c	/^static int dont_notify_cb($/;"	f	typeref:typename:int	file:
dot	extern/libgit2/tests/core/dirent.c	/^static walk_data dot = {$/;"	v	typeref:typename:walk_data	file:
dot_names	extern/libgit2/tests/core/dirent.c	/^static name_data dot_names[] = {$/;"	v	typeref:typename:name_data[]	file:
dotgit_flags	extern/libgit2/src/path.c	/^GIT_INLINE(unsigned int) dotgit_flags($/;"	f	typeref:typename:unsigned int
dowild	extern/libgit2/src/wildmatch.c	/^static int dowild(const uchar *p, const uchar *text, unsigned int flags)$/;"	f	typeref:typename:int	file:
download_tags	extern/libgit2/include/git2/remote.h	/^	git_remote_autotag_option_t download_tags;$/;"	m	struct:__anonc41be5800508	typeref:typename:git_remote_autotag_option_t
download_tags	extern/libgit2/src/remote.h	/^	git_remote_autotag_option_t download_tags;$/;"	m	struct:git_remote	typeref:typename:git_remote_autotag_option_t
download_tags_value	extern/libgit2/src/remote.c	/^static int download_tags_value(git_remote *remote, git_config *cfg)$/;"	f	typeref:typename:int	file:
driver	extern/libgit2/src/diff_driver.h	/^	git_diff_driver *driver;$/;"	m	struct:__anon6fb9a4970108	typeref:typename:git_diff_driver *
driver	extern/libgit2/src/diff_file.h	/^	git_diff_driver *driver;$/;"	m	struct:__anon2493e46b0108	typeref:typename:git_diff_driver *
driver	extern/libgit2/src/merge_driver.c	/^	git_merge_driver *driver;$/;"	m	struct:__anon8d5767c90108	typeref:typename:git_merge_driver *	file:
drivers	extern/libgit2/src/diff_driver.c	/^	git_strmap *drivers;$/;"	m	struct:git_diff_driver_registry	typeref:typename:git_strmap *	file:
drivers	extern/libgit2/src/merge_driver.c	/^	git_vector drivers;$/;"	m	struct:merge_driver_registry	typeref:typename:git_vector	file:
dst	extern/libgit2/include/git2/remote.h	/^	git_oid dst;$/;"	m	struct:__anonc41be5800208	typeref:typename:git_oid
dst	extern/libgit2/src/date.c	/^	int dst;$/;"	m	struct:__anon6112fc6c0208	typeref:typename:int	file:
dst	extern/libgit2/src/refspec.h	/^	char *dst;$/;"	m	struct:git_refspec	typeref:typename:char *
dst_refname	extern/libgit2/include/git2/remote.h	/^	char *dst_refname;$/;"	m	struct:__anonc41be5800208	typeref:typename:char *
dstart	extern/libgit2/src/xdiff/xtypes.h	/^	long dstart, dend;$/;"	m	struct:s_xdfile	typeref:typename:long
dt	extern/OpenXLSX/doxy/customdoxygen.css	/^dt {$/;"	s
dummy	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 dummy;              \/* To ensure size is a multiple of 8 *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
dummy1	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 dummy1;             \/* To ensure size is a multiple of 8 *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
dummy2	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 dummy2;             \/* To ensure size is a multiple of 8 *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
dummy3	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 dummy3;             \/* To ensure size is a multiple of 8 *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
dummy_node_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	static const xpath_node_set dummy_node_set;$/;"	v	typeref:typename:const xpath_node_set	file:
dummy_submodule_cb	extern/libgit2/tests/win32/forbidden.c	/^static int dummy_submodule_cb($/;"	f	typeref:typename:int	file:
dummy_transport	extern/libgit2/tests/transport/register.c	/^static int dummy_transport(git_transport **transport, git_remote *owner, void *param)$/;"	f	typeref:typename:int	file:
dummy_ucd_record	extern/libgit2/deps/pcre/pcre_ucd.c	/^const ucd_record PRIV(dummy_ucd_record)[] = {{$/;"	v	typeref:typename:const ucd_record PRIV ()[]
dump_submodules	extern/libgit2/tests/submodule/submodule_helpers.c	/^void dump_submodules(git_repository *repo)$/;"	f	typeref:typename:void
dump_summary	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static void dump_summary(const char *label)$/;"	f	typeref:typename:void	file:
dup_entry	extern/libgit2/src/blame_git.c	/^static void dup_entry(git_blame__entry *dst, git_blame__entry *src)$/;"	f	typeref:typename:void	file:
dup_hunk	extern/libgit2/src/blame.c	/^static git_blame_hunk* dup_hunk(git_blame_hunk *hunk)$/;"	f	typeref:typename:git_blame_hunk *	file:
dup_reflog	extern/libgit2/src/transaction.c	/^static int dup_reflog(git_reflog **out, const git_reflog *in, git_pool *pool)$/;"	f	typeref:typename:int	file:
dupgroups	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL dupgroups;                   \/* Duplicate groups exist: (?| found *\/$/;"	m	struct:compile_data	typeref:typename:BOOL
duplicate_comparator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct duplicate_comparator$/;"	s	file:
duplicate_level	extern/libgit2/src/config.c	/^static int duplicate_level(void **old_raw, void *new_raw)$/;"	f	typeref:typename:int	file:
duplicate_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static char_t* duplicate_string(const char_t* string, size_t length, xpath_allocator* alloc)$/;"	f	class:xpath_string	typeref:typename:char_t *	file:
dupnames	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL dupnames;                    \/* Duplicate names exist *\/$/;"	m	struct:compile_data	typeref:typename:BOOL
dvB	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonda4e2ebc0108	typeref:typename:int
dvK	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonda4e2ebc0108	typeref:typename:int
dvType	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonda4e2ebc0108	typeref:typename:int
dv_info_t	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	t	typeref:struct:__anonda4e2ebc0108
dwAccessType	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwAccessType;$/;"	m	struct:__anonb531ffc20408	typeref:typename:DWORD
dwAutoDetectFlags	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwAutoDetectFlags;$/;"	m	struct:__anonb531ffc20608	typeref:typename:DWORD
dwError	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwError;$/;"	m	struct:__anonb531ffc20208	typeref:typename:DWORD
dwExtraInfoLength	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwExtraInfoLength;$/;"	m	struct:__anonb531ffc20108	typeref:typename:DWORD
dwFlags	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwFlags;$/;"	m	struct:__anonb531ffc20608	typeref:typename:DWORD
dwHostNameLength	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwHostNameLength;$/;"	m	struct:__anonb531ffc20108	typeref:typename:DWORD
dwKeySize	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwKeySize;$/;"	m	struct:__anonb531ffc20308	typeref:typename:DWORD
dwMajorVersion	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwMajorVersion;$/;"	m	struct:__anonb531ffc20708	typeref:typename:DWORD
dwMinorVersion	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwMinorVersion;$/;"	m	struct:__anonb531ffc20708	typeref:typename:DWORD
dwPasswordLength	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwPasswordLength;$/;"	m	struct:__anonb531ffc20108	typeref:typename:DWORD
dwReserved	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwReserved;$/;"	m	struct:__anonb531ffc20608	typeref:typename:DWORD
dwResult	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD_PTR dwResult;$/;"	m	struct:__anonb531ffc20208	typeref:typename:DWORD_PTR
dwSchemeLength	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwSchemeLength;$/;"	m	struct:__anonb531ffc20108	typeref:typename:DWORD
dwStructSize	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwStructSize;$/;"	m	struct:__anonb531ffc20108	typeref:typename:DWORD
dwUrlPathLength	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwUrlPathLength;$/;"	m	struct:__anonb531ffc20108	typeref:typename:DWORD
dwUserNameLength	extern/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwUserNameLength;$/;"	m	struct:__anonb531ffc20108	typeref:typename:DWORD
dwim_refspecs	extern/libgit2/src/remote.c	/^static int dwim_refspecs(git_vector *out, git_vector *refspecs, git_vector *refs)$/;"	f	typeref:typename:int	file:
dyn_dtree	extern/libgit2/deps/zlib/deflate.h	/^    struct ct_data_s dyn_dtree[2*D_CODES+1]; \/* distance tree *\/$/;"	m	struct:internal_state	typeref:struct:ct_data_s[]
dyn_ltree	extern/libgit2/deps/zlib/deflate.h	/^    struct ct_data_s dyn_ltree[HEAP_SIZE];   \/* literal and length tree *\/$/;"	m	struct:internal_state	typeref:struct:ct_data_s[]
dyn_tree	extern/libgit2/deps/zlib/deflate.h	/^    ct_data *dyn_tree;           \/* the dynamic tree *\/$/;"	m	struct:tree_desc_s	typeref:typename:ct_data *
each_tag	extern/libgit2/examples/tag.c	/^static int each_tag(const char *name, tag_state *state)$/;"	f	typeref:typename:int	file:
ebcdic_chartab	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 ebcdic_chartab[] = { \/* chartable partial dup *\/$/;"	v	typeref:typename:const pcre_uint8[]	file:
ebcdic_escape_c	extern/libgit2/deps/pcre/pcre_compile.c	/^static unsigned char ebcdic_escape_c[] = "@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_";$/;"	v	typeref:typename:unsigned char[]	file:
ecode	extern/libgit2/deps/pcre/pcre_exec.c	/^#define ecode /;"	d	file:
effective_indent	extern/libgit2/src/xdiff/xdiffi.c	/^	int effective_indent;$/;"	m	struct:split_score	typeref:typename:int	file:
eint	extern/libgit2/deps/pcre/pcreposix.c	/^static const int eint[] = {$/;"	v	typeref:typename:const int[]	file:
elems	extern/libgit2/deps/zlib/trees.c	/^    int     elems;               \/* max number of elements in the tree *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:int	file:
email	extern/libgit2/include/git2/types.h	/^	char *email; \/**< email of the author *\/$/;"	m	struct:git_signature	typeref:typename:char *
email	extern/libgit2/tests/commit/parse.c	/^	const char *email;$/;"	m	struct:__anond44356cc0208	typeref:typename:const char *	file:
emit_func_t	extern/libgit2/src/xdiff/xemit.h	/^typedef int (*emit_func_t)(xdfenv_t *xe, xdchange_t *xscr, xdemitcb_t *ecb,$/;"	t	typeref:typename:int (*)(xdfenv_t * xe,xdchange_t * xscr,xdemitcb_t * ecb,xdemitconf_t const * xecfg)
empty	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool empty() const$/;"	f	class:xpath_node_set_raw	typeref:typename:bool	file:
empty	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool empty() const$/;"	f	class:xpath_string	typeref:typename:bool	file:
empty	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_node_set::empty() const$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN bool
empty	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::empty() const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
empty	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::empty() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
empty	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::empty() const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
empty	extern/OpenXLSX/tests/catch/catch.hpp	/^        auto empty() const noexcept -> bool {$/;"	f	class:Catch::StringRef	typeref:typename:auto
empty	extern/libgit2/tests/core/dirent.c	/^static walk_data empty = {$/;"	v	typeref:typename:walk_data	file:
empty_iterator	extern/libgit2/src/iterator.c	/^} empty_iterator;$/;"	t	typeref:struct:__anonb487a9b80208	file:
empty_iterator_advance_over	extern/libgit2/src/iterator.c	/^static int empty_iterator_advance_over($/;"	f	typeref:typename:int	file:
empty_iterator_free	extern/libgit2/src/iterator.c	/^static void empty_iterator_free(git_iterator *i)$/;"	f	typeref:typename:void	file:
empty_iterator_noop	extern/libgit2/src/iterator.c	/^static int empty_iterator_noop(const git_index_entry **e, git_iterator *i)$/;"	f	typeref:typename:int	file:
empty_iterator_reset	extern/libgit2/src/iterator.c	/^static int empty_iterator_reset(git_iterator *i)$/;"	f	typeref:typename:int	file:
empty_names	extern/libgit2/tests/core/dirent.c	/^static name_data empty_names[] = {$/;"	v	typeref:typename:name_data[]	file:
empty_tmp_dir	extern/libgit2/tests/core/rmdir.c	/^static const char *empty_tmp_dir = "test_gitfo_rmdir_recurs_test";$/;"	v	typeref:typename:const char *	file:
empty_workdir	extern/libgit2/tests/checkout/crlf.c	/^static void empty_workdir(const char *name)$/;"	f	typeref:typename:void	file:
enabled	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^      BOOL enabled;$/;"	m	struct:char_iterator_backtrack::__anon313b80c3020a::__anon313b80c30308	typeref:typename:BOOL	file:
enabled	extern/libgit2/tests/clar.c	/^	int enabled;$/;"	m	struct:clar_suite	typeref:typename:int	file:
encoding	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_encoding encoding;$/;"	m	class:xml_buffered_writer	typeref:typename:xml_encoding	file:
encoding	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xml_encoding encoding;$/;"	m	struct:pugi::xml_parse_result	typeref:typename:xml_encoding
encoding_auto	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        encoding_auto,        \/\/ Auto-detect input encoding using BOM or < \/ <? detection; us/;"	e	enum:pugi::xml_encoding
encoding_latin1	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        encoding_latin1$/;"	e	enum:pugi::xml_encoding
encoding_utf16	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        encoding_utf16,        \/\/ UTF16 with native endianness$/;"	e	enum:pugi::xml_encoding
encoding_utf16_be	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        encoding_utf16_be,    \/\/ Big-endian UTF16$/;"	e	enum:pugi::xml_encoding
encoding_utf16_le	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        encoding_utf16_le,    \/\/ Little-endian UTF16$/;"	e	enum:pugi::xml_encoding
encoding_utf32	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        encoding_utf32,        \/\/ UTF32 with native endianness$/;"	e	enum:pugi::xml_encoding
encoding_utf32_be	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        encoding_utf32_be,    \/\/ Big-endian UTF32$/;"	e	enum:pugi::xml_encoding
encoding_utf32_le	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        encoding_utf32_le,    \/\/ Little-endian UTF32$/;"	e	enum:pugi::xml_encoding
encoding_utf8	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        encoding_utf8,        \/\/ UTF8 encoding$/;"	e	enum:pugi::xml_encoding
encoding_wchar	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        encoding_wchar,        \/\/ The same encoding wchar_t has (either UTF16 or UTF32)$/;"	e	enum:pugi::xml_encoding
encounters	extern/libgit2/tests/refs/branches/iterator.c	/^	int encounters;$/;"	m	struct:expectations	typeref:typename:int	file:
encrypted	extern/libgit2/include/git2/sys/stream.h	/^	int encrypted;$/;"	m	struct:git_stream	typeref:typename:int
end	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^XLCellIterator XLCellRange::end() {$/;"	f	class:XLCellRange	typeref:typename:XLCellIterator
end	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellRange.cpp	/^XLCellIteratorConst XLCellRange::end() const {$/;"	f	class:XLCellRange	typeref:typename:XLCellIteratorConst
end	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		const char_t* end;$/;"	m	struct:xpath_lexer_string	typeref:typename:const char_t *	file:
end	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_node* end() const$/;"	f	class:xpath_node_set_raw	typeref:typename:xpath_node *	file:
end	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set::const_iterator xpath_node_set::end() const$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN xpath_node_set::const_iterator
end	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t* end;$/;"	m	struct:gap	typeref:typename:char_t *	file:
end	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_tree_walker::end(xml_node&) {$/;"	f	class:pugi::xml_tree_walker	typeref:typename:PUGI__FN bool
end	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node::iterator xml_node::end() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node::iterator
end	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        It end() const { return _end; }$/;"	f	class:pugi::xml_object_range	typeref:typename:It
end	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  const pcre_uchar *end;$/;"	m	struct:jit_arguments	typeref:typename:const pcre_uchar *	file:
end	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  end$/;"	e	enum:copy_private_data::__anon313b80c30603	file:
end	extern/libgit2/src/iterator.h	/^	char *end;$/;"	m	struct:git_iterator	typeref:typename:char *
end	extern/libgit2/src/iterator.h	/^	const char *end;$/;"	m	struct:__anonb487a9bd0408	typeref:typename:const char *
end	extern/libgit2/src/xdiff/xdiffi.c	/^	long end;$/;"	m	struct:xdlgroup	typeref:typename:long	file:
end	p.cpp	/^  aiterator end() { return aiterator{}; }$/;"	f	struct:tree_iterator	typeref:typename:aiterator	file:
end1	extern/libgit2/src/xdiff/xhistogram.c	/^	unsigned int begin1, end1;$/;"	m	struct:region	typeref:typename:unsigned int	file:
end2	extern/libgit2/src/xdiff/xhistogram.c	/^	unsigned int begin2, end2;$/;"	m	struct:region	typeref:typename:unsigned int	file:
end_len	extern/libgit2/src/iterator.h	/^	size_t end_len;$/;"	m	struct:git_iterator	typeref:typename:size_t
end_line	extern/libgit2/examples/blame.c	/^	int end_line;$/;"	m	struct:opts	typeref:typename:int	file:
end_match_ptr	extern/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR end_match_ptr;      \/* Subject position at end match *\/$/;"	m	struct:match_data	typeref:typename:PCRE_PUCHAR
end_of_file	extern/libgit2/src/xdiff/xdiffi.c	/^	int end_of_file;$/;"	m	struct:split_measurement	typeref:typename:int	file:
end_offset_top	extern/libgit2/deps/pcre/pcre_internal.h	/^  int    end_offset_top;          \/* Highwater mark at end of match *\/$/;"	m	struct:match_data	typeref:typename:int
end_pattern	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *end_pattern;    \/* The end of the pattern *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uchar *
end_subject	extern/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR end_subject;        \/* End of the subject string *\/$/;"	m	struct:match_data	typeref:typename:PCRE_PUCHAR
end_subject	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *end_subject;    \/* End of subject string *\/$/;"	m	struct:dfa_match_data	typeref:typename:const pcre_uchar *
ended	extern/libgit2/src/iterator.h	/^	bool ended;$/;"	m	struct:git_iterator	typeref:typename:bool
endian_swap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline uint16_t endian_swap(uint16_t value) {$/;"	f	typeref:typename:PUGI__NS_END PUGI__NS_BEGIN uint16_t
endian_swap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline uint32_t endian_swap(uint32_t value) {$/;"	f	typeref:typename:uint32_t
endl	extern/OpenXLSX/benchmark/table_printer.h	/^    class endl$/;"	c	namespace:bprinter
endonly	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   endonly;                 \/* Dollar not before final \\n *\/$/;"	m	struct:match_data	typeref:typename:BOOL
endonly	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int endonly;$/;"	m	struct:compiler_common	typeref:typename:int	file:
endp	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^	const unsigned char *endp;$/;"	m	struct:fuzzer_stream	typeref:typename:const unsigned char *	file:
ends_with_optional_cr	extern/libgit2/src/xdiff/xutils.c	/^static int ends_with_optional_cr(const char *l, long s, long i)$/;"	f	typeref:typename:int	file:
enqueue	extern/libgit2/src/revwalk.h	/^	int (*enqueue)(git_revwalk *, git_commit_list_node *);$/;"	m	struct:git_revwalk	typeref:typename:int (*)(git_revwalk *,git_commit_list_node *)
enqueue_tag	extern/libgit2/src/push.c	/^static int enqueue_tag(git_object **out, git_push *push, git_oid *id)$/;"	f	typeref:typename:int	file:
ensure_aborted	extern/libgit2/tests/rebase/abort.c	/^static void ensure_aborted($/;"	f	typeref:typename:void	file:
ensure_base_rev_is_not_known_yet	extern/libgit2/src/revparse.c	/^static int ensure_base_rev_is_not_known_yet(git_object *object)$/;"	f	typeref:typename:int	file:
ensure_base_rev_loaded	extern/libgit2/src/revparse.c	/^static int ensure_base_rev_loaded(git_object **object, git_reference **reference, const char *sp/;"	f	typeref:typename:int	file:
ensure_clean_index	extern/libgit2/src/stash.c	/^static int ensure_clean_index(git_repository *repo, git_index *index)$/;"	f	typeref:typename:int	file:
ensure_identical_patch_inout	extern/libgit2/tests/patch/parse.c	/^static void ensure_identical_patch_inout(const char *content) {$/;"	f	typeref:typename:void	file:
ensure_is_an_updatable_direct_reference	extern/libgit2/src/refs.c	/^static int ensure_is_an_updatable_direct_reference(git_reference *ref)$/;"	f	typeref:typename:int	file:
ensure_is_an_updatable_symbolic_reference	extern/libgit2/src/refs.c	/^static int ensure_is_an_updatable_symbolic_reference(git_reference *ref)$/;"	f	typeref:typename:int	file:
ensure_left_hand_identifier_is_not_known_yet	extern/libgit2/src/revparse.c	/^static int ensure_left_hand_identifier_is_not_known_yet(git_object *object, git_reference *refer/;"	f	typeref:typename:int	file:
ensure_no_refname_starts_with_a_forward_slash	extern/libgit2/tests/refs/listall.c	/^static void ensure_no_refname_starts_with_a_forward_slash(const char *path)$/;"	f	typeref:typename:void	file:
ensure_patch_validity	extern/libgit2/tests/patch/parse.c	/^static void ensure_patch_validity(git_patch *patch)$/;"	f	typeref:typename:void	file:
ensure_refname_invalid	extern/libgit2/tests/refs/normalize.c	/^static void ensure_refname_invalid(unsigned int flags, const char *input_refname)$/;"	f	typeref:typename:void	file:
ensure_refname_normalized	extern/libgit2/tests/refs/normalize.c	/^static void ensure_refname_normalized($/;"	f	typeref:typename:void	file:
ensure_remote_doesnot_exist	extern/libgit2/src/remote.c	/^static int ensure_remote_doesnot_exist(git_repository *repo, const char *name)$/;"	f	typeref:typename:int	file:
ensure_remote_name_is_valid	extern/libgit2/src/remote.c	/^static int ensure_remote_name_is_valid(const char *name)$/;"	f	typeref:typename:int	file:
ensure_repository_discover	extern/libgit2/tests/repo/discover.c	/^static void ensure_repository_discover(const char *start_path,$/;"	f	typeref:typename:void	file:
ensure_repository_init	extern/libgit2/tests/repo/init.c	/^static void ensure_repository_init($/;"	f	typeref:typename:void	file:
ensure_segment_validity	extern/libgit2/src/refs.c	/^static int ensure_segment_validity(const char *name, char may_contain_glob)$/;"	f	typeref:typename:int	file:
ensure_submodules_found	extern/libgit2/tests/diff/submodules.c	/^static void ensure_submodules_found($/;"	f	typeref:typename:void	file:
ensure_tag_pattern_match	extern/libgit2/tests/object/tag/list.c	/^static void ensure_tag_pattern_match(git_repository *repo,$/;"	f	typeref:typename:void	file:
ensure_there_are_changes_to_stash	extern/libgit2/src/stash.c	/^static int ensure_there_are_changes_to_stash($/;"	f	typeref:typename:int	file:
ensure_workdir	extern/libgit2/tests/checkout/conflict.c	/^static void ensure_workdir(const char *path, int mode, const char *oid_str)$/;"	f	typeref:typename:void	file:
ensure_workdir_contents	extern/libgit2/tests/checkout/conflict.c	/^static void ensure_workdir_contents(const char *path, const char *contents)$/;"	f	typeref:typename:void	file:
ensure_workdir_link	extern/libgit2/tests/checkout/conflict.c	/^static void ensure_workdir_link($/;"	f	typeref:typename:void	file:
ensure_workdir_mode	extern/libgit2/tests/checkout/conflict.c	/^static void ensure_workdir_mode(const char *path, int mode)$/;"	f	typeref:typename:void	file:
ensure_workdir_oid	extern/libgit2/tests/checkout/conflict.c	/^static void ensure_workdir_oid(const char *path, const char *oid_str)$/;"	f	typeref:typename:void	file:
ensure_writable	extern/libgit2/src/win32/posix_w32.c	/^static int ensure_writable(wchar_t *path)$/;"	f	typeref:typename:int	file:
ent	extern/libgit2/src/blame.h	/^	git_blame__entry *ent;$/;"	m	struct:git_blame	typeref:typename:git_blame__entry *
entries	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  recurse_entry *entries;$/;"	m	struct:compiler_common	typeref:typename:recurse_entry *	file:
entries	extern/libgit2/src/config_entries.c	/^	git_config_entries *entries;$/;"	m	struct:config_entries_iterator	typeref:typename:git_config_entries *	file:
entries	extern/libgit2/src/config_file.c	/^	git_config_entries *entries;$/;"	m	struct:__anon041cc2a30108	typeref:typename:git_config_entries *	file:
entries	extern/libgit2/src/config_file.c	/^	git_config_entries *entries;$/;"	m	struct:__anon041cc2a30208	typeref:typename:git_config_entries *	file:
entries	extern/libgit2/src/config_mem.c	/^	git_config_entries *entries;$/;"	m	struct:__anon36e9f1a20108	typeref:typename:git_config_entries *	file:
entries	extern/libgit2/src/config_mem.c	/^	git_config_entries *entries;$/;"	m	struct:__anon36e9f1a20208	typeref:typename:git_config_entries *	file:
entries	extern/libgit2/src/config_snapshot.c	/^	git_config_entries *entries;$/;"	m	struct:__anonb8a4a6330108	typeref:typename:git_config_entries *	file:
entries	extern/libgit2/src/index.h	/^	git_vector entries;$/;"	m	struct:git_index	typeref:typename:git_vector
entries	extern/libgit2/src/iterator.c	/^	git_vector entries;$/;"	m	struct:__anonb487a9b80408	typeref:typename:git_vector	file:
entries	extern/libgit2/src/iterator.c	/^	git_vector entries;$/;"	m	struct:__anonb487a9b80708	typeref:typename:git_vector	file:
entries	extern/libgit2/src/iterator.c	/^	git_vector entries;$/;"	m	struct:__anonb487a9b80908	typeref:typename:git_vector	file:
entries	extern/libgit2/src/mailmap.h	/^	git_vector entries;$/;"	m	struct:git_mailmap	typeref:typename:git_vector
entries	extern/libgit2/src/pack.h	/^	git_offmap *entries;$/;"	m	struct:__anon7d07ab120108	typeref:typename:git_offmap *
entries	extern/libgit2/src/reflog.h	/^	git_vector entries;$/;"	m	struct:git_reflog	typeref:typename:git_vector
entries	extern/libgit2/src/xdiff/xpatience.c	/^	} *entries, *first, *last;$/;"	m	struct:hashmap	typeref:struct:hashmap::entry *	file:
entries	extern/libgit2/tests/mailmap/parsing.c	/^static const mailmap_entry entries[] = {$/;"	v	typeref:typename:const mailmap_entry[]	file:
entries_cmp_path	extern/libgit2/src/index.h	/^	git_vector_cmp entries_cmp_path;$/;"	m	struct:git_index	typeref:typename:git_vector_cmp
entries_map	extern/libgit2/src/index.h	/^	git_idxmap *entries_map;$/;"	m	struct:git_index	typeref:typename:git_idxmap *
entries_search	extern/libgit2/src/index.h	/^	git_vector_cmp entries_search;$/;"	m	struct:git_index	typeref:typename:git_vector_cmp
entries_search_path	extern/libgit2/src/index.h	/^	git_vector_cmp entries_search_path;$/;"	m	struct:git_index	typeref:typename:git_vector_cmp
entry	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *entry;$/;"	m	struct:recurse_entry	typeref:struct:sljit_label *	file:
entry	extern/libgit2/src/attr_file.h	/^	git_attr_file_entry *entry;$/;"	m	struct:__anon32d629ad0608	typeref:typename:git_attr_file_entry *
entry	extern/libgit2/src/config_entries.c	/^	git_config_entry *entry;$/;"	m	struct:config_entry_list	typeref:typename:git_config_entry *	file:
entry	extern/libgit2/src/index.c	/^	git_index_entry entry;$/;"	m	struct:entry_internal	typeref:typename:git_index_entry	file:
entry	extern/libgit2/src/index.c	/^	git_index_reuc_entry entry;$/;"	m	struct:reuc_entry_internal	typeref:typename:git_index_reuc_entry	file:
entry	extern/libgit2/src/indexer.c	/^struct entry {$/;"	s	file:
entry	extern/libgit2/src/iterator.c	/^	const git_index_entry *entry;$/;"	m	struct:__anonb487a9b80908	typeref:typename:const git_index_entry *	file:
entry	extern/libgit2/src/iterator.c	/^	git_index_entry entry;$/;"	m	struct:__anonb487a9b80508	typeref:typename:git_index_entry	file:
entry	extern/libgit2/src/iterator.c	/^	git_index_entry entry;$/;"	m	struct:__anonb487a9b80808	typeref:typename:git_index_entry	file:
entry	extern/libgit2/src/win32/dir.h	/^	struct git__dirent entry;$/;"	m	struct:__anon949726940108	typeref:struct:git__dirent
entry	extern/libgit2/src/xdiff/xpatience.c	/^	struct entry {$/;"	s	struct:hashmap	file:
entry	extern/libgit2/tests/merge/merge_helpers.h	/^	struct merge_index_entry entry;$/;"	m	struct:merge_index_with_status	typeref:struct:merge_index_entry
entry_cmp	extern/libgit2/src/index.c	/^	git_vector_cmp entry_cmp;$/;"	m	struct:read_tree_data	typeref:typename:git_vector_cmp	file:
entry_count	extern/libgit2/src/index.c	/^	uint32_t entry_count;$/;"	m	struct:index_header	typeref:typename:uint32_t	file:
entry_count	extern/libgit2/src/tree-cache.h	/^	ssize_t entry_count;$/;"	m	struct:git_tree_cache	typeref:typename:ssize_t
entry_count	extern/libgit2/tests/status/status_helpers.h	/^	int entry_count;$/;"	m	struct:__anon9cf2f0870108	typeref:typename:int
entry_count0	extern/libgit2/tests/status/status_data.h	/^static const int entry_count0 = 16;$/;"	v	typeref:typename:const int
entry_count2	extern/libgit2/tests/status/status_data.h	/^static const int entry_count2 = 15;$/;"	v	typeref:typename:const int
entry_count3	extern/libgit2/tests/status/status_data.h	/^static const int entry_count3 = 22;$/;"	v	typeref:typename:const int
entry_count4	extern/libgit2/tests/status/status_data.h	/^static const int entry_count4 = 23;$/;"	v	typeref:typename:const int
entry_count5	extern/libgit2/tests/status/status_data.h	/^static const int entry_count5 = 8;$/;"	v	typeref:typename:const int
entry_count6	extern/libgit2/tests/status/status_data.h	/^static const int entry_count6 = 13;$/;"	v	typeref:typename:const int
entry_data	extern/libgit2/src/indexer.c	/^	git_buf entry_data;$/;"	m	struct:git_indexer	typeref:typename:git_buf	file:
entry_dir_flag	extern/libgit2/src/iterator.c	/^GIT_INLINE(git_dir_flag) entry_dir_flag(git_index_entry *entry)$/;"	f	typeref:typename:git_dir_flag
entry_fromname	extern/libgit2/src/tree.c	/^static const git_tree_entry *entry_fromname($/;"	f	typeref:typename:const git_tree_entry *	file:
entry_internal	extern/libgit2/src/index.c	/^struct entry_internal {$/;"	s	file:
entry_is_prefixed	extern/libgit2/src/diff_generate.c	/^static bool entry_is_prefixed($/;"	f	typeref:typename:bool	file:
entry_long	extern/libgit2/src/index.c	/^struct entry_long {$/;"	s	file:
entry_path	extern/libgit2/src/iterator.c	/^	git_buf entry_path;$/;"	m	struct:__anonb487a9b80508	typeref:typename:git_buf	file:
entry_paths0	extern/libgit2/tests/status/status_data.h	/^static const char *entry_paths0[] = {$/;"	v	typeref:typename:const char * []
entry_paths2	extern/libgit2/tests/status/status_data.h	/^static const char *entry_paths2[] = {$/;"	v	typeref:typename:const char * []
entry_paths3	extern/libgit2/tests/status/status_data.h	/^static const char *entry_paths3[] = {$/;"	v	typeref:typename:const char * []
entry_paths3_icase	extern/libgit2/tests/status/status_data.h	/^static const char *entry_paths3_icase[] = {$/;"	v	typeref:typename:const char * []
entry_paths4	extern/libgit2/tests/status/status_data.h	/^static const char *entry_paths4[] = {$/;"	v	typeref:typename:const char * []
entry_paths5	extern/libgit2/tests/status/status_data.h	/^static const char *entry_paths5[] = {$/;"	v	typeref:typename:const char * []
entry_paths6	extern/libgit2/tests/status/status_data.h	/^static const char *entry_paths6[] = {$/;"	v	typeref:typename:const char * []
entry_pool	extern/libgit2/src/iterator.c	/^	git_pool entry_pool;$/;"	m	struct:__anonb487a9b80508	typeref:typename:git_pool	file:
entry_pool	extern/libgit2/src/iterator.c	/^	git_pool entry_pool;$/;"	m	struct:__anonb487a9b80708	typeref:typename:git_pool	file:
entry_short	extern/libgit2/src/index.c	/^struct entry_short {$/;"	s	file:
entry_size	extern/libgit2/src/index.c	/^#define entry_size(/;"	d	file:
entry_sort_cmp	extern/libgit2/src/tree.c	/^static int entry_sort_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
entry_srch	extern/libgit2/src/iterator.h	/^	int (*entry_srch)(const void *key, const void *array_member);$/;"	m	struct:git_iterator	typeref:typename:int (*)(const void * key,const void * array_member)
entry_srch_key	extern/libgit2/src/index.c	/^struct entry_srch_key {$/;"	s	file:
entry_start	extern/libgit2/src/indexer.c	/^	git_off_t entry_start;$/;"	m	struct:git_indexer	typeref:typename:git_off_t	file:
entry_statuses0	extern/libgit2/tests/status/status_data.h	/^static const unsigned int entry_statuses0[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_statuses2	extern/libgit2/tests/status/status_data.h	/^static const unsigned int entry_statuses2[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_statuses3	extern/libgit2/tests/status/status_data.h	/^static const unsigned int entry_statuses3[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_statuses3_icase	extern/libgit2/tests/status/status_data.h	/^static const unsigned int entry_statuses3_icase[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_statuses4	extern/libgit2/tests/status/status_data.h	/^static const unsigned int entry_statuses4[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_statuses5	extern/libgit2/tests/status/status_data.h	/^static const unsigned int entry_statuses5[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_statuses6	extern/libgit2/tests/status/status_data.h	/^static const unsigned int entry_statuses6[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_time	extern/libgit2/src/index.c	/^struct entry_time {$/;"	s	file:
entry_type	extern/libgit2/src/indexer.c	/^	git_object_t entry_type;$/;"	m	struct:git_indexer	typeref:typename:git_object_t	file:
entrycomp	extern/libgit2/src/diff.h	/^	int (*entrycomp)(const void *a, const void *b);$/;"	m	struct:git_diff	typeref:typename:int (*)(const void * a,const void * b)
entrycount	extern/libgit2/tests/refs/reflog/drop.c	/^static size_t entrycount;$/;"	v	typeref:typename:size_t	file:
env	extern/libgit2/src/xdiff/xhistogram.c	/^	xdfenv_t *env;$/;"	m	struct:histindex	typeref:typename:xdfenv_t *	file:
env	extern/libgit2/src/xdiff/xpatience.c	/^	xdfenv_t *env;$/;"	m	struct:hashmap	typeref:typename:xdfenv_t *	file:
env_cd_	extern/libgit2/tests/repo/env.c	/^static void env_cd_($/;"	f	typeref:typename:void	file:
env_cd_fail	extern/libgit2/tests/repo/env.c	/^#define env_cd_fail(/;"	d	file:
env_cd_pass	extern/libgit2/tests/repo/env.c	/^#define env_cd_pass(/;"	d	file:
env_check_objects	extern/libgit2/tests/repo/env.c	/^#define env_check_objects(/;"	d	file:
env_check_objects_	extern/libgit2/tests/repo/env.c	/^static void env_check_objects_(bool a, bool t, bool p, const char *file, int line)$/;"	f	typeref:typename:void	file:
env_fail	extern/libgit2/tests/repo/env.c	/^#define env_fail(/;"	d	file:
env_fail_	extern/libgit2/tests/repo/env.c	/^static void env_fail_(const char *path, const char *file, int line)$/;"	f	typeref:typename:void	file:
env_pass	extern/libgit2/tests/repo/env.c	/^#define env_pass(/;"	d	file:
env_pass_	extern/libgit2/tests/repo/env.c	/^static void env_pass_(const char *path, const char *file, int line)$/;"	f	typeref:typename:void	file:
env_save	extern/libgit2/tests/core/env.c	/^static char *env_save[NUM_VARS];$/;"	v	typeref:typename:char * []	file:
env_vars	extern/libgit2/tests/core/env.c	/^static const char *env_vars[NUM_VARS] = { "HOME" };$/;"	v	typeref:typename:const char * []	file:
env_vars	extern/libgit2/tests/core/env.c	/^static const char *env_vars[NUM_VARS] = {$/;"	v	typeref:typename:const char * []	file:
eof	extern/libgit2/deps/zlib/gzguts.h	/^    int eof;                \/* true if end of input file reached *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:int
eof_for_origin	extern/libgit2/src/patch_parse.c	/^static int eof_for_origin(int origin) {$/;"	f	typeref:typename:int	file:
epb_prev	extern/libgit2/deps/pcre/pcre_internal.h	/^  struct eptrblock *epb_prev;$/;"	m	struct:eptrblock	typeref:struct:eptrblock *
epb_saved_eptr	extern/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR epb_saved_eptr;$/;"	m	struct:eptrblock	typeref:typename:PCRE_PUCHAR
eptr	extern/libgit2/deps/pcre/pcre_exec.c	/^#define eptr /;"	d	file:
eptrb	extern/libgit2/deps/pcre/pcre_exec.c	/^#define eptrb /;"	d	file:
eptrblock	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct eptrblock {$/;"	s
eptrblock	extern/libgit2/deps/pcre/pcre_internal.h	/^} eptrblock;$/;"	t	typeref:struct:eptrblock
eptrchain	extern/libgit2/deps/pcre/pcre_internal.h	/^  eptrblock *eptrchain;           \/* Chain of eptrblocks for tail recursions *\/$/;"	m	struct:match_data	typeref:typename:eptrblock *
eptrn	extern/libgit2/deps/pcre/pcre_internal.h	/^  int    eptrn;                   \/* Next free eptrblock *\/$/;"	m	struct:match_data	typeref:typename:int
equal_to	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct equal_to$/;"	s	file:
err	extern/libgit2/deps/zlib/gzguts.h	/^    int err;                \/* error code *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:int
err_pkt	extern/libgit2/src/transports/smart_pkt.c	/^static int err_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
errmsg	extern/libgit2/deps/ntlmclient/ntlm.h	/^	const char *errmsg;$/;"	m	struct:ntlm_client	typeref:typename:const char *
errno	extern/libgit2/deps/zlib/zutil.c	/^    int errno = 0;$/;"	v	typeref:typename:int
erroneous_filter_free	extern/libgit2/tests/filter/custom_helpers.c	/^static void erroneous_filter_free(git_filter *f)$/;"	f	typeref:typename:void	file:
erroneous_filter_stream	extern/libgit2/tests/filter/custom_helpers.c	/^int erroneous_filter_stream($/;"	f	typeref:typename:int
error	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* error(const char* message)$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
error	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        const char* error;$/;"	m	struct:pugi::xpath_parse_result	typeref:typename:const char *
error	extern/libgit2/src/patch_generate.h	/^	int error;$/;"	m	struct:git_patch_generated_output	typeref:typename:int
error	extern/libgit2/src/transports/http.c	/^	int error;$/;"	m	struct:__anon0458035d0308	typeref:typename:int	file:
error	extern/libgit2/src/transports/smart.h	/^	char error[GIT_FLEX_ARRAY];$/;"	m	struct:__anoncc6f59690708	typeref:typename:char[]
error	extern/libgit2/tests/checkout/tree.c	/^	int error;$/;"	m	struct:checkout_cancel_at	typeref:typename:int	file:
error	extern/libgit2/tests/clar_libgit2.h	/^	int error;$/;"	m	struct:__anonc7d6e3cc0108	typeref:typename:int
error	extern/libgit2/tests/threads/refdb.c	/^	cl_git_thread_err error;$/;"	m	struct:th_data	typeref:typename:cl_git_thread_err	file:
error_buf	extern/libgit2/src/global.h	/^	git_buf error_buf;$/;"	m	struct:__anonf985f1a40108	typeref:typename:git_buf
error_cb	extern/libgit2/src/transports/local.c	/^	git_transport_message_cb error_cb;$/;"	m	struct:__anonb65cbde80108	typeref:typename:git_transport_message_cb	file:
error_cb	extern/libgit2/src/transports/smart.h	/^	git_transport_message_cb error_cb;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_transport_message_cb
error_code	extern/libgit2/src/errors.h	/^	int error_code;$/;"	m	struct:__anonf6d3dd100108	typeref:typename:int
error_invalid_local_file_uri	extern/libgit2/src/path.c	/^static int error_invalid_local_file_uri(const char *uri)$/;"	f	typeref:typename:int	file:
error_msg	extern/libgit2/src/errors.h	/^	git_error error_msg;$/;"	m	struct:__anonf6d3dd100108	typeref:typename:git_error
error_msg	extern/libgit2/tests/clar.c	/^	const char *error_msg;$/;"	m	struct:clar_error	typeref:typename:const char *	file:
error_msg	extern/libgit2/tests/clar_libgit2.h	/^	char error_msg[4096];$/;"	m	struct:__anonc7d6e3cc0108	typeref:typename:char[4096]
error_null_oid	extern/libgit2/src/odb.c	/^static int error_null_oid(int error, const char *message)$/;"	f	typeref:typename:int	file:
error_offset	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t* error_offset;$/;"	m	struct:xml_parser	typeref:typename:char_t *	file:
error_oom	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* error_oom()$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
error_status	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_parse_status error_status;$/;"	m	struct:xml_parser	typeref:typename:xml_parse_status	file:
error_t	extern/libgit2/src/global.h	/^	git_error error_t;$/;"	m	struct:__anonf985f1a40108	typeref:typename:git_error
error_texts	extern/libgit2/deps/pcre/pcre_compile.c	/^static const char error_texts[] =$/;"	v	typeref:typename:const char[]	file:
error_unmatch	extern/libgit2/examples/ls-files.c	/^	int error_unmatch;$/;"	m	struct:__anonefee04e40108	typeref:typename:int	file:
errors	extern/libgit2/tests/clar.c	/^	struct clar_error *errors;$/;"	m	struct:clar_report	typeref:struct:clar_error *	file:
escape	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        static std::string escape( std::string const& str ) {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:std::string
escape_value	extern/libgit2/src/config_file.c	/^static char *escape_value(const char *ptr)$/;"	f	typeref:typename:char *	file:
escapes	extern/libgit2/deps/pcre/pcre_compile.c	/^static const short int escapes[] = {$/;"	v	typeref:typename:const short int[]	file:
eval_boolean	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool eval_boolean(const xpath_context& c, const xpath_stack& stack)$/;"	f	class:xpath_ast_node	typeref:typename:bool	file:
eval_node_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_node_set_raw eval_node_set(const xpath_context& c, const xpath_stack& stack, nodeset_eva/;"	f	class:xpath_ast_node	typeref:typename:xpath_node_set_raw	file:
eval_number	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		double eval_number(const xpath_context& c, const xpath_stack& stack)$/;"	f	class:xpath_ast_node	typeref:typename:double	file:
eval_once	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static bool eval_once(xpath_node_set::type_t type, nodeset_eval_t eval)$/;"	f	class:xpath_ast_node	typeref:typename:bool	file:
eval_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_string eval_string(const xpath_context& c, const xpath_stack& stack)$/;"	f	class:xpath_ast_node	typeref:typename:xpath_string	file:
eval_string_concat	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_string eval_string_concat(const xpath_context& c, const xpath_stack& stack)$/;"	f	class:xpath_ast_node	typeref:typename:xpath_string	file:
evaluate_boolean	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_query::evaluate_boolean(const xpath_node& n) const$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN bool
evaluate_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node xpath_query::evaluate_node(const xpath_node& n) const$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN xpath_node
evaluate_node_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set xpath_query::evaluate_node_set(const xpath_node& n) const$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN xpath_node_set
evaluate_node_set_prepare	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN impl::xpath_ast_node* evaluate_node_set_prepare(xpath_query_impl* impl)$/;"	f	typeref:typename:PUGI__FN impl::xpath_ast_node *
evaluate_number	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN double xpath_query::evaluate_number(const xpath_node& n) const$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN double
evaluate_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN size_t xpath_query::evaluate_string(char_t* buffer, size_t capacity, const xpath_node&/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN size_t
evaluate_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN string_t xpath_query::evaluate_string(const xpath_node& n) const$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN string_t
exact_match	extern/libgit2/src/describe.c	/^	int exact_match;$/;"	m	struct:git_describe_result	typeref:typename:int	file:
excelTemplate	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTemplate_Impl.h	/^    const unsigned char excelTemplate[8517] = {0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x06, 0x00, 0/;"	v	namespace:OpenXLSX::Impl	typeref:typename:const unsigned char[8517]
excelTemplateSize	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTemplate_Impl.h	/^    const long int excelTemplateSize = 8517;$/;"	v	namespace:OpenXLSX::Impl	typeref:typename:const long int
exec	extern/libgit2/include/git2/rebase.h	/^	const char *exec;$/;"	m	struct:__anona97543260308	typeref:typename:const char *
executable_func	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^   void *executable_func;$/;"	m	union:PRIV::__anon313b80c3080a	typeref:typename:void *	file:
executable_func	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^   void *executable_func;$/;"	m	union:jit_machine_stack_exec::__anon313b80c3070a	typeref:typename:void *	file:
executable_func	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^   void *executable_func;$/;"	m	union:pcre_jit_exec::__anon313b80c3090a	typeref:typename:void *	file:
executable_funcs	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  void *executable_funcs[JIT_NUMBER_OF_COMPILE_MODES];$/;"	m	struct:executable_functions	typeref:typename:void * []	file:
executable_functions	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct executable_functions {$/;"	s	file:
executable_functions	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} executable_functions;$/;"	t	typeref:struct:executable_functions	file:
executable_jit	extern/libgit2/deps/pcre/pcre.h	/^  void *executable_jit;           \/* Contains a pointer to a compiled jit code *\/$/;"	m	struct:pcre16_extra	typeref:typename:void *
executable_jit	extern/libgit2/deps/pcre/pcre.h	/^  void *executable_jit;           \/* Contains a pointer to a compiled jit code *\/$/;"	m	struct:pcre32_extra	typeref:typename:void *
executable_jit	extern/libgit2/deps/pcre/pcre.h	/^  void *executable_jit;           \/* Contains a pointer to a compiled jit code *\/$/;"	m	struct:pcre_extra	typeref:typename:void *
executable_sizes	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_uw executable_sizes[JIT_NUMBER_OF_COMPILE_MODES];$/;"	m	struct:executable_functions	typeref:typename:sljit_uw[]	file:
execute_test	extern/libgit2/tests/checkout/binaryunicode.c	/^static void execute_test(void)$/;"	f	typeref:typename:void	file:
exists_calls	extern/libgit2/tests/odb/backend/backend_helpers.h	/^	int exists_calls;$/;"	m	struct:__anon7ee03db30208	typeref:typename:int
exists_prefix_calls	extern/libgit2/tests/odb/backend/backend_helpers.h	/^	int exists_prefix_calls;$/;"	m	struct:__anon7ee03db30208	typeref:typename:int
exit_on_error	extern/libgit2/tests/clar.c	/^	int exit_on_error;$/;"	m	struct:__anonab24499b0108	typeref:typename:int	file:
expand_id_test_data	extern/libgit2/tests/odb/mixed.c	/^struct expand_id_test_data expand_id_test_data[] = {$/;"	v	typeref:struct:expand_id_test_data[]
expand_id_test_data	extern/libgit2/tests/odb/mixed.c	/^struct expand_id_test_data {$/;"	s	file:
expand_workspace	extern/libgit2/deps/pcre/pcre_compile.c	/^expand_workspace(compile_data *cd)$/;"	f	typeref:typename:int	file:
expect	extern/libgit2/tests/core/path.c	/^	char **expect;$/;"	m	struct:__anon2f3ed9fe0108	typeref:typename:char **	file:
expect	extern/libgit2/tests/diff/tree.c	/^static diff_expects expect;$/;"	v	typeref:typename:diff_expects	file:
expect_advance_into	extern/libgit2/tests/iterator/iterator_helpers.c	/^void expect_advance_into($/;"	f	typeref:typename:void
expect_advance_over	extern/libgit2/tests/iterator/iterator_helpers.c	/^void expect_advance_over($/;"	f	typeref:typename:void
expect_decode_pass	extern/libgit2/tests/buf/percent.c	/^static void expect_decode_pass(const char *expected, const char *encoded)$/;"	f	typeref:typename:void	file:
expect_files_not_renamed	extern/libgit2/tests/diff/rename.c	/^static void expect_files_not_renamed(const char *one, const char *two, uint32_t whitespace_flags/;"	f	typeref:typename:void	file:
expect_files_renamed	extern/libgit2/tests/diff/rename.c	/^static void expect_files_renamed(const char *one, const char *two, uint32_t whitespace_flags)$/;"	f	typeref:typename:void	file:
expect_idx	extern/libgit2/tests/core/path.c	/^	int expect_idx;$/;"	m	struct:__anon2f3ed9fe0108	typeref:typename:int	file:
expect_iterator_items	extern/libgit2/tests/iterator/iterator_helpers.c	/^void expect_iterator_items($/;"	f	typeref:typename:void
expect_pos	extern/libgit2/tests/core/array.c	/^#define expect_pos(/;"	d	file:
expect_quote_pass	extern/libgit2/tests/buf/quote.c	/^static void expect_quote_pass(const char *expected, const char *str)$/;"	f	typeref:typename:void	file:
expect_unquote_fail	extern/libgit2/tests/buf/quote.c	/^static void expect_unquote_fail(const char *quoted)$/;"	f	typeref:typename:void	file:
expect_unquote_pass	extern/libgit2/tests/buf/quote.c	/^static void expect_unquote_pass(const char *expected, const char *quoted)$/;"	f	typeref:typename:void	file:
expectations	extern/libgit2/tests/refs/branches/iterator.c	/^struct expectations {$/;"	s	file:
expected	extern/libgit2/src/status.c	/^	char *expected;$/;"	m	struct:status_file_info	typeref:typename:char *	file:
expected	extern/libgit2/tests/apply/apply_helpers.c	/^	struct merge_index_entry *expected;$/;"	m	struct:iterator_compare_data	typeref:struct:merge_index_entry *	file:
expected	extern/libgit2/tests/attr/attr_expect.h	/^	enum attr_expect_t expected;$/;"	m	struct:attr_expected	typeref:enum:attr_expect_t
expected	extern/libgit2/tests/diff/blob.c	/^static diff_expects expected;$/;"	v	typeref:typename:diff_expects	file:
expected	extern/libgit2/tests/fetchhead/nonetwork.c	/^	int expected;$/;"	m	struct:prefix_count	typeref:typename:int	file:
expected	extern/libgit2/tests/ignore/status.c	/^		int expected;$/;"	m	struct:test_ignore_status__0::__anoncf0ee4500108	typeref:typename:int	file:
expected	extern/libgit2/tests/mailmap/basic.c	/^} expected[] = {$/;"	v	typeref:struct:__anon966719eb0108[]
expected_commit_content	extern/libgit2/tests/rebase/sign.c	/^static const char *expected_commit_content = "tree cd99b26250099fc38d30bfaed7797a7275ed3366\\n\\$/;"	v	typeref:typename:const char *	file:
expected_entry	extern/libgit2/tests/config/memory.c	/^struct expected_entry {$/;"	s	file:
expected_entry	extern/libgit2/tests/object/tree/parse.c	/^} expected_entry;$/;"	t	typeref:struct:__anonc4c32e390108	file:
expected_entry_count	extern/libgit2/tests/status/status_helpers.h	/^	int expected_entry_count;$/;"	m	struct:__anon9cf2f0870108	typeref:typename:int
expected_files	extern/libgit2/tests/status/submodules.c	/^static const char *expected_files[] = {$/;"	v	typeref:typename:const char * []	file:
expected_fixture	extern/libgit2/tests/checkout/crlf.c	/^static git_buf expected_fixture = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
expected_fixture	extern/libgit2/tests/index/crlf.c	/^static git_buf expected_fixture = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
expected_fsyncs	extern/libgit2/tests/pack/packbuilder.c	/^static int expected_fsyncs = 2;$/;"	v	typeref:typename:int	file:
expected_fsyncs	extern/libgit2/tests/pack/packbuilder.c	/^static int expected_fsyncs = 4;$/;"	v	typeref:typename:int	file:
expected_fsyncs_compress	extern/libgit2/tests/refs/create.c	/^static int expected_fsyncs_create = 2, expected_fsyncs_compress = 1;$/;"	v	typeref:typename:int	file:
expected_fsyncs_compress	extern/libgit2/tests/refs/create.c	/^static int expected_fsyncs_create = 4, expected_fsyncs_compress = 2;$/;"	v	typeref:typename:int	file:
expected_fsyncs_create	extern/libgit2/tests/refs/create.c	/^static int expected_fsyncs_create = 2, expected_fsyncs_compress = 1;$/;"	v	typeref:typename:int	file:
expected_fsyncs_create	extern/libgit2/tests/refs/create.c	/^static int expected_fsyncs_create = 4, expected_fsyncs_compress = 2;$/;"	v	typeref:typename:int	file:
expected_id	extern/libgit2/tests/odb/mixed.c	/^	char *expected_id;$/;"	m	struct:expand_id_test_data	typeref:typename:char *	file:
expected_index_0	extern/libgit2/tests/iterator/index.c	/^static const char *expected_index_0[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_1	extern/libgit2/tests/iterator/index.c	/^static const char *expected_index_1[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_ci	extern/libgit2/tests/iterator/index.c	/^static const char *expected_index_ci[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_cs	extern/libgit2/tests/iterator/index.c	/^static const char *expected_index_cs[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_oids_0	extern/libgit2/tests/iterator/index.c	/^static const char *expected_index_oids_0[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_oids_1	extern/libgit2/tests/iterator/index.c	/^static const char* expected_index_oids_1[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_oids_range	extern/libgit2/tests/iterator/index.c	/^static const char *expected_index_oids_range[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_range	extern/libgit2/tests/iterator/index.c	/^static const char *expected_index_range[] = {$/;"	v	typeref:typename:const char * []	file:
expected_matches	extern/libgit2/tests/object/tag/list.c	/^	const size_t expected_matches;$/;"	m	struct:pattern_match_t	typeref:typename:const size_t	file:
expected_oids	extern/libgit2/src/indexer.c	/^	git_oidmap *expected_oids;$/;"	m	struct:git_indexer	typeref:typename:git_oidmap *	file:
expected_patch_text	extern/libgit2/tests/diff/diffiter.c	/^static const char *expected_patch_text[8] = {$/;"	v	typeref:typename:const char * [8]	file:
expected_paths	extern/libgit2/tests/status/status_helpers.h	/^	const char** expected_paths;$/;"	m	struct:__anon9cf2f0870108	typeref:typename:const char **
expected_ref	extern/libgit2/tests/online/push_util.h	/^} expected_ref;$/;"	t	typeref:struct:__anon56a1c92f0308
expected_remote_name	extern/libgit2/tests/refs/branches/remote.c	/^static const char *expected_remote_name = "test";$/;"	v	typeref:typename:const char *	file:
expected_remote_name_length	extern/libgit2/tests/refs/branches/remote.c	/^static int expected_remote_name_length;$/;"	v	typeref:typename:int	file:
expected_results	extern/libgit2/tests/object/tag/list.c	/^	const char* expected_results[MAX_USED_TAGS];$/;"	m	struct:pattern_match_t	typeref:typename:const char * []	file:
expected_state	extern/libgit2/src/patch_parse.c	/^	parse_header_state expected_state;$/;"	m	struct:__anonadbd87d80308	typeref:typename:parse_header_state	file:
expected_status	extern/libgit2/tests/status/submodules.c	/^static unsigned int expected_status[] = {$/;"	v	typeref:typename:unsigned int[]	file:
expected_status	extern/libgit2/tests/transports/smart/packet.c	/^enum expected_status {$/;"	g	file:
expected_statuses	extern/libgit2/tests/status/status_helpers.h	/^	const unsigned int* expected_statuses;$/;"	m	struct:__anon9cf2f0870108	typeref:typename:const unsigned int *
expected_str	extern/libgit2/tests/attr/attr_expect.h	/^	const char *expected_str;$/;"	m	struct:attr_expected	typeref:typename:const char *
expected_str	extern/libgit2/tests/revwalk/simplify.c	/^static const char *expected_str[] = {$/;"	v	typeref:typename:const char * []	file:
expected_tree_0	extern/libgit2/tests/iterator/tree.c	/^const char *expected_tree_0[] = {$/;"	v	typeref:typename:const char * []
expected_tree_1	extern/libgit2/tests/iterator/tree.c	/^const char *expected_tree_1[] = {$/;"	v	typeref:typename:const char * []
expected_tree_2	extern/libgit2/tests/iterator/tree.c	/^const char *expected_tree_2[] = {$/;"	v	typeref:typename:const char * []
expected_tree_3	extern/libgit2/tests/iterator/tree.c	/^const char *expected_tree_3[] = {$/;"	v	typeref:typename:const char * []
expected_tree_4	extern/libgit2/tests/iterator/tree.c	/^const char *expected_tree_4[] = {$/;"	v	typeref:typename:const char * []
expected_tree_ranged_0	extern/libgit2/tests/iterator/tree.c	/^const char *expected_tree_ranged_0[] = {$/;"	v	typeref:typename:const char * []
expected_tree_ranged_1	extern/libgit2/tests/iterator/tree.c	/^const char *expected_tree_ranged_1[] = {$/;"	v	typeref:typename:const char * []
expected_type	extern/libgit2/tests/odb/mixed.c	/^	git_object_t expected_type;$/;"	m	struct:expand_id_test_data	typeref:typename:git_object_t	file:
explicit	extern/libgit2/tests/clar.c	/^	struct clar_explicit *explicit;$/;"	m	struct:__anonab24499b0108	typeref:struct:clar_explicit *	file:
expr	extern/libgit2/tests/clar_libgit2.h	/^	const char *expr;$/;"	m	struct:__anonc7d6e3cc0108	typeref:typename:const char *
extension_size	extern/libgit2/src/index.c	/^	uint32_t extension_size;$/;"	m	struct:index_extension	typeref:typename:uint32_t	file:
external_flags	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 external_flags;       \/* External flag bits to be set *\/$/;"	m	struct:compile_data	typeref:typename:pcre_uint32
external_options	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 external_options;     \/* External (initial) options *\/$/;"	m	struct:compile_data	typeref:typename:pcre_uint32
extra	extern/libgit2/deps/zlib/inflate.h	/^    unsigned extra;             \/* extra bits needed *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
extra	extern/libgit2/deps/zlib/zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s	typeref:typename:Bytef *
extra	extern/libgit2/src/win32/w32_stack.c	/^		char extra[MY_MAX_FILENAME + 1];$/;"	m	struct:git_win32__stack_format::__anon991580610108	typeref:typename:char[]	file:
extra	extern/libgit2/tests/core/oidmap.c	/^	size_t extra;$/;"	m	struct:__anon5111880b0108	typeref:typename:size_t	file:
extra_base	extern/libgit2/deps/zlib/trees.c	/^    int     extra_base;          \/* base index for extra_bits *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:int	file:
extra_bits	extern/libgit2/deps/zlib/trees.c	/^    const intf *extra_bits;      \/* extra bits for each code or NULL *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:const intf *	file:
extra_blbits	extern/libgit2/deps/zlib/trees.c	/^local const int extra_blbits[BL_CODES]\/* extra bits for each bit length code *\/$/;"	v	typeref:typename:local const int[]
extra_buffers	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_extra_buffer* extra_buffers;$/;"	m	struct:xml_document_struct	typeref:typename:xml_extra_buffer *	file:
extra_dbits	extern/libgit2/deps/zlib/trees.c	/^local const int extra_dbits[D_CODES] \/* extra bits for each distance code *\/$/;"	v	typeref:typename:local const int[]
extra_lbits	extern/libgit2/deps/zlib/trees.c	/^local const int extra_lbits[LENGTH_CODES] \/* extra bits for each length code *\/$/;"	v	typeref:typename:local const int[]
extra_len	extern/libgit2/deps/zlib/zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s	typeref:typename:uInt
extra_max	extern/libgit2/deps/zlib/zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s	typeref:typename:uInt
extract_curly_braces_content	extern/libgit2/src/revparse.c	/^static int extract_curly_braces_content(git_buf *buf, const char *spec, size_t *pos)$/;"	f	typeref:typename:int	file:
extract_how_many	extern/libgit2/src/revparse.c	/^static int extract_how_many(int *n, const char *spec, size_t *pos)$/;"	f	typeref:typename:int	file:
extract_path	extern/libgit2/src/revparse.c	/^static int extract_path(git_buf *buf, const char *spec, size_t *pos)$/;"	f	typeref:typename:int	file:
extract_trailer_block	extern/libgit2/src/trailer.c	/^static char *extract_trailer_block(const char *message, size_t* len)$/;"	f	typeref:typename:char *	file:
extract_trimmed	extern/libgit2/src/signature.c	/^static char *extract_trimmed(const char *ptr, size_t len)$/;"	f	typeref:typename:char *	file:
f	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		union { float f; UI i; } u;$/;"	m	union:gen_nan::__anonfceed08a060a	typeref:typename:float	file:
f	extern/libgit2/src/crlf.c	/^	git_filter f;$/;"	m	struct:crlf_filter	typeref:typename:git_filter	file:
f	extern/libgit2/src/win32/dir.h	/^	WIN32_FIND_DATAW f;$/;"	m	struct:__anon949726940108	typeref:typename:WIN32_FIND_DATAW
f	lr.hpp	/^  F f;$/;"	m	struct:lr::fmap	typeref:typename:F
f	oset.cpp	/^  F f;$/;"	m	struct:oset	typeref:typename:F	file:
fAutoDetect	extern/libgit2/deps/winhttp/winhttp.h	/^    BOOL   fAutoDetect;$/;"	m	struct:__anonb531ffc20508	typeref:typename:BOOL
fAutoLogonIfChallenged	extern/libgit2/deps/winhttp/winhttp.h	/^    BOOL fAutoLogonIfChallenged;$/;"	m	struct:__anonb531ffc20608	typeref:typename:BOOL
fail_certificate_check	extern/libgit2/tests/online/clone.c	/^static int fail_certificate_check(git_cert *cert, int valid, const char *host, void *payload)$/;"	f	typeref:typename:int	file:
failedString	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            static const char* failedString() { return "not ok"; }$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:const char *
failing_commit_cases	extern/libgit2/tests/commit/parse.c	/^static char *failing_commit_cases[] = {$/;"	v	typeref:typename:char * []	file:
failing_header_cases	extern/libgit2/tests/commit/parse.c	/^static parse_test_case failing_header_cases[] = {$/;"	v	typeref:typename:parse_test_case[]	file:
failing_signature_cases	extern/libgit2/tests/commit/parse.c	/^failing_signature_test_case failing_signature_cases[] = {$/;"	v	typeref:typename:failing_signature_test_case[]
failing_signature_test_case	extern/libgit2/tests/commit/parse.c	/^} failing_signature_test_case;$/;"	t	typeref:struct:__anond44356cc0308	file:
failures	extern/libgit2/src/pathspec.h	/^	git_pathspec_string_array_t failures;$/;"	m	struct:git_pathspec_match_list	typeref:typename:git_pathspec_string_array_t
fake_backend	extern/libgit2/tests/odb/backend/backend_helpers.h	/^} fake_backend;$/;"	t	typeref:struct:__anon7ee03db30208
fake_backend	extern/libgit2/tests/odb/sorting.c	/^} fake_backend;$/;"	t	typeref:struct:__anon89f64fa30108	file:
fake_backend__exists	extern/libgit2/tests/odb/backend/backend_helpers.c	/^static int fake_backend__exists(git_odb_backend *backend, const git_oid *oid)$/;"	f	typeref:typename:int	file:
fake_backend__exists_prefix	extern/libgit2/tests/odb/backend/backend_helpers.c	/^static int fake_backend__exists_prefix($/;"	f	typeref:typename:int	file:
fake_backend__free	extern/libgit2/tests/odb/backend/backend_helpers.c	/^static void fake_backend__free(git_odb_backend *_backend)$/;"	f	typeref:typename:void	file:
fake_backend__read	extern/libgit2/tests/odb/backend/backend_helpers.c	/^static int fake_backend__read($/;"	f	typeref:typename:int	file:
fake_backend__read_header	extern/libgit2/tests/odb/backend/backend_helpers.c	/^static int fake_backend__read_header($/;"	f	typeref:typename:int	file:
fake_backend__read_prefix	extern/libgit2/tests/odb/backend/backend_helpers.c	/^static int fake_backend__read_prefix($/;"	f	typeref:typename:int	file:
fake_object	extern/libgit2/tests/odb/backend/backend_helpers.h	/^} fake_object;$/;"	t	typeref:struct:__anon7ee03db30108
fake_remote	extern/libgit2/tests/refs/branches/delete.c	/^static git_reference *fake_remote;$/;"	v	typeref:typename:git_reference *	file:
fake_remote	extern/libgit2/tests/refs/branches/iterator.c	/^static git_reference *fake_remote;$/;"	v	typeref:typename:git_reference *	file:
fake_remote	extern/libgit2/tests/refs/foreachglob.c	/^static git_reference *fake_remote;$/;"	v	typeref:typename:git_reference *	file:
fake_submod_cb	extern/libgit2/tests/submodule/nosubs.c	/^static int fake_submod_cb(git_submodule *sm, const char *n, void *p)$/;"	f	typeref:typename:int	file:
fake_wstream	extern/libgit2/src/odb.c	/^} fake_wstream;$/;"	t	typeref:struct:__anonfbf77e230208	file:
fake_wstream__free	extern/libgit2/src/odb.c	/^static void fake_wstream__free(git_odb_stream *_stream)$/;"	f	typeref:typename:void	file:
fake_wstream__fwrite	extern/libgit2/src/odb.c	/^static int fake_wstream__fwrite(git_odb_stream *_stream, const git_oid *oid)$/;"	f	typeref:typename:int	file:
fake_wstream__write	extern/libgit2/src/odb.c	/^static int fake_wstream__write(git_odb_stream *_stream, const char *data, size_t len)$/;"	f	typeref:typename:int	file:
fall_back_to_classic_diff	extern/libgit2/src/xdiff/xhistogram.c	/^static int fall_back_to_classic_diff(struct histindex *index,$/;"	f	typeref:typename:int	file:
fall_back_to_classic_diff	extern/libgit2/src/xdiff/xpatience.c	/^static int fall_back_to_classic_diff(struct hashmap *map,$/;"	f	typeref:typename:int	file:
fallback	extern/libgit2/src/repository.c	/^	git_repository_item_t fallback;$/;"	m	struct:__anon05b1158e0108	typeref:typename:git_repository_item_t	file:
fallback_to_id	extern/libgit2/src/describe.c	/^	int fallback_to_id;$/;"	m	struct:git_describe_result	typeref:typename:int	file:
false	extern/libgit2/deps/ntlmclient/compat.h	/^#  define false /;"	d
false	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define false /;"	d	file:
false	extern/libgit2/src/cc-compat.h	/^#		define false /;"	d
fanout	extern/libgit2/src/indexer.c	/^	unsigned int fanout[256];$/;"	m	struct:git_indexer	typeref:typename:unsigned int[256]	file:
fast_fail_end_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 fast_fail_end_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
fast_fail_start_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 fast_fail_start_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
fast_forward_bc_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  pcre_uchar *fast_forward_bc_ptr;$/;"	m	struct:compiler_common	typeref:typename:pcre_uchar *	file:
fast_forward_first_char	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void fast_forward_first_char(compiler_common *common, pcre_uchar first_char,/;"	f	typeref:typename:SLJIT_INLINE void	file:
fast_forward_first_char2	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void fast_forward_first_char2(compiler_common *common, pcre_uchar char1, pcre_uchar char2/;"	f	typeref:typename:void	file:
fast_forward_first_char2_sse2	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void fast_forward_first_char2_sse2(compiler_common *common, pcre_uchar char1/;"	f	typeref:typename:SLJIT_INLINE void	file:
fast_forward_first_n_chars	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE BOOL fast_forward_first_n_chars(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE BOOL	file:
fast_forward_newline	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void fast_forward_newline(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
fast_forward_start_bits	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void fast_forward_start_bits(compiler_common *common, const sljit_u8 *start_/;"	f	typeref:typename:SLJIT_INLINE void	file:
fatal	extern/libgit2/examples/common.c	/^void fatal(const char *message, const char *extra)$/;"	f	typeref:typename:void
favor	extern/libgit2/include/git2/merge.h	/^	git_merge_file_favor_t favor;$/;"	m	struct:__anon5e9a43240508	typeref:typename:git_merge_file_favor_t
favor	extern/libgit2/src/merge_driver.h	/^	git_merge_file_favor_t favor;$/;"	m	struct:git_merge_driver__builtin	typeref:typename:git_merge_file_favor_t
favor	extern/libgit2/src/xdiff/xdiff.h	/^	int favor;$/;"	m	struct:s_xmparam	typeref:typename:int
fbp_data	extern/libgit2/src/submodule.c	/^} fbp_data;$/;"	t	typeref:struct:__anon952effbe0308	file:
fbuf	extern/libgit2/src/blob.c	/^	git_filebuf fbuf;$/;"	m	struct:__anon5d2cee0d0108	typeref:typename:git_filebuf	file:
fbuf	extern/libgit2/src/odb_loose.c	/^	git_filebuf fbuf;$/;"	m	struct:__anon81c02f840208	typeref:typename:git_filebuf	file:
fc	extern/libgit2/deps/pcre/pcre_exec.c	/^#define fc /;"	d	file:
fc	extern/libgit2/deps/zlib/deflate.h	/^    } fc;$/;"	m	struct:ct_data_s	typeref:union:ct_data_s::__anonfe3a00cc010a
fcc	extern/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uint8 *fcc;         \/* Points to case-flipping table *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uint8 *
fcc	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *fcc;            \/* Points to case-flipping table *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uint8 *
fcc	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  const sljit_u8 *fcc;$/;"	m	struct:compiler_common	typeref:typename:const sljit_u8 *	file:
fcc_offset	extern/libgit2/deps/pcre/pcre_internal.h	/^#define fcc_offset /;"	d
fd	extern/libgit2/deps/zlib/gzguts.h	/^    int fd;                 \/* file descriptor *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:int
fd	extern/libgit2/src/checkout.c	/^	int fd;$/;"	m	struct:checkout_stream	typeref:typename:int	file:
fd	extern/libgit2/src/filebuf.h	/^	git_file fd;$/;"	m	struct:git_filebuf	typeref:typename:git_file
fd	extern/libgit2/src/mwindow.h	/^	int fd;$/;"	m	struct:git_mwindow_file	typeref:typename:int
fd	extern/libgit2/tests/core/ftruncate.c	/^static int fd = -1;$/;"	v	typeref:typename:int	file:
fd_is_open	extern/libgit2/src/filebuf.h	/^	bool fd_is_open;$/;"	m	struct:git_filebuf	typeref:typename:bool
fdopen	extern/libgit2/deps/zlib/zutil.h	/^#        define fdopen(/;"	d
fdopen	extern/libgit2/deps/zlib/zutil.h	/^#    define fdopen(/;"	d
fdopen	extern/libgit2/deps/zlib/zutil.h	/^#  define fdopen(/;"	d
feed_indexer	extern/libgit2/tests/pack/packbuilder.c	/^static int feed_indexer(void *ptr, size_t len, void *payload)$/;"	f	typeref:typename:int	file:
fetch	extern/libgit2/src/remote.c	/^	int fetch;$/;"	m	struct:refspec_cb_data	typeref:typename:int	file:
fetch_opts	extern/libgit2/include/git2/clone.h	/^	git_fetch_options fetch_opts;$/;"	m	struct:git_clone_options	typeref:typename:git_fetch_options
fetch_opts	extern/libgit2/include/git2/submodule.h	/^	git_fetch_options fetch_opts;$/;"	m	struct:git_submodule_update_options	typeref:typename:git_fetch_options
fetch_progress	extern/libgit2/examples/clone.c	/^	git_indexer_progress fetch_progress;$/;"	m	struct:progress_data	typeref:typename:git_indexer_progress	file:
fetch_progress	extern/libgit2/examples/clone.c	/^static int fetch_progress(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
fetch_progress	extern/libgit2/tests/online/clone.c	/^static int fetch_progress(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
fetch_recurse	extern/libgit2/src/submodule.h	/^	git_submodule_recurse_t fetch_recurse;$/;"	m	struct:git_submodule	typeref:typename:git_submodule_recurse_t
fetch_recurse_default	extern/libgit2/src/submodule.h	/^	git_submodule_recurse_t fetch_recurse_default;$/;"	m	struct:git_submodule	typeref:typename:git_submodule_recurse_t
fetch_refspecs	extern/libgit2/tests/network/remote/remotes.c	/^static const char *fetch_refspecs[] = {$/;"	v	typeref:typename:const char * []	file:
fetchhead_ref_cb	extern/libgit2/tests/fetchhead/nonetwork.c	/^static int fetchhead_ref_cb(const char *name, const char *url,$/;"	f	typeref:typename:int	file:
fetchhead_ref_cb_data	extern/libgit2/tests/fetchhead/nonetwork.c	/^} fetchhead_ref_cb_data; $/;"	t	typeref:struct:__anon6544ff4b0108	file:
fetchhead_ref_parse	extern/libgit2/src/fetchhead.c	/^static int fetchhead_ref_parse($/;"	f	typeref:typename:int	file:
fetchhead_ref_write	extern/libgit2/src/fetchhead.c	/^static int fetchhead_ref_write($/;"	f	typeref:typename:int	file:
fetchhead_test_clone	extern/libgit2/tests/online/fetchhead.c	/^static void fetchhead_test_clone(void)$/;"	f	typeref:typename:void	file:
fetchhead_test_fetch	extern/libgit2/tests/online/fetchhead.c	/^static void fetchhead_test_fetch(const char *fetchspec, const char *expected_fetchhead)$/;"	f	typeref:typename:void	file:
fetchhead_vector	extern/libgit2/tests/fetchhead/nonetwork.c	/^	git_vector *fetchhead_vector;$/;"	m	struct:__anon6544ff4b0108	typeref:typename:git_vector *	file:
fetchspec	extern/libgit2/include/git2/remote.h	/^	const char *fetchspec;$/;"	m	struct:git_remote_create_options	typeref:typename:const char *
ff_newline_shortcut	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *ff_newline_shortcut;$/;"	m	struct:compiler_common	typeref:struct:sljit_label *	file:
fi	extern/libgit2/deps/pcre/pcre_exec.c	/^#defin/;"	d	file:
field_data	extern/libgit2/deps/http-parser/http_parser.h	/^  } field_data[UF_MAX];$/;"	m	struct:http_parser_url	typeref:struct:http_parser_url::__anonb6e7d14c0108[]
field_set	extern/libgit2/deps/http-parser/http_parser.h	/^  uint16_t field_set;           \/* Bitmask of (1 << UF_*) values *\/$/;"	m	struct:http_parser_url	typeref:typename:uint16_t
file	extern/NamedType/catch.hpp	/^        char const* file;$/;"	m	struct:Catch::SourceLineInfo	typeref:typename:char const *
file	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        void* file;$/;"	m	class:pugi::xml_writer_file	typeref:typename:void *
file	extern/OpenXLSX/tests/c++/Test01_DocumentCreation.cpp	/^std::string file = ".\/TestDocumentCreation.xlsx";$/;"	v	typeref:typename:std::string
file	extern/OpenXLSX/tests/c++/Test02_DocumentProperties.cpp	/^std::string file = ".\/TestDocumentProperties.xlsx";$/;"	v	typeref:typename:std::string
file	extern/OpenXLSX/tests/catch/catch.hpp	/^        char const* file;$/;"	m	struct:Catch::SourceLineInfo	typeref:typename:char const *
file	extern/libgit2/src/attr_file.h	/^	git_attr_file *file[GIT_ATTR_FILE_NUM_SOURCES];$/;"	m	struct:git_attr_file_entry	typeref:typename:git_attr_file * []
file	extern/libgit2/src/config_file.c	/^	config_file *file;$/;"	m	struct:__anon041cc2a30208	typeref:typename:config_file *	file:
file	extern/libgit2/src/config_file.c	/^	config_file file;$/;"	m	struct:__anon041cc2a30108	typeref:typename:config_file	file:
file	extern/libgit2/src/diff_file.h	/^	git_diff_file *file;$/;"	m	struct:__anon2493e46b0108	typeref:typename:git_diff_file *
file	extern/libgit2/src/diff_tform.c	/^	git_diff_file *file;$/;"	m	struct:__anone5feb9ce0108	typeref:typename:git_diff_file *	file:
file	extern/libgit2/src/index.h	/^	git_filebuf file;$/;"	m	struct:__anon2188762b0108	typeref:typename:git_filebuf
file	extern/libgit2/src/path.c	/^	const char *file;$/;"	m	struct:__anon7d10f0bb0108	typeref:typename:const char *	file:
file	extern/libgit2/tests/checkout/index.c	/^	const char *file;$/;"	m	struct:notify_data	typeref:typename:const char *	file:
file	extern/libgit2/tests/clar.c	/^	const char *file;$/;"	m	struct:clar_error	typeref:typename:const char *	file:
file	extern/libgit2/tests/clar_libgit2.h	/^	const char *file;$/;"	m	struct:__anonc7d6e3cc0108	typeref:typename:const char *
file	extern/libgit2/tests/object/raw/write.c	/^    char *file;   \/* object store filename                     *\/$/;"	m	struct:object_data	typeref:typename:char *	file:
file	extern/libgit2/tests/odb/alternates.c	/^static git_filebuf file;$/;"	v	typeref:typename:git_filebuf	file:
file	extern/libgit2/tests/odb/loose_data.h	/^    char          *file;   \/* object store filename                     *\/$/;"	m	struct:object_data	typeref:typename:char *
file	extern/libgit2/tests/status/status_helpers.h	/^	const char *file;$/;"	m	struct:__anon9cf2f0870108	typeref:typename:const char *
file1	extern/libgit2/src/xdiff/xdiff.h	/^	const char *file1;	\/* label for mf1 *\/$/;"	m	struct:s_xmparam	typeref:typename:const char *
file1	extern/libgit2/src/xdiff/xpatience.c	/^	mmfile_t *file1, *file2;$/;"	m	struct:hashmap	typeref:typename:mmfile_t *	file:
file2	extern/libgit2/src/xdiff/xdiff.h	/^	const char *file2;	\/* label for mf2 *\/$/;"	m	struct:s_xmparam	typeref:typename:const char *
file2	extern/libgit2/src/xdiff/xpatience.c	/^	mmfile_t *file1, *file2;$/;"	m	struct:hashmap	typeref:typename:mmfile_t **	file:
file_cb	extern/libgit2/src/diff.c	/^static int file_cb($/;"	f	typeref:typename:int	file:
file_cb	extern/libgit2/src/patch_generate.h	/^	git_diff_file_cb file_cb;$/;"	m	struct:git_patch_generated_output	typeref:typename:git_diff_file_cb
file_cb	extern/libgit2/tests/diff/binary.c	/^static int file_cb($/;"	f	typeref:typename:int	file:
file_cb	extern/libgit2/tests/diff/parse.c	/^static int file_cb(const git_diff_delta *delta, float progress, void *payload)$/;"	f	typeref:typename:int	file:
file_count	extern/libgit2/examples/ls-files.c	/^	size_t file_count;$/;"	m	struct:__anonefee04e40108	typeref:typename:size_t	file:
file_crc32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint file_crc32;$/;"	m	struct:__anon09af45a71808	typeref:typename:mz_uint
file_favor	extern/libgit2/include/git2/merge.h	/^	git_merge_file_favor_t file_favor;$/;"	m	struct:__anon5e9a43240708	typeref:typename:git_merge_file_favor_t
file_flags	extern/libgit2/include/git2/merge.h	/^	git_merge_file_flag_t file_flags;$/;"	m	struct:__anon5e9a43240708	typeref:typename:git_merge_file_flag_t
file_mode	extern/libgit2/include/git2/checkout.h	/^	unsigned int file_mode; \/**< default is 0644 or 0755 as dictated by blob *\/$/;"	m	struct:git_checkout_options	typeref:typename:unsigned int
file_open_flags	extern/libgit2/include/git2/checkout.h	/^	int file_open_flags;    \/**< default is O_CREAT | O_TRUNC | O_WRONLY *\/$/;"	m	struct:git_checkout_options	typeref:typename:int
file_opts	extern/libgit2/src/merge_driver.h	/^	const git_merge_file_options *file_opts;$/;"	m	struct:git_merge_driver_source	typeref:typename:const git_merge_file_options *
file_path_buf	extern/libgit2/tests/network/remote/local.c	/^static git_buf file_path_buf = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
file_size	extern/libgit2/include/git2/index.h	/^	uint32_t file_size;$/;"	m	struct:git_index_entry	typeref:typename:uint32_t
file_size	extern/libgit2/src/index.c	/^	uint32_t file_size;$/;"	m	struct:entry_long	typeref:typename:uint32_t	file:
file_size	extern/libgit2/src/index.c	/^	uint32_t file_size;$/;"	m	struct:entry_short	typeref:typename:uint32_t	file:
file_size	extern/libgit2/tests/index/tests.c	/^   git_off_t file_size;$/;"	m	struct:test_entry	typeref:typename:git_off_t	file:
file_stat	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_zip_archive_file_stat file_stat;$/;"	m	struct:__anon09af45a71808	typeref:typename:mz_zip_archive_file_stat
file_status	extern/libgit2/tests/diff/diff_helpers.h	/^	int file_status[11]; \/* indexed by git_delta_t value *\/$/;"	m	struct:__anona765b0910108	typeref:typename:int[11]
file_url	extern/libgit2/tests/clone/local.c	/^static int file_url(git_buf *buf, const char *host, const char *path)$/;"	f	typeref:typename:int	file:
filebuf_flags	extern/libgit2/src/odb_loose.c	/^static int filebuf_flags(loose_backend *backend)$/;"	f	typeref:typename:int	file:
filelen	extern/libgit2/src/path.c	/^	size_t filelen;$/;"	m	struct:__anon7d10f0bb0108	typeref:typename:size_t	file:
filemode	extern/libgit2/include/git2/tree.h	/^	git_filemode_t filemode;$/;"	m	struct:__anon97f705e40308	typeref:typename:git_filemode_t
filemode	extern/libgit2/src/filter.c	/^	uint16_t        filemode; \/* zero if unknown *\/$/;"	m	struct:git_filter_source	typeref:typename:uint16_t	file:
filemode_count	extern/libgit2/tests/status/worktree.c	/^static const int filemode_count = 8;$/;"	v	typeref:typename:const int	file:
filemode_paths	extern/libgit2/tests/status/worktree.c	/^static const char *filemode_paths[] = {$/;"	v	typeref:typename:const char * []	file:
filemode_statuses	extern/libgit2/tests/status/worktree.c	/^static unsigned int filemode_statuses[] = {$/;"	v	typeref:typename:unsigned int[]	file:
filename	extern/libgit2/src/tree.c	/^	const char *filename;$/;"	m	struct:tree_key_search	typeref:typename:const char *	file:
filename	extern/libgit2/src/tree.h	/^	const char *filename;$/;"	m	struct:git_tree_entry	typeref:typename:const char *
filename	extern/libgit2/tests/checkout/tree.c	/^	const char *filename;$/;"	m	struct:checkout_cancel_at	typeref:typename:const char *	file:
filename	extern/libgit2/tests/clar.c	/^	const char *filename;$/;"	m	struct:clar_summary	typeref:typename:const char *	file:
filename	extern/libgit2/tests/clar_libgit2.c	/^	const char *filename;$/;"	m	struct:__anonc7d6e3c70108	typeref:typename:const char *	file:
filename	extern/libgit2/tests/core/ftruncate.c	/^static const char *filename = "core_ftruncate.txt";$/;"	v	typeref:typename:const char *	file:
filename	extern/libgit2/tests/object/tree/parse.c	/^	const char *filename;$/;"	m	struct:__anonc4c32e390108	typeref:typename:const char *	file:
filename	extern/libgit2/tests/object/tree/write.c	/^		const char *filename;$/;"	m	struct:test_object_tree_write__sorted_subtrees::__anon06a03a090108	typeref:typename:const char *	file:
filename	extern/libgit2/tests/object/tree/write.c	/^	const char *filename;$/;"	m	struct:__anon06a03a090208	typeref:typename:const char *	file:
filename_len	extern/libgit2/src/tree.c	/^	uint16_t filename_len;$/;"	m	struct:tree_key_search	typeref:typename:uint16_t	file:
filename_len	extern/libgit2/src/tree.h	/^	uint16_t filename_len;$/;"	m	struct:git_tree_entry	typeref:typename:uint16_t
filename_len	extern/libgit2/tests/clar_libgit2.c	/^	size_t filename_len;$/;"	m	struct:__anonc7d6e3c70108	typeref:typename:size_t	file:
filename_to_oid	extern/libgit2/src/odb_loose.c	/^GIT_INLINE(int) filename_to_oid(git_oid *oid, const char *ptr)$/;"	f	typeref:typename:int
filepath	extern/libgit2/tests/odb/alternates.c	/^static git_buf destpath, filepath;$/;"	v	typeref:typename:git_buf	file:
files	extern/libgit2/examples/ls-files.c	/^	char *files[1024];$/;"	m	struct:__anonefee04e40108	typeref:typename:char * [1024]	file:
files	extern/libgit2/src/attr.c	/^	git_vector *files;$/;"	m	struct:__anon5b6b8b690208	typeref:typename:git_vector *	file:
files	extern/libgit2/src/attrcache.h	/^	git_strmap *files;	 \/* hash path to git_attr_cache_entry records *\/$/;"	m	struct:__anon5aa68d020108	typeref:typename:git_strmap *
files	extern/libgit2/tests/diff/diff_helpers.h	/^	int files;$/;"	m	struct:__anona765b0910108	typeref:typename:int
files	extern/libgit2/tests/object/tree/walk.c	/^	int files;$/;"	m	struct:treewalk_skip_data	typeref:typename:int	file:
files_are_equal	extern/libgit2/tests/index/tests.c	/^static void files_are_equal(const char *a, const char *b)$/;"	f	typeref:typename:void	file:
files_binary	extern/libgit2/tests/diff/diff_helpers.h	/^	int files_binary;$/;"	m	struct:__anona765b0910108	typeref:typename:int
files_changed	extern/libgit2/src/diff_stats.c	/^	size_t files_changed;$/;"	m	struct:git_diff_stats	typeref:typename:size_t	file:
filestats	extern/libgit2/src/diff_stats.c	/^	diff_file_stats *filestats;$/;"	m	struct:git_diff_stats	typeref:typename:diff_file_stats *	file:
filesystem_iterator	extern/libgit2/src/iterator.c	/^} filesystem_iterator;$/;"	t	typeref:struct:__anonb487a9b80808	file:
filesystem_iterator_advance	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_advance($/;"	f	typeref:typename:int	file:
filesystem_iterator_advance_into	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_advance_into($/;"	f	typeref:typename:int	file:
filesystem_iterator_advance_over	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_advance_over($/;"	f	typeref:typename:int	file:
filesystem_iterator_clear	extern/libgit2/src/iterator.c	/^static void filesystem_iterator_clear(filesystem_iterator *iter)$/;"	f	typeref:typename:void	file:
filesystem_iterator_current	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_current($/;"	f	typeref:typename:int	file:
filesystem_iterator_current_entry	extern/libgit2/src/iterator.c	/^GIT_INLINE(filesystem_iterator_entry *) filesystem_iterator_current_entry($/;"	f	typeref:typename:filesystem_iterator_entry *
filesystem_iterator_current_frame	extern/libgit2/src/iterator.c	/^GIT_INLINE(filesystem_iterator_frame *) filesystem_iterator_current_frame($/;"	f	typeref:typename:filesystem_iterator_frame *
filesystem_iterator_current_is_ignored	extern/libgit2/src/iterator.c	/^GIT_INLINE(bool) filesystem_iterator_current_is_ignored($/;"	f	typeref:typename:bool
filesystem_iterator_entry	extern/libgit2/src/iterator.c	/^} filesystem_iterator_entry;$/;"	t	typeref:struct:__anonb487a9b80608	file:
filesystem_iterator_entry_cmp	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_entry_cmp(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
filesystem_iterator_entry_cmp_icase	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_entry_cmp_icase(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
filesystem_iterator_entry_hash	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_entry_hash($/;"	f	typeref:typename:int	file:
filesystem_iterator_entry_init	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_entry_init($/;"	f	typeref:typename:int	file:
filesystem_iterator_examine_path	extern/libgit2/src/iterator.c	/^GIT_INLINE(bool) filesystem_iterator_examine_path($/;"	f	typeref:typename:bool
filesystem_iterator_frame	extern/libgit2/src/iterator.c	/^} filesystem_iterator_frame;$/;"	t	typeref:struct:__anonb487a9b80708	file:
filesystem_iterator_frame_pop	extern/libgit2/src/iterator.c	/^GIT_INLINE(void) filesystem_iterator_frame_pop(filesystem_iterator *iter)$/;"	f	typeref:typename:void
filesystem_iterator_frame_pop_ignores	extern/libgit2/src/iterator.c	/^static void filesystem_iterator_frame_pop_ignores($/;"	f	typeref:typename:void	file:
filesystem_iterator_frame_push	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_frame_push($/;"	f	typeref:typename:int	file:
filesystem_iterator_frame_push_ignores	extern/libgit2/src/iterator.c	/^static void filesystem_iterator_frame_push_ignores($/;"	f	typeref:typename:void	file:
filesystem_iterator_free	extern/libgit2/src/iterator.c	/^static void filesystem_iterator_free(git_iterator *i)$/;"	f	typeref:typename:void	file:
filesystem_iterator_init	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_init(filesystem_iterator *iter)$/;"	f	typeref:typename:int	file:
filesystem_iterator_is_dir	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_is_dir($/;"	f	typeref:typename:int	file:
filesystem_iterator_is_dot_git	extern/libgit2/src/iterator.c	/^GIT_INLINE(bool) filesystem_iterator_is_dot_git($/;"	f	typeref:typename:bool
filesystem_iterator_is_submodule	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_is_submodule($/;"	f	typeref:typename:int	file:
filesystem_iterator_parent_frame	extern/libgit2/src/iterator.c	/^GIT_INLINE(filesystem_iterator_frame *) filesystem_iterator_parent_frame($/;"	f	typeref:typename:filesystem_iterator_frame *
filesystem_iterator_reset	extern/libgit2/src/iterator.c	/^static int filesystem_iterator_reset(git_iterator *i)$/;"	f	typeref:typename:int	file:
filesystem_iterator_set_current	extern/libgit2/src/iterator.c	/^static void filesystem_iterator_set_current($/;"	f	typeref:typename:void	file:
filesystem_iterator_update_ignored	extern/libgit2/src/iterator.c	/^static void filesystem_iterator_update_ignored(filesystem_iterator *iter)$/;"	f	typeref:typename:void	file:
fill_conflict_hunk	extern/libgit2/src/xdiff/xmerge.c	/^static int fill_conflict_hunk(size_t *out, xdfenv_t *xe1, const char *name1,$/;"	f	typeref:typename:int	file:
fill_hashmap	extern/libgit2/src/xdiff/xpatience.c	/^static int fill_hashmap(mmfile_t *file1, mmfile_t *file2,$/;"	f	typeref:typename:int	file:
fill_index_wth_head_entries	extern/libgit2/tests/status/worktree_init.c	/^static void fill_index_wth_head_entries(git_repository *repo, git_index *index)$/;"	f	typeref:typename:void	file:
fill_origin_blob	extern/libgit2/src/blame_git.c	/^static void fill_origin_blob(git_blame__origin *o, mmfile_t *file)$/;"	f	typeref:typename:void	file:
fill_window	extern/libgit2/deps/zlib/deflate.c	/^local void fill_window(s)$/;"	f
filled	extern/libgit2/src/pack-objects.h	/^	    filled:1;$/;"	m	struct:git_pobject	typeref:typename:int:1
filter	extern/libgit2/src/filter.c	/^	git_filter *filter;$/;"	m	struct:__anon209df0b40108	typeref:typename:git_filter *	file:
filter	extern/libgit2/src/filter.c	/^	git_filter *filter;$/;"	m	struct:__anon209df0b40208	typeref:typename:git_filter *	file:
filter	extern/libgit2/src/filter.c	/^	git_filter *filter;$/;"	m	struct:proxy_stream	typeref:typename:git_filter *	file:
filter	extern/libgit2/tests/clar.c	/^	const char *filter;$/;"	m	struct:clar_explicit	typeref:typename:const char *	file:
filter_all	extern/libgit2/tests/diff/notify.c	/^static int filter_all($/;"	f	typeref:typename:int	file:
filter_def_filter_key_check	extern/libgit2/src/filter.c	/^static int filter_def_filter_key_check(const void *key, const void *fdef)$/;"	f	typeref:typename:int	file:
filter_def_name_key_check	extern/libgit2/src/filter.c	/^static int filter_def_name_key_check(const void *key, const void *fdef)$/;"	f	typeref:typename:int	file:
filter_def_priority_cmp	extern/libgit2/src/filter.c	/^static int filter_def_priority_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
filter_def_scan_attrs	extern/libgit2/src/filter.c	/^static int filter_def_scan_attrs($/;"	f	typeref:typename:int	file:
filter_def_set_attrs	extern/libgit2/src/filter.c	/^static void filter_def_set_attrs(git_filter_def *fdef)$/;"	f	typeref:typename:void	file:
filter_for	extern/libgit2/tests/filter/query.c	/^static int filter_for(const char *filename, const char *filter)$/;"	f	typeref:typename:int	file:
filter_initialize	extern/libgit2/src/filter.c	/^static int filter_initialize(git_filter_def *fdef)$/;"	f	typeref:typename:int	file:
filter_list_check_attributes	extern/libgit2/src/filter.c	/^static int filter_list_check_attributes($/;"	f	typeref:typename:int	file:
filter_list_new	extern/libgit2/src/filter.c	/^static int filter_list_new($/;"	f	typeref:typename:int	file:
filter_name	extern/libgit2/src/filter.c	/^	char *filter_name;$/;"	m	struct:__anon209df0b40208	typeref:typename:char *	file:
filter_name	extern/libgit2/src/filter.c	/^	const char *filter_name;$/;"	m	struct:__anon209df0b40108	typeref:typename:const char *	file:
filter_opts	extern/libgit2/tests/filter/bare.c	/^static git_blob_filter_options filter_opts = GIT_BLOB_FILTER_OPTIONS_INIT;$/;"	v	typeref:typename:git_blob_filter_options	file:
filter_refs	extern/libgit2/src/push.c	/^static int filter_refs(git_remote *remote)$/;"	f	typeref:typename:int	file:
filter_registry	extern/libgit2/src/filter.c	/^static struct git_filter_registry filter_registry;$/;"	v	typeref:struct:git_filter_registry	file:
filter_registry_find	extern/libgit2/src/filter.c	/^static int filter_registry_find(size_t *pos, const char *name)$/;"	f	typeref:typename:int	file:
filter_registry_insert	extern/libgit2/src/filter.c	/^static int filter_registry_insert($/;"	f	typeref:typename:int	file:
filter_registry_lookup	extern/libgit2/src/filter.c	/^static git_filter_def *filter_registry_lookup(size_t *pos, const char *name)$/;"	f	typeref:typename:git_filter_def *	file:
filter_wants	extern/libgit2/src/fetch.c	/^static int filter_wants(git_remote *remote, const git_fetch_options *opts)$/;"	f	typeref:typename:int	file:
filters	extern/libgit2/src/filter.c	/^	git_vector filters;$/;"	m	struct:git_filter_registry	typeref:typename:git_vector	file:
final	extern/libgit2/src/blame.h	/^	git_commit *final;$/;"	m	struct:git_blame	typeref:typename:git_commit *
final_blob	extern/libgit2/src/blame.h	/^	git_blob *final_blob;$/;"	m	struct:git_blame	typeref:typename:git_blob *
final_bracount	extern/libgit2/deps/pcre/pcre_internal.h	/^  int  final_bracount;              \/* Saved value after first pass *\/$/;"	m	struct:compile_data	typeref:typename:int
final_buf	extern/libgit2/src/blame.h	/^	const char *final_buf;$/;"	m	struct:git_blame	typeref:typename:const char *
final_buf_size	extern/libgit2/src/blame.h	/^	git_off_t final_buf_size;$/;"	m	struct:git_blame	typeref:typename:git_off_t
final_commit_id	extern/libgit2/include/git2/blame.h	/^	git_oid final_commit_id;$/;"	m	struct:git_blame_hunk	typeref:typename:git_oid
final_signature	extern/libgit2/include/git2/blame.h	/^	git_signature *final_signature;$/;"	m	struct:git_blame_hunk	typeref:typename:git_signature *
final_start_line_number	extern/libgit2/include/git2/blame.h	/^	size_t final_start_line_number;$/;"	m	struct:git_blame_hunk	typeref:typename:size_t
find	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void* find(const void* key)$/;"	f	class:compact_hash_table	typeref:typename:void *	file:
find_attribute	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        template<typename Predicate> xml_attribute find_attribute(Predicate pred) const {$/;"	f	class:pugi::xml_node	typeref:typename:xml_attribute
find_backend_by_level	extern/libgit2/src/config.c	/^static int find_backend_by_level($/;"	f	typeref:typename:int	file:
find_blob	extern/libgit2/src/notes.c	/^static int find_blob(git_oid *blob, git_tree *tree, const char *target)$/;"	f	typeref:typename:int	file:
find_by_path	extern/libgit2/src/submodule.c	/^static int find_by_path(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
find_ceiling_dir_offset	extern/libgit2/src/repository.c	/^static size_t find_ceiling_dir_offset($/;"	f	typeref:typename:size_t	file:
find_char	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const char_t* find_char(const char_t* s, char_t c)$/;"	f	typeref:typename:PUGI__FN const char_t *
find_child	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        template<typename Predicate> xml_node find_child(Predicate pred) const {$/;"	f	class:pugi::xml_node	typeref:typename:xml_node
find_child	extern/libgit2/src/tree-cache.c	/^static git_tree_cache *find_child($/;"	f	typeref:typename:git_tree_cache *	file:
find_child_by_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::find_child_by_attribute(const char_t* attr_name, const char_t* a/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
find_child_by_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::find_child_by_attribute(const char_t* name_, const char_t* attr_/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
find_commit_name	extern/libgit2/src/describe.c	/^static struct commit_name *find_commit_name($/;"	f	typeref:struct:commit_name *	file:
find_deltas	extern/libgit2/src/pack-objects.c	/^static int find_deltas(git_packbuilder *pb, git_pobject **list,$/;"	f	typeref:typename:int	file:
find_error_text	extern/libgit2/deps/pcre/pcre_compile.c	/^find_error_text(int n)$/;"	f	typeref:typename:const char *	file:
find_evil	extern/libgit2/tests/submodule/escape.c	/^static int find_evil(git_submodule *sm, const char *name, void *payload)$/;"	f	typeref:typename:int	file:
find_firstassertedchar	extern/libgit2/deps/pcre/pcre_compile.c	/^find_firstassertedchar(const pcre_uchar *code, pcre_int32 *flags,$/;"	f	typeref:typename:pcre_uint32	file:
find_fixedlength	extern/libgit2/deps/pcre/pcre_compile.c	/^find_fixedlength(pcre_uchar *code, BOOL utf, BOOL atend, compile_data *cd,$/;"	f	typeref:typename:int	file:
find_func	extern/libgit2/src/xdiff/xdiff.h	/^	find_func_t find_func;$/;"	m	struct:s_xdemitconf	typeref:typename:find_func_t
find_func_priv	extern/libgit2/src/xdiff/xdiff.h	/^	void *find_func_priv;$/;"	m	struct:s_xdemitconf	typeref:typename:void *
find_func_t	extern/libgit2/src/xdiff/xdiff.h	/^typedef long (*find_func_t)(const char *line, long line_len, char *buffer, long buffer_size, voi/;"	t	typeref:typename:long (*)(const char * line,long line_len,char * buffer,long buffer_size,void * priv)
find_head	extern/libgit2/src/remote.c	/^static int find_head(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
find_hunk_linenum	extern/libgit2/src/apply.c	/^static bool find_hunk_linenum($/;"	f	typeref:typename:bool	file:
find_last_in_target	extern/libgit2/src/blame_git.c	/^static bool find_last_in_target(size_t *out, git_blame *blame, git_blame__origin *target)$/;"	f	typeref:typename:bool	file:
find_lcs	extern/libgit2/src/xdiff/xhistogram.c	/^static int find_lcs($/;"	f	typeref:typename:int	file:
find_locked	extern/libgit2/src/transaction.c	/^static int find_locked(transaction_node **out, git_transaction *tx, const char *refname)$/;"	f	typeref:typename:int	file:
find_longest_common_sequence	extern/libgit2/src/xdiff/xpatience.c	/^static struct entry *find_longest_common_sequence(struct hashmap *map)$/;"	f	typeref:struct:entry *	file:
find_master_haacked	extern/libgit2/tests/fetchhead/nonetwork.c	/^int find_master_haacked(const char *ref_name, const char *remote_url, const git_oid *oid, unsign/;"	f	typeref:typename:int
find_master_haacked_called	extern/libgit2/tests/fetchhead/nonetwork.c	/^static bool find_master_haacked_called;$/;"	v	typeref:typename:bool	file:
find_minlength	extern/libgit2/deps/pcre/pcre_study.c	/^find_minlength(const REAL_PCRE *re, const pcre_uchar *code,$/;"	f	typeref:typename:int	file:
find_modules	extern/libgit2/tests/generate.py	/^    def find_modules(self):$/;"	m	class:TestSuite
find_naughty	extern/libgit2/tests/submodule/inject_option.c	/^static int find_naughty(git_submodule *sm, const char *name, void *payload)$/;"	f	typeref:typename:int	file:
find_next_backend	extern/libgit2/src/config.c	/^static int find_next_backend(size_t *out, const git_config *cfg, size_t i)$/;"	f	typeref:typename:int	file:
find_next_dir	extern/libgit2/src/tree.c	/^static size_t find_next_dir(const char *dirname, git_index *index, size_t start)$/;"	f	typeref:typename:size_t	file:
find_node	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        template<typename Predicate> xml_node find_node(Predicate pred) const {$/;"	f	class:pugi::xml_node	typeref:typename:xml_node
find_origin	extern/libgit2/src/blame_git.c	/^static git_blame__origin* find_origin($/;"	f	typeref:typename:git_blame__origin *	file:
find_patch_start	extern/libgit2/src/trailer.c	/^static size_t find_patch_start(const char *str)$/;"	f	typeref:typename:size_t	file:
find_recurse	extern/libgit2/deps/pcre/pcre_compile.c	/^find_recurse(const pcre_uchar *code, BOOL utf)$/;"	f	typeref:typename:const pcre_uchar *	file:
find_repo	extern/libgit2/src/repository.c	/^static int find_repo($/;"	f	typeref:typename:int	file:
find_separator	extern/libgit2/src/trailer.c	/^static bool find_separator(size_t *out, const char *line, const char *separators)$/;"	f	typeref:typename:bool	file:
find_substring	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const char_t* find_substring(const char_t* s, const char_t* p)$/;"	f	typeref:typename:PUGI__FN const char_t *
find_subtree_in_current_level	extern/libgit2/src/notes.c	/^static int find_subtree_in_current_level($/;"	f	typeref:typename:int	file:
find_subtree_r	extern/libgit2/src/notes.c	/^static int find_subtree_r(git_tree **out, git_tree *root,$/;"	f	typeref:typename:int	file:
find_tmp_file_recurs	extern/libgit2/tests/pack/indexer.c	/^static int find_tmp_file_recurs(void *opaque, git_buf *path)$/;"	f	typeref:typename:int	file:
find_tmp_path	extern/libgit2/tests/clar/sandbox.h	/^find_tmp_path(char *buffer, size_t length)$/;"	f	typeref:typename:int
find_trailer_end	extern/libgit2/src/trailer.c	/^static size_t find_trailer_end(const char *buf, size_t len)$/;"	f	typeref:typename:size_t	file:
find_trailer_start	extern/libgit2/src/trailer.c	/^static size_t find_trailer_start(const char *buf, size_t len)$/;"	f	typeref:typename:size_t	file:
find_unique_abbrev_size	extern/libgit2/src/describe.c	/^static int find_unique_abbrev_size($/;"	f	typeref:typename:int	file:
findopts	extern/libgit2/examples/diff.c	/^	git_diff_find_options findopts;$/;"	m	struct:opts	typeref:typename:git_diff_find_options	file:
finish_depth_computation	extern/libgit2/src/describe.c	/^static unsigned long finish_depth_computation($/;"	f	typeref:typename:unsigned long	file:
finish_done	extern/libgit2/deps/zlib/deflate.c	/^    finish_done     \/* finish done, accept no more input or output *\/$/;"	e	enum:__anonfe3a00c70103	file:
finish_hash	extern/libgit2/src/hash/sha1/win32.h	/^	hash_win32_cng_finish_hash_fn finish_hash;$/;"	m	struct:hash_cng_prov	typeref:typename:hash_win32_cng_finish_hash_fn
finish_started	extern/libgit2/deps/zlib/deflate.c	/^    finish_started, \/* finish started, need only more output at next deflate *\/$/;"	e	enum:__anonfe3a00c70103	file:
first	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_node first() const$/;"	f	class:xpath_node_set_raw	typeref:typename:xpath_node	file:
first	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node xpath_node_set::first() const$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN xpath_node
first	extern/libgit2/src/win32/dir.h	/^	int first;$/;"	m	struct:__anon949726940108	typeref:typename:int
first	extern/libgit2/src/xdiff/xpatience.c	/^	} *entries, *first, *last;$/;"	m	struct:hashmap	typeref:struct:hashmap::entry **	file:
first	extern/libgit2/tests/refs/branches/create.c	/^		const char *first;$/;"	m	struct:test_refs_branches_create__name_vs_namespace::item	typeref:typename:const char *	file:
first	extern/libgit2/tests/refs/branches/create.c	/^		const char *first;$/;"	m	struct:test_refs_branches_create__name_vs_namespace_fail::item	typeref:typename:const char *	file:
first section	extern/libgit2/tests/resources/userdiff/after/file.html	/^  <h1 id="first section">$/;"	I
first section	extern/libgit2/tests/resources/userdiff/before/file.html	/^  <h1 id="first section">$/;"	I
first section	extern/libgit2/tests/resources/userdiff/expected/driver/diff.html	/^@@ -13,2 +13,3 @@ <h1 id="first section">$/;"	I
first section	extern/libgit2/tests/resources/userdiff/expected/driver/diff.html	/^@@ -5,4 +5,4 @@ <h1 id="first section">$/;"	I
first section	extern/libgit2/tests/resources/userdiff/files/file.html	/^  <h1 id="first section">$/;"	I
firstByteMark	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^static const UTF8 firstByteMark[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };$/;"	v	typeref:typename:const UTF8[7]	file:
firstName	extern/NamedType/main.cpp	/^    static const FirstName::argument firstName;$/;"	v	typeref:typename:const FirstName::argument	file:
first_alternate	extern/libgit2/tests/refs/branches/create.c	/^		const char *first_alternate;$/;"	m	struct:test_refs_branches_create__name_vs_namespace_fail::item	typeref:typename:const char *	file:
first_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_pointer<xml_attribute_struct, 11, 0> first_attribute;$/;"	m	struct:pugi::xml_node_struct	typeref:typename:impl::compact_pointer<xml_attribute_struct,11,0>	file:
first_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_node::first_attribute() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_attribute
first_char	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 first_char;         \/* Starting character *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
first_char	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 first_char;         \/* Starting character *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
first_child	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_pointer<xml_node_struct, 8, 0> first_child;$/;"	m	struct:pugi::xml_node_struct	typeref:typename:impl::compact_pointer<xml_node_struct,8,0>	file:
first_child	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::first_child() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
first_element_by_path	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::first_element_by_path(const char_t* path_, char_t delimiter) con/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
first_entry	extern/libgit2/src/merge.c	/^	size_t first_entry;$/;"	m	struct:__anon41711a7e0208	typeref:typename:size_t	file:
first_file	extern/libgit2/src/diff.c	/^	int first_file;$/;"	m	struct:patch_id_args	typeref:typename:int	file:
first_parent	extern/libgit2/src/revwalk.h	/^		first_parent: 1,$/;"	m	struct:git_revwalk	typeref:typename:unsigned:1
first_significant_code	extern/libgit2/deps/pcre/pcre_compile.c	/^first_significant_code(const pcre_uchar *code, BOOL skipassert)$/;"	f	typeref:typename:const pcre_uchar *	file:
first_time	extern/libgit2/tests/diff/racediffiter.c	/^	bool first_time;$/;"	m	struct:__anone9839ae90208	typeref:typename:bool	file:
first_tree	extern/libgit2/tests/object/tree/write.c	/^static const char *first_tree  = "181037049a54a1eb5fab404658a3a250b44335d7";$/;"	v	typeref:typename:const char *	file:
fix_thin_pack	extern/libgit2/src/indexer.c	/^static int fix_thin_pack(git_indexer *idx, git_indexer_progress *stats)$/;"	f	typeref:typename:int	file:
fixedtables	extern/libgit2/deps/zlib/infback.c	/^local void fixedtables(state)$/;"	f
fixedtables	extern/libgit2/deps/zlib/inflate.c	/^local void fixedtables(state)$/;"	f
fixture_path	extern/libgit2/tests/clar/fixtures.h	/^fixture_path(const char *base, const char *fixture_name)$/;"	f	typeref:typename:const char *
fixture_repo	extern/libgit2/tests/repo/template.c	/^static const char *fixture_repo;$/;"	v	typeref:typename:const char *	file:
fixture_templates	extern/libgit2/tests/repo/template.c	/^static const char *fixture_templates;$/;"	v	typeref:typename:const char *	file:
flag	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 flag;             \/* Set TRUE if recursive back ref *\/$/;"	m	struct:open_capitem	typeref:typename:pcre_uint16
flag_within	extern/libgit2/src/describe.c	/^	unsigned flag_within;$/;"	m	struct:possible_tag	typeref:typename:unsigned	file:
flags	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint flags;$/;"	m	struct:__anon09af45a71808	typeref:typename:mz_uint
flags	extern/libgit2/deps/http-parser/http_parser.h	/^  unsigned char flags : 6;    \/* F_* values from 'flags' enum; semi-public *\/$/;"	m	struct:http_parser	typeref:typename:unsigned char:6
flags	extern/libgit2/deps/http-parser/http_parser.h	/^enum flags$/;"	g
flags	extern/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_client_flags flags;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_client_flags
flags	extern/libgit2/deps/ntlmclient/ntlm.h	/^	uint32_t flags;$/;"	m	struct:__anon8624cbbb0408	typeref:typename:uint32_t
flags	extern/libgit2/deps/pcre/pcre.h	/^  unsigned long int flags;        \/* Bits for which fields are set *\/$/;"	m	struct:pcre16_extra	typeref:typename:unsigned long int
flags	extern/libgit2/deps/pcre/pcre.h	/^  unsigned long int flags;        \/* Bits for which fields are set *\/$/;"	m	struct:pcre32_extra	typeref:typename:unsigned long int
flags	extern/libgit2/deps/pcre/pcre.h	/^  unsigned long int flags;        \/* Bits for which fields are set *\/$/;"	m	struct:pcre_extra	typeref:typename:unsigned long int
flags	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 flags;              \/* Private flags *\/$/;"	m	struct:pcre_study_data	typeref:typename:pcre_uint32
flags	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 flags;              \/* Private flags *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
flags	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 flags;              \/* Private flags *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint32
flags	extern/libgit2/deps/zlib/inflate.h	/^    int flags;                  \/* gzip header method and flags (0 if zlib) *\/$/;"	m	struct:inflate_state	typeref:typename:int
flags	extern/libgit2/include/git2/blame.h	/^	uint32_t flags;$/;"	m	struct:git_blame_options	typeref:typename:uint32_t
flags	extern/libgit2/include/git2/blob.h	/^	git_blob_filter_flag_t flags;$/;"	m	struct:__anon6d9306930208	typeref:typename:git_blob_filter_flag_t
flags	extern/libgit2/include/git2/diff.h	/^	git_diff_format_email_flags_t flags;$/;"	m	struct:__anon72022fed1308	typeref:typename:git_diff_format_email_flags_t
flags	extern/libgit2/include/git2/diff.h	/^	uint32_t      flags;	   \/**< git_diff_flag_t values *\/$/;"	m	struct:__anon72022fed0508	typeref:typename:uint32_t
flags	extern/libgit2/include/git2/diff.h	/^	uint32_t    flags;$/;"	m	struct:__anon72022fed0408	typeref:typename:uint32_t
flags	extern/libgit2/include/git2/diff.h	/^	uint32_t flags;$/;"	m	struct:__anon72022fed0608	typeref:typename:uint32_t
flags	extern/libgit2/include/git2/diff.h	/^	uint32_t flags;$/;"	m	struct:__anon72022fed0f08	typeref:typename:uint32_t
flags	extern/libgit2/include/git2/index.h	/^	uint16_t flags;$/;"	m	struct:git_index_entry	typeref:typename:uint16_t
flags	extern/libgit2/include/git2/merge.h	/^	git_merge_file_flag_t flags;$/;"	m	struct:__anon5e9a43240508	typeref:typename:git_merge_file_flag_t
flags	extern/libgit2/include/git2/merge.h	/^	git_merge_flag_t flags;$/;"	m	struct:__anon5e9a43240708	typeref:typename:git_merge_flag_t
flags	extern/libgit2/include/git2/remote.h	/^	unsigned int flags;$/;"	m	struct:git_remote_create_options	typeref:typename:unsigned int
flags	extern/libgit2/include/git2/repository.h	/^	uint32_t    flags;$/;"	m	struct:__anon8a61cad40408	typeref:typename:uint32_t
flags	extern/libgit2/include/git2/revparse.h	/^	unsigned int flags;$/;"	m	struct:__anonaab5087c0208	typeref:typename:unsigned int
flags	extern/libgit2/include/git2/stash.h	/^	git_stash_apply_flags flags;$/;"	m	struct:git_stash_apply_options	typeref:typename:git_stash_apply_flags
flags	extern/libgit2/include/git2/status.h	/^	unsigned int      flags;$/;"	m	struct:__anon1764a4980408	typeref:typename:unsigned int
flags	extern/libgit2/include/git2/sys/config.h	/^	unsigned int flags;$/;"	m	struct:git_config_iterator	typeref:typename:unsigned int
flags	extern/libgit2/include/git2/worktree.h	/^	uint32_t flags;$/;"	m	struct:git_worktree_prune_options	typeref:typename:uint32_t
flags	extern/libgit2/src/attr.c	/^	uint32_t flags;$/;"	m	struct:__anon5b6b8b690208	typeref:typename:uint32_t	file:
flags	extern/libgit2/src/attr_file.h	/^	unsigned int flags;$/;"	m	struct:__anon32d629ad0208	typeref:typename:unsigned int
flags	extern/libgit2/src/branch.c	/^	unsigned int flags;$/;"	m	struct:__anon0a4c2abc0108	typeref:typename:unsigned int	file:
flags	extern/libgit2/src/cache.h	/^	uint16_t   flags; \/* GIT_CACHE_STORE value *\/$/;"	m	struct:__anon354735470208	typeref:typename:uint16_t
flags	extern/libgit2/src/commit_list.h	/^			 flags : FLAG_BITS;$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned int
flags	extern/libgit2/src/diff_driver.c	/^	int flags;$/;"	m	struct:__anon6fb9a4920208	typeref:typename:int	file:
flags	extern/libgit2/src/diff_file.h	/^	uint32_t flags;$/;"	m	struct:__anon2493e46b0108	typeref:typename:uint32_t
flags	extern/libgit2/src/diff_print.c	/^	uint32_t flags;$/;"	m	struct:__anoncda507930108	typeref:typename:uint32_t	file:
flags	extern/libgit2/src/filter.c	/^	uint32_t        flags;$/;"	m	struct:git_filter_source	typeref:typename:uint32_t	file:
flags	extern/libgit2/src/filter.h	/^	uint32_t flags;$/;"	m	struct:__anon209df0b90108	typeref:typename:uint32_t
flags	extern/libgit2/src/futils.c	/^	uint32_t flags;$/;"	m	struct:__anonce3edc250108	typeref:typename:uint32_t	file:
flags	extern/libgit2/src/futils.c	/^	uint32_t flags;$/;"	m	struct:__anonce3edc250208	typeref:typename:uint32_t	file:
flags	extern/libgit2/src/index.c	/^	uint16_t flags;$/;"	m	struct:entry_long	typeref:typename:uint16_t	file:
flags	extern/libgit2/src/index.c	/^	uint16_t flags;$/;"	m	struct:entry_short	typeref:typename:uint16_t	file:
flags	extern/libgit2/src/index.c	/^	unsigned int flags;$/;"	m	struct:foreach_diff_data	typeref:typename:unsigned int	file:
flags	extern/libgit2/src/iterator.h	/^	unsigned int flags;$/;"	m	struct:__anonb487a9bd0408	typeref:typename:unsigned int
flags	extern/libgit2/src/iterator.h	/^	unsigned int flags;$/;"	m	struct:git_iterator	typeref:typename:unsigned int
flags	extern/libgit2/src/patch_generate.h	/^	uint32_t flags;$/;"	m	struct:git_patch_generated	typeref:typename:uint32_t
flags	extern/libgit2/src/path.h	/^	unsigned int flags;$/;"	m	struct:git_path_diriter	typeref:typename:unsigned int
flags	extern/libgit2/src/refdb_fs.c	/^	char flags;$/;"	m	struct:packref	typeref:typename:char	file:
flags	extern/libgit2/src/submodule.h	/^	uint32_t flags;$/;"	m	struct:git_submodule	typeref:typename:uint32_t
flags	extern/libgit2/src/transports/local.c	/^	int flags;$/;"	m	struct:__anonb65cbde80108	typeref:typename:int	file:
flags	extern/libgit2/src/transports/smart.h	/^	int flags;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:int
flags	extern/libgit2/src/userdiff.h	/^	int flags;$/;"	m	struct:__anon76bd502b0108	typeref:typename:int
flags	extern/libgit2/src/vector.h	/^	uint32_t flags;$/;"	m	struct:git_vector	typeref:typename:uint32_t
flags	extern/libgit2/src/xdiff/xdiff.h	/^	unsigned long flags;$/;"	m	struct:s_xdemitconf	typeref:typename:unsigned long
flags	extern/libgit2/src/xdiff/xdiff.h	/^	unsigned long flags;$/;"	m	struct:s_xpparam	typeref:typename:unsigned long
flags	extern/libgit2/src/xdiff/xprepare.c	/^	long flags;$/;"	m	struct:s_xdlclassifier	typeref:typename:long	file:
flags_extended	extern/libgit2/include/git2/index.h	/^	uint16_t flags_extended;$/;"	m	struct:git_index_entry	typeref:typename:uint16_t
flags_extended	extern/libgit2/src/index.c	/^	uint16_t flags_extended;$/;"	m	struct:entry_long	typeref:typename:uint16_t	file:
flattened	extern/libgit2/src/patch_generate.h	/^	git_pool flattened;$/;"	m	struct:git_patch_generated	typeref:typename:git_pool
flipped	extern/libgit2/tests/filter/wildcard.c	/^static unsigned char flipped[] = {$/;"	v	typeref:typename:unsigned char[]	file:
fluent	extern/NamedType/crtp.hpp	/^namespace fluent$/;"	n
fluent	extern/NamedType/named_type_impl.hpp	/^namespace fluent$/;"	n
fluent	extern/NamedType/underlying_functionalities.hpp	/^namespace fluent$/;"	n
flush	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t* flush(char_t* s) {$/;"	f	struct:gap	typeref:typename:char_t *	file:
flush	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        size_t flush() {$/;"	f	class:xml_buffered_writer	typeref:typename:size_t	file:
flush	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void flush(const char_t* data, size_t size) {$/;"	f	class:xml_buffered_writer	typeref:typename:void	file:
flush	extern/libgit2/src/zstream.h	/^	int flush;$/;"	m	struct:__anonebc673f90208	typeref:typename:int
flush_buffer	extern/libgit2/src/filebuf.c	/^GIT_INLINE(int) flush_buffer(git_filebuf *file)$/;"	f	typeref:typename:int
flush_hunk	extern/libgit2/src/diff.c	/^static int flush_hunk(git_oid *result, git_hash_ctx *ctx)$/;"	f	typeref:typename:int	file:
flush_left_	extern/OpenXLSX/benchmark/table_printer.h	/^        bool flush_left_;$/;"	m	class:bprinter::TablePrinter	typeref:typename:bool
flush_mode	extern/libgit2/src/filebuf.h	/^	int flush_mode;$/;"	m	struct:git_filebuf	typeref:typename:int
flush_pending	extern/libgit2/deps/zlib/deflate.c	/^local void flush_pending(strm)$/;"	f
flush_pkt	extern/libgit2/src/transports/smart_pkt.c	/^static int flush_pkt(git_pkt **out)$/;"	f	typeref:typename:int	file:
flush_stubs	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void flush_stubs(compiler_common *common)$/;"	f	typeref:typename:void	file:
fmap	lr.hpp	/^  fmap(F &&r) : f(std::forward<F>(r)) {}$/;"	f	struct:lr::fmap
fmap	lr.hpp	/^template <typename F> struct fmap {$/;"	s	namespace:lr
fmh	extern/libgit2/src/map.h	/^	HANDLE fmh; \/* file mapping handle *\/$/;"	m	struct:__anonfbd1e3910108	typeref:typename:HANDLE
fn	extern/libgit2/examples/lg2.c	/^	git_command_fn fn;$/;"	m	struct:__anon8df46cca0108	typeref:typename:git_command_fn	file:
fn	extern/libgit2/src/date.c	/^	void (*fn)(struct tm *, struct tm *, int *);$/;"	m	struct:special	typeref:typename:void (*)(struct tm *,struct tm *,int *)	file:
fn	extern/libgit2/src/patch_parse.c	/^	int(*fn)(git_patch_parsed *, git_patch_parse_ctx *);$/;"	m	struct:__anonadbd87d80308	typeref:typename:int (*)(git_patch_parsed *,git_patch_parse_ctx *)	file:
fn	extern/libgit2/src/transport.c	/^	git_transport_cb fn;$/;"	m	struct:transport_definition	typeref:typename:git_transport_cb	file:
fn_locate_object_short_oid	extern/libgit2/src/odb_loose.c	/^static int fn_locate_object_short_oid(void *state, git_buf *pathbuf) {$/;"	f	typeref:typename:int	file:
fns	extern/libgit2/src/userdiff.h	/^	const char *fns;$/;"	m	struct:__anon76bd502b0108	typeref:typename:const char *
foc	extern/libgit2/deps/pcre/pcre_exec.c	/^#define foc /;"	d	file:
follow_and_lstat_link	extern/libgit2/src/win32/posix_w32.c	/^static int follow_and_lstat_link(git_win32_path path, struct stat* buf)$/;"	f	typeref:typename:int	file:
forbidden_custom_headers	extern/libgit2/src/transports/smart.c	/^static char *forbidden_custom_headers[] = {$/;"	v	typeref:typename:char * []	file:
force	extern/libgit2/examples/checkout.c	/^	int force : 1;$/;"	m	struct:__anon96974fbb0108	typeref:typename:int:1	file:
force	extern/libgit2/examples/tag.c	/^	int force;$/;"	m	struct:__anon8e82c8010108	typeref:typename:int	file:
force	extern/libgit2/src/refspec.h	/^	unsigned int force :1,$/;"	m	struct:git_refspec	typeref:typename:unsigned int:1
force_create_file	extern/libgit2/tests/checkout/typechange.c	/^static void force_create_file(const char *file)$/;"	f	typeref:typename:void	file:
forced_quit	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *forced_quit;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
forced_quit_label	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *forced_quit_label;$/;"	m	struct:compiler_common	typeref:struct:sljit_label *	file:
foreach_cancel_cb	extern/libgit2/tests/pack/packbuilder.c	/^static int foreach_cancel_cb(void *buf, size_t len, void *payload)$/;"	f	typeref:typename:int	file:
foreach_cb	extern/libgit2/fuzzers/config_file_fuzzer.c	/^int foreach_cb(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int
foreach_cb	extern/libgit2/src/odb_loose.c	/^static int foreach_cb(void *_state, git_buf *path)$/;"	f	typeref:typename:int	file:
foreach_cb	extern/libgit2/src/transports/local.c	/^static int foreach_cb(void *buf, size_t len, void *payload)$/;"	f	typeref:typename:int	file:
foreach_cb	extern/libgit2/tests/config/stress.c	/^static int foreach_cb(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
foreach_cb	extern/libgit2/tests/odb/foreach.c	/^static int foreach_cb(const git_oid *oid, void *data)$/;"	f	typeref:typename:int	file:
foreach_cb	extern/libgit2/tests/pack/packbuilder.c	/^static int foreach_cb(void *buf, size_t len, void *payload)$/;"	f	typeref:typename:int	file:
foreach_cb	extern/libgit2/tests/submodule/lookup.c	/^static int foreach_cb(git_submodule *sm, const char *name, void *payload)$/;"	f	typeref:typename:int	file:
foreach_data	extern/libgit2/src/transports/local.c	/^typedef struct foreach_data {$/;"	s	file:
foreach_data	extern/libgit2/src/transports/local.c	/^} foreach_data;$/;"	t	typeref:struct:foreach_data	file:
foreach_diff_data	extern/libgit2/src/index.c	/^struct foreach_diff_data {$/;"	s	file:
foreach_object_dir_cb	extern/libgit2/src/odb_loose.c	/^static int foreach_object_dir_cb(void *_state, git_buf *path)$/;"	f	typeref:typename:int	file:
foreach_reference_cb	extern/libgit2/src/transports/local.c	/^static int foreach_reference_cb(git_reference *reference, void *payload)$/;"	f	typeref:typename:int	file:
foreach_state	extern/libgit2/src/odb_loose.c	/^struct foreach_state {$/;"	s	file:
foreach_stop_cb	extern/libgit2/tests/odb/foreach.c	/^static int foreach_stop_cb(const git_oid *oid, void *data)$/;"	f	typeref:typename:int	file:
foreach_stop_cb_positive_ret	extern/libgit2/tests/odb/foreach.c	/^static int foreach_stop_cb_positive_ret(const git_oid *oid, void *data)$/;"	f	typeref:typename:int	file:
foreach_stop_first_cb	extern/libgit2/tests/odb/foreach.c	/^static int foreach_stop_first_cb(const git_oid *oid, void *data)$/;"	f	typeref:typename:int	file:
format	extern/libgit2/examples/diff.c	/^	git_diff_format_t format;$/;"	m	struct:opts	typeref:typename:git_diff_format_t	file:
format	extern/libgit2/examples/status.c	/^	int format;$/;"	m	struct:opts	typeref:typename:int	file:
format	extern/libgit2/src/diff_print.c	/^	git_diff_format_t format;$/;"	m	struct:__anoncda507930108	typeref:typename:git_diff_format_t	file:
format_binary	extern/libgit2/src/diff_print.c	/^static int format_binary($/;"	f	typeref:typename:int	file:
format_default	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int format_default = format_indent;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
format_header_field	extern/libgit2/src/commit.c	/^static void format_header_field(git_buf *out, const char *field, const char *content)$/;"	f	typeref:typename:void	file:
format_indent	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int format_indent = 0x01;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
format_indent_attributes	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int format_indent_attributes = 0x40;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
format_no_declaration	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int format_no_declaration = 0x08;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
format_no_empty_element_tags	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int format_no_empty_element_tags = 0x80;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
format_no_escapes	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int format_no_escapes = 0x10;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
format_options	extern/libgit2/examples/describe.c	/^	git_describe_format_options format_options;$/;"	m	struct:__anon38a310860108	typeref:typename:git_describe_format_options	file:
format_raw	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int format_raw = 0x04;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
format_save_file_text	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int format_save_file_text = 0x20;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
format_write_bom	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int format_write_bom = 0x02;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
found	extern/libgit2/src/attr.c	/^	git_attr_assignment *found;$/;"	m	struct:__anon5b6b8b690108	typeref:typename:git_attr_assignment *	file:
found	extern/libgit2/src/odb_loose.c	/^	int found;				\/* number of matching$/;"	m	struct:__anon81c02f840408	typeref:typename:int	file:
found_collision	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	int found_collision;$/;"	m	struct:__anon3f63bb720108	typeref:typename:int
found_haacked	extern/libgit2/tests/fetchhead/nonetwork.c	/^static bool found_haacked;$/;"	v	typeref:typename:bool	file:
found_master	extern/libgit2/tests/fetchhead/nonetwork.c	/^static bool found_master;$/;"	v	typeref:typename:bool	file:
found_order	extern/libgit2/src/describe.c	/^	int found_order;$/;"	m	struct:possible_tag	typeref:typename:int	file:
fp	extern/libgit2/tests/clar.c	/^	FILE *fp;$/;"	m	struct:clar_summary	typeref:typename:FILE *	file:
fprintf_delta	extern/libgit2/tests/diff/diff_helpers.c	/^static void fprintf_delta(FILE *fp, const git_diff_delta *delta, float progress)$/;"	f	typeref:typename:void	file:
frame_types	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^enum frame_types {$/;"	g	file:
frames	extern/libgit2/src/win32/w32_stack.h	/^	void *frames[GIT_WIN32__STACK__MAX_FRAMES];$/;"	m	struct:__anon991580660108	typeref:typename:void * []
framesize	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^    int framesize;$/;"	m	union:bracket_backtrack::__anon313b80c3010a	typeref:typename:int	file:
framesize	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int framesize;$/;"	m	struct:assert_backtrack	typeref:typename:int	file:
framesize	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int framesize;$/;"	m	struct:bracketpos_backtrack	typeref:typename:int	file:
framesize	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int framesize;$/;"	m	struct:then_trap_backtrack	typeref:typename:int	file:
free	extern/libgit2/src/iterator.h	/^	void (*free)(git_iterator *);$/;"	m	struct:__anonb487a9bd0508	typeref:typename:void (*)(git_iterator *)
free	extern/libgit2/src/object.c	/^	void (*free)(void *self);$/;"	m	struct:__anon4e5bf2450108	typeref:typename:void (*)(void * self)	file:
free	extern/libgit2/src/transports/auth.h	/^	void (*free)(git_http_auth_context *ctx);$/;"	m	struct:git_http_auth_context	typeref:typename:void (*)(git_http_auth_context * ctx)
free_auth_context	extern/libgit2/src/transports/http.c	/^static void free_auth_context(http_server *server)$/;"	f	typeref:typename:void	file:
free_cache_object	extern/libgit2/src/pack.c	/^static void free_cache_object(void *o)$/;"	f	typeref:typename:void	file:
free_cred	extern/libgit2/src/transports/http.c	/^GIT_INLINE(void) free_cred(git_cred **cred)$/;"	f	typeref:typename:void
free_credentials	extern/libgit2/deps/ntlmclient/ntlm.c	/^static void free_credentials(ntlm_client *ntlm)$/;"	f	typeref:typename:void	file:
free_diskfile_entry	extern/libgit2/src/config_file.c	/^static void free_diskfile_entry(git_config_entry *entry)$/;"	f	typeref:typename:void	file:
free_diskfile_entry	extern/libgit2/src/config_snapshot.c	/^static void free_diskfile_entry(git_config_entry *entry)$/;"	f	typeref:typename:void	file:
free_fn	extern/libgit2/src/diff.h	/^	void (*free_fn)(git_diff *diff);$/;"	m	struct:git_diff	typeref:typename:void (*)(git_diff * diff)
free_fn	extern/libgit2/src/patch.h	/^	void (*free_fn)(git_patch *patch);$/;"	m	struct:git_patch	typeref:typename:void (*)(git_patch * patch)
free_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define free_func /;"	d
free_func	extern/libgit2/deps/zlib/zconf.h	/^#  define free_func /;"	d
free_func	extern/libgit2/deps/zlib/zlib.h	/^typedef void   (*free_func)  OF((voidpf opaque, voidpf address));$/;"	t	typeref:typename:void (*)OF ((voidpf opaque,voidpf address))
free_head	extern/libgit2/src/transports/local.c	/^static void free_head(git_remote_head *head)$/;"	f	typeref:typename:void	file:
free_heads	extern/libgit2/src/transports/local.c	/^static void free_heads(git_vector *heads)$/;"	f	typeref:typename:void	file:
free_hunk	extern/libgit2/src/blame.c	/^static void free_hunk(git_blame_hunk *hunk)$/;"	f	typeref:typename:void	file:
free_item	extern/libgit2/src/sortedcache.h	/^	git_sortedcache_free_item_fn free_item;$/;"	m	struct:__anond92d40380108	typeref:typename:git_sortedcache_free_item_fn
free_item_payload	extern/libgit2/src/sortedcache.h	/^	void         *free_item_payload;$/;"	m	struct:__anond92d40380108	typeref:typename:void *
free_lowest_entry	extern/libgit2/src/pack.c	/^static void free_lowest_entry(git_pack_cache *cache)$/;"	f	typeref:typename:void	file:
free_oids	extern/libgit2/tests/object/raw/short.c	/^static void free_oids(int n, char **oids)$/;"	f	typeref:typename:void	file:
free_read_only_data	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void free_read_only_data(void *current, void *allocator_data)$/;"	f	typeref:typename:void	file:
free_refspec	extern/libgit2/src/push.c	/^static void free_refspec(push_spec *spec)$/;"	f	typeref:typename:void	file:
free_refspecs	extern/libgit2/src/remote.c	/^static void free_refspecs(git_vector *vec)$/;"	f	typeref:typename:void	file:
free_stack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void free_stack(compiler_common *common, int size)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
free_submodule_names	extern/libgit2/src/submodule.c	/^static void free_submodule_names(git_strmap *names)$/;"	f	typeref:typename:void	file:
free_symrefs	extern/libgit2/src/transports/smart.c	/^static void free_symrefs(git_vector *symrefs)$/;"	f	typeref:typename:void	file:
free_trees	extern/libgit2/tests/threads/diff.c	/^static void free_trees(void)$/;"	f	typeref:typename:void	file:
free_unpacked	extern/libgit2/src/pack-objects.c	/^static size_t free_unpacked(struct unpacked *n)$/;"	f	typeref:typename:size_t	file:
freed_size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        size_t freed_size;$/;"	m	struct:xml_memory_page	typeref:typename:size_t	file:
freq	extern/libgit2/deps/zlib/deflate.h	/^        ush  freq;       \/* frequency count *\/$/;"	m	union:ct_data_s::__anonfe3a00cc010a	typeref:typename:ush
from	extern/libgit2/include/git2/revparse.h	/^	git_object *from;$/;"	m	struct:__anonaab5087c0208	typeref:typename:git_object *
from_const	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static xpath_string from_const(const char_t* str)$/;"	f	class:xpath_string	typeref:typename:xpath_string	file:
from_glob	extern/libgit2/src/revwalk.h	/^	int from_glob;$/;"	m	struct:__anon01a529ef0108	typeref:typename:int
from_heap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static xpath_string from_heap(const char_t* begin, const char_t* end, xpath_allocator* alloc)$/;"	f	class:xpath_string	typeref:typename:xpath_string	file:
from_heap_preallocated	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static xpath_string from_heap_preallocated(const char_t* begin, const char_t* end)$/;"	f	class:xpath_string	typeref:typename:xpath_string	file:
from_hex	extern/libgit2/src/util.h	/^static signed char from_hex[] = {$/;"	v	typeref:typename:signed char[]
from_prefix	extern/libgit2/src/futils.c	/^	ssize_t from_prefix;$/;"	m	struct:__anonce3edc250208	typeref:typename:ssize_t	file:
fs__dotordotdot	extern/libgit2/tests/clar/fs.h	/^fs__dotordotdot(WCHAR *_tocheck)$/;"	f	typeref:typename:int
fs_copy	extern/libgit2/tests/clar/fs.h	/^fs_copy(const char *_source, const char *_dest)$/;"	f	typeref:typename:void
fs_copy	extern/libgit2/tests/clar/fs.h	/^fs_copy(const char *_source, const char *dest)$/;"	f	typeref:typename:void
fs_copydir_helper	extern/libgit2/tests/clar/fs.h	/^fs_copydir_helper(WCHAR *_wsource, WCHAR *_wdest)$/;"	f	typeref:typename:void
fs_rm	extern/libgit2/tests/clar/fs.h	/^fs_rm(const char *_source)$/;"	f	typeref:typename:void
fs_rm	extern/libgit2/tests/clar/fs.h	/^fs_rm(const char *source)$/;"	f	typeref:typename:void
fs_rm_wait	extern/libgit2/tests/clar/fs.h	/^fs_rm_wait(WCHAR *_wpath)$/;"	f	typeref:typename:int
fs_rmdir_helper	extern/libgit2/tests/clar/fs.h	/^fs_rmdir_helper(WCHAR *_wsource)$/;"	f	typeref:typename:void
fs_rmdir_rmdir	extern/libgit2/tests/clar/fs.h	/^fs_rmdir_rmdir(WCHAR *_wpath)$/;"	f	typeref:typename:int
fsync	extern/libgit2/src/refdb_fs.c	/^	int fsync;$/;"	m	struct:refdb_fs_backend	typeref:typename:int	file:
fsync_object_files	extern/libgit2/src/odb_loose.c	/^	int fsync_object_files; \/** loose object file fsync flag. *\/$/;"	m	struct:loose_backend	typeref:typename:int	file:
ftExpiry	extern/libgit2/deps/winhttp/winhttp.h	/^    FILETIME ftExpiry;$/;"	m	struct:__anonb531ffc20308	typeref:typename:FILETIME
ftStart	extern/libgit2/deps/winhttp/winhttp.h	/^    FILETIME ftStart;$/;"	m	struct:__anonb531ffc20308	typeref:typename:FILETIME
full	extern/libgit2/src/attr_file.h	/^	git_buf  full;$/;"	m	struct:__anon32d629ad0808	typeref:typename:git_buf
full	extern/libgit2/src/oid.c	/^	int min_length, full;$/;"	m	struct:git_oid_shorten	typeref:typename:int	file:
fullName	extern/NamedType/main.cpp	/^    auto fullName = getFullName(firstName = "James", lastName = "Bond");$/;"	v	typeref:typename:auto
full_size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        uint16_t full_size; \/\/ 0 if string occupies whole page$/;"	m	struct:xml_memory_string_header	typeref:typename:uint16_t	file:
fullpath	extern/libgit2/src/attr_file.h	/^	char fullpath[GIT_FLEX_ARRAY];$/;"	m	struct:git_attr_file_entry	typeref:typename:char[]
func	extern/libgit2/deps/zlib/deflate.c	/^   compress_func func;$/;"	m	struct:config_s	typeref:typename:compress_func	file:
func_line	extern/libgit2/src/xdiff/xemit.c	/^struct func_line {$/;"	s	file:
functionTakingA	extern/NamedType/main.cpp	/^    auto functionTakingA = [](A const& a){ return a.constMethod(); };$/;"	v	typeref:typename:auto
functionTakingA	extern/NamedType/main.cpp	/^    auto functionTakingA = [](A const& a){ return a.x; };$/;"	v	typeref:typename:auto
function_ref	function_ref.hpp	/^  constexpr function_ref(F &&f) noexcept$/;"	f	struct:abo::function_ref
function_ref	function_ref.hpp	/^template <typename R, typename... Args> struct function_ref<R(Args...)> {$/;"	s	namespace:abo
futils__error_cannot_rmdir	extern/libgit2/src/futils.c	/^static int futils__error_cannot_rmdir(const char *path, const char *filemsg)$/;"	f	typeref:typename:int	file:
futils__rm_first_parent	extern/libgit2/src/futils.c	/^static int futils__rm_first_parent(git_buf *path, const char *ceiling)$/;"	f	typeref:typename:int	file:
futils__rmdir_data	extern/libgit2/src/futils.c	/^} futils__rmdir_data;$/;"	t	typeref:struct:__anonce3edc250108	file:
futils__rmdir_empty_parent	extern/libgit2/src/futils.c	/^static int futils__rmdir_empty_parent(void *opaque, const char *path)$/;"	f	typeref:typename:int	file:
futils__rmdir_recurs_foreach	extern/libgit2/src/futils.c	/^static int futils__rmdir_recurs_foreach(void *opaque, git_buf *path)$/;"	f	typeref:typename:int	file:
fuzzer_buffer	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^struct fuzzer_buffer {$/;"	s	file:
fuzzer_git_abort	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^void fuzzer_git_abort(const char *op)$/;"	f	typeref:typename:void
fuzzer_stream	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^struct fuzzer_stream {$/;"	s	file:
fuzzer_stream_free	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^static void fuzzer_stream_free(git_smart_subtransport_stream *stream)$/;"	f	typeref:typename:void	file:
fuzzer_stream_new	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_stream_new($/;"	f	typeref:typename:int	file:
fuzzer_stream_read	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_stream_read(git_smart_subtransport_stream *stream,$/;"	f	typeref:typename:int	file:
fuzzer_stream_write	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_stream_write(git_smart_subtransport_stream *stream,$/;"	f	typeref:typename:int	file:
fuzzer_subtransport	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^struct fuzzer_subtransport {$/;"	s	file:
fuzzer_subtransport_action	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_subtransport_action($/;"	f	typeref:typename:int	file:
fuzzer_subtransport_cb	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^int fuzzer_subtransport_cb($/;"	f	typeref:typename:int
fuzzer_subtransport_close	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_subtransport_close(git_smart_subtransport *transport)$/;"	f	typeref:typename:int	file:
fuzzer_subtransport_free	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^static void fuzzer_subtransport_free(git_smart_subtransport *transport)$/;"	f	typeref:typename:void	file:
fuzzer_subtransport_new	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_subtransport_new($/;"	f	typeref:typename:int	file:
fuzzer_transport_cb	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^int fuzzer_transport_cb(git_transport **out, git_remote *owner, void *param)$/;"	f	typeref:typename:int
g_actualobject	extern/libgit2/tests/object/lookupbypath.c	/^						*g_actualobject;$/;"	v	typeref:typename:git_object **	file:
g_aux_cb_alloc	extern/libgit2/src/win32/w32_stack.c	/^static git_win32__stack__aux_cb_alloc  g_aux_cb_alloc  = NULL;$/;"	v	typeref:typename:git_win32__stack__aux_cb_alloc	file:
g_aux_cb_lookup	extern/libgit2/src/win32/w32_stack.c	/^static git_win32__stack__aux_cb_lookup g_aux_cb_lookup = NULL;$/;"	v	typeref:typename:git_win32__stack__aux_cb_lookup	file:
g_blame	extern/libgit2/tests/blame/getters.c	/^git_blame *g_blame;$/;"	v	typeref:typename:git_blame *
g_blame	extern/libgit2/tests/blame/simple.c	/^static git_blame *g_blame;$/;"	v	typeref:typename:git_blame *	file:
g_blame	extern/libgit2/tests/mailmap/blame.c	/^static git_blame *g_blame;$/;"	v	typeref:typename:git_blame *	file:
g_bufferblame	extern/libgit2/tests/blame/buffer.c	/^static git_blame *g_fileblame, *g_bufferblame;$/;"	v	typeref:typename:git_blame **	file:
g_checkpoint_id	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static unsigned int g_checkpoint_id = 0; \/* to better label leak checkpoints *\/$/;"	v	typeref:typename:unsigned int	file:
g_child	extern/libgit2/tests/submodule/open.c	/^static git_repository *g_child;$/;"	v	typeref:typename:git_repository *	file:
g_config	extern/libgit2/tests/config/rename.c	/^static git_config *g_config = NULL;$/;"	v	typeref:typename:git_config *	file:
g_config	extern/libgit2/tests/mailmap/parsing.c	/^static git_config *g_config;$/;"	v	typeref:typename:git_config *	file:
g_count_total_allocs	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static unsigned int g_count_total_allocs = 0; \/* number of allocs seen *\/$/;"	v	typeref:typename:unsigned int	file:
g_crlf_filtered	extern/libgit2/tests/object/blob/filter.c	/^static git_buf g_crlf_filtered[CRLF_NUM_TEST_OBJECTS] = {$/;"	v	typeref:typename:git_buf[]	file:
g_crlf_filtered_stats	extern/libgit2/tests/object/blob/filter.c	/^static git_buf_text_stats g_crlf_filtered_stats[CRLF_NUM_TEST_OBJECTS] = {$/;"	v	typeref:typename:git_buf_text_stats[]	file:
g_crlf_oids	extern/libgit2/tests/object/blob/filter.c	/^static git_oid g_crlf_oids[CRLF_NUM_TEST_OBJECTS];$/;"	v	typeref:typename:git_oid[]	file:
g_crlf_raw	extern/libgit2/tests/object/blob/filter.c	/^static const char *g_crlf_raw[CRLF_NUM_TEST_OBJECTS] = {$/;"	v	typeref:typename:const char * []	file:
g_crlf_raw_len	extern/libgit2/tests/object/blob/filter.c	/^static git_off_t g_crlf_raw_len[CRLF_NUM_TEST_OBJECTS] = {$/;"	v	typeref:typename:git_off_t[]	file:
g_crtdbg_stacktrace_cs	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static CRITICAL_SECTION g_crtdbg_stacktrace_cs;$/;"	v	typeref:typename:CRITICAL_SECTION	file:
g_cs_end	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static unsigned int g_cs_end = MY_ROW_LIMIT;$/;"	v	typeref:typename:unsigned int	file:
g_cs_index	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static git_win32__crtdbg_stacktrace__row *g_cs_index[MY_ROW_LIMIT];$/;"	v	typeref:typename:git_win32__crtdbg_stacktrace__row * []	file:
g_cs_ins	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static unsigned int g_cs_ins = 0; \/* insertion point == unique allocs seen *\/$/;"	v	typeref:typename:unsigned int	file:
g_cs_rows	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static git_win32__crtdbg_stacktrace__row  g_cs_rows[MY_ROW_LIMIT];$/;"	v	typeref:typename:git_win32__crtdbg_stacktrace__row[]	file:
g_data	extern/libgit2/tests/object/cache.c	/^} g_data[] = {$/;"	v	typeref:struct:__anond3a8d8530108[]
g_email	extern/libgit2/tests/refs/reflog/messages.c	/^static const char *g_email = "foo@example.com";$/;"	v	typeref:typename:const char *	file:
g_email	extern/libgit2/tests/repo/head.c	/^static const char *g_email = "foo@example.com";$/;"	v	typeref:typename:const char *	file:
g_empty_id	extern/libgit2/tests/index/collision.c	/^static git_oid g_empty_id;$/;"	v	typeref:typename:git_oid	file:
g_expected	extern/libgit2/tests/threads/refdb.c	/^static int g_expected = 0;$/;"	v	typeref:typename:int	file:
g_expectedobject	extern/libgit2/tests/object/lookupbypath.c	/^static git_object *g_expectedobject,$/;"	v	typeref:typename:git_object *	file:
g_fileblame	extern/libgit2/tests/blame/buffer.c	/^static git_blame *g_fileblame, *g_bufferblame;$/;"	v	typeref:typename:git_blame *	file:
g_git_oom_error	extern/libgit2/src/errors.c	/^static git_error g_git_oom_error = {$/;"	v	typeref:typename:git_error	file:
g_global_path	extern/libgit2/tests/checkout/index.c	/^static git_buf g_global_path = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
g_has_ssl	extern/libgit2/tests/online/badssl.c	/^static bool g_has_ssl = false;$/;"	v	typeref:typename:bool	file:
g_has_ssl	extern/libgit2/tests/online/badssl.c	/^static bool g_has_ssl = true;$/;"	v	typeref:typename:bool	file:
g_head_commit	extern/libgit2/tests/object/lookupbypath.c	/^static git_commit *g_head_commit;$/;"	v	typeref:typename:git_commit *	file:
g_idx	extern/libgit2/tests/index/bypath.c	/^static git_index *g_idx;$/;"	v	typeref:typename:git_index *	file:
g_index	extern/libgit2/tests/checkout/conflict.c	/^static git_index *g_index;$/;"	v	typeref:typename:git_index *	file:
g_index	extern/libgit2/tests/index/add.c	/^static git_index *g_index = NULL;$/;"	v	typeref:typename:git_index *	file:
g_index	extern/libgit2/tests/index/collision.c	/^static git_index *g_index;$/;"	v	typeref:typename:git_index *	file:
g_index	extern/libgit2/tests/index/crlf.c	/^static git_index *g_index;$/;"	v	typeref:typename:git_index *	file:
g_limit_reached	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static bool g_limit_reached = false; \/* had allocs after we filled row table *\/$/;"	v	typeref:typename:bool	file:
g_mailmap	extern/libgit2/tests/mailmap/parsing.c	/^static git_mailmap *g_mailmap;$/;"	v	typeref:typename:git_mailmap *	file:
g_map	extern/libgit2/tests/core/oidmap.c	/^static git_oidmap *g_map;$/;"	v	typeref:typename:git_oidmap *	file:
g_module	extern/libgit2/tests/submodule/open.c	/^static git_submodule *g_module;$/;"	v	typeref:typename:git_submodule *	file:
g_obj	extern/libgit2/tests/refs/revparse.c	/^static git_object *g_obj;$/;"	v	typeref:typename:git_object *	file:
g_object	extern/libgit2/tests/checkout/tree.c	/^static git_object *g_object;$/;"	v	typeref:typename:git_object *	file:
g_odb	extern/libgit2/tests/index/collision.c	/^static git_odb *g_odb;$/;"	v	typeref:typename:git_odb *	file:
g_odb	extern/libgit2/tests/odb/emptyobjects.c	/^git_odb *g_odb;$/;"	v	typeref:typename:git_odb *
g_options	extern/libgit2/tests/clone/empty.c	/^static git_clone_options g_options;$/;"	v	typeref:typename:git_clone_options	file:
g_options	extern/libgit2/tests/clone/nonetwork.c	/^static git_clone_options g_options;$/;"	v	typeref:typename:git_clone_options	file:
g_options	extern/libgit2/tests/online/clone.c	/^static git_clone_options g_options;$/;"	v	typeref:typename:git_clone_options	file:
g_options	extern/libgit2/tests/online/fetchhead.c	/^static git_clone_options g_options;$/;"	v	typeref:typename:git_clone_options	file:
g_opts	extern/libgit2/tests/checkout/tree.c	/^static git_checkout_options g_opts;$/;"	v	typeref:typename:git_checkout_options	file:
g_parent	extern/libgit2/tests/submodule/open.c	/^static git_repository *g_parent;$/;"	v	typeref:typename:git_repository *	file:
g_peel_repo	extern/libgit2/tests/refs/peel.c	/^static git_repository *g_peel_repo;$/;"	v	typeref:typename:git_repository *	file:
g_ref	extern/libgit2/tests/clone/nonetwork.c	/^static git_reference* g_ref;$/;"	v	typeref:typename:git_reference *	file:
g_reflog	extern/libgit2/tests/refs/reflog/drop.c	/^static git_reflog *g_reflog;$/;"	v	typeref:typename:git_reflog *	file:
g_remote	extern/libgit2/tests/clone/nonetwork.c	/^static git_remote* g_remote;$/;"	v	typeref:typename:git_remote *	file:
g_remote	extern/libgit2/tests/network/remote/defaultbranch.c	/^static git_remote *g_remote;$/;"	v	typeref:typename:git_remote *	file:
g_remote	extern/libgit2/tests/remote/insteadof.c	/^static git_remote *g_remote;$/;"	v	typeref:typename:git_remote *	file:
g_repo	extern/libgit2/tests/attr/macro.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/attr/repo.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/blame/buffer.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/blame/harder.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/blame/simple.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/checkout/binaryunicode.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/checkout/conflict.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/checkout/crlf.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/checkout/head.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/checkout/index.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/checkout/tree.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/checkout/typechange.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/clone/empty.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/clone/nonetwork.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/commit/parse.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/commit/write.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/config/rename.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/diff/blob.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/diff/drivers.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/diff/index.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/diff/notify.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/diff/patch.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/diff/pathspec.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/diff/rename.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/diff/submodules.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/diff/tree.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/diff/workdir.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/fetchhead/nonetwork.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/filter/bare.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/filter/blob.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/filter/crlf.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/filter/custom.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/filter/file.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/filter/ident.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/filter/query.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/filter/stream.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/filter/systemattrs.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/filter/wildcard.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/ignore/path.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/ignore/status.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/index/add.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/index/addall.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/index/bypath.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/index/cache.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/index/collision.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/index/crlf.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/index/filemodes.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/index/racy.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/index/splitindex.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/index/version.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/iterator/index.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/iterator/tree.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/iterator/workdir.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/mailmap/blame.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/mailmap/parsing.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/merge/annotated_commit.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/object/blob/filter.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/object/cache.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/object/lookup.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/object/lookupbypath.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/object/peel.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/object/tag/list.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/object/tag/read.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/object/tag/write.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/object/tree/read.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/object/tree/update.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/object/tree/walk.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/object/tree/write.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/odb/emptyobjects.c	/^git_repository *g_repo;$/;"	v	typeref:typename:git_repository *
g_repo	extern/libgit2/tests/online/badssl.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/online/clone.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/online/fetchhead.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/perf/helper__perf__do_merge.c	/^static git_repository * g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/branches/remote.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/create.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/delete.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/dup.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/list.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/lookup.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/namespaces.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/overwrite.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/pack.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/peel.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/races.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/read.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/reflog/drop.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/reflog/messages.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/reflog/reflog.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/rename.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/revparse.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/setter.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/transactions.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/refs/update.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/remote/insteadof.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/repo/pathspec.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/repo/shallow.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/status/renames.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/status/submodules.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/stress/diff.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/submodule/add.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/submodule/escape.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/submodule/init.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/submodule/inject_option.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/submodule/lookup.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/submodule/modify.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/submodule/repository_init.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/submodule/status.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/submodule/update.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/threads/basic.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/threads/refdb.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	extern/libgit2/tests/worktree/bare.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo_a	extern/libgit2/tests/network/remote/defaultbranch.c	/^static git_repository *g_repo_a, *g_repo_b;$/;"	v	typeref:typename:git_repository *	file:
g_repo_b	extern/libgit2/tests/network/remote/defaultbranch.c	/^static git_repository *g_repo_a, *g_repo_b;$/;"	v	typeref:typename:git_repository **	file:
g_repo_cloned	extern/libgit2/tests/clone/empty.c	/^static git_repository *g_repo_cloned;$/;"	v	typeref:typename:git_repository *	file:
g_root_tree	extern/libgit2/tests/object/lookupbypath.c	/^static git_tree *g_root_tree;$/;"	v	typeref:typename:git_tree *	file:
g_table	extern/libgit2/tests/core/strmap.c	/^static git_strmap *g_table;$/;"	v	typeref:typename:git_strmap *	file:
g_transient_count_dedup_leaks	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static unsigned int g_transient_count_dedup_leaks = 0; \/* number of unique leaks *\/$/;"	v	typeref:typename:unsigned int	file:
g_transient_count_total_leaks	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static unsigned int g_transient_count_total_leaks = 0; \/* number of total leaks *\/$/;"	v	typeref:typename:unsigned int	file:
g_transient_leaks_since_mark	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static bool g_transient_leaks_since_mark = false; \/* payload for hook *\/$/;"	v	typeref:typename:bool	file:
g_tx	extern/libgit2/tests/refs/transactions.c	/^static git_transaction *g_tx;$/;"	v	typeref:typename:git_transaction *	file:
g_typechange_empty	extern/libgit2/tests/checkout/typechange.c	/^static bool g_typechange_empty[] = {$/;"	v	typeref:typename:bool[]	file:
g_typechange_expected_conflicts	extern/libgit2/tests/checkout/typechange.c	/^static const int g_typechange_expected_conflicts[] = {$/;"	v	typeref:typename:const int[]	file:
g_typechange_expected_untracked	extern/libgit2/tests/checkout/typechange.c	/^static const int g_typechange_expected_untracked[] = {$/;"	v	typeref:typename:const int[]	file:
g_typechange_oids	extern/libgit2/tests/checkout/typechange.c	/^static const char *g_typechange_oids[] = {$/;"	v	typeref:typename:const char * []	file:
g_umask	extern/libgit2/tests/repo/template.c	/^static mode_t g_umask = 0;$/;"	v	typeref:typename:mode_t	file:
g_win32_stack_initialized	extern/libgit2/src/win32/w32_stack.c	/^static bool   g_win32_stack_initialized = false;$/;"	v	typeref:typename:bool	file:
g_win32_stack_process	extern/libgit2/src/win32/w32_stack.c	/^static HANDLE g_win32_stack_process = INVALID_HANDLE_VALUE;$/;"	v	typeref:typename:HANDLE	file:
gap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        gap() : end(0), size(0) {$/;"	f	struct:gap	file:
gap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct gap$/;"	s	file:
gbprop	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint8 gbprop;     \/* ucp_gbControl, etc. (grapheme break property) *\/$/;"	m	struct:__anonb814e4160608	typeref:typename:pcre_uint8
gen_bitlen	extern/libgit2/deps/zlib/trees.c	/^local void gen_bitlen(s, desc)$/;"	f
gen_codes	extern/libgit2/deps/zlib/trees.c	/^local void gen_codes (tree, max_code, bl_count)$/;"	f
gen_connect_req	extern/libgit2/src/transports/http.c	/^static int gen_connect_req(git_buf *buf, http_subtransport *t)$/;"	f	typeref:typename:int	file:
gen_nan	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN double gen_nan()$/;"	f	typeref:typename:PUGI__FN double
gen_pktline	extern/libgit2/src/transports/smart_protocol.c	/^static int gen_pktline(git_buf *buf, git_push *push)$/;"	f	typeref:typename:int	file:
gen_proto	extern/libgit2/src/transports/git.c	/^static int gen_proto(git_buf *request, const char *cmd, const char *url)$/;"	f	typeref:typename:int	file:
gen_proto	extern/libgit2/src/transports/ssh.c	/^static int gen_proto(git_buf *request, const char *cmd, const char *url)$/;"	f	typeref:typename:int	file:
gen_request	extern/libgit2/src/transports/http.c	/^static int gen_request($/;"	f	typeref:typename:int	file:
gen_trees_header	extern/libgit2/deps/zlib/trees.c	/^void gen_trees_header()$/;"	f	typeref:typename:void
generate_lm2_response	extern/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_lm2_response(ntlm_client *ntlm,$/;"	f	typeref:typename:bool	file:
generate_lm_hash	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool generate_lm_hash($/;"	f	typeref:typename:bool	file:
generate_lm_response	extern/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_lm_response(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
generate_nonce	extern/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_nonce(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
generate_ntlm2_challengehash	extern/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_ntlm2_challengehash($/;"	f	typeref:typename:bool	file:
generate_ntlm2_hash	extern/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_ntlm2_hash($/;"	f	typeref:typename:bool	file:
generate_ntlm2_response	extern/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_ntlm2_response(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
generate_ntlm_hash	extern/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_ntlm_hash($/;"	f	typeref:typename:bool	file:
generate_ntlm_response	extern/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_ntlm_response(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
generate_odd_parity	extern/libgit2/deps/ntlmclient/ntlm.c	/^static void generate_odd_parity(ntlm_des_block *block)$/;"	f	typeref:typename:void	file:
generate_timestamp	extern/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_timestamp(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
generator	extern/libgit2/tests/resources/userdiff/after/file.php	/^    protected $generator;$/;"	v	class:Faker\\UniqueGenerator
generator	extern/libgit2/tests/resources/userdiff/before/file.php	/^    protected $generator;$/;"	v	class:Faker\\UniqueGenerator
generator	extern/libgit2/tests/resources/userdiff/files/file.php	/^    protected $generator;$/;"	v	class:Faker\\UniqueGenerator
get	extern/NamedType/named_type_impl.hpp	/^    constexpr T& get() { return value_; }$/;"	f	class:fluent::NamedType	typeref:typename:T &
get	extern/NamedType/named_type_impl.hpp	/^    constexpr std::remove_reference_t<T> const& get() const {return value_; }$/;"	f	class:fluent::NamedType	typeref:typename:std::remove_reference_t<T> const &
get	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const xpath_variable* xpath_variable_set::get(const char_t* name) const$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN const xpath_variable *
get	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_variable* xpath_variable_set::get(const char_t* name)$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN xpath_variable *
get	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const char_t* xml_text::get() const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN const char_t *
get	extern/OpenXLSX/tests/catch/catch.hpp	/^        auto get() -> std::ostream& { return *m_oss; }$/;"	f	class:Catch::ReusableStringStream	typeref:typename:std::ostream &
get	newtype.hpp	/^  constexpr T const &get() const { return value; }$/;"	f	struct:abo::nt::newtype	typeref:typename:T const &
get	nt.hpp	/^  constexpr T &get() { return value_; }$/;"	f	class:nt::NamedType	typeref:typename:T &
get	nt.hpp	/^  constexpr std::remove_reference_t<T> const &get() const { return value_; }$/;"	f	class:nt::NamedType	typeref:typename:std::remove_reference_t<T> const &
getDescription	extern/OpenXLSX/tests/catch/catch_reporter_automake.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::AutomakeReporter	typeref:typename:std::string
getDescription	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::TAPReporter	typeref:typename:std::string
getDescription	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:std::string
getFullName	extern/NamedType/main.cpp	/^    auto getFullName = [](FirstName const& firstName, LastName const& lastName)$/;"	v	typeref:typename:auto
getHeight	extern/NamedType/main.cpp	/^    Meter getHeight() const { return height_; }$/;"	f	class:Rectangle	typeref:typename:Meter	file:
getPreferences	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^        ReporterPreferences getPreferences() const override {$/;"	f	struct:Catch::TAPReporter	typeref:typename:ReporterPreferences
getWidth	extern/NamedType/main.cpp	/^    Meter getWidth() const { return width_; }$/;"	f	class:Rectangle	typeref:typename:Meter	file:
get_allocation_granularity	extern/libgit2/src/win32/map.c	/^static DWORD get_allocation_granularity(void)$/;"	f	typeref:typename:DWORD	file:
get_allocator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<typename Object> inline xml_allocator& get_allocator(const Object* object) {$/;"	f	typeref:typename:xml_allocator &
get_assign	extern/libgit2/tests/attr/file.c	/^#define get_assign(/;"	d	file:
get_backend_for_use	extern/libgit2/src/config.c	/^static int get_backend_for_use(git_config_backend **out,$/;"	f	typeref:typename:int	file:
get_be32	extern/libgit2/src/hash/sha1/generic.c	/^#define get_be32(/;"	d	file:
get_boolean	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_variable::get_boolean() const$/;"	f	class:pugi::xpath_variable	typeref:typename:PUGI__FN bool
get_buf_ptr	extern/libgit2/tests/diff/submodules.c	/^#define get_buf_ptr(/;"	d	file:
get_buffer_encoding	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_encoding get_buffer_encoding(xml_encoding encoding, const void* contents, size_/;"	f	typeref:typename:PUGI__FN xml_encoding
get_chr_property_list	extern/libgit2/deps/pcre/pcre_compile.c	/^get_chr_property_list(const pcre_uchar *code, BOOL utf,$/;"	f	typeref:typename:const pcre_uchar *	file:
get_class_iterator_size	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static int get_class_iterator_size(pcre_uchar *cc)$/;"	f	typeref:typename:int	file:
get_commit_index	extern/libgit2/tests/revwalk/basic.c	/^static int get_commit_index(git_oid *raw_oid)$/;"	f	typeref:typename:int	file:
get_crc_table	extern/libgit2/deps/zlib/crc32.c	/^const z_crc_t FAR * ZEXPORT get_crc_table()$/;"	f	typeref:typename:const z_crc_t FAR * ZEXPORT
get_crc_table	extern/libgit2/deps/zlib/zconf.h	/^#  define get_crc_table /;"	d
get_delta	extern/libgit2/src/pack-objects.c	/^static int get_delta(void **out, git_odb *odb, git_pobject *po)$/;"	f	typeref:typename:int	file:
get_delta_base	extern/libgit2/src/pack.c	/^git_off_t get_delta_base($/;"	f	typeref:typename:git_off_t
get_document	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<typename Object> inline xml_document_struct& get_document(const Object* object) {$/;"	f	typeref:typename:xml_document_struct &
get_entry	extern/libgit2/src/config.c	/^static int get_entry($/;"	f	typeref:typename:int	file:
get_file_size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_status get_file_size(FILE* file, size_t& out_result) {$/;"	f	typeref:typename:PUGI__FN xml_parse_status
get_filename	extern/libgit2/tests/checkout/icase.c	/^static char *get_filename(const char *in)$/;"	f	typeref:typename:char *	file:
get_first_set	extern/libgit2/deps/pcre/pcre_get.c	/^get_first_set(const pcre *code, const char *stringname, int *ovector,$/;"	f	typeref:typename:int	file:
get_framesize	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static int get_framesize(compiler_common *common, pcre_uchar *cc, pcre_uchar *ccend, BOOL recurs/;"	f	typeref:typename:int	file:
get_func_line	extern/libgit2/src/xdiff/xemit.c	/^static long get_func_line(xdfenv_t *xe, xdemitconf_t const *xecfg,$/;"	f	typeref:typename:long	file:
get_indent	extern/libgit2/src/xdiff/xdiffi.c	/^static int get_indent(xrecord_t *rec)$/;"	f	typeref:typename:int	file:
get_internal_ignores	extern/libgit2/src/ignore.c	/^static int get_internal_ignores(git_attr_file **out, git_repository *repo)$/;"	f	typeref:typename:int	file:
get_item	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		item_t* get_item(const void* key)$/;"	f	class:compact_hash_table	typeref:typename:item_t *	file:
get_iterator_parameters	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *get_iterator_parameters(compiler_common *common, pcre_uchar *cc,/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
get_latin1_7bit_prefix_length	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN size_t get_latin1_7bit_prefix_length(const uint8_t* data, size_t size) {$/;"	f	typeref:typename:PUGI__FN size_t
get_memory_allocation_function	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN allocation_function PUGIXML_FUNCTION get_memory_allocation_function() {$/;"	f	namespace:pugi	typeref:typename:PUGI__FN allocation_function PUGIXML_FUNCTION
get_memory_deallocation_function	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN deallocation_function PUGIXML_FUNCTION get_memory_deallocation_function() {$/;"	f	namespace:pugi	typeref:typename:PUGI__FN deallocation_function PUGIXML_FUNCTION
get_mutable_buffer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool get_mutable_buffer(char_t*& out_buffer, size_t& out_length, const void* conten/;"	f	typeref:typename:PUGI__FN bool
get_name	extern/libgit2/src/describe.c	/^static int get_name(const char *refname, void *payload)$/;"	f	typeref:typename:int	file:
get_name_data	extern/libgit2/src/describe.c	/^struct get_name_data$/;"	s	file:
get_next	extern/libgit2/src/revwalk.h	/^	int (*get_next)(git_commit_list_node **, git_revwalk *);$/;"	m	struct:git_revwalk	typeref:typename:int (*)(git_commit_list_node **,git_revwalk *)
get_node_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const xpath_node_set& xpath_variable::get_node_set() const$/;"	f	class:pugi::xpath_variable	typeref:typename:PUGI__FN const xpath_node_set &
get_num_columns	extern/OpenXLSX/benchmark/table_printer.h	/^    int TablePrinter::get_num_columns() const {$/;"	f	class:bprinter::TablePrinter	typeref:typename:int
get_number	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN double xpath_variable::get_number() const$/;"	f	class:pugi::xpath_variable	typeref:typename:PUGI__FN double
get_one_status	extern/libgit2/src/status.c	/^static int get_one_status(const char *path, unsigned int status, void *data)$/;"	f	typeref:typename:int	file:
get_one_test_cases	extern/libgit2/tests/attr/repo.c	/^static struct attr_expected get_one_test_cases[] = {$/;"	v	typeref:struct:attr_expected[]	file:
get_optional_config	extern/libgit2/src/remote.c	/^static int get_optional_config($/;"	f	typeref:typename:int	file:
get_othercase_range	extern/libgit2/deps/pcre/pcre_compile.c	/^get_othercase_range(pcre_uint32 *cptr, pcre_uint32 d, pcre_uint32 *ocptr,$/;"	f	typeref:typename:int	file:
get_page	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xml_memory_page* get_page() const$/;"	f	class:compact_header	typeref:typename:xml_memory_page *	file:
get_page_size	extern/libgit2/src/win32/map.c	/^static DWORD get_page_size(void)$/;"	f	typeref:typename:DWORD	file:
get_passwd_home	extern/libgit2/src/sysdir.c	/^static int get_passwd_home(git_buf *out, uid_t uid)$/;"	f	typeref:typename:int	file:
get_private_data_copy_length	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE int get_private_data_copy_length(compiler_common *common, pcre_uchar *cc, pc/;"	f	typeref:typename:SLJIT_INLINE int	file:
get_property	extern/libgit2/src/hash/sha1/win32.h	/^	hash_win32_cng_get_property_fn get_property;$/;"	m	struct:hash_cng_prov	typeref:typename:hash_win32_cng_get_property_fn
get_repeat_base	extern/libgit2/deps/pcre/pcre_compile.c	/^get_repeat_base(pcre_uchar c)$/;"	f	typeref:typename:pcre_uchar	file:
get_revision	extern/libgit2/src/revwalk.c	/^static int get_revision(git_commit_list_node **out, git_revwalk *walk, git_commit_list **list)$/;"	f	typeref:typename:int	file:
get_rule	extern/libgit2/tests/attr/file.c	/^#define get_rule(/;"	d	file:
get_strconv_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN strconv_attribute_t get_strconv_attribute(unsigned int optmask) {$/;"	f	typeref:typename:PUGI__FN strconv_attribute_t
get_strconv_pcdata	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN strconv_pcdata_t get_strconv_pcdata(unsigned int optmask) {$/;"	f	typeref:typename:PUGI__FN strconv_pcdata_t
get_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const char_t* xpath_variable::get_string() const$/;"	f	class:pugi::xpath_variable	typeref:typename:PUGI__FN const char_t *
get_submodule_status	extern/libgit2/tests/submodule/submodule_helpers.c	/^unsigned int get_submodule_status(git_repository *repo, const char *name)$/;"	f	typeref:typename:unsigned int
get_table_width	extern/OpenXLSX/benchmark/table_printer.h	/^    int TablePrinter::get_table_width() const {$/;"	f	class:bprinter::TablePrinter	typeref:typename:int
get_temp_file	extern/libgit2/src/transports/winhttp.c	/^static int get_temp_file(LPWSTR buffer, DWORD buffer_len_cch)$/;"	f	typeref:typename:int	file:
get_terminal	extern/libgit2/src/refs.c	/^static int get_terminal(git_reference **out, git_repository *repo, const char *ref_name, int nes/;"	f	typeref:typename:int	file:
get_ucp	extern/libgit2/deps/pcre/pcre_compile.c	/^get_ucp(const pcre_uchar **ptrptr, BOOL *negptr, unsigned int *ptypeptr,$/;"	f	typeref:typename:BOOL	file:
get_ucpname	extern/libgit2/deps/pcre/pcre_printint.c	/^get_ucpname(unsigned int ptype, unsigned int pvalue)$/;"	f	typeref:typename:const char *	file:
get_url_base	extern/libgit2/src/submodule.c	/^static int get_url_base(git_buf *url, git_repository *repo)$/;"	f	typeref:typename:int	file:
get_valid_length	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	f	typeref:typename:PUGI__FN size_t
get_valid_length	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN size_t get_valid_length(const char_t* data, size_t length) {$/;"	f	typeref:typename:PUGI__FN size_t
get_value	extern/libgit2/src/submodule.c	/^static int get_value(const char **out, git_config *cfg, git_buf *buf, const char *name, const ch/;"	f	typeref:typename:int	file:
get_value_bool	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool get_value_bool(const char_t* value) {$/;"	f	typeref:typename:PUGI__FN bool
get_value_double	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN double get_value_double(const char_t* value) {$/;"	f	typeref:typename:PUGI__FN double
get_value_float	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN float get_value_float(const char_t* value) {$/;"	f	typeref:typename:PUGI__FN float
get_value_int	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN int get_value_int(const char_t* value) {$/;"	f	typeref:typename:PUGI__FN int
get_value_llong	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN long long get_value_llong(const char_t* value) {$/;"	f	typeref:typename:PUGI__FN long long
get_value_uint	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN unsigned int get_value_uint(const char_t* value) {$/;"	f	typeref:typename:PUGI__FN unsigned int
get_value_ullong	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN unsigned long long get_value_ullong(const char_t* value) {$/;"	f	typeref:typename:PUGI__FN unsigned long long
get_variable_scratch	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool get_variable_scratch(char_t (&buffer)[32], xpath_variable_set* set, const char_t*/;"	f	typeref:typename:PUGI__FN bool
get_verb	extern/libgit2/src/transports/http.c	/^static const char *get_verb = "GET";$/;"	v	typeref:typename:const char *	file:
get_verb	extern/libgit2/src/transports/winhttp.c	/^static const wchar_t *get_verb = L"GET";$/;"	v	typeref:typename:const wchar_t *	file:
get_wchar_encoding	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_encoding get_wchar_encoding() {$/;"	f	typeref:typename:PUGI__FN xml_encoding
get_worktree_file_path	extern/libgit2/src/repository.c	/^static int get_worktree_file_path(git_buf *out, git_repository *repo, const char *worktree, cons/;"	f	typeref:typename:int	file:
get_write_encoding	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_encoding get_write_encoding(xml_encoding encoding) {$/;"	f	typeref:typename:PUGI__FN xml_encoding
get_write_native_encoding	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_encoding get_write_native_encoding() {$/;"	f	typeref:typename:PUGI__FN xml_encoding
getfinalpath_w	extern/libgit2/src/win32/posix_w32.c	/^static int getfinalpath_w($/;"	f	typeref:typename:int	file:
getucd	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *getucd;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
gf2_matrix_square	extern/libgit2/deps/zlib/crc32.c	/^local void gf2_matrix_square(square, mat)$/;"	f
gf2_matrix_times	extern/libgit2/deps/zlib/crc32.c	/^local unsigned long gf2_matrix_times(mat, vec)$/;"	f
gid	extern/libgit2/include/git2/index.h	/^	uint32_t gid;$/;"	m	struct:git_index_entry	typeref:typename:uint32_t
gid	extern/libgit2/src/index.c	/^	uint32_t gid;$/;"	m	struct:entry_long	typeref:typename:uint32_t	file:
gid	extern/libgit2/src/index.c	/^	uint32_t gid;$/;"	m	struct:entry_short	typeref:typename:uint32_t	file:
git	git.cpp	/^namespace git {$/;"	n	file:
git	git.hpp	/^namespace git {$/;"	n
git2	extern/libgit2/src/CMakeLists.txt	/^ADD_LIBRARY(git2 ${WIN_RC} ${LIBGIT2_OBJECTS})$/;"	t
git2internal	extern/libgit2/src/CMakeLists.txt	/^ADD_LIBRARY(git2internal OBJECT ${LIBGIT2_SOURCES})$/;"	t
git__DIR	extern/libgit2/src/win32/dir.h	/^} git__DIR;$/;"	t	typeref:struct:__anon949726940108
git___compare_and_swap	extern/libgit2/src/thread-utils.h	/^GIT_INLINE(void *) git___compare_and_swap($/;"	f	typeref:typename:void *
git___swap	extern/libgit2/src/thread-utils.h	/^GIT_INLINE(volatile void *) git___swap($/;"	f	typeref:typename:volatile void *
git__add_sizet_overflow	extern/libgit2/src/integer.h	/^#  define git__add_sizet_overflow(/;"	d
git__add_sizet_overflow	extern/libgit2/src/integer.h	/^# define git__add_sizet_overflow(/;"	d
git__add_sizet_overflow	extern/libgit2/src/integer.h	/^GIT_INLINE(bool) git__add_sizet_overflow(size_t *out, size_t one, size_t two)$/;"	f	typeref:typename:bool
git__allocator	extern/libgit2/src/alloc.c	/^git_allocator git__allocator;$/;"	v	typeref:typename:git_allocator
git__bsearch	extern/libgit2/src/util.c	/^int git__bsearch($/;"	f	typeref:typename:int
git__bsearch_r	extern/libgit2/src/util.c	/^int git__bsearch_r($/;"	f	typeref:typename:int
git__calloc	extern/libgit2/src/alloc.h	/^#define git__calloc(/;"	d
git__closedir	extern/libgit2/src/win32/dir.c	/^int git__closedir(git__DIR *d)$/;"	f	typeref:typename:int
git__compare_and_swap	extern/libgit2/src/thread-utils.h	/^#define git__compare_and_swap(/;"	d
git__date_parse	extern/libgit2/src/date.c	/^int git__date_parse(git_time_t *out, const char *date)$/;"	f	typeref:typename:int
git__date_rfc2822_fmt	extern/libgit2/src/date.c	/^int git__date_rfc2822_fmt(char *out, size_t len, const git_time *date)$/;"	f	typeref:typename:int
git__dirent	extern/libgit2/src/win32/dir.h	/^struct git__dirent {$/;"	s
git__free	extern/libgit2/src/alloc.h	/^#define git__free /;"	d
git__free_tls_data	extern/libgit2/src/global.c	/^void git__free_tls_data(void)$/;"	f	typeref:typename:void
git__fromhex	extern/libgit2/src/util.h	/^GIT_INLINE(int) git__fromhex(char h)$/;"	f	typeref:typename:int
git__getenv	extern/libgit2/src/util.c	/^int git__getenv(git_buf *out, const char *name)$/;"	f	typeref:typename:int
git__global_state	extern/libgit2/src/global.c	/^git_global_st *git__global_state(void)$/;"	f	typeref:typename:git_global_st *
git__global_state_cleanup	extern/libgit2/src/global.c	/^static void git__global_state_cleanup(git_global_st *st)$/;"	f	typeref:typename:void	file:
git__hash	extern/libgit2/src/util.c	/^uint32_t git__hash(const void *key, int len, uint32_t seed)$/;"	f	typeref:typename:uint32_t
git__hash	extern/libgit2/src/util.c	/^uint32_t git__hash(const void *key, int len, unsigned int seed)$/;"	f	typeref:typename:uint32_t
git__hexdump	extern/libgit2/src/util.c	/^void git__hexdump(const char *buffer, size_t len)$/;"	f	typeref:typename:void
git__init_callbacks	extern/libgit2/src/global.c	/^static git_global_init_fn git__init_callbacks[] = {$/;"	v	typeref:typename:git_global_init_fn[]	file:
git__init_structure	extern/libgit2/src/common.h	/^GIT_INLINE(void) git__init_structure(void *structure, size_t len, unsigned int version)$/;"	f	typeref:typename:void
git__is_int	extern/libgit2/src/integer.h	/^GIT_INLINE(int) git__is_int(long long p)$/;"	f	typeref:typename:int
git__is_sizet	extern/libgit2/src/integer.h	/^GIT_INLINE(int) git__is_sizet(git_off_t p)$/;"	f	typeref:typename:int
git__is_ssizet	extern/libgit2/src/integer.h	/^GIT_INLINE(int) git__is_ssizet(size_t p)$/;"	f	typeref:typename:int
git__is_uint32	extern/libgit2/src/integer.h	/^GIT_INLINE(int) git__is_uint32(size_t p)$/;"	f	typeref:typename:int
git__is_ulong	extern/libgit2/src/integer.h	/^GIT_INLINE(int) git__is_ulong(git_off_t p)$/;"	f	typeref:typename:int
git__isalpha	extern/libgit2/src/util.h	/^GIT_INLINE(bool) git__isalpha(int c)$/;"	f	typeref:typename:bool
git__isdigit	extern/libgit2/src/util.h	/^GIT_INLINE(bool) git__isdigit(int c)$/;"	f	typeref:typename:bool
git__ishex	extern/libgit2/src/util.h	/^GIT_INLINE(int) git__ishex(const char *str)$/;"	f	typeref:typename:int
git__isspace	extern/libgit2/src/util.h	/^GIT_INLINE(bool) git__isspace(int c)$/;"	f	typeref:typename:bool
git__isspace_nonlf	extern/libgit2/src/util.h	/^GIT_INLINE(bool) git__isspace_nonlf(int c)$/;"	f	typeref:typename:bool
git__isupper	extern/libgit2/src/util.h	/^GIT_INLINE(bool) git__isupper(int c)$/;"	f	typeref:typename:bool
git__iswildcard	extern/libgit2/src/util.h	/^GIT_INLINE(bool) git__iswildcard(int c)$/;"	f	typeref:typename:bool
git__isxdigit	extern/libgit2/src/util.h	/^GIT_INLINE(bool) git__isxdigit(int c)$/;"	f	typeref:typename:bool
git__linenlen	extern/libgit2/src/util.c	/^size_t git__linenlen(const char *buffer, size_t buffer_len)$/;"	f	typeref:typename:size_t
git__malloc	extern/libgit2/src/alloc.h	/^#define git__malloc(/;"	d
git__mallocarray	extern/libgit2/src/alloc.h	/^#define git__mallocarray(/;"	d
git__memcmp4	extern/libgit2/src/pack.c	/^static int git__memcmp4(const void *a, const void *b) {$/;"	f	typeref:typename:int	file:
git__memmem	extern/libgit2/src/util.c	/^const void * git__memmem(const void *haystack, size_t haystacklen,$/;"	f	typeref:typename:const void *
git__memrchr	extern/libgit2/src/util.h	/^GIT_INLINE(const void *) git__memrchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:const void *
git__memzero	extern/libgit2/src/util.h	/^GIT_INLINE(void) git__memzero(void *data, size_t size)$/;"	f	typeref:typename:void
git__mmap_alignment	extern/libgit2/src/posix.c	/^int git__mmap_alignment(size_t *alignment)$/;"	f	typeref:typename:int
git__mmap_alignment	extern/libgit2/src/unix/map.c	/^int git__mmap_alignment(size_t *alignment)$/;"	f	typeref:typename:int
git__mmap_alignment	extern/libgit2/src/win32/map.c	/^int git__mmap_alignment(size_t *page_size)$/;"	f	typeref:typename:int
git__multiply_sizet_overflow	extern/libgit2/src/integer.h	/^#  define git__multiply_sizet_overflow(/;"	d
git__multiply_sizet_overflow	extern/libgit2/src/integer.h	/^# define git__multiply_sizet_overflow(/;"	d
git__multiply_sizet_overflow	extern/libgit2/src/integer.h	/^GIT_INLINE(bool) git__multiply_sizet_overflow(size_t *out, size_t one, size_t two)$/;"	f	typeref:typename:bool
git__mwindow_mutex	extern/libgit2/src/global.c	/^git_mutex git__mwindow_mutex;$/;"	v	typeref:typename:git_mutex
git__n_inits	extern/libgit2/src/global.c	/^static git_atomic git__n_inits;$/;"	v	typeref:typename:git_atomic	file:
git__n_shutdown_callbacks	extern/libgit2/src/global.c	/^static git_atomic git__n_shutdown_callbacks;$/;"	v	typeref:typename:git_atomic	file:
git__next_line	extern/libgit2/src/util.h	/^GIT_INLINE(const char *) git__next_line(const char *s)$/;"	f	typeref:typename:const char *
git__on_shutdown	extern/libgit2/src/global.c	/^void git__on_shutdown(git_global_shutdown_fn callback)$/;"	f	typeref:typename:void
git__opendir	extern/libgit2/src/win32/dir.c	/^git__DIR *git__opendir(const char *dir)$/;"	f	typeref:typename:git__DIR *
git__pack_cache	extern/libgit2/src/mwindow.c	/^git_strmap *git__pack_cache = NULL;$/;"	v	typeref:typename:git_strmap *
git__page_size	extern/libgit2/src/posix.c	/^int git__page_size(size_t *page_size)$/;"	f	typeref:typename:int
git__page_size	extern/libgit2/src/unix/map.c	/^int git__page_size(size_t *page_size)$/;"	f	typeref:typename:int
git__page_size	extern/libgit2/src/win32/map.c	/^int git__page_size(size_t *page_size)$/;"	f	typeref:typename:int
git__parse_bool	extern/libgit2/src/util.c	/^int git__parse_bool(int *out, const char *value)$/;"	f	typeref:typename:int
git__percent_decode	extern/libgit2/src/path.c	/^int git__percent_decode(git_buf *decoded_out, const char *input)$/;"	f	typeref:typename:int
git__prefixcmp	extern/libgit2/src/util.c	/^int git__prefixcmp(const char *str, const char *prefix)$/;"	f	typeref:typename:int
git__prefixcmp_icase	extern/libgit2/src/util.c	/^int git__prefixcmp_icase(const char *str, const char *prefix)$/;"	f	typeref:typename:int
git__prefixncmp	extern/libgit2/src/util.c	/^int git__prefixncmp(const char *str, size_t str_n, const char *prefix)$/;"	f	typeref:typename:int
git__prefixncmp_icase	extern/libgit2/src/util.c	/^int git__prefixncmp_icase(const char *str, size_t str_n, const char *prefix)$/;"	f	typeref:typename:int
git__qsort_r	extern/libgit2/src/util.c	/^void git__qsort_r($/;"	f	typeref:typename:void
git__qsort_r_glue	extern/libgit2/src/util.c	/^} git__qsort_r_glue;$/;"	t	typeref:struct:__anon8a0c964c0108	file:
git__qsort_r_glue_cmp	extern/libgit2/src/util.c	/^static int GIT_STDLIB_CALL git__qsort_r_glue_cmp($/;"	f	typeref:typename:int GIT_STDLIB_CALL	file:
git__readdir	extern/libgit2/src/win32/dir.c	/^struct git__dirent *git__readdir(git__DIR *d)$/;"	f	typeref:struct:git__dirent *
git__readdir_ext	extern/libgit2/src/win32/dir.c	/^int git__readdir_ext($/;"	f	typeref:typename:int
git__realloc	extern/libgit2/src/alloc.h	/^#define git__realloc(/;"	d
git__reallocarray	extern/libgit2/src/alloc.h	/^#define git__reallocarray(/;"	d
git__rewinddir	extern/libgit2/src/win32/dir.c	/^void git__rewinddir(git__DIR *d)$/;"	f	typeref:typename:void
git__rotl	extern/libgit2/src/util.h	/^#	define git__rotl(/;"	d
git__set_errno	extern/libgit2/src/win32/utf-conv.c	/^GIT_INLINE(void) git__set_errno(void)$/;"	f	typeref:typename:void
git__shutdown_callbacks	extern/libgit2/src/global.c	/^static git_global_shutdown_fn git__shutdown_callbacks[ARRAY_SIZE(git__init_callbacks)];$/;"	v	typeref:typename:git_global_shutdown_fn[]	file:
git__signum	extern/libgit2/src/util.h	/^GIT_INLINE(int) git__signum(int val)$/;"	f	typeref:typename:int
git__size_t_bitmask	extern/libgit2/src/util.h	/^GIT_INLINE(size_t) git__size_t_bitmask(size_t v)$/;"	f	typeref:typename:size_t
git__size_t_powerof2	extern/libgit2/src/util.h	/^GIT_INLINE(size_t) git__size_t_powerof2(size_t v)$/;"	f	typeref:typename:size_t
git__sort_r_cmp	extern/libgit2/src/util.h	/^typedef int (*git__sort_r_cmp)(const void *a, const void *b, void *payload);$/;"	t	typeref:typename:int (*)(const void * a,const void * b,void * payload)
git__ssl_ciphers	extern/libgit2/src/global.c	/^char *git__ssl_ciphers;$/;"	v	typeref:typename:char *
git__ssl_conf	extern/libgit2/src/streams/mbedtls.c	/^static mbedtls_ssl_config *git__ssl_conf;$/;"	v	typeref:typename:mbedtls_ssl_config *	file:
git__ssl_ctx	extern/libgit2/src/streams/openssl.c	/^SSL_CTX *git__ssl_ctx;$/;"	v	typeref:typename:SSL_CTX *
git__strcasecmp	extern/libgit2/src/util.c	/^int git__strcasecmp(const char *a, const char *b)$/;"	f	typeref:typename:int
git__strcasecmp_cb	extern/libgit2/src/util.c	/^int git__strcasecmp_cb(const void *a, const void *b)$/;"	f	typeref:typename:int
git__strcasesort_cmp	extern/libgit2/src/util.c	/^int git__strcasesort_cmp(const char *a, const char *b)$/;"	f	typeref:typename:int
git__strcmp	extern/libgit2/src/util.h	/^#define git__strcmp /;"	d
git__strcmp_cb	extern/libgit2/src/util.c	/^int git__strcmp_cb(const void *a, const void *b)$/;"	f	typeref:typename:int
git__strdup	extern/libgit2/src/alloc.h	/^#define git__strdup(/;"	d
git__strncasecmp	extern/libgit2/src/util.c	/^int git__strncasecmp(const char *a, const char *b, size_t sz)$/;"	f	typeref:typename:int
git__strncmp	extern/libgit2/src/util.h	/^#define git__strncmp /;"	d
git__strndup	extern/libgit2/src/alloc.h	/^#define git__strndup(/;"	d
git__strntol32	extern/libgit2/src/util.c	/^int git__strntol32(int32_t *result, const char *nptr, size_t nptr_len, const char **endptr, int /;"	f	typeref:typename:int
git__strntol64	extern/libgit2/src/util.c	/^int git__strntol64(int64_t *result, const char *nptr, size_t nptr_len, const char **endptr, int /;"	f	typeref:typename:int
git__strntolower	extern/libgit2/src/util.c	/^void git__strntolower(char *str, size_t len)$/;"	f	typeref:typename:void
git__strsep	extern/libgit2/src/util.c	/^char *git__strsep(char **end, const char *sep)$/;"	f	typeref:typename:char *
git__strtok	extern/libgit2/src/util.c	/^char *git__strtok(char **end, const char *sep)$/;"	f	typeref:typename:char *
git__strtolower	extern/libgit2/src/util.c	/^void git__strtolower(char *str)$/;"	f	typeref:typename:void
git__substrdup	extern/libgit2/src/alloc.h	/^#define git__substrdup(/;"	d
git__suffixcmp	extern/libgit2/src/util.c	/^int git__suffixcmp(const char *str, const char *suffix)$/;"	f	typeref:typename:int
git__swap	extern/libgit2/src/thread-utils.h	/^#define git__swap(/;"	d
git__timer	extern/libgit2/src/util.h	/^GIT_INLINE(double) git__timer(void)$/;"	f	typeref:typename:double
git__tolower	extern/libgit2/src/util.h	/^# define git__tolower(/;"	d
git__tolower	extern/libgit2/src/util.h	/^GIT_INLINE(int) git__tolower(int c)$/;"	f	typeref:typename:int
git__tsort	extern/libgit2/src/tsort.c	/^void git__tsort(void **dst, size_t size, git__tsort_cmp cmp)$/;"	f	typeref:typename:void
git__tsort_cmp	extern/libgit2/src/util.h	/^typedef int (*git__tsort_cmp)(const void *a, const void *b);$/;"	t	typeref:typename:int (*)(const void * a,const void * b)
git__tsort_r	extern/libgit2/src/tsort.c	/^void git__tsort_r($/;"	f	typeref:typename:void
git__unescape	extern/libgit2/src/util.c	/^size_t git__unescape(char *str)$/;"	f	typeref:typename:size_t
git__user_agent	extern/libgit2/src/global.c	/^char *git__user_agent;$/;"	v	typeref:typename:char *
git__utf16_to_8	extern/libgit2/src/win32/utf-conv.c	/^int git__utf16_to_8(char *dest, size_t dest_size, const wchar_t *src)$/;"	f	typeref:typename:int
git__utf16_to_8_alloc	extern/libgit2/src/win32/utf-conv.c	/^int git__utf16_to_8_alloc(char **dest, const wchar_t *src)$/;"	f	typeref:typename:int
git__utf8_charlen	extern/libgit2/src/util.c	/^int git__utf8_charlen(const uint8_t *str, size_t str_len)$/;"	f	typeref:typename:int
git__utf8_iterate	extern/libgit2/src/util.c	/^int git__utf8_iterate(const uint8_t *str, int str_len, int32_t *dst)$/;"	f	typeref:typename:int
git__utf8_to_16	extern/libgit2/src/win32/utf-conv.c	/^int git__utf8_to_16(wchar_t *dest, size_t dest_size, const char *src)$/;"	f	typeref:typename:int
git__utf8_to_16_alloc	extern/libgit2/src/win32/utf-conv.c	/^int git__utf8_to_16_alloc(wchar_t **dest, const char *src)$/;"	f	typeref:typename:int
git__utf8_valid_buf_length	extern/libgit2/src/util.c	/^size_t git__utf8_valid_buf_length(const uint8_t *str, size_t str_len)$/;"	f	typeref:typename:size_t
git_ack_status	extern/libgit2/src/transports/smart.h	/^enum git_ack_status {$/;"	g
git_allocator	extern/libgit2/include/git2/sys/alloc.h	/^} git_allocator;$/;"	t	typeref:struct:__anon6ee27a8d0108
git_allocator_global_init	extern/libgit2/src/alloc.c	/^int git_allocator_global_init(void)$/;"	f	typeref:typename:int
git_allocator_setup	extern/libgit2/src/alloc.c	/^int git_allocator_setup(git_allocator *allocator)$/;"	f	typeref:typename:int
git_annotated_commit	extern/libgit2/include/git2/types.h	/^typedef struct git_annotated_commit git_annotated_commit;$/;"	t	typeref:struct:git_annotated_commit
git_annotated_commit	extern/libgit2/src/annotated_commit.h	/^struct git_annotated_commit {$/;"	s
git_annotated_commit_free	extern/libgit2/src/annotated_commit.c	/^void git_annotated_commit_free(git_annotated_commit *annotated_commit)$/;"	f	typeref:typename:void
git_annotated_commit_from_commit	extern/libgit2/src/annotated_commit.c	/^int git_annotated_commit_from_commit($/;"	f	typeref:typename:int
git_annotated_commit_from_fetchhead	extern/libgit2/src/annotated_commit.c	/^int git_annotated_commit_from_fetchhead($/;"	f	typeref:typename:int
git_annotated_commit_from_head	extern/libgit2/src/annotated_commit.c	/^int git_annotated_commit_from_head($/;"	f	typeref:typename:int
git_annotated_commit_from_ref	extern/libgit2/src/annotated_commit.c	/^int git_annotated_commit_from_ref($/;"	f	typeref:typename:int
git_annotated_commit_from_revspec	extern/libgit2/src/annotated_commit.c	/^int git_annotated_commit_from_revspec($/;"	f	typeref:typename:int
git_annotated_commit_id	extern/libgit2/src/annotated_commit.c	/^const git_oid *git_annotated_commit_id($/;"	f	typeref:typename:const git_oid *
git_annotated_commit_lookup	extern/libgit2/src/annotated_commit.c	/^int git_annotated_commit_lookup($/;"	f	typeref:typename:int
git_annotated_commit_ref	extern/libgit2/src/annotated_commit.c	/^const char *git_annotated_commit_ref($/;"	f	typeref:typename:const char *
git_annotated_commit_t	extern/libgit2/src/annotated_commit.h	/^} git_annotated_commit_t;$/;"	t	typeref:enum:__anon4b0087f90103
git_apply	extern/libgit2/src/apply.c	/^int git_apply($/;"	f	typeref:typename:int
git_apply__patch	extern/libgit2/src/apply.c	/^int git_apply__patch($/;"	f	typeref:typename:int
git_apply__to_index	extern/libgit2/src/apply.c	/^static int git_apply__to_index($/;"	f	typeref:typename:int	file:
git_apply__to_workdir	extern/libgit2/src/apply.c	/^static int git_apply__to_workdir($/;"	f	typeref:typename:int	file:
git_apply_delta_cb	extern/libgit2/include/git2/apply.h	/^typedef int GIT_CALLBACK(git_apply_delta_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff_delta * delta,void * payload)
git_apply_hunk_cb	extern/libgit2/include/git2/apply.h	/^typedef int GIT_CALLBACK(git_apply_hunk_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff_hunk * hunk,void * payload)
git_apply_location_t	extern/libgit2/include/git2/apply.h	/^} git_apply_location_t;$/;"	t	typeref:enum:__anondc670afa0203
git_apply_options	extern/libgit2/include/git2/apply.h	/^} git_apply_options;$/;"	t	typeref:struct:__anondc670afa0108
git_apply_options_init	extern/libgit2/src/apply.c	/^int git_apply_options_init(git_apply_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_apply_to_tree	extern/libgit2/src/apply.c	/^int git_apply_to_tree($/;"	f	typeref:typename:int
git_array__search	extern/libgit2/src/array.h	/^GIT_INLINE(int) git_array__search($/;"	f	typeref:typename:int
git_array_alloc	extern/libgit2/src/array.h	/^#define git_array_alloc(/;"	d
git_array_clear	extern/libgit2/src/array.h	/^#define git_array_clear(/;"	d
git_array_foreach	extern/libgit2/src/array.h	/^#define git_array_foreach(/;"	d
git_array_generic_t	extern/libgit2/src/array.h	/^typedef git_array_t(char) git_array_generic_t;$/;"	t
git_array_get	extern/libgit2/src/array.h	/^#define git_array_get(/;"	d
git_array_grow	extern/libgit2/src/array.h	/^GIT_INLINE(void *) git_array_grow(void *_a, size_t item_size)$/;"	f	typeref:typename:void *
git_array_init	extern/libgit2/src/array.h	/^#define git_array_init(/;"	d
git_array_init_to_size	extern/libgit2/src/array.h	/^#define git_array_init_to_size(/;"	d
git_array_last	extern/libgit2/src/array.h	/^#define git_array_last(/;"	d
git_array_oid_t	extern/libgit2/src/oidarray.h	/^typedef git_array_t(git_oid) git_array_oid_t;$/;"	t
git_array_pop	extern/libgit2/src/array.h	/^#define git_array_pop(/;"	d
git_array_search	extern/libgit2/src/array.h	/^#define git_array_search(/;"	d
git_array_size	extern/libgit2/src/array.h	/^#define git_array_size(/;"	d
git_array_t	extern/libgit2/src/array.h	/^#define git_array_t(/;"	d
git_array_trailer_t	extern/libgit2/src/trailer.c	/^typedef git_array_t(git_message_trailer) git_array_trailer_t;$/;"	t	file:
git_array_valid_index	extern/libgit2/src/array.h	/^#define git_array_valid_index(/;"	d
git_atomic	extern/libgit2/src/thread-utils.h	/^} git_atomic;$/;"	t	typeref:struct:__anon834bf2e90108
git_atomic64	extern/libgit2/src/thread-utils.h	/^} git_atomic64;$/;"	t	typeref:struct:__anon834bf2e90208
git_atomic64_add	extern/libgit2/src/thread-utils.h	/^GIT_INLINE(int64_t) git_atomic64_add(git_atomic64 *a, int64_t addend)$/;"	f	typeref:typename:int64_t
git_atomic_add	extern/libgit2/src/thread-utils.h	/^GIT_INLINE(int) git_atomic_add(git_atomic *a, int32_t addend)$/;"	f	typeref:typename:int
git_atomic_dec	extern/libgit2/src/thread-utils.h	/^GIT_INLINE(int) git_atomic_dec(git_atomic *a)$/;"	f	typeref:typename:int
git_atomic_get	extern/libgit2/src/thread-utils.h	/^GIT_INLINE(int) git_atomic_get(git_atomic *a)$/;"	f	typeref:typename:int
git_atomic_inc	extern/libgit2/src/thread-utils.h	/^GIT_INLINE(int) git_atomic_inc(git_atomic *a)$/;"	f	typeref:typename:int
git_atomic_set	extern/libgit2/src/thread-utils.h	/^GIT_INLINE(void) git_atomic_set(git_atomic *a, int val)$/;"	f	typeref:typename:void
git_atomic_ssize	extern/libgit2/src/thread-utils.h	/^typedef git_atomic git_atomic_ssize;$/;"	t	typeref:typename:git_atomic
git_atomic_ssize	extern/libgit2/src/thread-utils.h	/^typedef git_atomic64 git_atomic_ssize;$/;"	t	typeref:typename:git_atomic64
git_atomic_ssize_add	extern/libgit2/src/thread-utils.h	/^#define git_atomic_ssize_add /;"	d
git_attr__false	extern/libgit2/src/attr.c	/^const char *git_attr__false = "[internal]__FALSE__";$/;"	v	typeref:typename:const char *
git_attr__true	extern/libgit2/src/attr.c	/^const char *git_attr__true  = "[internal]__TRUE__";$/;"	v	typeref:typename:const char *
git_attr__unset	extern/libgit2/src/attr.c	/^const char *git_attr__unset = "[internal]__UNSET__";$/;"	v	typeref:typename:const char *
git_attr_add_macro	extern/libgit2/src/attr.c	/^int git_attr_add_macro($/;"	f	typeref:typename:int
git_attr_assignment	extern/libgit2/src/attr_file.h	/^} git_attr_assignment;$/;"	t	typeref:struct:__anon32d629ad0508
git_attr_assignment__free	extern/libgit2/src/attr_file.c	/^static void git_attr_assignment__free(git_attr_assignment *assign)$/;"	f	typeref:typename:void	file:
git_attr_assignment__parse	extern/libgit2/src/attr_file.c	/^int git_attr_assignment__parse($/;"	f	typeref:typename:int
git_attr_cache	extern/libgit2/src/attrcache.h	/^} git_attr_cache;$/;"	t	typeref:struct:__anon5aa68d020108
git_attr_cache__alloc_file_entry	extern/libgit2/src/attrcache.c	/^int git_attr_cache__alloc_file_entry($/;"	f	typeref:typename:int
git_attr_cache__get	extern/libgit2/src/attrcache.c	/^int git_attr_cache__get($/;"	f	typeref:typename:int
git_attr_cache__init	extern/libgit2/src/attrcache.c	/^int git_attr_cache__init(git_repository *repo)$/;"	f	typeref:typename:int
git_attr_cache__insert_macro	extern/libgit2/src/attrcache.c	/^int git_attr_cache__insert_macro(git_repository *repo, git_attr_rule *macro)$/;"	f	typeref:typename:int
git_attr_cache__is_cached	extern/libgit2/src/attrcache.c	/^bool git_attr_cache__is_cached($/;"	f	typeref:typename:bool
git_attr_cache__lookup_macro	extern/libgit2/src/attrcache.c	/^git_attr_rule *git_attr_cache__lookup_macro($/;"	f	typeref:typename:git_attr_rule *
git_attr_cache_flush	extern/libgit2/src/attrcache.c	/^void git_attr_cache_flush(git_repository *repo)$/;"	f	typeref:typename:void
git_attr_file	extern/libgit2/src/attr_file.h	/^} git_attr_file;$/;"	t	typeref:struct:__anon32d629ad0608
git_attr_file__clear_rules	extern/libgit2/src/attr_file.c	/^int git_attr_file__clear_rules(git_attr_file *file, bool need_lock)$/;"	f	typeref:typename:int
git_attr_file__foreach_matching_rule	extern/libgit2/src/attr_file.h	/^#define git_attr_file__foreach_matching_rule(/;"	d
git_attr_file__free	extern/libgit2/src/attr_file.c	/^void git_attr_file__free(git_attr_file *file)$/;"	f	typeref:typename:void
git_attr_file__load	extern/libgit2/src/attr_file.c	/^int git_attr_file__load($/;"	f	typeref:typename:int
git_attr_file__load_standalone	extern/libgit2/src/attr_file.c	/^int git_attr_file__load_standalone(git_attr_file **out, const char *path)$/;"	f	typeref:typename:int
git_attr_file__lookup_one	extern/libgit2/src/attr_file.c	/^int git_attr_file__lookup_one($/;"	f	typeref:typename:int
git_attr_file__name_hash	extern/libgit2/src/attr_file.c	/^uint32_t git_attr_file__name_hash(const char *name)$/;"	f	typeref:typename:uint32_t
git_attr_file__new	extern/libgit2/src/attr_file.c	/^int git_attr_file__new($/;"	f	typeref:typename:int
git_attr_file__out_of_date	extern/libgit2/src/attr_file.c	/^int git_attr_file__out_of_date($/;"	f	typeref:typename:int
git_attr_file__parse_buffer	extern/libgit2/src/attr_file.c	/^int git_attr_file__parse_buffer($/;"	f	typeref:typename:int
git_attr_file_entry	extern/libgit2/src/attr_file.h	/^struct git_attr_file_entry {$/;"	s
git_attr_file_entry	extern/libgit2/src/attr_file.h	/^typedef struct git_attr_file_entry git_attr_file_entry;$/;"	t	typeref:struct:git_attr_file_entry
git_attr_file_parser	extern/libgit2/src/attr_file.h	/^typedef int (*git_attr_file_parser)($/;"	t	typeref:typename:int (*)(git_repository * repo,git_attr_file * file,const char * data,bool allow_macros)
git_attr_file_source	extern/libgit2/src/attr_file.h	/^} git_attr_file_source;$/;"	t	typeref:enum:__anon32d629ad0103
git_attr_fnmatch	extern/libgit2/src/attr_file.h	/^} git_attr_fnmatch;$/;"	t	typeref:struct:__anon32d629ad0208
git_attr_fnmatch__match	extern/libgit2/src/attr_file.c	/^bool git_attr_fnmatch__match($/;"	f	typeref:typename:bool
git_attr_fnmatch__parse	extern/libgit2/src/attr_file.c	/^int git_attr_fnmatch__parse($/;"	f	typeref:typename:int
git_attr_foreach	extern/libgit2/src/attr.c	/^int git_attr_foreach($/;"	f	typeref:typename:int
git_attr_foreach_cb	extern/libgit2/include/git2/attr.h	/^typedef int GIT_CALLBACK(git_attr_foreach_cb)(const char *name, const char *value, void *payload/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * name,const char * value,void * payload)
git_attr_get	extern/libgit2/src/attr.c	/^int git_attr_get($/;"	f	typeref:typename:int
git_attr_get_many	extern/libgit2/src/attr.c	/^int git_attr_get_many($/;"	f	typeref:typename:int
git_attr_get_many_with_session	extern/libgit2/src/attr.c	/^int git_attr_get_many_with_session($/;"	f	typeref:typename:int
git_attr_name	extern/libgit2/src/attr_file.h	/^} git_attr_name;$/;"	t	typeref:struct:__anon32d629ad0408
git_attr_path	extern/libgit2/src/attr_file.h	/^} git_attr_path;$/;"	t	typeref:struct:__anon32d629ad0808
git_attr_path__free	extern/libgit2/src/attr_file.c	/^void git_attr_path__free(git_attr_path *info)$/;"	f	typeref:typename:void
git_attr_path__init	extern/libgit2/src/attr_file.c	/^int git_attr_path__init($/;"	f	typeref:typename:int
git_attr_rule	extern/libgit2/src/attr_file.h	/^} git_attr_rule;$/;"	t	typeref:struct:__anon32d629ad0308
git_attr_rule__clear	extern/libgit2/src/attr_file.c	/^static void git_attr_rule__clear(git_attr_rule *rule)$/;"	f	typeref:typename:void	file:
git_attr_rule__free	extern/libgit2/src/attr_file.c	/^void git_attr_rule__free(git_attr_rule *rule)$/;"	f	typeref:typename:void
git_attr_rule__lookup_assignment	extern/libgit2/src/attr_file.c	/^git_attr_assignment *git_attr_rule__lookup_assignment($/;"	f	typeref:typename:git_attr_assignment *
git_attr_rule__match	extern/libgit2/src/attr_file.c	/^bool git_attr_rule__match($/;"	f	typeref:typename:bool
git_attr_session	extern/libgit2/src/attr_file.h	/^} git_attr_session;$/;"	t	typeref:struct:__anon32d629ad0908
git_attr_session__free	extern/libgit2/src/attr_file.c	/^void git_attr_session__free(git_attr_session *session)$/;"	f	typeref:typename:void
git_attr_session__init	extern/libgit2/src/attr_file.c	/^int git_attr_session__init(git_attr_session *session, git_repository *repo)$/;"	f	typeref:typename:int
git_attr_value	extern/libgit2/src/attr.c	/^git_attr_value_t git_attr_value(const char *attr)$/;"	f	typeref:typename:git_attr_value_t
git_attr_value_t	extern/libgit2/include/git2/attr.h	/^} git_attr_value_t;$/;"	t	typeref:enum:__anon6bd1a3ef0103
git_bitvec	extern/libgit2/src/bitvec.h	/^} git_bitvec;$/;"	t	typeref:struct:__anon8263d3700108
git_bitvec_clear	extern/libgit2/src/bitvec.h	/^GIT_INLINE(void) git_bitvec_clear(git_bitvec *bv)$/;"	f	typeref:typename:void
git_bitvec_free	extern/libgit2/src/bitvec.h	/^GIT_INLINE(void) git_bitvec_free(git_bitvec *bv)$/;"	f	typeref:typename:void
git_bitvec_get	extern/libgit2/src/bitvec.h	/^GIT_INLINE(bool) git_bitvec_get(git_bitvec *bv, size_t bit)$/;"	f	typeref:typename:bool
git_bitvec_init	extern/libgit2/src/bitvec.h	/^GIT_INLINE(int) git_bitvec_init(git_bitvec *bv, size_t capacity)$/;"	f	typeref:typename:int
git_bitvec_set	extern/libgit2/src/bitvec.h	/^GIT_INLINE(void) git_bitvec_set(git_bitvec *bv, size_t bit, bool on)$/;"	f	typeref:typename:void
git_blame	extern/libgit2/include/git2/blame.h	/^typedef struct git_blame git_blame;$/;"	t	typeref:struct:git_blame
git_blame	extern/libgit2/src/blame.h	/^struct git_blame {$/;"	s
git_blame__alloc	extern/libgit2/src/blame.c	/^git_blame* git_blame__alloc($/;"	f	typeref:typename:git_blame *
git_blame__entry	extern/libgit2/src/blame.h	/^typedef struct git_blame__entry {$/;"	s
git_blame__entry	extern/libgit2/src/blame.h	/^} git_blame__entry;$/;"	t	typeref:struct:git_blame__entry
git_blame__free_entry	extern/libgit2/src/blame_git.c	/^void git_blame__free_entry(git_blame__entry *ent)$/;"	f	typeref:typename:void
git_blame__get_origin	extern/libgit2/src/blame_git.c	/^int git_blame__get_origin($/;"	f	typeref:typename:int
git_blame__like_git	extern/libgit2/src/blame_git.c	/^int git_blame__like_git(git_blame *blame, uint32_t opt)$/;"	f	typeref:typename:int
git_blame__origin	extern/libgit2/src/blame.h	/^typedef struct git_blame__origin {$/;"	s
git_blame__origin	extern/libgit2/src/blame.h	/^} git_blame__origin;$/;"	t	typeref:struct:git_blame__origin
git_blame_buffer	extern/libgit2/src/blame.c	/^int git_blame_buffer($/;"	f	typeref:typename:int
git_blame_file	extern/libgit2/src/blame.c	/^int git_blame_file($/;"	f	typeref:typename:int
git_blame_flag_t	extern/libgit2/include/git2/blame.h	/^} git_blame_flag_t;$/;"	t	typeref:enum:__anon1efd6cf50103
git_blame_free	extern/libgit2/src/blame.c	/^void git_blame_free(git_blame *blame)$/;"	f	typeref:typename:void
git_blame_get_hunk_byindex	extern/libgit2/src/blame.c	/^const git_blame_hunk *git_blame_get_hunk_byindex(git_blame *blame, uint32_t index)$/;"	f	typeref:typename:const git_blame_hunk *
git_blame_get_hunk_byline	extern/libgit2/src/blame.c	/^const git_blame_hunk *git_blame_get_hunk_byline(git_blame *blame, size_t lineno)$/;"	f	typeref:typename:const git_blame_hunk *
git_blame_get_hunk_count	extern/libgit2/src/blame.c	/^uint32_t git_blame_get_hunk_count(git_blame *blame)$/;"	f	typeref:typename:uint32_t
git_blame_hunk	extern/libgit2/include/git2/blame.h	/^typedef struct git_blame_hunk {$/;"	s
git_blame_hunk	extern/libgit2/include/git2/blame.h	/^} git_blame_hunk;$/;"	t	typeref:struct:git_blame_hunk
git_blame_init_options	extern/libgit2/src/blame.c	/^int git_blame_init_options(git_blame_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_blame_options	extern/libgit2/include/git2/blame.h	/^typedef struct git_blame_options {$/;"	s
git_blame_options	extern/libgit2/include/git2/blame.h	/^} git_blame_options;$/;"	t	typeref:struct:git_blame_options
git_blame_options_init	extern/libgit2/src/blame.c	/^int git_blame_options_init(git_blame_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_blob	extern/libgit2/include/git2/types.h	/^typedef struct git_blob git_blob;$/;"	t	typeref:struct:git_blob
git_blob	extern/libgit2/src/blob.h	/^struct git_blob {$/;"	s
git_blob__create_from_paths	extern/libgit2/src/blob.c	/^int git_blob__create_from_paths($/;"	f	typeref:typename:int
git_blob__free	extern/libgit2/src/blob.c	/^void git_blob__free(void *_blob)$/;"	f	typeref:typename:void
git_blob__getbuf	extern/libgit2/src/blob.c	/^int git_blob__getbuf(git_buf *buffer, git_blob *blob)$/;"	f	typeref:typename:int
git_blob__parse	extern/libgit2/src/blob.c	/^int git_blob__parse(void *_blob, git_odb_object *odb_obj)$/;"	f	typeref:typename:int
git_blob__parse_raw	extern/libgit2/src/blob.c	/^int git_blob__parse_raw(void *_blob, const char *data, size_t size)$/;"	f	typeref:typename:int
git_blob_create_from_buffer	extern/libgit2/src/blob.c	/^int git_blob_create_from_buffer($/;"	f	typeref:typename:int
git_blob_create_from_disk	extern/libgit2/src/blob.c	/^int git_blob_create_from_disk($/;"	f	typeref:typename:int
git_blob_create_from_stream	extern/libgit2/src/blob.c	/^int git_blob_create_from_stream(git_writestream **out, git_repository *repo, const char *hintpat/;"	f	typeref:typename:int
git_blob_create_from_stream_commit	extern/libgit2/src/blob.c	/^int git_blob_create_from_stream_commit(git_oid *out, git_writestream *_stream)$/;"	f	typeref:typename:int
git_blob_create_from_workdir	extern/libgit2/src/blob.c	/^int git_blob_create_from_workdir($/;"	f	typeref:typename:int
git_blob_create_frombuffer	extern/libgit2/src/blob.c	/^int git_blob_create_frombuffer($/;"	f	typeref:typename:int
git_blob_create_fromdisk	extern/libgit2/src/blob.c	/^int git_blob_create_fromdisk(git_oid *id, git_repository *repo, const char *path)$/;"	f	typeref:typename:int
git_blob_create_fromstream	extern/libgit2/src/blob.c	/^int git_blob_create_fromstream($/;"	f	typeref:typename:int
git_blob_create_fromstream_commit	extern/libgit2/src/blob.c	/^int git_blob_create_fromstream_commit($/;"	f	typeref:typename:int
git_blob_create_fromworkdir	extern/libgit2/src/blob.c	/^int git_blob_create_fromworkdir(git_oid *id, git_repository *repo, const char *relative_path)$/;"	f	typeref:typename:int
git_blob_dup	extern/libgit2/src/object_api.c	/^int git_blob_dup(git_blob **out, git_blob *obj)$/;"	f	typeref:typename:int
git_blob_filter	extern/libgit2/src/blob.c	/^int git_blob_filter($/;"	f	typeref:typename:int
git_blob_filter_flag_t	extern/libgit2/include/git2/blob.h	/^} git_blob_filter_flag_t;$/;"	t	typeref:enum:__anon6d9306930103
git_blob_filter_options	extern/libgit2/include/git2/blob.h	/^} git_blob_filter_options;$/;"	t	typeref:struct:__anon6d9306930208
git_blob_filtered_content	extern/libgit2/src/blob.c	/^int git_blob_filtered_content($/;"	f	typeref:typename:int
git_blob_free	extern/libgit2/src/object_api.c	/^void git_blob_free(git_blob *obj)$/;"	f	typeref:typename:void
git_blob_id	extern/libgit2/src/object_api.c	/^const git_oid *git_blob_id(const git_blob *obj)$/;"	f	typeref:typename:const git_oid *
git_blob_is_binary	extern/libgit2/src/blob.c	/^int git_blob_is_binary(const git_blob *blob)$/;"	f	typeref:typename:int
git_blob_lookup	extern/libgit2/src/object_api.c	/^int git_blob_lookup(git_blob **out, git_repository *repo, const git_oid *id)$/;"	f	typeref:typename:int
git_blob_lookup_prefix	extern/libgit2/src/object_api.c	/^int git_blob_lookup_prefix(git_blob **out, git_repository *repo, const git_oid *id, size_t len)$/;"	f	typeref:typename:int
git_blob_owner	extern/libgit2/src/object_api.c	/^git_repository *git_blob_owner(const git_blob *obj)$/;"	f	typeref:typename:git_repository *
git_blob_rawcontent	extern/libgit2/src/blob.c	/^const void *git_blob_rawcontent(const git_blob *blob)$/;"	f	typeref:typename:const void *
git_blob_rawsize	extern/libgit2/src/blob.c	/^git_off_t git_blob_rawsize(const git_blob *blob)$/;"	f	typeref:typename:git_off_t
git_bom_t	extern/libgit2/src/buf_text.h	/^} git_bom_t;$/;"	t	typeref:enum:__anon6db101b40103
git_branch_create	extern/libgit2/src/branch.c	/^int git_branch_create($/;"	f	typeref:typename:int
git_branch_create_from_annotated	extern/libgit2/src/branch.c	/^int git_branch_create_from_annotated($/;"	f	typeref:typename:int
git_branch_delete	extern/libgit2/src/branch.c	/^int git_branch_delete(git_reference *branch)$/;"	f	typeref:typename:int
git_branch_is_checked_out	extern/libgit2/src/branch.c	/^int git_branch_is_checked_out(const git_reference *branch)$/;"	f	typeref:typename:int
git_branch_is_head	extern/libgit2/src/branch.c	/^int git_branch_is_head($/;"	f	typeref:typename:int
git_branch_iterator	extern/libgit2/include/git2/branch.h	/^typedef struct git_branch_iterator git_branch_iterator;$/;"	t	typeref:struct:git_branch_iterator
git_branch_iterator_free	extern/libgit2/src/branch.c	/^void git_branch_iterator_free(git_branch_iterator *_iter)$/;"	f	typeref:typename:void
git_branch_iterator_new	extern/libgit2/src/branch.c	/^int git_branch_iterator_new($/;"	f	typeref:typename:int
git_branch_lookup	extern/libgit2/src/branch.c	/^int git_branch_lookup($/;"	f	typeref:typename:int
git_branch_move	extern/libgit2/src/branch.c	/^int git_branch_move($/;"	f	typeref:typename:int
git_branch_name	extern/libgit2/src/branch.c	/^int git_branch_name($/;"	f	typeref:typename:int
git_branch_next	extern/libgit2/src/branch.c	/^int git_branch_next(git_reference **out, git_branch_t *out_type, git_branch_iterator *_iter)$/;"	f	typeref:typename:int
git_branch_remote_name	extern/libgit2/src/branch.c	/^int git_branch_remote_name(git_buf *buf, git_repository *repo, const char *refname)$/;"	f	typeref:typename:int
git_branch_set_upstream	extern/libgit2/src/branch.c	/^int git_branch_set_upstream(git_reference *branch, const char *upstream_name)$/;"	f	typeref:typename:int
git_branch_t	extern/libgit2/include/git2/types.h	/^} git_branch_t;$/;"	t	typeref:enum:__anona7f40ac90303
git_branch_upstream	extern/libgit2/src/branch.c	/^int git_branch_upstream($/;"	f	typeref:typename:int
git_branch_upstream_name	extern/libgit2/src/branch.c	/^int git_branch_upstream_name($/;"	f	typeref:typename:int
git_branch_upstream_remote	extern/libgit2/src/branch.c	/^int git_branch_upstream_remote(git_buf *buf, git_repository *repo, const char *refname)$/;"	f	typeref:typename:int
git_buf	extern/libgit2/include/git2/buffer.h	/^} git_buf;$/;"	t	typeref:struct:__anonbea3682e0108
git_buf	extern/libgit2/script/user_model.c	/^typedef struct git_buf {$/;"	s	file:
git_buf	extern/libgit2/script/user_model.c	/^} git_buf;$/;"	t	typeref:struct:git_buf	file:
git_buf_PUTS	extern/libgit2/src/buffer.h	/^#define git_buf_PUTS(/;"	d
git_buf__initbuf	extern/libgit2/src/buffer.c	/^char git_buf__initbuf[1];$/;"	v	typeref:typename:char[1]
git_buf__oom	extern/libgit2/src/buffer.c	/^char git_buf__oom[1];$/;"	v	typeref:typename:char[1]
git_buf_attach	extern/libgit2/src/buffer.c	/^int git_buf_attach(git_buf *buf, char *ptr, size_t asize)$/;"	f	typeref:typename:int
git_buf_attach_notowned	extern/libgit2/src/buffer.c	/^void git_buf_attach_notowned(git_buf *buf, const char *ptr, size_t size)$/;"	f	typeref:typename:void
git_buf_clear	extern/libgit2/src/buffer.c	/^void git_buf_clear(git_buf *buf)$/;"	f	typeref:typename:void
git_buf_cmp	extern/libgit2/src/buffer.c	/^int git_buf_cmp(const git_buf *a, const git_buf *b)$/;"	f	typeref:typename:int
git_buf_consume	extern/libgit2/src/buffer.c	/^void git_buf_consume(git_buf *buf, const char *end)$/;"	f	typeref:typename:void
git_buf_contains_nul	extern/libgit2/src/buffer.c	/^int git_buf_contains_nul(const git_buf *buf)$/;"	f	typeref:typename:int
git_buf_copy_cstr	extern/libgit2/src/buffer.c	/^void git_buf_copy_cstr(char *data, size_t datasize, const git_buf *buf)$/;"	f	typeref:typename:void
git_buf_cstr	extern/libgit2/src/buffer.h	/^GIT_INLINE(const char *) git_buf_cstr(const git_buf *buf)$/;"	f	typeref:typename:const char *
git_buf_decode_base64	extern/libgit2/src/buffer.c	/^int git_buf_decode_base64(git_buf *buf, const char *base64, size_t len)$/;"	f	typeref:typename:int
git_buf_decode_base85	extern/libgit2/src/buffer.c	/^int git_buf_decode_base85($/;"	f	typeref:typename:int
git_buf_decode_percent	extern/libgit2/src/buffer.c	/^int git_buf_decode_percent($/;"	f	typeref:typename:int
git_buf_detach	extern/libgit2/src/buffer.c	/^char *git_buf_detach(git_buf *buf)$/;"	f	typeref:typename:char *
git_buf_dispose	extern/libgit2/src/buffer.c	/^void git_buf_dispose(git_buf *buf)$/;"	f	typeref:typename:void
git_buf_encode_base64	extern/libgit2/src/buffer.c	/^int git_buf_encode_base64(git_buf *buf, const char *data, size_t len)$/;"	f	typeref:typename:int
git_buf_encode_base85	extern/libgit2/src/buffer.c	/^int git_buf_encode_base85(git_buf *buf, const char *data, size_t len)$/;"	f	typeref:typename:int
git_buf_find	extern/libgit2/src/buffer.h	/^GIT_INLINE(ssize_t) git_buf_find(const git_buf *buf, char ch)$/;"	f	typeref:typename:ssize_t
git_buf_free	extern/libgit2/src/buffer.c	/^void git_buf_free(git_buf *buf)$/;"	f	typeref:typename:void
git_buf_grow	extern/libgit2/src/buffer.c	/^int git_buf_grow(git_buf *buffer, size_t target_size)$/;"	f	typeref:typename:int
git_buf_grow_by	extern/libgit2/src/buffer.c	/^int git_buf_grow_by(git_buf *buffer, size_t additional_size)$/;"	f	typeref:typename:int
git_buf_init	extern/libgit2/src/buffer.c	/^int git_buf_init(git_buf *buf, size_t initial_size)$/;"	f	typeref:typename:int
git_buf_is_allocated	extern/libgit2/src/buffer.h	/^GIT_INLINE(bool) git_buf_is_allocated(const git_buf *buf)$/;"	f	typeref:typename:bool
git_buf_is_binary	extern/libgit2/src/buffer.c	/^int git_buf_is_binary(const git_buf *buf)$/;"	f	typeref:typename:int
git_buf_join	extern/libgit2/src/buffer.c	/^int git_buf_join($/;"	f	typeref:typename:int
git_buf_join3	extern/libgit2/src/buffer.c	/^int git_buf_join3($/;"	f	typeref:typename:int
git_buf_join_n	extern/libgit2/src/buffer.c	/^int git_buf_join_n(git_buf *buf, char separator, int nbuf, ...)$/;"	f	typeref:typename:int
git_buf_joinpath	extern/libgit2/src/buffer.h	/^GIT_INLINE(int) git_buf_joinpath(git_buf *buf, const char *a, const char *b)$/;"	f	typeref:typename:int
git_buf_len	extern/libgit2/script/user_model.c	/^int git_buf_len(const struct git_buf *buf)$/;"	f	typeref:typename:int
git_buf_len	extern/libgit2/src/buffer.h	/^GIT_INLINE(size_t) git_buf_len(const git_buf *buf)$/;"	f	typeref:typename:size_t
git_buf_oom	extern/libgit2/src/buffer.h	/^GIT_INLINE(bool) git_buf_oom(const git_buf *buf)$/;"	f	typeref:typename:bool
git_buf_printf	extern/libgit2/src/buffer.c	/^int git_buf_printf(git_buf *buf, const char *format, ...)$/;"	f	typeref:typename:int
git_buf_put	extern/libgit2/script/user_model.c	/^int git_buf_put(git_buf *buf, const char *data, size_t len)$/;"	f	typeref:typename:int
git_buf_put	extern/libgit2/src/buffer.c	/^int git_buf_put(git_buf *buf, const char *data, size_t len)$/;"	f	typeref:typename:int
git_buf_put_w	extern/libgit2/src/win32/w32_buffer.c	/^int git_buf_put_w(git_buf *buf, const wchar_t *string_w, size_t len_w)$/;"	f	typeref:typename:int
git_buf_putc	extern/libgit2/src/buffer.c	/^int git_buf_putc(git_buf *buf, char c)$/;"	f	typeref:typename:int
git_buf_putcn	extern/libgit2/src/buffer.c	/^int git_buf_putcn(git_buf *buf, char c, size_t len)$/;"	f	typeref:typename:int
git_buf_puts	extern/libgit2/src/buffer.c	/^int git_buf_puts(git_buf *buf, const char *string)$/;"	f	typeref:typename:int
git_buf_quote	extern/libgit2/src/buffer.c	/^int git_buf_quote(git_buf *buf)$/;"	f	typeref:typename:int
git_buf_rfind	extern/libgit2/src/buffer.h	/^GIT_INLINE(ssize_t) git_buf_rfind(const git_buf *buf, char ch)$/;"	f	typeref:typename:ssize_t
git_buf_rfind_next	extern/libgit2/src/buffer.h	/^GIT_INLINE(ssize_t) git_buf_rfind_next(const git_buf *buf, char ch)$/;"	f	typeref:typename:ssize_t
git_buf_rtrim	extern/libgit2/src/buffer.c	/^void git_buf_rtrim(git_buf *buf)$/;"	f	typeref:typename:void
git_buf_rtruncate_at_char	extern/libgit2/src/buffer.c	/^void git_buf_rtruncate_at_char(git_buf *buf, char separator)$/;"	f	typeref:typename:void
git_buf_sanitize	extern/libgit2/src/buffer.c	/^void git_buf_sanitize(git_buf *buf)$/;"	f	typeref:typename:void
git_buf_set	extern/libgit2/script/user_model.c	/^int git_buf_set(git_buf *buf, const void *data, size_t len)$/;"	f	typeref:typename:int
git_buf_set	extern/libgit2/src/buffer.c	/^int git_buf_set(git_buf *buf, const void *data, size_t len)$/;"	f	typeref:typename:int
git_buf_sets	extern/libgit2/src/buffer.c	/^int git_buf_sets(git_buf *buf, const char *string)$/;"	f	typeref:typename:int
git_buf_shorten	extern/libgit2/src/buffer.c	/^void git_buf_shorten(git_buf *buf, size_t amount)$/;"	f	typeref:typename:void
git_buf_splice	extern/libgit2/src/buffer.c	/^int git_buf_splice($/;"	f	typeref:typename:int
git_buf_swap	extern/libgit2/src/buffer.c	/^void git_buf_swap(git_buf *buf_a, git_buf *buf_b)$/;"	f	typeref:typename:void
git_buf_text_common_prefix	extern/libgit2/src/buf_text.c	/^int git_buf_text_common_prefix(git_buf *buf, const git_strarray *strings)$/;"	f	typeref:typename:int
git_buf_text_contains_nul	extern/libgit2/src/buf_text.c	/^bool git_buf_text_contains_nul(const git_buf *buf)$/;"	f	typeref:typename:bool
git_buf_text_crlf_to_lf	extern/libgit2/src/buf_text.c	/^int git_buf_text_crlf_to_lf(git_buf *tgt, const git_buf *src)$/;"	f	typeref:typename:int
git_buf_text_detect_bom	extern/libgit2/src/buf_text.c	/^int git_buf_text_detect_bom(git_bom_t *bom, const git_buf *buf)$/;"	f	typeref:typename:int
git_buf_text_gather_stats	extern/libgit2/src/buf_text.c	/^bool git_buf_text_gather_stats($/;"	f	typeref:typename:bool
git_buf_text_is_binary	extern/libgit2/src/buf_text.c	/^bool git_buf_text_is_binary(const git_buf *buf)$/;"	f	typeref:typename:bool
git_buf_text_lf_to_crlf	extern/libgit2/src/buf_text.c	/^int git_buf_text_lf_to_crlf(git_buf *tgt, const git_buf *src)$/;"	f	typeref:typename:int
git_buf_text_puts_escape_regex	extern/libgit2/src/buf_text.h	/^GIT_INLINE(int) git_buf_text_puts_escape_regex(git_buf *buf, const char *string)$/;"	f	typeref:typename:int
git_buf_text_puts_escaped	extern/libgit2/src/buf_text.c	/^int git_buf_text_puts_escaped($/;"	f	typeref:typename:int
git_buf_text_stats	extern/libgit2/src/buf_text.h	/^} git_buf_text_stats;$/;"	t	typeref:struct:__anon6db101b40208
git_buf_text_unescape	extern/libgit2/src/buf_text.c	/^void git_buf_text_unescape(git_buf *buf)$/;"	f	typeref:typename:void
git_buf_truncate	extern/libgit2/src/buffer.c	/^void git_buf_truncate(git_buf *buf, size_t len)$/;"	f	typeref:typename:void
git_buf_try_grow	extern/libgit2/src/buffer.c	/^int git_buf_try_grow($/;"	f	typeref:typename:int
git_buf_unquote	extern/libgit2/src/buffer.c	/^int git_buf_unquote(git_buf *buf)$/;"	f	typeref:typename:int
git_buf_vec	extern/libgit2/src/hash.h	/^} git_buf_vec;$/;"	t	typeref:struct:__anon6a671f570108
git_buf_vprintf	extern/libgit2/script/user_model.c	/^int git_buf_vprintf(git_buf *buf, const char *format, va_list ap)$/;"	f	typeref:typename:int
git_buf_vprintf	extern/libgit2/src/buffer.c	/^int git_buf_vprintf(git_buf *buf, const char *format, va_list ap)$/;"	f	typeref:typename:int
git_cache	extern/libgit2/src/cache.h	/^} git_cache;$/;"	t	typeref:struct:__anon354735470308
git_cache__current_storage	extern/libgit2/src/cache.c	/^git_atomic_ssize git_cache__current_storage = {0};$/;"	v	typeref:typename:git_atomic_ssize
git_cache__enabled	extern/libgit2/src/cache.c	/^bool git_cache__enabled = true;$/;"	v	typeref:typename:bool
git_cache__max_object_size	extern/libgit2/src/cache.c	/^static size_t git_cache__max_object_size[8] = {$/;"	v	typeref:typename:size_t[8]	file:
git_cache__max_storage	extern/libgit2/src/cache.c	/^ssize_t git_cache__max_storage = (256 * 1024 * 1024);$/;"	v	typeref:typename:ssize_t
git_cache_clear	extern/libgit2/src/cache.c	/^void git_cache_clear(git_cache *cache)$/;"	f	typeref:typename:void
git_cache_dispose	extern/libgit2/src/cache.c	/^void git_cache_dispose(git_cache *cache)$/;"	f	typeref:typename:void
git_cache_dump_stats	extern/libgit2/src/cache.c	/^void git_cache_dump_stats(git_cache *cache)$/;"	f	typeref:typename:void
git_cache_get_any	extern/libgit2/src/cache.c	/^void *git_cache_get_any(git_cache *cache, const git_oid *oid)$/;"	f	typeref:typename:void *
git_cache_get_parsed	extern/libgit2/src/cache.c	/^git_object *git_cache_get_parsed(git_cache *cache, const git_oid *oid)$/;"	f	typeref:typename:git_object *
git_cache_get_raw	extern/libgit2/src/cache.c	/^git_odb_object *git_cache_get_raw(git_cache *cache, const git_oid *oid)$/;"	f	typeref:typename:git_odb_object *
git_cache_init	extern/libgit2/src/cache.c	/^int git_cache_init(git_cache *cache)$/;"	f	typeref:typename:int
git_cache_set_max_object_size	extern/libgit2/src/cache.c	/^int git_cache_set_max_object_size(git_object_t type, size_t size)$/;"	f	typeref:typename:int
git_cache_size	extern/libgit2/src/cache.h	/^GIT_INLINE(size_t) git_cache_size(git_cache *cache)$/;"	f	typeref:typename:size_t
git_cache_store_parsed	extern/libgit2/src/cache.c	/^void *git_cache_store_parsed(git_cache *cache, git_object *entry)$/;"	f	typeref:typename:void *
git_cache_store_raw	extern/libgit2/src/cache.c	/^void *git_cache_store_raw(git_cache *cache, git_odb_object *entry)$/;"	f	typeref:typename:void *
git_cached_obj	extern/libgit2/src/cache.h	/^} git_cached_obj;$/;"	t	typeref:struct:__anon354735470208
git_cached_obj_decref	extern/libgit2/src/cache.c	/^void git_cached_obj_decref(void *_obj)$/;"	f	typeref:typename:void
git_cached_obj_incref	extern/libgit2/src/cache.h	/^GIT_INLINE(void) git_cached_obj_incref(void *_obj)$/;"	f	typeref:typename:void
git_cert	extern/libgit2/include/git2/cert.h	/^struct git_cert {$/;"	s
git_cert	extern/libgit2/include/git2/types.h	/^typedef struct git_cert git_cert;$/;"	t	typeref:struct:git_cert
git_cert_hostkey	extern/libgit2/include/git2/cert.h	/^} git_cert_hostkey;$/;"	t	typeref:struct:__anon6f6b75620208
git_cert_ssh_t	extern/libgit2/include/git2/cert.h	/^} git_cert_ssh_t;$/;"	t	typeref:enum:__anon6f6b75620103
git_cert_t	extern/libgit2/include/git2/cert.h	/^typedef enum git_cert_t {$/;"	g
git_cert_t	extern/libgit2/include/git2/cert.h	/^} git_cert_t;$/;"	t	typeref:enum:git_cert_t
git_cert_x509	extern/libgit2/include/git2/cert.h	/^} git_cert_x509;$/;"	t	typeref:struct:__anon6f6b75620308
git_checkout_head	extern/libgit2/src/checkout.c	/^int git_checkout_head($/;"	f	typeref:typename:int
git_checkout_index	extern/libgit2/src/checkout.c	/^int git_checkout_index($/;"	f	typeref:typename:int
git_checkout_init_options	extern/libgit2/src/checkout.c	/^int git_checkout_init_options(git_checkout_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_checkout_iterator	extern/libgit2/src/checkout.c	/^int git_checkout_iterator($/;"	f	typeref:typename:int
git_checkout_notify_cb	extern/libgit2/include/git2/checkout.h	/^typedef int GIT_CALLBACK(git_checkout_notify_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_checkout_notify_t why,const char * path,const git_diff_file * baseline,const git_diff_file * target,const git_diff_file * workdir,void * payload)
git_checkout_notify_t	extern/libgit2/include/git2/checkout.h	/^} git_checkout_notify_t;$/;"	t	typeref:enum:__anon4996472a0203
git_checkout_options	extern/libgit2/include/git2/checkout.h	/^typedef struct git_checkout_options {$/;"	s
git_checkout_options	extern/libgit2/include/git2/checkout.h	/^} git_checkout_options;$/;"	t	typeref:struct:git_checkout_options
git_checkout_options_init	extern/libgit2/src/checkout.c	/^int git_checkout_options_init(git_checkout_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_checkout_perfdata	extern/libgit2/include/git2/checkout.h	/^} git_checkout_perfdata;$/;"	t	typeref:struct:__anon4996472a0308
git_checkout_perfdata_cb	extern/libgit2/include/git2/checkout.h	/^typedef void GIT_CALLBACK(git_checkout_perfdata_cb)($/;"	t	typeref:typename:void GIT_CALLBACK ()(const git_checkout_perfdata * perfdata,void * payload)
git_checkout_progress_cb	extern/libgit2/include/git2/checkout.h	/^typedef void GIT_CALLBACK(git_checkout_progress_cb)($/;"	t	typeref:typename:void GIT_CALLBACK ()(const char * path,size_t completed_steps,size_t total_steps,void * payload)
git_checkout_strategy_t	extern/libgit2/include/git2/checkout.h	/^} git_checkout_strategy_t;$/;"	t	typeref:enum:__anon4996472a0103
git_checkout_tree	extern/libgit2/src/checkout.c	/^int git_checkout_tree($/;"	f	typeref:typename:int
git_cherrypick	extern/libgit2/src/cherrypick.c	/^int git_cherrypick($/;"	f	typeref:typename:int
git_cherrypick_commit	extern/libgit2/src/cherrypick.c	/^int git_cherrypick_commit($/;"	f	typeref:typename:int
git_cherrypick_init_options	extern/libgit2/src/cherrypick.c	/^int git_cherrypick_init_options($/;"	f	typeref:typename:int
git_cherrypick_options	extern/libgit2/include/git2/cherrypick.h	/^} git_cherrypick_options;$/;"	t	typeref:struct:__anon46ced4e80108
git_cherrypick_options_init	extern/libgit2/src/cherrypick.c	/^int git_cherrypick_options_init($/;"	f	typeref:typename:int
git_clone	extern/libgit2/src/clone.c	/^int git_clone($/;"	f	typeref:typename:int
git_clone__should_clone_local	extern/libgit2/src/clone.c	/^int git_clone__should_clone_local(const char *url_or_path, git_clone_local_t local)$/;"	f	typeref:typename:int
git_clone_init_options	extern/libgit2/src/clone.c	/^int git_clone_init_options(git_clone_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_clone_local_t	extern/libgit2/include/git2/clone.h	/^} git_clone_local_t;$/;"	t	typeref:enum:__anon6cf58d250103
git_clone_options	extern/libgit2/include/git2/clone.h	/^typedef struct git_clone_options {$/;"	s
git_clone_options	extern/libgit2/include/git2/clone.h	/^} git_clone_options;$/;"	t	typeref:struct:git_clone_options
git_clone_options_init	extern/libgit2/src/clone.c	/^int git_clone_options_init(git_clone_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_command_fn	extern/libgit2/examples/lg2.c	/^typedef int (*git_command_fn)(git_repository *, int , char **);$/;"	t	typeref:typename:int (*)(git_repository *,int,char **)	file:
git_commit	extern/libgit2/include/git2/types.h	/^typedef struct git_commit git_commit;$/;"	t	typeref:struct:git_commit
git_commit	extern/libgit2/src/commit.h	/^struct git_commit {$/;"	s
git_commit__create_buffer_internal	extern/libgit2/src/commit.c	/^static int git_commit__create_buffer_internal($/;"	f	typeref:typename:int	file:
git_commit__create_internal	extern/libgit2/src/commit.c	/^static int git_commit__create_internal($/;"	f	typeref:typename:int	file:
git_commit__free	extern/libgit2/src/commit.c	/^void git_commit__free(void *_commit)$/;"	f	typeref:typename:void
git_commit__parse	extern/libgit2/src/commit.c	/^int git_commit__parse(void *_commit, git_odb_object *odb_obj)$/;"	f	typeref:typename:int
git_commit__parse_raw	extern/libgit2/src/commit.c	/^int git_commit__parse_raw(void *_commit, const char *data, size_t size)$/;"	f	typeref:typename:int
git_commit_amend	extern/libgit2/src/commit.c	/^int git_commit_amend($/;"	f	typeref:typename:int
git_commit_author_with_mailmap	extern/libgit2/src/commit.c	/^int git_commit_author_with_mailmap($/;"	f	typeref:typename:int
git_commit_body	extern/libgit2/src/commit.c	/^const char *git_commit_body(git_commit *commit)$/;"	f	typeref:typename:const char *
git_commit_committer_with_mailmap	extern/libgit2/src/commit.c	/^int git_commit_committer_with_mailmap($/;"	f	typeref:typename:int
git_commit_create	extern/libgit2/src/commit.c	/^int git_commit_create($/;"	f	typeref:typename:int
git_commit_create_buffer	extern/libgit2/src/commit.c	/^int git_commit_create_buffer(git_buf *out,$/;"	f	typeref:typename:int
git_commit_create_from_callback	extern/libgit2/src/commit.c	/^int git_commit_create_from_callback($/;"	f	typeref:typename:int
git_commit_create_from_ids	extern/libgit2/src/commit.c	/^int git_commit_create_from_ids($/;"	f	typeref:typename:int
git_commit_create_v	extern/libgit2/src/commit.c	/^int git_commit_create_v($/;"	f	typeref:typename:int
git_commit_create_with_signature	extern/libgit2/src/commit.c	/^int git_commit_create_with_signature($/;"	f	typeref:typename:int
git_commit_dup	extern/libgit2/src/object_api.c	/^int git_commit_dup(git_commit **out, git_commit *obj)$/;"	f	typeref:typename:int
git_commit_extract_signature	extern/libgit2/src/commit.c	/^int git_commit_extract_signature(git_buf *signature, git_buf *signed_data, git_repository *repo,/;"	f	typeref:typename:int
git_commit_free	extern/libgit2/src/object_api.c	/^void git_commit_free(git_commit *obj)$/;"	f	typeref:typename:void
git_commit_header_field	extern/libgit2/src/commit.c	/^int git_commit_header_field(git_buf *out, const git_commit *commit, const char *field)$/;"	f	typeref:typename:int
git_commit_id	extern/libgit2/src/object_api.c	/^const git_oid *git_commit_id(const git_commit *obj)$/;"	f	typeref:typename:const git_oid *
git_commit_list	extern/libgit2/src/commit_list.h	/^typedef struct git_commit_list {$/;"	s
git_commit_list	extern/libgit2/src/commit_list.h	/^} git_commit_list;$/;"	t	typeref:struct:git_commit_list
git_commit_list_alloc_node	extern/libgit2/src/commit_list.c	/^git_commit_list_node *git_commit_list_alloc_node(git_revwalk *walk)$/;"	f	typeref:typename:git_commit_list_node *
git_commit_list_free	extern/libgit2/src/commit_list.c	/^void git_commit_list_free(git_commit_list **list_p)$/;"	f	typeref:typename:void
git_commit_list_insert	extern/libgit2/src/commit_list.c	/^git_commit_list *git_commit_list_insert(git_commit_list_node *item, git_commit_list **list_p)$/;"	f	typeref:typename:git_commit_list *
git_commit_list_insert_by_date	extern/libgit2/src/commit_list.c	/^git_commit_list *git_commit_list_insert_by_date(git_commit_list_node *item, git_commit_list **li/;"	f	typeref:typename:git_commit_list *
git_commit_list_node	extern/libgit2/src/commit_list.h	/^typedef struct git_commit_list_node {$/;"	s
git_commit_list_node	extern/libgit2/src/commit_list.h	/^} git_commit_list_node;$/;"	t	typeref:struct:git_commit_list_node
git_commit_list_parse	extern/libgit2/src/commit_list.c	/^int git_commit_list_parse(git_revwalk *walk, git_commit_list_node *commit)$/;"	f	typeref:typename:int
git_commit_list_pop	extern/libgit2/src/commit_list.c	/^git_commit_list_node *git_commit_list_pop(git_commit_list **stack)$/;"	f	typeref:typename:git_commit_list_node *
git_commit_list_time_cmp	extern/libgit2/src/commit_list.c	/^int git_commit_list_time_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_commit_lookup	extern/libgit2/src/object_api.c	/^int git_commit_lookup(git_commit **out, git_repository *repo, const git_oid *id)$/;"	f	typeref:typename:int
git_commit_lookup_prefix	extern/libgit2/src/object_api.c	/^int git_commit_lookup_prefix(git_commit **out, git_repository *repo, const git_oid *id, size_t l/;"	f	typeref:typename:int
git_commit_nth_gen_ancestor	extern/libgit2/src/commit.c	/^int git_commit_nth_gen_ancestor($/;"	f	typeref:typename:int
git_commit_owner	extern/libgit2/src/object_api.c	/^git_repository *git_commit_owner(const git_commit *obj)$/;"	f	typeref:typename:git_repository *
git_commit_parent	extern/libgit2/src/commit.c	/^int git_commit_parent($/;"	f	typeref:typename:int
git_commit_parent_callback	extern/libgit2/include/git2/sys/commit.h	/^typedef const git_oid * GIT_CALLBACK(git_commit_parent_callback)(size_t idx, void *payload);$/;"	t	typeref:typename:const git_oid * GIT_CALLBACK ()(size_t idx,void * payload)
git_commit_parent_id	extern/libgit2/src/commit.c	/^const git_oid *git_commit_parent_id($/;"	f	typeref:typename:const git_oid *
git_commit_signing_cb	extern/libgit2/include/git2/commit.h	/^typedef int (*git_commit_signing_cb)($/;"	t	typeref:typename:int (*)(git_buf * signature,git_buf * signature_field,const char * commit_content,void * payload)
git_commit_summary	extern/libgit2/src/commit.c	/^const char *git_commit_summary(git_commit *commit)$/;"	f	typeref:typename:const char *
git_commit_tree	extern/libgit2/src/commit.c	/^int git_commit_tree(git_tree **tree_out, const git_commit *commit)$/;"	f	typeref:typename:int
git_cond	extern/libgit2/src/thread-utils.h	/^#define git_cond /;"	d
git_cond	extern/libgit2/src/unix/pthread.h	/^#define git_cond /;"	d
git_cond	extern/libgit2/src/win32/thread.h	/^typedef HANDLE git_cond;$/;"	t	typeref:typename:HANDLE
git_cond_broadcast	extern/libgit2/src/thread-utils.h	/^#define git_cond_broadcast(/;"	d
git_cond_broadcast	extern/libgit2/src/unix/pthread.h	/^#define git_cond_broadcast(/;"	d
git_cond_free	extern/libgit2/src/thread-utils.h	/^#define git_cond_free(/;"	d
git_cond_free	extern/libgit2/src/unix/pthread.h	/^#define git_cond_free(/;"	d
git_cond_free	extern/libgit2/src/win32/thread.c	/^int git_cond_free(git_cond *cond)$/;"	f	typeref:typename:int
git_cond_init	extern/libgit2/src/thread-utils.h	/^#define git_cond_init(/;"	d
git_cond_init	extern/libgit2/src/unix/pthread.h	/^#define git_cond_init(/;"	d
git_cond_init	extern/libgit2/src/win32/thread.c	/^int git_cond_init(git_cond *cond)$/;"	f	typeref:typename:int
git_cond_signal	extern/libgit2/src/thread-utils.h	/^#define git_cond_signal(/;"	d
git_cond_signal	extern/libgit2/src/unix/pthread.h	/^#define git_cond_signal(/;"	d
git_cond_signal	extern/libgit2/src/win32/thread.c	/^int git_cond_signal(git_cond *cond)$/;"	f	typeref:typename:int
git_cond_wait	extern/libgit2/src/thread-utils.h	/^#define git_cond_wait(/;"	d
git_cond_wait	extern/libgit2/src/unix/pthread.h	/^#define git_cond_wait(/;"	d
git_cond_wait	extern/libgit2/src/win32/thread.c	/^int git_cond_wait(git_cond *cond, git_mutex *mutex)$/;"	f	typeref:typename:int
git_config	extern/libgit2/include/git2/types.h	/^typedef struct git_config git_config;$/;"	t	typeref:struct:git_config
git_config	extern/libgit2/src/config.h	/^struct git_config {$/;"	s
git_config__add_internal	extern/libgit2/src/config.c	/^static int git_config__add_internal($/;"	f	typeref:typename:int	file:
git_config__configmap_lookup	extern/libgit2/src/config_cache.c	/^int git_config__configmap_lookup(int *out, git_config *config, git_configmap_item item)$/;"	f	typeref:typename:int
git_config__get_bool_force	extern/libgit2/src/config.c	/^int git_config__get_bool_force($/;"	f	typeref:typename:int
git_config__get_int_force	extern/libgit2/src/config.c	/^int git_config__get_int_force($/;"	f	typeref:typename:int
git_config__get_string_force	extern/libgit2/src/config.c	/^char *git_config__get_string_force($/;"	f	typeref:typename:char *
git_config__global_location	extern/libgit2/src/config.c	/^int git_config__global_location(git_buf *buf)$/;"	f	typeref:typename:int
git_config__lookup_entry	extern/libgit2/src/config.c	/^int git_config__lookup_entry($/;"	f	typeref:typename:int
git_config__normalize_name	extern/libgit2/src/config.c	/^int git_config__normalize_name(const char *in, char **out)$/;"	f	typeref:typename:int
git_config__update_entry	extern/libgit2/src/config.c	/^int git_config__update_entry($/;"	f	typeref:typename:int
git_config_add_backend	extern/libgit2/src/config.c	/^int git_config_add_backend($/;"	f	typeref:typename:int
git_config_add_file_ondisk	extern/libgit2/src/config.c	/^int git_config_add_file_ondisk($/;"	f	typeref:typename:int
git_config_backend	extern/libgit2/include/git2/sys/config.h	/^struct git_config_backend {$/;"	s
git_config_backend	extern/libgit2/include/git2/types.h	/^typedef struct git_config_backend git_config_backend;$/;"	t	typeref:struct:git_config_backend
git_config_backend_delete	extern/libgit2/src/config_backend.h	/^GIT_INLINE(int) git_config_backend_delete($/;"	f	typeref:typename:int
git_config_backend_foreach	extern/libgit2/src/config_backend.h	/^GIT_INLINE(int) git_config_backend_foreach($/;"	f	typeref:typename:int
git_config_backend_foreach_match	extern/libgit2/src/config.c	/^int git_config_backend_foreach_match($/;"	f	typeref:typename:int
git_config_backend_free	extern/libgit2/src/config_backend.h	/^GIT_INLINE(void) git_config_backend_free(git_config_backend *cfg)$/;"	f	typeref:typename:void
git_config_backend_from_file	extern/libgit2/src/config_file.c	/^int git_config_backend_from_file(git_config_backend **out, const char *path)$/;"	f	typeref:typename:int
git_config_backend_from_string	extern/libgit2/src/config_mem.c	/^int git_config_backend_from_string(git_config_backend **out, const char *cfg, size_t len)$/;"	f	typeref:typename:int
git_config_backend_get_string	extern/libgit2/src/config_backend.h	/^GIT_INLINE(int) git_config_backend_get_string($/;"	f	typeref:typename:int
git_config_backend_lock	extern/libgit2/src/config_backend.h	/^GIT_INLINE(int) git_config_backend_lock(git_config_backend *cfg)$/;"	f	typeref:typename:int
git_config_backend_open	extern/libgit2/src/config_backend.h	/^GIT_INLINE(int) git_config_backend_open(git_config_backend *cfg, unsigned int level, const git_r/;"	f	typeref:typename:int
git_config_backend_set_string	extern/libgit2/src/config_backend.h	/^GIT_INLINE(int) git_config_backend_set_string($/;"	f	typeref:typename:int
git_config_backend_snapshot	extern/libgit2/src/config_snapshot.c	/^int git_config_backend_snapshot(git_config_backend **out, git_config_backend *source)$/;"	f	typeref:typename:int
git_config_backend_unlock	extern/libgit2/src/config_backend.h	/^GIT_INLINE(int) git_config_backend_unlock(git_config_backend *cfg, int success)$/;"	f	typeref:typename:int
git_config_delete_entry	extern/libgit2/src/config.c	/^int git_config_delete_entry(git_config *cfg, const char *name)$/;"	f	typeref:typename:int
git_config_delete_multivar	extern/libgit2/src/config.c	/^int git_config_delete_multivar(git_config *cfg, const char *name, const char *regexp)$/;"	f	typeref:typename:int
git_config_entries	extern/libgit2/src/config_entries.c	/^struct git_config_entries {$/;"	s	file:
git_config_entries	extern/libgit2/src/config_entries.h	/^typedef struct git_config_entries git_config_entries;$/;"	t	typeref:struct:git_config_entries
git_config_entries_append	extern/libgit2/src/config_entries.c	/^int git_config_entries_append(git_config_entries *entries, git_config_entry *entry)$/;"	f	typeref:typename:int
git_config_entries_dup	extern/libgit2/src/config_entries.c	/^int git_config_entries_dup(git_config_entries **out, git_config_entries *entries)$/;"	f	typeref:typename:int
git_config_entries_dup_entry	extern/libgit2/src/config_entries.c	/^int git_config_entries_dup_entry(git_config_entries *entries, const git_config_entry *entry)$/;"	f	typeref:typename:int
git_config_entries_free	extern/libgit2/src/config_entries.c	/^void git_config_entries_free(git_config_entries *entries)$/;"	f	typeref:typename:void
git_config_entries_get	extern/libgit2/src/config_entries.c	/^int git_config_entries_get(git_config_entry **out, git_config_entries *entries, const char *key)$/;"	f	typeref:typename:int
git_config_entries_get_unique	extern/libgit2/src/config_entries.c	/^int git_config_entries_get_unique(git_config_entry **out, git_config_entries *entries, const cha/;"	f	typeref:typename:int
git_config_entries_incref	extern/libgit2/src/config_entries.c	/^void git_config_entries_incref(git_config_entries *entries)$/;"	f	typeref:typename:void
git_config_entries_iterator_new	extern/libgit2/src/config_entries.c	/^int git_config_entries_iterator_new(git_config_iterator **out, git_config_entries *entries)$/;"	f	typeref:typename:int
git_config_entries_new	extern/libgit2/src/config_entries.c	/^int git_config_entries_new(git_config_entries **out)$/;"	f	typeref:typename:int
git_config_entry	extern/libgit2/include/git2/config.h	/^typedef struct git_config_entry {$/;"	s
git_config_entry	extern/libgit2/include/git2/config.h	/^} git_config_entry;$/;"	t	typeref:struct:git_config_entry
git_config_entry_free	extern/libgit2/src/config.c	/^void git_config_entry_free(git_config_entry *entry)$/;"	f	typeref:typename:void
git_config_escaped	extern/libgit2/src/config_parse.c	/^const char *git_config_escaped = "\\n\\t\\b\\"\\\\";$/;"	v	typeref:typename:const char *
git_config_escapes	extern/libgit2/src/config_parse.c	/^const char *git_config_escapes = "ntb\\"\\\\";$/;"	v	typeref:typename:const char *
git_config_find_global	extern/libgit2/src/config.c	/^int git_config_find_global(git_buf *path)$/;"	f	typeref:typename:int
git_config_find_programdata	extern/libgit2/src/config.c	/^int git_config_find_programdata(git_buf *path)$/;"	f	typeref:typename:int
git_config_find_system	extern/libgit2/src/config.c	/^int git_config_find_system(git_buf *path)$/;"	f	typeref:typename:int
git_config_find_xdg	extern/libgit2/src/config.c	/^int git_config_find_xdg(git_buf *path)$/;"	f	typeref:typename:int
git_config_foreach	extern/libgit2/src/config.c	/^int git_config_foreach($/;"	f	typeref:typename:int
git_config_foreach_cb	extern/libgit2/include/git2/config.h	/^typedef int GIT_CALLBACK(git_config_foreach_cb)(const git_config_entry *entry, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_config_entry * entry,void * payload)
git_config_foreach_match	extern/libgit2/src/config.c	/^int git_config_foreach_match($/;"	f	typeref:typename:int
git_config_free	extern/libgit2/src/config.c	/^void git_config_free(git_config *cfg)$/;"	f	typeref:typename:void
git_config_get_bool	extern/libgit2/src/config.c	/^int git_config_get_bool(int *out, const git_config *cfg, const char *name)$/;"	f	typeref:typename:int
git_config_get_entry	extern/libgit2/src/config.c	/^int git_config_get_entry($/;"	f	typeref:typename:int
git_config_get_int32	extern/libgit2/src/config.c	/^int git_config_get_int32(int32_t *out, const git_config *cfg, const char *name)$/;"	f	typeref:typename:int
git_config_get_int64	extern/libgit2/src/config.c	/^int git_config_get_int64(int64_t *out, const git_config *cfg, const char *name)$/;"	f	typeref:typename:int
git_config_get_mapped	extern/libgit2/src/config.c	/^int git_config_get_mapped($/;"	f	typeref:typename:int
git_config_get_multivar_foreach	extern/libgit2/src/config.c	/^int git_config_get_multivar_foreach($/;"	f	typeref:typename:int
git_config_get_path	extern/libgit2/src/config.c	/^int git_config_get_path(git_buf *out, const git_config *cfg, const char *name)$/;"	f	typeref:typename:int
git_config_get_string	extern/libgit2/src/config.c	/^int git_config_get_string($/;"	f	typeref:typename:int
git_config_get_string_buf	extern/libgit2/src/config.c	/^int git_config_get_string_buf($/;"	f	typeref:typename:int
git_config_init_backend	extern/libgit2/src/config.c	/^int git_config_init_backend(git_config_backend *backend, unsigned int version)$/;"	f	typeref:typename:int
git_config_iterator	extern/libgit2/include/git2/config.h	/^typedef struct git_config_iterator git_config_iterator;$/;"	t	typeref:struct:git_config_iterator
git_config_iterator	extern/libgit2/include/git2/sys/config.h	/^struct git_config_iterator {$/;"	s
git_config_iterator_free	extern/libgit2/src/config.c	/^void git_config_iterator_free(git_config_iterator *iter)$/;"	f	typeref:typename:void
git_config_iterator_glob_new	extern/libgit2/src/config.c	/^int git_config_iterator_glob_new(git_config_iterator **out, const git_config *cfg, const char *r/;"	f	typeref:typename:int
git_config_iterator_new	extern/libgit2/src/config.c	/^int git_config_iterator_new(git_config_iterator **out, const git_config *cfg)$/;"	f	typeref:typename:int
git_config_level_t	extern/libgit2/include/git2/config.h	/^} git_config_level_t;$/;"	t	typeref:enum:__anonefb3184a0103
git_config_lock	extern/libgit2/src/config.c	/^int git_config_lock(git_transaction **out, git_config *cfg)$/;"	f	typeref:typename:int
git_config_lookup_map_enum	extern/libgit2/src/config.c	/^int git_config_lookup_map_enum(git_configmap_t *type_out, const char **str_out,$/;"	f	typeref:typename:int
git_config_lookup_map_value	extern/libgit2/src/config.c	/^int git_config_lookup_map_value($/;"	f	typeref:typename:int
git_config_multivar_iterator_new	extern/libgit2/src/config.c	/^int git_config_multivar_iterator_new(git_config_iterator **out, const git_config *cfg, const cha/;"	f	typeref:typename:int
git_config_new	extern/libgit2/src/config.c	/^int git_config_new(git_config **out)$/;"	f	typeref:typename:int
git_config_next	extern/libgit2/src/config.c	/^int git_config_next(git_config_entry **entry, git_config_iterator *iter)$/;"	f	typeref:typename:int
git_config_open_default	extern/libgit2/src/config.c	/^int git_config_open_default(git_config **out)$/;"	f	typeref:typename:int
git_config_open_global	extern/libgit2/src/config.c	/^int git_config_open_global(git_config **cfg_out, git_config *cfg)$/;"	f	typeref:typename:int
git_config_open_level	extern/libgit2/src/config.c	/^int git_config_open_level($/;"	f	typeref:typename:int
git_config_open_ondisk	extern/libgit2/src/config.c	/^int git_config_open_ondisk(git_config **out, const char *path)$/;"	f	typeref:typename:int
git_config_parse	extern/libgit2/src/config_parse.c	/^int git_config_parse($/;"	f	typeref:typename:int
git_config_parse_bool	extern/libgit2/src/config.c	/^int git_config_parse_bool(int *out, const char *value)$/;"	f	typeref:typename:int
git_config_parse_int32	extern/libgit2/src/config.c	/^int git_config_parse_int32(int32_t *out, const char *value)$/;"	f	typeref:typename:int
git_config_parse_int64	extern/libgit2/src/config.c	/^int git_config_parse_int64(int64_t *out, const char *value)$/;"	f	typeref:typename:int
git_config_parse_path	extern/libgit2/src/config.c	/^int git_config_parse_path(git_buf *out, const char *value)$/;"	f	typeref:typename:int
git_config_parser	extern/libgit2/src/config_parse.h	/^} git_config_parser;$/;"	t	typeref:struct:__anon774755630108
git_config_parser_comment_cb	extern/libgit2/src/config_parse.h	/^typedef int (*git_config_parser_comment_cb)($/;"	t	typeref:typename:int (*)(git_config_parser * parser,const char * line,size_t line_len,void * payload)
git_config_parser_dispose	extern/libgit2/src/config_parse.c	/^void git_config_parser_dispose(git_config_parser *parser)$/;"	f	typeref:typename:void
git_config_parser_eof_cb	extern/libgit2/src/config_parse.h	/^typedef int (*git_config_parser_eof_cb)($/;"	t	typeref:typename:int (*)(git_config_parser * parser,const char * current_section,void * payload)
git_config_parser_init	extern/libgit2/src/config_parse.c	/^int git_config_parser_init(git_config_parser *out, const char *path, const char *data, size_t da/;"	f	typeref:typename:int
git_config_parser_section_cb	extern/libgit2/src/config_parse.h	/^typedef int (*git_config_parser_section_cb)($/;"	t	typeref:typename:int (*)(git_config_parser * parser,const char * current_section,const char * line,size_t line_len,void * payload)
git_config_parser_variable_cb	extern/libgit2/src/config_parse.h	/^typedef int (*git_config_parser_variable_cb)($/;"	t	typeref:typename:int (*)(git_config_parser * parser,const char * current_section,const char * var_name,const char * var_value,const char * line,size_t line_len,void * payload)
git_config_rename_section	extern/libgit2/src/config.c	/^int git_config_rename_section($/;"	f	typeref:typename:int
git_config_set_bool	extern/libgit2/src/config.c	/^int git_config_set_bool(git_config *cfg, const char *name, int value)$/;"	f	typeref:typename:int
git_config_set_int32	extern/libgit2/src/config.c	/^int git_config_set_int32(git_config *cfg, const char *name, int32_t value)$/;"	f	typeref:typename:int
git_config_set_int64	extern/libgit2/src/config.c	/^int git_config_set_int64(git_config *cfg, const char *name, int64_t value)$/;"	f	typeref:typename:int
git_config_set_multivar	extern/libgit2/src/config.c	/^int git_config_set_multivar(git_config *cfg, const char *name, const char *regexp, const char *v/;"	f	typeref:typename:int
git_config_set_string	extern/libgit2/src/config.c	/^int git_config_set_string(git_config *cfg, const char *name, const char *value)$/;"	f	typeref:typename:int
git_config_snapshot	extern/libgit2/src/config.c	/^int git_config_snapshot(git_config **out, git_config *in)$/;"	f	typeref:typename:int
git_config_unlock	extern/libgit2/src/config.c	/^int git_config_unlock(git_config *cfg, int commit)$/;"	f	typeref:typename:int
git_configmap	extern/libgit2/include/git2/config.h	/^} git_configmap;$/;"	t	typeref:struct:__anonefb3184a0308
git_configmap_item	extern/libgit2/src/repository.h	/^} git_configmap_item;$/;"	t	typeref:enum:__anon05b115930103
git_configmap_t	extern/libgit2/include/git2/config.h	/^} git_configmap_t;$/;"	t	typeref:enum:__anonefb3184a0203
git_configmap_value	extern/libgit2/src/repository.h	/^} git_configmap_value;$/;"	t	typeref:enum:__anon05b115930203
git_cred	extern/libgit2/include/git2/cred.h	/^typedef struct git_cred git_cred;$/;"	t	typeref:struct:git_cred
git_cred	extern/libgit2/include/git2/sys/cred.h	/^struct git_cred {$/;"	s
git_cred_acquire_cb	extern/libgit2/include/git2/cred.h	/^typedef int GIT_CALLBACK(git_cred_acquire_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_cred ** cred,const char * url,const char * username_from_url,unsigned int allowed_types,void * payload)
git_cred_default	extern/libgit2/include/git2/cred.h	/^typedef struct git_cred git_cred_default;$/;"	t	typeref:struct:git_cred
git_cred_default_new	extern/libgit2/src/transports/cred.c	/^int git_cred_default_new(git_cred **cred)$/;"	f	typeref:typename:int
git_cred_free	extern/libgit2/src/transports/cred.c	/^void git_cred_free(git_cred *cred)$/;"	f	typeref:typename:void
git_cred_get_username	extern/libgit2/src/transports/cred.c	/^const char *git_cred_get_username(git_cred *cred)$/;"	f	typeref:typename:const char *
git_cred_has_username	extern/libgit2/src/transports/cred.c	/^int git_cred_has_username(git_cred *cred)$/;"	f	typeref:typename:int
git_cred_sign_callback	extern/libgit2/include/git2/deprecated.h	/^typedef git_cred_sign_cb git_cred_sign_callback;$/;"	t	typeref:typename:git_cred_sign_cb
git_cred_sign_cb	extern/libgit2/include/git2/cred.h	/^typedef int GIT_CALLBACK(git_cred_sign_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(LIBSSH2_SESSION * session,unsigned char ** sig,size_t * sig_len,const unsigned char * data,size_t data_len,void ** abstract)
git_cred_ssh_custom	extern/libgit2/include/git2/cred.h	/^typedef struct git_cred_ssh_custom git_cred_ssh_custom;$/;"	t	typeref:struct:git_cred_ssh_custom
git_cred_ssh_custom	extern/libgit2/include/git2/sys/cred.h	/^struct git_cred_ssh_custom {$/;"	s
git_cred_ssh_custom_new	extern/libgit2/src/transports/cred.c	/^int git_cred_ssh_custom_new($/;"	f	typeref:typename:int
git_cred_ssh_interactive	extern/libgit2/include/git2/cred.h	/^typedef struct git_cred_ssh_interactive git_cred_ssh_interactive;$/;"	t	typeref:struct:git_cred_ssh_interactive
git_cred_ssh_interactive	extern/libgit2/include/git2/sys/cred.h	/^struct git_cred_ssh_interactive {$/;"	s
git_cred_ssh_interactive_callback	extern/libgit2/include/git2/deprecated.h	/^typedef git_cred_ssh_interactive_cb git_cred_ssh_interactive_callback;$/;"	t	typeref:typename:git_cred_ssh_interactive_cb
git_cred_ssh_interactive_cb	extern/libgit2/include/git2/cred.h	/^typedef void GIT_CALLBACK(git_cred_ssh_interactive_cb)($/;"	t	typeref:typename:void GIT_CALLBACK ()(const char * name,int name_len,const char * instruction,int instruction_len,int num_prompts,const LIBSSH2_USERAUTH_KBDINT_PROMPT * prompts,LIBSSH2_USERAUTH_KBDINT_RESPONSE * responses,void ** abstract)
git_cred_ssh_interactive_new	extern/libgit2/src/transports/cred.c	/^int git_cred_ssh_interactive_new($/;"	f	typeref:typename:int
git_cred_ssh_key	extern/libgit2/include/git2/cred.h	/^typedef struct git_cred_ssh_key git_cred_ssh_key;$/;"	t	typeref:struct:git_cred_ssh_key
git_cred_ssh_key	extern/libgit2/include/git2/sys/cred.h	/^struct git_cred_ssh_key {$/;"	s
git_cred_ssh_key_from_agent	extern/libgit2/src/transports/cred.c	/^int git_cred_ssh_key_from_agent(git_cred **cred, const char *username) {$/;"	f	typeref:typename:int
git_cred_ssh_key_memory_new	extern/libgit2/src/transports/cred.c	/^int git_cred_ssh_key_memory_new($/;"	f	typeref:typename:int
git_cred_ssh_key_new	extern/libgit2/src/transports/cred.c	/^int git_cred_ssh_key_new($/;"	f	typeref:typename:int
git_cred_ssh_key_type_new	extern/libgit2/src/transports/cred.c	/^static int git_cred_ssh_key_type_new($/;"	f	typeref:typename:int	file:
git_cred_username	extern/libgit2/include/git2/cred.h	/^typedef struct git_cred_username git_cred_username;$/;"	t	typeref:struct:git_cred_username
git_cred_username	extern/libgit2/include/git2/sys/cred.h	/^struct git_cred_username {$/;"	s
git_cred_username_new	extern/libgit2/src/transports/cred.c	/^int git_cred_username_new(git_cred **cred, const char *username)$/;"	f	typeref:typename:int
git_cred_userpass	extern/libgit2/src/transports/cred_helpers.c	/^int git_cred_userpass($/;"	f	typeref:typename:int
git_cred_userpass_payload	extern/libgit2/include/git2/cred_helpers.h	/^typedef struct git_cred_userpass_payload {$/;"	s
git_cred_userpass_payload	extern/libgit2/include/git2/cred_helpers.h	/^} git_cred_userpass_payload;$/;"	t	typeref:struct:git_cred_userpass_payload
git_cred_userpass_plaintext	extern/libgit2/include/git2/cred.h	/^typedef struct git_cred_userpass_plaintext git_cred_userpass_plaintext;$/;"	t	typeref:struct:git_cred_userpass_plaintext
git_cred_userpass_plaintext	extern/libgit2/include/git2/sys/cred.h	/^struct git_cred_userpass_plaintext {$/;"	s
git_cred_userpass_plaintext_new	extern/libgit2/src/transports/cred.c	/^int git_cred_userpass_plaintext_new($/;"	f	typeref:typename:int
git_credtype_t	extern/libgit2/include/git2/cred.h	/^} git_credtype_t;$/;"	t	typeref:enum:__anon704f4ef20103
git_crlf_filter_new	extern/libgit2/src/crlf.c	/^git_filter *git_crlf_filter_new(void)$/;"	f	typeref:typename:git_filter *
git_crlf_t	extern/libgit2/src/crlf.c	/^} git_crlf_t;$/;"	t	typeref:enum:__anon5fed15950103	file:
git_cvar_map	extern/libgit2/include/git2/deprecated.h	/^typedef git_configmap git_cvar_map;$/;"	t	typeref:typename:git_configmap
git_decode_varint	extern/libgit2/src/varint.c	/^uintmax_t git_decode_varint(const unsigned char *bufp, size_t *varint_len)$/;"	f	typeref:typename:uintmax_t
git_delta	extern/libgit2/src/delta.h	/^GIT_INLINE(int) git_delta($/;"	f	typeref:typename:int
git_delta_apply	extern/libgit2/src/delta.c	/^int git_delta_apply($/;"	f	typeref:typename:int
git_delta_create_from_index	extern/libgit2/src/delta.c	/^int git_delta_create_from_index($/;"	f	typeref:typename:int
git_delta_index	extern/libgit2/src/delta.c	/^struct git_delta_index {$/;"	s	file:
git_delta_index	extern/libgit2/src/delta.h	/^typedef struct git_delta_index git_delta_index;$/;"	t	typeref:struct:git_delta_index
git_delta_index_free	extern/libgit2/src/delta.c	/^void git_delta_index_free(git_delta_index *index)$/;"	f	typeref:typename:void
git_delta_index_init	extern/libgit2/src/delta.c	/^int git_delta_index_init($/;"	f	typeref:typename:int
git_delta_index_size	extern/libgit2/src/delta.c	/^size_t git_delta_index_size(git_delta_index *index)$/;"	f	typeref:typename:size_t
git_delta_read_header	extern/libgit2/src/delta.c	/^int git_delta_read_header($/;"	f	typeref:typename:int
git_delta_read_header_fromstream	extern/libgit2/src/delta.c	/^int git_delta_read_header_fromstream($/;"	f	typeref:typename:int
git_delta_t	extern/libgit2/include/git2/diff.h	/^} git_delta_t;$/;"	t	typeref:enum:__anon72022fed0303
git_dependency_chain	extern/libgit2/src/pack.h	/^typedef git_array_t(struct pack_chain_elem) git_dependency_chain;$/;"	t
git_describe_commit	extern/libgit2/src/describe.c	/^int git_describe_commit($/;"	f	typeref:typename:int
git_describe_format	extern/libgit2/src/describe.c	/^int git_describe_format(git_buf *out, const git_describe_result *result, const git_describe_form/;"	f	typeref:typename:int
git_describe_format_options	extern/libgit2/include/git2/describe.h	/^} git_describe_format_options;$/;"	t	typeref:struct:__anoneba207f50208
git_describe_format_options_init	extern/libgit2/src/describe.c	/^int git_describe_format_options_init(git_describe_format_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_describe_init_format_options	extern/libgit2/src/describe.c	/^int git_describe_init_format_options(git_describe_format_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_describe_init_options	extern/libgit2/src/describe.c	/^int git_describe_init_options(git_describe_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_describe_options	extern/libgit2/include/git2/describe.h	/^typedef struct git_describe_options {$/;"	s
git_describe_options	extern/libgit2/include/git2/describe.h	/^} git_describe_options;$/;"	t	typeref:struct:git_describe_options
git_describe_options_init	extern/libgit2/src/describe.c	/^int git_describe_options_init(git_describe_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_describe_result	extern/libgit2/include/git2/describe.h	/^typedef struct git_describe_result git_describe_result;$/;"	t	typeref:struct:git_describe_result
git_describe_result	extern/libgit2/src/describe.c	/^struct git_describe_result {$/;"	s	file:
git_describe_result_free	extern/libgit2/src/describe.c	/^void git_describe_result_free(git_describe_result *result)$/;"	f	typeref:typename:void
git_describe_strategy_t	extern/libgit2/include/git2/describe.h	/^} git_describe_strategy_t;$/;"	t	typeref:enum:__anoneba207f50103
git_describe_workdir	extern/libgit2/src/describe.c	/^int git_describe_workdir($/;"	f	typeref:typename:int
git_diff	extern/libgit2/include/git2/diff.h	/^typedef struct git_diff git_diff;$/;"	t	typeref:struct:git_diff
git_diff	extern/libgit2/src/diff.h	/^struct git_diff {$/;"	s
git_diff__commit	extern/libgit2/src/diff_generate.c	/^int git_diff__commit($/;"	f	typeref:typename:int
git_diff__delta_dup	extern/libgit2/src/diff_tform.c	/^git_diff_delta *git_diff__delta_dup($/;"	f	typeref:typename:git_diff_delta *
git_diff__entry_cmp	extern/libgit2/src/diff.c	/^int git_diff__entry_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_diff__entry_icmp	extern/libgit2/src/diff.c	/^int git_diff__entry_icmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_diff__from_iterators	extern/libgit2/src/diff_generate.c	/^int git_diff__from_iterators($/;"	f	typeref:typename:int
git_diff__merge	extern/libgit2/src/diff_tform.c	/^int git_diff__merge($/;"	f	typeref:typename:int
git_diff__merge_cb	extern/libgit2/src/diff_generate.h	/^typedef git_diff_delta *(*git_diff__merge_cb)($/;"	t	typeref:typename:git_diff_delta * (*)(const git_diff_delta * left,const git_diff_delta * right,git_pool * pool)
git_diff__merge_like_cgit	extern/libgit2/src/diff_tform.c	/^git_diff_delta *git_diff__merge_like_cgit($/;"	f	typeref:typename:git_diff_delta *
git_diff__oid_for_entry	extern/libgit2/src/diff_generate.c	/^int git_diff__oid_for_entry($/;"	f	typeref:typename:int
git_diff__oid_for_file	extern/libgit2/src/diff_generate.c	/^int git_diff__oid_for_file($/;"	f	typeref:typename:int
git_diff__paired_foreach	extern/libgit2/src/diff_generate.c	/^int git_diff__paired_foreach($/;"	f	typeref:typename:int
git_diff__set_ignore_case	extern/libgit2/src/diff_generate.c	/^void git_diff__set_ignore_case(git_diff *diff, bool ignore_case)$/;"	f	typeref:typename:void
git_diff_addref	extern/libgit2/src/diff.c	/^void git_diff_addref(git_diff *diff)$/;"	f	typeref:typename:void
git_diff_binary	extern/libgit2/include/git2/diff.h	/^} git_diff_binary;$/;"	t	typeref:struct:__anon72022fed0908
git_diff_binary_cb	extern/libgit2/include/git2/diff.h	/^typedef int GIT_CALLBACK(git_diff_binary_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff_delta * delta,const git_diff_binary * binary,void * payload)
git_diff_binary_file	extern/libgit2/include/git2/diff.h	/^} git_diff_binary_file;$/;"	t	typeref:struct:__anon72022fed0808
git_diff_binary_t	extern/libgit2/include/git2/diff.h	/^} git_diff_binary_t;$/;"	t	typeref:enum:__anon72022fed0703
git_diff_blob_to_buffer	extern/libgit2/src/patch_generate.c	/^int git_diff_blob_to_buffer($/;"	f	typeref:typename:int
git_diff_blobs	extern/libgit2/src/patch_generate.c	/^int git_diff_blobs($/;"	f	typeref:typename:int
git_diff_buffers	extern/libgit2/src/patch_generate.c	/^int git_diff_buffers($/;"	f	typeref:typename:int
git_diff_commit_as_email	extern/libgit2/src/diff.c	/^int git_diff_commit_as_email($/;"	f	typeref:typename:int
git_diff_delta	extern/libgit2/include/git2/diff.h	/^} git_diff_delta;$/;"	t	typeref:struct:__anon72022fed0508
git_diff_delta__casecmp	extern/libgit2/src/diff.c	/^int git_diff_delta__casecmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_diff_delta__cmp	extern/libgit2/src/diff.c	/^int git_diff_delta__cmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_diff_delta__format_file_header	extern/libgit2/src/diff_print.c	/^int git_diff_delta__format_file_header($/;"	f	typeref:typename:int
git_diff_delta__i2w_casecmp	extern/libgit2/src/diff_generate.c	/^int git_diff_delta__i2w_casecmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_diff_delta__i2w_cmp	extern/libgit2/src/diff_generate.c	/^int git_diff_delta__i2w_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_diff_delta__path	extern/libgit2/src/diff.c	/^const char *git_diff_delta__path(const git_diff_delta *delta)$/;"	f	typeref:typename:const char *
git_diff_delta__should_skip	extern/libgit2/src/diff_generate.c	/^bool git_diff_delta__should_skip($/;"	f	typeref:typename:bool
git_diff_driver	extern/libgit2/src/diff_driver.c	/^struct git_diff_driver {$/;"	s	file:
git_diff_driver	extern/libgit2/src/diff_driver.h	/^typedef struct git_diff_driver git_diff_driver;$/;"	t	typeref:struct:git_diff_driver
git_diff_driver_builtin	extern/libgit2/src/diff_driver.c	/^static int git_diff_driver_builtin($/;"	f	typeref:typename:int	file:
git_diff_driver_content_is_binary	extern/libgit2/src/diff_driver.c	/^int git_diff_driver_content_is_binary($/;"	f	typeref:typename:int
git_diff_driver_definition	extern/libgit2/src/userdiff.h	/^} git_diff_driver_definition;$/;"	t	typeref:struct:__anon76bd502b0108
git_diff_driver_free	extern/libgit2/src/diff_driver.c	/^void git_diff_driver_free(git_diff_driver *driver)$/;"	f	typeref:typename:void
git_diff_driver_load	extern/libgit2/src/diff_driver.c	/^static int git_diff_driver_load($/;"	f	typeref:typename:int	file:
git_diff_driver_lookup	extern/libgit2/src/diff_driver.c	/^int git_diff_driver_lookup($/;"	f	typeref:typename:int
git_diff_driver_pattern	extern/libgit2/src/diff_driver.c	/^} git_diff_driver_pattern;$/;"	t	typeref:struct:__anon6fb9a4920208	file:
git_diff_driver_registry	extern/libgit2/src/diff_driver.c	/^struct git_diff_driver_registry {$/;"	s	file:
git_diff_driver_registry	extern/libgit2/src/diff_driver.h	/^typedef struct git_diff_driver_registry git_diff_driver_registry;$/;"	t	typeref:struct:git_diff_driver_registry
git_diff_driver_registry_free	extern/libgit2/src/diff_driver.c	/^void git_diff_driver_registry_free(git_diff_driver_registry *reg)$/;"	f	typeref:typename:void
git_diff_driver_registry_new	extern/libgit2/src/diff_driver.c	/^git_diff_driver_registry *git_diff_driver_registry_new(void)$/;"	f	typeref:typename:git_diff_driver_registry *
git_diff_driver_t	extern/libgit2/src/diff_driver.c	/^} git_diff_driver_t;$/;"	t	typeref:enum:__anon6fb9a4920103	file:
git_diff_driver_update_options	extern/libgit2/src/diff_driver.c	/^void git_diff_driver_update_options($/;"	f	typeref:typename:void
git_diff_file	extern/libgit2/include/git2/diff.h	/^} git_diff_file;$/;"	t	typeref:struct:__anon72022fed0408
git_diff_file__resolve_zero_size	extern/libgit2/src/diff_generate.h	/^GIT_INLINE(int) git_diff_file__resolve_zero_size($/;"	f	typeref:typename:int
git_diff_file_cb	extern/libgit2/include/git2/diff.h	/^typedef int GIT_CALLBACK(git_diff_file_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff_delta * delta,float progress,void * payload)
git_diff_file_content	extern/libgit2/src/diff_file.h	/^} git_diff_file_content;$/;"	t	typeref:struct:__anon2493e46b0108
git_diff_file_content__clear	extern/libgit2/src/diff_file.c	/^void git_diff_file_content__clear(git_diff_file_content *fc)$/;"	f	typeref:typename:void
git_diff_file_content__init_from_diff	extern/libgit2/src/diff_file.c	/^int git_diff_file_content__init_from_diff($/;"	f	typeref:typename:int
git_diff_file_content__init_from_src	extern/libgit2/src/diff_file.c	/^int git_diff_file_content__init_from_src($/;"	f	typeref:typename:int
git_diff_file_content__load	extern/libgit2/src/diff_file.c	/^int git_diff_file_content__load($/;"	f	typeref:typename:int
git_diff_file_content__unload	extern/libgit2/src/diff_file.c	/^void git_diff_file_content__unload(git_diff_file_content *fc)$/;"	f	typeref:typename:void
git_diff_file_content_src	extern/libgit2/src/diff_file.h	/^} git_diff_file_content_src;$/;"	t	typeref:struct:__anon2493e46b0208
git_diff_file_stats__full_to_buf	extern/libgit2/src/diff_stats.c	/^int git_diff_file_stats__full_to_buf($/;"	f	typeref:typename:int
git_diff_file_stats__number_to_buf	extern/libgit2/src/diff_stats.c	/^int git_diff_file_stats__number_to_buf($/;"	f	typeref:typename:int
git_diff_file_stats__summary_to_buf	extern/libgit2/src/diff_stats.c	/^int git_diff_file_stats__summary_to_buf($/;"	f	typeref:typename:int
git_diff_find_context_clear	extern/libgit2/src/diff_driver.c	/^void git_diff_find_context_clear(git_diff_find_context_payload *payload)$/;"	f	typeref:typename:void
git_diff_find_context_fn	extern/libgit2/src/diff_driver.h	/^typedef long (*git_diff_find_context_fn)($/;"	t	typeref:typename:long (*)(const char *,long,char *,long,void *)
git_diff_find_context_init	extern/libgit2/src/diff_driver.c	/^void git_diff_find_context_init($/;"	f	typeref:typename:void
git_diff_find_context_line	extern/libgit2/src/diff_driver.h	/^typedef int (*git_diff_find_context_line)($/;"	t	typeref:typename:int (*)(git_diff_driver *,git_buf *)
git_diff_find_context_payload	extern/libgit2/src/diff_driver.h	/^} git_diff_find_context_payload;$/;"	t	typeref:struct:__anon6fb9a4970108
git_diff_find_init_options	extern/libgit2/src/diff.c	/^int git_diff_find_init_options($/;"	f	typeref:typename:int
git_diff_find_options	extern/libgit2/include/git2/diff.h	/^} git_diff_find_options;$/;"	t	typeref:struct:__anon72022fed0f08
git_diff_find_options_init	extern/libgit2/src/diff.c	/^int git_diff_find_options_init($/;"	f	typeref:typename:int
git_diff_find_similar	extern/libgit2/src/diff_tform.c	/^int git_diff_find_similar($/;"	f	typeref:typename:int
git_diff_find_similar__calc_similarity	extern/libgit2/src/diff_tform.c	/^int git_diff_find_similar__calc_similarity($/;"	f	typeref:typename:int
git_diff_find_similar__hashsig_for_buf	extern/libgit2/src/diff_tform.c	/^int git_diff_find_similar__hashsig_for_buf($/;"	f	typeref:typename:int
git_diff_find_similar__hashsig_for_file	extern/libgit2/src/diff_tform.c	/^int git_diff_find_similar__hashsig_for_file($/;"	f	typeref:typename:int
git_diff_find_similar__hashsig_free	extern/libgit2/src/diff_tform.c	/^void git_diff_find_similar__hashsig_free(void *sig, void *payload)$/;"	f	typeref:typename:void
git_diff_find_t	extern/libgit2/include/git2/diff.h	/^} git_diff_find_t;$/;"	t	typeref:enum:__anon72022fed0d03
git_diff_flag_t	extern/libgit2/include/git2/diff.h	/^} git_diff_flag_t;$/;"	t	typeref:enum:__anon72022fed0203
git_diff_foreach	extern/libgit2/src/diff.c	/^int git_diff_foreach($/;"	f	typeref:typename:int
git_diff_format_email	extern/libgit2/src/diff.c	/^int git_diff_format_email($/;"	f	typeref:typename:int
git_diff_format_email__append_header_tobuf	extern/libgit2/src/diff.c	/^int git_diff_format_email__append_header_tobuf($/;"	f	typeref:typename:int
git_diff_format_email__append_patches_tobuf	extern/libgit2/src/diff.c	/^int git_diff_format_email__append_patches_tobuf($/;"	f	typeref:typename:int
git_diff_format_email_flags_t	extern/libgit2/include/git2/diff.h	/^} git_diff_format_email_flags_t;$/;"	t	typeref:enum:__anon72022fed1203
git_diff_format_email_init_options	extern/libgit2/src/diff.c	/^int git_diff_format_email_init_options($/;"	f	typeref:typename:int
git_diff_format_email_options	extern/libgit2/include/git2/diff.h	/^} git_diff_format_email_options;$/;"	t	typeref:struct:__anon72022fed1308
git_diff_format_email_options_init	extern/libgit2/src/diff.c	/^int git_diff_format_email_options_init($/;"	f	typeref:typename:int
git_diff_format_t	extern/libgit2/include/git2/diff.h	/^} git_diff_format_t;$/;"	t	typeref:enum:__anon72022fed1003
git_diff_free	extern/libgit2/src/diff.c	/^void git_diff_free(git_diff *diff)$/;"	f	typeref:typename:void
git_diff_from_buffer	extern/libgit2/src/diff_parse.c	/^int git_diff_from_buffer($/;"	f	typeref:typename:int
git_diff_generated	extern/libgit2/src/diff_generate.c	/^} git_diff_generated;$/;"	t	typeref:struct:__anon047407f10108	file:
git_diff_get_delta	extern/libgit2/src/diff.c	/^const git_diff_delta *git_diff_get_delta(const git_diff *diff, size_t idx)$/;"	f	typeref:typename:const git_diff_delta *
git_diff_get_perfdata	extern/libgit2/src/diff.c	/^int git_diff_get_perfdata(git_diff_perfdata *out, const git_diff *diff)$/;"	f	typeref:typename:int
git_diff_get_stats	extern/libgit2/src/diff_stats.c	/^int git_diff_get_stats($/;"	f	typeref:typename:int
git_diff_hunk	extern/libgit2/include/git2/diff.h	/^} git_diff_hunk;$/;"	t	typeref:struct:__anon72022fed0a08
git_diff_hunk_cb	extern/libgit2/include/git2/diff.h	/^typedef int GIT_CALLBACK(git_diff_hunk_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff_delta * delta,const git_diff_hunk * hunk,void * payload)
git_diff_index_to_index	extern/libgit2/src/diff_generate.c	/^int git_diff_index_to_index($/;"	f	typeref:typename:int
git_diff_index_to_workdir	extern/libgit2/src/diff_generate.c	/^int git_diff_index_to_workdir($/;"	f	typeref:typename:int
git_diff_init_options	extern/libgit2/src/diff.c	/^int git_diff_init_options(git_diff_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_diff_is_sorted_icase	extern/libgit2/src/diff.c	/^int git_diff_is_sorted_icase(const git_diff *diff)$/;"	f	typeref:typename:int
git_diff_line	extern/libgit2/include/git2/diff.h	/^} git_diff_line;$/;"	t	typeref:struct:__anon72022fed0c08
git_diff_line_cb	extern/libgit2/include/git2/diff.h	/^typedef int GIT_CALLBACK(git_diff_line_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff_delta * delta,const git_diff_hunk * hunk,const git_diff_line * line,void * payload)
git_diff_line_t	extern/libgit2/include/git2/diff.h	/^} git_diff_line_t;$/;"	t	typeref:enum:__anon72022fed0b03
git_diff_merge	extern/libgit2/src/diff_tform.c	/^int git_diff_merge(git_diff *onto, const git_diff *from)$/;"	f	typeref:typename:int
git_diff_notify_cb	extern/libgit2/include/git2/diff.h	/^typedef int GIT_CALLBACK(git_diff_notify_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff * diff_so_far,const git_diff_delta * delta_to_add,const char * matched_pathspec,void * payload)
git_diff_num_deltas	extern/libgit2/src/diff.c	/^size_t git_diff_num_deltas(const git_diff *diff)$/;"	f	typeref:typename:size_t
git_diff_num_deltas_of_type	extern/libgit2/src/diff.c	/^size_t git_diff_num_deltas_of_type(const git_diff *diff, git_delta_t type)$/;"	f	typeref:typename:size_t
git_diff_option_t	extern/libgit2/include/git2/diff.h	/^} git_diff_option_t;$/;"	t	typeref:enum:__anon72022fed0103
git_diff_options	extern/libgit2/include/git2/diff.h	/^} git_diff_options;$/;"	t	typeref:struct:__anon72022fed0608
git_diff_options_init	extern/libgit2/src/diff.c	/^int git_diff_options_init(git_diff_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_diff_origin_t	extern/libgit2/src/diff.h	/^} git_diff_origin_t;$/;"	t	typeref:enum:__anon619c176c0103
git_diff_parsed	extern/libgit2/src/diff_parse.h	/^} git_diff_parsed;$/;"	t	typeref:struct:__anona6a2af860108
git_diff_patchid	extern/libgit2/src/diff.c	/^int git_diff_patchid(git_oid *out, git_diff *diff, git_diff_patchid_options *opts)$/;"	f	typeref:typename:int
git_diff_patchid_options	extern/libgit2/include/git2/diff.h	/^typedef struct git_diff_patchid_options {$/;"	s
git_diff_patchid_options	extern/libgit2/include/git2/diff.h	/^} git_diff_patchid_options;$/;"	t	typeref:struct:git_diff_patchid_options
git_diff_patchid_options_init	extern/libgit2/src/diff.c	/^int git_diff_patchid_options_init(git_diff_patchid_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_diff_perfdata	extern/libgit2/include/git2/sys/diff.h	/^} git_diff_perfdata;$/;"	t	typeref:struct:__anon7e7f02bb0108
git_diff_print	extern/libgit2/src/diff_print.c	/^int git_diff_print($/;"	f	typeref:typename:int
git_diff_print_callback__to_buf	extern/libgit2/src/diff_print.c	/^int git_diff_print_callback__to_buf($/;"	f	typeref:typename:int
git_diff_print_callback__to_file_handle	extern/libgit2/src/diff_print.c	/^int git_diff_print_callback__to_file_handle($/;"	f	typeref:typename:int
git_diff_progress_cb	extern/libgit2/include/git2/diff.h	/^typedef int GIT_CALLBACK(git_diff_progress_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff * diff_so_far,const char * old_path,const char * new_path,void * payload)
git_diff_similarity_metric	extern/libgit2/include/git2/diff.h	/^} git_diff_similarity_metric;$/;"	t	typeref:struct:__anon72022fed0e08
git_diff_stats	extern/libgit2/include/git2/diff.h	/^typedef struct git_diff_stats git_diff_stats;$/;"	t	typeref:struct:git_diff_stats
git_diff_stats	extern/libgit2/src/diff_stats.c	/^struct git_diff_stats {$/;"	s	file:
git_diff_stats_deletions	extern/libgit2/src/diff_stats.c	/^size_t git_diff_stats_deletions($/;"	f	typeref:typename:size_t
git_diff_stats_files_changed	extern/libgit2/src/diff_stats.c	/^size_t git_diff_stats_files_changed($/;"	f	typeref:typename:size_t
git_diff_stats_format_t	extern/libgit2/include/git2/diff.h	/^} git_diff_stats_format_t;$/;"	t	typeref:enum:__anon72022fed1103
git_diff_stats_free	extern/libgit2/src/diff_stats.c	/^void git_diff_stats_free(git_diff_stats *stats)$/;"	f	typeref:typename:void
git_diff_stats_insertions	extern/libgit2/src/diff_stats.c	/^size_t git_diff_stats_insertions($/;"	f	typeref:typename:size_t
git_diff_stats_to_buf	extern/libgit2/src/diff_stats.c	/^int git_diff_stats_to_buf($/;"	f	typeref:typename:int
git_diff_status_char	extern/libgit2/src/diff_print.c	/^char git_diff_status_char(git_delta_t status)$/;"	f	typeref:typename:char
git_diff_to_buf	extern/libgit2/src/diff_print.c	/^int git_diff_to_buf(git_buf *out, git_diff *diff, git_diff_format_t format)$/;"	f	typeref:typename:int
git_diff_tree_to_index	extern/libgit2/src/diff_generate.c	/^int git_diff_tree_to_index($/;"	f	typeref:typename:int
git_diff_tree_to_tree	extern/libgit2/src/diff_generate.c	/^int git_diff_tree_to_tree($/;"	f	typeref:typename:int
git_diff_tree_to_workdir	extern/libgit2/src/diff_generate.c	/^int git_diff_tree_to_workdir($/;"	f	typeref:typename:int
git_diff_tree_to_workdir_with_index	extern/libgit2/src/diff_generate.c	/^int git_diff_tree_to_workdir_with_index($/;"	f	typeref:typename:int
git_dir_flag	extern/libgit2/src/attr_file.h	/^typedef enum { GIT_DIR_FLAG_TRUE = 1, GIT_DIR_FLAG_FALSE = 0, GIT_DIR_FLAG_UNKNOWN = -1 } git_di/;"	t	typeref:enum:__anon32d629ad0a03
git_direction	extern/libgit2/include/git2/net.h	/^} git_direction;$/;"	t	typeref:enum:__anon51bacafb0103
git_disable_pack_keep_file_checks	extern/libgit2/src/pack.c	/^bool git_disable_pack_keep_file_checks = false;$/;"	v	typeref:typename:bool
git_encode_varint	extern/libgit2/src/varint.c	/^int git_encode_varint(unsigned char *buf, size_t bufsize, uintmax_t value)$/;"	f	typeref:typename:int
git_error	extern/libgit2/include/git2/errors.h	/^} git_error;$/;"	t	typeref:struct:__anonb92219d10208
git_error__check_version	extern/libgit2/src/common.h	/^GIT_INLINE(int) git_error__check_version(const void *structure, unsigned int expected_max, const/;"	f	typeref:typename:int
git_error_clear	extern/libgit2/src/errors.c	/^void git_error_clear(void)$/;"	f	typeref:typename:void
git_error_code	extern/libgit2/include/git2/errors.h	/^} git_error_code;$/;"	t	typeref:enum:__anonb92219d10103
git_error_last	extern/libgit2/src/errors.c	/^const git_error *git_error_last(void)$/;"	f	typeref:typename:const git_error *
git_error_set	extern/libgit2/src/errors.c	/^void git_error_set(int error_class, const char *fmt, ...)$/;"	f	typeref:typename:void
git_error_set_after_callback	extern/libgit2/src/errors.h	/^#define git_error_set_after_callback(/;"	d
git_error_set_after_callback_function	extern/libgit2/src/errors.h	/^GIT_INLINE(int) git_error_set_after_callback_function($/;"	f	typeref:typename:int
git_error_set_oom	extern/libgit2/src/errors.c	/^void git_error_set_oom(void)$/;"	f	typeref:typename:void
git_error_set_regex	extern/libgit2/src/errors.c	/^int git_error_set_regex(const p_regex_t *regex, int error_code)$/;"	f	typeref:typename:int
git_error_set_str	extern/libgit2/src/errors.c	/^void git_error_set_str(int error_class, const char *string)$/;"	f	typeref:typename:void
git_error_state	extern/libgit2/src/errors.h	/^} git_error_state;$/;"	t	typeref:struct:__anonf6d3dd100108
git_error_state_capture	extern/libgit2/src/errors.c	/^int git_error_state_capture(git_error_state *state, int error_code)$/;"	f	typeref:typename:int
git_error_state_free	extern/libgit2/src/errors.c	/^void git_error_state_free(git_error_state *state)$/;"	f	typeref:typename:void
git_error_state_restore	extern/libgit2/src/errors.c	/^int git_error_state_restore(git_error_state *state)$/;"	f	typeref:typename:int
git_error_system_last	extern/libgit2/src/errors.c	/^int git_error_system_last(void)$/;"	f	typeref:typename:int
git_error_system_set	extern/libgit2/src/errors.c	/^void git_error_system_set(int code)$/;"	f	typeref:typename:void
git_error_t	extern/libgit2/include/git2/errors.h	/^} git_error_t;$/;"	t	typeref:enum:__anonb92219d10303
git_error_vset	extern/libgit2/src/errors.c	/^void git_error_vset(int error_class, const char *fmt, va_list ap)$/;"	f	typeref:typename:void
git_feature_t	extern/libgit2/include/git2/common.h	/^} git_feature_t;$/;"	t	typeref:enum:__anonede0033d0103
git_fetch_download_pack	extern/libgit2/src/fetch.c	/^int git_fetch_download_pack(git_remote *remote, const git_remote_callbacks *callbacks)$/;"	f	typeref:typename:int
git_fetch_init_options	extern/libgit2/src/fetch.c	/^int git_fetch_init_options(git_fetch_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_fetch_negotiate	extern/libgit2/src/fetch.c	/^int git_fetch_negotiate(git_remote *remote, const git_fetch_options *opts)$/;"	f	typeref:typename:int
git_fetch_options	extern/libgit2/include/git2/remote.h	/^} git_fetch_options;$/;"	t	typeref:struct:__anonc41be5800508
git_fetch_options_init	extern/libgit2/src/fetch.c	/^int git_fetch_options_init(git_fetch_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_fetch_prune_t	extern/libgit2/include/git2/remote.h	/^} git_fetch_prune_t;$/;"	t	typeref:enum:__anonc41be5800303
git_fetchhead_ref	extern/libgit2/src/fetchhead.h	/^typedef struct git_fetchhead_ref {$/;"	s
git_fetchhead_ref	extern/libgit2/src/fetchhead.h	/^} git_fetchhead_ref;$/;"	t	typeref:struct:git_fetchhead_ref
git_fetchhead_ref_cmp	extern/libgit2/src/fetchhead.c	/^int git_fetchhead_ref_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_fetchhead_ref_create	extern/libgit2/src/fetchhead.c	/^int git_fetchhead_ref_create($/;"	f	typeref:typename:int
git_fetchhead_ref_free	extern/libgit2/src/fetchhead.c	/^void git_fetchhead_ref_free(git_fetchhead_ref *fetchhead_ref)$/;"	f	typeref:typename:void
git_fetchhead_write	extern/libgit2/src/fetchhead.c	/^int git_fetchhead_write(git_repository *repo, git_vector *fetchhead_refs)$/;"	f	typeref:typename:int
git_file	extern/libgit2/src/posix.h	/^typedef int git_file;$/;"	t	typeref:typename:int
git_filebuf	extern/libgit2/src/filebuf.h	/^struct git_filebuf {$/;"	s
git_filebuf	extern/libgit2/src/filebuf.h	/^typedef struct git_filebuf git_filebuf;$/;"	t	typeref:struct:git_filebuf
git_filebuf_cleanup	extern/libgit2/src/filebuf.c	/^void git_filebuf_cleanup(git_filebuf *file)$/;"	f	typeref:typename:void
git_filebuf_commit	extern/libgit2/src/filebuf.c	/^int git_filebuf_commit(git_filebuf *file)$/;"	f	typeref:typename:int
git_filebuf_commit_at	extern/libgit2/src/filebuf.c	/^int git_filebuf_commit_at(git_filebuf *file, const char *path)$/;"	f	typeref:typename:int
git_filebuf_flush	extern/libgit2/src/filebuf.c	/^int git_filebuf_flush(git_filebuf *file)$/;"	f	typeref:typename:int
git_filebuf_hash	extern/libgit2/src/filebuf.c	/^int git_filebuf_hash(git_oid *oid, git_filebuf *file)$/;"	f	typeref:typename:int
git_filebuf_open	extern/libgit2/src/filebuf.c	/^int git_filebuf_open(git_filebuf *file, const char *path, int flags, mode_t mode)$/;"	f	typeref:typename:int
git_filebuf_open_withsize	extern/libgit2/src/filebuf.c	/^int git_filebuf_open_withsize(git_filebuf *file, const char *path, int flags, mode_t mode, size_/;"	f	typeref:typename:int
git_filebuf_printf	extern/libgit2/src/filebuf.c	/^int git_filebuf_printf(git_filebuf *file, const char *format, ...)$/;"	f	typeref:typename:int
git_filebuf_reserve	extern/libgit2/src/filebuf.c	/^int git_filebuf_reserve(git_filebuf *file, void **buffer, size_t len)$/;"	f	typeref:typename:int
git_filebuf_stats	extern/libgit2/src/filebuf.c	/^int git_filebuf_stats(time_t *mtime, size_t *size, git_filebuf *file)$/;"	f	typeref:typename:int
git_filebuf_write	extern/libgit2/src/filebuf.c	/^int git_filebuf_write(git_filebuf *file, const void *buff, size_t len)$/;"	f	typeref:typename:int
git_filemode_t	extern/libgit2/include/git2/types.h	/^} git_filemode_t;$/;"	t	typeref:enum:__anona7f40ac90403
git_filter	extern/libgit2/include/git2/filter.h	/^typedef struct git_filter git_filter;$/;"	t	typeref:struct:git_filter
git_filter	extern/libgit2/include/git2/sys/filter.h	/^struct git_filter {$/;"	s
git_filter_apply_fn	extern/libgit2/include/git2/sys/filter.h	/^typedef int GIT_CALLBACK(git_filter_apply_fn)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_filter * self,void ** payload,git_buf * to,const git_buf * from,const git_filter_source * src)
git_filter_check_fn	extern/libgit2/include/git2/sys/filter.h	/^typedef int GIT_CALLBACK(git_filter_check_fn)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_filter * self,void ** payload,const git_filter_source * src,const char ** attr_values)
git_filter_cleanup_fn	extern/libgit2/include/git2/sys/filter.h	/^typedef void GIT_CALLBACK(git_filter_cleanup_fn)($/;"	t	typeref:typename:void GIT_CALLBACK ()(git_filter * self,void * payload)
git_filter_def	extern/libgit2/src/filter.c	/^} git_filter_def;$/;"	t	typeref:struct:__anon209df0b40208	file:
git_filter_entry	extern/libgit2/src/filter.c	/^} git_filter_entry;$/;"	t	typeref:struct:__anon209df0b40108	file:
git_filter_flag_t	extern/libgit2/include/git2/filter.h	/^} git_filter_flag_t;$/;"	t	typeref:enum:__anone2ec2d7a0203
git_filter_free	extern/libgit2/src/filter.c	/^void git_filter_free(git_filter *filter)$/;"	f	typeref:typename:void
git_filter_global_init	extern/libgit2/src/filter.c	/^int git_filter_global_init(void)$/;"	f	typeref:typename:int
git_filter_global_shutdown	extern/libgit2/src/filter.c	/^static void git_filter_global_shutdown(void)$/;"	f	typeref:typename:void	file:
git_filter_init	extern/libgit2/src/filter.c	/^int git_filter_init(git_filter *filter, unsigned int version)$/;"	f	typeref:typename:int
git_filter_init_fn	extern/libgit2/include/git2/sys/filter.h	/^typedef int GIT_CALLBACK(git_filter_init_fn)(git_filter *self);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_filter * self)
git_filter_list	extern/libgit2/include/git2/filter.h	/^typedef struct git_filter_list git_filter_list;$/;"	t	typeref:struct:git_filter_list
git_filter_list	extern/libgit2/src/filter.c	/^struct git_filter_list {$/;"	s	file:
git_filter_list__load_ext	extern/libgit2/src/filter.c	/^int git_filter_list__load_ext($/;"	f	typeref:typename:int
git_filter_list_apply_to_blob	extern/libgit2/src/filter.c	/^int git_filter_list_apply_to_blob($/;"	f	typeref:typename:int
git_filter_list_apply_to_data	extern/libgit2/src/filter.c	/^int git_filter_list_apply_to_data($/;"	f	typeref:typename:int
git_filter_list_apply_to_file	extern/libgit2/src/filter.c	/^int git_filter_list_apply_to_file($/;"	f	typeref:typename:int
git_filter_list_contains	extern/libgit2/src/filter.c	/^int git_filter_list_contains($/;"	f	typeref:typename:int
git_filter_list_free	extern/libgit2/src/filter.c	/^void git_filter_list_free(git_filter_list *fl)$/;"	f	typeref:typename:void
git_filter_list_length	extern/libgit2/src/filter.c	/^size_t git_filter_list_length(const git_filter_list *fl)$/;"	f	typeref:typename:size_t
git_filter_list_load	extern/libgit2/src/filter.c	/^int git_filter_list_load($/;"	f	typeref:typename:int
git_filter_list_new	extern/libgit2/src/filter.c	/^int git_filter_list_new($/;"	f	typeref:typename:int
git_filter_list_push	extern/libgit2/src/filter.c	/^int git_filter_list_push($/;"	f	typeref:typename:int
git_filter_list_stream_blob	extern/libgit2/src/filter.c	/^int git_filter_list_stream_blob($/;"	f	typeref:typename:int
git_filter_list_stream_data	extern/libgit2/src/filter.c	/^int git_filter_list_stream_data($/;"	f	typeref:typename:int
git_filter_list_stream_file	extern/libgit2/src/filter.c	/^int git_filter_list_stream_file($/;"	f	typeref:typename:int
git_filter_lookup	extern/libgit2/src/filter.c	/^git_filter *git_filter_lookup(const char *name)$/;"	f	typeref:typename:git_filter *
git_filter_mode_t	extern/libgit2/include/git2/filter.h	/^} git_filter_mode_t;$/;"	t	typeref:enum:__anone2ec2d7a0103
git_filter_options	extern/libgit2/src/filter.h	/^} git_filter_options;$/;"	t	typeref:struct:__anon209df0b90108
git_filter_register	extern/libgit2/src/filter.c	/^int git_filter_register($/;"	f	typeref:typename:int
git_filter_registry	extern/libgit2/src/filter.c	/^struct git_filter_registry {$/;"	s	file:
git_filter_shutdown_fn	extern/libgit2/include/git2/sys/filter.h	/^typedef void GIT_CALLBACK(git_filter_shutdown_fn)(git_filter *self);$/;"	t	typeref:typename:void GIT_CALLBACK ()(git_filter * self)
git_filter_source	extern/libgit2/include/git2/sys/filter.h	/^typedef struct git_filter_source git_filter_source;$/;"	t	typeref:struct:git_filter_source
git_filter_source	extern/libgit2/src/filter.c	/^struct git_filter_source {$/;"	s	file:
git_filter_source_filemode	extern/libgit2/src/filter.c	/^uint16_t git_filter_source_filemode(const git_filter_source *src)$/;"	f	typeref:typename:uint16_t
git_filter_source_flags	extern/libgit2/src/filter.c	/^uint32_t git_filter_source_flags(const git_filter_source *src)$/;"	f	typeref:typename:uint32_t
git_filter_source_id	extern/libgit2/src/filter.c	/^const git_oid *git_filter_source_id(const git_filter_source *src)$/;"	f	typeref:typename:const git_oid *
git_filter_source_mode	extern/libgit2/src/filter.c	/^git_filter_mode_t git_filter_source_mode(const git_filter_source *src)$/;"	f	typeref:typename:git_filter_mode_t
git_filter_source_path	extern/libgit2/src/filter.c	/^const char *git_filter_source_path(const git_filter_source *src)$/;"	f	typeref:typename:const char *
git_filter_source_repo	extern/libgit2/src/filter.c	/^git_repository *git_filter_source_repo(const git_filter_source *src)$/;"	f	typeref:typename:git_repository *
git_filter_stream_fn	extern/libgit2/include/git2/sys/filter.h	/^typedef int GIT_CALLBACK(git_filter_stream_fn)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_writestream ** out,git_filter * self,void ** payload,const git_filter_source * src,git_writestream * next)
git_filter_unregister	extern/libgit2/src/filter.c	/^int git_filter_unregister(const char *name)$/;"	f	typeref:typename:int
git_futils_canonical_mode	extern/libgit2/src/futils.c	/^mode_t git_futils_canonical_mode(mode_t raw_mode)$/;"	f	typeref:typename:mode_t
git_futils_cp	extern/libgit2/src/futils.c	/^int git_futils_cp(const char *from, const char *to, mode_t filemode)$/;"	f	typeref:typename:int
git_futils_cp_r	extern/libgit2/src/futils.c	/^int git_futils_cp_r($/;"	f	typeref:typename:int
git_futils_cpdir_flags	extern/libgit2/src/futils.h	/^} git_futils_cpdir_flags;$/;"	t	typeref:enum:__anonce3edc2a0303
git_futils_creat_locked	extern/libgit2/src/futils.c	/^int git_futils_creat_locked(const char *path, const mode_t mode)$/;"	f	typeref:typename:int
git_futils_creat_locked_withpath	extern/libgit2/src/futils.c	/^int git_futils_creat_locked_withpath(const char *path, const mode_t dirmode, const mode_t mode)$/;"	f	typeref:typename:int
git_futils_creat_withpath	extern/libgit2/src/futils.c	/^int git_futils_creat_withpath(const char *path, const mode_t dirmode, const mode_t mode)$/;"	f	typeref:typename:int
git_futils_fake_symlink	extern/libgit2/src/futils.c	/^int git_futils_fake_symlink(const char *old, const char *new)$/;"	f	typeref:typename:int
git_futils_filesize	extern/libgit2/src/futils.c	/^git_off_t git_futils_filesize(git_file fd)$/;"	f	typeref:typename:git_off_t
git_futils_filestamp	extern/libgit2/src/futils.h	/^} git_futils_filestamp;$/;"	t	typeref:struct:__anonce3edc2a0408
git_futils_filestamp_check	extern/libgit2/src/futils.c	/^int git_futils_filestamp_check($/;"	f	typeref:typename:int
git_futils_filestamp_set	extern/libgit2/src/futils.c	/^void git_futils_filestamp_set($/;"	f	typeref:typename:void
git_futils_filestamp_set_from_stat	extern/libgit2/src/futils.c	/^void git_futils_filestamp_set_from_stat($/;"	f	typeref:typename:void
git_futils_fsync_dir	extern/libgit2/src/futils.c	/^int git_futils_fsync_dir(const char *path)$/;"	f	typeref:typename:int
git_futils_fsync_parent	extern/libgit2/src/futils.c	/^int git_futils_fsync_parent(const char *path)$/;"	f	typeref:typename:int
git_futils_mkdir	extern/libgit2/src/futils.c	/^int git_futils_mkdir($/;"	f	typeref:typename:int
git_futils_mkdir_flags	extern/libgit2/src/futils.h	/^} git_futils_mkdir_flags;$/;"	t	typeref:enum:__anonce3edc2a0103
git_futils_mkdir_options	extern/libgit2/src/futils.h	/^struct git_futils_mkdir_options$/;"	s
git_futils_mkdir_perfdata	extern/libgit2/src/futils.h	/^struct git_futils_mkdir_perfdata$/;"	s
git_futils_mkdir_r	extern/libgit2/src/futils.c	/^int git_futils_mkdir_r(const char *path, const mode_t mode)$/;"	f	typeref:typename:int
git_futils_mkdir_relative	extern/libgit2/src/futils.c	/^int git_futils_mkdir_relative($/;"	f	typeref:typename:int
git_futils_mkpath2file	extern/libgit2/src/futils.c	/^int git_futils_mkpath2file(const char *file_path, const mode_t mode)$/;"	f	typeref:typename:int
git_futils_mktmp	extern/libgit2/src/futils.c	/^int git_futils_mktmp(git_buf *path_out, const char *filename, mode_t mode)$/;"	f	typeref:typename:int
git_futils_mmap_free	extern/libgit2/src/futils.c	/^void git_futils_mmap_free(git_map *out)$/;"	f	typeref:typename:void
git_futils_mmap_ro	extern/libgit2/src/futils.c	/^int git_futils_mmap_ro(git_map *out, git_file fd, git_off_t begin, size_t len)$/;"	f	typeref:typename:int
git_futils_mmap_ro_file	extern/libgit2/src/futils.c	/^int git_futils_mmap_ro_file(git_map *out, const char *path)$/;"	f	typeref:typename:int
git_futils_mv_withpath	extern/libgit2/src/futils.c	/^int git_futils_mv_withpath(const char *from, const char *to, const mode_t dirmode)$/;"	f	typeref:typename:int
git_futils_open_ro	extern/libgit2/src/futils.c	/^int git_futils_open_ro(const char *path)$/;"	f	typeref:typename:int
git_futils_readbuffer	extern/libgit2/src/futils.c	/^int git_futils_readbuffer(git_buf *buf, const char *path)$/;"	f	typeref:typename:int
git_futils_readbuffer_fd	extern/libgit2/src/futils.c	/^int git_futils_readbuffer_fd(git_buf *buf, git_file fd, size_t len)$/;"	f	typeref:typename:int
git_futils_readbuffer_updated	extern/libgit2/src/futils.c	/^int git_futils_readbuffer_updated($/;"	f	typeref:typename:int
git_futils_rmdir_flags	extern/libgit2/src/futils.h	/^} git_futils_rmdir_flags;$/;"	t	typeref:enum:__anonce3edc2a0203
git_futils_rmdir_r	extern/libgit2/src/futils.c	/^int git_futils_rmdir_r($/;"	f	typeref:typename:int
git_futils_touch	extern/libgit2/src/futils.c	/^int git_futils_touch(const char *path, time_t *when)$/;"	f	typeref:typename:int
git_futils_truncate	extern/libgit2/src/futils.c	/^int git_futils_truncate(const char *path, int mode)$/;"	f	typeref:typename:int
git_futils_writebuffer	extern/libgit2/src/futils.c	/^int git_futils_writebuffer($/;"	f	typeref:typename:int
git_generated_prefixes	extern/libgit2/src/trailer.c	/^static const char *const git_generated_prefixes[] = {$/;"	v	typeref:typename:const char * const[]	file:
git_global_init_fn	extern/libgit2/src/global.c	/^typedef int (*git_global_init_fn)(void);$/;"	t	typeref:typename:int (*)(void)	file:
git_global_shutdown_fn	extern/libgit2/src/global.h	/^typedef void (*git_global_shutdown_fn)(void);$/;"	t	typeref:typename:void (*)(void)
git_global_st	extern/libgit2/src/global.h	/^} git_global_st;$/;"	t	typeref:struct:__anonf985f1a40108
git_graph_ahead_behind	extern/libgit2/src/graph.c	/^int git_graph_ahead_behind(size_t *ahead, size_t *behind, git_repository *repo,$/;"	f	typeref:typename:int
git_graph_descendant_of	extern/libgit2/src/graph.c	/^int git_graph_descendant_of(git_repository *repo, const git_oid *commit, const git_oid *ancestor/;"	f	typeref:typename:int
git_has_win32_version	extern/libgit2/src/win32/version.h	/^GIT_INLINE(int) git_has_win32_version(int major, int minor, int service_pack)$/;"	f	typeref:typename:int
git_hash_algo_t	extern/libgit2/src/hash.h	/^} git_hash_algo_t;$/;"	t	typeref:enum:__anon6a671f570203
git_hash_buf	extern/libgit2/src/hash.c	/^int git_hash_buf(git_oid *out, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_ctx	extern/libgit2/src/hash.h	/^typedef struct git_hash_ctx {$/;"	s
git_hash_ctx	extern/libgit2/src/hash.h	/^} git_hash_ctx;$/;"	t	typeref:struct:git_hash_ctx
git_hash_ctx_cleanup	extern/libgit2/src/hash.c	/^void git_hash_ctx_cleanup(git_hash_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_ctx_init	extern/libgit2/src/hash.c	/^int git_hash_ctx_init(git_hash_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_final	extern/libgit2/src/hash.c	/^int git_hash_final(git_oid *out, git_hash_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_global_init	extern/libgit2/src/hash.c	/^int git_hash_global_init(void)$/;"	f	typeref:typename:int
git_hash_init	extern/libgit2/src/hash.c	/^int git_hash_init(git_hash_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_prov	extern/libgit2/src/hash/sha1/win32.h	/^} git_hash_prov;$/;"	t	typeref:struct:__anon67941f950108
git_hash_sha1_ctx	extern/libgit2/src/hash/sha1.h	/^typedef struct git_hash_sha1_ctx git_hash_sha1_ctx;$/;"	t	typeref:struct:git_hash_sha1_ctx
git_hash_sha1_ctx	extern/libgit2/src/hash/sha1/collisiondetect.h	/^struct git_hash_sha1_ctx {$/;"	s
git_hash_sha1_ctx	extern/libgit2/src/hash/sha1/common_crypto.h	/^struct git_hash_sha1_ctx {$/;"	s
git_hash_sha1_ctx	extern/libgit2/src/hash/sha1/generic.h	/^struct git_hash_sha1_ctx {$/;"	s
git_hash_sha1_ctx	extern/libgit2/src/hash/sha1/mbedtls.h	/^struct git_hash_sha1_ctx {$/;"	s
git_hash_sha1_ctx	extern/libgit2/src/hash/sha1/openssl.h	/^struct git_hash_sha1_ctx {$/;"	s
git_hash_sha1_ctx	extern/libgit2/src/hash/sha1/win32.h	/^struct git_hash_sha1_ctx {$/;"	s
git_hash_sha1_ctx_cleanup	extern/libgit2/src/hash/sha1/collisiondetect.c	/^void git_hash_sha1_ctx_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha1_ctx_cleanup	extern/libgit2/src/hash/sha1/common_crypto.c	/^void git_hash_sha1_ctx_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha1_ctx_cleanup	extern/libgit2/src/hash/sha1/generic.c	/^void git_hash_sha1_ctx_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha1_ctx_cleanup	extern/libgit2/src/hash/sha1/mbedtls.c	/^void git_hash_sha1_ctx_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha1_ctx_cleanup	extern/libgit2/src/hash/sha1/openssl.c	/^void git_hash_sha1_ctx_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha1_ctx_cleanup	extern/libgit2/src/hash/sha1/win32.c	/^void git_hash_sha1_ctx_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha1_ctx_init	extern/libgit2/src/hash/sha1/collisiondetect.c	/^int git_hash_sha1_ctx_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_ctx_init	extern/libgit2/src/hash/sha1/common_crypto.c	/^int git_hash_sha1_ctx_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_ctx_init	extern/libgit2/src/hash/sha1/generic.c	/^int git_hash_sha1_ctx_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_ctx_init	extern/libgit2/src/hash/sha1/mbedtls.c	/^int git_hash_sha1_ctx_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_ctx_init	extern/libgit2/src/hash/sha1/openssl.c	/^int git_hash_sha1_ctx_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_ctx_init	extern/libgit2/src/hash/sha1/win32.c	/^int git_hash_sha1_ctx_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_final	extern/libgit2/src/hash/sha1/collisiondetect.c	/^int git_hash_sha1_final(git_oid *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_final	extern/libgit2/src/hash/sha1/common_crypto.c	/^int git_hash_sha1_final(git_oid *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_final	extern/libgit2/src/hash/sha1/generic.c	/^int git_hash_sha1_final(git_oid *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_final	extern/libgit2/src/hash/sha1/mbedtls.c	/^int git_hash_sha1_final(git_oid *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_final	extern/libgit2/src/hash/sha1/openssl.c	/^int git_hash_sha1_final(git_oid *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_final	extern/libgit2/src/hash/sha1/win32.c	/^int git_hash_sha1_final(git_oid *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_global_init	extern/libgit2/src/hash/sha1/collisiondetect.c	/^int git_hash_sha1_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha1_global_init	extern/libgit2/src/hash/sha1/common_crypto.c	/^int git_hash_sha1_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha1_global_init	extern/libgit2/src/hash/sha1/generic.c	/^int git_hash_sha1_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha1_global_init	extern/libgit2/src/hash/sha1/mbedtls.c	/^int git_hash_sha1_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha1_global_init	extern/libgit2/src/hash/sha1/openssl.c	/^int git_hash_sha1_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha1_global_init	extern/libgit2/src/hash/sha1/win32.c	/^int git_hash_sha1_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha1_init	extern/libgit2/src/hash/sha1/collisiondetect.c	/^int git_hash_sha1_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_init	extern/libgit2/src/hash/sha1/common_crypto.c	/^int git_hash_sha1_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_init	extern/libgit2/src/hash/sha1/generic.c	/^int git_hash_sha1_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_init	extern/libgit2/src/hash/sha1/mbedtls.c	/^int git_hash_sha1_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_init	extern/libgit2/src/hash/sha1/openssl.c	/^int git_hash_sha1_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_init	extern/libgit2/src/hash/sha1/win32.c	/^int git_hash_sha1_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_update	extern/libgit2/src/hash/sha1/collisiondetect.c	/^int git_hash_sha1_update(git_hash_sha1_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha1_update	extern/libgit2/src/hash/sha1/common_crypto.c	/^int git_hash_sha1_update(git_hash_sha1_ctx *ctx, const void *_data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha1_update	extern/libgit2/src/hash/sha1/generic.c	/^int git_hash_sha1_update(git_hash_sha1_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha1_update	extern/libgit2/src/hash/sha1/mbedtls.c	/^int git_hash_sha1_update(git_hash_sha1_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha1_update	extern/libgit2/src/hash/sha1/openssl.c	/^int git_hash_sha1_update(git_hash_sha1_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha1_update	extern/libgit2/src/hash/sha1/win32.c	/^int git_hash_sha1_update(git_hash_sha1_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_update	extern/libgit2/src/hash.c	/^int git_hash_update(git_hash_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_vec	extern/libgit2/src/hash.c	/^int git_hash_vec(git_oid *out, git_buf_vec *vec, size_t n)$/;"	f	typeref:typename:int
git_hashsig	extern/libgit2/include/git2/sys/hashsig.h	/^typedef struct git_hashsig git_hashsig;$/;"	t	typeref:struct:git_hashsig
git_hashsig	extern/libgit2/src/hashsig.c	/^struct git_hashsig {$/;"	s	file:
git_hashsig_compare	extern/libgit2/src/hashsig.c	/^int git_hashsig_compare(const git_hashsig *a, const git_hashsig *b)$/;"	f	typeref:typename:int
git_hashsig_create	extern/libgit2/src/hashsig.c	/^int git_hashsig_create($/;"	f	typeref:typename:int
git_hashsig_create_fromfile	extern/libgit2/src/hashsig.c	/^int git_hashsig_create_fromfile($/;"	f	typeref:typename:int
git_hashsig_free	extern/libgit2/src/hashsig.c	/^void git_hashsig_free(git_hashsig *sig)$/;"	f	typeref:typename:void
git_hashsig_option_t	extern/libgit2/include/git2/sys/hashsig.h	/^} git_hashsig_option_t;$/;"	t	typeref:enum:__anonc5c3b4890103
git_headlist_cb	extern/libgit2/include/git2/deprecated.h	/^typedef int GIT_CALLBACK(git_headlist_cb)(git_remote_head *rhead, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_remote_head * rhead,void * payload)
git_http__user_agent	extern/libgit2/src/transports/http.h	/^GIT_INLINE(int) git_http__user_agent(git_buf *buf)$/;"	f	typeref:typename:int
git_http_auth_basic	extern/libgit2/src/transports/auth.c	/^int git_http_auth_basic($/;"	f	typeref:typename:int
git_http_auth_context	extern/libgit2/src/transports/auth.h	/^struct git_http_auth_context {$/;"	s
git_http_auth_context	extern/libgit2/src/transports/auth.h	/^typedef struct git_http_auth_context git_http_auth_context;$/;"	t	typeref:struct:git_http_auth_context
git_http_auth_dummy	extern/libgit2/src/transports/auth.c	/^int git_http_auth_dummy($/;"	f	typeref:typename:int
git_http_auth_negotiate	extern/libgit2/src/transports/auth_negotiate.c	/^int git_http_auth_negotiate($/;"	f	typeref:typename:int
git_http_auth_negotiate	extern/libgit2/src/transports/auth_negotiate.h	/^#define git_http_auth_negotiate /;"	d
git_http_auth_ntlm	extern/libgit2/src/transports/auth_ntlm.c	/^int git_http_auth_ntlm($/;"	f	typeref:typename:int
git_http_auth_ntlm	extern/libgit2/src/transports/auth_ntlm.h	/^#define git_http_auth_ntlm /;"	d
git_http_auth_scheme	extern/libgit2/src/transports/auth.h	/^} git_http_auth_scheme;$/;"	t	typeref:struct:__anonf415dd740208
git_http_authtype_t	extern/libgit2/src/transports/auth.h	/^} git_http_authtype_t;$/;"	t	typeref:enum:__anonf415dd740103
git_ident_filter_new	extern/libgit2/src/ident.c	/^git_filter *git_ident_filter_new(void)$/;"	f	typeref:typename:git_filter *
git_idxmap	extern/libgit2/src/idxmap.h	/^typedef struct kh_idx_s git_idxmap;$/;"	t	typeref:struct:kh_idx_s
git_idxmap_clear	extern/libgit2/src/idxmap.c	/^void git_idxmap_clear(git_idxmap *map)$/;"	f	typeref:typename:void
git_idxmap_delete	extern/libgit2/src/idxmap.c	/^int git_idxmap_delete(git_idxmap *map, const git_index_entry *key)$/;"	f	typeref:typename:int
git_idxmap_free	extern/libgit2/src/idxmap.c	/^void git_idxmap_free(git_idxmap *map)$/;"	f	typeref:typename:void
git_idxmap_get	extern/libgit2/src/idxmap.c	/^void *git_idxmap_get(git_idxmap *map, const git_index_entry *key)$/;"	f	typeref:typename:void *
git_idxmap_icase	extern/libgit2/src/idxmap.h	/^typedef struct kh_idxicase_s git_idxmap_icase;$/;"	t	typeref:struct:kh_idxicase_s
git_idxmap_icase_clear	extern/libgit2/src/idxmap.c	/^void git_idxmap_icase_clear(git_idxmap_icase *map)$/;"	f	typeref:typename:void
git_idxmap_icase_delete	extern/libgit2/src/idxmap.c	/^int git_idxmap_icase_delete(git_idxmap_icase *map, const git_index_entry *key)$/;"	f	typeref:typename:int
git_idxmap_icase_free	extern/libgit2/src/idxmap.c	/^void git_idxmap_icase_free(git_idxmap_icase *map)$/;"	f	typeref:typename:void
git_idxmap_icase_get	extern/libgit2/src/idxmap.c	/^void *git_idxmap_icase_get(git_idxmap_icase *map, const git_index_entry *key)$/;"	f	typeref:typename:void *
git_idxmap_icase_insert	extern/libgit2/src/idxmap.c	/^void git_idxmap_icase_insert(git_idxmap_icase *map, const git_index_entry *key, void *value, int/;"	f	typeref:typename:void
git_idxmap_icase_new	extern/libgit2/src/idxmap.c	/^int git_idxmap_icase_new(git_idxmap_icase **out)$/;"	f	typeref:typename:int
git_idxmap_icase_resize	extern/libgit2/src/idxmap.c	/^int git_idxmap_icase_resize(git_idxmap_icase *map, size_t size)$/;"	f	typeref:typename:int
git_idxmap_icase_set	extern/libgit2/src/idxmap.c	/^int git_idxmap_icase_set(git_idxmap_icase *map, const git_index_entry *key, void *value)$/;"	f	typeref:typename:int
git_idxmap_insert	extern/libgit2/src/idxmap.c	/^void git_idxmap_insert(git_idxmap *map, const git_index_entry *key, void *value, int *rval)$/;"	f	typeref:typename:void
git_idxmap_resize	extern/libgit2/src/idxmap.c	/^int git_idxmap_resize(git_idxmap *map, size_t size)$/;"	f	typeref:typename:int
git_idxmap_set	extern/libgit2/src/idxmap.c	/^int git_idxmap_set(git_idxmap *map, const git_index_entry *key, void *value)$/;"	f	typeref:typename:int
git_ignore__check_pathspec_for_exact_ignores	extern/libgit2/src/ignore.c	/^int git_ignore__check_pathspec_for_exact_ignores($/;"	f	typeref:typename:int
git_ignore__for_path	extern/libgit2/src/ignore.c	/^int git_ignore__for_path($/;"	f	typeref:typename:int
git_ignore__free	extern/libgit2/src/ignore.c	/^void git_ignore__free(git_ignores *ignores)$/;"	f	typeref:typename:void
git_ignore__lookup	extern/libgit2/src/ignore.c	/^int git_ignore__lookup($/;"	f	typeref:typename:int
git_ignore__pop_dir	extern/libgit2/src/ignore.c	/^int git_ignore__pop_dir(git_ignores *ign)$/;"	f	typeref:typename:int
git_ignore__push_dir	extern/libgit2/src/ignore.c	/^int git_ignore__push_dir(git_ignores *ign, const char *dir)$/;"	f	typeref:typename:int
git_ignore_add_rule	extern/libgit2/src/ignore.c	/^int git_ignore_add_rule(git_repository *repo, const char *rules)$/;"	f	typeref:typename:int
git_ignore_clear_internal_rules	extern/libgit2/src/ignore.c	/^int git_ignore_clear_internal_rules(git_repository *repo)$/;"	f	typeref:typename:int
git_ignore_path_is_ignored	extern/libgit2/src/ignore.c	/^int git_ignore_path_is_ignored($/;"	f	typeref:typename:int
git_ignores	extern/libgit2/src/ignore.h	/^} git_ignores;$/;"	t	typeref:struct:__anon4fc5b6370108
git_index	extern/libgit2/include/git2/types.h	/^typedef struct git_index git_index;$/;"	t	typeref:struct:git_index
git_index	extern/libgit2/src/index.h	/^struct git_index {$/;"	s
git_index__changed_relative_to	extern/libgit2/src/index.c	/^int git_index__changed_relative_to($/;"	f	typeref:typename:int
git_index__create_mode	extern/libgit2/src/index.c	/^unsigned int git_index__create_mode(unsigned int mode)$/;"	f	typeref:typename:unsigned int
git_index__enforce_unsaved_safety	extern/libgit2/src/index.c	/^bool git_index__enforce_unsaved_safety = false;$/;"	v	typeref:typename:bool
git_index__filestamp	extern/libgit2/src/index.h	/^GIT_INLINE(const git_futils_filestamp *) git_index__filestamp(git_index *index)$/;"	f	typeref:typename:const git_futils_filestamp *
git_index__fill	extern/libgit2/src/index.c	/^int git_index__fill(git_index *index, const git_vector *source_entries)$/;"	f	typeref:typename:int
git_index__find_pos	extern/libgit2/src/index.c	/^int git_index__find_pos($/;"	f	typeref:typename:int
git_index__set_ignore_case	extern/libgit2/src/index.c	/^void git_index__set_ignore_case(git_index *index, bool ignore_case)$/;"	f	typeref:typename:void
git_index_add	extern/libgit2/src/index.c	/^int git_index_add(git_index *index, const git_index_entry *source_entry)$/;"	f	typeref:typename:int
git_index_add_all	extern/libgit2/src/index.c	/^int git_index_add_all($/;"	f	typeref:typename:int
git_index_add_bypath	extern/libgit2/src/index.c	/^int git_index_add_bypath(git_index *index, const char *path)$/;"	f	typeref:typename:int
git_index_add_from_buffer	extern/libgit2/src/index.c	/^int git_index_add_from_buffer($/;"	f	typeref:typename:int
git_index_add_frombuffer	extern/libgit2/src/index.c	/^int git_index_add_frombuffer($/;"	f	typeref:typename:int
git_index_add_option_t	extern/libgit2/include/git2/index.h	/^} git_index_add_option_t;$/;"	t	typeref:enum:__anon3eb19ecc0503
git_index_capability_t	extern/libgit2/include/git2/index.h	/^} git_index_capability_t;$/;"	t	typeref:enum:__anon3eb19ecc0403
git_index_caps	extern/libgit2/src/index.c	/^int git_index_caps(const git_index *index)$/;"	f	typeref:typename:int
git_index_checksum	extern/libgit2/src/index.c	/^const git_oid *git_index_checksum(git_index *index)$/;"	f	typeref:typename:const git_oid *
git_index_clear	extern/libgit2/src/index.c	/^int git_index_clear(git_index *index)$/;"	f	typeref:typename:int
git_index_conflict_add	extern/libgit2/src/index.c	/^int git_index_conflict_add(git_index *index,$/;"	f	typeref:typename:int
git_index_conflict_cleanup	extern/libgit2/src/index.c	/^int git_index_conflict_cleanup(git_index *index)$/;"	f	typeref:typename:int
git_index_conflict_get	extern/libgit2/src/index.c	/^int git_index_conflict_get($/;"	f	typeref:typename:int
git_index_conflict_iterator	extern/libgit2/include/git2/types.h	/^typedef struct git_index_conflict_iterator git_index_conflict_iterator;$/;"	t	typeref:struct:git_index_conflict_iterator
git_index_conflict_iterator	extern/libgit2/src/index.h	/^struct git_index_conflict_iterator {$/;"	s
git_index_conflict_iterator_free	extern/libgit2/src/index.c	/^void git_index_conflict_iterator_free(git_index_conflict_iterator *iterator)$/;"	f	typeref:typename:void
git_index_conflict_iterator_new	extern/libgit2/src/index.c	/^int git_index_conflict_iterator_new($/;"	f	typeref:typename:int
git_index_conflict_next	extern/libgit2/src/index.c	/^int git_index_conflict_next($/;"	f	typeref:typename:int
git_index_conflict_remove	extern/libgit2/src/index.c	/^int git_index_conflict_remove(git_index *index, const char *path)$/;"	f	typeref:typename:int
git_index_entry	extern/libgit2/include/git2/index.h	/^typedef struct git_index_entry {$/;"	s
git_index_entry	extern/libgit2/include/git2/index.h	/^} git_index_entry;$/;"	t	typeref:struct:git_index_entry
git_index_entry__init_from_stat	extern/libgit2/src/index.c	/^void git_index_entry__init_from_stat($/;"	f	typeref:typename:void
git_index_entry_cmp	extern/libgit2/src/index.c	/^int git_index_entry_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_index_entry_extended_flag_t	extern/libgit2/include/git2/index.h	/^} git_index_entry_extended_flag_t;$/;"	t	typeref:enum:__anon3eb19ecc0303
git_index_entry_flag_t	extern/libgit2/include/git2/index.h	/^} git_index_entry_flag_t;$/;"	t	typeref:enum:__anon3eb19ecc0203
git_index_entry_icmp	extern/libgit2/src/index.c	/^int git_index_entry_icmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_index_entry_is_conflict	extern/libgit2/src/index.c	/^int git_index_entry_is_conflict(const git_index_entry *entry)$/;"	f	typeref:typename:int
git_index_entry_isrch	extern/libgit2/src/index.c	/^int git_index_entry_isrch(const void *key, const void *array_member)$/;"	f	typeref:typename:int
git_index_entry_newer_than_index	extern/libgit2/src/index.h	/^GIT_INLINE(bool) git_index_entry_newer_than_index($/;"	f	typeref:typename:bool
git_index_entry_srch	extern/libgit2/src/index.c	/^int git_index_entry_srch(const void *key, const void *array_member)$/;"	f	typeref:typename:int
git_index_entry_stage	extern/libgit2/src/index.c	/^int git_index_entry_stage(const git_index_entry *entry)$/;"	f	typeref:typename:int
git_index_entrycount	extern/libgit2/src/index.c	/^size_t git_index_entrycount(const git_index *index)$/;"	f	typeref:typename:size_t
git_index_find	extern/libgit2/src/index.c	/^int git_index_find(size_t *at_pos, git_index *index, const char *path)$/;"	f	typeref:typename:int
git_index_find_prefix	extern/libgit2/src/index.c	/^int git_index_find_prefix(size_t *at_pos, git_index *index, const char *prefix)$/;"	f	typeref:typename:int
git_index_free	extern/libgit2/src/index.c	/^void git_index_free(git_index *index)$/;"	f	typeref:typename:void
git_index_get_byindex	extern/libgit2/src/index.c	/^const git_index_entry *git_index_get_byindex($/;"	f	typeref:typename:const git_index_entry *
git_index_get_bypath	extern/libgit2/src/index.c	/^const git_index_entry *git_index_get_bypath($/;"	f	typeref:typename:const git_index_entry *
git_index_has_conflicts	extern/libgit2/src/index.c	/^int git_index_has_conflicts(const git_index *index)$/;"	f	typeref:typename:int
git_index_is_dirty	extern/libgit2/src/index.h	/^GIT_INLINE(int) git_index_is_dirty(git_index *index)$/;"	f	typeref:typename:int
git_index_iterator	extern/libgit2/include/git2/types.h	/^typedef struct git_index_iterator git_index_iterator;$/;"	t	typeref:struct:git_index_iterator
git_index_iterator	extern/libgit2/src/index.h	/^struct git_index_iterator {$/;"	s
git_index_iterator_free	extern/libgit2/src/index.c	/^void git_index_iterator_free(git_index_iterator *it)$/;"	f	typeref:typename:void
git_index_iterator_new	extern/libgit2/src/index.c	/^int git_index_iterator_new($/;"	f	typeref:typename:int
git_index_iterator_next	extern/libgit2/src/index.c	/^int git_index_iterator_next($/;"	f	typeref:typename:int
git_index_matched_path_cb	extern/libgit2/include/git2/index.h	/^typedef int GIT_CALLBACK(git_index_matched_path_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * path,const char * matched_pathspec,void * payload)
git_index_name_add	extern/libgit2/src/index.c	/^int git_index_name_add(git_index *index,$/;"	f	typeref:typename:int
git_index_name_clear	extern/libgit2/src/index.c	/^void git_index_name_clear(git_index *index)$/;"	f	typeref:typename:void
git_index_name_entry	extern/libgit2/include/git2/sys/index.h	/^typedef struct git_index_name_entry {$/;"	s
git_index_name_entry	extern/libgit2/include/git2/sys/index.h	/^} git_index_name_entry;$/;"	t	typeref:struct:git_index_name_entry
git_index_name_entrycount	extern/libgit2/src/index.c	/^size_t git_index_name_entrycount(git_index *index)$/;"	f	typeref:typename:size_t
git_index_name_get_byindex	extern/libgit2/src/index.c	/^const git_index_name_entry *git_index_name_get_byindex($/;"	f	typeref:typename:const git_index_name_entry *
git_index_new	extern/libgit2/src/index.c	/^int git_index_new(git_index **out)$/;"	f	typeref:typename:int
git_index_open	extern/libgit2/src/index.c	/^int git_index_open(git_index **index_out, const char *index_path)$/;"	f	typeref:typename:int
git_index_owner	extern/libgit2/src/index.c	/^git_repository *git_index_owner(const git_index *index)$/;"	f	typeref:typename:git_repository *
git_index_path	extern/libgit2/src/index.c	/^const char * git_index_path(const git_index *index)$/;"	f	typeref:typename:const char *
git_index_read	extern/libgit2/src/index.c	/^int git_index_read(git_index *index, int force)$/;"	f	typeref:typename:int
git_index_read_index	extern/libgit2/src/index.c	/^int git_index_read_index($/;"	f	typeref:typename:int
git_index_read_iterator	extern/libgit2/src/index.c	/^static int git_index_read_iterator($/;"	f	typeref:typename:int	file:
git_index_read_safely	extern/libgit2/src/index.c	/^int git_index_read_safely(git_index *index)$/;"	f	typeref:typename:int
git_index_read_tree	extern/libgit2/src/index.c	/^int git_index_read_tree(git_index *index, const git_tree *tree)$/;"	f	typeref:typename:int
git_index_remove	extern/libgit2/src/index.c	/^int git_index_remove(git_index *index, const char *path, int stage)$/;"	f	typeref:typename:int
git_index_remove_all	extern/libgit2/src/index.c	/^int git_index_remove_all($/;"	f	typeref:typename:int
git_index_remove_bypath	extern/libgit2/src/index.c	/^int git_index_remove_bypath(git_index *index, const char *path)$/;"	f	typeref:typename:int
git_index_remove_directory	extern/libgit2/src/index.c	/^int git_index_remove_directory(git_index *index, const char *dir, int stage)$/;"	f	typeref:typename:int
git_index_reuc_add	extern/libgit2/src/index.c	/^int git_index_reuc_add(git_index *index, const char *path,$/;"	f	typeref:typename:int
git_index_reuc_clear	extern/libgit2/src/index.c	/^void git_index_reuc_clear(git_index *index)$/;"	f	typeref:typename:void
git_index_reuc_entry	extern/libgit2/include/git2/sys/index.h	/^typedef struct git_index_reuc_entry {$/;"	s
git_index_reuc_entry	extern/libgit2/include/git2/sys/index.h	/^} git_index_reuc_entry;$/;"	t	typeref:struct:git_index_reuc_entry
git_index_reuc_entrycount	extern/libgit2/src/index.c	/^size_t git_index_reuc_entrycount(git_index *index)$/;"	f	typeref:typename:size_t
git_index_reuc_find	extern/libgit2/src/index.c	/^int git_index_reuc_find(size_t *at_pos, git_index *index, const char *path)$/;"	f	typeref:typename:int
git_index_reuc_get_byindex	extern/libgit2/src/index.c	/^const git_index_reuc_entry *git_index_reuc_get_byindex($/;"	f	typeref:typename:const git_index_reuc_entry *
git_index_reuc_get_bypath	extern/libgit2/src/index.c	/^const git_index_reuc_entry *git_index_reuc_get_bypath($/;"	f	typeref:typename:const git_index_reuc_entry *
git_index_reuc_remove	extern/libgit2/src/index.c	/^int git_index_reuc_remove(git_index *index, size_t position)$/;"	f	typeref:typename:int
git_index_set_caps	extern/libgit2/src/index.c	/^int git_index_set_caps(git_index *index, int caps)$/;"	f	typeref:typename:int
git_index_set_version	extern/libgit2/src/index.c	/^int git_index_set_version(git_index *index, unsigned int version)$/;"	f	typeref:typename:int
git_index_snapshot_find	extern/libgit2/src/index.c	/^int git_index_snapshot_find($/;"	f	typeref:typename:int
git_index_snapshot_new	extern/libgit2/src/index.c	/^int git_index_snapshot_new(git_vector *snap, git_index *index)$/;"	f	typeref:typename:int
git_index_snapshot_release	extern/libgit2/src/index.c	/^void git_index_snapshot_release(git_vector *snap, git_index *index)$/;"	f	typeref:typename:void
git_index_stage_t	extern/libgit2/include/git2/index.h	/^} git_index_stage_t;$/;"	t	typeref:enum:__anon3eb19ecc0603
git_index_time	extern/libgit2/include/git2/index.h	/^} git_index_time;$/;"	t	typeref:struct:__anon3eb19ecc0108
git_index_time_eq	extern/libgit2/src/index.h	/^GIT_INLINE(bool) git_index_time_eq(const git_index_time *one, const git_index_time *two)$/;"	f	typeref:typename:bool
git_index_update_all	extern/libgit2/src/index.c	/^int git_index_update_all($/;"	f	typeref:typename:int
git_index_version	extern/libgit2/src/index.c	/^unsigned git_index_version(git_index *index)$/;"	f	typeref:typename:unsigned
git_index_write	extern/libgit2/src/index.c	/^int git_index_write(git_index *index)$/;"	f	typeref:typename:int
git_index_write_tree	extern/libgit2/src/index.c	/^int git_index_write_tree(git_oid *oid, git_index *index)$/;"	f	typeref:typename:int
git_index_write_tree_to	extern/libgit2/src/index.c	/^int git_index_write_tree_to($/;"	f	typeref:typename:int
git_indexer	extern/libgit2/include/git2/indexer.h	/^typedef struct git_indexer git_indexer;$/;"	t	typeref:struct:git_indexer
git_indexer	extern/libgit2/src/indexer.c	/^struct git_indexer {$/;"	s	file:
git_indexer__max_objects	extern/libgit2/src/indexer.c	/^size_t git_indexer__max_objects = UINT32_MAX;$/;"	v	typeref:typename:size_t
git_indexer__set_fsync	extern/libgit2/src/indexer.c	/^void git_indexer__set_fsync(git_indexer *idx, int do_fsync)$/;"	f	typeref:typename:void
git_indexer_append	extern/libgit2/src/indexer.c	/^int git_indexer_append(git_indexer *idx, const void *data, size_t size, git_indexer_progress *st/;"	f	typeref:typename:int
git_indexer_commit	extern/libgit2/src/indexer.c	/^int git_indexer_commit(git_indexer *idx, git_indexer_progress *stats)$/;"	f	typeref:typename:int
git_indexer_free	extern/libgit2/src/indexer.c	/^void git_indexer_free(git_indexer *idx)$/;"	f	typeref:typename:void
git_indexer_hash	extern/libgit2/src/indexer.c	/^const git_oid *git_indexer_hash(const git_indexer *idx)$/;"	f	typeref:typename:const git_oid *
git_indexer_init_options	extern/libgit2/src/indexer.c	/^int git_indexer_init_options(git_indexer_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_indexer_new	extern/libgit2/src/indexer.c	/^int git_indexer_new($/;"	f	typeref:typename:int
git_indexer_options	extern/libgit2/include/git2/indexer.h	/^typedef struct git_indexer_options {$/;"	s
git_indexer_options	extern/libgit2/include/git2/indexer.h	/^} git_indexer_options;$/;"	t	typeref:struct:git_indexer_options
git_indexer_options_init	extern/libgit2/src/indexer.c	/^int git_indexer_options_init(git_indexer_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_indexer_progress	extern/libgit2/include/git2/indexer.h	/^typedef struct git_indexer_progress {$/;"	s
git_indexer_progress	extern/libgit2/include/git2/indexer.h	/^} git_indexer_progress;$/;"	t	typeref:struct:git_indexer_progress
git_indexer_progress_cb	extern/libgit2/include/git2/indexer.h	/^typedef int GIT_CALLBACK(git_indexer_progress_cb)(const git_indexer_progress *stats, void *paylo/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_indexer_progress * stats,void * payload)
git_indexwriter	extern/libgit2/src/index.h	/^} git_indexwriter;$/;"	t	typeref:struct:__anon2188762b0108
git_indexwriter_cleanup	extern/libgit2/src/index.c	/^void git_indexwriter_cleanup(git_indexwriter *writer)$/;"	f	typeref:typename:void
git_indexwriter_commit	extern/libgit2/src/index.c	/^int git_indexwriter_commit(git_indexwriter *writer)$/;"	f	typeref:typename:int
git_indexwriter_init	extern/libgit2/src/index.c	/^int git_indexwriter_init($/;"	f	typeref:typename:int
git_indexwriter_init_for_operation	extern/libgit2/src/index.c	/^int git_indexwriter_init_for_operation($/;"	f	typeref:typename:int
git_iterator	extern/libgit2/src/iterator.h	/^struct git_iterator {$/;"	s
git_iterator	extern/libgit2/src/iterator.h	/^typedef struct git_iterator git_iterator;$/;"	t	typeref:struct:git_iterator
git_iterator_advance	extern/libgit2/src/iterator.h	/^GIT_INLINE(int) git_iterator_advance($/;"	f	typeref:typename:int
git_iterator_advance_into	extern/libgit2/src/iterator.h	/^GIT_INLINE(int) git_iterator_advance_into($/;"	f	typeref:typename:int
git_iterator_advance_over	extern/libgit2/src/iterator.h	/^GIT_INLINE(int) git_iterator_advance_over($/;"	f	typeref:typename:int
git_iterator_callbacks	extern/libgit2/src/iterator.h	/^} git_iterator_callbacks;$/;"	t	typeref:struct:__anonb487a9bd0508
git_iterator_current	extern/libgit2/src/iterator.h	/^GIT_INLINE(int) git_iterator_current($/;"	f	typeref:typename:int
git_iterator_current_is_ignored	extern/libgit2/src/iterator.c	/^bool git_iterator_current_is_ignored(git_iterator *i)$/;"	f	typeref:typename:bool
git_iterator_current_parent_tree	extern/libgit2/src/iterator.c	/^int git_iterator_current_parent_tree($/;"	f	typeref:typename:int
git_iterator_current_tree_entry	extern/libgit2/src/iterator.c	/^int git_iterator_current_tree_entry($/;"	f	typeref:typename:int
git_iterator_current_tree_is_ignored	extern/libgit2/src/iterator.c	/^bool git_iterator_current_tree_is_ignored(git_iterator *i)$/;"	f	typeref:typename:bool
git_iterator_current_workdir_path	extern/libgit2/src/iterator.c	/^int git_iterator_current_workdir_path(git_buf **out, git_iterator *i)$/;"	f	typeref:typename:int
git_iterator_flag_t	extern/libgit2/src/iterator.h	/^} git_iterator_flag_t;$/;"	t	typeref:enum:__anonb487a9bd0203
git_iterator_flags	extern/libgit2/src/iterator.h	/^GIT_INLINE(git_iterator_flag_t) git_iterator_flags(git_iterator *iter)$/;"	f	typeref:typename:git_iterator_flag_t
git_iterator_for_filesystem	extern/libgit2/src/iterator.c	/^int git_iterator_for_filesystem($/;"	f	typeref:typename:int
git_iterator_for_index	extern/libgit2/src/iterator.c	/^int git_iterator_for_index($/;"	f	typeref:typename:int
git_iterator_for_nothing	extern/libgit2/src/iterator.c	/^int git_iterator_for_nothing($/;"	f	typeref:typename:int
git_iterator_for_tree	extern/libgit2/src/iterator.c	/^int git_iterator_for_tree($/;"	f	typeref:typename:int
git_iterator_for_workdir	extern/libgit2/src/iterator.h	/^GIT_INLINE(int) git_iterator_for_workdir($/;"	f	typeref:typename:int
git_iterator_for_workdir_ext	extern/libgit2/src/iterator.c	/^int git_iterator_for_workdir_ext($/;"	f	typeref:typename:int
git_iterator_foreach	extern/libgit2/src/iterator.c	/^int git_iterator_foreach($/;"	f	typeref:typename:int
git_iterator_foreach_cb	extern/libgit2/src/iterator.h	/^typedef int (*git_iterator_foreach_cb)($/;"	t	typeref:typename:int (*)(const git_index_entry * entry,void * data)
git_iterator_free	extern/libgit2/src/iterator.c	/^void git_iterator_free(git_iterator *iter)$/;"	f	typeref:typename:void
git_iterator_ignore_case	extern/libgit2/src/iterator.h	/^GIT_INLINE(bool) git_iterator_ignore_case(git_iterator *iter)$/;"	f	typeref:typename:bool
git_iterator_index	extern/libgit2/src/iterator.h	/^GIT_INLINE(git_index *) git_iterator_index(git_iterator *iter)$/;"	f	typeref:typename:git_index *
git_iterator_options	extern/libgit2/src/iterator.h	/^} git_iterator_options;$/;"	t	typeref:struct:__anonb487a9bd0408
git_iterator_owner	extern/libgit2/src/iterator.h	/^GIT_INLINE(git_repository *) git_iterator_owner(git_iterator *iter)$/;"	f	typeref:typename:git_repository *
git_iterator_reset	extern/libgit2/src/iterator.h	/^GIT_INLINE(int) git_iterator_reset(git_iterator *iter)$/;"	f	typeref:typename:int
git_iterator_reset_range	extern/libgit2/src/iterator.c	/^int git_iterator_reset_range($/;"	f	typeref:typename:int
git_iterator_set_ignore_case	extern/libgit2/src/iterator.c	/^void git_iterator_set_ignore_case(git_iterator *i, bool ignore_case)$/;"	f	typeref:typename:void
git_iterator_status_t	extern/libgit2/src/iterator.h	/^} git_iterator_status_t;$/;"	t	typeref:enum:__anonb487a9bd0303
git_iterator_type	extern/libgit2/src/iterator.h	/^GIT_INLINE(git_iterator_type_t) git_iterator_type(git_iterator *iter)$/;"	f	typeref:typename:git_iterator_type_t
git_iterator_type_t	extern/libgit2/src/iterator.h	/^} git_iterator_type_t;$/;"	t	typeref:enum:__anonb487a9bd0103
git_iterator_walk	extern/libgit2/src/iterator.c	/^int git_iterator_walk($/;"	f	typeref:typename:int
git_iterator_walk_cb	extern/libgit2/src/iterator.h	/^typedef int (*git_iterator_walk_cb)($/;"	t	typeref:typename:int (*)(const git_index_entry ** entries,void * data)
git_libgit2__ssl_ciphers	extern/libgit2/src/settings.c	/^const char *git_libgit2__ssl_ciphers(void)$/;"	f	typeref:typename:const char *
git_libgit2__user_agent	extern/libgit2/src/settings.c	/^const char *git_libgit2__user_agent(void)$/;"	f	typeref:typename:const char *
git_libgit2_features	extern/libgit2/src/settings.c	/^int git_libgit2_features(void)$/;"	f	typeref:typename:int
git_libgit2_init	extern/libgit2/src/global.c	/^int git_libgit2_init(void)$/;"	f	typeref:typename:int
git_libgit2_opt_t	extern/libgit2/include/git2/common.h	/^} git_libgit2_opt_t;$/;"	t	typeref:enum:__anonede0033d0203
git_libgit2_opts	extern/libgit2/src/settings.c	/^int git_libgit2_opts(int key, ...)$/;"	f	typeref:typename:int
git_libgit2_shutdown	extern/libgit2/src/global.c	/^int git_libgit2_shutdown(void)$/;"	f	typeref:typename:int
git_libgit2_version	extern/libgit2/src/settings.c	/^void git_libgit2_version(int *major, int *minor, int *rev)$/;"	f	typeref:typename:void
git_mailmap	extern/libgit2/include/git2/types.h	/^typedef struct git_mailmap git_mailmap;$/;"	t	typeref:struct:git_mailmap
git_mailmap	extern/libgit2/src/mailmap.h	/^struct git_mailmap {$/;"	s
git_mailmap_add_entry	extern/libgit2/src/mailmap.c	/^int git_mailmap_add_entry($/;"	f	typeref:typename:int
git_mailmap_entry	extern/libgit2/src/mailmap.h	/^typedef struct git_mailmap_entry {$/;"	s
git_mailmap_entry	extern/libgit2/src/mailmap.h	/^} git_mailmap_entry;$/;"	t	typeref:struct:git_mailmap_entry
git_mailmap_entry_lookup	extern/libgit2/src/mailmap.c	/^const git_mailmap_entry *git_mailmap_entry_lookup($/;"	f	typeref:typename:const git_mailmap_entry *
git_mailmap_free	extern/libgit2/src/mailmap.c	/^void git_mailmap_free(git_mailmap *mm)$/;"	f	typeref:typename:void
git_mailmap_from_buffer	extern/libgit2/src/mailmap.c	/^int git_mailmap_from_buffer(git_mailmap **out, const char *data, size_t len)$/;"	f	typeref:typename:int
git_mailmap_from_repository	extern/libgit2/src/mailmap.c	/^int git_mailmap_from_repository(git_mailmap **out, git_repository *repo)$/;"	f	typeref:typename:int
git_mailmap_new	extern/libgit2/src/mailmap.c	/^int git_mailmap_new(git_mailmap **out)$/;"	f	typeref:typename:int
git_mailmap_resolve	extern/libgit2/src/mailmap.c	/^int git_mailmap_resolve($/;"	f	typeref:typename:int
git_mailmap_resolve_signature	extern/libgit2/src/mailmap.c	/^int git_mailmap_resolve_signature($/;"	f	typeref:typename:int
git_map	extern/libgit2/src/map.h	/^} git_map;$/;"	t	typeref:struct:__anonfbd1e3910108
git_mbedtls__set_cert_location	extern/libgit2/src/streams/mbedtls.c	/^int git_mbedtls__set_cert_location(const char *path, int is_dir)$/;"	f	typeref:typename:int
git_mbedtls_stream_global_init	extern/libgit2/src/streams/mbedtls.c	/^int git_mbedtls_stream_global_init(void)$/;"	f	typeref:typename:int
git_mbedtls_stream_new	extern/libgit2/src/streams/mbedtls.c	/^int git_mbedtls_stream_new($/;"	f	typeref:typename:int
git_mbedtls_stream_wrap	extern/libgit2/src/streams/mbedtls.c	/^int git_mbedtls_stream_wrap($/;"	f	typeref:typename:int
git_mempack_dump	extern/libgit2/src/odb_mempack.c	/^int git_mempack_dump(git_buf *pack, git_repository *repo, git_odb_backend *_backend)$/;"	f	typeref:typename:int
git_mempack_new	extern/libgit2/src/odb_mempack.c	/^int git_mempack_new(git_odb_backend **out)$/;"	f	typeref:typename:int
git_mempack_reset	extern/libgit2/src/odb_mempack.c	/^void git_mempack_reset(git_odb_backend *_backend)$/;"	f	typeref:typename:void
git_merge	extern/libgit2/src/merge.c	/^int git_merge($/;"	f	typeref:typename:int
git_merge__append_conflicts_to_merge_msg	extern/libgit2/src/merge.c	/^int git_merge__append_conflicts_to_merge_msg($/;"	f	typeref:typename:int
git_merge__bases_many	extern/libgit2/src/merge.c	/^int git_merge__bases_many(git_commit_list **out, git_revwalk *walk, git_commit_list_node *one, g/;"	f	typeref:typename:int
git_merge__check_result	extern/libgit2/src/merge.c	/^int git_merge__check_result(git_repository *repo, git_index *index_new)$/;"	f	typeref:typename:int
git_merge__iterators	extern/libgit2/src/merge.c	/^int git_merge__iterators($/;"	f	typeref:typename:int
git_merge__setup	extern/libgit2/src/merge.c	/^int git_merge__setup($/;"	f	typeref:typename:int
git_merge_analysis	extern/libgit2/src/merge.c	/^int git_merge_analysis($/;"	f	typeref:typename:int
git_merge_analysis_for_ref	extern/libgit2/src/merge.c	/^int git_merge_analysis_for_ref($/;"	f	typeref:typename:int
git_merge_analysis_t	extern/libgit2/include/git2/merge.h	/^} git_merge_analysis_t;$/;"	t	typeref:enum:__anon5e9a43240803
git_merge_base	extern/libgit2/src/merge.c	/^int git_merge_base(git_oid *out, git_repository *repo, const git_oid *one, const git_oid *two)$/;"	f	typeref:typename:int
git_merge_base_many	extern/libgit2/src/merge.c	/^int git_merge_base_many(git_oid *out, git_repository *repo, size_t length, const git_oid input_a/;"	f	typeref:typename:int
git_merge_base_octopus	extern/libgit2/src/merge.c	/^int git_merge_base_octopus(git_oid *out, git_repository *repo, size_t length, const git_oid inpu/;"	f	typeref:typename:int
git_merge_bases	extern/libgit2/src/merge.c	/^int git_merge_bases(git_oidarray *out, git_repository *repo, const git_oid *one, const git_oid */;"	f	typeref:typename:int
git_merge_bases_many	extern/libgit2/src/merge.c	/^int git_merge_bases_many(git_oidarray *out, git_repository *repo, size_t length, const git_oid i/;"	f	typeref:typename:int
git_merge_commits	extern/libgit2/src/merge.c	/^int git_merge_commits($/;"	f	typeref:typename:int
git_merge_diff	extern/libgit2/src/merge.h	/^} git_merge_diff;$/;"	t	typeref:struct:__anon41711a830508
git_merge_diff_list	extern/libgit2/src/merge.h	/^} git_merge_diff_list;$/;"	t	typeref:struct:__anon41711a830408
git_merge_diff_list__alloc	extern/libgit2/src/merge.c	/^git_merge_diff_list *git_merge_diff_list__alloc(git_repository *repo)$/;"	f	typeref:typename:git_merge_diff_list *
git_merge_diff_list__find_differences	extern/libgit2/src/merge.c	/^int git_merge_diff_list__find_differences($/;"	f	typeref:typename:int
git_merge_diff_list__find_renames	extern/libgit2/src/merge.c	/^int git_merge_diff_list__find_renames($/;"	f	typeref:typename:int
git_merge_diff_list__free	extern/libgit2/src/merge.c	/^void git_merge_diff_list__free(git_merge_diff_list *diff_list)$/;"	f	typeref:typename:void
git_merge_diff_type_t	extern/libgit2/src/merge.h	/^} git_merge_diff_type_t;$/;"	t	typeref:enum:__anon41711a830303
git_merge_driver	extern/libgit2/include/git2/sys/merge.h	/^struct git_merge_driver {$/;"	s
git_merge_driver	extern/libgit2/include/git2/sys/merge.h	/^typedef struct git_merge_driver git_merge_driver;$/;"	t	typeref:struct:git_merge_driver
git_merge_driver__binary	extern/libgit2/src/merge_driver.c	/^git_merge_driver git_merge_driver__binary = {$/;"	v	typeref:typename:git_merge_driver
git_merge_driver__builtin	extern/libgit2/src/merge_driver.h	/^typedef struct git_merge_driver__builtin {$/;"	s
git_merge_driver__builtin	extern/libgit2/src/merge_driver.h	/^} git_merge_driver__builtin;$/;"	t	typeref:struct:git_merge_driver__builtin
git_merge_driver__builtin_apply	extern/libgit2/src/merge_driver.c	/^int git_merge_driver__builtin_apply($/;"	f	typeref:typename:int
git_merge_driver__text	extern/libgit2/src/merge_driver.c	/^git_merge_driver__builtin git_merge_driver__text = {$/;"	v	typeref:typename:git_merge_driver__builtin
git_merge_driver__union	extern/libgit2/src/merge_driver.c	/^git_merge_driver__builtin git_merge_driver__union = {$/;"	v	typeref:typename:git_merge_driver__builtin
git_merge_driver_apply_fn	extern/libgit2/include/git2/sys/merge.h	/^typedef int GIT_CALLBACK(git_merge_driver_apply_fn)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_merge_driver * self,const char ** path_out,uint32_t * mode_out,git_buf * merged_out,const char * filter_name,const git_merge_driver_source * src)
git_merge_driver_entry	extern/libgit2/src/merge_driver.c	/^} git_merge_driver_entry;$/;"	t	typeref:struct:__anon8d5767c90108	file:
git_merge_driver_for_source	extern/libgit2/src/merge_driver.c	/^int git_merge_driver_for_source($/;"	f	typeref:typename:int
git_merge_driver_global_init	extern/libgit2/src/merge_driver.c	/^int git_merge_driver_global_init(void)$/;"	f	typeref:typename:int
git_merge_driver_global_shutdown	extern/libgit2/src/merge_driver.c	/^static void git_merge_driver_global_shutdown(void)$/;"	f	typeref:typename:void	file:
git_merge_driver_init_fn	extern/libgit2/include/git2/sys/merge.h	/^typedef int GIT_CALLBACK(git_merge_driver_init_fn)(git_merge_driver *self);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_merge_driver * self)
git_merge_driver_lookup	extern/libgit2/src/merge_driver.c	/^git_merge_driver *git_merge_driver_lookup(const char *name)$/;"	f	typeref:typename:git_merge_driver *
git_merge_driver_register	extern/libgit2/src/merge_driver.c	/^int git_merge_driver_register(const char *name, git_merge_driver *driver)$/;"	f	typeref:typename:int
git_merge_driver_shutdown_fn	extern/libgit2/include/git2/sys/merge.h	/^typedef void GIT_CALLBACK(git_merge_driver_shutdown_fn)(git_merge_driver *self);$/;"	t	typeref:typename:void GIT_CALLBACK ()(git_merge_driver * self)
git_merge_driver_source	extern/libgit2/include/git2/sys/merge.h	/^typedef struct git_merge_driver_source git_merge_driver_source;$/;"	t	typeref:struct:git_merge_driver_source
git_merge_driver_source	extern/libgit2/src/merge_driver.h	/^struct git_merge_driver_source {$/;"	s
git_merge_driver_source_ancestor	extern/libgit2/src/merge_driver.c	/^const git_index_entry* git_merge_driver_source_ancestor(const git_merge_driver_source *src)$/;"	f	typeref:typename:const git_index_entry *
git_merge_driver_source_file_options	extern/libgit2/src/merge_driver.c	/^const git_merge_file_options* git_merge_driver_source_file_options(const git_merge_driver_source/;"	f	typeref:typename:const git_merge_file_options *
git_merge_driver_source_ours	extern/libgit2/src/merge_driver.c	/^const git_index_entry* git_merge_driver_source_ours(const git_merge_driver_source *src)$/;"	f	typeref:typename:const git_index_entry *
git_merge_driver_source_repo	extern/libgit2/src/merge_driver.c	/^const git_repository* git_merge_driver_source_repo(const git_merge_driver_source *src)$/;"	f	typeref:typename:const git_repository *
git_merge_driver_source_theirs	extern/libgit2/src/merge_driver.c	/^const git_index_entry* git_merge_driver_source_theirs(const git_merge_driver_source *src)$/;"	f	typeref:typename:const git_index_entry *
git_merge_driver_unregister	extern/libgit2/src/merge_driver.c	/^int git_merge_driver_unregister(const char *name)$/;"	f	typeref:typename:int
git_merge_file	extern/libgit2/src/merge_file.c	/^int git_merge_file($/;"	f	typeref:typename:int
git_merge_file__best_mode	extern/libgit2/src/merge.h	/^GIT_INLINE(uint32_t) git_merge_file__best_mode($/;"	f	typeref:typename:uint32_t
git_merge_file__best_path	extern/libgit2/src/merge.h	/^GIT_INLINE(const char *) git_merge_file__best_path($/;"	f	typeref:typename:const char *
git_merge_file__input_from_index	extern/libgit2/src/merge_file.c	/^int git_merge_file__input_from_index($/;"	f	typeref:typename:int
git_merge_file__normalize_inputs	extern/libgit2/src/merge_file.c	/^static git_merge_file_input *git_merge_file__normalize_inputs($/;"	f	typeref:typename:git_merge_file_input *	file:
git_merge_file_favor_t	extern/libgit2/include/git2/merge.h	/^} git_merge_file_favor_t;$/;"	t	typeref:enum:__anon5e9a43240303
git_merge_file_flag_t	extern/libgit2/include/git2/merge.h	/^} git_merge_file_flag_t;$/;"	t	typeref:enum:__anon5e9a43240403
git_merge_file_from_index	extern/libgit2/src/merge_file.c	/^int git_merge_file_from_index($/;"	f	typeref:typename:int
git_merge_file_init_input	extern/libgit2/src/merge.c	/^int git_merge_file_init_input(git_merge_file_input *input, unsigned int version)$/;"	f	typeref:typename:int
git_merge_file_init_options	extern/libgit2/src/merge.c	/^int git_merge_file_init_options($/;"	f	typeref:typename:int
git_merge_file_input	extern/libgit2/include/git2/merge.h	/^} git_merge_file_input;$/;"	t	typeref:struct:__anon5e9a43240108
git_merge_file_input_init	extern/libgit2/src/merge.c	/^int git_merge_file_input_init(git_merge_file_input *input, unsigned int version)$/;"	f	typeref:typename:int
git_merge_file_options	extern/libgit2/include/git2/merge.h	/^} git_merge_file_options;$/;"	t	typeref:struct:__anon5e9a43240508
git_merge_file_options_init	extern/libgit2/src/merge.c	/^int git_merge_file_options_init($/;"	f	typeref:typename:int
git_merge_file_result	extern/libgit2/include/git2/merge.h	/^} git_merge_file_result;$/;"	t	typeref:struct:__anon5e9a43240608
git_merge_file_result_free	extern/libgit2/src/merge_file.c	/^void git_merge_file_result_free(git_merge_file_result *result)$/;"	f	typeref:typename:void
git_merge_flag_t	extern/libgit2/include/git2/merge.h	/^} git_merge_flag_t;$/;"	t	typeref:enum:__anon5e9a43240203
git_merge_init_options	extern/libgit2/src/merge.c	/^int git_merge_init_options(git_merge_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_merge_options	extern/libgit2/include/git2/merge.h	/^} git_merge_options;$/;"	t	typeref:struct:__anon5e9a43240708
git_merge_options_init	extern/libgit2/src/merge.c	/^int git_merge_options_init(git_merge_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_merge_preference_t	extern/libgit2/include/git2/merge.h	/^} git_merge_preference_t;$/;"	t	typeref:enum:__anon5e9a43240903
git_merge_trees	extern/libgit2/src/merge.c	/^int git_merge_trees($/;"	f	typeref:typename:int
git_message_prettify	extern/libgit2/src/message.c	/^int git_message_prettify(git_buf *message_out, const char *message, int strip_comments, char com/;"	f	typeref:typename:int
git_message_trailer	extern/libgit2/include/git2/message.h	/^} git_message_trailer;$/;"	t	typeref:struct:__anond70699990108
git_message_trailer_array	extern/libgit2/include/git2/message.h	/^} git_message_trailer_array;$/;"	t	typeref:struct:__anond70699990208
git_message_trailer_array_free	extern/libgit2/src/trailer.c	/^void git_message_trailer_array_free(git_message_trailer_array *arr)$/;"	f	typeref:typename:void
git_message_trailers	extern/libgit2/src/trailer.c	/^int git_message_trailers(git_message_trailer_array *trailer_arr, const char *message)$/;"	f	typeref:typename:int
git_mutex	extern/libgit2/src/thread-utils.h	/^#define git_mutex /;"	d
git_mutex	extern/libgit2/src/unix/pthread.h	/^#define git_mutex /;"	d
git_mutex	extern/libgit2/src/win32/thread.h	/^typedef CRITICAL_SECTION git_mutex;$/;"	t	typeref:typename:CRITICAL_SECTION
git_mutex_free	extern/libgit2/src/thread-utils.h	/^#define git_mutex_free(/;"	d
git_mutex_free	extern/libgit2/src/unix/pthread.h	/^#define git_mutex_free(/;"	d
git_mutex_free	extern/libgit2/src/win32/thread.c	/^int git_mutex_free(git_mutex *mutex)$/;"	f	typeref:typename:int
git_mutex_init	extern/libgit2/src/thread-utils.h	/^GIT_INLINE(int) git_mutex_init(git_mutex *mutex) \\$/;"	f	typeref:typename:int
git_mutex_init	extern/libgit2/src/unix/pthread.h	/^#define git_mutex_init(/;"	d
git_mutex_init	extern/libgit2/src/win32/thread.c	/^int git_mutex_init(git_mutex *GIT_RESTRICT mutex)$/;"	f	typeref:typename:int
git_mutex_lock	extern/libgit2/src/thread-utils.h	/^GIT_INLINE(int) git_mutex_lock(git_mutex *mutex) \\$/;"	f	typeref:typename:int
git_mutex_lock	extern/libgit2/src/unix/pthread.h	/^#define git_mutex_lock(/;"	d
git_mutex_lock	extern/libgit2/src/win32/thread.c	/^int git_mutex_lock(git_mutex *mutex)$/;"	f	typeref:typename:int
git_mutex_unlock	extern/libgit2/src/thread-utils.h	/^#define git_mutex_unlock(/;"	d
git_mutex_unlock	extern/libgit2/src/unix/pthread.h	/^#define git_mutex_unlock(/;"	d
git_mutex_unlock	extern/libgit2/src/win32/thread.c	/^int git_mutex_unlock(git_mutex *mutex)$/;"	f	typeref:typename:int
git_mwindow	extern/libgit2/src/mwindow.h	/^typedef struct git_mwindow {$/;"	s
git_mwindow	extern/libgit2/src/mwindow.h	/^} git_mwindow;$/;"	t	typeref:struct:git_mwindow
git_mwindow__mapped_limit	extern/libgit2/src/mwindow.c	/^size_t git_mwindow__mapped_limit = DEFAULT_MAPPED_LIMIT;$/;"	v	typeref:typename:size_t
git_mwindow__window_size	extern/libgit2/src/mwindow.c	/^size_t git_mwindow__window_size = DEFAULT_WINDOW_SIZE;$/;"	v	typeref:typename:size_t
git_mwindow_close	extern/libgit2/src/mwindow.c	/^void git_mwindow_close(git_mwindow **window)$/;"	f	typeref:typename:void
git_mwindow_close_lru	extern/libgit2/src/mwindow.c	/^static int git_mwindow_close_lru(git_mwindow_file *mwf)$/;"	f	typeref:typename:int	file:
git_mwindow_contains	extern/libgit2/src/mwindow.c	/^int git_mwindow_contains(git_mwindow *win, git_off_t offset)$/;"	f	typeref:typename:int
git_mwindow_ctl	extern/libgit2/src/mwindow.h	/^typedef struct git_mwindow_ctl {$/;"	s
git_mwindow_ctl	extern/libgit2/src/mwindow.h	/^} git_mwindow_ctl;$/;"	t	typeref:struct:git_mwindow_ctl
git_mwindow_file	extern/libgit2/src/mwindow.h	/^typedef struct git_mwindow_file {$/;"	s
git_mwindow_file	extern/libgit2/src/mwindow.h	/^} git_mwindow_file;$/;"	t	typeref:struct:git_mwindow_file
git_mwindow_file_deregister	extern/libgit2/src/mwindow.c	/^void git_mwindow_file_deregister(git_mwindow_file *mwf)$/;"	f	typeref:typename:void
git_mwindow_file_register	extern/libgit2/src/mwindow.c	/^int git_mwindow_file_register(git_mwindow_file *mwf)$/;"	f	typeref:typename:int
git_mwindow_files_free	extern/libgit2/src/mwindow.c	/^static void git_mwindow_files_free(void)$/;"	f	typeref:typename:void	file:
git_mwindow_free_all	extern/libgit2/src/mwindow.c	/^void git_mwindow_free_all(git_mwindow_file *mwf)$/;"	f	typeref:typename:void
git_mwindow_free_all_locked	extern/libgit2/src/mwindow.c	/^void git_mwindow_free_all_locked(git_mwindow_file *mwf)$/;"	f	typeref:typename:void
git_mwindow_get_pack	extern/libgit2/src/mwindow.c	/^int git_mwindow_get_pack(struct git_pack_file **out, const char *path)$/;"	f	typeref:typename:int
git_mwindow_global_init	extern/libgit2/src/mwindow.c	/^int git_mwindow_global_init(void)$/;"	f	typeref:typename:int
git_mwindow_open	extern/libgit2/src/mwindow.c	/^unsigned char *git_mwindow_open($/;"	f	typeref:typename:unsigned char *
git_mwindow_put_pack	extern/libgit2/src/mwindow.c	/^void git_mwindow_put_pack(struct git_pack_file *pack)$/;"	f	typeref:typename:void
git_mwindow_scan_lru	extern/libgit2/src/mwindow.c	/^static void git_mwindow_scan_lru($/;"	f	typeref:typename:void	file:
git_net_url	extern/libgit2/src/net.h	/^typedef struct git_net_url {$/;"	s
git_net_url	extern/libgit2/src/net.h	/^} git_net_url;$/;"	t	typeref:struct:git_net_url
git_net_url_dispose	extern/libgit2/src/net.c	/^void git_net_url_dispose(git_net_url *url)$/;"	f	typeref:typename:void
git_net_url_is_default_port	extern/libgit2/src/net.c	/^int git_net_url_is_default_port(git_net_url *url)$/;"	f	typeref:typename:int
git_net_url_parse	extern/libgit2/src/net.c	/^int git_net_url_parse(git_net_url *url, const char *given)$/;"	f	typeref:typename:int
git_net_url_swap	extern/libgit2/src/net.c	/^void git_net_url_swap(git_net_url *a, git_net_url *b)$/;"	f	typeref:typename:void
git_note	extern/libgit2/include/git2/types.h	/^typedef struct git_note git_note;$/;"	t	typeref:struct:git_note
git_note	extern/libgit2/src/notes.h	/^struct git_note {$/;"	s
git_note_author	extern/libgit2/src/notes.c	/^const git_signature *git_note_author(const git_note *note)$/;"	f	typeref:typename:const git_signature *
git_note_commit_create	extern/libgit2/src/notes.c	/^int git_note_commit_create($/;"	f	typeref:typename:int
git_note_commit_iterator_new	extern/libgit2/src/notes.c	/^int git_note_commit_iterator_new($/;"	f	typeref:typename:int
git_note_commit_read	extern/libgit2/src/notes.c	/^int git_note_commit_read($/;"	f	typeref:typename:int
git_note_commit_remove	extern/libgit2/src/notes.c	/^int git_note_commit_remove($/;"	f	typeref:typename:int
git_note_committer	extern/libgit2/src/notes.c	/^const git_signature *git_note_committer(const git_note *note)$/;"	f	typeref:typename:const git_signature *
git_note_create	extern/libgit2/src/notes.c	/^int git_note_create($/;"	f	typeref:typename:int
git_note_default_ref	extern/libgit2/src/notes.c	/^int git_note_default_ref(git_buf *out, git_repository *repo)$/;"	f	typeref:typename:int
git_note_foreach	extern/libgit2/src/notes.c	/^int git_note_foreach($/;"	f	typeref:typename:int
git_note_foreach_cb	extern/libgit2/include/git2/notes.h	/^typedef int GIT_CALLBACK(git_note_foreach_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_oid * blob_id,const git_oid * annotated_object_id,void * payload)
git_note_free	extern/libgit2/src/notes.c	/^void git_note_free(git_note *note)$/;"	f	typeref:typename:void
git_note_id	extern/libgit2/src/notes.c	/^const git_oid * git_note_id(const git_note *note)$/;"	f	typeref:typename:const git_oid *
git_note_iterator	extern/libgit2/include/git2/notes.h	/^typedef struct git_iterator git_note_iterator;$/;"	t	typeref:struct:git_iterator
git_note_iterator_free	extern/libgit2/src/notes.c	/^void git_note_iterator_free(git_note_iterator *it)$/;"	f	typeref:typename:void
git_note_iterator_new	extern/libgit2/src/notes.c	/^int git_note_iterator_new($/;"	f	typeref:typename:int
git_note_message	extern/libgit2/src/notes.c	/^const char * git_note_message(const git_note *note)$/;"	f	typeref:typename:const char *
git_note_next	extern/libgit2/src/notes.c	/^int git_note_next($/;"	f	typeref:typename:int
git_note_read	extern/libgit2/src/notes.c	/^int git_note_read(git_note **out, git_repository *repo,$/;"	f	typeref:typename:int
git_note_remove	extern/libgit2/src/notes.c	/^int git_note_remove(git_repository *repo, const char *notes_ref_in,$/;"	f	typeref:typename:int
git_object	extern/libgit2/include/git2/types.h	/^typedef struct git_object git_object;$/;"	t	typeref:struct:git_object
git_object	extern/libgit2/src/object.h	/^struct git_object {$/;"	s
git_object__free	extern/libgit2/src/object.c	/^void git_object__free(void *obj)$/;"	f	typeref:typename:void
git_object__from_odb_object	extern/libgit2/src/object.c	/^int git_object__from_odb_object($/;"	f	typeref:typename:int
git_object__from_raw	extern/libgit2/src/object.c	/^int git_object__from_raw($/;"	f	typeref:typename:int
git_object__is_valid	extern/libgit2/src/object.c	/^bool git_object__is_valid($/;"	f	typeref:typename:bool
git_object__size	extern/libgit2/src/object.c	/^size_t git_object__size(git_object_t type)$/;"	f	typeref:typename:size_t
git_object__strict_input_validation	extern/libgit2/src/object.c	/^bool git_object__strict_input_validation = true;$/;"	v	typeref:typename:bool
git_object__type_from_filemode	extern/libgit2/src/object.h	/^GIT_INLINE(git_object_t) git_object__type_from_filemode(git_filemode_t mode)$/;"	f	typeref:typename:git_object_t
git_object_def	extern/libgit2/src/object.c	/^} git_object_def;$/;"	t	typeref:struct:__anon4e5bf2450108	file:
git_object_dup	extern/libgit2/src/object.c	/^int git_object_dup(git_object **dest, git_object *source)$/;"	f	typeref:typename:int
git_object_free	extern/libgit2/src/object.c	/^void git_object_free(git_object *object)$/;"	f	typeref:typename:void
git_object_id	extern/libgit2/src/object.c	/^const git_oid *git_object_id(const git_object *obj)$/;"	f	typeref:typename:const git_oid *
git_object_lookup	extern/libgit2/src/object.c	/^int git_object_lookup(git_object **object_out, git_repository *repo, const git_oid *id, git_obje/;"	f	typeref:typename:int
git_object_lookup_bypath	extern/libgit2/src/object.c	/^int git_object_lookup_bypath($/;"	f	typeref:typename:int
git_object_lookup_prefix	extern/libgit2/src/object.c	/^int git_object_lookup_prefix($/;"	f	typeref:typename:int
git_object_owner	extern/libgit2/src/object.c	/^git_repository *git_object_owner(const git_object *obj)$/;"	f	typeref:typename:git_repository *
git_object_peel	extern/libgit2/src/object.c	/^int git_object_peel($/;"	f	typeref:typename:int
git_object_short_id	extern/libgit2/src/object.c	/^int git_object_short_id(git_buf *out, const git_object *obj)$/;"	f	typeref:typename:int
git_object_string2type	extern/libgit2/src/object.c	/^git_object_t git_object_string2type(const char *str)$/;"	f	typeref:typename:git_object_t
git_object_stringn2type	extern/libgit2/src/object.c	/^git_object_t git_object_stringn2type(const char *str, size_t len)$/;"	f	typeref:typename:git_object_t
git_object_t	extern/libgit2/include/git2/types.h	/^} git_object_t;$/;"	t	typeref:enum:__anona7f40ac90103
git_object_type	extern/libgit2/src/object.c	/^git_object_t git_object_type(const git_object *obj)$/;"	f	typeref:typename:git_object_t
git_object_type2string	extern/libgit2/src/object.c	/^const char *git_object_type2string(git_object_t type)$/;"	f	typeref:typename:const char *
git_object_typeisloose	extern/libgit2/src/object.c	/^int git_object_typeisloose(git_object_t type)$/;"	f	typeref:typename:int
git_objects_table	extern/libgit2/src/object.c	/^static git_object_def git_objects_table[] = {$/;"	v	typeref:typename:git_object_def[]	file:
git_odb	extern/libgit2/include/git2/types.h	/^typedef struct git_odb git_odb;$/;"	t	typeref:struct:git_odb
git_odb	extern/libgit2/src/odb.h	/^struct git_odb {$/;"	s
git_odb__add_default_backends	extern/libgit2/src/odb.c	/^int git_odb__add_default_backends($/;"	f	typeref:typename:int
git_odb__error_ambiguous	extern/libgit2/src/odb.c	/^int git_odb__error_ambiguous(const char *message)$/;"	f	typeref:typename:int
git_odb__error_mismatch	extern/libgit2/src/odb.c	/^int git_odb__error_mismatch(const git_oid *expected, const git_oid *actual)$/;"	f	typeref:typename:int
git_odb__error_notfound	extern/libgit2/src/odb.c	/^int git_odb__error_notfound($/;"	f	typeref:typename:int
git_odb__error_unsupported_in_backend	extern/libgit2/src/odb.c	/^static int git_odb__error_unsupported_in_backend(const char *action)$/;"	f	typeref:typename:int	file:
git_odb__format_object_header	extern/libgit2/src/odb.c	/^int git_odb__format_object_header($/;"	f	typeref:typename:int
git_odb__freshen	extern/libgit2/src/odb.c	/^int git_odb__freshen(git_odb *db, const git_oid *id)$/;"	f	typeref:typename:int
git_odb__hashfd	extern/libgit2/src/odb.c	/^int git_odb__hashfd(git_oid *out, git_file fd, size_t size, git_object_t type)$/;"	f	typeref:typename:int
git_odb__hashfd_filtered	extern/libgit2/src/odb.c	/^int git_odb__hashfd_filtered($/;"	f	typeref:typename:int
git_odb__hashlink	extern/libgit2/src/odb.c	/^int git_odb__hashlink(git_oid *out, const char *path)$/;"	f	typeref:typename:int
git_odb__hashobj	extern/libgit2/src/odb.c	/^int git_odb__hashobj(git_oid *id, git_rawobj *obj)$/;"	f	typeref:typename:int
git_odb__read_header_or_object	extern/libgit2/src/odb.c	/^int git_odb__read_header_or_object($/;"	f	typeref:typename:int
git_odb__set_caps	extern/libgit2/src/odb.c	/^int git_odb__set_caps(git_odb *odb, int caps)$/;"	f	typeref:typename:int
git_odb__strict_hash_verification	extern/libgit2/src/odb.c	/^bool git_odb__strict_hash_verification = true;$/;"	v	typeref:typename:bool
git_odb_add_alternate	extern/libgit2/src/odb.c	/^int git_odb_add_alternate(git_odb *odb, git_odb_backend *backend, int priority)$/;"	f	typeref:typename:int
git_odb_add_backend	extern/libgit2/src/odb.c	/^int git_odb_add_backend(git_odb *odb, git_odb_backend *backend, int priority)$/;"	f	typeref:typename:int
git_odb_add_disk_alternate	extern/libgit2/src/odb.c	/^int git_odb_add_disk_alternate(git_odb *odb, const char *path)$/;"	f	typeref:typename:int
git_odb_backend	extern/libgit2/include/git2/sys/odb_backend.h	/^struct git_odb_backend {$/;"	s
git_odb_backend	extern/libgit2/include/git2/types.h	/^typedef struct git_odb_backend git_odb_backend;$/;"	t	typeref:struct:git_odb_backend
git_odb_backend_data_alloc	extern/libgit2/src/odb.c	/^void *git_odb_backend_data_alloc(git_odb_backend *backend, size_t len)$/;"	f	typeref:typename:void *
git_odb_backend_data_free	extern/libgit2/src/odb.c	/^void git_odb_backend_data_free(git_odb_backend *backend, void *data)$/;"	f	typeref:typename:void
git_odb_backend_loose	extern/libgit2/src/odb_loose.c	/^int git_odb_backend_loose($/;"	f	typeref:typename:int
git_odb_backend_malloc	extern/libgit2/src/odb.c	/^void *git_odb_backend_malloc(git_odb_backend *backend, size_t len)$/;"	f	typeref:typename:void *
git_odb_backend_one_pack	extern/libgit2/src/odb_pack.c	/^int git_odb_backend_one_pack(git_odb_backend **backend_out, const char *idx)$/;"	f	typeref:typename:int
git_odb_backend_pack	extern/libgit2/src/odb_pack.c	/^int git_odb_backend_pack(git_odb_backend **backend_out, const char *objects_dir)$/;"	f	typeref:typename:int
git_odb_cap_t	extern/libgit2/src/odb.h	/^} git_odb_cap_t;$/;"	t	typeref:enum:__anonfbf77e280203
git_odb_exists	extern/libgit2/src/odb.c	/^int git_odb_exists(git_odb *db, const git_oid *id)$/;"	f	typeref:typename:int
git_odb_exists_prefix	extern/libgit2/src/odb.c	/^int git_odb_exists_prefix($/;"	f	typeref:typename:int
git_odb_expand_id	extern/libgit2/include/git2/odb.h	/^typedef struct git_odb_expand_id {$/;"	s
git_odb_expand_id	extern/libgit2/include/git2/odb.h	/^} git_odb_expand_id;$/;"	t	typeref:struct:git_odb_expand_id
git_odb_expand_ids	extern/libgit2/src/odb.c	/^int git_odb_expand_ids($/;"	f	typeref:typename:int
git_odb_foreach	extern/libgit2/src/odb.c	/^int git_odb_foreach(git_odb *db, git_odb_foreach_cb cb, void *payload)$/;"	f	typeref:typename:int
git_odb_foreach_cb	extern/libgit2/include/git2/odb.h	/^typedef int GIT_CALLBACK(git_odb_foreach_cb)(const git_oid *id, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_oid * id,void * payload)
git_odb_free	extern/libgit2/src/odb.c	/^void git_odb_free(git_odb *db)$/;"	f	typeref:typename:void
git_odb_get_backend	extern/libgit2/src/odb.c	/^int git_odb_get_backend(git_odb_backend **out, git_odb *odb, size_t pos)$/;"	f	typeref:typename:int
git_odb_hash	extern/libgit2/src/odb.c	/^int git_odb_hash(git_oid *id, const void *data, size_t len, git_object_t type)$/;"	f	typeref:typename:int
git_odb_hashfile	extern/libgit2/src/odb.c	/^int git_odb_hashfile(git_oid *out, const char *path, git_object_t type)$/;"	f	typeref:typename:int
git_odb_init_backend	extern/libgit2/src/odb.c	/^int git_odb_init_backend(git_odb_backend *backend, unsigned int version)$/;"	f	typeref:typename:int
git_odb_new	extern/libgit2/src/odb.c	/^int git_odb_new(git_odb **out)$/;"	f	typeref:typename:int
git_odb_num_backends	extern/libgit2/src/odb.c	/^size_t git_odb_num_backends(git_odb *odb)$/;"	f	typeref:typename:size_t
git_odb_object	extern/libgit2/include/git2/types.h	/^typedef struct git_odb_object git_odb_object;$/;"	t	typeref:struct:git_odb_object
git_odb_object	extern/libgit2/src/odb.h	/^struct git_odb_object {$/;"	s
git_odb_object__free	extern/libgit2/src/odb.c	/^void git_odb_object__free(void *object)$/;"	f	typeref:typename:void
git_odb_object_data	extern/libgit2/src/odb.c	/^const void *git_odb_object_data(git_odb_object *object)$/;"	f	typeref:typename:const void *
git_odb_object_dup	extern/libgit2/src/odb.c	/^int git_odb_object_dup(git_odb_object **dest, git_odb_object *source)$/;"	f	typeref:typename:int
git_odb_object_free	extern/libgit2/src/odb.c	/^void git_odb_object_free(git_odb_object *object)$/;"	f	typeref:typename:void
git_odb_object_id	extern/libgit2/src/odb.c	/^const git_oid *git_odb_object_id(git_odb_object *object)$/;"	f	typeref:typename:const git_oid *
git_odb_object_size	extern/libgit2/src/odb.c	/^size_t git_odb_object_size(git_odb_object *object)$/;"	f	typeref:typename:size_t
git_odb_object_type	extern/libgit2/src/odb.c	/^git_object_t git_odb_object_type(git_odb_object *object)$/;"	f	typeref:typename:git_object_t
git_odb_open	extern/libgit2/src/odb.c	/^int git_odb_open(git_odb **out, const char *objects_dir)$/;"	f	typeref:typename:int
git_odb_open_rstream	extern/libgit2/src/odb.c	/^int git_odb_open_rstream($/;"	f	typeref:typename:int
git_odb_open_wstream	extern/libgit2/src/odb.c	/^int git_odb_open_wstream($/;"	f	typeref:typename:int
git_odb_read	extern/libgit2/src/odb.c	/^int git_odb_read(git_odb_object **out, git_odb *db, const git_oid *id)$/;"	f	typeref:typename:int
git_odb_read_header	extern/libgit2/src/odb.c	/^int git_odb_read_header(size_t *len_p, git_object_t *type_p, git_odb *db, const git_oid *id)$/;"	f	typeref:typename:int
git_odb_read_prefix	extern/libgit2/src/odb.c	/^int git_odb_read_prefix($/;"	f	typeref:typename:int
git_odb_refresh	extern/libgit2/src/odb.c	/^int git_odb_refresh(struct git_odb *db)$/;"	f	typeref:typename:int
git_odb_stream	extern/libgit2/include/git2/odb_backend.h	/^struct git_odb_stream {$/;"	s
git_odb_stream	extern/libgit2/include/git2/types.h	/^typedef struct git_odb_stream git_odb_stream;$/;"	t	typeref:struct:git_odb_stream
git_odb_stream__invalid_length	extern/libgit2/src/odb.c	/^static int git_odb_stream__invalid_length($/;"	f	typeref:typename:int	file:
git_odb_stream_finalize_write	extern/libgit2/src/odb.c	/^int git_odb_stream_finalize_write(git_oid *out, git_odb_stream *stream)$/;"	f	typeref:typename:int
git_odb_stream_free	extern/libgit2/src/odb.c	/^void git_odb_stream_free(git_odb_stream *stream)$/;"	f	typeref:typename:void
git_odb_stream_read	extern/libgit2/src/odb.c	/^int git_odb_stream_read(git_odb_stream *stream, char *buffer, size_t len)$/;"	f	typeref:typename:int
git_odb_stream_t	extern/libgit2/include/git2/odb_backend.h	/^} git_odb_stream_t;$/;"	t	typeref:enum:__anone69a74500103
git_odb_stream_write	extern/libgit2/src/odb.c	/^int git_odb_stream_write(git_odb_stream *stream, const char *buffer, size_t len)$/;"	f	typeref:typename:int
git_odb_write	extern/libgit2/src/odb.c	/^int git_odb_write($/;"	f	typeref:typename:int
git_odb_write_pack	extern/libgit2/src/odb.c	/^int git_odb_write_pack(struct git_odb_writepack **out, git_odb *db, git_indexer_progress_cb prog/;"	f	typeref:typename:int
git_odb_writepack	extern/libgit2/include/git2/odb_backend.h	/^struct git_odb_writepack {$/;"	s
git_odb_writepack	extern/libgit2/include/git2/types.h	/^typedef struct git_odb_writepack git_odb_writepack;$/;"	t	typeref:struct:git_odb_writepack
git_off_t	extern/libgit2/include/git2/types.h	/^typedef __int64 git_off_t;$/;"	t	typeref:typename:__int64
git_offmap	extern/libgit2/src/offmap.h	/^typedef struct kh_off_s git_offmap;$/;"	t	typeref:struct:kh_off_s
git_offmap_clear	extern/libgit2/src/offmap.c	/^void git_offmap_clear(git_offmap *map)$/;"	f	typeref:typename:void
git_offmap_delete	extern/libgit2/src/offmap.c	/^int git_offmap_delete(git_offmap *map, const git_off_t key)$/;"	f	typeref:typename:int
git_offmap_exists	extern/libgit2/src/offmap.c	/^int git_offmap_exists(git_offmap *map, const git_off_t key)$/;"	f	typeref:typename:int
git_offmap_foreach	extern/libgit2/src/offmap.h	/^#define git_offmap_foreach(/;"	d
git_offmap_foreach_value	extern/libgit2/src/offmap.h	/^#define git_offmap_foreach_value(/;"	d
git_offmap_free	extern/libgit2/src/offmap.c	/^void git_offmap_free(git_offmap *map)$/;"	f	typeref:typename:void
git_offmap_get	extern/libgit2/src/offmap.c	/^void *git_offmap_get(git_offmap *map, const git_off_t key)$/;"	f	typeref:typename:void *
git_offmap_iterate	extern/libgit2/src/offmap.c	/^int git_offmap_iterate(void **value, git_offmap *map, size_t *iter, git_off_t *key)$/;"	f	typeref:typename:int
git_offmap_set	extern/libgit2/src/offmap.c	/^int git_offmap_set(git_offmap *map, const git_off_t key, void *value)$/;"	f	typeref:typename:int
git_offmap_size	extern/libgit2/src/offmap.c	/^size_t git_offmap_size(git_offmap *map)$/;"	f	typeref:typename:size_t
git_oid	extern/libgit2/include/git2/oid.h	/^typedef struct git_oid {$/;"	s
git_oid	extern/libgit2/include/git2/oid.h	/^} git_oid;$/;"	t	typeref:struct:git_oid
git_oid__cmp	extern/libgit2/src/oid.h	/^GIT_INLINE(int) git_oid__cmp(const git_oid *a, const git_oid *b)$/;"	f	typeref:typename:int
git_oid__cpy_prefix	extern/libgit2/src/oid.h	/^GIT_INLINE(void) git_oid__cpy_prefix($/;"	f	typeref:typename:void
git_oid__hashcmp	extern/libgit2/src/oid.h	/^GIT_INLINE(int) git_oid__hashcmp(const unsigned char *sha1, const unsigned char *sha2)$/;"	f	typeref:typename:int
git_oid__parse	extern/libgit2/src/oid.c	/^int git_oid__parse($/;"	f	typeref:typename:int
git_oid__writebuf	extern/libgit2/src/oid.c	/^void git_oid__writebuf(git_buf *buf, const char *header, const git_oid *oid)$/;"	f	typeref:typename:void
git_oid_allocfmt	extern/libgit2/src/oid.c	/^char *git_oid_allocfmt(const git_oid *oid)$/;"	f	typeref:typename:char *
git_oid_cmp	extern/libgit2/src/oid.c	/^int git_oid_cmp(const git_oid *a, const git_oid *b)$/;"	f	typeref:typename:int
git_oid_cpy	extern/libgit2/src/oid.c	/^void git_oid_cpy(git_oid *out, const git_oid *src)$/;"	f	typeref:typename:void
git_oid_equal	extern/libgit2/src/oid.c	/^int git_oid_equal(const git_oid *a, const git_oid *b)$/;"	f	typeref:typename:int
git_oid_fmt	extern/libgit2/src/oid.c	/^void git_oid_fmt(char *str, const git_oid *oid)$/;"	f	typeref:typename:void
git_oid_fromraw	extern/libgit2/src/oid.c	/^void git_oid_fromraw(git_oid *out, const unsigned char *raw)$/;"	f	typeref:typename:void
git_oid_fromstr	extern/libgit2/src/oid.c	/^int git_oid_fromstr(git_oid *out, const char *str)$/;"	f	typeref:typename:int
git_oid_fromstrn	extern/libgit2/src/oid.c	/^int git_oid_fromstrn(git_oid *out, const char *str, size_t length)$/;"	f	typeref:typename:int
git_oid_fromstrp	extern/libgit2/src/oid.c	/^int git_oid_fromstrp(git_oid *out, const char *str)$/;"	f	typeref:typename:int
git_oid_is_zero	extern/libgit2/src/oid.c	/^int git_oid_is_zero(const git_oid *oid_a)$/;"	f	typeref:typename:int
git_oid_iszero	extern/libgit2/src/oid.c	/^int git_oid_iszero(const git_oid *oid_a)$/;"	f	typeref:typename:int
git_oid_ncmp	extern/libgit2/src/oid.c	/^int git_oid_ncmp(const git_oid *oid_a, const git_oid *oid_b, size_t len)$/;"	f	typeref:typename:int
git_oid_nfmt	extern/libgit2/src/oid.c	/^void git_oid_nfmt(char *str, size_t n, const git_oid *oid)$/;"	f	typeref:typename:void
git_oid_pathfmt	extern/libgit2/src/oid.c	/^void git_oid_pathfmt(char *str, const git_oid *oid)$/;"	f	typeref:typename:void
git_oid_shorten	extern/libgit2/include/git2/oid.h	/^typedef struct git_oid_shorten git_oid_shorten;$/;"	t	typeref:struct:git_oid_shorten
git_oid_shorten	extern/libgit2/src/oid.c	/^struct git_oid_shorten {$/;"	s	file:
git_oid_shorten_add	extern/libgit2/src/oid.c	/^int git_oid_shorten_add(git_oid_shorten *os, const char *text_oid)$/;"	f	typeref:typename:int
git_oid_shorten_free	extern/libgit2/src/oid.c	/^void git_oid_shorten_free(git_oid_shorten *os)$/;"	f	typeref:typename:void
git_oid_shorten_new	extern/libgit2/src/oid.c	/^git_oid_shorten *git_oid_shorten_new(size_t min_length)$/;"	f	typeref:typename:git_oid_shorten *
git_oid_strcmp	extern/libgit2/src/oid.c	/^int git_oid_strcmp(const git_oid *oid_a, const char *str)$/;"	f	typeref:typename:int
git_oid_streq	extern/libgit2/src/oid.c	/^int git_oid_streq(const git_oid *oid_a, const char *str)$/;"	f	typeref:typename:int
git_oid_tostr	extern/libgit2/src/oid.c	/^char *git_oid_tostr(char *out, size_t n, const git_oid *oid)$/;"	f	typeref:typename:char *
git_oid_tostr_s	extern/libgit2/src/oid.c	/^char *git_oid_tostr_s(const git_oid *oid)$/;"	f	typeref:typename:char *
git_oidarray	extern/libgit2/include/git2/oidarray.h	/^typedef struct git_oidarray {$/;"	s
git_oidarray	extern/libgit2/include/git2/oidarray.h	/^} git_oidarray;$/;"	t	typeref:struct:git_oidarray
git_oidarray__from_array	extern/libgit2/src/oidarray.c	/^void git_oidarray__from_array(git_oidarray *arr, git_array_oid_t *array)$/;"	f	typeref:typename:void
git_oidarray__reverse	extern/libgit2/src/oidarray.c	/^void git_oidarray__reverse(git_oidarray *arr)$/;"	f	typeref:typename:void
git_oidarray_free	extern/libgit2/src/oidarray.c	/^void git_oidarray_free(git_oidarray *arr)$/;"	f	typeref:typename:void
git_oidmap	extern/libgit2/src/oidmap.h	/^typedef struct kh_oid_s git_oidmap;$/;"	t	typeref:struct:kh_oid_s
git_oidmap_clear	extern/libgit2/src/oidmap.c	/^void git_oidmap_clear(git_oidmap *map)$/;"	f	typeref:typename:void
git_oidmap_delete	extern/libgit2/src/oidmap.c	/^int git_oidmap_delete(git_oidmap *map, const git_oid *key)$/;"	f	typeref:typename:int
git_oidmap_exists	extern/libgit2/src/oidmap.c	/^int git_oidmap_exists(git_oidmap *map, const git_oid *key)$/;"	f	typeref:typename:int
git_oidmap_foreach_value	extern/libgit2/src/oidmap.h	/^#define git_oidmap_foreach_value(/;"	d
git_oidmap_free	extern/libgit2/src/oidmap.c	/^void git_oidmap_free(git_oidmap *map)$/;"	f	typeref:typename:void
git_oidmap_get	extern/libgit2/src/oidmap.c	/^void *git_oidmap_get(git_oidmap *map, const git_oid *key)$/;"	f	typeref:typename:void *
git_oidmap_iterate	extern/libgit2/src/oidmap.c	/^int git_oidmap_iterate(void **value, git_oidmap *map, size_t *iter, const git_oid **key)$/;"	f	typeref:typename:int
git_oidmap_set	extern/libgit2/src/oidmap.c	/^int git_oidmap_set(git_oidmap *map, const git_oid *key, void *value)$/;"	f	typeref:typename:int
git_oidmap_size	extern/libgit2/src/oidmap.c	/^size_t git_oidmap_size(git_oidmap *map)$/;"	f	typeref:typename:size_t
git_online_cpus	extern/libgit2/src/thread-utils.c	/^int git_online_cpus(void)$/;"	f	typeref:typename:int
git_openssl__set_cert_location	extern/libgit2/src/streams/openssl.c	/^int git_openssl__set_cert_location(const char *file, const char *path)$/;"	f	typeref:typename:int
git_openssl_set_locking	extern/libgit2/src/streams/openssl.c	/^int git_openssl_set_locking(void)$/;"	f	typeref:typename:int
git_openssl_stream_global_init	extern/libgit2/src/streams/openssl.c	/^int git_openssl_stream_global_init(void)$/;"	f	typeref:typename:int
git_openssl_stream_new	extern/libgit2/src/streams/openssl.c	/^int git_openssl_stream_new(git_stream **out, const char *host, const char *port)$/;"	f	typeref:typename:int
git_openssl_stream_wrap	extern/libgit2/src/streams/openssl.c	/^int git_openssl_stream_wrap(git_stream **out, git_stream *in, const char *host)$/;"	f	typeref:typename:int
git_otype	extern/libgit2/include/git2/deprecated.h	/^#define git_otype /;"	d
git_pack_cache	extern/libgit2/src/pack.h	/^} git_pack_cache;$/;"	t	typeref:struct:__anon7d07ab120108
git_pack_cache_entry	extern/libgit2/src/pack.h	/^typedef struct git_pack_cache_entry {$/;"	s
git_pack_cache_entry	extern/libgit2/src/pack.h	/^} git_pack_cache_entry;$/;"	t	typeref:struct:git_pack_cache_entry
git_pack_entry	extern/libgit2/src/pack.h	/^struct git_pack_entry {$/;"	s
git_pack_entry_find	extern/libgit2/src/pack.c	/^int git_pack_entry_find($/;"	f	typeref:typename:int
git_pack_file	extern/libgit2/src/pack.h	/^struct git_pack_file {$/;"	s
git_pack_foreach_entry	extern/libgit2/src/pack.c	/^int git_pack_foreach_entry($/;"	f	typeref:typename:int
git_pack_header	extern/libgit2/src/pack.h	/^struct git_pack_header {$/;"	s
git_pack_idx_header	extern/libgit2/src/pack.h	/^struct git_pack_idx_header {$/;"	s
git_packbuilder	extern/libgit2/include/git2/types.h	/^typedef struct git_packbuilder git_packbuilder;$/;"	t	typeref:struct:git_packbuilder
git_packbuilder	extern/libgit2/src/pack-objects.h	/^struct git_packbuilder {$/;"	s
git_packbuilder__cache_lock	extern/libgit2/src/pack-objects.c	/^#define git_packbuilder__cache_lock(/;"	d	file:
git_packbuilder__cache_unlock	extern/libgit2/src/pack-objects.c	/^#define git_packbuilder__cache_unlock(/;"	d	file:
git_packbuilder__progress_lock	extern/libgit2/src/pack-objects.c	/^#define git_packbuilder__progress_lock(/;"	d	file:
git_packbuilder__progress_unlock	extern/libgit2/src/pack-objects.c	/^#define git_packbuilder__progress_unlock(/;"	d	file:
git_packbuilder_foreach	extern/libgit2/src/pack-objects.c	/^int git_packbuilder_foreach(git_packbuilder *pb, int (*cb)(void *buf, size_t size, void *payload/;"	f	typeref:typename:int
git_packbuilder_foreach_cb	extern/libgit2/include/git2/pack.h	/^typedef int GIT_CALLBACK(git_packbuilder_foreach_cb)(void *buf, size_t size, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(void * buf,size_t size,void * payload)
git_packbuilder_free	extern/libgit2/src/pack-objects.c	/^void git_packbuilder_free(git_packbuilder *pb)$/;"	f	typeref:typename:void
git_packbuilder_hash	extern/libgit2/src/pack-objects.c	/^const git_oid *git_packbuilder_hash(git_packbuilder *pb)$/;"	f	typeref:typename:const git_oid *
git_packbuilder_insert	extern/libgit2/src/pack-objects.c	/^int git_packbuilder_insert(git_packbuilder *pb, const git_oid *oid,$/;"	f	typeref:typename:int
git_packbuilder_insert_commit	extern/libgit2/src/pack-objects.c	/^int git_packbuilder_insert_commit(git_packbuilder *pb, const git_oid *oid)$/;"	f	typeref:typename:int
git_packbuilder_insert_recur	extern/libgit2/src/pack-objects.c	/^int git_packbuilder_insert_recur(git_packbuilder *pb, const git_oid *id, const char *name)$/;"	f	typeref:typename:int
git_packbuilder_insert_tree	extern/libgit2/src/pack-objects.c	/^int git_packbuilder_insert_tree(git_packbuilder *pb, const git_oid *oid)$/;"	f	typeref:typename:int
git_packbuilder_insert_walk	extern/libgit2/src/pack-objects.c	/^int git_packbuilder_insert_walk(git_packbuilder *pb, git_revwalk *walk)$/;"	f	typeref:typename:int
git_packbuilder_new	extern/libgit2/src/pack-objects.c	/^int git_packbuilder_new(git_packbuilder **out, git_repository *repo)$/;"	f	typeref:typename:int
git_packbuilder_object_count	extern/libgit2/src/pack-objects.c	/^size_t git_packbuilder_object_count(git_packbuilder *pb)$/;"	f	typeref:typename:size_t
git_packbuilder_progress	extern/libgit2/include/git2/pack.h	/^typedef int GIT_CALLBACK(git_packbuilder_progress)($/;"	t	typeref:typename:int GIT_CALLBACK ()(int stage,uint32_t current,uint32_t total,void * payload)
git_packbuilder_set_callbacks	extern/libgit2/src/pack-objects.c	/^int git_packbuilder_set_callbacks(git_packbuilder *pb, git_packbuilder_progress progress_cb, voi/;"	f	typeref:typename:int
git_packbuilder_set_threads	extern/libgit2/src/pack-objects.c	/^unsigned int git_packbuilder_set_threads(git_packbuilder *pb, unsigned int n)$/;"	f	typeref:typename:unsigned int
git_packbuilder_stage_t	extern/libgit2/include/git2/pack.h	/^} git_packbuilder_stage_t;$/;"	t	typeref:enum:__anon8d6dc3930103
git_packbuilder_write	extern/libgit2/src/pack-objects.c	/^int git_packbuilder_write($/;"	f	typeref:typename:int
git_packbuilder_write_buf	extern/libgit2/src/pack-objects.c	/^int git_packbuilder_write_buf(git_buf *buf, git_packbuilder *pb)$/;"	f	typeref:typename:int
git_packbuilder_written	extern/libgit2/src/pack-objects.c	/^size_t git_packbuilder_written(git_packbuilder *pb)$/;"	f	typeref:typename:size_t
git_packfile__name	extern/libgit2/src/pack.c	/^int git_packfile__name(char **out, const char *path)$/;"	f	typeref:typename:int
git_packfile__object_header	extern/libgit2/src/pack.c	/^size_t git_packfile__object_header(unsigned char *hdr, size_t size, git_object_t type)$/;"	f	typeref:typename:size_t
git_packfile_alloc	extern/libgit2/src/pack.c	/^int git_packfile_alloc(struct git_pack_file **pack_out, const char *path)$/;"	f	typeref:typename:int
git_packfile_close	extern/libgit2/src/pack.c	/^void git_packfile_close(struct git_pack_file *p, bool unlink_packfile)$/;"	f	typeref:typename:void
git_packfile_free	extern/libgit2/src/pack.c	/^void git_packfile_free(struct git_pack_file *p)$/;"	f	typeref:typename:void
git_packfile_resolve_header	extern/libgit2/src/pack.c	/^int git_packfile_resolve_header($/;"	f	typeref:typename:int
git_packfile_stream	extern/libgit2/src/pack.h	/^typedef struct git_packfile_stream {$/;"	s
git_packfile_stream	extern/libgit2/src/pack.h	/^} git_packfile_stream;$/;"	t	typeref:struct:git_packfile_stream
git_packfile_stream_dispose	extern/libgit2/src/pack.c	/^void git_packfile_stream_dispose(git_packfile_stream *obj)$/;"	f	typeref:typename:void
git_packfile_stream_open	extern/libgit2/src/pack.c	/^int git_packfile_stream_open(git_packfile_stream *obj, struct git_pack_file *p, git_off_t curpos/;"	f	typeref:typename:int
git_packfile_stream_read	extern/libgit2/src/pack.c	/^ssize_t git_packfile_stream_read(git_packfile_stream *obj, void *buffer, size_t len)$/;"	f	typeref:typename:ssize_t
git_packfile_unpack	extern/libgit2/src/pack.c	/^int git_packfile_unpack($/;"	f	typeref:typename:int
git_packfile_unpack_header	extern/libgit2/src/pack.c	/^int git_packfile_unpack_header($/;"	f	typeref:typename:int
git_parse_advance_chars	extern/libgit2/src/parse.c	/^void git_parse_advance_chars(git_parse_ctx *ctx, size_t char_cnt)$/;"	f	typeref:typename:void
git_parse_advance_digit	extern/libgit2/src/parse.c	/^int git_parse_advance_digit(int64_t *out, git_parse_ctx *ctx, int base)$/;"	f	typeref:typename:int
git_parse_advance_expected	extern/libgit2/src/parse.c	/^int git_parse_advance_expected($/;"	f	typeref:typename:int
git_parse_advance_expected_str	extern/libgit2/src/parse.h	/^#define git_parse_advance_expected_str(/;"	d
git_parse_advance_line	extern/libgit2/src/parse.c	/^void git_parse_advance_line(git_parse_ctx *ctx)$/;"	f	typeref:typename:void
git_parse_advance_nl	extern/libgit2/src/parse.c	/^int git_parse_advance_nl(git_parse_ctx *ctx)$/;"	f	typeref:typename:int
git_parse_advance_ws	extern/libgit2/src/parse.c	/^int git_parse_advance_ws(git_parse_ctx *ctx)$/;"	f	typeref:typename:int
git_parse_ctx	extern/libgit2/src/parse.h	/^} git_parse_ctx;$/;"	t	typeref:struct:__anon1f11c2ce0108
git_parse_ctx_clear	extern/libgit2/src/parse.c	/^void git_parse_ctx_clear(git_parse_ctx *ctx)$/;"	f	typeref:typename:void
git_parse_ctx_contains	extern/libgit2/src/parse.h	/^GIT_INLINE(bool) git_parse_ctx_contains($/;"	f	typeref:typename:bool
git_parse_ctx_contains_s	extern/libgit2/src/parse.h	/^#define git_parse_ctx_contains_s(/;"	d
git_parse_ctx_init	extern/libgit2/src/parse.c	/^int git_parse_ctx_init(git_parse_ctx *ctx, const char *content, size_t content_len)$/;"	f	typeref:typename:int
git_parse_err	extern/libgit2/src/patch_parse.c	/^static int git_parse_err(const char *fmt, ...)$/;"	f	typeref:typename:int	file:
git_parse_peek	extern/libgit2/src/parse.c	/^int git_parse_peek(char *out, git_parse_ctx *ctx, int flags)$/;"	f	typeref:typename:int
git_patch	extern/libgit2/include/git2/patch.h	/^typedef struct git_patch git_patch;$/;"	t	typeref:struct:git_patch
git_patch	extern/libgit2/src/patch.h	/^struct git_patch {$/;"	s
git_patch__free	extern/libgit2/src/patch.c	/^static void git_patch__free(git_patch *patch)$/;"	f	typeref:typename:void	file:
git_patch__invoke_callbacks	extern/libgit2/src/patch.c	/^int git_patch__invoke_callbacks($/;"	f	typeref:typename:int
git_patch_free	extern/libgit2/src/patch.c	/^void git_patch_free(git_patch *patch)$/;"	f	typeref:typename:void
git_patch_from_blob_and_buffer	extern/libgit2/src/patch_generate.c	/^int git_patch_from_blob_and_buffer($/;"	f	typeref:typename:int
git_patch_from_blobs	extern/libgit2/src/patch_generate.c	/^int git_patch_from_blobs($/;"	f	typeref:typename:int
git_patch_from_buffer	extern/libgit2/src/patch_parse.c	/^int git_patch_from_buffer($/;"	f	typeref:typename:int
git_patch_from_buffers	extern/libgit2/src/patch_generate.c	/^int git_patch_from_buffers($/;"	f	typeref:typename:int
git_patch_from_diff	extern/libgit2/src/patch.c	/^int git_patch_from_diff(git_patch **out, git_diff *diff, size_t idx)$/;"	f	typeref:typename:int
git_patch_generated	extern/libgit2/src/patch_generate.h	/^struct git_patch_generated {$/;"	s
git_patch_generated	extern/libgit2/src/patch_generate.h	/^typedef struct git_patch_generated git_patch_generated;$/;"	t	typeref:struct:git_patch_generated
git_patch_generated_driver	extern/libgit2/src/patch_generate.c	/^git_diff_driver *git_patch_generated_driver(git_patch_generated *patch)$/;"	f	typeref:typename:git_diff_driver *
git_patch_generated_from_diff	extern/libgit2/src/patch_generate.c	/^int git_patch_generated_from_diff($/;"	f	typeref:typename:int
git_patch_generated_new_data	extern/libgit2/src/patch_generate.c	/^void git_patch_generated_new_data($/;"	f	typeref:typename:void
git_patch_generated_old_data	extern/libgit2/src/patch_generate.c	/^void git_patch_generated_old_data($/;"	f	typeref:typename:void
git_patch_generated_output	extern/libgit2/src/patch_generate.h	/^struct git_patch_generated_output {$/;"	s
git_patch_generated_output	extern/libgit2/src/patch_generate.h	/^typedef struct git_patch_generated_output git_patch_generated_output;$/;"	t	typeref:struct:git_patch_generated_output
git_patch_get_delta	extern/libgit2/src/patch.c	/^const git_diff_delta *git_patch_get_delta(const git_patch *patch)$/;"	f	typeref:typename:const git_diff_delta *
git_patch_get_hunk	extern/libgit2/src/patch.c	/^int git_patch_get_hunk($/;"	f	typeref:typename:int
git_patch_get_line_in_hunk	extern/libgit2/src/patch.c	/^int git_patch_get_line_in_hunk($/;"	f	typeref:typename:int
git_patch_hunk	extern/libgit2/src/patch.h	/^typedef struct git_patch_hunk {$/;"	s
git_patch_hunk	extern/libgit2/src/patch.h	/^} git_patch_hunk;$/;"	t	typeref:struct:git_patch_hunk
git_patch_hunk_cb	extern/libgit2/src/patch_generate.c	/^static int git_patch_hunk_cb($/;"	f	typeref:typename:int	file:
git_patch_line_stats	extern/libgit2/src/patch.c	/^int git_patch_line_stats($/;"	f	typeref:typename:int
git_patch_num_hunks	extern/libgit2/src/patch.c	/^size_t git_patch_num_hunks(const git_patch *patch)$/;"	f	typeref:typename:size_t
git_patch_num_lines_in_hunk	extern/libgit2/src/patch.c	/^int git_patch_num_lines_in_hunk(const git_patch *patch, size_t hunk_idx)$/;"	f	typeref:typename:int
git_patch_options	extern/libgit2/src/patch.h	/^} git_patch_options;$/;"	t	typeref:struct:__anon1f2d3a830108
git_patch_parse	extern/libgit2/src/patch_parse.c	/^int git_patch_parse($/;"	f	typeref:typename:int
git_patch_parse_ctx	extern/libgit2/src/patch_parse.h	/^} git_patch_parse_ctx;$/;"	t	typeref:struct:__anonadbd87dd0108
git_patch_parse_ctx_free	extern/libgit2/src/patch_parse.c	/^void git_patch_parse_ctx_free(git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:void
git_patch_parse_ctx_init	extern/libgit2/src/patch_parse.c	/^git_patch_parse_ctx *git_patch_parse_ctx_init($/;"	f	typeref:typename:git_patch_parse_ctx *
git_patch_parsed	extern/libgit2/src/patch_parse.c	/^} git_patch_parsed;$/;"	t	typeref:struct:__anonadbd87d80108	file:
git_patch_parsed_from_diff	extern/libgit2/src/patch_parse.c	/^int git_patch_parsed_from_diff(git_patch **out, git_diff *d, size_t idx)$/;"	f	typeref:typename:int
git_patch_print	extern/libgit2/src/diff_print.c	/^int git_patch_print($/;"	f	typeref:typename:int
git_patch_size	extern/libgit2/src/patch.c	/^size_t git_patch_size($/;"	f	typeref:typename:size_t
git_patch_to_buf	extern/libgit2/src/diff_print.c	/^int git_patch_to_buf(git_buf *out, git_patch *patch)$/;"	f	typeref:typename:int
git_path_apply_relative	extern/libgit2/src/path.c	/^int git_path_apply_relative(git_buf *target, const char *relpath)$/;"	f	typeref:typename:int
git_path_at_end_of_segment	extern/libgit2/src/path.h	/^GIT_INLINE(int) git_path_at_end_of_segment(const char *p)$/;"	f	typeref:typename:int
git_path_basename	extern/libgit2/src/path.c	/^char *git_path_basename(const char *path)$/;"	f	typeref:typename:char *
git_path_basename_offset	extern/libgit2/src/path.c	/^size_t git_path_basename_offset(git_buf *buffer)$/;"	f	typeref:typename:size_t
git_path_basename_r	extern/libgit2/src/path.c	/^int git_path_basename_r(git_buf *buffer, const char *path)$/;"	f	typeref:typename:int
git_path_cmp	extern/libgit2/src/path.c	/^int git_path_cmp($/;"	f	typeref:typename:int
git_path_common_dirlen	extern/libgit2/src/path.c	/^size_t git_path_common_dirlen(const char *one, const char *two)$/;"	f	typeref:typename:size_t
git_path_contains	extern/libgit2/src/path.c	/^bool git_path_contains(git_buf *dir, const char *item)$/;"	f	typeref:typename:bool
git_path_contains_dir	extern/libgit2/src/path.c	/^bool git_path_contains_dir(git_buf *base, const char *subdir)$/;"	f	typeref:typename:bool
git_path_contains_file	extern/libgit2/src/path.c	/^bool git_path_contains_file(git_buf *base, const char *file)$/;"	f	typeref:typename:bool
git_path_direach	extern/libgit2/src/path.c	/^int git_path_direach($/;"	f	typeref:typename:int
git_path_diriter	extern/libgit2/src/path.h	/^struct git_path_diriter$/;"	s
git_path_diriter	extern/libgit2/src/path.h	/^typedef struct git_path_diriter git_path_diriter;$/;"	t	typeref:struct:git_path_diriter
git_path_diriter_filename	extern/libgit2/src/path.c	/^int git_path_diriter_filename($/;"	f	typeref:typename:int
git_path_diriter_free	extern/libgit2/src/path.c	/^void git_path_diriter_free(git_path_diriter *diriter)$/;"	f	typeref:typename:void
git_path_diriter_fullpath	extern/libgit2/src/path.c	/^int git_path_diriter_fullpath($/;"	f	typeref:typename:int
git_path_diriter_init	extern/libgit2/src/path.c	/^int git_path_diriter_init($/;"	f	typeref:typename:int
git_path_diriter_next	extern/libgit2/src/path.c	/^int git_path_diriter_next(git_path_diriter *diriter)$/;"	f	typeref:typename:int
git_path_diriter_stat	extern/libgit2/src/path.c	/^int git_path_diriter_stat(struct stat *out, git_path_diriter *diriter)$/;"	f	typeref:typename:int
git_path_dirload	extern/libgit2/src/path.c	/^int git_path_dirload($/;"	f	typeref:typename:int
git_path_dirname	extern/libgit2/src/path.c	/^char *git_path_dirname(const char *path)$/;"	f	typeref:typename:char *
git_path_dirname_r	extern/libgit2/src/path.c	/^int git_path_dirname_r(git_buf *buffer, const char *path)$/;"	f	typeref:typename:int
git_path_does_fs_decompose_unicode	extern/libgit2/src/path.c	/^bool git_path_does_fs_decompose_unicode(const char *root)$/;"	f	typeref:typename:bool
git_path_equal_or_prefixed	extern/libgit2/src/path.h	/^GIT_INLINE(int) git_path_equal_or_prefixed($/;"	f	typeref:typename:int
git_path_exists	extern/libgit2/src/path.c	/^bool git_path_exists(const char *path)$/;"	f	typeref:typename:bool
git_path_find_dir	extern/libgit2/src/path.c	/^int git_path_find_dir(git_buf *dir, const char *path, const char *base)$/;"	f	typeref:typename:int
git_path_from_url_or_path	extern/libgit2/src/path.c	/^int git_path_from_url_or_path(git_buf *local_path_out, const char *url_or_path)$/;"	f	typeref:typename:int
git_path_fromurl	extern/libgit2/src/path.c	/^int git_path_fromurl(git_buf *local_path_out, const char *file_url)$/;"	f	typeref:typename:int
git_path_fs	extern/libgit2/include/git2/sys/path.h	/^} git_path_fs;$/;"	t	typeref:enum:__anon99f3dc0f0203
git_path_gitfile	extern/libgit2/include/git2/sys/path.h	/^} git_path_gitfile;$/;"	t	typeref:enum:__anon99f3dc0f0103
git_path_has_non_ascii	extern/libgit2/src/path.c	/^bool git_path_has_non_ascii(const char *path, size_t pathlen)$/;"	f	typeref:typename:bool
git_path_iconv	extern/libgit2/src/path.c	/^int git_path_iconv(git_path_iconv_t *ic, const char **in, size_t *inlen)$/;"	f	typeref:typename:int
git_path_iconv_clear	extern/libgit2/src/path.c	/^void git_path_iconv_clear(git_path_iconv_t *ic)$/;"	f	typeref:typename:void
git_path_iconv_init_precompose	extern/libgit2/src/path.c	/^int git_path_iconv_init_precompose(git_path_iconv_t *ic)$/;"	f	typeref:typename:int
git_path_iconv_t	extern/libgit2/src/path.h	/^} git_path_iconv_t;$/;"	t	typeref:struct:__anon7d10f0c00308
git_path_is_absolute	extern/libgit2/src/path.h	/^#define git_path_is_absolute(/;"	d
git_path_is_dirsep	extern/libgit2/src/path.h	/^#define git_path_is_dirsep(/;"	d
git_path_is_dot_or_dotdot	extern/libgit2/src/path.h	/^GIT_INLINE(int) git_path_is_dot_or_dotdot(const char *name)$/;"	f	typeref:typename:int
git_path_is_dot_or_dotdotW	extern/libgit2/src/path.h	/^GIT_INLINE(int) git_path_is_dot_or_dotdotW(const wchar_t *name)$/;"	f	typeref:typename:int
git_path_is_empty_dir	extern/libgit2/src/path.c	/^bool git_path_is_empty_dir(const char *path)$/;"	f	typeref:typename:bool
git_path_is_gitfile	extern/libgit2/src/path.c	/^extern int git_path_is_gitfile(const char *path, size_t pathlen, git_path_gitfile gitfile, git_p/;"	f	typeref:typename:int
git_path_is_local_file_url	extern/libgit2/src/path.c	/^bool git_path_is_local_file_url(const char *file_url)$/;"	f	typeref:typename:bool
git_path_is_relative	extern/libgit2/src/path.h	/^GIT_INLINE(int) git_path_is_relative(const char *p)$/;"	f	typeref:typename:int
git_path_isdir	extern/libgit2/src/path.c	/^bool git_path_isdir(const char *path)$/;"	f	typeref:typename:bool
git_path_isfile	extern/libgit2/src/path.c	/^bool git_path_isfile(const char *path)$/;"	f	typeref:typename:bool
git_path_islink	extern/libgit2/src/path.c	/^bool git_path_islink(const char *path)$/;"	f	typeref:typename:bool
git_path_isvalid	extern/libgit2/src/path.c	/^bool git_path_isvalid($/;"	f	typeref:typename:bool
git_path_join_unrooted	extern/libgit2/src/path.c	/^int git_path_join_unrooted($/;"	f	typeref:typename:int
git_path_lstat	extern/libgit2/src/path.c	/^int git_path_lstat(const char *path, struct stat *st)$/;"	f	typeref:typename:int
git_path_make_relative	extern/libgit2/src/path.c	/^int git_path_make_relative(git_buf *path, const char *parent)$/;"	f	typeref:typename:int
git_path_mkposix	extern/libgit2/src/path.h	/^#	define git_path_mkposix(/;"	d
git_path_mkposix	extern/libgit2/src/path.h	/^GIT_INLINE(void) git_path_mkposix(char *path)$/;"	f	typeref:typename:void
git_path_normalize_slashes	extern/libgit2/src/path.c	/^int git_path_normalize_slashes(git_buf *out, const char *path)$/;"	f	typeref:typename:int
git_path_prettify	extern/libgit2/src/path.c	/^int git_path_prettify(git_buf *path_out, const char *path, const char *base)$/;"	f	typeref:typename:int
git_path_prettify_dir	extern/libgit2/src/path.c	/^int git_path_prettify_dir(git_buf *path_out, const char *path, const char *base)$/;"	f	typeref:typename:int
git_path_resolve_relative	extern/libgit2/src/path.c	/^int git_path_resolve_relative(git_buf *path, size_t ceiling)$/;"	f	typeref:typename:int
git_path_root	extern/libgit2/src/path.c	/^int git_path_root(const char *path)$/;"	f	typeref:typename:int
git_path_set_error	extern/libgit2/src/path.c	/^int git_path_set_error(int errno_value, const char *path, const char *action)$/;"	f	typeref:typename:int
git_path_squash_slashes	extern/libgit2/src/path.c	/^void git_path_squash_slashes(git_buf *path)$/;"	f	typeref:typename:void
git_path_string_to_dir	extern/libgit2/src/path.c	/^void git_path_string_to_dir(char* path, size_t size)$/;"	f	typeref:typename:void
git_path_supports_symlinks	extern/libgit2/src/path.c	/^bool git_path_supports_symlinks(const char *dir)$/;"	f	typeref:typename:bool
git_path_to_dir	extern/libgit2/src/path.c	/^int git_path_to_dir(git_buf *path)$/;"	f	typeref:typename:int
git_path_topdir	extern/libgit2/src/path.c	/^const char *git_path_topdir(const char *path)$/;"	f	typeref:typename:const char *
git_path_trim_slashes	extern/libgit2/src/path.c	/^void git_path_trim_slashes(git_buf *path)$/;"	f	typeref:typename:void
git_path_validate_system_file_ownership	extern/libgit2/src/path.c	/^int git_path_validate_system_file_ownership(const char *path)$/;"	f	typeref:typename:int
git_path_walk_up	extern/libgit2/src/path.c	/^int git_path_walk_up($/;"	f	typeref:typename:int
git_pathspec	extern/libgit2/include/git2/pathspec.h	/^typedef struct git_pathspec git_pathspec;$/;"	t	typeref:struct:git_pathspec
git_pathspec	extern/libgit2/src/pathspec.h	/^struct git_pathspec {$/;"	s
git_pathspec__clear	extern/libgit2/src/pathspec.c	/^void git_pathspec__clear(git_pathspec *ps)$/;"	f	typeref:typename:void
git_pathspec__init	extern/libgit2/src/pathspec.c	/^int git_pathspec__init(git_pathspec *ps, const git_strarray *paths)$/;"	f	typeref:typename:int
git_pathspec__match	extern/libgit2/src/pathspec.c	/^bool git_pathspec__match($/;"	f	typeref:typename:bool
git_pathspec__match_at	extern/libgit2/src/pathspec.c	/^static int git_pathspec__match_at($/;"	f	typeref:typename:int	file:
git_pathspec__vfree	extern/libgit2/src/pathspec.c	/^void git_pathspec__vfree(git_vector *vspec)$/;"	f	typeref:typename:void
git_pathspec__vinit	extern/libgit2/src/pathspec.c	/^int git_pathspec__vinit($/;"	f	typeref:typename:int
git_pathspec_flag_t	extern/libgit2/include/git2/pathspec.h	/^} git_pathspec_flag_t;$/;"	t	typeref:enum:__anonba2986ec0103
git_pathspec_free	extern/libgit2/src/pathspec.c	/^void git_pathspec_free(git_pathspec *ps)$/;"	f	typeref:typename:void
git_pathspec_is_empty	extern/libgit2/src/pathspec.c	/^bool git_pathspec_is_empty(const git_strarray *pathspec)$/;"	f	typeref:typename:bool
git_pathspec_match_diff	extern/libgit2/src/pathspec.c	/^int git_pathspec_match_diff($/;"	f	typeref:typename:int
git_pathspec_match_index	extern/libgit2/src/pathspec.c	/^int git_pathspec_match_index($/;"	f	typeref:typename:int
git_pathspec_match_list	extern/libgit2/include/git2/pathspec.h	/^typedef struct git_pathspec_match_list git_pathspec_match_list;$/;"	t	typeref:struct:git_pathspec_match_list
git_pathspec_match_list	extern/libgit2/src/pathspec.h	/^struct git_pathspec_match_list {$/;"	s
git_pathspec_match_list_diff_entry	extern/libgit2/src/pathspec.c	/^const git_diff_delta *git_pathspec_match_list_diff_entry($/;"	f	typeref:typename:const git_diff_delta *
git_pathspec_match_list_entry	extern/libgit2/src/pathspec.c	/^const char *git_pathspec_match_list_entry($/;"	f	typeref:typename:const char *
git_pathspec_match_list_entrycount	extern/libgit2/src/pathspec.c	/^size_t git_pathspec_match_list_entrycount($/;"	f	typeref:typename:size_t
git_pathspec_match_list_failed_entry	extern/libgit2/src/pathspec.c	/^const char * git_pathspec_match_list_failed_entry($/;"	f	typeref:typename:const char *
git_pathspec_match_list_failed_entrycount	extern/libgit2/src/pathspec.c	/^size_t git_pathspec_match_list_failed_entrycount($/;"	f	typeref:typename:size_t
git_pathspec_match_list_free	extern/libgit2/src/pathspec.c	/^void git_pathspec_match_list_free(git_pathspec_match_list *m)$/;"	f	typeref:typename:void
git_pathspec_match_tree	extern/libgit2/src/pathspec.c	/^int git_pathspec_match_tree($/;"	f	typeref:typename:int
git_pathspec_match_workdir	extern/libgit2/src/pathspec.c	/^int git_pathspec_match_workdir($/;"	f	typeref:typename:int
git_pathspec_matches_path	extern/libgit2/src/pathspec.c	/^int git_pathspec_matches_path($/;"	f	typeref:typename:int
git_pathspec_new	extern/libgit2/src/pathspec.c	/^int git_pathspec_new(git_pathspec **out, const git_strarray *pathspec)$/;"	f	typeref:typename:int
git_pathspec_prefix	extern/libgit2/src/pathspec.c	/^char *git_pathspec_prefix(const git_strarray *pathspec)$/;"	f	typeref:typename:char *
git_pathspec_string_array_t	extern/libgit2/src/pathspec.h	/^typedef git_array_t(char *) git_pathspec_string_array_t;$/;"	t
git_pkt	extern/libgit2/src/transports/smart.h	/^} git_pkt;$/;"	t	typeref:struct:__anoncc6f59690208
git_pkt_ack	extern/libgit2/src/transports/smart.h	/^} git_pkt_ack;$/;"	t	typeref:struct:__anoncc6f59690408
git_pkt_buffer_done	extern/libgit2/src/transports/smart_pkt.c	/^int git_pkt_buffer_done(git_buf *buf)$/;"	f	typeref:typename:int
git_pkt_buffer_flush	extern/libgit2/src/transports/smart_pkt.c	/^int git_pkt_buffer_flush(git_buf *buf)$/;"	f	typeref:typename:int
git_pkt_buffer_have	extern/libgit2/src/transports/smart_pkt.c	/^int git_pkt_buffer_have(git_oid *oid, git_buf *buf)$/;"	f	typeref:typename:int
git_pkt_buffer_wants	extern/libgit2/src/transports/smart_pkt.c	/^int git_pkt_buffer_wants($/;"	f	typeref:typename:int
git_pkt_cmd	extern/libgit2/src/transports/smart.h	/^struct git_pkt_cmd {$/;"	s
git_pkt_comment	extern/libgit2/src/transports/smart.h	/^} git_pkt_comment;$/;"	t	typeref:struct:__anoncc6f59690508
git_pkt_data	extern/libgit2/src/transports/smart.h	/^} git_pkt_data;$/;"	t	typeref:struct:__anoncc6f59690608
git_pkt_err	extern/libgit2/src/transports/smart.h	/^} git_pkt_err;$/;"	t	typeref:struct:__anoncc6f59690708
git_pkt_free	extern/libgit2/src/transports/smart_pkt.c	/^void git_pkt_free(git_pkt *pkt)$/;"	f	typeref:typename:void
git_pkt_ng	extern/libgit2/src/transports/smart.h	/^} git_pkt_ng;$/;"	t	typeref:struct:__anoncc6f59690908
git_pkt_ok	extern/libgit2/src/transports/smart.h	/^} git_pkt_ok;$/;"	t	typeref:struct:__anoncc6f59690808
git_pkt_parse_line	extern/libgit2/src/transports/smart_pkt.c	/^int git_pkt_parse_line($/;"	f	typeref:typename:int
git_pkt_progress	extern/libgit2/src/transports/smart.h	/^typedef git_pkt_data git_pkt_progress;$/;"	t	typeref:typename:git_pkt_data
git_pkt_ref	extern/libgit2/src/transports/smart.h	/^} git_pkt_ref;$/;"	t	typeref:struct:__anoncc6f59690308
git_pkt_type	extern/libgit2/src/transports/smart.h	/^} git_pkt_type;$/;"	t	typeref:enum:__anoncc6f59690103
git_pkt_unpack	extern/libgit2/src/transports/smart.h	/^} git_pkt_unpack;$/;"	t	typeref:struct:__anoncc6f59690a08
git_pobject	extern/libgit2/src/pack-objects.h	/^typedef struct git_pobject {$/;"	s
git_pobject	extern/libgit2/src/pack-objects.h	/^} git_pobject;$/;"	t	typeref:struct:git_pobject
git_pool	extern/libgit2/src/pool.h	/^} git_pool;$/;"	t	typeref:struct:__anon7e0b9aed0108
git_pool	extern/libgit2/src/pool.h	/^} git_pool;$/;"	t	typeref:struct:__anon7e0b9aed0208
git_pool__open_pages	extern/libgit2/src/pool.c	/^uint32_t git_pool__open_pages(git_pool *pool)$/;"	f	typeref:typename:uint32_t
git_pool__ptr_cmp	extern/libgit2/src/pool.c	/^static int git_pool__ptr_cmp(const void * a, const void * b)$/;"	f	typeref:typename:int	file:
git_pool__ptr_in_pool	extern/libgit2/src/pool.c	/^bool git_pool__ptr_in_pool(git_pool *pool, void *ptr)$/;"	f	typeref:typename:bool
git_pool__system_page_size	extern/libgit2/src/pool.c	/^size_t git_pool__system_page_size(void)$/;"	f	typeref:typename:size_t
git_pool_clear	extern/libgit2/src/pool.c	/^void git_pool_clear(git_pool *pool)$/;"	f	typeref:typename:void
git_pool_init	extern/libgit2/src/pool.c	/^void git_pool_init(git_pool *pool, size_t item_size)$/;"	f	typeref:typename:void
git_pool_malloc	extern/libgit2/src/pool.c	/^void *git_pool_malloc(git_pool *pool, size_t items)$/;"	f	typeref:typename:void *
git_pool_mallocz	extern/libgit2/src/pool.c	/^void *git_pool_mallocz(git_pool *pool, size_t items)$/;"	f	typeref:typename:void *
git_pool_page	extern/libgit2/src/pool.c	/^struct git_pool_page {$/;"	s	file:
git_pool_page	extern/libgit2/src/pool.h	/^typedef struct git_pool_page git_pool_page;$/;"	t	typeref:struct:git_pool_page
git_pool_strcat	extern/libgit2/src/pool.c	/^char *git_pool_strcat(git_pool *pool, const char *a, const char *b)$/;"	f	typeref:typename:char *
git_pool_strdup	extern/libgit2/src/pool.c	/^char *git_pool_strdup(git_pool *pool, const char *str)$/;"	f	typeref:typename:char *
git_pool_strdup_safe	extern/libgit2/src/pool.c	/^char *git_pool_strdup_safe(git_pool *pool, const char *str)$/;"	f	typeref:typename:char *
git_pool_strndup	extern/libgit2/src/pool.c	/^char *git_pool_strndup(git_pool *pool, const char *str, size_t n)$/;"	f	typeref:typename:char *
git_pool_swap	extern/libgit2/src/pool.c	/^void git_pool_swap(git_pool *a, git_pool *b)$/;"	f	typeref:typename:void
git_pqueue	extern/libgit2/src/pqueue.h	/^typedef git_vector git_pqueue;$/;"	t	typeref:typename:git_vector
git_pqueue_clear	extern/libgit2/src/pqueue.h	/^#define git_pqueue_clear /;"	d
git_pqueue_free	extern/libgit2/src/pqueue.h	/^#define git_pqueue_free /;"	d
git_pqueue_get	extern/libgit2/src/pqueue.h	/^#define git_pqueue_get /;"	d
git_pqueue_init	extern/libgit2/src/pqueue.c	/^int git_pqueue_init($/;"	f	typeref:typename:int
git_pqueue_insert	extern/libgit2/src/pqueue.c	/^int git_pqueue_insert(git_pqueue *pq, void *item)$/;"	f	typeref:typename:int
git_pqueue_pop	extern/libgit2/src/pqueue.c	/^void *git_pqueue_pop(git_pqueue *pq)$/;"	f	typeref:typename:void *
git_pqueue_reverse	extern/libgit2/src/pqueue.h	/^#define git_pqueue_reverse /;"	d
git_pqueue_size	extern/libgit2/src/pqueue.h	/^#define git_pqueue_size /;"	d
git_proto_stream	extern/libgit2/src/transports/git.c	/^} git_proto_stream;$/;"	t	typeref:struct:__anon936e62c10108	file:
git_proto_stream_alloc	extern/libgit2/src/transports/git.c	/^static int git_proto_stream_alloc($/;"	f	typeref:typename:int	file:
git_proto_stream_free	extern/libgit2/src/transports/git.c	/^static void git_proto_stream_free(git_smart_subtransport_stream *stream)$/;"	f	typeref:typename:void	file:
git_proto_stream_read	extern/libgit2/src/transports/git.c	/^static int git_proto_stream_read($/;"	f	typeref:typename:int	file:
git_proto_stream_write	extern/libgit2/src/transports/git.c	/^static int git_proto_stream_write($/;"	f	typeref:typename:int	file:
git_proxy_init_options	extern/libgit2/src/proxy.c	/^int git_proxy_init_options(git_proxy_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_proxy_options	extern/libgit2/include/git2/proxy.h	/^} git_proxy_options;$/;"	t	typeref:struct:__anon63af67960208
git_proxy_options_clear	extern/libgit2/src/proxy.c	/^void git_proxy_options_clear(git_proxy_options *opts)$/;"	f	typeref:typename:void
git_proxy_options_dup	extern/libgit2/src/proxy.c	/^int git_proxy_options_dup(git_proxy_options *tgt, const git_proxy_options *src)$/;"	f	typeref:typename:int
git_proxy_options_init	extern/libgit2/src/proxy.c	/^int git_proxy_options_init(git_proxy_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_proxy_t	extern/libgit2/include/git2/proxy.h	/^} git_proxy_t;$/;"	t	typeref:enum:__anon63af67960103
git_push	extern/libgit2/include/git2/types.h	/^typedef struct git_push git_push;$/;"	t	typeref:struct:git_push
git_push	extern/libgit2/src/push.h	/^struct git_push {$/;"	s
git_push_add_refspec	extern/libgit2/src/push.c	/^int git_push_add_refspec(git_push *push, const char *refspec)$/;"	f	typeref:typename:int
git_push_finish	extern/libgit2/src/push.c	/^int git_push_finish(git_push *push, const git_remote_callbacks *callbacks)$/;"	f	typeref:typename:int
git_push_free	extern/libgit2/src/push.c	/^void git_push_free(git_push *push)$/;"	f	typeref:typename:void
git_push_init_options	extern/libgit2/src/push.c	/^int git_push_init_options(git_push_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_push_negotiation	extern/libgit2/include/git2/remote.h	/^typedef int GIT_CALLBACK(git_push_negotiation)(const git_push_update **updates, size_t len, void/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_push_update ** updates,size_t len,void * payload)
git_push_new	extern/libgit2/src/push.c	/^int git_push_new(git_push **out, git_remote *remote)$/;"	f	typeref:typename:int
git_push_options	extern/libgit2/include/git2/remote.h	/^} git_push_options;$/;"	t	typeref:struct:__anonc41be5800608
git_push_options_init	extern/libgit2/src/push.c	/^int git_push_options_init(git_push_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_push_set_options	extern/libgit2/src/push.c	/^int git_push_set_options(git_push *push, const git_push_options *opts)$/;"	f	typeref:typename:int
git_push_status_foreach	extern/libgit2/src/push.c	/^int git_push_status_foreach(git_push *push,$/;"	f	typeref:typename:int
git_push_status_free	extern/libgit2/src/push.c	/^void git_push_status_free(push_status *status)$/;"	f	typeref:typename:void
git_push_transfer_progress	extern/libgit2/include/git2/deprecated.h	/^typedef git_push_transfer_progress_cb git_push_transfer_progress;$/;"	t	typeref:typename:git_push_transfer_progress_cb
git_push_transfer_progress_cb	extern/libgit2/include/git2/remote.h	/^typedef int GIT_CALLBACK(git_push_transfer_progress_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(unsigned int current,unsigned int total,size_t bytes,void * payload)
git_push_update	extern/libgit2/include/git2/remote.h	/^} git_push_update;$/;"	t	typeref:struct:__anonc41be5800208
git_push_update_reference_cb	extern/libgit2/include/git2/remote.h	/^typedef int GIT_CALLBACK(git_push_update_reference_cb)(const char *refname, const char *status, /;"	t	typeref:typename:int GIT_CALLBACK ()(const char * refname,const char * status,void * data)
git_push_update_tips	extern/libgit2/src/push.c	/^int git_push_update_tips(git_push *push, const git_remote_callbacks *callbacks)$/;"	f	typeref:typename:int
git_rawobj	extern/libgit2/src/odb.h	/^} git_rawobj;$/;"	t	typeref:struct:__anonfbf77e280108
git_reader	extern/libgit2/src/reader.h	/^struct git_reader {$/;"	s
git_reader	extern/libgit2/src/reader.h	/^typedef struct git_reader git_reader;$/;"	t	typeref:struct:git_reader
git_reader_for_index	extern/libgit2/src/reader.c	/^int git_reader_for_index($/;"	f	typeref:typename:int
git_reader_for_tree	extern/libgit2/src/reader.c	/^int git_reader_for_tree(git_reader **out, git_tree *tree)$/;"	f	typeref:typename:int
git_reader_for_workdir	extern/libgit2/src/reader.c	/^int git_reader_for_workdir($/;"	f	typeref:typename:int
git_reader_free	extern/libgit2/src/reader.c	/^void git_reader_free(git_reader *reader)$/;"	f	typeref:typename:void
git_reader_read	extern/libgit2/src/reader.c	/^int git_reader_read($/;"	f	typeref:typename:int
git_rebase	extern/libgit2/include/git2/types.h	/^typedef struct git_rebase git_rebase;$/;"	t	typeref:struct:git_rebase
git_rebase	extern/libgit2/src/rebase.c	/^struct git_rebase {$/;"	s	file:
git_rebase_abort	extern/libgit2/src/rebase.c	/^int git_rebase_abort(git_rebase *rebase)$/;"	f	typeref:typename:int
git_rebase_commit	extern/libgit2/src/rebase.c	/^int git_rebase_commit($/;"	f	typeref:typename:int
git_rebase_finish	extern/libgit2/src/rebase.c	/^int git_rebase_finish($/;"	f	typeref:typename:int
git_rebase_free	extern/libgit2/src/rebase.c	/^void git_rebase_free(git_rebase *rebase)$/;"	f	typeref:typename:void
git_rebase_init	extern/libgit2/src/rebase.c	/^int git_rebase_init($/;"	f	typeref:typename:int
git_rebase_init_options	extern/libgit2/src/rebase.c	/^int git_rebase_init_options(git_rebase_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_rebase_inmemory_index	extern/libgit2/src/rebase.c	/^int git_rebase_inmemory_index($/;"	f	typeref:typename:int
git_rebase_next	extern/libgit2/src/rebase.c	/^int git_rebase_next($/;"	f	typeref:typename:int
git_rebase_onto_id	extern/libgit2/src/rebase.c	/^const git_oid *git_rebase_onto_id(git_rebase *rebase) {$/;"	f	typeref:typename:const git_oid *
git_rebase_onto_name	extern/libgit2/src/rebase.c	/^const char *git_rebase_onto_name(git_rebase *rebase) {$/;"	f	typeref:typename:const char *
git_rebase_open	extern/libgit2/src/rebase.c	/^int git_rebase_open($/;"	f	typeref:typename:int
git_rebase_operation	extern/libgit2/include/git2/rebase.h	/^} git_rebase_operation;$/;"	t	typeref:struct:__anona97543260308
git_rebase_operation_byindex	extern/libgit2/src/rebase.c	/^git_rebase_operation *git_rebase_operation_byindex(git_rebase *rebase, size_t idx)$/;"	f	typeref:typename:git_rebase_operation *
git_rebase_operation_current	extern/libgit2/src/rebase.c	/^size_t git_rebase_operation_current(git_rebase *rebase)$/;"	f	typeref:typename:size_t
git_rebase_operation_entrycount	extern/libgit2/src/rebase.c	/^size_t git_rebase_operation_entrycount(git_rebase *rebase)$/;"	f	typeref:typename:size_t
git_rebase_operation_t	extern/libgit2/include/git2/rebase.h	/^} git_rebase_operation_t;$/;"	t	typeref:enum:__anona97543260203
git_rebase_options	extern/libgit2/include/git2/rebase.h	/^} git_rebase_options;$/;"	t	typeref:struct:__anona97543260108
git_rebase_options_init	extern/libgit2/src/rebase.c	/^int git_rebase_options_init(git_rebase_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_rebase_orig_head_id	extern/libgit2/src/rebase.c	/^const git_oid *git_rebase_orig_head_id(git_rebase *rebase) {$/;"	f	typeref:typename:const git_oid *
git_rebase_orig_head_name	extern/libgit2/src/rebase.c	/^const char *git_rebase_orig_head_name(git_rebase *rebase) {$/;"	f	typeref:typename:const char *
git_rebase_type_t	extern/libgit2/src/rebase.c	/^} git_rebase_type_t;$/;"	t	typeref:enum:__anone72706600103	file:
git_ref_t	extern/libgit2/include/git2/deprecated.h	/^#define git_ref_t /;"	d
git_refcache	extern/libgit2/src/refdb_fs.h	/^} git_refcache;$/;"	t	typeref:struct:__anonbd02e20e0108
git_refcount	extern/libgit2/src/util.h	/^} git_refcount;$/;"	t	typeref:struct:__anon8a0c96510108
git_refcount_freeptr	extern/libgit2/src/util.h	/^typedef void (*git_refcount_freeptr)(void *r);$/;"	t	typeref:typename:void (*)(void * r)
git_refdb	extern/libgit2/include/git2/types.h	/^typedef struct git_refdb git_refdb;$/;"	t	typeref:struct:git_refdb
git_refdb	extern/libgit2/src/refdb.h	/^struct git_refdb {$/;"	s
git_refdb__free	extern/libgit2/src/refdb.c	/^void git_refdb__free(git_refdb *db)$/;"	f	typeref:typename:void
git_refdb_backend	extern/libgit2/include/git2/sys/refdb_backend.h	/^struct git_refdb_backend {$/;"	s
git_refdb_backend	extern/libgit2/include/git2/types.h	/^typedef struct git_refdb_backend git_refdb_backend;$/;"	t	typeref:struct:git_refdb_backend
git_refdb_backend_fs	extern/libgit2/src/refdb_fs.c	/^int git_refdb_backend_fs($/;"	f	typeref:typename:int
git_refdb_compress	extern/libgit2/src/refdb.c	/^int git_refdb_compress(git_refdb *db)$/;"	f	typeref:typename:int
git_refdb_delete	extern/libgit2/src/refdb.c	/^int git_refdb_delete(struct git_refdb *db, const char *ref_name, const git_oid *old_id, const ch/;"	f	typeref:typename:int
git_refdb_ensure_log	extern/libgit2/src/refdb.c	/^int git_refdb_ensure_log(git_refdb *db, const char *refname)$/;"	f	typeref:typename:int
git_refdb_exists	extern/libgit2/src/refdb.c	/^int git_refdb_exists(int *exists, git_refdb *refdb, const char *ref_name)$/;"	f	typeref:typename:int
git_refdb_free	extern/libgit2/src/refdb.c	/^void git_refdb_free(git_refdb *db)$/;"	f	typeref:typename:void
git_refdb_has_log	extern/libgit2/src/refdb.c	/^int git_refdb_has_log(git_refdb *db, const char *refname)$/;"	f	typeref:typename:int
git_refdb_init_backend	extern/libgit2/src/refdb.c	/^int git_refdb_init_backend(git_refdb_backend *backend, unsigned int version)$/;"	f	typeref:typename:int
git_refdb_iterator	extern/libgit2/src/refdb.c	/^int git_refdb_iterator(git_reference_iterator **out, git_refdb *db, const char *glob)$/;"	f	typeref:typename:int
git_refdb_iterator_free	extern/libgit2/src/refdb.c	/^void git_refdb_iterator_free(git_reference_iterator *iter)$/;"	f	typeref:typename:void
git_refdb_iterator_next	extern/libgit2/src/refdb.c	/^int git_refdb_iterator_next(git_reference **out, git_reference_iterator *iter)$/;"	f	typeref:typename:int
git_refdb_iterator_next_name	extern/libgit2/src/refdb.c	/^int git_refdb_iterator_next_name(const char **out, git_reference_iterator *iter)$/;"	f	typeref:typename:int
git_refdb_lock	extern/libgit2/src/refdb.c	/^int git_refdb_lock(void **payload, git_refdb *db, const char *refname)$/;"	f	typeref:typename:int
git_refdb_lookup	extern/libgit2/src/refdb.c	/^int git_refdb_lookup(git_reference **out, git_refdb *db, const char *ref_name)$/;"	f	typeref:typename:int
git_refdb_new	extern/libgit2/src/refdb.c	/^int git_refdb_new(git_refdb **out, git_repository *repo)$/;"	f	typeref:typename:int
git_refdb_open	extern/libgit2/src/refdb.c	/^int git_refdb_open(git_refdb **out, git_repository *repo)$/;"	f	typeref:typename:int
git_refdb_reflog_read	extern/libgit2/src/refdb.c	/^int git_refdb_reflog_read(git_reflog **out, git_refdb *db,  const char *name)$/;"	f	typeref:typename:int
git_refdb_rename	extern/libgit2/src/refdb.c	/^int git_refdb_rename($/;"	f	typeref:typename:int
git_refdb_set_backend	extern/libgit2/src/refdb.c	/^int git_refdb_set_backend(git_refdb *db, git_refdb_backend *backend)$/;"	f	typeref:typename:int
git_refdb_unlock	extern/libgit2/src/refdb.c	/^int git_refdb_unlock(git_refdb *db, void *payload, int success, int update_reflog, const git_ref/;"	f	typeref:typename:int
git_refdb_write	extern/libgit2/src/refdb.c	/^int git_refdb_write(git_refdb *db, git_reference *ref, int force, const git_signature *who, cons/;"	f	typeref:typename:int
git_reference	extern/libgit2/include/git2/types.h	/^typedef struct git_reference git_reference;$/;"	t	typeref:struct:git_reference
git_reference	extern/libgit2/src/refs.h	/^struct git_reference {$/;"	s
git_reference__alloc	extern/libgit2/src/refs.c	/^git_reference *git_reference__alloc($/;"	f	typeref:typename:git_reference *
git_reference__alloc_symbolic	extern/libgit2/src/refs.c	/^git_reference *git_reference__alloc_symbolic($/;"	f	typeref:typename:git_reference *
git_reference__enable_symbolic_ref_target_validation	extern/libgit2/src/refs.c	/^bool git_reference__enable_symbolic_ref_target_validation = true;$/;"	v	typeref:typename:bool
git_reference__is_branch	extern/libgit2/src/refs.c	/^int git_reference__is_branch(const char *ref_name)$/;"	f	typeref:typename:int
git_reference__is_note	extern/libgit2/src/refs.c	/^int git_reference__is_note(const char *ref_name)$/;"	f	typeref:typename:int
git_reference__is_remote	extern/libgit2/src/refs.c	/^int git_reference__is_remote(const char *ref_name)$/;"	f	typeref:typename:int
git_reference__is_tag	extern/libgit2/src/refs.c	/^int git_reference__is_tag(const char *ref_name)$/;"	f	typeref:typename:int
git_reference__is_unborn_head	extern/libgit2/src/refs.c	/^int git_reference__is_unborn_head(bool *unborn, const git_reference *ref, git_repository *repo)$/;"	f	typeref:typename:int
git_reference__is_valid_name	extern/libgit2/src/refs.c	/^int git_reference__is_valid_name(const char *refname, unsigned int flags)$/;"	f	typeref:typename:int
git_reference__log_signature	extern/libgit2/src/refs.c	/^int git_reference__log_signature(git_signature **out, git_repository *repo)$/;"	f	typeref:typename:int
git_reference__normalize_name	extern/libgit2/src/refs.c	/^int git_reference__normalize_name($/;"	f	typeref:typename:int
git_reference__read_head	extern/libgit2/src/refs.c	/^int git_reference__read_head($/;"	f	typeref:typename:int
git_reference__set_name	extern/libgit2/src/refs.c	/^git_reference *git_reference__set_name($/;"	f	typeref:typename:git_reference *
git_reference__shorthand	extern/libgit2/src/refs.c	/^const char *git_reference__shorthand(const char *name)$/;"	f	typeref:typename:const char *
git_reference__update_for_commit	extern/libgit2/src/refs.c	/^int git_reference__update_for_commit($/;"	f	typeref:typename:int
git_reference__update_terminal	extern/libgit2/src/refs.c	/^int git_reference__update_terminal($/;"	f	typeref:typename:int
git_reference_cmp	extern/libgit2/src/refs.c	/^int git_reference_cmp($/;"	f	typeref:typename:int
git_reference_create	extern/libgit2/src/refs.c	/^int git_reference_create($/;"	f	typeref:typename:int
git_reference_create_matching	extern/libgit2/src/refs.c	/^int git_reference_create_matching($/;"	f	typeref:typename:int
git_reference_delete	extern/libgit2/src/refs.c	/^int git_reference_delete(git_reference *ref)$/;"	f	typeref:typename:int
git_reference_dup	extern/libgit2/src/refs.c	/^int git_reference_dup(git_reference **dest, git_reference *source)$/;"	f	typeref:typename:int
git_reference_dwim	extern/libgit2/src/refs.c	/^int git_reference_dwim(git_reference **out, git_repository *repo, const char *refname)$/;"	f	typeref:typename:int
git_reference_ensure_log	extern/libgit2/src/refs.c	/^int git_reference_ensure_log(git_repository *repo, const char *refname)$/;"	f	typeref:typename:int
git_reference_foreach	extern/libgit2/src/refs.c	/^int git_reference_foreach($/;"	f	typeref:typename:int
git_reference_foreach_cb	extern/libgit2/include/git2/refs.h	/^typedef int GIT_CALLBACK(git_reference_foreach_cb)(git_reference *reference, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_reference * reference,void * payload)
git_reference_foreach_glob	extern/libgit2/src/refs.c	/^int git_reference_foreach_glob($/;"	f	typeref:typename:int
git_reference_foreach_name	extern/libgit2/src/refs.c	/^int git_reference_foreach_name($/;"	f	typeref:typename:int
git_reference_foreach_name_cb	extern/libgit2/include/git2/refs.h	/^typedef int GIT_CALLBACK(git_reference_foreach_name_cb)(const char *name, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * name,void * payload)
git_reference_format_t	extern/libgit2/include/git2/refs.h	/^} git_reference_format_t;$/;"	t	typeref:enum:__anon92623e040103
git_reference_free	extern/libgit2/src/refs.c	/^void git_reference_free(git_reference *reference)$/;"	f	typeref:typename:void
git_reference_has_log	extern/libgit2/src/refs.c	/^int git_reference_has_log(git_repository *repo, const char *refname)$/;"	f	typeref:typename:int
git_reference_is_branch	extern/libgit2/src/refs.c	/^int git_reference_is_branch(const git_reference *ref)$/;"	f	typeref:typename:int
git_reference_is_note	extern/libgit2/src/refs.c	/^int git_reference_is_note(const git_reference *ref)$/;"	f	typeref:typename:int
git_reference_is_remote	extern/libgit2/src/refs.c	/^int git_reference_is_remote(const git_reference *ref)$/;"	f	typeref:typename:int
git_reference_is_tag	extern/libgit2/src/refs.c	/^int git_reference_is_tag(const git_reference *ref)$/;"	f	typeref:typename:int
git_reference_is_valid_name	extern/libgit2/src/refs.c	/^int git_reference_is_valid_name(const char *refname)$/;"	f	typeref:typename:int
git_reference_iterator	extern/libgit2/include/git2/sys/refdb_backend.h	/^struct git_reference_iterator {$/;"	s
git_reference_iterator	extern/libgit2/include/git2/types.h	/^typedef struct git_reference_iterator  git_reference_iterator;$/;"	t	typeref:struct:git_reference_iterator
git_reference_iterator_free	extern/libgit2/src/refs.c	/^void git_reference_iterator_free(git_reference_iterator *iter)$/;"	f	typeref:typename:void
git_reference_iterator_glob_new	extern/libgit2/src/refs.c	/^int git_reference_iterator_glob_new($/;"	f	typeref:typename:int
git_reference_iterator_new	extern/libgit2/src/refs.c	/^int git_reference_iterator_new(git_reference_iterator **out, git_repository *repo)$/;"	f	typeref:typename:int
git_reference_list	extern/libgit2/src/refs.c	/^int git_reference_list($/;"	f	typeref:typename:int
git_reference_lookup	extern/libgit2/src/refs.c	/^int git_reference_lookup(git_reference **ref_out,$/;"	f	typeref:typename:int
git_reference_lookup_resolved	extern/libgit2/src/refs.c	/^int git_reference_lookup_resolved($/;"	f	typeref:typename:int
git_reference_name	extern/libgit2/src/refs.c	/^const char *git_reference_name(const git_reference *ref)$/;"	f	typeref:typename:const char *
git_reference_name_to_id	extern/libgit2/src/refs.c	/^int git_reference_name_to_id($/;"	f	typeref:typename:int
git_reference_next	extern/libgit2/src/refs.c	/^int git_reference_next(git_reference **out, git_reference_iterator *iter)$/;"	f	typeref:typename:int
git_reference_next_name	extern/libgit2/src/refs.c	/^int git_reference_next_name(const char **out, git_reference_iterator *iter)$/;"	f	typeref:typename:int
git_reference_normalize_name	extern/libgit2/src/refs.c	/^int git_reference_normalize_name($/;"	f	typeref:typename:int
git_reference_normalize_t	extern/libgit2/include/git2/deprecated.h	/^#define git_reference_normalize_t /;"	d
git_reference_owner	extern/libgit2/src/refs.c	/^git_repository *git_reference_owner(const git_reference *ref)$/;"	f	typeref:typename:git_repository *
git_reference_peel	extern/libgit2/src/refs.c	/^int git_reference_peel($/;"	f	typeref:typename:int
git_reference_remove	extern/libgit2/src/refs.c	/^int git_reference_remove(git_repository *repo, const char *name)$/;"	f	typeref:typename:int
git_reference_rename	extern/libgit2/src/refs.c	/^int git_reference_rename($/;"	f	typeref:typename:int
git_reference_resolve	extern/libgit2/src/refs.c	/^int git_reference_resolve(git_reference **ref_out, const git_reference *ref)$/;"	f	typeref:typename:int
git_reference_set_target	extern/libgit2/src/refs.c	/^int git_reference_set_target($/;"	f	typeref:typename:int
git_reference_shorthand	extern/libgit2/src/refs.c	/^const char *git_reference_shorthand(const git_reference *ref)$/;"	f	typeref:typename:const char *
git_reference_symbolic_create	extern/libgit2/src/refs.c	/^int git_reference_symbolic_create($/;"	f	typeref:typename:int
git_reference_symbolic_create_matching	extern/libgit2/src/refs.c	/^int git_reference_symbolic_create_matching($/;"	f	typeref:typename:int
git_reference_symbolic_set_target	extern/libgit2/src/refs.c	/^int git_reference_symbolic_set_target($/;"	f	typeref:typename:int
git_reference_symbolic_target	extern/libgit2/src/refs.c	/^const char *git_reference_symbolic_target(const git_reference *ref)$/;"	f	typeref:typename:const char *
git_reference_t	extern/libgit2/include/git2/types.h	/^} git_reference_t;$/;"	t	typeref:enum:__anona7f40ac90203
git_reference_target	extern/libgit2/src/refs.c	/^const git_oid *git_reference_target(const git_reference *ref)$/;"	f	typeref:typename:const git_oid *
git_reference_target_peel	extern/libgit2/src/refs.c	/^const git_oid *git_reference_target_peel(const git_reference *ref)$/;"	f	typeref:typename:const git_oid *
git_reference_type	extern/libgit2/src/refs.c	/^git_reference_t git_reference_type(const git_reference *ref)$/;"	f	typeref:typename:git_reference_t
git_reflog	extern/libgit2/include/git2/types.h	/^typedef struct git_reflog git_reflog;$/;"	t	typeref:struct:git_reflog
git_reflog	extern/libgit2/src/reflog.h	/^struct git_reflog {$/;"	s
git_reflog_append	extern/libgit2/src/reflog.c	/^int git_reflog_append(git_reflog *reflog, const git_oid *new_oid, const git_signature *committer/;"	f	typeref:typename:int
git_reflog_delete	extern/libgit2/src/reflog.c	/^int git_reflog_delete(git_repository *repo, const char *name)$/;"	f	typeref:typename:int
git_reflog_drop	extern/libgit2/src/reflog.c	/^int git_reflog_drop(git_reflog *reflog, size_t idx, int rewrite_previous_entry)$/;"	f	typeref:typename:int
git_reflog_entry	extern/libgit2/include/git2/types.h	/^typedef struct git_reflog_entry git_reflog_entry;$/;"	t	typeref:struct:git_reflog_entry
git_reflog_entry	extern/libgit2/src/reflog.h	/^struct git_reflog_entry {$/;"	s
git_reflog_entry__alloc	extern/libgit2/src/reflog.c	/^git_reflog_entry *git_reflog_entry__alloc(void)$/;"	f	typeref:typename:git_reflog_entry *
git_reflog_entry__free	extern/libgit2/src/reflog.c	/^void git_reflog_entry__free(git_reflog_entry *entry)$/;"	f	typeref:typename:void
git_reflog_entry_byindex	extern/libgit2/src/reflog.c	/^const git_reflog_entry * git_reflog_entry_byindex(const git_reflog *reflog, size_t idx)$/;"	f	typeref:typename:const git_reflog_entry *
git_reflog_entry_committer	extern/libgit2/src/reflog.c	/^const git_signature * git_reflog_entry_committer(const git_reflog_entry *entry)$/;"	f	typeref:typename:const git_signature *
git_reflog_entry_id_new	extern/libgit2/src/reflog.c	/^const git_oid * git_reflog_entry_id_new(const git_reflog_entry *entry)$/;"	f	typeref:typename:const git_oid *
git_reflog_entry_id_old	extern/libgit2/src/reflog.c	/^const git_oid * git_reflog_entry_id_old(const git_reflog_entry *entry)$/;"	f	typeref:typename:const git_oid *
git_reflog_entry_message	extern/libgit2/src/reflog.c	/^const char * git_reflog_entry_message(const git_reflog_entry *entry)$/;"	f	typeref:typename:const char *
git_reflog_entrycount	extern/libgit2/src/reflog.c	/^size_t git_reflog_entrycount(git_reflog *reflog)$/;"	f	typeref:typename:size_t
git_reflog_free	extern/libgit2/src/reflog.c	/^void git_reflog_free(git_reflog *reflog)$/;"	f	typeref:typename:void
git_reflog_read	extern/libgit2/src/reflog.c	/^int git_reflog_read(git_reflog **reflog, git_repository *repo,  const char *name)$/;"	f	typeref:typename:int
git_reflog_rename	extern/libgit2/src/reflog.c	/^int git_reflog_rename(git_repository *repo, const char *old_name, const char *new_name)$/;"	f	typeref:typename:int
git_reflog_write	extern/libgit2/src/reflog.c	/^int git_reflog_write(git_reflog *reflog)$/;"	f	typeref:typename:int
git_refname_t	extern/libgit2/src/refs.h	/^typedef char git_refname_t[GIT_REFNAME_MAX];$/;"	t	typeref:typename:char[GIT_REFNAME_MAX]
git_refspec	extern/libgit2/include/git2/types.h	/^typedef struct git_refspec git_refspec;$/;"	t	typeref:struct:git_refspec
git_refspec	extern/libgit2/src/refspec.h	/^struct git_refspec {$/;"	s
git_refspec__dispose	extern/libgit2/src/refspec.c	/^void git_refspec__dispose(git_refspec *refspec)$/;"	f	typeref:typename:void
git_refspec__dwim_one	extern/libgit2/src/refspec.c	/^int git_refspec__dwim_one(git_vector *out, git_refspec *spec, git_vector *refs)$/;"	f	typeref:typename:int
git_refspec__parse	extern/libgit2/src/refspec.c	/^int git_refspec__parse(git_refspec *refspec, const char *input, bool is_fetch)$/;"	f	typeref:typename:int
git_refspec__serialize	extern/libgit2/src/refspec.c	/^int git_refspec__serialize(git_buf *out, const git_refspec *refspec)$/;"	f	typeref:typename:int
git_refspec_direction	extern/libgit2/src/refspec.c	/^git_direction git_refspec_direction(const git_refspec *spec)$/;"	f	typeref:typename:git_direction
git_refspec_dst	extern/libgit2/src/refspec.c	/^const char *git_refspec_dst(const git_refspec *refspec)$/;"	f	typeref:typename:const char *
git_refspec_dst_matches	extern/libgit2/src/refspec.c	/^int git_refspec_dst_matches(const git_refspec *refspec, const char *refname)$/;"	f	typeref:typename:int
git_refspec_force	extern/libgit2/src/refspec.c	/^int git_refspec_force(const git_refspec *refspec)$/;"	f	typeref:typename:int
git_refspec_free	extern/libgit2/src/refspec.c	/^void git_refspec_free(git_refspec *refspec)$/;"	f	typeref:typename:void
git_refspec_is_wildcard	extern/libgit2/src/refspec.c	/^int git_refspec_is_wildcard(const git_refspec *spec)$/;"	f	typeref:typename:int
git_refspec_parse	extern/libgit2/src/refspec.c	/^int git_refspec_parse(git_refspec **out_refspec, const char *input, int is_fetch)$/;"	f	typeref:typename:int
git_refspec_rtransform	extern/libgit2/src/refspec.c	/^int git_refspec_rtransform(git_buf *out, const git_refspec *spec, const char *name)$/;"	f	typeref:typename:int
git_refspec_src	extern/libgit2/src/refspec.c	/^const char *git_refspec_src(const git_refspec *refspec)$/;"	f	typeref:typename:const char *
git_refspec_src_matches	extern/libgit2/src/refspec.c	/^int git_refspec_src_matches(const git_refspec *refspec, const char *refname)$/;"	f	typeref:typename:int
git_refspec_string	extern/libgit2/src/refspec.c	/^const char *git_refspec_string(const git_refspec *refspec)$/;"	f	typeref:typename:const char *
git_refspec_transform	extern/libgit2/src/refspec.c	/^int git_refspec_transform(git_buf *out, const git_refspec *spec, const char *name)$/;"	f	typeref:typename:int
git_remote	extern/libgit2/include/git2/types.h	/^typedef struct git_remote git_remote;$/;"	t	typeref:struct:git_remote
git_remote	extern/libgit2/src/remote.h	/^struct git_remote {$/;"	s
git_remote__connect	extern/libgit2/src/remote.c	/^int git_remote__connect(git_remote *remote, git_direction direction, const git_remote_callbacks /;"	f	typeref:typename:int
git_remote__get_http_proxy	extern/libgit2/src/remote.c	/^int git_remote__get_http_proxy(git_remote *remote, bool use_ssl, char **proxy_url)$/;"	f	typeref:typename:int
git_remote__matching_dst_refspec	extern/libgit2/src/remote.c	/^git_refspec *git_remote__matching_dst_refspec(git_remote *remote, const char *refname)$/;"	f	typeref:typename:git_refspec *
git_remote__matching_refspec	extern/libgit2/src/remote.c	/^git_refspec *git_remote__matching_refspec(git_remote *remote, const char *refname)$/;"	f	typeref:typename:git_refspec *
git_remote__urlfordirection	extern/libgit2/src/remote.c	/^int git_remote__urlfordirection(git_buf *url_out, struct git_remote *remote, int direction, cons/;"	f	typeref:typename:int
git_remote_add_fetch	extern/libgit2/src/remote.c	/^int git_remote_add_fetch(git_repository *repo, const char *remote, const char *refspec)$/;"	f	typeref:typename:int
git_remote_add_push	extern/libgit2/src/remote.c	/^int git_remote_add_push(git_repository *repo, const char *remote, const char *refspec)$/;"	f	typeref:typename:int
git_remote_autotag	extern/libgit2/src/remote.c	/^git_remote_autotag_option_t git_remote_autotag(const git_remote *remote)$/;"	f	typeref:typename:git_remote_autotag_option_t
git_remote_autotag_option_t	extern/libgit2/include/git2/remote.h	/^} git_remote_autotag_option_t;$/;"	t	typeref:enum:__anonc41be5800403
git_remote_callbacks	extern/libgit2/include/git2/remote.h	/^struct git_remote_callbacks {$/;"	s
git_remote_callbacks	extern/libgit2/include/git2/types.h	/^typedef struct git_remote_callbacks git_remote_callbacks;$/;"	t	typeref:struct:git_remote_callbacks
git_remote_completion_t	extern/libgit2/include/git2/remote.h	/^typedef enum git_remote_completion_t {$/;"	g
git_remote_completion_t	extern/libgit2/include/git2/remote.h	/^} git_remote_completion_t;$/;"	t	typeref:enum:git_remote_completion_t
git_remote_completion_type	extern/libgit2/include/git2/deprecated.h	/^#define git_remote_completion_type /;"	d
git_remote_connect	extern/libgit2/src/remote.c	/^int git_remote_connect(git_remote *remote, git_direction direction, const git_remote_callbacks */;"	f	typeref:typename:int
git_remote_connected	extern/libgit2/src/remote.c	/^int git_remote_connected(const git_remote *remote)$/;"	f	typeref:typename:int
git_remote_connection_opts	extern/libgit2/src/remote.h	/^typedef struct git_remote_connection_opts {$/;"	s
git_remote_connection_opts	extern/libgit2/src/remote.h	/^} git_remote_connection_opts;$/;"	t	typeref:struct:git_remote_connection_opts
git_remote_create	extern/libgit2/src/remote.c	/^int git_remote_create(git_remote **out, git_repository *repo, const char *name, const char *url)$/;"	f	typeref:typename:int
git_remote_create_anonymous	extern/libgit2/src/remote.c	/^int git_remote_create_anonymous(git_remote **out, git_repository *repo, const char *url)$/;"	f	typeref:typename:int
git_remote_create_cb	extern/libgit2/include/git2/clone.h	/^typedef int GIT_CALLBACK(git_remote_create_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_remote ** out,git_repository * repo,const char * name,const char * url,void * payload)
git_remote_create_detached	extern/libgit2/src/remote.c	/^int git_remote_create_detached(git_remote **out, const char *url)$/;"	f	typeref:typename:int
git_remote_create_flags	extern/libgit2/include/git2/remote.h	/^} git_remote_create_flags;$/;"	t	typeref:enum:__anonc41be5800103
git_remote_create_init_options	extern/libgit2/src/remote.c	/^int git_remote_create_init_options(git_remote_create_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_remote_create_options	extern/libgit2/include/git2/remote.h	/^typedef struct git_remote_create_options {$/;"	s
git_remote_create_options	extern/libgit2/include/git2/remote.h	/^} git_remote_create_options;$/;"	t	typeref:struct:git_remote_create_options
git_remote_create_options_init	extern/libgit2/src/remote.c	/^int git_remote_create_options_init(git_remote_create_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_remote_create_with_fetchspec	extern/libgit2/src/remote.c	/^int git_remote_create_with_fetchspec(git_remote **out, git_repository *repo, const char *name, c/;"	f	typeref:typename:int
git_remote_create_with_opts	extern/libgit2/src/remote.c	/^int git_remote_create_with_opts(git_remote **out, const char *url, const git_remote_create_optio/;"	f	typeref:typename:int
git_remote_default_branch	extern/libgit2/src/remote.c	/^int git_remote_default_branch(git_buf *out, git_remote *remote)$/;"	f	typeref:typename:int
git_remote_delete	extern/libgit2/src/remote.c	/^int git_remote_delete(git_repository *repo, const char *name)$/;"	f	typeref:typename:int
git_remote_disconnect	extern/libgit2/src/remote.c	/^void git_remote_disconnect(git_remote *remote)$/;"	f	typeref:typename:void
git_remote_download	extern/libgit2/src/remote.c	/^int git_remote_download(git_remote *remote, const git_strarray *refspecs, const git_fetch_option/;"	f	typeref:typename:int
git_remote_dup	extern/libgit2/src/remote.c	/^int git_remote_dup(git_remote **dest, git_remote *source)$/;"	f	typeref:typename:int
git_remote_fetch	extern/libgit2/src/remote.c	/^int git_remote_fetch($/;"	f	typeref:typename:int
git_remote_free	extern/libgit2/src/remote.c	/^void git_remote_free(git_remote *remote)$/;"	f	typeref:typename:void
git_remote_get_fetch_refspecs	extern/libgit2/src/remote.c	/^int git_remote_get_fetch_refspecs(git_strarray *array, const git_remote *remote)$/;"	f	typeref:typename:int
git_remote_get_push_refspecs	extern/libgit2/src/remote.c	/^int git_remote_get_push_refspecs(git_strarray *array, const git_remote *remote)$/;"	f	typeref:typename:int
git_remote_get_refspec	extern/libgit2/src/remote.c	/^const git_refspec *git_remote_get_refspec(const git_remote *remote, size_t n)$/;"	f	typeref:typename:const git_refspec *
git_remote_head	extern/libgit2/include/git2/net.h	/^struct git_remote_head {$/;"	s
git_remote_head	extern/libgit2/include/git2/types.h	/^typedef struct git_remote_head git_remote_head;$/;"	t	typeref:struct:git_remote_head
git_remote_init_callbacks	extern/libgit2/src/remote.c	/^int git_remote_init_callbacks(git_remote_callbacks *opts, unsigned int version)$/;"	f	typeref:typename:int
git_remote_is_valid_name	extern/libgit2/src/remote.c	/^int git_remote_is_valid_name($/;"	f	typeref:typename:int
git_remote_list	extern/libgit2/src/remote.c	/^int git_remote_list(git_strarray *remotes_list, git_repository *repo)$/;"	f	typeref:typename:int
git_remote_lookup	extern/libgit2/src/remote.c	/^int git_remote_lookup(git_remote **out, git_repository *repo, const char *name)$/;"	f	typeref:typename:int
git_remote_ls	extern/libgit2/src/remote.c	/^int git_remote_ls(const git_remote_head ***out, size_t *size, git_remote *remote)$/;"	f	typeref:typename:int
git_remote_name	extern/libgit2/src/remote.c	/^const char *git_remote_name(const git_remote *remote)$/;"	f	typeref:typename:const char *
git_remote_owner	extern/libgit2/src/remote.c	/^git_repository *git_remote_owner(const git_remote *remote)$/;"	f	typeref:typename:git_repository *
git_remote_prune	extern/libgit2/src/remote.c	/^int git_remote_prune(git_remote *remote, const git_remote_callbacks *callbacks)$/;"	f	typeref:typename:int
git_remote_prune_refs	extern/libgit2/src/remote.c	/^int git_remote_prune_refs(const git_remote *remote)$/;"	f	typeref:typename:int
git_remote_push	extern/libgit2/src/remote.c	/^int git_remote_push(git_remote *remote, const git_strarray *refspecs, const git_push_options *op/;"	f	typeref:typename:int
git_remote_pushurl	extern/libgit2/src/remote.c	/^const char *git_remote_pushurl(const git_remote *remote)$/;"	f	typeref:typename:const char *
git_remote_refspec_count	extern/libgit2/src/remote.c	/^size_t git_remote_refspec_count(const git_remote *remote)$/;"	f	typeref:typename:size_t
git_remote_rename	extern/libgit2/src/remote.c	/^int git_remote_rename(git_strarray *out, git_repository *repo, const char *name, const char *new/;"	f	typeref:typename:int
git_remote_set_autotag	extern/libgit2/src/remote.c	/^int git_remote_set_autotag(git_repository *repo, const char *remote, git_remote_autotag_option_t/;"	f	typeref:typename:int
git_remote_set_pushurl	extern/libgit2/src/remote.c	/^int git_remote_set_pushurl(git_repository *repo, const char *remote, const char* url)$/;"	f	typeref:typename:int
git_remote_set_url	extern/libgit2/src/remote.c	/^int git_remote_set_url(git_repository *repo, const char *remote, const char *url)$/;"	f	typeref:typename:int
git_remote_stats	extern/libgit2/src/remote.c	/^const git_indexer_progress *git_remote_stats(git_remote *remote)$/;"	f	typeref:typename:const git_indexer_progress *
git_remote_stop	extern/libgit2/src/remote.c	/^void git_remote_stop(git_remote *remote)$/;"	f	typeref:typename:void
git_remote_update_tips	extern/libgit2/src/remote.c	/^int git_remote_update_tips($/;"	f	typeref:typename:int
git_remote_upload	extern/libgit2/src/remote.c	/^int git_remote_upload(git_remote *remote, const git_strarray *refspecs, const git_push_options */;"	f	typeref:typename:int
git_remote_url	extern/libgit2/src/remote.c	/^const char *git_remote_url(const git_remote *remote)$/;"	f	typeref:typename:const char *
git_remote_write_fetchhead	extern/libgit2/src/remote.c	/^static int git_remote_write_fetchhead(git_remote *remote, git_refspec *spec, git_vector *update_/;"	f	typeref:typename:int	file:
git_repository	extern/libgit2/include/git2/types.h	/^typedef struct git_repository git_repository;$/;"	t	typeref:struct:git_repository
git_repository	extern/libgit2/src/repository.h	/^struct git_repository {$/;"	s
git_repository__cleanup	extern/libgit2/src/repository.c	/^void git_repository__cleanup(git_repository *repo)$/;"	f	typeref:typename:void
git_repository__cleanup_files	extern/libgit2/src/repository.c	/^int git_repository__cleanup_files($/;"	f	typeref:typename:int
git_repository__configmap_lookup	extern/libgit2/src/config_cache.c	/^int git_repository__configmap_lookup(int *out, git_repository *repo, git_configmap_item item)$/;"	f	typeref:typename:int
git_repository__configmap_lookup_cache_clear	extern/libgit2/src/config_cache.c	/^void git_repository__configmap_lookup_cache_clear(git_repository *repo)$/;"	f	typeref:typename:void
git_repository__ensure_not_bare	extern/libgit2/src/repository.h	/^GIT_INLINE(int) git_repository__ensure_not_bare($/;"	f	typeref:typename:int
git_repository__fsync_gitdir	extern/libgit2/src/repository.c	/^bool git_repository__fsync_gitdir = false;$/;"	v	typeref:typename:bool
git_repository__reserved_names	extern/libgit2/src/repository.c	/^bool git_repository__reserved_names($/;"	f	typeref:typename:bool
git_repository__reserved_names_posix	extern/libgit2/src/repository.c	/^git_buf git_repository__reserved_names_posix[] = {$/;"	v	typeref:typename:git_buf[]
git_repository__reserved_names_posix_len	extern/libgit2/src/repository.c	/^size_t git_repository__reserved_names_posix_len = 1;$/;"	v	typeref:typename:size_t
git_repository__reserved_names_win32	extern/libgit2/src/repository.c	/^git_buf git_repository__reserved_names_win32[] = {$/;"	v	typeref:typename:git_buf[]
git_repository__reserved_names_win32_len	extern/libgit2/src/repository.c	/^size_t git_repository__reserved_names_win32_len = 2;$/;"	v	typeref:typename:size_t
git_repository__set_orig_head	extern/libgit2/src/repository.c	/^int git_repository__set_orig_head(git_repository *repo, const git_oid *orig_head)$/;"	f	typeref:typename:int
git_repository_attr_cache	extern/libgit2/src/repository.h	/^GIT_INLINE(git_attr_cache *) git_repository_attr_cache(git_repository *repo)$/;"	f	typeref:typename:git_attr_cache *
git_repository_commondir	extern/libgit2/src/repository.c	/^const char *git_repository_commondir(const git_repository *repo)$/;"	f	typeref:typename:const char *
git_repository_config	extern/libgit2/src/repository.c	/^int git_repository_config(git_config **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_config__weakptr	extern/libgit2/src/repository.c	/^int git_repository_config__weakptr(git_config **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_config_snapshot	extern/libgit2/src/repository.c	/^int git_repository_config_snapshot(git_config **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_create_cb	extern/libgit2/include/git2/clone.h	/^typedef int GIT_CALLBACK(git_repository_create_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_repository ** out,const char * path,int bare,void * payload)
git_repository_create_head	extern/libgit2/src/repository.c	/^int git_repository_create_head(const char *git_dir, const char *ref_name)$/;"	f	typeref:typename:int
git_repository_detach_head	extern/libgit2/src/repository.c	/^int git_repository_detach_head(git_repository* repo)$/;"	f	typeref:typename:int
git_repository_discover	extern/libgit2/src/repository.c	/^int git_repository_discover($/;"	f	typeref:typename:int
git_repository_driver_registry	extern/libgit2/src/diff_driver.c	/^static git_diff_driver_registry *git_repository_driver_registry($/;"	f	typeref:typename:git_diff_driver_registry *	file:
git_repository_fetchhead_foreach	extern/libgit2/src/fetchhead.c	/^int git_repository_fetchhead_foreach(git_repository *repo,$/;"	f	typeref:typename:int
git_repository_fetchhead_foreach_cb	extern/libgit2/include/git2/repository.h	/^typedef int GIT_CALLBACK(git_repository_fetchhead_foreach_cb)(const char *ref_name,$/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * ref_name,const char * remote_url,const git_oid * oid,unsigned int is_merge,void * payload)
git_repository_foreach_head	extern/libgit2/src/repository.c	/^int git_repository_foreach_head(git_repository *repo,$/;"	f	typeref:typename:int
git_repository_foreach_head_cb	extern/libgit2/src/repository.h	/^typedef int (*git_repository_foreach_head_cb)(git_repository *repo, const char *path, void *payl/;"	t	typeref:typename:int (*)(git_repository * repo,const char * path,void * payload)
git_repository_free	extern/libgit2/src/repository.c	/^void git_repository_free(git_repository *repo)$/;"	f	typeref:typename:void
git_repository_get_namespace	extern/libgit2/src/repository.c	/^const char *git_repository_get_namespace(git_repository *repo)$/;"	f	typeref:typename:const char *
git_repository_hashfile	extern/libgit2/src/repository.c	/^int git_repository_hashfile($/;"	f	typeref:typename:int
git_repository_head	extern/libgit2/src/repository.c	/^int git_repository_head(git_reference **head_out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_head_detached	extern/libgit2/src/repository.c	/^int git_repository_head_detached(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_head_detached_for_worktree	extern/libgit2/src/repository.c	/^int git_repository_head_detached_for_worktree(git_repository *repo, const char *name)$/;"	f	typeref:typename:int
git_repository_head_for_worktree	extern/libgit2/src/repository.c	/^int git_repository_head_for_worktree(git_reference **out, git_repository *repo, const char *name/;"	f	typeref:typename:int
git_repository_head_tree	extern/libgit2/src/repository.c	/^int git_repository_head_tree(git_tree **tree, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_head_unborn	extern/libgit2/src/repository.c	/^int git_repository_head_unborn(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_ident	extern/libgit2/src/repository.c	/^int git_repository_ident(const char **name, const char **email, const git_repository *repo)$/;"	f	typeref:typename:int
git_repository_index	extern/libgit2/src/repository.c	/^int git_repository_index(git_index **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_index__weakptr	extern/libgit2/src/repository.c	/^int git_repository_index__weakptr(git_index **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_init	extern/libgit2/src/repository.c	/^int git_repository_init($/;"	f	typeref:typename:int
git_repository_init_ext	extern/libgit2/src/repository.c	/^int git_repository_init_ext($/;"	f	typeref:typename:int
git_repository_init_flag_t	extern/libgit2/include/git2/repository.h	/^} git_repository_init_flag_t;$/;"	t	typeref:enum:__anon8a61cad40203
git_repository_init_init_options	extern/libgit2/src/repository.c	/^int git_repository_init_init_options($/;"	f	typeref:typename:int
git_repository_init_mode_t	extern/libgit2/include/git2/repository.h	/^} git_repository_init_mode_t;$/;"	t	typeref:enum:__anon8a61cad40303
git_repository_init_options	extern/libgit2/include/git2/repository.h	/^} git_repository_init_options;$/;"	t	typeref:struct:__anon8a61cad40408
git_repository_init_options_init	extern/libgit2/src/repository.c	/^int git_repository_init_options_init($/;"	f	typeref:typename:int
git_repository_is_bare	extern/libgit2/src/repository.c	/^int git_repository_is_bare(const git_repository *repo)$/;"	f	typeref:typename:int
git_repository_is_empty	extern/libgit2/src/repository.c	/^int git_repository_is_empty(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_is_shallow	extern/libgit2/src/repository.c	/^int git_repository_is_shallow(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_is_worktree	extern/libgit2/src/repository.c	/^int git_repository_is_worktree(const git_repository *repo)$/;"	f	typeref:typename:int
git_repository_item_path	extern/libgit2/src/repository.c	/^int git_repository_item_path(git_buf *out, const git_repository *repo, git_repository_item_t ite/;"	f	typeref:typename:int
git_repository_item_t	extern/libgit2/include/git2/repository.h	/^} git_repository_item_t;$/;"	t	typeref:enum:__anon8a61cad40503
git_repository_mergehead_foreach	extern/libgit2/src/merge.c	/^int git_repository_mergehead_foreach($/;"	f	typeref:typename:int
git_repository_mergehead_foreach_cb	extern/libgit2/include/git2/repository.h	/^typedef int GIT_CALLBACK(git_repository_mergehead_foreach_cb)(const git_oid *oid,$/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_oid * oid,void * payload)
git_repository_message	extern/libgit2/src/repository.c	/^int git_repository_message(git_buf *out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_message_remove	extern/libgit2/src/repository.c	/^int git_repository_message_remove(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_new	extern/libgit2/src/repository.c	/^int git_repository_new(git_repository **out)$/;"	f	typeref:typename:int
git_repository_odb	extern/libgit2/src/repository.c	/^int git_repository_odb(git_odb **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_odb__weakptr	extern/libgit2/src/repository.c	/^int git_repository_odb__weakptr(git_odb **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_open	extern/libgit2/src/repository.c	/^int git_repository_open(git_repository **repo_out, const char *path)$/;"	f	typeref:typename:int
git_repository_open_bare	extern/libgit2/src/repository.c	/^int git_repository_open_bare($/;"	f	typeref:typename:int
git_repository_open_ext	extern/libgit2/src/repository.c	/^int git_repository_open_ext($/;"	f	typeref:typename:int
git_repository_open_flag_t	extern/libgit2/include/git2/repository.h	/^} git_repository_open_flag_t;$/;"	t	typeref:enum:__anon8a61cad40103
git_repository_open_from_worktree	extern/libgit2/src/repository.c	/^int git_repository_open_from_worktree(git_repository **repo_out, git_worktree *wt)$/;"	f	typeref:typename:int
git_repository_path	extern/libgit2/src/repository.c	/^const char *git_repository_path(const git_repository *repo)$/;"	f	typeref:typename:const char *
git_repository_refdb	extern/libgit2/src/repository.c	/^int git_repository_refdb(git_refdb **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_refdb__weakptr	extern/libgit2/src/repository.c	/^int git_repository_refdb__weakptr(git_refdb **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_reinit_filesystem	extern/libgit2/src/repository.c	/^int git_repository_reinit_filesystem(git_repository *repo, int recurse)$/;"	f	typeref:typename:int
git_repository_set_bare	extern/libgit2/src/repository.c	/^int git_repository_set_bare(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_set_config	extern/libgit2/src/repository.c	/^void git_repository_set_config(git_repository *repo, git_config *config)$/;"	f	typeref:typename:void
git_repository_set_head	extern/libgit2/src/repository.c	/^int git_repository_set_head($/;"	f	typeref:typename:int
git_repository_set_head_detached	extern/libgit2/src/repository.c	/^int git_repository_set_head_detached($/;"	f	typeref:typename:int
git_repository_set_head_detached_from_annotated	extern/libgit2/src/repository.c	/^int git_repository_set_head_detached_from_annotated($/;"	f	typeref:typename:int
git_repository_set_ident	extern/libgit2/src/repository.c	/^int git_repository_set_ident(git_repository *repo, const char *name, const char *email)$/;"	f	typeref:typename:int
git_repository_set_index	extern/libgit2/src/repository.c	/^void git_repository_set_index(git_repository *repo, git_index *index)$/;"	f	typeref:typename:void
git_repository_set_namespace	extern/libgit2/src/repository.c	/^int git_repository_set_namespace(git_repository *repo, const char *namespace)$/;"	f	typeref:typename:int
git_repository_set_odb	extern/libgit2/src/repository.c	/^void git_repository_set_odb(git_repository *repo, git_odb *odb)$/;"	f	typeref:typename:void
git_repository_set_refdb	extern/libgit2/src/repository.c	/^void git_repository_set_refdb(git_repository *repo, git_refdb *refdb)$/;"	f	typeref:typename:void
git_repository_set_workdir	extern/libgit2/src/repository.c	/^int git_repository_set_workdir($/;"	f	typeref:typename:int
git_repository_state	extern/libgit2/src/repository.c	/^int git_repository_state(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_state_cleanup	extern/libgit2/src/repository.c	/^int git_repository_state_cleanup(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_state_t	extern/libgit2/include/git2/repository.h	/^} git_repository_state_t;$/;"	t	typeref:enum:__anon8a61cad40603
git_repository_submodule_cache_all	extern/libgit2/src/repository.c	/^int git_repository_submodule_cache_all(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_submodule_cache_clear	extern/libgit2/src/repository.c	/^int git_repository_submodule_cache_clear(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_workdir	extern/libgit2/src/repository.c	/^const char *git_repository_workdir(const git_repository *repo)$/;"	f	typeref:typename:const char *
git_repository_wrap_odb	extern/libgit2/src/repository.c	/^int git_repository_wrap_odb(git_repository **repo_out, git_odb *odb)$/;"	f	typeref:typename:int
git_reset	extern/libgit2/src/reset.c	/^int git_reset($/;"	f	typeref:typename:int
git_reset_default	extern/libgit2/src/reset.c	/^int git_reset_default($/;"	f	typeref:typename:int
git_reset_from_annotated	extern/libgit2/src/reset.c	/^int git_reset_from_annotated($/;"	f	typeref:typename:int
git_reset_t	extern/libgit2/include/git2/reset.h	/^} git_reset_t;$/;"	t	typeref:enum:__anondf8eb2770103
git_revert	extern/libgit2/src/revert.c	/^int git_revert($/;"	f	typeref:typename:int
git_revert_commit	extern/libgit2/src/revert.c	/^int git_revert_commit($/;"	f	typeref:typename:int
git_revert_init_options	extern/libgit2/src/revert.c	/^int git_revert_init_options(git_revert_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_revert_options	extern/libgit2/include/git2/revert.h	/^} git_revert_options;$/;"	t	typeref:struct:__anond864852c0108
git_revert_options_init	extern/libgit2/src/revert.c	/^int git_revert_options_init(git_revert_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_revparse	extern/libgit2/src/revparse.c	/^int git_revparse($/;"	f	typeref:typename:int
git_revparse_ext	extern/libgit2/src/revparse.c	/^int git_revparse_ext($/;"	f	typeref:typename:int
git_revparse_mode_t	extern/libgit2/include/git2/revparse.h	/^} git_revparse_mode_t;$/;"	t	typeref:enum:__anonaab5087c0103
git_revparse_single	extern/libgit2/src/revparse.c	/^int git_revparse_single(git_object **out, git_repository *repo, const char *spec)$/;"	f	typeref:typename:int
git_revspec	extern/libgit2/include/git2/revparse.h	/^} git_revspec;$/;"	t	typeref:struct:__anonaab5087c0208
git_revwalk	extern/libgit2/include/git2/types.h	/^typedef struct git_revwalk git_revwalk;$/;"	t	typeref:struct:git_revwalk
git_revwalk	extern/libgit2/src/revwalk.h	/^struct git_revwalk {$/;"	s
git_revwalk__commit_lookup	extern/libgit2/src/revwalk.c	/^git_commit_list_node *git_revwalk__commit_lookup($/;"	f	typeref:typename:git_commit_list_node *
git_revwalk__push_commit	extern/libgit2/src/revwalk.c	/^int git_revwalk__push_commit(git_revwalk *walk, const git_oid *oid, const git_revwalk__push_opti/;"	f	typeref:typename:int
git_revwalk__push_glob	extern/libgit2/src/revwalk.c	/^int git_revwalk__push_glob(git_revwalk *walk, const char *glob, const git_revwalk__push_options /;"	f	typeref:typename:int
git_revwalk__push_options	extern/libgit2/src/revwalk.h	/^} git_revwalk__push_options;$/;"	t	typeref:struct:__anon01a529ef0108
git_revwalk__push_ref	extern/libgit2/src/revwalk.c	/^int git_revwalk__push_ref(git_revwalk *walk, const char *refname, const git_revwalk__push_option/;"	f	typeref:typename:int
git_revwalk_add_hide_cb	extern/libgit2/src/revwalk.c	/^int git_revwalk_add_hide_cb($/;"	f	typeref:typename:int
git_revwalk_free	extern/libgit2/src/revwalk.c	/^void git_revwalk_free(git_revwalk *walk)$/;"	f	typeref:typename:void
git_revwalk_hide	extern/libgit2/src/revwalk.c	/^int git_revwalk_hide(git_revwalk *walk, const git_oid *oid)$/;"	f	typeref:typename:int
git_revwalk_hide_cb	extern/libgit2/include/git2/revwalk.h	/^typedef int GIT_CALLBACK(git_revwalk_hide_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_oid * commit_id,void * payload)
git_revwalk_hide_glob	extern/libgit2/src/revwalk.c	/^int git_revwalk_hide_glob(git_revwalk *walk, const char *glob)$/;"	f	typeref:typename:int
git_revwalk_hide_head	extern/libgit2/src/revwalk.c	/^int git_revwalk_hide_head(git_revwalk *walk)$/;"	f	typeref:typename:int
git_revwalk_hide_ref	extern/libgit2/src/revwalk.c	/^int git_revwalk_hide_ref(git_revwalk *walk, const char *refname)$/;"	f	typeref:typename:int
git_revwalk_new	extern/libgit2/src/revwalk.c	/^int git_revwalk_new(git_revwalk **revwalk_out, git_repository *repo)$/;"	f	typeref:typename:int
git_revwalk_next	extern/libgit2/src/revwalk.c	/^int git_revwalk_next(git_oid *oid, git_revwalk *walk)$/;"	f	typeref:typename:int
git_revwalk_push	extern/libgit2/src/revwalk.c	/^int git_revwalk_push(git_revwalk *walk, const git_oid *oid)$/;"	f	typeref:typename:int
git_revwalk_push_glob	extern/libgit2/src/revwalk.c	/^int git_revwalk_push_glob(git_revwalk *walk, const char *glob)$/;"	f	typeref:typename:int
git_revwalk_push_head	extern/libgit2/src/revwalk.c	/^int git_revwalk_push_head(git_revwalk *walk)$/;"	f	typeref:typename:int
git_revwalk_push_range	extern/libgit2/src/revwalk.c	/^int git_revwalk_push_range(git_revwalk *walk, const char *range)$/;"	f	typeref:typename:int
git_revwalk_push_ref	extern/libgit2/src/revwalk.c	/^int git_revwalk_push_ref(git_revwalk *walk, const char *refname)$/;"	f	typeref:typename:int
git_revwalk_repository	extern/libgit2/src/revwalk.c	/^git_repository *git_revwalk_repository(git_revwalk *walk)$/;"	f	typeref:typename:git_repository *
git_revwalk_reset	extern/libgit2/src/revwalk.c	/^void git_revwalk_reset(git_revwalk *walk)$/;"	f	typeref:typename:void
git_revwalk_simplify_first_parent	extern/libgit2/src/revwalk.c	/^void git_revwalk_simplify_first_parent(git_revwalk *walk)$/;"	f	typeref:typename:void
git_revwalk_sorting	extern/libgit2/src/revwalk.c	/^void git_revwalk_sorting(git_revwalk *walk, unsigned int sort_mode)$/;"	f	typeref:typename:void
git_rwlock	extern/libgit2/src/thread-utils.h	/^#define git_rwlock /;"	d
git_rwlock	extern/libgit2/src/unix/pthread.h	/^#define git_rwlock /;"	d
git_rwlock	extern/libgit2/src/win32/thread.h	/^} git_rwlock;$/;"	t	typeref:struct:__anon7162bc2d0308
git_rwlock_free	extern/libgit2/src/thread-utils.h	/^#define git_rwlock_free(/;"	d
git_rwlock_free	extern/libgit2/src/unix/pthread.h	/^#define git_rwlock_free(/;"	d
git_rwlock_free	extern/libgit2/src/win32/thread.c	/^int git_rwlock_free(git_rwlock *lock)$/;"	f	typeref:typename:int
git_rwlock_init	extern/libgit2/src/thread-utils.h	/^#define git_rwlock_init(/;"	d
git_rwlock_init	extern/libgit2/src/unix/pthread.h	/^#define git_rwlock_init(/;"	d
git_rwlock_init	extern/libgit2/src/win32/thread.c	/^int git_rwlock_init(git_rwlock *GIT_RESTRICT lock)$/;"	f	typeref:typename:int
git_rwlock_rdlock	extern/libgit2/src/thread-utils.h	/^#define git_rwlock_rdlock(/;"	d
git_rwlock_rdlock	extern/libgit2/src/unix/pthread.h	/^#define git_rwlock_rdlock(/;"	d
git_rwlock_rdlock	extern/libgit2/src/win32/thread.c	/^int git_rwlock_rdlock(git_rwlock *lock)$/;"	f	typeref:typename:int
git_rwlock_rdunlock	extern/libgit2/src/thread-utils.h	/^#define git_rwlock_rdunlock(/;"	d
git_rwlock_rdunlock	extern/libgit2/src/unix/pthread.h	/^#define git_rwlock_rdunlock(/;"	d
git_rwlock_rdunlock	extern/libgit2/src/win32/thread.c	/^int git_rwlock_rdunlock(git_rwlock *lock)$/;"	f	typeref:typename:int
git_rwlock_wrlock	extern/libgit2/src/thread-utils.h	/^#define git_rwlock_wrlock(/;"	d
git_rwlock_wrlock	extern/libgit2/src/unix/pthread.h	/^#define git_rwlock_wrlock(/;"	d
git_rwlock_wrlock	extern/libgit2/src/win32/thread.c	/^int git_rwlock_wrlock(git_rwlock *lock)$/;"	f	typeref:typename:int
git_rwlock_wrunlock	extern/libgit2/src/thread-utils.h	/^#define git_rwlock_wrunlock(/;"	d
git_rwlock_wrunlock	extern/libgit2/src/unix/pthread.h	/^#define git_rwlock_wrunlock(/;"	d
git_rwlock_wrunlock	extern/libgit2/src/win32/thread.c	/^int git_rwlock_wrunlock(git_rwlock *lock)$/;"	f	typeref:typename:int
git_signature	extern/libgit2/include/git2/types.h	/^typedef struct git_signature {$/;"	s
git_signature	extern/libgit2/include/git2/types.h	/^} git_signature;$/;"	t	typeref:struct:git_signature
git_signature__equal	extern/libgit2/src/signature.c	/^bool git_signature__equal(const git_signature *one, const git_signature *two)$/;"	f	typeref:typename:bool
git_signature__parse	extern/libgit2/src/signature.c	/^int git_signature__parse(git_signature *sig, const char **buffer_out,$/;"	f	typeref:typename:int
git_signature__pdup	extern/libgit2/src/signature.c	/^int git_signature__pdup(git_signature **dest, const git_signature *source, git_pool *pool)$/;"	f	typeref:typename:int
git_signature__writebuf	extern/libgit2/src/signature.c	/^void git_signature__writebuf(git_buf *buf, const char *header, const git_signature *sig)$/;"	f	typeref:typename:void
git_signature_default	extern/libgit2/src/signature.c	/^int git_signature_default(git_signature **out, git_repository *repo)$/;"	f	typeref:typename:int
git_signature_dup	extern/libgit2/src/signature.c	/^int git_signature_dup(git_signature **dest, const git_signature *source)$/;"	f	typeref:typename:int
git_signature_free	extern/libgit2/src/signature.c	/^void git_signature_free(git_signature *sig)$/;"	f	typeref:typename:void
git_signature_from_buffer	extern/libgit2/src/signature.c	/^int git_signature_from_buffer(git_signature **out, const char *buf)$/;"	f	typeref:typename:int
git_signature_new	extern/libgit2/src/signature.c	/^int git_signature_new(git_signature **sig_out, const char *name, const char *email, git_time_t t/;"	f	typeref:typename:int
git_signature_now	extern/libgit2/src/signature.c	/^int git_signature_now(git_signature **sig_out, const char *name, const char *email)$/;"	f	typeref:typename:int
git_smart__cancel	extern/libgit2/src/transports/smart.c	/^static void git_smart__cancel(git_transport *transport)$/;"	f	typeref:typename:void	file:
git_smart__close	extern/libgit2/src/transports/smart.c	/^static int git_smart__close(git_transport *transport)$/;"	f	typeref:typename:int	file:
git_smart__connect	extern/libgit2/src/transports/smart.c	/^static int git_smart__connect($/;"	f	typeref:typename:int	file:
git_smart__detect_caps	extern/libgit2/src/transports/smart_protocol.c	/^int git_smart__detect_caps(git_pkt_ref *pkt, transport_smart_caps *caps, git_vector *symrefs)$/;"	f	typeref:typename:int
git_smart__download_pack	extern/libgit2/src/transports/smart_protocol.c	/^int git_smart__download_pack($/;"	f	typeref:typename:int
git_smart__free	extern/libgit2/src/transports/smart.c	/^static void git_smart__free(git_transport *transport)$/;"	f	typeref:typename:void	file:
git_smart__get_push_stream	extern/libgit2/src/transports/smart.c	/^int git_smart__get_push_stream(transport_smart *t, git_smart_subtransport_stream **stream)$/;"	f	typeref:typename:int
git_smart__is_connected	extern/libgit2/src/transports/smart.c	/^static int git_smart__is_connected(git_transport *transport)$/;"	f	typeref:typename:int	file:
git_smart__ls	extern/libgit2/src/transports/smart.c	/^static int git_smart__ls(const git_remote_head ***out, size_t *size, git_transport *transport)$/;"	f	typeref:typename:int	file:
git_smart__negotiate_fetch	extern/libgit2/src/transports/smart_protocol.c	/^int git_smart__negotiate_fetch(git_transport *transport, git_repository *repo, const git_remote_/;"	f	typeref:typename:int
git_smart__negotiation_step	extern/libgit2/src/transports/smart.c	/^int git_smart__negotiation_step(git_transport *transport, void *data, size_t len)$/;"	f	typeref:typename:int
git_smart__ofs_delta_enabled	extern/libgit2/src/transports/smart_protocol.c	/^bool git_smart__ofs_delta_enabled = true;$/;"	v	typeref:typename:bool
git_smart__push	extern/libgit2/src/transports/smart_protocol.c	/^int git_smart__push(git_transport *transport, git_push *push, const git_remote_callbacks *cbs)$/;"	f	typeref:typename:int
git_smart__read_flags	extern/libgit2/src/transports/smart.c	/^static int git_smart__read_flags(git_transport *transport, int *flags)$/;"	f	typeref:typename:int	file:
git_smart__recv_cb	extern/libgit2/src/transports/smart.c	/^static int git_smart__recv_cb(gitno_buffer *buf)$/;"	f	typeref:typename:int	file:
git_smart__reset_stream	extern/libgit2/src/transports/smart.c	/^GIT_INLINE(int) git_smart__reset_stream(transport_smart *t, bool close_subtransport)$/;"	f	typeref:typename:int
git_smart__set_callbacks	extern/libgit2/src/transports/smart.c	/^static int git_smart__set_callbacks($/;"	f	typeref:typename:int	file:
git_smart__set_custom_headers	extern/libgit2/src/transports/smart.c	/^static int git_smart__set_custom_headers($/;"	f	typeref:typename:int	file:
git_smart__store_refs	extern/libgit2/src/transports/smart_protocol.c	/^int git_smart__store_refs(transport_smart *t, int flushes)$/;"	f	typeref:typename:int
git_smart__update_heads	extern/libgit2/src/transports/smart.c	/^int git_smart__update_heads(transport_smart *t, git_vector *symrefs)$/;"	f	typeref:typename:int
git_smart_service_t	extern/libgit2/include/git2/sys/transport.h	/^} git_smart_service_t;$/;"	t	typeref:enum:__anon34648bcf0203
git_smart_subtransport	extern/libgit2/include/git2/sys/transport.h	/^struct git_smart_subtransport {$/;"	s
git_smart_subtransport	extern/libgit2/include/git2/sys/transport.h	/^typedef struct git_smart_subtransport git_smart_subtransport;$/;"	t	typeref:struct:git_smart_subtransport
git_smart_subtransport_cb	extern/libgit2/include/git2/sys/transport.h	/^typedef int GIT_CALLBACK(git_smart_subtransport_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_smart_subtransport ** out,git_transport * owner,void * param)
git_smart_subtransport_definition	extern/libgit2/include/git2/sys/transport.h	/^typedef struct git_smart_subtransport_definition {$/;"	s
git_smart_subtransport_definition	extern/libgit2/include/git2/sys/transport.h	/^} git_smart_subtransport_definition;$/;"	t	typeref:struct:git_smart_subtransport_definition
git_smart_subtransport_git	extern/libgit2/src/transports/git.c	/^int git_smart_subtransport_git(git_smart_subtransport **out, git_transport *owner, void *param)$/;"	f	typeref:typename:int
git_smart_subtransport_http	extern/libgit2/src/transports/http.c	/^int git_smart_subtransport_http(git_smart_subtransport **out, git_transport *owner, void *param)$/;"	f	typeref:typename:int
git_smart_subtransport_http	extern/libgit2/src/transports/winhttp.c	/^int git_smart_subtransport_http(git_smart_subtransport **out, git_transport *owner, void *param)$/;"	f	typeref:typename:int
git_smart_subtransport_ssh	extern/libgit2/src/transports/ssh.c	/^int git_smart_subtransport_ssh($/;"	f	typeref:typename:int
git_smart_subtransport_stream	extern/libgit2/include/git2/sys/transport.h	/^struct git_smart_subtransport_stream {$/;"	s
git_smart_subtransport_stream	extern/libgit2/include/git2/sys/transport.h	/^typedef struct git_smart_subtransport_stream git_smart_subtransport_stream;$/;"	t	typeref:struct:git_smart_subtransport_stream
git_socket_stream	extern/libgit2/src/streams/socket.h	/^} git_socket_stream;$/;"	t	typeref:struct:__anonde82408a0108
git_socket_stream_new	extern/libgit2/src/streams/socket.c	/^int git_socket_stream_new($/;"	f	typeref:typename:int
git_sort_t	extern/libgit2/include/git2/revwalk.h	/^} git_sort_t;$/;"	t	typeref:enum:__anon0dbafed00103
git_sortedcache	extern/libgit2/src/sortedcache.h	/^} git_sortedcache;$/;"	t	typeref:struct:__anond92d40380108
git_sortedcache_clear	extern/libgit2/src/sortedcache.c	/^int git_sortedcache_clear(git_sortedcache *sc, bool wlock)$/;"	f	typeref:typename:int
git_sortedcache_copy	extern/libgit2/src/sortedcache.c	/^int git_sortedcache_copy($/;"	f	typeref:typename:int
git_sortedcache_entry	extern/libgit2/src/sortedcache.c	/^void *git_sortedcache_entry(git_sortedcache *sc, size_t pos)$/;"	f	typeref:typename:void *
git_sortedcache_entrycount	extern/libgit2/src/sortedcache.c	/^size_t git_sortedcache_entrycount(const git_sortedcache *sc)$/;"	f	typeref:typename:size_t
git_sortedcache_free	extern/libgit2/src/sortedcache.c	/^void git_sortedcache_free(git_sortedcache *sc)$/;"	f	typeref:typename:void
git_sortedcache_free_item_fn	extern/libgit2/src/sortedcache.h	/^typedef void (*git_sortedcache_free_item_fn)(void *payload, void *item);$/;"	t	typeref:typename:void (*)(void * payload,void * item)
git_sortedcache_incref	extern/libgit2/src/sortedcache.c	/^void git_sortedcache_incref(git_sortedcache *sc)$/;"	f	typeref:typename:void
git_sortedcache_lockandload	extern/libgit2/src/sortedcache.c	/^int git_sortedcache_lockandload(git_sortedcache *sc, git_buf *buf)$/;"	f	typeref:typename:int
git_sortedcache_lookup	extern/libgit2/src/sortedcache.c	/^void *git_sortedcache_lookup(const git_sortedcache *sc, const char *key)$/;"	f	typeref:typename:void *
git_sortedcache_lookup_index	extern/libgit2/src/sortedcache.c	/^int git_sortedcache_lookup_index($/;"	f	typeref:typename:int
git_sortedcache_new	extern/libgit2/src/sortedcache.c	/^int git_sortedcache_new($/;"	f	typeref:typename:int
git_sortedcache_path	extern/libgit2/src/sortedcache.c	/^const char *git_sortedcache_path(git_sortedcache *sc)$/;"	f	typeref:typename:const char *
git_sortedcache_remove	extern/libgit2/src/sortedcache.c	/^int git_sortedcache_remove(git_sortedcache *sc, size_t pos)$/;"	f	typeref:typename:int
git_sortedcache_rlock	extern/libgit2/src/sortedcache.c	/^int git_sortedcache_rlock(git_sortedcache *sc)$/;"	f	typeref:typename:int
git_sortedcache_runlock	extern/libgit2/src/sortedcache.c	/^void git_sortedcache_runlock(git_sortedcache *sc)$/;"	f	typeref:typename:void
git_sortedcache_updated	extern/libgit2/src/sortedcache.c	/^void git_sortedcache_updated(git_sortedcache *sc)$/;"	f	typeref:typename:void
git_sortedcache_upsert	extern/libgit2/src/sortedcache.c	/^int git_sortedcache_upsert(void **out, git_sortedcache *sc, const char *key)$/;"	f	typeref:typename:int
git_sortedcache_wlock	extern/libgit2/src/sortedcache.c	/^int git_sortedcache_wlock(git_sortedcache *sc)$/;"	f	typeref:typename:int
git_sortedcache_wunlock	extern/libgit2/src/sortedcache.c	/^void git_sortedcache_wunlock(git_sortedcache *sc)$/;"	f	typeref:typename:void
git_ssh_extract_url_parts	extern/libgit2/src/transports/ssh.c	/^static int git_ssh_extract_url_parts($/;"	f	typeref:typename:int	file:
git_stash_apply	extern/libgit2/src/stash.c	/^int git_stash_apply($/;"	f	typeref:typename:int
git_stash_apply_flags	extern/libgit2/include/git2/stash.h	/^} git_stash_apply_flags;$/;"	t	typeref:enum:__anon4e4811d70203
git_stash_apply_init_options	extern/libgit2/src/stash.c	/^int git_stash_apply_init_options(git_stash_apply_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_stash_apply_options	extern/libgit2/include/git2/stash.h	/^typedef struct git_stash_apply_options {$/;"	s
git_stash_apply_options	extern/libgit2/include/git2/stash.h	/^} git_stash_apply_options;$/;"	t	typeref:struct:git_stash_apply_options
git_stash_apply_options_init	extern/libgit2/src/stash.c	/^int git_stash_apply_options_init(git_stash_apply_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_stash_apply_progress_cb	extern/libgit2/include/git2/stash.h	/^typedef int GIT_CALLBACK(git_stash_apply_progress_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_stash_apply_progress_t progress,void * payload)
git_stash_apply_progress_t	extern/libgit2/include/git2/stash.h	/^} git_stash_apply_progress_t;$/;"	t	typeref:enum:__anon4e4811d70303
git_stash_cb	extern/libgit2/include/git2/stash.h	/^typedef int GIT_CALLBACK(git_stash_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(size_t index,const char * message,const git_oid * stash_id,void * payload)
git_stash_drop	extern/libgit2/src/stash.c	/^int git_stash_drop($/;"	f	typeref:typename:int
git_stash_flags	extern/libgit2/include/git2/stash.h	/^} git_stash_flags;$/;"	t	typeref:enum:__anon4e4811d70103
git_stash_foreach	extern/libgit2/src/stash.c	/^int git_stash_foreach($/;"	f	typeref:typename:int
git_stash_pop	extern/libgit2/src/stash.c	/^int git_stash_pop($/;"	f	typeref:typename:int
git_stash_save	extern/libgit2/src/stash.c	/^int git_stash_save($/;"	f	typeref:typename:int
git_status_byindex	extern/libgit2/src/status.c	/^const git_status_entry *git_status_byindex(git_status_list *status, size_t i)$/;"	f	typeref:typename:const git_status_entry *
git_status_cb	extern/libgit2/include/git2/status.h	/^typedef int GIT_CALLBACK(git_status_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * path,unsigned int status_flags,void * payload)
git_status_entry	extern/libgit2/include/git2/status.h	/^} git_status_entry;$/;"	t	typeref:struct:__anon1764a4980508
git_status_file	extern/libgit2/src/status.c	/^int git_status_file($/;"	f	typeref:typename:int
git_status_foreach	extern/libgit2/src/status.c	/^int git_status_foreach(git_repository *repo, git_status_cb cb, void *payload)$/;"	f	typeref:typename:int
git_status_foreach_ext	extern/libgit2/src/status.c	/^int git_status_foreach_ext($/;"	f	typeref:typename:int
git_status_init_options	extern/libgit2/src/status.c	/^int git_status_init_options(git_status_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_status_list	extern/libgit2/include/git2/types.h	/^typedef struct git_status_list git_status_list;$/;"	t	typeref:struct:git_status_list
git_status_list	extern/libgit2/src/status.h	/^struct git_status_list {$/;"	s
git_status_list_alloc	extern/libgit2/src/status.c	/^static git_status_list *git_status_list_alloc(git_index *index)$/;"	f	typeref:typename:git_status_list *	file:
git_status_list_entrycount	extern/libgit2/src/status.c	/^size_t git_status_list_entrycount(git_status_list *status)$/;"	f	typeref:typename:size_t
git_status_list_free	extern/libgit2/src/status.c	/^void git_status_list_free(git_status_list *status)$/;"	f	typeref:typename:void
git_status_list_get_perfdata	extern/libgit2/src/status.c	/^int git_status_list_get_perfdata($/;"	f	typeref:typename:int
git_status_list_new	extern/libgit2/src/status.c	/^int git_status_list_new($/;"	f	typeref:typename:int
git_status_opt_t	extern/libgit2/include/git2/status.h	/^} git_status_opt_t;$/;"	t	typeref:enum:__anon1764a4980303
git_status_options	extern/libgit2/include/git2/status.h	/^} git_status_options;$/;"	t	typeref:struct:__anon1764a4980408
git_status_options_init	extern/libgit2/src/status.c	/^int git_status_options_init(git_status_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_status_should_ignore	extern/libgit2/src/status.c	/^int git_status_should_ignore($/;"	f	typeref:typename:int
git_status_show_t	extern/libgit2/include/git2/status.h	/^} git_status_show_t;$/;"	t	typeref:enum:__anon1764a4980203
git_status_t	extern/libgit2/include/git2/status.h	/^} git_status_t;$/;"	t	typeref:enum:__anon1764a4980103
git_stdalloc_init_allocator	extern/libgit2/src/allocators/stdalloc.c	/^int git_stdalloc_init_allocator(git_allocator *allocator)$/;"	f	typeref:typename:int
git_stransport_stream_new	extern/libgit2/src/streams/stransport.c	/^int git_stransport_stream_new(git_stream **out, const char *host, const char *port)$/;"	f	typeref:typename:int
git_stransport_stream_wrap	extern/libgit2/src/streams/stransport.c	/^int git_stransport_stream_wrap($/;"	f	typeref:typename:int
git_strarray	extern/libgit2/include/git2/strarray.h	/^typedef struct git_strarray {$/;"	s
git_strarray	extern/libgit2/include/git2/strarray.h	/^} git_strarray;$/;"	t	typeref:struct:git_strarray
git_strarray_copy	extern/libgit2/src/util.c	/^int git_strarray_copy(git_strarray *tgt, const git_strarray *src)$/;"	f	typeref:typename:int
git_strarray_free	extern/libgit2/src/util.c	/^void git_strarray_free(git_strarray *array)$/;"	f	typeref:typename:void
git_stream	extern/libgit2/include/git2/sys/stream.h	/^typedef struct git_stream {$/;"	s
git_stream	extern/libgit2/include/git2/sys/stream.h	/^} git_stream;$/;"	t	typeref:struct:git_stream
git_stream__write_full	extern/libgit2/src/stream.h	/^GIT_INLINE(int) git_stream__write_full(git_stream *st, const char *data, size_t len, int flags)$/;"	f	typeref:typename:int
git_stream_bio_method	extern/libgit2/src/streams/openssl.c	/^static BIO_METHOD *git_stream_bio_method;$/;"	v	typeref:typename:BIO_METHOD *	file:
git_stream_cb	extern/libgit2/include/git2/sys/stream.h	/^typedef int GIT_CALLBACK(git_stream_cb)(git_stream **out, const char *host, const char *port);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_stream ** out,const char * host,const char * port)
git_stream_certificate	extern/libgit2/src/stream.h	/^GIT_INLINE(int) git_stream_certificate(git_cert **out, git_stream *st)$/;"	f	typeref:typename:int
git_stream_close	extern/libgit2/src/stream.h	/^GIT_INLINE(int) git_stream_close(git_stream *st)$/;"	f	typeref:typename:int
git_stream_connect	extern/libgit2/src/stream.h	/^GIT_INLINE(int) git_stream_connect(git_stream *st)$/;"	f	typeref:typename:int
git_stream_free	extern/libgit2/src/stream.h	/^GIT_INLINE(void) git_stream_free(git_stream *st)$/;"	f	typeref:typename:void
git_stream_is_encrypted	extern/libgit2/src/stream.h	/^GIT_INLINE(int) git_stream_is_encrypted(git_stream *st)$/;"	f	typeref:typename:int
git_stream_read	extern/libgit2/src/stream.h	/^GIT_INLINE(ssize_t) git_stream_read(git_stream *st, void *data, size_t len)$/;"	f	typeref:typename:ssize_t
git_stream_register	extern/libgit2/src/streams/registry.c	/^int git_stream_register(git_stream_t type, git_stream_registration *registration)$/;"	f	typeref:typename:int
git_stream_register_tls	extern/libgit2/src/streams/registry.c	/^int git_stream_register_tls($/;"	f	typeref:typename:int
git_stream_registration	extern/libgit2/include/git2/sys/stream.h	/^} git_stream_registration;$/;"	t	typeref:struct:__anon5cee94ee0108
git_stream_registry_global_init	extern/libgit2/src/streams/registry.c	/^int git_stream_registry_global_init(void)$/;"	f	typeref:typename:int
git_stream_registry_lookup	extern/libgit2/src/streams/registry.c	/^int git_stream_registry_lookup(git_stream_registration *out, git_stream_t type)$/;"	f	typeref:typename:int
git_stream_set_proxy	extern/libgit2/src/stream.h	/^GIT_INLINE(int) git_stream_set_proxy(git_stream *st, const git_proxy_options *proxy_opts)$/;"	f	typeref:typename:int
git_stream_supports_proxy	extern/libgit2/src/stream.h	/^GIT_INLINE(int) git_stream_supports_proxy(git_stream *st)$/;"	f	typeref:typename:int
git_stream_t	extern/libgit2/include/git2/sys/stream.h	/^} git_stream_t;$/;"	t	typeref:enum:__anon5cee94ee0203
git_stream_write	extern/libgit2/src/stream.h	/^GIT_INLINE(ssize_t) git_stream_write(git_stream *st, const char *data, size_t len, int flags)$/;"	f	typeref:typename:ssize_t
git_strmap	extern/libgit2/src/strmap.h	/^typedef struct kh_str_s git_strmap;$/;"	t	typeref:struct:kh_str_s
git_strmap_clear	extern/libgit2/src/strmap.c	/^void git_strmap_clear(git_strmap *map)$/;"	f	typeref:typename:void
git_strmap_delete	extern/libgit2/src/strmap.c	/^int git_strmap_delete(git_strmap *map, const char *key)$/;"	f	typeref:typename:int
git_strmap_exists	extern/libgit2/src/strmap.c	/^int git_strmap_exists(git_strmap *map, const char *key)$/;"	f	typeref:typename:int
git_strmap_foreach	extern/libgit2/src/strmap.h	/^#define git_strmap_foreach(/;"	d
git_strmap_foreach_value	extern/libgit2/src/strmap.h	/^#define git_strmap_foreach_value(/;"	d
git_strmap_free	extern/libgit2/src/strmap.c	/^void git_strmap_free(git_strmap *map)$/;"	f	typeref:typename:void
git_strmap_get	extern/libgit2/src/strmap.c	/^void *git_strmap_get(git_strmap *map, const char *key)$/;"	f	typeref:typename:void *
git_strmap_iterate	extern/libgit2/src/strmap.c	/^int git_strmap_iterate(void **value, git_strmap *map, size_t *iter, const char **key)$/;"	f	typeref:typename:int
git_strmap_set	extern/libgit2/src/strmap.c	/^int git_strmap_set(git_strmap *map, const char *key, void *value)$/;"	f	typeref:typename:int
git_strmap_size	extern/libgit2/src/strmap.c	/^size_t git_strmap_size(git_strmap *map)$/;"	f	typeref:typename:size_t
git_style_unc_path	extern/libgit2/tests/clone/local.c	/^static int git_style_unc_path(git_buf *buf, const char *host, const char *path)$/;"	f	typeref:typename:int	file:
git_submodule	extern/libgit2/include/git2/types.h	/^typedef struct git_submodule git_submodule;$/;"	t	typeref:struct:git_submodule
git_submodule	extern/libgit2/src/submodule.h	/^struct git_submodule {$/;"	s
git_submodule__map	extern/libgit2/src/submodule.c	/^int git_submodule__map(git_repository *repo, git_strmap *map)$/;"	f	typeref:typename:int
git_submodule__open	extern/libgit2/src/submodule.c	/^static int git_submodule__open($/;"	f	typeref:typename:int	file:
git_submodule__status	extern/libgit2/src/submodule.c	/^int git_submodule__status($/;"	f	typeref:typename:int
git_submodule_add_finalize	extern/libgit2/src/submodule.c	/^int git_submodule_add_finalize(git_submodule *sm)$/;"	f	typeref:typename:int
git_submodule_add_setup	extern/libgit2/src/submodule.c	/^int git_submodule_add_setup($/;"	f	typeref:typename:int
git_submodule_add_to_index	extern/libgit2/src/submodule.c	/^int git_submodule_add_to_index(git_submodule *sm, int write_index)$/;"	f	typeref:typename:int
git_submodule_branch	extern/libgit2/src/submodule.c	/^const char *git_submodule_branch(git_submodule *submodule)$/;"	f	typeref:typename:const char *
git_submodule_cb	extern/libgit2/include/git2/submodule.h	/^typedef int GIT_CALLBACK(git_submodule_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_submodule * sm,const char * name,void * payload)
git_submodule_fetch_recurse_submodules	extern/libgit2/src/submodule.c	/^git_submodule_recurse_t git_submodule_fetch_recurse_submodules($/;"	f	typeref:typename:git_submodule_recurse_t
git_submodule_foreach	extern/libgit2/src/submodule.c	/^int git_submodule_foreach($/;"	f	typeref:typename:int
git_submodule_free	extern/libgit2/src/submodule.c	/^void git_submodule_free(git_submodule *sm)$/;"	f	typeref:typename:void
git_submodule_head_id	extern/libgit2/src/submodule.c	/^const git_oid *git_submodule_head_id(git_submodule *submodule)$/;"	f	typeref:typename:const git_oid *
git_submodule_ignore	extern/libgit2/src/submodule.c	/^git_submodule_ignore_t git_submodule_ignore(git_submodule *submodule)$/;"	f	typeref:typename:git_submodule_ignore_t
git_submodule_ignore_t	extern/libgit2/include/git2/types.h	/^} git_submodule_ignore_t;$/;"	t	typeref:enum:__anona7f40ac90603
git_submodule_index_id	extern/libgit2/src/submodule.c	/^const git_oid *git_submodule_index_id(git_submodule *submodule)$/;"	f	typeref:typename:const git_oid *
git_submodule_init	extern/libgit2/src/submodule.c	/^int git_submodule_init(git_submodule *sm, int overwrite)$/;"	f	typeref:typename:int
git_submodule_location	extern/libgit2/src/submodule.c	/^int git_submodule_location(unsigned int *location, git_submodule *sm)$/;"	f	typeref:typename:int
git_submodule_lookup	extern/libgit2/src/submodule.c	/^int git_submodule_lookup($/;"	f	typeref:typename:int
git_submodule_name	extern/libgit2/src/submodule.c	/^const char *git_submodule_name(git_submodule *submodule)$/;"	f	typeref:typename:const char *
git_submodule_name_is_valid	extern/libgit2/src/submodule.c	/^int git_submodule_name_is_valid(git_repository *repo, const char *name, int flags)$/;"	f	typeref:typename:int
git_submodule_open	extern/libgit2/src/submodule.c	/^int git_submodule_open(git_repository **subrepo, git_submodule *sm)$/;"	f	typeref:typename:int
git_submodule_open_bare	extern/libgit2/src/submodule.c	/^int git_submodule_open_bare(git_repository **subrepo, git_submodule *sm)$/;"	f	typeref:typename:int
git_submodule_owner	extern/libgit2/src/submodule.c	/^git_repository *git_submodule_owner(git_submodule *submodule)$/;"	f	typeref:typename:git_repository *
git_submodule_parse_ignore	extern/libgit2/src/submodule.c	/^int git_submodule_parse_ignore(git_submodule_ignore_t *out, const char *value)$/;"	f	typeref:typename:int
git_submodule_parse_recurse	extern/libgit2/src/submodule.c	/^int git_submodule_parse_recurse(git_submodule_recurse_t *out, const char *value)$/;"	f	typeref:typename:int
git_submodule_parse_update	extern/libgit2/src/submodule.c	/^int git_submodule_parse_update(git_submodule_update_t *out, const char *value)$/;"	f	typeref:typename:int
git_submodule_path	extern/libgit2/src/submodule.c	/^const char *git_submodule_path(git_submodule *submodule)$/;"	f	typeref:typename:const char *
git_submodule_recurse_t	extern/libgit2/include/git2/types.h	/^} git_submodule_recurse_t;$/;"	t	typeref:enum:__anona7f40ac90703
git_submodule_reload	extern/libgit2/src/submodule.c	/^int git_submodule_reload(git_submodule *sm, int force)$/;"	f	typeref:typename:int
git_submodule_repo_init	extern/libgit2/src/submodule.c	/^int git_submodule_repo_init($/;"	f	typeref:typename:int
git_submodule_resolve_url	extern/libgit2/src/submodule.c	/^int git_submodule_resolve_url(git_buf *out, git_repository *repo, const char *url)$/;"	f	typeref:typename:int
git_submodule_set_branch	extern/libgit2/src/submodule.c	/^int git_submodule_set_branch(git_repository *repo, const char *name, const char *branch)$/;"	f	typeref:typename:int
git_submodule_set_fetch_recurse_submodules	extern/libgit2/src/submodule.c	/^int git_submodule_set_fetch_recurse_submodules(git_repository *repo, const char *name, git_submo/;"	f	typeref:typename:int
git_submodule_set_ignore	extern/libgit2/src/submodule.c	/^int git_submodule_set_ignore(git_repository *repo, const char *name, git_submodule_ignore_t igno/;"	f	typeref:typename:int
git_submodule_set_update	extern/libgit2/src/submodule.c	/^int git_submodule_set_update(git_repository *repo, const char *name, git_submodule_update_t upda/;"	f	typeref:typename:int
git_submodule_set_url	extern/libgit2/src/submodule.c	/^int git_submodule_set_url(git_repository *repo, const char *name, const char *url)$/;"	f	typeref:typename:int
git_submodule_status	extern/libgit2/src/submodule.c	/^int git_submodule_status(unsigned int *status, git_repository *repo, const char *name, git_submo/;"	f	typeref:typename:int
git_submodule_status_t	extern/libgit2/include/git2/submodule.h	/^} git_submodule_status_t;$/;"	t	typeref:enum:__anonfe0d90e40103
git_submodule_sync	extern/libgit2/src/submodule.c	/^int git_submodule_sync(git_submodule *sm)$/;"	f	typeref:typename:int
git_submodule_update	extern/libgit2/src/submodule.c	/^int git_submodule_update(git_submodule *sm, int init, git_submodule_update_options *_update_opti/;"	f	typeref:typename:int
git_submodule_update_init_options	extern/libgit2/src/submodule.c	/^int git_submodule_update_init_options(git_submodule_update_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_submodule_update_options	extern/libgit2/include/git2/submodule.h	/^typedef struct git_submodule_update_options {$/;"	s
git_submodule_update_options	extern/libgit2/include/git2/submodule.h	/^} git_submodule_update_options;$/;"	t	typeref:struct:git_submodule_update_options
git_submodule_update_options_init	extern/libgit2/src/submodule.c	/^int git_submodule_update_options_init(git_submodule_update_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_submodule_update_repo_init_cb	extern/libgit2/src/submodule.c	/^static int git_submodule_update_repo_init_cb($/;"	f	typeref:typename:int	file:
git_submodule_update_strategy	extern/libgit2/src/submodule.c	/^git_submodule_update_t git_submodule_update_strategy(git_submodule *submodule)$/;"	f	typeref:typename:git_submodule_update_t
git_submodule_update_t	extern/libgit2/include/git2/types.h	/^} git_submodule_update_t;$/;"	t	typeref:enum:__anona7f40ac90503
git_submodule_update_to_str	extern/libgit2/src/submodule.c	/^const char *git_submodule_update_to_str(git_submodule_update_t update)$/;"	f	typeref:typename:const char *
git_submodule_url	extern/libgit2/src/submodule.c	/^const char *git_submodule_url(git_submodule *submodule)$/;"	f	typeref:typename:const char *
git_submodule_wd_id	extern/libgit2/src/submodule.c	/^const git_oid *git_submodule_wd_id(git_submodule *submodule)$/;"	f	typeref:typename:const git_oid *
git_subtransport	extern/libgit2/src/transports/git.c	/^} git_subtransport;$/;"	t	typeref:struct:__anon936e62c10208	file:
git_subtransport_definition	extern/libgit2/src/transport.c	/^static git_smart_subtransport_definition git_subtransport_definition = { git_smart_subtransport_/;"	v	typeref:typename:git_smart_subtransport_definition	file:
git_sysdir__dir	extern/libgit2/src/sysdir.c	/^struct git_sysdir__dir {$/;"	s	file:
git_sysdir__dirs	extern/libgit2/src/sysdir.c	/^static struct git_sysdir__dir git_sysdir__dirs[] = {$/;"	v	typeref:struct:git_sysdir__dir[]	file:
git_sysdir_check_selector	extern/libgit2/src/sysdir.c	/^static int git_sysdir_check_selector(git_sysdir_t which)$/;"	f	typeref:typename:int	file:
git_sysdir_expand_global_file	extern/libgit2/src/sysdir.c	/^int git_sysdir_expand_global_file(git_buf *path, const char *filename)$/;"	f	typeref:typename:int
git_sysdir_find_global_file	extern/libgit2/src/sysdir.c	/^int git_sysdir_find_global_file(git_buf *path, const char *filename)$/;"	f	typeref:typename:int
git_sysdir_find_in_dirlist	extern/libgit2/src/sysdir.c	/^static int git_sysdir_find_in_dirlist($/;"	f	typeref:typename:int	file:
git_sysdir_find_programdata_file	extern/libgit2/src/sysdir.c	/^int git_sysdir_find_programdata_file(git_buf *path, const char *filename)$/;"	f	typeref:typename:int
git_sysdir_find_system_file	extern/libgit2/src/sysdir.c	/^int git_sysdir_find_system_file(git_buf *path, const char *filename)$/;"	f	typeref:typename:int
git_sysdir_find_template_dir	extern/libgit2/src/sysdir.c	/^int git_sysdir_find_template_dir(git_buf *path)$/;"	f	typeref:typename:int
git_sysdir_find_xdg_file	extern/libgit2/src/sysdir.c	/^int git_sysdir_find_xdg_file(git_buf *path, const char *filename)$/;"	f	typeref:typename:int
git_sysdir_get	extern/libgit2/src/sysdir.c	/^int git_sysdir_get(const git_buf **out, git_sysdir_t which)$/;"	f	typeref:typename:int
git_sysdir_get_str	extern/libgit2/src/sysdir.c	/^int git_sysdir_get_str($/;"	f	typeref:typename:int
git_sysdir_global_init	extern/libgit2/src/sysdir.c	/^int git_sysdir_global_init(void)$/;"	f	typeref:typename:int
git_sysdir_global_shutdown	extern/libgit2/src/sysdir.c	/^static void git_sysdir_global_shutdown(void)$/;"	f	typeref:typename:void	file:
git_sysdir_guess_global_dirs	extern/libgit2/src/sysdir.c	/^static int git_sysdir_guess_global_dirs(git_buf *out)$/;"	f	typeref:typename:int	file:
git_sysdir_guess_programdata_dirs	extern/libgit2/src/sysdir.c	/^static int git_sysdir_guess_programdata_dirs(git_buf *out)$/;"	f	typeref:typename:int	file:
git_sysdir_guess_system_dirs	extern/libgit2/src/sysdir.c	/^static int git_sysdir_guess_system_dirs(git_buf *out)$/;"	f	typeref:typename:int	file:
git_sysdir_guess_template_dirs	extern/libgit2/src/sysdir.c	/^static int git_sysdir_guess_template_dirs(git_buf *out)$/;"	f	typeref:typename:int	file:
git_sysdir_guess_xdg_dirs	extern/libgit2/src/sysdir.c	/^static int git_sysdir_guess_xdg_dirs(git_buf *out)$/;"	f	typeref:typename:int	file:
git_sysdir_set	extern/libgit2/src/sysdir.c	/^int git_sysdir_set(git_sysdir_t which, const char *search_path)$/;"	f	typeref:typename:int
git_sysdir_t	extern/libgit2/src/sysdir.h	/^} git_sysdir_t;$/;"	t	typeref:enum:__anonfece52110103
git_tag	extern/libgit2/include/git2/types.h	/^typedef struct git_tag git_tag;$/;"	t	typeref:struct:git_tag
git_tag	extern/libgit2/src/tag.h	/^struct git_tag {$/;"	s
git_tag__free	extern/libgit2/src/tag.c	/^void git_tag__free(void *_tag)$/;"	f	typeref:typename:void
git_tag__parse	extern/libgit2/src/tag.c	/^int git_tag__parse(void *_tag, git_odb_object *odb_obj)$/;"	f	typeref:typename:int
git_tag__parse_raw	extern/libgit2/src/tag.c	/^int git_tag__parse_raw(void *_tag, const char *data, size_t size)$/;"	f	typeref:typename:int
git_tag_annotation_create	extern/libgit2/src/tag.c	/^int git_tag_annotation_create($/;"	f	typeref:typename:int
git_tag_create	extern/libgit2/src/tag.c	/^int git_tag_create($/;"	f	typeref:typename:int
git_tag_create__internal	extern/libgit2/src/tag.c	/^static int git_tag_create__internal($/;"	f	typeref:typename:int	file:
git_tag_create_from_buffer	extern/libgit2/src/tag.c	/^int git_tag_create_from_buffer(git_oid *oid, git_repository *repo, const char *buffer, int allow/;"	f	typeref:typename:int
git_tag_create_frombuffer	extern/libgit2/src/tag.c	/^int git_tag_create_frombuffer(git_oid *oid, git_repository *repo, const char *buffer, int allow_/;"	f	typeref:typename:int
git_tag_create_lightweight	extern/libgit2/src/tag.c	/^int git_tag_create_lightweight($/;"	f	typeref:typename:int
git_tag_delete	extern/libgit2/src/tag.c	/^int git_tag_delete(git_repository *repo, const char *tag_name)$/;"	f	typeref:typename:int
git_tag_dup	extern/libgit2/src/object_api.c	/^int git_tag_dup(git_tag **out, git_tag *obj)$/;"	f	typeref:typename:int
git_tag_foreach	extern/libgit2/src/tag.c	/^int git_tag_foreach(git_repository *repo, git_tag_foreach_cb cb, void *cb_data)$/;"	f	typeref:typename:int
git_tag_foreach_cb	extern/libgit2/include/git2/tag.h	/^typedef int GIT_CALLBACK(git_tag_foreach_cb)(const char *name, git_oid *oid, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * name,git_oid * oid,void * payload)
git_tag_free	extern/libgit2/src/object_api.c	/^void git_tag_free(git_tag *obj)$/;"	f	typeref:typename:void
git_tag_id	extern/libgit2/src/object_api.c	/^const git_oid *git_tag_id(const git_tag *obj)$/;"	f	typeref:typename:const git_oid *
git_tag_list	extern/libgit2/src/tag.c	/^int git_tag_list(git_strarray *tag_names, git_repository *repo)$/;"	f	typeref:typename:int
git_tag_list_match	extern/libgit2/src/tag.c	/^int git_tag_list_match(git_strarray *tag_names, const char *pattern, git_repository *repo)$/;"	f	typeref:typename:int
git_tag_lookup	extern/libgit2/src/object_api.c	/^int git_tag_lookup(git_tag **out, git_repository *repo, const git_oid *id)$/;"	f	typeref:typename:int
git_tag_lookup_prefix	extern/libgit2/src/object_api.c	/^int git_tag_lookup_prefix(git_tag **out, git_repository *repo, const git_oid *id, size_t len)$/;"	f	typeref:typename:int
git_tag_message	extern/libgit2/src/tag.c	/^const char *git_tag_message(const git_tag *t)$/;"	f	typeref:typename:const char *
git_tag_name	extern/libgit2/src/tag.c	/^const char *git_tag_name(const git_tag *t)$/;"	f	typeref:typename:const char *
git_tag_owner	extern/libgit2/src/object_api.c	/^git_repository *git_tag_owner(const git_tag *obj)$/;"	f	typeref:typename:git_repository *
git_tag_peel	extern/libgit2/src/tag.c	/^int git_tag_peel(git_object **tag_target, const git_tag *tag)$/;"	f	typeref:typename:int
git_tag_tagger	extern/libgit2/src/tag.c	/^const git_signature *git_tag_tagger(const git_tag *t)$/;"	f	typeref:typename:const git_signature *
git_tag_target	extern/libgit2/src/tag.c	/^int git_tag_target(git_object **target, const git_tag *t)$/;"	f	typeref:typename:int
git_tag_target_id	extern/libgit2/src/tag.c	/^const git_oid *git_tag_target_id(const git_tag *t)$/;"	f	typeref:typename:const git_oid *
git_tag_target_type	extern/libgit2/src/tag.c	/^git_object_t git_tag_target_type(const git_tag *t)$/;"	f	typeref:typename:git_object_t
git_thread	extern/libgit2/src/thread-utils.h	/^#define git_thread /;"	d
git_thread	extern/libgit2/src/unix/pthread.h	/^} git_thread;$/;"	t	typeref:struct:__anon0c727dee0108
git_thread	extern/libgit2/src/win32/thread.h	/^} git_thread;$/;"	t	typeref:struct:__anon7162bc2d0108
git_thread_create	extern/libgit2/src/thread-utils.h	/^#define git_thread_create(/;"	d
git_thread_create	extern/libgit2/src/unix/pthread.h	/^#define git_thread_create(/;"	d
git_thread_create	extern/libgit2/src/win32/thread.c	/^int git_thread_create($/;"	f	typeref:typename:int
git_thread_currentid	extern/libgit2/src/unix/pthread.h	/^#define git_thread_currentid(/;"	d
git_thread_currentid	extern/libgit2/src/win32/thread.c	/^size_t git_thread_currentid(void)$/;"	f	typeref:typename:size_t
git_thread_exit	extern/libgit2/src/unix/pthread.h	/^#define git_thread_exit(/;"	d
git_thread_exit	extern/libgit2/src/win32/thread.c	/^void git_thread_exit(void *value)$/;"	f	typeref:typename:void
git_thread_join	extern/libgit2/src/thread-utils.h	/^#define git_thread_join(/;"	d
git_thread_join	extern/libgit2/src/unix/pthread.h	/^#define git_thread_join(/;"	d
git_thread_join	extern/libgit2/src/win32/thread.c	/^int git_thread_join($/;"	f	typeref:typename:int
git_thread_yield	extern/libgit2/tests/threads/diff.c	/^#  define git_thread_yield(/;"	d	file:
git_thread_yield	extern/libgit2/tests/threads/diff.c	/^# define git_thread_yield(/;"	d	file:
git_threads_init	extern/libgit2/src/unix/pthread.h	/^#define git_threads_init(/;"	d
git_threads_init	extern/libgit2/src/win32/thread.c	/^int git_threads_init(void)$/;"	f	typeref:typename:int
git_time	extern/libgit2/include/git2/types.h	/^typedef struct git_time {$/;"	s
git_time	extern/libgit2/include/git2/types.h	/^} git_time;$/;"	t	typeref:struct:git_time
git_time_t	extern/libgit2/include/git2/types.h	/^typedef __time64_t git_time_t;$/;"	t	typeref:typename:__time64_t
git_tls_stream_new	extern/libgit2/src/streams/tls.c	/^int git_tls_stream_new(git_stream **out, const char *host, const char *port)$/;"	f	typeref:typename:int
git_tls_stream_wrap	extern/libgit2/src/streams/tls.c	/^int git_tls_stream_wrap(git_stream **out, git_stream *in, const char *host)$/;"	f	typeref:typename:int
git_trace	extern/libgit2/src/trace.h	/^#define git_trace	/;"	d
git_trace	extern/libgit2/src/trace.h	/^#define git_trace(/;"	d
git_trace__data	extern/libgit2/src/trace.c	/^struct git_trace_data git_trace__data = {0};$/;"	v	typeref:struct:git_trace_data
git_trace__null	extern/libgit2/src/trace.h	/^GIT_INLINE(void) git_trace__null($/;"	f	typeref:typename:void
git_trace__write_fmt	extern/libgit2/src/trace.h	/^GIT_INLINE(void) git_trace__write_fmt($/;"	f	typeref:typename:void
git_trace_callback	extern/libgit2/include/git2/deprecated.h	/^typedef git_trace_cb git_trace_callback;$/;"	t	typeref:typename:git_trace_cb
git_trace_cb	extern/libgit2/include/git2/trace.h	/^typedef void GIT_CALLBACK(git_trace_cb)(git_trace_level_t level, const char *msg);$/;"	t	typeref:typename:void GIT_CALLBACK ()(git_trace_level_t level,const char * msg)
git_trace_cb	extern/libgit2/tests/clar_libgit2_trace.c	/^	void (*git_trace_cb)(git_trace_level_t level, const char *msg);$/;"	m	struct:method	typeref:typename:void (*)(git_trace_level_t level,const char * msg)	file:
git_trace_data	extern/libgit2/src/trace.h	/^struct git_trace_data {$/;"	s
git_trace_level	extern/libgit2/src/trace.h	/^#define git_trace_level(/;"	d
git_trace_level_t	extern/libgit2/include/git2/trace.h	/^} git_trace_level_t;$/;"	t	typeref:enum:__anon968f2a830103
git_trace_set	extern/libgit2/src/trace.c	/^int git_trace_set(git_trace_level_t level, git_trace_cb callback)$/;"	f	typeref:typename:int
git_transaction	extern/libgit2/include/git2/types.h	/^typedef struct git_transaction git_transaction;$/;"	t	typeref:struct:git_transaction
git_transaction	extern/libgit2/src/transaction.c	/^struct git_transaction {$/;"	s	file:
git_transaction_commit	extern/libgit2/src/transaction.c	/^int git_transaction_commit(git_transaction *tx)$/;"	f	typeref:typename:int
git_transaction_config_new	extern/libgit2/src/transaction.c	/^int git_transaction_config_new(git_transaction **out, git_config *cfg)$/;"	f	typeref:typename:int
git_transaction_free	extern/libgit2/src/transaction.c	/^void git_transaction_free(git_transaction *tx)$/;"	f	typeref:typename:void
git_transaction_lock_ref	extern/libgit2/src/transaction.c	/^int git_transaction_lock_ref(git_transaction *tx, const char *refname)$/;"	f	typeref:typename:int
git_transaction_new	extern/libgit2/src/transaction.c	/^int git_transaction_new(git_transaction **out, git_repository *repo)$/;"	f	typeref:typename:int
git_transaction_remove	extern/libgit2/src/transaction.c	/^int git_transaction_remove(git_transaction *tx, const char *refname)$/;"	f	typeref:typename:int
git_transaction_set_reflog	extern/libgit2/src/transaction.c	/^int git_transaction_set_reflog(git_transaction *tx, const char *refname, const git_reflog *reflo/;"	f	typeref:typename:int
git_transaction_set_symbolic_target	extern/libgit2/src/transaction.c	/^int git_transaction_set_symbolic_target(git_transaction *tx, const char *refname, const char *ta/;"	f	typeref:typename:int
git_transaction_set_target	extern/libgit2/src/transaction.c	/^int git_transaction_set_target(git_transaction *tx, const char *refname, const git_oid *target, /;"	f	typeref:typename:int
git_transfer_progress	extern/libgit2/include/git2/deprecated.h	/^typedef git_indexer_progress git_transfer_progress;$/;"	t	typeref:typename:git_indexer_progress
git_transfer_progress_cb	extern/libgit2/include/git2/deprecated.h	/^typedef git_indexer_progress_cb git_transfer_progress_cb;$/;"	t	typeref:typename:git_indexer_progress_cb
git_transport	extern/libgit2/include/git2/sys/transport.h	/^struct git_transport {$/;"	s
git_transport	extern/libgit2/include/git2/types.h	/^typedef struct git_transport git_transport;$/;"	t	typeref:struct:git_transport
git_transport_cb	extern/libgit2/include/git2/transport.h	/^typedef int GIT_CALLBACK(git_transport_cb)(git_transport **out, git_remote *owner, void *param);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_transport ** out,git_remote * owner,void * param)
git_transport_certificate_check_cb	extern/libgit2/include/git2/cert.h	/^typedef int GIT_CALLBACK(git_transport_certificate_check_cb)(git_cert *cert, int valid, const ch/;"	t	typeref:typename:int GIT_CALLBACK ()(git_cert * cert,int valid,const char * host,void * payload)
git_transport_flags_t	extern/libgit2/include/git2/sys/transport.h	/^} git_transport_flags_t;$/;"	t	typeref:enum:__anon34648bcf0103
git_transport_init	extern/libgit2/src/transport.c	/^int git_transport_init(git_transport *opts, unsigned int version)$/;"	f	typeref:typename:int
git_transport_local	extern/libgit2/src/transports/local.c	/^int git_transport_local(git_transport **out, git_remote *owner, void *param)$/;"	f	typeref:typename:int
git_transport_message_cb	extern/libgit2/include/git2/transport.h	/^typedef int GIT_CALLBACK(git_transport_message_cb)(const char *str, int len, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * str,int len,void * payload)
git_transport_new	extern/libgit2/src/transport.c	/^int git_transport_new(git_transport **out, git_remote *owner, const char *url)$/;"	f	typeref:typename:int
git_transport_register	extern/libgit2/src/transport.c	/^int git_transport_register($/;"	f	typeref:typename:int
git_transport_smart	extern/libgit2/src/transports/smart.c	/^int git_transport_smart(git_transport **out, git_remote *owner, void *param)$/;"	f	typeref:typename:int
git_transport_smart_certificate_check	extern/libgit2/src/transports/smart.c	/^int git_transport_smart_certificate_check(git_transport *transport, git_cert *cert, int valid, c/;"	f	typeref:typename:int
git_transport_smart_credentials	extern/libgit2/src/transports/smart.c	/^int git_transport_smart_credentials(git_cred **out, git_transport *transport, const char *user, /;"	f	typeref:typename:int
git_transport_smart_proxy_options	extern/libgit2/src/transports/smart.c	/^int git_transport_smart_proxy_options(git_proxy_options *out, git_transport *transport)$/;"	f	typeref:typename:int
git_transport_ssh_global_init	extern/libgit2/src/transports/ssh.c	/^int git_transport_ssh_global_init(void)$/;"	f	typeref:typename:int
git_transport_ssh_with_paths	extern/libgit2/src/transports/ssh.c	/^int git_transport_ssh_with_paths(git_transport **out, git_remote *owner, void *payload)$/;"	f	typeref:typename:int
git_transport_unregister	extern/libgit2/src/transport.c	/^int git_transport_unregister(const char *scheme)$/;"	f	typeref:typename:int
git_tree	extern/libgit2/include/git2/types.h	/^typedef struct git_tree git_tree;$/;"	t	typeref:struct:git_tree
git_tree	extern/libgit2/src/tree.h	/^struct git_tree {$/;"	s
git_tree__free	extern/libgit2/src/tree.c	/^void git_tree__free(void *_tree)$/;"	f	typeref:typename:void
git_tree__parse	extern/libgit2/src/tree.c	/^int git_tree__parse(void *_tree, git_odb_object *odb_obj)$/;"	f	typeref:typename:int
git_tree__parse_raw	extern/libgit2/src/tree.c	/^int git_tree__parse_raw(void *_tree, const char *data, size_t size)$/;"	f	typeref:typename:int
git_tree__write_index	extern/libgit2/src/tree.c	/^int git_tree__write_index($/;"	f	typeref:typename:int
git_tree_cache	extern/libgit2/src/tree-cache.h	/^typedef struct git_tree_cache {$/;"	s
git_tree_cache	extern/libgit2/src/tree-cache.h	/^} git_tree_cache;$/;"	t	typeref:struct:git_tree_cache
git_tree_cache_get	extern/libgit2/src/tree-cache.c	/^const git_tree_cache *git_tree_cache_get(const git_tree_cache *tree, const char *path)$/;"	f	typeref:typename:const git_tree_cache *
git_tree_cache_invalidate_path	extern/libgit2/src/tree-cache.c	/^void git_tree_cache_invalidate_path(git_tree_cache *tree, const char *path)$/;"	f	typeref:typename:void
git_tree_cache_new	extern/libgit2/src/tree-cache.c	/^int git_tree_cache_new(git_tree_cache **out, const char *name, git_pool *pool)$/;"	f	typeref:typename:int
git_tree_cache_read	extern/libgit2/src/tree-cache.c	/^int git_tree_cache_read(git_tree_cache **tree, const char *buffer, size_t buffer_size, git_pool /;"	f	typeref:typename:int
git_tree_cache_read_tree	extern/libgit2/src/tree-cache.c	/^int git_tree_cache_read_tree(git_tree_cache **out, const git_tree *tree, git_pool *pool)$/;"	f	typeref:typename:int
git_tree_cache_write	extern/libgit2/src/tree-cache.c	/^int git_tree_cache_write(git_buf *out, git_tree_cache *tree)$/;"	f	typeref:typename:int
git_tree_create_updated	extern/libgit2/src/tree.c	/^int git_tree_create_updated(git_oid *out, git_repository *repo, git_tree *baseline, size_t nupda/;"	f	typeref:typename:int
git_tree_dup	extern/libgit2/src/object_api.c	/^int git_tree_dup(git_tree **out, git_tree *obj)$/;"	f	typeref:typename:int
git_tree_entry	extern/libgit2/include/git2/types.h	/^typedef struct git_tree_entry git_tree_entry;$/;"	t	typeref:struct:git_tree_entry
git_tree_entry	extern/libgit2/src/tree.h	/^struct git_tree_entry {$/;"	s
git_tree_entry__is_tree	extern/libgit2/src/tree.h	/^GIT_INLINE(bool) git_tree_entry__is_tree(const struct git_tree_entry *e)$/;"	f	typeref:typename:bool
git_tree_entry_byid	extern/libgit2/src/tree.c	/^const git_tree_entry *git_tree_entry_byid($/;"	f	typeref:typename:const git_tree_entry *
git_tree_entry_byindex	extern/libgit2/src/tree.c	/^const git_tree_entry *git_tree_entry_byindex($/;"	f	typeref:typename:const git_tree_entry *
git_tree_entry_byname	extern/libgit2/src/tree.c	/^const git_tree_entry *git_tree_entry_byname($/;"	f	typeref:typename:const git_tree_entry *
git_tree_entry_bypath	extern/libgit2/src/tree.c	/^int git_tree_entry_bypath($/;"	f	typeref:typename:int
git_tree_entry_cmp	extern/libgit2/src/tree.c	/^int git_tree_entry_cmp(const git_tree_entry *e1, const git_tree_entry *e2)$/;"	f	typeref:typename:int
git_tree_entry_dup	extern/libgit2/src/tree.c	/^int git_tree_entry_dup(git_tree_entry **dest, const git_tree_entry *source)$/;"	f	typeref:typename:int
git_tree_entry_filemode	extern/libgit2/src/tree.c	/^git_filemode_t git_tree_entry_filemode(const git_tree_entry *entry)$/;"	f	typeref:typename:git_filemode_t
git_tree_entry_filemode_raw	extern/libgit2/src/tree.c	/^git_filemode_t git_tree_entry_filemode_raw(const git_tree_entry *entry)$/;"	f	typeref:typename:git_filemode_t
git_tree_entry_free	extern/libgit2/src/tree.c	/^void git_tree_entry_free(git_tree_entry *entry)$/;"	f	typeref:typename:void
git_tree_entry_id	extern/libgit2/src/tree.c	/^const git_oid *git_tree_entry_id(const git_tree_entry *entry)$/;"	f	typeref:typename:const git_oid *
git_tree_entry_name	extern/libgit2/src/tree.c	/^const char *git_tree_entry_name(const git_tree_entry *entry)$/;"	f	typeref:typename:const char *
git_tree_entry_to_object	extern/libgit2/src/tree.c	/^int git_tree_entry_to_object($/;"	f	typeref:typename:int
git_tree_entry_type	extern/libgit2/src/tree.c	/^git_object_t git_tree_entry_type(const git_tree_entry *entry)$/;"	f	typeref:typename:git_object_t
git_tree_entrycount	extern/libgit2/src/tree.c	/^size_t git_tree_entrycount(const git_tree *tree)$/;"	f	typeref:typename:size_t
git_tree_free	extern/libgit2/src/object_api.c	/^void git_tree_free(git_tree *obj)$/;"	f	typeref:typename:void
git_tree_id	extern/libgit2/src/object_api.c	/^const git_oid *git_tree_id(const git_tree *obj)$/;"	f	typeref:typename:const git_oid *
git_tree_lookup	extern/libgit2/src/object_api.c	/^int git_tree_lookup(git_tree **out, git_repository *repo, const git_oid *id)$/;"	f	typeref:typename:int
git_tree_lookup_prefix	extern/libgit2/src/object_api.c	/^int git_tree_lookup_prefix(git_tree **out, git_repository *repo, const git_oid *id, size_t len)$/;"	f	typeref:typename:int
git_tree_owner	extern/libgit2/src/object_api.c	/^git_repository *git_tree_owner(const git_tree *obj)$/;"	f	typeref:typename:git_repository *
git_tree_update	extern/libgit2/include/git2/tree.h	/^} git_tree_update;$/;"	t	typeref:struct:__anon97f705e40308
git_tree_update_t	extern/libgit2/include/git2/tree.h	/^} git_tree_update_t;$/;"	t	typeref:enum:__anon97f705e40203
git_tree_walk	extern/libgit2/src/tree.c	/^int git_tree_walk($/;"	f	typeref:typename:int
git_treebuilder	extern/libgit2/include/git2/types.h	/^typedef struct git_treebuilder git_treebuilder;$/;"	t	typeref:struct:git_treebuilder
git_treebuilder	extern/libgit2/src/tree.h	/^struct git_treebuilder {$/;"	s
git_treebuilder_clear	extern/libgit2/src/tree.c	/^void git_treebuilder_clear(git_treebuilder *bld)$/;"	f	typeref:typename:void
git_treebuilder_entrycount	extern/libgit2/src/tree.c	/^size_t git_treebuilder_entrycount(git_treebuilder *bld)$/;"	f	typeref:typename:size_t
git_treebuilder_filter	extern/libgit2/src/tree.c	/^void git_treebuilder_filter($/;"	f	typeref:typename:void
git_treebuilder_filter_cb	extern/libgit2/include/git2/tree.h	/^typedef int GIT_CALLBACK(git_treebuilder_filter_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_tree_entry * entry,void * payload)
git_treebuilder_free	extern/libgit2/src/tree.c	/^void git_treebuilder_free(git_treebuilder *bld)$/;"	f	typeref:typename:void
git_treebuilder_get	extern/libgit2/src/tree.c	/^const git_tree_entry *git_treebuilder_get(git_treebuilder *bld, const char *filename)$/;"	f	typeref:typename:const git_tree_entry *
git_treebuilder_insert	extern/libgit2/src/tree.c	/^int git_treebuilder_insert($/;"	f	typeref:typename:int
git_treebuilder_new	extern/libgit2/src/tree.c	/^int git_treebuilder_new($/;"	f	typeref:typename:int
git_treebuilder_remove	extern/libgit2/src/tree.c	/^int git_treebuilder_remove(git_treebuilder *bld, const char *filename)$/;"	f	typeref:typename:int
git_treebuilder_write	extern/libgit2/src/tree.c	/^int git_treebuilder_write(git_oid *oid, git_treebuilder *bld)$/;"	f	typeref:typename:int
git_treebuilder_write_with_buffer	extern/libgit2/src/tree.c	/^int git_treebuilder_write_with_buffer(git_oid *oid, git_treebuilder *bld, git_buf *tree)$/;"	f	typeref:typename:int
git_treewalk_cb	extern/libgit2/include/git2/tree.h	/^typedef int GIT_CALLBACK(git_treewalk_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * root,const git_tree_entry * entry,void * payload)
git_treewalk_mode	extern/libgit2/include/git2/tree.h	/^} git_treewalk_mode;$/;"	t	typeref:enum:__anon97f705e40103
git_url_resolve_cb	extern/libgit2/include/git2/remote.h	/^typedef int GIT_CALLBACK(git_url_resolve_cb)(git_buf *url_resolved, const char *url, int directi/;"	t	typeref:typename:int GIT_CALLBACK ()(git_buf * url_resolved,const char * url,int direction,void * payload)
git_vector	extern/libgit2/script/user_model.c	/^typedef struct git_vector {$/;"	s	file:
git_vector	extern/libgit2/script/user_model.c	/^} git_vector;$/;"	t	typeref:struct:git_vector	file:
git_vector	extern/libgit2/src/vector.h	/^typedef struct git_vector {$/;"	s
git_vector	extern/libgit2/src/vector.h	/^} git_vector;$/;"	t	typeref:struct:git_vector
git_vector_bsearch	extern/libgit2/src/vector.h	/^GIT_INLINE(int) git_vector_bsearch(size_t *at_pos, git_vector *v, const void *key)$/;"	f	typeref:typename:int
git_vector_bsearch2	extern/libgit2/src/vector.c	/^int git_vector_bsearch2($/;"	f	typeref:typename:int
git_vector_clear	extern/libgit2/src/vector.c	/^void git_vector_clear(git_vector *v)$/;"	f	typeref:typename:void
git_vector_cmp	extern/libgit2/src/vector.h	/^typedef int (*git_vector_cmp)(const void *, const void *);$/;"	t	typeref:typename:int (*)(const void *,const void *)
git_vector_detach	extern/libgit2/src/vector.c	/^void **git_vector_detach(size_t *size, size_t *asize, git_vector *v)$/;"	f	typeref:typename:void **
git_vector_dup	extern/libgit2/src/vector.c	/^int git_vector_dup(git_vector *v, const git_vector *src, git_vector_cmp cmp)$/;"	f	typeref:typename:int
git_vector_foreach	extern/libgit2/src/vector.h	/^#define git_vector_foreach(/;"	d
git_vector_free	extern/libgit2/src/vector.c	/^void git_vector_free(git_vector *v)$/;"	f	typeref:typename:void
git_vector_free_deep	extern/libgit2/src/vector.c	/^void git_vector_free_deep(git_vector *v)$/;"	f	typeref:typename:void
git_vector_get	extern/libgit2/src/vector.h	/^GIT_INLINE(void *) git_vector_get(const git_vector *v, size_t position)$/;"	f	typeref:typename:void *
git_vector_init	extern/libgit2/src/vector.c	/^int git_vector_init(git_vector *v, size_t initial_size, git_vector_cmp cmp)$/;"	f	typeref:typename:int
git_vector_insert	extern/libgit2/script/user_model.c	/^int git_vector_insert(git_vector *v, void *element)$/;"	f	typeref:typename:int
git_vector_insert	extern/libgit2/src/vector.c	/^int git_vector_insert(git_vector *v, void *element)$/;"	f	typeref:typename:int
git_vector_insert_null	extern/libgit2/src/vector.c	/^int git_vector_insert_null(git_vector *v, size_t idx, size_t insert_len)$/;"	f	typeref:typename:int
git_vector_insert_sorted	extern/libgit2/src/vector.c	/^int git_vector_insert_sorted($/;"	f	typeref:typename:int
git_vector_is_sorted	extern/libgit2/src/vector.h	/^#define git_vector_is_sorted(/;"	d
git_vector_last	extern/libgit2/src/vector.h	/^GIT_INLINE(void *) git_vector_last(const git_vector *v)$/;"	f	typeref:typename:void *
git_vector_length	extern/libgit2/src/vector.h	/^GIT_INLINE(size_t) git_vector_length(const git_vector *v)$/;"	f	typeref:typename:size_t
git_vector_pop	extern/libgit2/src/vector.c	/^void git_vector_pop(git_vector *v)$/;"	f	typeref:typename:void
git_vector_remove	extern/libgit2/src/vector.c	/^int git_vector_remove(git_vector *v, size_t idx)$/;"	f	typeref:typename:int
git_vector_remove_matching	extern/libgit2/src/vector.c	/^void git_vector_remove_matching($/;"	f	typeref:typename:void
git_vector_remove_range	extern/libgit2/src/vector.c	/^int git_vector_remove_range(git_vector *v, size_t idx, size_t remove_len)$/;"	f	typeref:typename:int
git_vector_resize_to	extern/libgit2/src/vector.c	/^int git_vector_resize_to(git_vector *v, size_t new_length)$/;"	f	typeref:typename:int
git_vector_reverse	extern/libgit2/src/vector.c	/^void git_vector_reverse(git_vector *v)$/;"	f	typeref:typename:void
git_vector_rforeach	extern/libgit2/src/vector.h	/^#define git_vector_rforeach(/;"	d
git_vector_search	extern/libgit2/src/vector.c	/^int git_vector_search(size_t *at_pos, const git_vector *v, const void *entry)$/;"	f	typeref:typename:int
git_vector_search2	extern/libgit2/src/vector.c	/^int git_vector_search2($/;"	f	typeref:typename:int
git_vector_set	extern/libgit2/src/vector.c	/^int git_vector_set(void **old, git_vector *v, size_t position, void *value)$/;"	f	typeref:typename:int
git_vector_set_cmp	extern/libgit2/src/vector.h	/^GIT_INLINE(void) git_vector_set_cmp(git_vector *v, git_vector_cmp cmp)$/;"	f	typeref:typename:void
git_vector_set_sorted	extern/libgit2/src/vector.h	/^#define git_vector_set_sorted(/;"	d
git_vector_size_hint	extern/libgit2/src/vector.c	/^int git_vector_size_hint(git_vector *v, size_t size_hint)$/;"	f	typeref:typename:int
git_vector_sort	extern/libgit2/src/vector.c	/^void git_vector_sort(git_vector *v)$/;"	f	typeref:typename:void
git_vector_swap	extern/libgit2/src/vector.c	/^void git_vector_swap(git_vector *a, git_vector *b)$/;"	f	typeref:typename:void
git_vector_uniq	extern/libgit2/src/vector.c	/^void git_vector_uniq(git_vector *v, void  (*git_free_cb)(void *))$/;"	f	typeref:typename:void
git_vector_verify_sorted	extern/libgit2/src/vector.c	/^int git_vector_verify_sorted(const git_vector *v)$/;"	f	typeref:typename:int
git_win32__createfile_sharemode	extern/libgit2/src/win32/posix_w32.c	/^unsigned long git_win32__createfile_sharemode =$/;"	v	typeref:typename:unsigned long
git_win32__crtdbg_stacktrace	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^const char *git_win32__crtdbg_stacktrace(int skip, const char *file)$/;"	f	typeref:typename:const char *
git_win32__crtdbg_stacktrace__dump	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^int git_win32__crtdbg_stacktrace__dump($/;"	f	typeref:typename:int
git_win32__crtdbg_stacktrace__row	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^} git_win32__crtdbg_stacktrace__row;$/;"	t	typeref:struct:__anon6890d5050208	file:
git_win32__crtdbg_stacktrace__uid	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^} git_win32__crtdbg_stacktrace__uid;$/;"	t	typeref:struct:__anon6890d5050108	file:
git_win32__crtdbg_stacktrace_cleanup	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^void git_win32__crtdbg_stacktrace_cleanup(void)$/;"	f	typeref:typename:void
git_win32__crtdbg_stacktrace_init	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^void git_win32__crtdbg_stacktrace_init(void)$/;"	f	typeref:typename:void
git_win32__crtdbg_stacktrace_options	extern/libgit2/src/win32/w32_crtdbg_stacktrace.h	/^typedef enum git_win32__crtdbg_stacktrace_options {$/;"	g
git_win32__crtdbg_stacktrace_options	extern/libgit2/src/win32/w32_crtdbg_stacktrace.h	/^} git_win32__crtdbg_stacktrace_options;$/;"	t	typeref:enum:git_win32__crtdbg_stacktrace_options
git_win32__expand_path	extern/libgit2/src/win32/findfile.c	/^static int git_win32__expand_path(_findfile_path *dest, const wchar_t *src)$/;"	f	typeref:typename:int	file:
git_win32__file_attribute_to_stat	extern/libgit2/src/win32/w32_util.c	/^int git_win32__file_attribute_to_stat($/;"	f	typeref:typename:int
git_win32__file_information_to_stat	extern/libgit2/src/win32/w32_util.h	/^GIT_INLINE(void) git_win32__file_information_to_stat($/;"	f	typeref:typename:void
git_win32__filetime_to_timespec	extern/libgit2/src/win32/w32_util.h	/^GIT_INLINE(void) git_win32__filetime_to_timespec($/;"	f	typeref:typename:void
git_win32__find_global_dirs	extern/libgit2/src/win32/findfile.c	/^int git_win32__find_global_dirs(git_buf *out)$/;"	f	typeref:typename:int
git_win32__find_programdata_dirs	extern/libgit2/src/win32/findfile.c	/^int git_win32__find_programdata_dirs(git_buf *out)$/;"	f	typeref:typename:int
git_win32__find_system_dirs	extern/libgit2/src/win32/findfile.c	/^int git_win32__find_system_dirs(git_buf *out, const wchar_t *subdir)$/;"	f	typeref:typename:int
git_win32__find_xdg_dirs	extern/libgit2/src/win32/findfile.c	/^int git_win32__find_xdg_dirs(git_buf *out)$/;"	f	typeref:typename:int
git_win32__findfirstfile_filter	extern/libgit2/src/win32/w32_util.c	/^bool git_win32__findfirstfile_filter(git_win32_path dest, const char *src)$/;"	f	typeref:typename:bool
git_win32__hidden	extern/libgit2/src/win32/w32_util.c	/^int git_win32__hidden(bool *out, const char *path)$/;"	f	typeref:typename:int
git_win32__isalpha	extern/libgit2/src/win32/w32_util.h	/^GIT_INLINE(bool) git_win32__isalpha(wchar_t c)$/;"	f	typeref:typename:bool
git_win32__retries	extern/libgit2/src/win32/posix_w32.c	/^int git_win32__retries = 10;$/;"	v	typeref:typename:int
git_win32__set_hidden	extern/libgit2/src/win32/w32_util.c	/^int git_win32__set_hidden(const char *path, bool hidden)$/;"	f	typeref:typename:int
git_win32__stack	extern/libgit2/src/win32/w32_stack.c	/^int git_win32__stack($/;"	f	typeref:typename:int
git_win32__stack__aux_cb_alloc	extern/libgit2/src/win32/w32_stack.h	/^typedef void (*git_win32__stack__aux_cb_alloc)(unsigned int *aux_id);$/;"	t	typeref:typename:void (*)(unsigned int * aux_id)
git_win32__stack__aux_cb_lookup	extern/libgit2/src/win32/w32_stack.h	/^typedef void (*git_win32__stack__aux_cb_lookup)(unsigned int aux_id, char *aux_msg, size_t aux_m/;"	t	typeref:typename:void (*)(unsigned int aux_id,char * aux_msg,size_t aux_msg_len)
git_win32__stack__raw_data	extern/libgit2/src/win32/w32_stack.h	/^} git_win32__stack__raw_data;$/;"	t	typeref:struct:__anon991580660108
git_win32__stack__set_aux_cb	extern/libgit2/src/win32/w32_stack.c	/^int git_win32__stack__set_aux_cb($/;"	f	typeref:typename:int
git_win32__stack_capture	extern/libgit2/src/win32/w32_stack.c	/^int git_win32__stack_capture(git_win32__stack__raw_data *pdata, int skip)$/;"	f	typeref:typename:int
git_win32__stack_cleanup	extern/libgit2/src/win32/w32_stack.c	/^void git_win32__stack_cleanup(void)$/;"	f	typeref:typename:void
git_win32__stack_compare	extern/libgit2/src/win32/w32_stack.c	/^int git_win32__stack_compare($/;"	f	typeref:typename:int
git_win32__stack_format	extern/libgit2/src/win32/w32_stack.c	/^int git_win32__stack_format($/;"	f	typeref:typename:int
git_win32__stack_init	extern/libgit2/src/win32/w32_stack.c	/^void git_win32__stack_init(void)$/;"	f	typeref:typename:void
git_win32__stat_init	extern/libgit2/src/win32/w32_util.h	/^GIT_INLINE(void) git_win32__stat_init($/;"	f	typeref:typename:void
git_win32__threadproc	extern/libgit2/src/win32/thread.c	/^static DWORD WINAPI git_win32__threadproc(LPVOID lpParameter)$/;"	f	typeref:typename:DWORD WINAPI	file:
git_win32__timeval_to_filetime	extern/libgit2/src/win32/w32_util.h	/^GIT_INLINE(void) git_win32__timeval_to_filetime($/;"	f	typeref:typename:void
git_win32_crtdbg_init_allocator	extern/libgit2/src/allocators/win32_crtdbg.c	/^int git_win32_crtdbg_init_allocator(git_allocator *allocator)$/;"	f	typeref:typename:int
git_win32_get_error_message	extern/libgit2/src/win32/error.c	/^char *git_win32_get_error_message(DWORD error_code)$/;"	f	typeref:typename:char *
git_win32_path	extern/libgit2/src/win32/w32_common.h	/^typedef wchar_t git_win32_path[GIT_WIN_PATH_UTF16];$/;"	t	typeref:typename:wchar_t[GIT_WIN_PATH_UTF16]
git_win32_path_8dot3_name	extern/libgit2/src/win32/path_w32.c	/^char *git_win32_path_8dot3_name(const char *path)$/;"	f	typeref:typename:char *
git_win32_path__cwd	extern/libgit2/src/win32/path_w32.c	/^int git_win32_path__cwd(wchar_t *out, size_t len)$/;"	f	typeref:typename:int
git_win32_path_canonicalize	extern/libgit2/src/win32/path_w32.c	/^int git_win32_path_canonicalize(git_win32_path path)$/;"	f	typeref:typename:int
git_win32_path_from_utf8	extern/libgit2/src/win32/path_w32.c	/^int git_win32_path_from_utf8(git_win32_path out, const char *src)$/;"	f	typeref:typename:int
git_win32_path_readlink_w	extern/libgit2/src/win32/path_w32.c	/^int git_win32_path_readlink_w(git_win32_path dest, const git_win32_path path)$/;"	f	typeref:typename:int
git_win32_path_remove_namespace	extern/libgit2/src/win32/path_w32.c	/^size_t git_win32_path_remove_namespace(wchar_t *str, size_t len)$/;"	f	typeref:typename:size_t
git_win32_path_to_utf8	extern/libgit2/src/win32/path_w32.c	/^int git_win32_path_to_utf8(git_win32_utf8_path dest, const wchar_t *src)$/;"	f	typeref:typename:int
git_win32_path_trim_end	extern/libgit2/src/win32/path_w32.c	/^size_t git_win32_path_trim_end(wchar_t *str, size_t len)$/;"	f	typeref:typename:size_t
git_win32_utf8_path	extern/libgit2/src/win32/w32_common.h	/^typedef char git_win32_utf8_path[GIT_WIN_PATH_UTF8];$/;"	t	typeref:typename:char[GIT_WIN_PATH_UTF8]
git_worktree	extern/libgit2/include/git2/types.h	/^typedef struct git_worktree git_worktree;$/;"	t	typeref:struct:git_worktree
git_worktree	extern/libgit2/src/worktree.h	/^struct git_worktree {$/;"	s
git_worktree__read_link	extern/libgit2/src/worktree.c	/^char *git_worktree__read_link(const char *base, const char *file)$/;"	f	typeref:typename:char *
git_worktree_add	extern/libgit2/src/worktree.c	/^int git_worktree_add(git_worktree **out, git_repository *repo,$/;"	f	typeref:typename:int
git_worktree_add_init_options	extern/libgit2/src/worktree.c	/^int git_worktree_add_init_options(git_worktree_add_options *opts,$/;"	f	typeref:typename:int
git_worktree_add_options	extern/libgit2/include/git2/worktree.h	/^typedef struct git_worktree_add_options {$/;"	s
git_worktree_add_options	extern/libgit2/include/git2/worktree.h	/^} git_worktree_add_options;$/;"	t	typeref:struct:git_worktree_add_options
git_worktree_add_options_init	extern/libgit2/src/worktree.c	/^int git_worktree_add_options_init(git_worktree_add_options *opts,$/;"	f	typeref:typename:int
git_worktree_free	extern/libgit2/src/worktree.c	/^void git_worktree_free(git_worktree *wt)$/;"	f	typeref:typename:void
git_worktree_is_locked	extern/libgit2/src/worktree.c	/^int git_worktree_is_locked(git_buf *reason, const git_worktree *wt)$/;"	f	typeref:typename:int
git_worktree_is_prunable	extern/libgit2/src/worktree.c	/^int git_worktree_is_prunable(git_worktree *wt,$/;"	f	typeref:typename:int
git_worktree_list	extern/libgit2/src/worktree.c	/^int git_worktree_list(git_strarray *wts, git_repository *repo)$/;"	f	typeref:typename:int
git_worktree_lock	extern/libgit2/src/worktree.c	/^int git_worktree_lock(git_worktree *wt, const char *reason)$/;"	f	typeref:typename:int
git_worktree_lookup	extern/libgit2/src/worktree.c	/^int git_worktree_lookup(git_worktree **out, git_repository *repo, const char *name)$/;"	f	typeref:typename:int
git_worktree_name	extern/libgit2/src/worktree.c	/^const char *git_worktree_name(const git_worktree *wt)$/;"	f	typeref:typename:const char *
git_worktree_open_from_repository	extern/libgit2/src/worktree.c	/^int git_worktree_open_from_repository(git_worktree **out, git_repository *repo)$/;"	f	typeref:typename:int
git_worktree_path	extern/libgit2/src/worktree.c	/^const char *git_worktree_path(const git_worktree *wt)$/;"	f	typeref:typename:const char *
git_worktree_prune	extern/libgit2/src/worktree.c	/^int git_worktree_prune(git_worktree *wt,$/;"	f	typeref:typename:int
git_worktree_prune_options	extern/libgit2/include/git2/worktree.h	/^typedef struct git_worktree_prune_options {$/;"	s
git_worktree_prune_options	extern/libgit2/include/git2/worktree.h	/^} git_worktree_prune_options;$/;"	t	typeref:struct:git_worktree_prune_options
git_worktree_prune_options_init	extern/libgit2/src/worktree.c	/^int git_worktree_prune_options_init($/;"	f	typeref:typename:int
git_worktree_prune_t	extern/libgit2/include/git2/worktree.h	/^} git_worktree_prune_t;$/;"	t	typeref:enum:__anon46261b870103
git_worktree_pruneinit_options	extern/libgit2/src/worktree.c	/^int git_worktree_pruneinit_options(git_worktree_prune_options *opts,$/;"	f	typeref:typename:int
git_worktree_unlock	extern/libgit2/src/worktree.c	/^int git_worktree_unlock(git_worktree *wt)$/;"	f	typeref:typename:int
git_worktree_validate	extern/libgit2/src/worktree.c	/^int git_worktree_validate(const git_worktree *wt)$/;"	f	typeref:typename:int
git_writestream	extern/libgit2/include/git2/types.h	/^struct git_writestream {$/;"	s
git_writestream	extern/libgit2/include/git2/types.h	/^typedef struct git_writestream git_writestream;$/;"	t	typeref:struct:git_writestream
git_xdiff	extern/libgit2/src/diff_xdiff.c	/^static int git_xdiff(git_patch_generated_output *output, git_patch_generated *patch)$/;"	f	typeref:typename:int	file:
git_xdiff_cb	extern/libgit2/src/diff_xdiff.c	/^static int git_xdiff_cb(void *priv, mmbuffer_t *bufs, int len)$/;"	f	typeref:typename:int	file:
git_xdiff_info	extern/libgit2/src/diff_xdiff.c	/^} git_xdiff_info;$/;"	t	typeref:struct:__anon14ca16370108	file:
git_xdiff_init	extern/libgit2/src/diff_xdiff.c	/^void git_xdiff_init(git_xdiff_output *xo, const git_diff_options *opts)$/;"	f	typeref:typename:void
git_xdiff_output	extern/libgit2/src/diff_xdiff.h	/^} git_xdiff_output;$/;"	t	typeref:struct:__anon14ca163c0108
git_xdiff_parse_hunk	extern/libgit2/src/diff_xdiff.c	/^static int git_xdiff_parse_hunk(git_diff_hunk *hunk, const char *header)$/;"	f	typeref:typename:int	file:
git_xdiff_scan_int	extern/libgit2/src/diff_xdiff.c	/^static int git_xdiff_scan_int(const char **str, int *value)$/;"	f	typeref:typename:int	file:
git_zstream	extern/libgit2/src/zstream.h	/^} git_zstream;$/;"	t	typeref:struct:__anonebc673f90208
git_zstream_deflatebuf	extern/libgit2/src/zstream.c	/^int git_zstream_deflatebuf(git_buf *out, const void *in, size_t in_len)$/;"	f	typeref:typename:int
git_zstream_done	extern/libgit2/src/zstream.c	/^bool git_zstream_done(git_zstream *zstream)$/;"	f	typeref:typename:bool
git_zstream_free	extern/libgit2/src/zstream.c	/^void git_zstream_free(git_zstream *zstream)$/;"	f	typeref:typename:void
git_zstream_get_output	extern/libgit2/src/zstream.c	/^int git_zstream_get_output(void *out, size_t *out_len, git_zstream *zstream)$/;"	f	typeref:typename:int
git_zstream_get_output_chunk	extern/libgit2/src/zstream.c	/^int git_zstream_get_output_chunk($/;"	f	typeref:typename:int
git_zstream_inflatebuf	extern/libgit2/src/zstream.c	/^int git_zstream_inflatebuf(git_buf *out, const void *in, size_t in_len)$/;"	f	typeref:typename:int
git_zstream_init	extern/libgit2/src/zstream.c	/^int git_zstream_init(git_zstream *zstream, git_zstream_t type)$/;"	f	typeref:typename:int
git_zstream_reset	extern/libgit2/src/zstream.c	/^void git_zstream_reset(git_zstream *zstream)$/;"	f	typeref:typename:void
git_zstream_set_input	extern/libgit2/src/zstream.c	/^int git_zstream_set_input(git_zstream *zstream, const void *in, size_t in_len)$/;"	f	typeref:typename:int
git_zstream_suggest_output_len	extern/libgit2/src/zstream.c	/^size_t git_zstream_suggest_output_len(git_zstream *zstream)$/;"	f	typeref:typename:size_t
git_zstream_t	extern/libgit2/src/zstream.h	/^} git_zstream_t;$/;"	t	typeref:enum:__anonebc673f90103
gitdir	extern/libgit2/examples/init.c	/^	const char *gitdir;$/;"	m	struct:opts	typeref:typename:const char *	file:
gitdir	extern/libgit2/src/repository.h	/^	char *gitdir;$/;"	m	struct:git_repository	typeref:typename:char *
gitdir_path	extern/libgit2/src/worktree.h	/^	char *gitdir_path;$/;"	m	struct:git_worktree	typeref:typename:char *
giterr_clear	extern/libgit2/src/errors.c	/^void giterr_clear(void)$/;"	f	typeref:typename:void
giterr_last	extern/libgit2/src/errors.c	/^const git_error *giterr_last(void)$/;"	f	typeref:typename:const git_error *
giterr_set_oom	extern/libgit2/src/errors.c	/^void giterr_set_oom(void)$/;"	f	typeref:typename:void
giterr_set_str	extern/libgit2/src/errors.c	/^void giterr_set_str(int error_class, const char *string)$/;"	f	typeref:typename:void
gitfiles	extern/libgit2/src/path.c	/^} gitfiles[] = {$/;"	v	typeref:typename:const struct __anon7d10f0bb0108[]
gitlink	extern/libgit2/src/repository.h	/^	char *gitlink;$/;"	m	struct:git_repository	typeref:typename:char *
gitlink_path	extern/libgit2/src/worktree.h	/^	char *gitlink_path;$/;"	m	struct:git_worktree	typeref:typename:char *
gitmodules_altnames	extern/libgit2/tests/path/dotgit.c	/^static char *gitmodules_altnames[] = {$/;"	v	typeref:typename:char * []	file:
gitmodules_not_altnames	extern/libgit2/tests/path/dotgit.c	/^static char *gitmodules_not_altnames[] = {$/;"	v	typeref:typename:char * []	file:
gitmodules_snapshot	extern/libgit2/src/submodule.c	/^static int gitmodules_snapshot(git_config **snap, git_repository *repo)$/;"	f	typeref:typename:int	file:
gitno__match_host	extern/libgit2/src/netops.c	/^int gitno__match_host(const char *pattern, const char *host)$/;"	f	typeref:typename:int
gitno_buffer	extern/libgit2/src/netops.h	/^typedef struct gitno_buffer {$/;"	s
gitno_buffer	extern/libgit2/src/netops.h	/^} gitno_buffer;$/;"	t	typeref:struct:gitno_buffer
gitno_buffer_setup_callback	extern/libgit2/src/netops.c	/^void gitno_buffer_setup_callback($/;"	f	typeref:typename:void
gitno_buffer_setup_fromstream	extern/libgit2/src/netops.c	/^void gitno_buffer_setup_fromstream(git_stream *st, gitno_buffer *buf, char *data, size_t len)$/;"	f	typeref:typename:void
gitno_connection_data_handle_redirect	extern/libgit2/src/netops.c	/^int gitno_connection_data_handle_redirect($/;"	f	typeref:typename:int
gitno_consume	extern/libgit2/src/netops.c	/^void gitno_consume(gitno_buffer *buf, const char *ptr)$/;"	f	typeref:typename:void
gitno_consume_n	extern/libgit2/src/netops.c	/^void gitno_consume_n(gitno_buffer *buf, size_t cons)$/;"	f	typeref:typename:void
gitno_recv	extern/libgit2/src/netops.c	/^int gitno_recv(gitno_buffer *buf)$/;"	f	typeref:typename:int
gitno_socket	extern/libgit2/src/netops.h	/^typedef struct gitno_socket {$/;"	s
gitno_socket	extern/libgit2/src/netops.h	/^} gitno_socket;$/;"	t	typeref:struct:gitno_socket
gitno_ssl	extern/libgit2/src/netops.h	/^typedef struct gitno_ssl {$/;"	s
gitno_ssl	extern/libgit2/src/netops.h	/^} gitno_ssl;$/;"	t	typeref:struct:gitno_ssl
gitpath	extern/libgit2/src/refdb_fs.c	/^	char *gitpath;$/;"	m	struct:refdb_fs_backend	typeref:typename:char *	file:
gitserver_stream	extern/libgit2/src/transports/http.c	/^	git_stream *gitserver_stream;$/;"	m	struct:__anon0458035d0308	typeref:typename:git_stream *	file:
glob	extern/libgit2/src/refdb_fs.c	/^	char *glob;$/;"	m	struct:__anonbd02e2090308	typeref:typename:char *	file:
global_drivers	extern/libgit2/src/diff_driver.c	/^static git_diff_driver global_drivers[3] = {$/;"	v	typeref:typename:git_diff_driver[3]	file:
good_length	extern/libgit2/deps/zlib/deflate.c	/^   ush good_length; \/* reduce lazy search above this match length *\/$/;"	m	struct:config_s	typeref:typename:ush	file:
good_match	extern/libgit2/deps/zlib/deflate.h	/^    uInt good_match;$/;"	m	struct:internal_state	typeref:typename:uInt
grep	extern/libgit2/examples/log.c	/^	const char *grep;$/;"	m	struct:log_options	typeref:typename:const char *	file:
group	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *group;$/;"	m	struct:recurse_check	typeref:typename:const pcre_uchar *
group_init	extern/libgit2/src/xdiff/xdiffi.c	/^static void group_init(xdfile_t *xdf, struct xdlgroup *g)$/;"	f	typeref:typename:void	file:
group_next	extern/libgit2/src/xdiff/xdiffi.c	/^XDL_INLINE(int) group_next(xdfile_t *xdf, struct xdlgroup *g)$/;"	f	typeref:typename:int
group_num	extern/libgit2/deps/pcre/pcre_internal.h	/^  int group_num;$/;"	m	struct:dfa_recursion_info	typeref:typename:int
group_num	extern/libgit2/deps/pcre/pcre_internal.h	/^  unsigned int group_num;         \/* Number of group that was called *\/$/;"	m	struct:recursion_info	typeref:typename:unsigned int
group_previous	extern/libgit2/src/xdiff/xdiffi.c	/^XDL_INLINE(int) group_previous(xdfile_t *xdf, struct xdlgroup *g)$/;"	f	typeref:typename:int
group_slide_down	extern/libgit2/src/xdiff/xdiffi.c	/^static int group_slide_down(xdfile_t *xdf, struct xdlgroup *g, long flags)$/;"	f	typeref:typename:int	file:
group_slide_up	extern/libgit2/src/xdiff/xdiffi.c	/^static int group_slide_up(xdfile_t *xdf, struct xdlgroup *g, long flags)$/;"	f	typeref:typename:int	file:
gss_context	extern/libgit2/src/transports/auth_negotiate.c	/^	gss_ctx_id_t gss_context;$/;"	m	struct:__anon8bc72ece0108	typeref:typename:gss_ctx_id_t	file:
guess	extern/libgit2/src/sysdir.c	/^	int (*guess)(git_buf *out);$/;"	m	struct:git_sysdir__dir	typeref:typename:int (*)(git_buf * out)	file:
guess_buffer_encoding	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_encoding guess_buffer_encoding(const uint8_t* data, size_t size) {$/;"	f	typeref:typename:PUGI__FN xml_encoding
guilty	extern/libgit2/src/blame.h	/^	bool guilty;$/;"	m	struct:git_blame__entry	typeref:typename:bool
gzFile	extern/libgit2/deps/zlib/zconf.h	/^#    define gzFile /;"	d
gzFile	extern/libgit2/deps/zlib/zlib.h	/^typedef struct gzFile_s *gzFile;    \/* semi-opaque gzip file descriptor *\/$/;"	t	typeref:struct:gzFile_s *
gzFile_s	extern/libgit2/deps/zlib/zlib.h	/^struct gzFile_s {$/;"	s
gz_error	extern/libgit2/deps/zlib/zconf.h	/^#    define gz_error /;"	d
gz_header	extern/libgit2/deps/zlib/zconf.h	/^#  define gz_header /;"	d
gz_header	extern/libgit2/deps/zlib/zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	extern/libgit2/deps/zlib/zconf.h	/^#  define gz_header_s /;"	d
gz_header_s	extern/libgit2/deps/zlib/zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_headerp	extern/libgit2/deps/zlib/zconf.h	/^#  define gz_headerp /;"	d
gz_headerp	extern/libgit2/deps/zlib/zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t	typeref:typename:gz_header FAR *
gz_intmax	extern/libgit2/deps/zlib/zconf.h	/^#    define gz_intmax /;"	d
gz_state	extern/libgit2/deps/zlib/gzguts.h	/^} gz_state;$/;"	t	typeref:struct:__anon7558639b0108
gz_statep	extern/libgit2/deps/zlib/gzguts.h	/^typedef gz_state FAR *gz_statep;$/;"	t	typeref:typename:gz_state FAR *
gz_strwinerror	extern/libgit2/deps/zlib/zconf.h	/^#    define gz_strwinerror /;"	d
gzbuffer	extern/libgit2/deps/zlib/zconf.h	/^#    define gzbuffer /;"	d
gzclearerr	extern/libgit2/deps/zlib/zconf.h	/^#    define gzclearerr /;"	d
gzclose	extern/libgit2/deps/zlib/zconf.h	/^#    define gzclose /;"	d
gzclose_r	extern/libgit2/deps/zlib/zconf.h	/^#    define gzclose_r /;"	d
gzclose_w	extern/libgit2/deps/zlib/zconf.h	/^#    define gzclose_w /;"	d
gzdirect	extern/libgit2/deps/zlib/zconf.h	/^#    define gzdirect /;"	d
gzdopen	extern/libgit2/deps/zlib/zconf.h	/^#    define gzdopen /;"	d
gzeof	extern/libgit2/deps/zlib/zconf.h	/^#    define gzeof /;"	d
gzerror	extern/libgit2/deps/zlib/zconf.h	/^#    define gzerror /;"	d
gzflush	extern/libgit2/deps/zlib/zconf.h	/^#    define gzflush /;"	d
gzfread	extern/libgit2/deps/zlib/zconf.h	/^#    define gzfread /;"	d
gzfwrite	extern/libgit2/deps/zlib/zconf.h	/^#    define gzfwrite /;"	d
gzgetc	extern/libgit2/deps/zlib/zconf.h	/^#    define gzgetc /;"	d
gzgetc	extern/libgit2/deps/zlib/zlib.h	/^#  define gzgetc(/;"	d
gzgetc_	extern/libgit2/deps/zlib/zconf.h	/^#    define gzgetc_ /;"	d
gzgets	extern/libgit2/deps/zlib/zconf.h	/^#    define gzgets /;"	d
gzhead	extern/libgit2/deps/zlib/deflate.h	/^    gz_headerp  gzhead;  \/* gzip header information to write *\/$/;"	m	struct:internal_state	typeref:typename:gz_headerp
gzindex	extern/libgit2/deps/zlib/deflate.h	/^    ulg   gzindex;       \/* where in extra, name, or comment *\/$/;"	m	struct:internal_state	typeref:typename:ulg
gzoffset	extern/libgit2/deps/zlib/zconf.h	/^#    define gzoffset /;"	d
gzoffset	extern/libgit2/deps/zlib/zlib.h	/^#    define gzoffset /;"	d
gzoffset64	extern/libgit2/deps/zlib/zconf.h	/^#    define gzoffset64 /;"	d
gzopen	extern/libgit2/deps/zlib/zconf.h	/^#    define gzopen /;"	d
gzopen	extern/libgit2/deps/zlib/zlib.h	/^#    define gzopen /;"	d
gzopen64	extern/libgit2/deps/zlib/zconf.h	/^#    define gzopen64 /;"	d
gzopen_w	extern/libgit2/deps/zlib/zconf.h	/^#      define gzopen_w /;"	d
gzprintf	extern/libgit2/deps/zlib/zconf.h	/^#    define gzprintf /;"	d
gzputc	extern/libgit2/deps/zlib/zconf.h	/^#    define gzputc /;"	d
gzputs	extern/libgit2/deps/zlib/zconf.h	/^#    define gzputs /;"	d
gzread	extern/libgit2/deps/zlib/zconf.h	/^#    define gzread /;"	d
gzrewind	extern/libgit2/deps/zlib/zconf.h	/^#    define gzrewind /;"	d
gzseek	extern/libgit2/deps/zlib/zconf.h	/^#    define gzseek /;"	d
gzseek	extern/libgit2/deps/zlib/zlib.h	/^#    define gzseek /;"	d
gzseek64	extern/libgit2/deps/zlib/zconf.h	/^#    define gzseek64 /;"	d
gzsetparams	extern/libgit2/deps/zlib/zconf.h	/^#    define gzsetparams /;"	d
gztell	extern/libgit2/deps/zlib/zconf.h	/^#    define gztell /;"	d
gztell	extern/libgit2/deps/zlib/zlib.h	/^#    define gztell /;"	d
gztell64	extern/libgit2/deps/zlib/zconf.h	/^#    define gztell64 /;"	d
gzungetc	extern/libgit2/deps/zlib/zconf.h	/^#    define gzungetc /;"	d
gzvprintf	extern/libgit2/deps/zlib/zconf.h	/^#    define gzvprintf /;"	d
gzwrite	extern/libgit2/deps/zlib/zconf.h	/^#    define gzwrite /;"	d
h	extern/libgit2/src/win32/dir.h	/^	HANDLE h;$/;"	m	struct:__anon949726940108	typeref:typename:HANDLE
h1	extern/OpenXLSX/doxy/customdoxygen.css	/^    h1, h2, h3, h4, h5, h6 {$/;"	s
h1	extern/OpenXLSX/doxy/customdoxygen.css	/^h1, h1.groupheader {$/;"	s
h1	extern/OpenXLSX/doxy/customdoxygen.css	/^h1, h2, h3 {$/;"	s
h1	extern/OpenXLSX/doxy/customdoxygen.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h1.glow	extern/OpenXLSX/doxy/customdoxygen.css	/^h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {$/;"	c
h1.groupheader	extern/OpenXLSX/doxy/customdoxygen.css	/^h1, h1.groupheader {$/;"	c
h2	extern/OpenXLSX/doxy/customdoxygen.css	/^    h1, h2, h3, h4, h5, h6 {$/;"	s
h2	extern/OpenXLSX/doxy/customdoxygen.css	/^h1, h2, h3 {$/;"	s
h2	extern/OpenXLSX/doxy/customdoxygen.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h2	extern/OpenXLSX/doxy/customdoxygen.css	/^h2, h2.groupheader {$/;"	s
h2.glow	extern/OpenXLSX/doxy/customdoxygen.css	/^h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {$/;"	c
h2.groupheader	extern/OpenXLSX/doxy/customdoxygen.css	/^h2, h2.groupheader {$/;"	c
h3	extern/OpenXLSX/doxy/customdoxygen.css	/^    h1, h2, h3, h4, h5, h6 {$/;"	s
h3	extern/OpenXLSX/doxy/customdoxygen.css	/^h1, h2, h3 {$/;"	s
h3	extern/OpenXLSX/doxy/customdoxygen.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h3.glow	extern/OpenXLSX/doxy/customdoxygen.css	/^h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {$/;"	c
h3.groupheader	extern/OpenXLSX/doxy/customdoxygen.css	/^h3.groupheader {$/;"	c
h3.version	extern/OpenXLSX/doxy/customdoxygen.css	/^h3.version {$/;"	c
h4	extern/OpenXLSX/doxy/customdoxygen.css	/^    h1, h2, h3, h4, h5, h6 {$/;"	s
h4	extern/OpenXLSX/doxy/customdoxygen.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h4.glow	extern/OpenXLSX/doxy/customdoxygen.css	/^h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {$/;"	c
h5	extern/OpenXLSX/doxy/customdoxygen.css	/^    h1, h2, h3, h4, h5, h6 {$/;"	s
h5	extern/OpenXLSX/doxy/customdoxygen.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h5.glow	extern/OpenXLSX/doxy/customdoxygen.css	/^h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {$/;"	c
h6	extern/OpenXLSX/doxy/customdoxygen.css	/^    h1, h2, h3, h4, h5, h6 {$/;"	s
h6	extern/OpenXLSX/doxy/customdoxygen.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h6.glow	extern/OpenXLSX/doxy/customdoxygen.css	/^h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {$/;"	c
h_C	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_C$/;"	e	enum:header_states	file:
h_CO	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_CO$/;"	e	enum:header_states	file:
h_CON	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_CON$/;"	e	enum:header_states	file:
h_connection	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_connection$/;"	e	enum:header_states	file:
h_connection_close	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_connection_close$/;"	e	enum:header_states	file:
h_connection_keep_alive	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_connection_keep_alive$/;"	e	enum:header_states	file:
h_content_length	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_content_length$/;"	e	enum:header_states	file:
h_general	extern/libgit2/deps/http-parser/http_parser.c	/^  { h_general = 0$/;"	e	enum:header_states	file:
h_matching_connection	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_matching_connection$/;"	e	enum:header_states	file:
h_matching_connection_close	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_matching_connection_close$/;"	e	enum:header_states	file:
h_matching_connection_keep_alive	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_matching_connection_keep_alive$/;"	e	enum:header_states	file:
h_matching_content_length	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_matching_content_length$/;"	e	enum:header_states	file:
h_matching_proxy_connection	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_matching_proxy_connection$/;"	e	enum:header_states	file:
h_matching_transfer_encoding	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_matching_transfer_encoding$/;"	e	enum:header_states	file:
h_matching_transfer_encoding_chunked	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_matching_transfer_encoding_chunked$/;"	e	enum:header_states	file:
h_matching_upgrade	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_matching_upgrade$/;"	e	enum:header_states	file:
h_transfer_encoding	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_transfer_encoding$/;"	e	enum:header_states	file:
h_transfer_encoding_chunked	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_transfer_encoding_chunked$/;"	e	enum:header_states	file:
h_upgrade	extern/libgit2/deps/http-parser/http_parser.c	/^  , h_upgrade$/;"	e	enum:header_states	file:
ha	extern/libgit2/src/xdiff/xdiffi.h	/^	unsigned long const *ha;$/;"	m	struct:s_diffdata	typeref:typename:unsigned long const *
ha	extern/libgit2/src/xdiff/xprepare.c	/^	unsigned long ha;$/;"	m	struct:s_xdlclass	typeref:typename:unsigned long	file:
ha	extern/libgit2/src/xdiff/xtypes.h	/^	unsigned long *ha;$/;"	m	struct:s_xdfile	typeref:typename:unsigned long *
ha	extern/libgit2/src/xdiff/xtypes.h	/^	unsigned long ha;$/;"	m	struct:s_xrecord	typeref:typename:unsigned long
hack_index	extern/libgit2/tests/merge/workdir/dirty.c	/^static void hack_index(char *files[])$/;"	f	typeref:typename:void	file:
had_accept	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL had_accept;                  \/* (*ACCEPT) encountered *\/$/;"	m	struct:compile_data	typeref:typename:BOOL
had_pruneorskip	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL had_pruneorskip;             \/* (*PRUNE) or (*SKIP) encountered *\/$/;"	m	struct:compile_data	typeref:typename:BOOL
halfBase	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^static const UTF32 halfBase = 0x0010000UL;$/;"	v	typeref:typename:const UTF32	file:
halfMask	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^static const UTF32 halfMask = 0x3FFUL;$/;"	v	typeref:typename:const UTF32	file:
halfShift	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^static const int halfShift  = 10; \/* used for shifting by 10 bits *\/$/;"	v	typeref:typename:const int	file:
handle	extern/libgit2/src/hash/sha1/win32.h	/^	HANDLE \/* BCRYPT_ALG_HANDLE *\/ handle;$/;"	m	struct:hash_cng_prov	typeref:typename:HANDLE
handle	extern/libgit2/src/hash/sha1/win32.h	/^	HCRYPTPROV handle;$/;"	m	struct:hash_cryptoapi_prov	typeref:typename:HCRYPTPROV
handle	extern/libgit2/src/path.h	/^	HANDLE handle;$/;"	m	struct:git_path_diriter	typeref:typename:HANDLE
handle_at_syntax	extern/libgit2/src/revparse.c	/^static int handle_at_syntax(git_object **out, git_reference **ref, const char *spec, size_t iden/;"	f	typeref:typename:int	file:
handle_caret_curly_syntax	extern/libgit2/src/revparse.c	/^static int handle_caret_curly_syntax(git_object **out, git_object *obj, const char *curly_braces/;"	f	typeref:typename:int	file:
handle_caret_parent_syntax	extern/libgit2/src/revparse.c	/^static int handle_caret_parent_syntax(git_object **out, git_object *obj, int n)$/;"	f	typeref:typename:int	file:
handle_colon_syntax	extern/libgit2/src/revparse.c	/^static int handle_colon_syntax($/;"	f	typeref:typename:int	file:
handle_grep_syntax	extern/libgit2/src/revparse.c	/^static int handle_grep_syntax(git_object **out, git_repository *repo, const git_oid *spec_oid, c/;"	f	typeref:typename:int	file:
handle_linear_syntax	extern/libgit2/src/revparse.c	/^static int handle_linear_syntax(git_object **out, git_object *obj, int n)$/;"	f	typeref:typename:int	file:
handle_matched_item	extern/libgit2/src/diff_generate.c	/^static int handle_matched_item($/;"	f	typeref:typename:int	file:
handle_next	extern/libgit2/tests/core/dirent.c	/^static void handle_next(git_path_diriter *diriter, walk_data *walk)$/;"	f	typeref:typename:void	file:
handle_unmatched_new_item	extern/libgit2/src/diff_generate.c	/^static int handle_unmatched_new_item($/;"	f	typeref:typename:int	file:
handle_unmatched_old_item	extern/libgit2/src/diff_generate.c	/^static int handle_unmatched_old_item($/;"	f	typeref:typename:int	file:
handle_wc_error	extern/libgit2/src/win32/w32_buffer.c	/^GIT_INLINE(int) handle_wc_error(void)$/;"	f	typeref:typename:int
has_cache	extern/libgit2/src/pack.h	/^	unsigned pack_local:1, pack_keep:1, has_cache:1;$/;"	m	struct:git_pack_file	typeref:typename:unsigned:1
has_common	extern/libgit2/src/xdiff/xhistogram.c	/^		     has_common;$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
has_cr_in_index	extern/libgit2/src/crlf.c	/^static int has_cr_in_index(const git_filter_source *src)$/;"	f	typeref:typename:int	file:
has_declaration	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool has_declaration(xml_node_struct* node) {$/;"	f	typeref:typename:PUGI__FN bool
has_dir_name	extern/libgit2/src/index.c	/^static int has_dir_name(git_index *index,$/;"	f	typeref:typename:int	file:
has_element_node_siblings	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static bool has_element_node_siblings(xml_node_struct* node) {$/;"	f	struct:xml_parser	typeref:typename:bool	file:
has_entry	extern/libgit2/src/indexer.c	/^GIT_INLINE(bool) has_entry(git_indexer *idx, git_oid *id)$/;"	f	typeref:typename:bool
has_file_name	extern/libgit2/src/index.c	/^static int has_file_name(git_index *index,$/;"	f	typeref:typename:int	file:
has_matches	extern/libgit2/src/xdiff/xpatience.c	/^	unsigned long has_matches;$/;"	m	struct:hashmap	typeref:typename:unsigned long	file:
has_nsecs	extern/libgit2/tests/index/nsec.c	/^static bool has_nsecs(void)$/;"	f	typeref:typename:bool	file:
has_reflog	extern/libgit2/src/refdb_fs.c	/^static int has_reflog(git_repository *repo, const char *name)$/;"	f	typeref:typename:int	file:
has_set_som	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL has_set_som;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
has_skip_arg	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL has_skip_arg;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
has_skip_in_assert_back	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL has_skip_in_assert_back;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
has_then	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL has_then;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
hash	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static PUGI__UNSIGNED_OVERFLOW unsigned int hash(const void* key)$/;"	f	class:compact_hash_table	typeref:typename:PUGI__UNSIGNED_OVERFLOW unsigned int	file:
hash	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        compact_hash_table hash;$/;"	m	struct:xml_document_struct	typeref:typename:compact_hash_table	file:
hash	extern/libgit2/src/delta.c	/^	struct index_entry *hash[GIT_FLEX_ARRAY];$/;"	m	struct:git_delta_index	typeref:struct:index_entry * []	file:
hash	extern/libgit2/src/indexer.c	/^	git_oid hash;$/;"	m	struct:git_indexer	typeref:typename:git_oid	file:
hash	extern/libgit2/src/pack-objects.h	/^	unsigned int hash; \/* name hint hash *\/$/;"	m	struct:git_pobject	typeref:typename:unsigned int
hash	extern/libgit2/src/path.c	/^	const char *hash;$/;"	m	struct:__anon7d10f0bb0108	typeref:typename:const char *	file:
hash	extern/libgit2/src/xdiff/xpatience.c	/^		unsigned long hash;$/;"	m	struct:hashmap::entry	typeref:typename:unsigned long	file:
hashMap	extern/NamedType/main.cpp	/^    std::unordered_map<SerialNumber, int> hashMap = { {SerialNumber{"AA11"}, 10}, {SerialNumber{/;"	v	typeref:typename:std::unordered_map<SerialNumber,int>
hash__block	extern/libgit2/src/hash/sha1/generic.c	/^static void hash__block(git_hash_sha1_ctx *ctx, const unsigned int *data)$/;"	f	typeref:typename:void	file:
hash_and_save	extern/libgit2/src/indexer.c	/^static int hash_and_save(git_indexer *idx, git_rawobj *obj, git_off_t entry_start)$/;"	f	typeref:typename:int	file:
hash_bits	extern/libgit2/deps/zlib/deflate.h	/^    uInt  hash_bits;      \/* log2(hash_size) *\/$/;"	m	struct:internal_state	typeref:typename:uInt
hash_cng_ctx	extern/libgit2/src/hash/sha1/win32.h	/^struct hash_cng_ctx {$/;"	s
hash_cng_final	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(int) hash_cng_final(git_oid *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
hash_cng_init	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(int) hash_cng_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
hash_cng_prov	extern/libgit2/src/hash/sha1/win32.h	/^struct hash_cng_prov {$/;"	s
hash_cng_prov_init	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(int) hash_cng_prov_init(void)$/;"	f	typeref:typename:int
hash_cng_prov_shutdown	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(void) hash_cng_prov_shutdown(void)$/;"	f	typeref:typename:void
hash_cng_update	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(int) hash_cng_update(git_hash_sha1_ctx *ctx, const void *_data, size_t len)$/;"	f	typeref:typename:int
hash_cryptoapi_ctx	extern/libgit2/src/hash/sha1/win32.h	/^struct hash_cryptoapi_ctx {$/;"	s
hash_cryptoapi_final	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(int) hash_cryptoapi_final(git_oid *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
hash_cryptoapi_init	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(int) hash_cryptoapi_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
hash_cryptoapi_prov	extern/libgit2/src/hash/sha1/win32.h	/^struct hash_cryptoapi_prov {$/;"	s
hash_cryptoapi_prov_init	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(int) hash_cryptoapi_prov_init()$/;"	f	typeref:typename:int
hash_cryptoapi_prov_shutdown	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(void) hash_cryptoapi_prov_shutdown(void)$/;"	f	typeref:typename:void
hash_cryptoapi_update	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(int) hash_cryptoapi_update(git_hash_sha1_ctx *ctx, const void *_data, size_t len)$/;"	f	typeref:typename:int
hash_ctx	extern/libgit2/include/git2/odb_backend.h	/^	void *hash_ctx;$/;"	m	struct:git_odb_stream	typeref:typename:void *
hash_ctx	extern/libgit2/src/indexer.c	/^	git_hash_ctx hash_ctx;$/;"	m	struct:git_indexer	typeref:typename:git_hash_ctx	file:
hash_ctx_cng_cleanup	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(void) hash_ctx_cng_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
hash_ctx_cng_init	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(int) hash_ctx_cng_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
hash_ctx_cryptoapi_cleanup	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(void) hash_ctx_cryptoapi_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
hash_ctx_cryptoapi_init	extern/libgit2/src/hash/sha1/win32.c	/^GIT_INLINE(int) hash_ctx_cryptoapi_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
hash_data	extern/libgit2/src/hash/sha1/win32.h	/^	hash_win32_cng_hash_data_fn hash_data;$/;"	m	struct:hash_cng_prov	typeref:typename:hash_win32_cng_hash_data_fn
hash_handle	extern/libgit2/src/hash/sha1/win32.h	/^	HANDLE \/* BCRYPT_HASH_HANDLE *\/ hash_handle;$/;"	m	struct:hash_cng_ctx	typeref:typename:HANDLE
hash_handle	extern/libgit2/src/hash/sha1/win32.h	/^	HCRYPTHASH hash_handle;$/;"	m	struct:hash_cryptoapi_ctx	typeref:typename:HCRYPTHASH
hash_header	extern/libgit2/src/indexer.c	/^static int hash_header(git_hash_ctx *ctx, git_off_t len, git_object_t type)$/;"	f	typeref:typename:int	file:
hash_header	extern/libgit2/src/odb.c	/^static int hash_header(git_hash_ctx *ctx, git_off_t size, git_object_t type)$/;"	f	typeref:typename:int	file:
hash_mask	extern/libgit2/deps/zlib/deflate.h	/^    uInt  hash_mask;      \/* hash_size-1 *\/$/;"	m	struct:internal_state	typeref:typename:uInt
hash_mask	extern/libgit2/src/delta.c	/^	unsigned int hash_mask;$/;"	m	struct:git_delta_index	typeref:typename:unsigned int	file:
hash_md5	extern/libgit2/include/git2/cert.h	/^	unsigned char hash_md5[16];$/;"	m	struct:__anon6f6b75620208	typeref:typename:unsigned char[16]
hash_object	extern/libgit2/src/hash/sha1/win32.h	/^	PBYTE hash_object;$/;"	m	struct:hash_cng_ctx	typeref:typename:PBYTE
hash_object_fail	extern/libgit2/tests/object/raw/hash.c	/^static void hash_object_fail(git_oid *oid, git_rawobj *obj)$/;"	f	typeref:typename:void	file:
hash_object_pass	extern/libgit2/tests/object/raw/hash.c	/^static void hash_object_pass(git_oid *oid, git_rawobj *obj)$/;"	f	typeref:typename:void	file:
hash_object_size	extern/libgit2/src/hash/sha1/win32.h	/^	DWORD hash_object_size;$/;"	m	struct:hash_cng_prov	typeref:typename:DWORD
hash_object_stream	extern/libgit2/src/indexer.c	/^static int hash_object_stream(git_indexer*idx, git_packfile_stream *stream)$/;"	f	typeref:typename:int	file:
hash_partially	extern/libgit2/src/indexer.c	/^static void hash_partially(git_indexer *idx, const uint8_t *data, size_t size)$/;"	f	typeref:typename:void	file:
hash_prov	extern/libgit2/src/hash/sha1/win32.c	/^static git_hash_prov hash_prov = {0};$/;"	v	typeref:typename:git_hash_prov	file:
hash_sha1	extern/libgit2/include/git2/cert.h	/^	unsigned char hash_sha1[20];$/;"	m	struct:__anon6f6b75620208	typeref:typename:unsigned char[20]
hash_shift	extern/libgit2/deps/zlib/deflate.h	/^    uInt  hash_shift;$/;"	m	struct:internal_state	typeref:typename:uInt
hash_size	extern/libgit2/deps/zlib/deflate.h	/^    uInt  hash_size;      \/* number of elements in hash table *\/$/;"	m	struct:internal_state	typeref:typename:uInt
hash_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN PUGI__UNSIGNED_OVERFLOW unsigned int hash_string(const char_t* str)$/;"	f	typeref:typename:PUGI__FN PUGI__UNSIGNED_OVERFLOW unsigned int
hash_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN size_t xml_attribute::hash_value() const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN size_t
hash_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN size_t xml_node::hash_value() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN size_t
hash_win32_cng_close_algorithm_provider_fn	extern/libgit2/src/hash/sha1/win32.h	/^typedef NTSTATUS (WINAPI *hash_win32_cng_close_algorithm_provider_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE hAlgorithm,ULONG dwFlags)
hash_win32_cng_create_hash_fn	extern/libgit2/src/hash/sha1/win32.h	/^typedef NTSTATUS (WINAPI *hash_win32_cng_create_hash_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE hAlgorithm,HANDLE * phHash,PUCHAR pbHashObject,ULONG cbHashObject,PUCHAR pbSecret,ULONG cbSecret,ULONG dwFlags)
hash_win32_cng_destroy_hash_fn	extern/libgit2/src/hash/sha1/win32.h	/^typedef NTSTATUS (WINAPI *hash_win32_cng_destroy_hash_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE hHash)
hash_win32_cng_finish_hash_fn	extern/libgit2/src/hash/sha1/win32.h	/^typedef NTSTATUS (WINAPI *hash_win32_cng_finish_hash_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE hHash,PUCHAR pbOutput,ULONG cbOutput,ULONG dwFlags)
hash_win32_cng_get_property_fn	extern/libgit2/src/hash/sha1/win32.h	/^typedef NTSTATUS (WINAPI *hash_win32_cng_get_property_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE hObject,LPCWSTR pszProperty,PUCHAR pbOutput,ULONG cbOutput,ULONG * pcbResult,ULONG dwFlags)
hash_win32_cng_hash_data_fn	extern/libgit2/src/hash/sha1/win32.h	/^typedef NTSTATUS (WINAPI *hash_win32_cng_hash_data_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE hHash,PUCHAR pbInput,ULONG cbInput,ULONG dwFlags)
hash_win32_cng_open_algorithm_provider_fn	extern/libgit2/src/hash/sha1/win32.h	/^typedef NTSTATUS (WINAPI *hash_win32_cng_open_algorithm_provider_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE * phAlgorithm,LPCWSTR pszAlgId,LPCWSTR pszImplementation,DWORD dwFlags)
hash_win32_prov_type	extern/libgit2/src/hash/sha1/win32.h	/^enum hash_win32_prov_type {$/;"	g
hashmap	extern/libgit2/src/xdiff/xpatience.c	/^struct hashmap {$/;"	s	file:
hashsig_add_hashes	extern/libgit2/src/hashsig.c	/^static int hashsig_add_hashes($/;"	f	typeref:typename:int	file:
hashsig_alloc	extern/libgit2/src/hashsig.c	/^static git_hashsig *hashsig_alloc(git_hashsig_option_t opts)$/;"	f	typeref:typename:git_hashsig *	file:
hashsig_cmp	extern/libgit2/src/hashsig.c	/^typedef int (*hashsig_cmp)(const void *a, const void *b, void *);$/;"	t	typeref:typename:int (*)(const void * a,const void * b,void *)	file:
hashsig_cmp_max	extern/libgit2/src/hashsig.c	/^static int hashsig_cmp_max(const void *a, const void *b, void *payload)$/;"	f	typeref:typename:int	file:
hashsig_cmp_min	extern/libgit2/src/hashsig.c	/^static int hashsig_cmp_min(const void *a, const void *b, void *payload)$/;"	f	typeref:typename:int	file:
hashsig_finalize_hashes	extern/libgit2/src/hashsig.c	/^static int hashsig_finalize_hashes(git_hashsig *sig)$/;"	f	typeref:typename:int	file:
hashsig_heap	extern/libgit2/src/hashsig.c	/^} hashsig_heap;$/;"	t	typeref:struct:__anonbb1957950108	file:
hashsig_heap_compare	extern/libgit2/src/hashsig.c	/^static int hashsig_heap_compare(const hashsig_heap *a, const hashsig_heap *b)$/;"	f	typeref:typename:int	file:
hashsig_heap_down	extern/libgit2/src/hashsig.c	/^static void hashsig_heap_down(hashsig_heap *h, int el)$/;"	f	typeref:typename:void	file:
hashsig_heap_init	extern/libgit2/src/hashsig.c	/^static void hashsig_heap_init(hashsig_heap *h, hashsig_cmp cmp)$/;"	f	typeref:typename:void	file:
hashsig_heap_insert	extern/libgit2/src/hashsig.c	/^static void hashsig_heap_insert(hashsig_heap *h, hashsig_t val)$/;"	f	typeref:typename:void	file:
hashsig_heap_sort	extern/libgit2/src/hashsig.c	/^static void hashsig_heap_sort(hashsig_heap *h)$/;"	f	typeref:typename:void	file:
hashsig_heap_up	extern/libgit2/src/hashsig.c	/^static void hashsig_heap_up(hashsig_heap *h, int el)$/;"	f	typeref:typename:void	file:
hashsig_in_progress	extern/libgit2/src/hashsig.c	/^} hashsig_in_progress;$/;"	t	typeref:struct:__anonbb1957950208	file:
hashsig_in_progress_init	extern/libgit2/src/hashsig.c	/^static void hashsig_in_progress_init($/;"	f	typeref:typename:void	file:
hashsig_state	extern/libgit2/src/hashsig.c	/^typedef uint64_t hashsig_state;$/;"	t	typeref:typename:uint64_t	file:
hashsig_t	extern/libgit2/src/hashsig.c	/^typedef uint32_t hashsig_t;$/;"	t	typeref:typename:uint32_t	file:
hasthen	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   hasthen;                 \/* Pattern contains (*THEN) *\/$/;"	m	struct:match_data	typeref:typename:BOOL
have	extern/libgit2/deps/zlib/inflate.h	/^    unsigned have;              \/* number of code lengths in lens[] *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
have	extern/libgit2/deps/zlib/zlib.h	/^    unsigned have;$/;"	m	struct:gzFile_s	typeref:typename:unsigned
have_delta	extern/libgit2/src/indexer.c	/^		have_delta :1,$/;"	m	struct:git_indexer	typeref:typename:unsigned int:1	file:
have_refs	extern/libgit2/src/transports/local.c	/^		have_refs : 1;$/;"	m	struct:__anonb65cbde80108	typeref:typename:unsigned:1	file:
have_refs	extern/libgit2/src/transports/smart.h	/^		have_refs : 1,$/;"	m	struct:__anoncc6f59690b08	typeref:typename:unsigned:1
have_regex	extern/libgit2/src/config.c	/^	int have_regex;$/;"	m	struct:__anon2d64db840508	typeref:typename:int	file:
have_stream	extern/libgit2/src/indexer.c	/^		have_stream :1,$/;"	m	struct:git_indexer	typeref:typename:unsigned int:1	file:
havedict	extern/libgit2/deps/zlib/inflate.h	/^    int havedict;               \/* true if dictionary provided *\/$/;"	m	struct:inflate_state	typeref:typename:int
hbits	extern/libgit2/src/xdiff/xprepare.c	/^	unsigned int hbits;$/;"	m	struct:s_xdlclassifier	typeref:typename:unsigned int	file:
hbits	extern/libgit2/src/xdiff/xtypes.h	/^	unsigned int hbits;$/;"	m	struct:s_xdfile	typeref:typename:unsigned int
hcrc	extern/libgit2/deps/zlib/zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s	typeref:typename:int
hdr	extern/libgit2/src/indexer.c	/^	struct git_pack_header hdr;$/;"	m	struct:git_indexer	typeref:struct:git_pack_header	file:
hdr_entries	extern/libgit2/src/pack.h	/^	uint32_t hdr_entries;$/;"	m	struct:git_pack_header	typeref:typename:uint32_t
hdr_signature	extern/libgit2/src/pack.h	/^	uint32_t hdr_signature;$/;"	m	struct:git_pack_header	typeref:typename:uint32_t
hdr_sz	extern/libgit2/src/delta.c	/^static int hdr_sz($/;"	f	typeref:typename:int	file:
hdr_version	extern/libgit2/src/pack.h	/^	uint32_t hdr_version;$/;"	m	struct:git_pack_header	typeref:typename:uint32_t
head	extern/libgit2/deps/zlib/deflate.h	/^    Posf *head; \/* Heads of the hash chains or NIL. *\/$/;"	m	struct:internal_state	typeref:typename:Posf *
head	extern/libgit2/deps/zlib/inflate.h	/^    gz_headerp head;            \/* where to save gzip header information *\/$/;"	m	struct:inflate_state	typeref:typename:gz_headerp
head	extern/libgit2/src/config_entries.c	/^	config_entry_list *head;$/;"	m	struct:config_entries_iterator	typeref:typename:config_entry_list *	file:
head	extern/libgit2/src/transports/smart.h	/^	git_remote_head head;$/;"	m	struct:__anoncc6f59690308	typeref:typename:git_remote_head
head	extern/libgit2/src/xdiff/xtypes.h	/^	chanode_t *head, *tail;$/;"	m	struct:s_chastore	typeref:typename:chanode_t *
head	extern/libgit2/tests/commit/write.c	/^static git_reference *head, *branch;$/;"	v	typeref:typename:git_reference *	file:
head2idx	extern/libgit2/src/status.h	/^	git_diff *head2idx;$/;"	m	struct:git_status_list	typeref:typename:git_diff *
head_detached	extern/libgit2/src/rebase.c	/^	int head_detached : 1,$/;"	m	struct:git_rebase	typeref:typename:int:1	file:
head_oid	extern/libgit2/src/submodule.h	/^	git_oid head_oid;$/;"	m	struct:git_submodule	typeref:typename:git_oid
head_old	extern/libgit2/tests/commit/write.c	/^static char *head_old;$/;"	v	typeref:typename:char *	file:
head_to_index	extern/libgit2/include/git2/status.h	/^	git_diff_delta *head_to_index;$/;"	m	struct:__anon1764a4980508	typeref:typename:git_diff_delta *
head_tracker_sym_ref_name	extern/libgit2/tests/refs/read.c	/^static const char *head_tracker_sym_ref_name = "HEAD_TRACKER";$/;"	v	typeref:typename:const char *	file:
header	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_header header;$/;"	m	struct:pugi::xml_attribute_struct	typeref:typename:impl::compact_header	file:
header	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_header header;$/;"	m	struct:pugi::xml_node_struct	typeref:typename:impl::compact_header	file:
header	extern/libgit2/include/git2/diff.h	/^	char   header[GIT_DIFF_HUNK_HEADER_SIZE];   \/**< Header text, NUL-byte terminated *\/$/;"	m	struct:__anon72022fed0a08	typeref:typename:char[]
header	extern/libgit2/tests/commit/parse.c	/^	const char *header;$/;"	m	struct:__anond44356cc0108	typeref:typename:const char *	file:
header	extern/libgit2/tests/commit/parse.c	/^	const char *header;$/;"	m	struct:__anond44356cc0208	typeref:typename:const char *	file:
header	extern/libgit2/tests/commit/parse.c	/^	const char *header;$/;"	m	struct:__anond44356cc0308	typeref:typename:const char *	file:
header_len	extern/libgit2/include/git2/diff.h	/^	size_t header_len;    \/**< Number of bytes in header text *\/$/;"	m	struct:__anon72022fed0a08	typeref:typename:size_t
header_new_path	extern/libgit2/src/patch_parse.c	/^	char *header_old_path, *header_new_path;$/;"	m	struct:__anonadbd87d80108	typeref:typename:char **	file:
header_old_path	extern/libgit2/src/patch_parse.c	/^	char *header_old_path, *header_new_path;$/;"	m	struct:__anonadbd87d80108	typeref:typename:char *	file:
header_path_len	extern/libgit2/src/patch_parse.c	/^static size_t header_path_len(git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:size_t	file:
header_size	extern/libgit2/src/patch.h	/^	size_t header_size;$/;"	m	struct:git_patch	typeref:typename:size_t
header_state	extern/libgit2/deps/http-parser/http_parser.h	/^  unsigned char header_state; \/* enum header_state from http_parser.c *\/$/;"	m	struct:http_parser	typeref:typename:unsigned char
header_states	extern/libgit2/deps/http-parser/http_parser.c	/^enum header_states$/;"	g	file:
heads	extern/libgit2/examples/merge.c	/^	const char **heads;$/;"	m	struct:__anon29b823750108	typeref:typename:const char **	file:
heads	extern/libgit2/src/transports/smart.h	/^	git_vector heads;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_vector
heads_count	extern/libgit2/examples/merge.c	/^	size_t heads_count;$/;"	m	struct:__anon29b823750108	typeref:typename:size_t	file:
heap	extern/libgit2/deps/zlib/deflate.h	/^    int heap[2*L_CODES+1];      \/* heap used to build the Huffman trees *\/$/;"	m	struct:internal_state	typeref:typename:int[]
heap_len	extern/libgit2/deps/zlib/deflate.h	/^    int heap_len;               \/* number of elements in the heap *\/$/;"	m	struct:internal_state	typeref:typename:int
heap_max	extern/libgit2/deps/zlib/deflate.h	/^    int heap_max;               \/* element of largest frequency *\/$/;"	m	struct:internal_state	typeref:typename:int
heapframe	extern/libgit2/deps/pcre/pcre_exec.c	/^typedef struct heapframe {$/;"	s	file:
heapframe	extern/libgit2/deps/pcre/pcre_exec.c	/^} heapframe;$/;"	t	typeref:struct:heapframe	file:
height_	extern/NamedType/main.cpp	/^    Meter height_;$/;"	m	class:Rectangle	typeref:typename:Meter	file:
hello_id	extern/libgit2/tests/object/raw/hash.c	/^static char *hello_id = "22596363b3de40b06f981fb85d82312e8c0ed511";$/;"	v	typeref:typename:char *	file:
hello_text	extern/libgit2/tests/object/raw/hash.c	/^static char *hello_text = "hello world\\n";$/;"	v	typeref:typename:char *	file:
heur_min	extern/libgit2/src/xdiff/xdiffi.h	/^	long heur_min;$/;"	m	struct:s_xdalgoenv	typeref:typename:long
hide	extern/libgit2/examples/log.c	/^	int hide;$/;"	m	struct:log_state	typeref:typename:int	file:
hide_cb	extern/libgit2/src/revwalk.h	/^	git_revwalk_hide_cb hide_cb;$/;"	m	struct:git_revwalk	typeref:typename:git_revwalk_hide_cb
hide_cb_payload	extern/libgit2/src/revwalk.h	/^	void *hide_cb_payload;$/;"	m	struct:git_revwalk	typeref:typename:void *
hide_commit_cb	extern/libgit2/tests/revwalk/hidecb.c	/^static int hide_commit_cb(const git_oid *commit_id, void *data)$/;"	f	typeref:typename:int	file:
hide_commit_use_payload_cb	extern/libgit2/tests/revwalk/hidecb.c	/^static int hide_commit_use_payload_cb(const git_oid *commit_id, void *data)$/;"	f	typeref:typename:int	file:
hide_every_commit_cb	extern/libgit2/tests/revwalk/hidecb.c	/^static int hide_every_commit_cb(const git_oid *commit_id, void *data)$/;"	f	typeref:typename:int	file:
hide_none_cb	extern/libgit2/tests/revwalk/hidecb.c	/^static int hide_none_cb(const git_oid *commit_id, void *data)$/;"	f	typeref:typename:int	file:
high	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type high(value_type result, uint32_t ch) {$/;"	f	struct:latin1_writer	typeref:typename:value_type	file:
high	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type high(value_type result, uint32_t ch) {$/;"	f	struct:utf16_writer	typeref:typename:value_type	file:
high	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type high(value_type result, uint32_t ch) {$/;"	f	struct:utf32_writer	typeref:typename:value_type	file:
high	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type high(value_type result, uint32_t ch) {$/;"	f	struct:utf8_writer	typeref:typename:value_type	file:
high	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type high(value_type result, uint32_t) {$/;"	f	struct:utf16_counter	typeref:typename:value_type	file:
high	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type high(value_type result, uint32_t) {$/;"	f	struct:utf32_counter	typeref:typename:value_type	file:
high	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type high(value_type result, uint32_t) {$/;"	f	struct:utf8_counter	typeref:typename:value_type	file:
high_water	extern/libgit2/deps/zlib/deflate.h	/^    ulg high_water;$/;"	m	struct:internal_state	typeref:typename:ulg
hintpath	extern/libgit2/src/blob.c	/^	char *hintpath;$/;"	m	struct:__anon5d2cee0d0108	typeref:typename:char *	file:
histindex	extern/libgit2/src/xdiff/xhistogram.c	/^struct histindex {$/;"	s	file:
histogram_diff	extern/libgit2/src/xdiff/xhistogram.c	/^static int histogram_diff($/;"	f	typeref:typename:int	file:
hit_start	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 hit_start;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
hitend	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   hitend;                  \/* Hit the end of the subject at some point *\/$/;"	m	struct:match_data	typeref:typename:BOOL
hmac_ctx	extern/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_hmac_ctx *hmac_ctx;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_hmac_ctx *
hold	extern/libgit2/deps/zlib/inflate.h	/^    unsigned long hold;         \/* input bit accumulator *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned long
home_values	extern/libgit2/tests/core/env.c	/^static char *home_values[] = {$/;"	v	typeref:typename:char * []	file:
homing_search_cmp	extern/libgit2/src/tree.c	/^static int homing_search_cmp(const void *key, const void *array_member)$/;"	f	typeref:typename:int	file:
host	extern/libgit2/src/net.h	/^	char *host;$/;"	m	struct:git_net_url	typeref:typename:char *
host	extern/libgit2/src/streams/mbedtls.c	/^	char *host;$/;"	m	struct:__anon7f3464670108	typeref:typename:char *	file:
host	extern/libgit2/src/streams/openssl.c	/^	char *host;$/;"	m	struct:__anon6b0c21600108	typeref:typename:char *	file:
host	extern/libgit2/src/streams/socket.h	/^	char *host;$/;"	m	struct:__anonde82408a0108	typeref:typename:char *
host	extern/libgit2/src/transports/smart.h	/^	char *host;$/;"	m	struct:git_pkt_cmd	typeref:typename:char *
host_version	extern/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_version host_version;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_version
hostdomain	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *hostdomain;$/;"	m	struct:ntlm_client	typeref:typename:char *
hostname	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *hostname;$/;"	m	struct:ntlm_client	typeref:typename:char *
hostname_utf16	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *hostname_utf16;$/;"	m	struct:ntlm_client	typeref:typename:char *
hostname_utf16_len	extern/libgit2/deps/ntlmclient/ntlm.h	/^	size_t hostname_utf16_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
how	extern/libgit2/deps/zlib/gzguts.h	/^    int how;                \/* 0: get header, 1: copy, 2: decompress *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:int
how	extern/libgit2/tests/stash/apply.c	/^	bool how;$/;"	m	struct:seen_paths	typeref:typename:bool	file:
hr	extern/OpenXLSX/doxy/customdoxygen.css	/^hr {$/;"	s
hr.footer	extern/OpenXLSX/doxy/customdoxygen.css	/^hr.footer {$/;"	c
hsize	extern/libgit2/src/xdiff/xprepare.c	/^	long hsize;$/;"	m	struct:s_xdlclassifier	typeref:typename:long	file:
hspace	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *hspace;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
hspace_list	extern/libgit2/deps/pcre/pcre_tables.c	/^const pcre_uint32 PRIV(hspace_list)[] = { HSPACE_LIST };$/;"	v	typeref:typename:const pcre_uint32 PRIV ()[]
htonll	extern/libgit2/deps/ntlmclient/compat.h	/^# define htonll /;"	d
http-parser	extern/libgit2/deps/http-parser/CMakeLists.txt	/^ADD_LIBRARY(http-parser OBJECT ${SRC_HTTP})$/;"	t
http_action	extern/libgit2/src/transports/http.c	/^static int http_action($/;"	f	typeref:typename:int	file:
http_auth_negotiate_context	extern/libgit2/src/transports/auth_negotiate.c	/^} http_auth_negotiate_context;$/;"	t	typeref:struct:__anon8bc72ece0108	file:
http_auth_ntlm_context	extern/libgit2/src/transports/auth_ntlm.c	/^} http_auth_ntlm_context;$/;"	t	typeref:struct:__anon2e3324090108	file:
http_body_is_final	extern/libgit2/deps/http-parser/http_parser.c	/^http_body_is_final(const struct http_parser *parser) {$/;"	f	typeref:typename:int
http_cb	extern/libgit2/deps/http-parser/http_parser.h	/^typedef int (*http_cb) (http_parser*);$/;"	t	typeref:typename:int (*)(http_parser *)
http_close	extern/libgit2/src/transports/http.c	/^static int http_close(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:int	file:
http_connect	extern/libgit2/src/transports/http.c	/^static int http_connect(http_subtransport *t)$/;"	f	typeref:typename:int	file:
http_data_cb	extern/libgit2/deps/http-parser/http_parser.h	/^typedef int (*http_data_cb) (http_parser*, const char *at, size_t length);$/;"	t	typeref:typename:int (*)(http_parser *,const char * at,size_t length)
http_errno	extern/libgit2/deps/http-parser/http_parser.h	/^  unsigned char http_errno : 7;$/;"	m	struct:http_parser	typeref:typename:unsigned char:7
http_errno	extern/libgit2/deps/http-parser/http_parser.h	/^enum http_errno {$/;"	g
http_errno_description	extern/libgit2/deps/http-parser/http_parser.c	/^http_errno_description(enum http_errno err) {$/;"	f	typeref:typename:const char *
http_errno_name	extern/libgit2/deps/http-parser/http_parser.c	/^http_errno_name(enum http_errno err) {$/;"	f	typeref:typename:const char *
http_free	extern/libgit2/src/transports/http.c	/^static void http_free(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:void	file:
http_header_name_length	extern/libgit2/src/transports/smart.c	/^static size_t http_header_name_length(const char *http_header)$/;"	f	typeref:typename:size_t	file:
http_host_state	extern/libgit2/deps/http-parser/http_parser.c	/^enum http_host_state$/;"	g	file:
http_major	extern/libgit2/deps/http-parser/http_parser.h	/^  unsigned short http_major;$/;"	m	struct:http_parser	typeref:typename:unsigned short
http_message_needs_eof	extern/libgit2/deps/http-parser/http_parser.c	/^http_message_needs_eof (const http_parser *parser)$/;"	f	typeref:typename:int
http_method	extern/libgit2/deps/http-parser/http_parser.h	/^enum http_method$/;"	g
http_method_str	extern/libgit2/deps/http-parser/http_parser.c	/^http_method_str (enum http_method m)$/;"	f	typeref:typename:const char *
http_minor	extern/libgit2/deps/http-parser/http_parser.h	/^  unsigned short http_minor;$/;"	m	struct:http_parser	typeref:typename:unsigned short
http_parse_host	extern/libgit2/deps/http-parser/http_parser.c	/^http_parse_host(const char * buf, struct http_parser_url *u, int found_at) {$/;"	f	typeref:typename:int	file:
http_parse_host_char	extern/libgit2/deps/http-parser/http_parser.c	/^http_parse_host_char(enum http_host_state s, const char ch) {$/;"	f	typeref:enum:http_host_state	file:
http_parser	extern/libgit2/deps/http-parser/http_parser.h	/^struct http_parser {$/;"	s
http_parser	extern/libgit2/deps/http-parser/http_parser.h	/^typedef struct http_parser http_parser;$/;"	t	typeref:struct:http_parser
http_parser_execute	extern/libgit2/deps/http-parser/http_parser.c	/^size_t http_parser_execute (http_parser *parser,$/;"	f	typeref:typename:size_t
http_parser_h	extern/libgit2/deps/http-parser/http_parser.h	/^#define http_parser_h$/;"	d
http_parser_init	extern/libgit2/deps/http-parser/http_parser.c	/^http_parser_init (http_parser *parser, enum http_parser_type t)$/;"	f	typeref:typename:void
http_parser_parse_url	extern/libgit2/deps/http-parser/http_parser.c	/^http_parser_parse_url(const char *buf, size_t buflen, int is_connect,$/;"	f	typeref:typename:int
http_parser_pause	extern/libgit2/deps/http-parser/http_parser.c	/^http_parser_pause(http_parser *parser, int paused) {$/;"	f	typeref:typename:void
http_parser_settings	extern/libgit2/deps/http-parser/http_parser.h	/^struct http_parser_settings {$/;"	s
http_parser_settings	extern/libgit2/deps/http-parser/http_parser.h	/^typedef struct http_parser_settings http_parser_settings;$/;"	t	typeref:struct:http_parser_settings
http_parser_type	extern/libgit2/deps/http-parser/http_parser.h	/^enum http_parser_type { HTTP_REQUEST, HTTP_RESPONSE, HTTP_BOTH };$/;"	g
http_parser_url	extern/libgit2/deps/http-parser/http_parser.h	/^struct http_parser_url {$/;"	s
http_parser_url_fields	extern/libgit2/deps/http-parser/http_parser.h	/^enum http_parser_url_fields$/;"	g
http_receivepack	extern/libgit2/src/transports/http.c	/^static int http_receivepack($/;"	f	typeref:typename:int	file:
http_receivepack_ls	extern/libgit2/src/transports/http.c	/^static int http_receivepack_ls($/;"	f	typeref:typename:int	file:
http_server	extern/libgit2/src/transports/http.c	/^} http_server;$/;"	t	typeref:struct:__anon0458035d0208	file:
http_should_keep_alive	extern/libgit2/deps/http-parser/http_parser.c	/^http_should_keep_alive (const http_parser *parser)$/;"	f	typeref:typename:int
http_stream	extern/libgit2/src/transports/http.c	/^} http_stream;$/;"	t	typeref:struct:__anon0458035d0108	file:
http_stream_alloc	extern/libgit2/src/transports/http.c	/^static int http_stream_alloc(http_subtransport *t,$/;"	f	typeref:typename:int	file:
http_stream_free	extern/libgit2/src/transports/http.c	/^static void http_stream_free(git_smart_subtransport_stream *stream)$/;"	f	typeref:typename:void	file:
http_stream_read	extern/libgit2/src/transports/http.c	/^static int http_stream_read($/;"	f	typeref:typename:int	file:
http_stream_write_chunked	extern/libgit2/src/transports/http.c	/^static int http_stream_write_chunked($/;"	f	typeref:typename:int	file:
http_stream_write_single	extern/libgit2/src/transports/http.c	/^static int http_stream_write_single($/;"	f	typeref:typename:int	file:
http_strerror_tab	extern/libgit2/deps/http-parser/http_parser.c	/^} http_strerror_tab[] = {$/;"	v	typeref:struct:__anonb6e7d1470108[]
http_subtransport	extern/libgit2/src/transports/http.c	/^} http_subtransport;$/;"	t	typeref:struct:__anon0458035d0308	file:
http_subtransport_definition	extern/libgit2/src/transport.c	/^static git_smart_subtransport_definition http_subtransport_definition = { git_smart_subtransport/;"	v	typeref:typename:git_smart_subtransport_definition	file:
http_uploadpack	extern/libgit2/src/transports/http.c	/^static int http_uploadpack($/;"	f	typeref:typename:int	file:
http_uploadpack_ls	extern/libgit2/src/transports/http.c	/^static int http_uploadpack_ls($/;"	f	typeref:typename:int	file:
hunk	extern/libgit2/src/diff_xdiff.c	/^	git_diff_hunk hunk;$/;"	m	struct:__anon14ca16370108	typeref:typename:git_diff_hunk	file:
hunk	extern/libgit2/src/patch.h	/^	git_diff_hunk hunk;$/;"	m	struct:git_patch_hunk	typeref:typename:git_diff_hunk
hunk_byfinalline_search_cmp	extern/libgit2/src/blame.c	/^static int hunk_byfinalline_search_cmp(const void *key, const void *entry)$/;"	f	typeref:typename:int	file:
hunk_cb	extern/libgit2/include/git2/apply.h	/^	git_apply_hunk_cb hunk_cb;$/;"	m	struct:__anondc670afa0108	typeref:typename:git_apply_hunk_cb
hunk_cb	extern/libgit2/src/patch_generate.h	/^	git_diff_hunk_cb hunk_cb;$/;"	m	struct:git_patch_generated_output	typeref:typename:git_diff_hunk_cb
hunk_cb	extern/libgit2/tests/diff/binary.c	/^static int hunk_cb($/;"	f	typeref:typename:int	file:
hunk_cmp	extern/libgit2/src/blame.c	/^static int hunk_cmp(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
hunk_ends_at_or_before_line	extern/libgit2/src/blame.c	/^static bool hunk_ends_at_or_before_line(git_blame_hunk *hunk, size_t line)$/;"	f	typeref:typename:bool	file:
hunk_from_entry	extern/libgit2/src/blame.c	/^static git_blame_hunk* hunk_from_entry(git_blame__entry *e, git_blame *blame)$/;"	f	typeref:typename:git_blame_hunk *	file:
hunk_func	extern/libgit2/src/xdiff/xdiff.h	/^	xdl_emit_hunk_consume_func_t hunk_func;$/;"	m	struct:s_xdemitconf	typeref:typename:xdl_emit_hunk_consume_func_t
hunk_is_bufferblame	extern/libgit2/src/blame.c	/^static bool hunk_is_bufferblame(git_blame_hunk *hunk)$/;"	f	typeref:typename:bool	file:
hunk_message	extern/libgit2/tests/blame/blame_helpers.c	/^void hunk_message(size_t idx, const git_blame_hunk *hunk, const char *fmt, ...)$/;"	f	typeref:typename:void
hunk_new_lines	extern/libgit2/tests/diff/diff_helpers.h	/^	int hunk_new_lines;$/;"	m	struct:__anona765b0910108	typeref:typename:int
hunk_old_lines	extern/libgit2/tests/diff/diff_helpers.h	/^	int hunk_old_lines;$/;"	m	struct:__anona765b0910108	typeref:typename:int
hunk_skip_odds_cb	extern/libgit2/tests/apply/callbacks.c	/^static int hunk_skip_odds_cb(const git_diff_hunk *hunk, void *payload)$/;"	f	typeref:typename:int	file:
hunk_starts_at_or_after_line	extern/libgit2/src/blame.c	/^static bool hunk_starts_at_or_after_line(git_blame_hunk *hunk, size_t line)$/;"	f	typeref:typename:bool	file:
hunks	extern/libgit2/src/blame.h	/^	git_vector hunks;$/;"	m	struct:git_blame	typeref:typename:git_vector
hunks	extern/libgit2/tests/diff/diff_helpers.h	/^	int hunks;$/;"	m	struct:__anona765b0910108	typeref:typename:int
hwm	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar *hwm;                  \/* High watermark of workspace *\/$/;"	m	struct:compile_data	typeref:typename:pcre_uchar *
i	extern/NamedType/main.cpp	/^    StrongInt i(42);$/;"	v	typeref:typename:StrongInt
i	extern/NamedType/main.cpp	/^    int i = 42;$/;"	v	typeref:typename:int
i	extern/NamedType/main.cpp	/^    int i = myInt;$/;"	v	typeref:typename:int
i	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		union { float f; UI i; } u;$/;"	m	union:gen_nan::__anonfceed08a060a	typeref:typename:UI	file:
i	extern/libgit2/src/config.c	/^	size_t i;$/;"	m	struct:__anon2d64db840208	typeref:typename:size_t	file:
i	extern/libgit2/tests/merge/workdir/setup.c	/^	unsigned int i;$/;"	m	struct:annotated_commit_cb_data	typeref:typename:unsigned int	file:
i0	extern/libgit2/src/xdiff/xmerge.c	/^	long i0;$/;"	m	struct:s_xdmerge	typeref:typename:long	file:
i1	extern/libgit2/src/xdiff/xdiffi.c	/^	long i1, i2;$/;"	m	struct:s_xdpsplit	typeref:typename:long	file:
i1	extern/libgit2/src/xdiff/xdiffi.h	/^	long i1, i2;$/;"	m	struct:s_xdchange	typeref:typename:long
i1	extern/libgit2/src/xdiff/xmerge.c	/^	long i1, i2;$/;"	m	struct:s_xdmerge	typeref:typename:long	file:
i2	extern/libgit2/src/xdiff/xdiffi.c	/^	long i1, i2;$/;"	m	struct:s_xdpsplit	typeref:typename:long	file:
i2	extern/libgit2/src/xdiff/xdiffi.h	/^	long i1, i2;$/;"	m	struct:s_xdchange	typeref:typename:long
i2	extern/libgit2/src/xdiff/xmerge.c	/^	long i1, i2;$/;"	m	struct:s_xdmerge	typeref:typename:long	file:
i_	extern/OpenXLSX/benchmark/table_printer.h	/^        int i_; \/\/ index of current row$/;"	m	class:bprinter::TablePrinter	typeref:typename:int
ic	extern/libgit2/src/path.h	/^	git_path_iconv_t ic;$/;"	m	struct:git_path_diriter	typeref:typename:git_path_iconv_t
ic	extern/libgit2/tests/core/iconv.c	/^static git_path_iconv_t ic;$/;"	v	typeref:typename:git_path_iconv_t	file:
icase_paths	extern/libgit2/tests/status/worktree.c	/^static const char *icase_paths[] = { "B", "c", "g", "H" };$/;"	v	typeref:typename:const char * []	file:
icase_statuses	extern/libgit2/tests/status/worktree.c	/^static unsigned int icase_statuses[] = {$/;"	v	typeref:typename:unsigned int[]	file:
icurr	extern/libgit2/src/xdiff/xtypes.h	/^	long icurr;$/;"	m	struct:s_chanode	typeref:typename:long
id	extern/libgit2/include/git2/diff.h	/^	const git_oid *id;$/;"	m	struct:__anon72022fed1308	typeref:typename:const git_oid *
id	extern/libgit2/include/git2/diff.h	/^	git_oid     id;$/;"	m	struct:__anon72022fed0408	typeref:typename:git_oid
id	extern/libgit2/include/git2/index.h	/^	git_oid id;$/;"	m	struct:git_index_entry	typeref:typename:git_oid
id	extern/libgit2/include/git2/odb.h	/^	git_oid id;$/;"	m	struct:git_odb_expand_id	typeref:typename:git_oid
id	extern/libgit2/include/git2/oid.h	/^	unsigned char id[GIT_OID_RAWSZ];$/;"	m	struct:git_oid	typeref:typename:unsigned char[]
id	extern/libgit2/include/git2/rebase.h	/^	const git_oid id;$/;"	m	struct:__anona97543260308	typeref:typename:const git_oid
id	extern/libgit2/include/git2/tree.h	/^	git_oid id;$/;"	m	struct:__anon97f705e40308	typeref:typename:git_oid
id	extern/libgit2/src/iterator.c	/^	git_oid id;$/;"	m	struct:__anonb487a9b80608	typeref:typename:git_oid	file:
id	extern/libgit2/src/notes.h	/^	git_oid id;$/;"	m	struct:git_note	typeref:typename:git_oid
id	extern/libgit2/src/pack-objects.c	/^	git_oid id;$/;"	m	struct:walk_object	typeref:typename:git_oid	file:
id	extern/libgit2/src/pack-objects.h	/^	git_oid id;$/;"	m	struct:git_pobject	typeref:typename:git_oid
id	extern/libgit2/src/transaction.c	/^		git_oid id;$/;"	m	union:__anon8eca35140208::__anon8eca3514030a	typeref:typename:git_oid	file:
id	extern/libgit2/tests/core/oid.c	/^static git_oid id;$/;"	v	typeref:typename:git_oid	file:
id	extern/libgit2/tests/object/raw/write.c	/^    char *id;     \/* object id (sha1)                          *\/$/;"	m	struct:object_data	typeref:typename:char *	file:
id	extern/libgit2/tests/odb/loose_data.h	/^    char          *id;     \/* object id (sha1)                          *\/$/;"	m	struct:object_data	typeref:typename:char *
id	extern/libgit2/tests/threads/refdb.c	/^	int id;$/;"	m	struct:th_data	typeref:typename:int	file:
id_abbrev	extern/libgit2/include/git2/diff.h	/^	uint16_t    id_abbrev;$/;"	m	struct:__anon72022fed0408	typeref:typename:uint16_t
id_abbrev	extern/libgit2/include/git2/diff.h	/^	uint16_t    id_abbrev;$/;"	m	struct:__anon72022fed0608	typeref:typename:uint16_t
id_str	extern/libgit2/src/annotated_commit.h	/^	char id_str[GIT_OID_HEXSZ+1];$/;"	m	struct:git_annotated_commit	typeref:typename:char[]
id_strlen	extern/libgit2/src/diff_print.c	/^	int id_strlen;$/;"	m	struct:__anoncda507930108	typeref:typename:int	file:
ident_apply	extern/libgit2/src/ident.c	/^static int ident_apply($/;"	f	typeref:typename:int	file:
ident_email	extern/libgit2/src/repository.h	/^	char *ident_email;$/;"	m	struct:git_repository	typeref:typename:char *
ident_find_id	extern/libgit2/src/ident.c	/^static int ident_find_id($/;"	f	typeref:typename:int	file:
ident_insert_id	extern/libgit2/src/ident.c	/^static int ident_insert_id($/;"	f	typeref:typename:int	file:
ident_name	extern/libgit2/src/repository.h	/^	char *ident_name;$/;"	m	struct:git_repository	typeref:typename:char *
ident_remove_id	extern/libgit2/src/ident.c	/^static int ident_remove_id($/;"	f	typeref:typename:int	file:
idm	extern/libgit2/tests/core/oid.c	/^static git_oid idm;$/;"	v	typeref:typename:git_oid	file:
idp	extern/libgit2/tests/core/oid.c	/^static git_oid idp;$/;"	v	typeref:typename:git_oid	file:
ids	extern/libgit2/include/git2/oidarray.h	/^	git_oid *ids;$/;"	m	struct:git_oidarray	typeref:typename:git_oid *
idx	extern/libgit2/src/diff_tform.c	/^	size_t   idx;$/;"	m	struct:__anone5feb9ce0208	typeref:typename:size_t	file:
idx	extern/libgit2/src/diff_tform.c	/^	size_t idx;$/;"	m	struct:__anone5feb9ce0108	typeref:typename:size_t	file:
idx	extern/libgit2/src/xdiff/xprepare.c	/^	long idx;$/;"	m	struct:s_xdlclass	typeref:typename:long	file:
idx	extern/libgit2/tests/apply/apply_helpers.c	/^	size_t idx;$/;"	m	struct:iterator_compare_data	typeref:typename:size_t	file:
idx	extern/libgit2/tests/diff/rename.c	/^	size_t idx;$/;"	m	struct:rename_expected	typeref:typename:size_t	file:
idx	extern/libgit2/tests/fetchhead/nonetwork.c	/^	size_t idx;$/;"	m	struct:__anon6544ff4b0108	typeref:typename:size_t	file:
idx2wd	extern/libgit2/src/status.h	/^	git_diff *idx2wd;$/;"	m	struct:git_status_list	typeref:typename:git_diff *
idx_cache	extern/libgit2/src/pack.h	/^	git_oidmap *idx_cache;$/;"	m	struct:git_pack_file	typeref:typename:git_oidmap *
idx_signature	extern/libgit2/src/pack.h	/^	uint32_t idx_signature;$/;"	m	struct:git_pack_idx_header	typeref:typename:uint32_t
idx_version	extern/libgit2/src/pack.h	/^	uint32_t idx_version;$/;"	m	struct:git_pack_idx_header	typeref:typename:uint32_t
idxentry_equal	extern/libgit2/src/idxmap.c	/^#define idxentry_equal(/;"	d	file:
idxentry_icase_equal	extern/libgit2/src/idxmap.c	/^#define idxentry_icase_equal(/;"	d	file:
ign_global	extern/libgit2/src/ignore.h	/^	git_vector ign_global;$/;"	m	struct:__anon4fc5b6370108	typeref:typename:git_vector
ign_internal	extern/libgit2/src/ignore.h	/^	git_attr_file *ign_internal;$/;"	m	struct:__anon4fc5b6370108	typeref:typename:git_attr_file *
ign_path	extern/libgit2/src/ignore.h	/^	git_vector ign_path;$/;"	m	struct:__anon4fc5b6370108	typeref:typename:git_vector
ignore	extern/libgit2/src/submodule.h	/^	git_submodule_ignore_t ignore;$/;"	m	struct:git_submodule	typeref:typename:git_submodule_ignore_t
ignore	extern/libgit2/src/xdiff/xdiffi.h	/^	int ignore;$/;"	m	struct:s_xdchange	typeref:typename:int
ignore_case	extern/libgit2/src/ignore.h	/^	int ignore_case;$/;"	m	struct:__anon4fc5b6370108	typeref:typename:int
ignore_case	extern/libgit2/src/index.h	/^	unsigned int ignore_case:1;$/;"	m	struct:git_index	typeref:typename:unsigned int:1
ignore_ch	extern/libgit2/src/hashsig.c	/^	uint8_t ignore_ch[256];$/;"	m	struct:__anonbb1957950208	typeref:typename:uint8_t[256]	file:
ignore_default	extern/libgit2/src/submodule.h	/^	git_submodule_ignore_t ignore_default;$/;"	m	struct:git_submodule	typeref:typename:git_submodule_ignore_t
ignore_lookup_in_rules	extern/libgit2/src/ignore.c	/^static bool ignore_lookup_in_rules($/;"	f	typeref:typename:bool	file:
ignore_non_trailer	extern/libgit2/src/trailer.c	/^static size_t ignore_non_trailer(const char *buf, size_t len)$/;"	f	typeref:typename:size_t	file:
ignore_skip_arg	extern/libgit2/deps/pcre/pcre_internal.h	/^  unsigned int ignore_skip_arg;   \/* For re-run when SKIP arg name not found *\/$/;"	m	struct:match_data	typeref:typename:unsigned int
ignore_submodules	extern/libgit2/include/git2/diff.h	/^	git_submodule_ignore_t ignore_submodules;$/;"	m	struct:__anon72022fed0608	typeref:typename:git_submodule_ignore_t
ignored	extern/libgit2/tests/checkout/typechange.c	/^	int ignored;$/;"	m	struct:__anone3edc9c60108	typeref:typename:int	file:
ignored	extern/libgit2/tests/iterator/workdir.c	/^		bool ignored;$/;"	m	struct:test_iterator_workdir__builtin_ignores::__anon521ee3d40108	typeref:typename:bool	file:
ignores	extern/libgit2/src/iterator.c	/^	git_ignores ignores;$/;"	m	struct:__anonb487a9b80808	typeref:typename:git_ignores	file:
ignores	extern/libgit2/tests/index/addall.c	/^	size_t ignores;$/;"	m	struct:__anon6aee9ba20108	typeref:typename:size_t	file:
ihv	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	uint32_t ihv[5];$/;"	m	struct:__anon3f63bb720108	typeref:typename:uint32_t[5]
ihv1	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	uint32_t ihv1[5];$/;"	m	struct:__anon3f63bb720108	typeref:typename:uint32_t[5]
ihv2	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	uint32_t ihv2[5];$/;"	m	struct:__anon3f63bb720108	typeref:typename:uint32_t[5]
img.footer	extern/OpenXLSX/doxy/customdoxygen.css	/^img.footer {$/;"	c
img.formulaDsp	extern/OpenXLSX/doxy/customdoxygen.css	/^img.formulaDsp {$/;"	c
img.formulaInl	extern/OpenXLSX/doxy/customdoxygen.css	/^img.formulaInl {$/;"	c
impl__exists	extern/libgit2/src/odb_mempack.c	/^static int impl__exists(git_odb_backend *backend, const git_oid *oid)$/;"	f	typeref:typename:int	file:
impl__free	extern/libgit2/src/odb_mempack.c	/^static void impl__free(git_odb_backend *_backend)$/;"	f	typeref:typename:void	file:
impl__read	extern/libgit2/src/odb_mempack.c	/^static int impl__read(void **buffer_p, size_t *len_p, git_object_t *type_p, git_odb_backend *bac/;"	f	typeref:typename:int	file:
impl__read_header	extern/libgit2/src/odb_mempack.c	/^static int impl__read_header(size_t *len_p, git_object_t *type_p, git_odb_backend *backend, cons/;"	f	typeref:typename:int	file:
impl__write	extern/libgit2/src/odb_mempack.c	/^static int impl__write(git_odb_backend *_backend, const git_oid *oid, const void *data, size_t l/;"	f	typeref:typename:int	file:
in	extern/libgit2/deps/zlib/gzguts.h	/^    unsigned char *in;      \/* input buffer (double-sized when writing) *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:unsigned char *
in	extern/libgit2/src/zstream.h	/^	const char *in;$/;"	m	struct:__anonebc673f90208	typeref:typename:const char *
in6_addr_data	extern/libgit2/tests/core/posix.c	/^	struct in6_addr_data {$/;"	s	function:test_core_posix__inet_pton	file:
in_addr_data	extern/libgit2/tests/core/posix.c	/^	struct in_addr_data {$/;"	s	function:test_core_posix__inet_pton	file:
in_degree	extern/libgit2/src/commit_list.h	/^	unsigned short in_degree;$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned short
in_func	extern/libgit2/deps/zlib/zconf.h	/^#  define in_func /;"	d
in_func	extern/libgit2/deps/zlib/zlib.h	/^typedef unsigned (*in_func) OF((void FAR *,$/;"	t	typeref:typename:unsigned (*)OF ((void FAR *,z_const unsigned char FAR * FAR *))
in_len	extern/libgit2/src/zstream.h	/^	size_t in_len;$/;"	m	struct:__anonebc673f90208	typeref:typename:size_t
in_section	extern/libgit2/src/config_file.c	/^	unsigned int in_section : 1,$/;"	m	struct:write_data	typeref:typename:unsigned int:1	file:
inbuf	extern/libgit2/src/indexer.c	/^	char inbuf[GIT_OID_RAWSZ];$/;"	m	struct:git_indexer	typeref:typename:char[]	file:
inbuf_len	extern/libgit2/src/indexer.c	/^	size_t inbuf_len;$/;"	m	struct:git_indexer	typeref:typename:size_t	file:
include_changed	extern/libgit2/src/stash.c	/^	bool include_changed;$/;"	m	struct:stash_update_rules	typeref:typename:bool	file:
include_depth	extern/libgit2/include/git2/config.h	/^	unsigned int include_depth; \/**< Depth of includes where this variable was found *\/$/;"	m	struct:git_config_entry	typeref:typename:unsigned int
include_ignored	extern/libgit2/src/stash.c	/^	bool include_ignored;$/;"	m	struct:stash_update_rules	typeref:typename:bool	file:
include_tag	extern/libgit2/src/transports/smart.h	/^		include_tag:1,$/;"	m	struct:transport_smart_caps	typeref:typename:int:1
include_untracked	extern/libgit2/src/stash.c	/^	bool include_untracked;$/;"	m	struct:stash_update_rules	typeref:typename:bool	file:
included_path	extern/libgit2/src/config_file.c	/^static int included_path(git_buf *out, const char *dir, const char *path)$/;"	f	typeref:typename:int	file:
incomplete_pack	extern/libgit2/tests/pack/indexer.c	/^unsigned char incomplete_pack[] = {$/;"	v	typeref:typename:unsigned char[]
incomplete_pack_len	extern/libgit2/tests/pack/indexer.c	/^unsigned int incomplete_pack_len = 115;$/;"	v	typeref:typename:unsigned int
increment_size	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool increment_size(size_t *out, size_t incr)$/;"	f	typeref:typename:bool	file:
indent	extern/libgit2/azure-pipelines/build.sh	/^indent() { sed "s\/^\/    \/"; }$/;"	f
indent	extern/libgit2/src/xdiff/xdiffi.c	/^	int indent;$/;"	m	struct:split_measurement	typeref:typename:int	file:
indent_flags_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    enum indent_flags_t$/;"	g	file:
indent_indent	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        indent_indent = 2$/;"	e	enum:indent_flags_t	file:
indent_newline	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        indent_newline = 1,$/;"	e	enum:indent_flags_t	file:
index	extern/libgit2/deps/http-parser/http_parser.h	/^  unsigned char index;        \/* index into current matcher *\/$/;"	m	struct:http_parser	typeref:typename:unsigned char
index	extern/libgit2/src/annotated_commit.h	/^	git_index *index;$/;"	m	struct:git_annotated_commit	typeref:typename:git_index *
index	extern/libgit2/src/attr.c	/^	git_index *index;$/;"	m	struct:__anon5b6b8b690208	typeref:typename:git_index *	file:
index	extern/libgit2/src/checkout.c	/^	git_index *index;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_index *	file:
index	extern/libgit2/src/index.c	/^	git_index *index;$/;"	m	struct:foreach_diff_data	typeref:typename:git_index *	file:
index	extern/libgit2/src/index.c	/^	git_index *index;$/;"	m	struct:read_tree_data	typeref:typename:git_index *	file:
index	extern/libgit2/src/index.h	/^	git_index *index;$/;"	m	struct:__anon2188762b0108	typeref:typename:git_index *
index	extern/libgit2/src/index.h	/^	git_index *index;$/;"	m	struct:git_index_conflict_iterator	typeref:typename:git_index *
index	extern/libgit2/src/index.h	/^	git_index *index;$/;"	m	struct:git_index_iterator	typeref:typename:git_index *
index	extern/libgit2/src/iterator.c	/^	git_index *index;$/;"	m	struct:__anonb487a9b80808	typeref:typename:git_index *	file:
index	extern/libgit2/src/iterator.h	/^	git_index *index;$/;"	m	struct:git_iterator	typeref:typename:git_index *
index	extern/libgit2/src/pack-objects.c	/^	struct git_delta_index *index;$/;"	m	struct:unpacked	typeref:struct:git_delta_index *	file:
index	extern/libgit2/src/reader.c	/^	git_index *index;$/;"	m	struct:__anone500b1410208	typeref:typename:git_index *	file:
index	extern/libgit2/src/reader.c	/^	git_index *index;$/;"	m	struct:__anone500b1410308	typeref:typename:git_index *	file:
index	extern/libgit2/src/rebase.c	/^	git_index *index;$/;"	m	struct:git_rebase	typeref:typename:git_index *	file:
index	extern/libgit2/tests/index/tests.c	/^   size_t index;$/;"	m	struct:test_entry	typeref:typename:size_t	file:
index_add_conflicts	extern/libgit2/tests/index/names.c	/^static void index_add_conflicts(void)$/;"	f	typeref:typename:void	file:
index_adds	extern/libgit2/tests/index/addall.c	/^	size_t index_adds;$/;"	m	struct:__anon6aee9ba20108	typeref:typename:size_t	file:
index_apply_to_all	extern/libgit2/src/index.c	/^static int index_apply_to_all($/;"	f	typeref:typename:int	file:
index_apply_to_wd_diff	extern/libgit2/src/index.c	/^static int index_apply_to_wd_diff(git_index *index, int action, const git_strarray *paths,$/;"	f	typeref:typename:int	file:
index_blob_lines	extern/libgit2/src/blame.c	/^static int index_blob_lines(git_blame *blame)$/;"	f	typeref:typename:int	file:
index_cb	extern/libgit2/examples/index-pack.c	/^static int index_cb(const git_indexer_progress *stats, void *data)$/;"	f	typeref:typename:int	file:
index_conflict__get_byindex	extern/libgit2/src/index.c	/^static int index_conflict__get_byindex($/;"	f	typeref:typename:int	file:
index_conflict_data_eq_merge_diff	extern/libgit2/tests/merge/merge_helpers.c	/^static int index_conflict_data_eq_merge_diff(const struct merge_index_conflict_data *expected, g/;"	f	typeref:typename:int	file:
index_conflict_remove	extern/libgit2/src/index.c	/^static int index_conflict_remove(git_index *index, const char *path)$/;"	f	typeref:typename:int	file:
index_conflict_to_reuc	extern/libgit2/src/index.c	/^static int index_conflict_to_reuc(git_index *index, const char *path)$/;"	f	typeref:typename:int	file:
index_dels	extern/libgit2/tests/index/addall.c	/^	size_t index_dels;$/;"	m	struct:__anon6aee9ba20108	typeref:typename:size_t	file:
index_delta2status	extern/libgit2/src/status.c	/^static unsigned int index_delta2status(const git_diff_delta *head2idx)$/;"	f	typeref:typename:unsigned int	file:
index_entry	extern/libgit2/src/delta.c	/^struct index_entry {$/;"	s	file:
index_entry_adjust_namemask	extern/libgit2/src/index.c	/^static void index_entry_adjust_namemask($/;"	f	typeref:typename:void	file:
index_entry_cmp	extern/libgit2/src/merge.c	/^GIT_INLINE(int) index_entry_cmp(const git_index_entry *a, const git_index_entry *b)$/;"	f	typeref:typename:int
index_entry_count	extern/libgit2/tests/index/tests.c	/^static const size_t index_entry_count = 109;$/;"	v	typeref:typename:const size_t	file:
index_entry_count_2	extern/libgit2/tests/index/tests.c	/^static const size_t index_entry_count_2 = 1437;$/;"	v	typeref:typename:const size_t	file:
index_entry_cpy	extern/libgit2/src/index.c	/^static void index_entry_cpy($/;"	f	typeref:typename:void	file:
index_entry_cpy_nocache	extern/libgit2/src/index.c	/^static void index_entry_cpy_nocache($/;"	f	typeref:typename:void	file:
index_entry_create	extern/libgit2/src/index.c	/^static int index_entry_create($/;"	f	typeref:typename:int	file:
index_entry_dup	extern/libgit2/src/index.c	/^static int index_entry_dup($/;"	f	typeref:typename:int	file:
index_entry_dup_nocache	extern/libgit2/src/index.c	/^static int index_entry_dup_nocache($/;"	f	typeref:typename:int	file:
index_entry_dup_pool	extern/libgit2/src/merge.c	/^GIT_INLINE(int) index_entry_dup_pool($/;"	f	typeref:typename:int
index_entry_eq_merge_index_entry	extern/libgit2/tests/merge/merge_helpers.c	/^static int index_entry_eq_merge_index_entry(const struct merge_index_entry *expected, const git_/;"	f	typeref:typename:int	file:
index_entry_free	extern/libgit2/src/index.c	/^static void index_entry_free(git_index_entry *entry)$/;"	f	typeref:typename:void	file:
index_entry_init	extern/libgit2/src/index.c	/^static int index_entry_init($/;"	f	typeref:typename:int	file:
index_entry_init	extern/libgit2/tests/reset/hard.c	/^static void index_entry_init(git_index *index, int side, git_oid *oid)$/;"	f	typeref:typename:void	file:
index_entry_isrch_path	extern/libgit2/src/index.c	/^static int index_entry_isrch_path(const void *path, const void *array_member)$/;"	f	typeref:typename:int	file:
index_entry_reuc_free	extern/libgit2/src/index.c	/^static void index_entry_reuc_free(git_index_reuc_entry *reuc)$/;"	f	typeref:typename:void	file:
index_entry_reuc_init	extern/libgit2/src/index.c	/^static int index_entry_reuc_init(git_index_reuc_entry **reuc_out,$/;"	f	typeref:typename:int	file:
index_entry_similarity_calc	extern/libgit2/src/merge.c	/^static int index_entry_similarity_calc($/;"	f	typeref:typename:int	file:
index_entry_similarity_inexact	extern/libgit2/src/merge.c	/^static int index_entry_similarity_inexact($/;"	f	typeref:typename:int	file:
index_entry_size	extern/libgit2/src/index.c	/^static size_t index_entry_size(size_t path_len, size_t varint_len, uint32_t flags)$/;"	f	typeref:typename:size_t	file:
index_entry_srch_path	extern/libgit2/src/index.c	/^static int index_entry_srch_path(const void *path, const void *array_member)$/;"	f	typeref:typename:int	file:
index_error_invalid	extern/libgit2/src/index.c	/^static int index_error_invalid(const char *message)$/;"	f	typeref:typename:int	file:
index_existing_and_best	extern/libgit2/src/index.c	/^static void index_existing_and_best($/;"	f	typeref:typename:void	file:
index_extension	extern/libgit2/src/index.c	/^struct index_extension {$/;"	s	file:
index_file_path	extern/libgit2/src/index.h	/^	char *index_file_path;$/;"	m	struct:git_index	typeref:typename:char *
index_find	extern/libgit2/src/index.c	/^GIT_INLINE(int) index_find($/;"	f	typeref:typename:int
index_find_in_entries	extern/libgit2/src/index.c	/^GIT_INLINE(int) index_find_in_entries($/;"	f	typeref:typename:int
index_free	extern/libgit2/src/index.c	/^static void index_free(git_index *index)$/;"	f	typeref:typename:void	file:
index_free_deleted	extern/libgit2/src/index.c	/^static void index_free_deleted(git_index *index)$/;"	f	typeref:typename:void	file:
index_from_diff_list	extern/libgit2/src/merge.c	/^static int index_from_diff_list(git_index **out,$/;"	f	typeref:typename:int	file:
index_header	extern/libgit2/src/index.c	/^struct index_header {$/;"	s	file:
index_insert	extern/libgit2/src/index.c	/^static int index_insert($/;"	f	typeref:typename:int	file:
index_iterator	extern/libgit2/src/iterator.c	/^} index_iterator;$/;"	t	typeref:struct:__anonb487a9b80908	file:
index_iterator_advance	extern/libgit2/src/iterator.c	/^static int index_iterator_advance($/;"	f	typeref:typename:int	file:
index_iterator_advance_into	extern/libgit2/src/iterator.c	/^static int index_iterator_advance_into($/;"	f	typeref:typename:int	file:
index_iterator_advance_over	extern/libgit2/src/iterator.c	/^static int index_iterator_advance_over($/;"	f	typeref:typename:int	file:
index_iterator_clear	extern/libgit2/src/iterator.c	/^static void index_iterator_clear(index_iterator *iter)$/;"	f	typeref:typename:void	file:
index_iterator_create_pseudotree	extern/libgit2/src/iterator.c	/^static bool index_iterator_create_pseudotree($/;"	f	typeref:typename:bool	file:
index_iterator_current	extern/libgit2/src/iterator.c	/^static int index_iterator_current($/;"	f	typeref:typename:int	file:
index_iterator_free	extern/libgit2/src/iterator.c	/^static void index_iterator_free(git_iterator *i)$/;"	f	typeref:typename:void	file:
index_iterator_init	extern/libgit2/src/iterator.c	/^static int index_iterator_init(index_iterator *iter)$/;"	f	typeref:typename:int	file:
index_iterator_reset	extern/libgit2/src/iterator.c	/^static int index_iterator_reset(git_iterator *i)$/;"	f	typeref:typename:int	file:
index_iterator_skip_pseudotree	extern/libgit2/src/iterator.c	/^static int index_iterator_skip_pseudotree(index_iterator *iter)$/;"	f	typeref:typename:int	file:
index_iterator_test	extern/libgit2/tests/iterator/index.c	/^static void index_iterator_test($/;"	f	typeref:typename:void	file:
index_map	extern/libgit2/src/pack.h	/^	git_map index_map;$/;"	m	struct:git_pack_file	typeref:typename:git_map
index_merge_mode	extern/libgit2/src/index.c	/^static unsigned int index_merge_mode($/;"	f	typeref:typename:unsigned int	file:
index_mods	extern/libgit2/tests/index/addall.c	/^	size_t index_mods;$/;"	m	struct:__anon6aee9ba20108	typeref:typename:size_t	file:
index_name_entry_free	extern/libgit2/src/index.c	/^static void index_name_entry_free(git_index_name_entry *ne)$/;"	f	typeref:typename:void	file:
index_no_dups	extern/libgit2/src/index.c	/^static int index_no_dups(void **old, void *new)$/;"	f	typeref:typename:int	file:
index_oid	extern/libgit2/src/submodule.h	/^	git_oid index_oid;$/;"	m	struct:git_submodule	typeref:typename:git_oid
index_path	extern/libgit2/src/indexer.c	/^static int index_path(git_buf *path, git_indexer *idx, const char *suffix)$/;"	f	typeref:typename:int	file:
index_reader	extern/libgit2/src/reader.c	/^} index_reader;$/;"	t	typeref:struct:__anone500b1410308	file:
index_reader_read	extern/libgit2/src/reader.c	/^static int index_reader_read($/;"	f	typeref:typename:int	file:
index_remove_entry	extern/libgit2/src/index.c	/^static int index_remove_entry(git_index *index, size_t pos)$/;"	f	typeref:typename:int	file:
index_reuc_insert	extern/libgit2/src/index.c	/^static int index_reuc_insert($/;"	f	typeref:typename:int	file:
index_reuc_on_dup	extern/libgit2/src/index.c	/^static int index_reuc_on_dup(void **old, void *new)$/;"	f	typeref:typename:int	file:
index_snapshot	extern/libgit2/src/iterator.c	/^	git_vector index_snapshot;$/;"	m	struct:__anonb487a9b80808	typeref:typename:git_vector	file:
index_status_cb	extern/libgit2/tests/index/addall.c	/^static int index_status_cb($/;"	f	typeref:typename:int	file:
index_status_counts	extern/libgit2/tests/index/addall.c	/^} index_status_counts;$/;"	t	typeref:struct:__anon6aee9ba20108	file:
index_to_workdir	extern/libgit2/include/git2/status.h	/^	git_diff_delta *index_to_workdir;$/;"	m	struct:__anon1764a4980508	typeref:typename:git_diff_delta *
index_update_reuc	extern/libgit2/src/merge.c	/^static int index_update_reuc(git_index *index, git_merge_diff_list *diff_list)$/;"	f	typeref:typename:int	file:
index_updated	extern/libgit2/src/diff_generate.c	/^	bool index_updated;$/;"	m	struct:__anon047407f10108	typeref:typename:bool	file:
index_version	extern/libgit2/src/pack.h	/^	int index_version;$/;"	m	struct:git_pack_file	typeref:typename:int
index_walking	extern/libgit2/examples/general.c	/^static void index_walking(git_repository *repo)$/;"	f	typeref:typename:void	file:
indexed_deltas	extern/libgit2/include/git2/indexer.h	/^	unsigned int indexed_deltas;$/;"	m	struct:git_indexer_progress	typeref:typename:unsigned int
indexed_objects	extern/libgit2/include/git2/indexer.h	/^	unsigned int indexed_objects;$/;"	m	struct:git_indexer_progress	typeref:typename:unsigned int
indexer	extern/libgit2/src/odb_pack.c	/^	git_indexer *indexer;$/;"	m	struct:pack_writepack	typeref:typename:git_indexer *	file:
indexer	extern/libgit2/src/pack-objects.c	/^	git_indexer *indexer;$/;"	m	struct:pack_write_context	typeref:typename:git_indexer *	file:
inflate	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define inflate /;"	d
inflate	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflate(strm, flush)$/;"	f
inflate	extern/libgit2/deps/zlib/zconf.h	/^#  define inflate /;"	d
inflateBack	extern/libgit2/deps/zlib/infback.c	/^int ZEXPORT inflateBack(strm, in, in_desc, out, out_desc)$/;"	f
inflateBack	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateBack /;"	d
inflateBackEnd	extern/libgit2/deps/zlib/infback.c	/^int ZEXPORT inflateBackEnd(strm)$/;"	f
inflateBackEnd	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateBackEnd /;"	d
inflateBackInit	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateBackInit /;"	d
inflateBackInit	extern/libgit2/deps/zlib/zlib.h	/^#  define inflateBackInit(/;"	d
inflateBackInit_	extern/libgit2/deps/zlib/infback.c	/^int ZEXPORT inflateBackInit_(strm, windowBits, window, version, stream_size)$/;"	f
inflateBackInit_	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateBackInit_ /;"	d
inflateCodesUsed	extern/libgit2/deps/zlib/inflate.c	/^unsigned long ZEXPORT inflateCodesUsed(strm)$/;"	f
inflateCodesUsed	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateCodesUsed /;"	d
inflateCopy	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateCopy(dest, source)$/;"	f
inflateCopy	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateCopy /;"	d
inflateEnd	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define inflateEnd /;"	d
inflateEnd	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateEnd(strm)$/;"	f
inflateEnd	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateEnd /;"	d
inflateGetDictionary	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateGetDictionary(strm, dictionary, dictLength)$/;"	f
inflateGetDictionary	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateGetDictionary /;"	d
inflateGetHeader	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateGetHeader(strm, head)$/;"	f
inflateGetHeader	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateGetHeader /;"	d
inflateInit	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define inflateInit /;"	d
inflateInit	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateInit /;"	d
inflateInit	extern/libgit2/deps/zlib/zlib.h	/^#  define inflateInit(/;"	d
inflateInit2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define inflateInit2 /;"	d
inflateInit2	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateInit2 /;"	d
inflateInit2	extern/libgit2/deps/zlib/zlib.h	/^#  define inflateInit2(/;"	d
inflateInit2_	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateInit2_(strm, windowBits, version, stream_size)$/;"	f
inflateInit2_	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateInit2_ /;"	d
inflateInit_	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateInit_(strm, version, stream_size)$/;"	f
inflateInit_	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateInit_ /;"	d
inflateMark	extern/libgit2/deps/zlib/inflate.c	/^long ZEXPORT inflateMark(strm)$/;"	f
inflateMark	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateMark /;"	d
inflatePrime	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflatePrime(strm, bits, value)$/;"	f
inflatePrime	extern/libgit2/deps/zlib/zconf.h	/^#  define inflatePrime /;"	d
inflateReset	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateReset(strm)$/;"	f
inflateReset	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateReset /;"	d
inflateReset2	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateReset2(strm, windowBits)$/;"	f
inflateReset2	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateReset2 /;"	d
inflateResetKeep	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateResetKeep(strm)$/;"	f
inflateResetKeep	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateResetKeep /;"	d
inflateSetDictionary	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateSetDictionary(strm, dictionary, dictLength)$/;"	f
inflateSetDictionary	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateSetDictionary /;"	d
inflateStateCheck	extern/libgit2/deps/zlib/inflate.c	/^local int inflateStateCheck(strm)$/;"	f
inflateSync	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateSync(strm)$/;"	f
inflateSync	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateSync /;"	d
inflateSyncPoint	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateSyncPoint(strm)$/;"	f
inflateSyncPoint	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateSyncPoint /;"	d
inflateUndermine	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateUndermine(strm, subvert)$/;"	f
inflateUndermine	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateUndermine /;"	d
inflateValidate	extern/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateValidate(strm, check)$/;"	f
inflateValidate	extern/libgit2/deps/zlib/zconf.h	/^#  define inflateValidate /;"	d
inflate_copyright	extern/libgit2/deps/zlib/inftrees.c	/^const char inflate_copyright[] =$/;"	v	typeref:typename:const char[]
inflate_copyright	extern/libgit2/deps/zlib/zconf.h	/^#  define inflate_copyright /;"	d
inflate_fast	extern/libgit2/deps/zlib/inffast.c	/^void ZLIB_INTERNAL inflate_fast(strm, start)$/;"	f
inflate_fast	extern/libgit2/deps/zlib/zconf.h	/^#  define inflate_fast /;"	d
inflate_mode	extern/libgit2/deps/zlib/inflate.h	/^} inflate_mode;$/;"	t	typeref:enum:__anon92f8b1ba0103
inflate_state	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} inflate_state;$/;"	t	typeref:struct:__anon09af45a71908
inflate_state	extern/libgit2/deps/zlib/inflate.h	/^struct inflate_state {$/;"	s
inflate_table	extern/libgit2/deps/zlib/inftrees.c	/^int ZLIB_INTERNAL inflate_table(type, lens, codes, table, bits, work)$/;"	f
inflate_table	extern/libgit2/deps/zlib/zconf.h	/^#  define inflate_table /;"	d
inflatedlen	extern/libgit2/include/git2/diff.h	/^	size_t inflatedlen;$/;"	m	struct:__anon72022fed0808	typeref:typename:size_t
inflator	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    tinfl_decompressor inflator;$/;"	m	struct:__anon09af45a71808	typeref:typename:tinfl_decompressor
init_array	extern/libgit2/examples/add.c	/^void init_array(git_strarray *array, int argc, char **argv)$/;"	f	typeref:typename:void
init_auth	extern/libgit2/src/transports/http.c	/^static int init_auth(http_server *server)$/;"	f	typeref:typename:int	file:
init_bio_method	extern/libgit2/src/streams/openssl.c	/^static int init_bio_method(void)$/;"	f	typeref:typename:int	file:
init_block	extern/libgit2/deps/zlib/trees.c	/^local void init_block(s)$/;"	f
init_common	extern/libgit2/src/global.c	/^static int init_common(void)$/;"	f	typeref:typename:int	file:
init_context	extern/libgit2/src/transports/auth.h	/^	int (*init_context)($/;"	m	struct:__anonf415dd740208	typeref:typename:int (*)(git_http_auth_context ** out,const git_net_url * url)
init_error	extern/libgit2/src/global.c	/^int init_error = 0;$/;"	v	typeref:typename:int
init_fake_wstream	extern/libgit2/src/odb.c	/^static int init_fake_wstream(git_odb_stream **stream_p, git_odb_backend *backend, git_off_t size/;"	f	typeref:typename:int	file:
init_frame	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void init_frame(compiler_common *common, pcre_uchar *cc, pcre_uchar *ccend, int stackpos,/;"	f	typeref:typename:void	file:
init_linked_repo	extern/libgit2/tests/odb/alternates.c	/^static void init_linked_repo(const char *path, const char *alternate)$/;"	f	typeref:typename:void	file:
init_once	extern/libgit2/src/global.c	/^static void init_once(void)$/;"	f	typeref:typename:void	file:
init_one_submodule	extern/libgit2/tests/submodule/modify.c	/^static int init_one_submodule($/;"	f	typeref:typename:int	file:
init_setup	extern/libgit2/src/attr_file.h	/^	unsigned int init_setup:1,$/;"	m	struct:__anon32d629ad0908	typeref:typename:unsigned int:1
init_sysdir	extern/libgit2/src/attr_file.h	/^		init_sysdir:1;$/;"	m	struct:__anon32d629ad0908	typeref:typename:unsigned int:1
initial_commit	extern/libgit2/examples/init.c	/^	int initial_commit;$/;"	m	struct:opts	typeref:typename:int	file:
initial_head	extern/libgit2/include/git2/repository.h	/^	const char *initial_head;$/;"	m	struct:__anon8a61cad40408	typeref:typename:const char *
initialize	extern/libgit2/include/git2/sys/filter.h	/^	git_filter_init_fn     initialize;$/;"	m	struct:git_filter	typeref:typename:git_filter_init_fn
initialize	extern/libgit2/include/git2/sys/merge.h	/^	git_merge_driver_init_fn     initialize;$/;"	m	struct:git_merge_driver	typeref:typename:git_merge_driver_init_fn
initialize	extern/libgit2/tests/clar.c	/^	struct clar_func initialize;$/;"	m	struct:clar_suite	typeref:struct:clar_func	file:
initialize	extern/libgit2/tests/reset/default.c	/^static void initialize(const char *repo_name)$/;"	f	typeref:typename:void	file:
initialized	extern/libgit2/src/filter.c	/^	int initialized;$/;"	m	struct:__anon209df0b40208	typeref:typename:int	file:
initialized	extern/libgit2/src/merge_driver.c	/^	int initialized;$/;"	m	struct:__anon8d5767c90108	typeref:typename:int	file:
initialized	extern/libgit2/tests/merge/driver.c	/^	int initialized;$/;"	m	struct:test_merge_driver	typeref:typename:int	file:
inject_object	extern/libgit2/src/indexer.c	/^static int inject_object(git_indexer *idx, git_oid *id)$/;"	f	typeref:typename:int	file:
inline	extern/libgit2/src/streams/mbedtls.c	/^# define inline /;"	d	file:
inline	extern/libgit2/src/streams/mbedtls.c	/^# define inline$/;"	d	file:
inlined_pattern	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL inlined_pattern;$/;"	m	struct:recurse_backtrack	typeref:typename:BOOL	file:
inmemory	extern/libgit2/include/git2/rebase.h	/^	int inmemory;$/;"	m	struct:__anona97543260108	typeref:typename:int
inmemory	extern/libgit2/src/rebase.c	/^		inmemory : 1,$/;"	m	struct:git_rebase	typeref:typename:int:1	file:
ino	extern/libgit2/include/git2/index.h	/^	uint32_t ino;$/;"	m	struct:git_index_entry	typeref:typename:uint32_t
ino	extern/libgit2/src/futils.h	/^	unsigned int ino;$/;"	m	struct:__anonce3edc2a0408	typeref:typename:unsigned int
ino	extern/libgit2/src/index.c	/^	uint32_t ino;$/;"	m	struct:entry_long	typeref:typename:uint32_t	file:
ino	extern/libgit2/src/index.c	/^	uint32_t ino;$/;"	m	struct:entry_short	typeref:typename:uint32_t	file:
input	extern/libgit2/src/filter.c	/^	git_buf input;$/;"	m	struct:proxy_stream	typeref:typename:git_buf	file:
input	extern/libgit2/tests/filter/wildcard.c	/^static unsigned char input[] = {$/;"	v	typeref:typename:unsigned char[]	file:
ins_h	extern/libgit2/deps/zlib/deflate.h	/^    uInt  ins_h;          \/* hash index of string to be inserted *\/$/;"	m	struct:internal_state	typeref:typename:uInt
insert	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void insert(const void* key, void* value)$/;"	f	class:compact_hash_table	typeref:typename:void	file:
insert	extern/libgit2/deps/zlib/deflate.h	/^    uInt insert;        \/* bytes at end of window left to insert *\/$/;"	m	struct:internal_state	typeref:typename:uInt
insert_attribute_after	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_node::insert_attribute_after(const char_t* name_, const xml_attri/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_attribute
insert_attribute_after	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline void insert_attribute_after(xml_attribute_struct* attr, xml_attribute_struct* place, /;"	f	typeref:typename:void
insert_attribute_before	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_node::insert_attribute_before(const char_t* name_, const xml_attr/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_attribute
insert_attribute_before	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline void insert_attribute_before(xml_attribute_struct* attr, xml_attribute_struct* place,$/;"	f	typeref:typename:void
insert_by_date	extern/libgit2/src/revwalk.h	/^	int insert_by_date;$/;"	m	struct:__anon01a529ef0108	typeref:typename:int
insert_child_after	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::insert_child_after(const char_t* name_, const xml_node& node) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
insert_child_after	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::insert_child_after(xml_node_type type_, const xml_node& node) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
insert_child_before	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::insert_child_before(const char_t* name_, const xml_node& node) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
insert_child_before	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::insert_child_before(xml_node_type type_, const xml_node& node) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
insert_commit	extern/libgit2/src/pack-objects.c	/^int insert_commit(git_packbuilder *pb, struct walk_object *obj)$/;"	f	typeref:typename:int
insert_copy_after	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_node::insert_copy_after(const xml_attribute& proto, const xml_att/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_attribute
insert_copy_after	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::insert_copy_after(const xml_node& proto, const xml_node& node) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
insert_copy_before	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_node::insert_copy_before(const xml_attribute& proto, const xml_at/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_attribute
insert_copy_before	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::insert_copy_before(const xml_node& proto, const xml_node& node) /;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
insert_delete_side_of_split	extern/libgit2/src/diff_tform.c	/^static int insert_delete_side_of_split($/;"	f	typeref:typename:int	file:
insert_head_ids	extern/libgit2/src/merge.c	/^GIT_INLINE(int) insert_head_ids($/;"	f	typeref:typename:int
insert_move_after	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::insert_move_after(const xml_node& moved, const xml_node& node) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
insert_move_before	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::insert_move_before(const xml_node& moved, const xml_node& node) /;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
insert_node_after	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline void insert_node_after(xml_node_struct* child, xml_node_struct* node) {$/;"	f	typeref:typename:void
insert_node_before	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline void insert_node_before(xml_node_struct* child, xml_node_struct* node) {$/;"	f	typeref:typename:void
insert_note_in_tree_eexists_cb	extern/libgit2/src/notes.c	/^static int insert_note_in_tree_eexists_cb(git_tree **out,$/;"	f	typeref:typename:int	file:
insert_note_in_tree_enotfound_cb	extern/libgit2/src/notes.c	/^static int insert_note_in_tree_enotfound_cb(git_tree **out,$/;"	f	typeref:typename:int	file:
insert_record	extern/libgit2/src/xdiff/xpatience.c	/^static void insert_record(xpparam_t const *xpp, int line, struct hashmap *map,$/;"	f	typeref:typename:void	file:
insert_sequential_oids	extern/libgit2/tests/object/raw/short.c	/^static int insert_sequential_oids($/;"	f	typeref:typename:int	file:
insert_strings	extern/libgit2/tests/core/strmap.c	/^static void insert_strings(git_strmap *table, size_t count)$/;"	f	typeref:typename:void	file:
insert_tree	extern/libgit2/src/pack-objects.c	/^int insert_tree(git_packbuilder *pb, git_tree *tree)$/;"	f	typeref:typename:int
insert_unique	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static git_win32__crtdbg_stacktrace__row * insert_unique($/;"	f	typeref:typename:git_win32__crtdbg_stacktrace__row *	file:
insertion_sort	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename T, typename Pred> void insertion_sort(T* begin, T* end, const Pred& pred)$/;"	f	typeref:typename:void
insertions	extern/libgit2/src/diff_stats.c	/^	size_t insertions;$/;"	m	struct:__anonb8b091150108	typeref:typename:size_t	file:
insertions	extern/libgit2/src/diff_stats.c	/^	size_t insertions;$/;"	m	struct:git_diff_stats	typeref:typename:size_t	file:
insertsort	extern/libgit2/src/util.c	/^static void insertsort($/;"	f	typeref:typename:void	file:
install	extern/libgit2/package.json	/^  "install": "mkdir build && cd build && cmake .. && cmake --build ."$/;"	s
int16_t	extern/libgit2/deps/http-parser/http_parser.h	/^typedef __int16 int16_t;$/;"	t	typeref:typename:__int16
int16_t	extern/libgit2/include/git2/stdint.h	/^   typedef signed __int16    int16_t;$/;"	t	typeref:typename:signed __int16
int16_t	extern/libgit2/include/git2/stdint.h	/^   typedef signed short      int16_t;$/;"	t	typeref:typename:signed short
int32_t	extern/libgit2/deps/http-parser/http_parser.h	/^typedef __int32 int32_t;$/;"	t	typeref:typename:__int32
int32_t	extern/libgit2/include/git2/stdint.h	/^   typedef signed __int32    int32_t;$/;"	t	typeref:typename:signed __int32
int32_t	extern/libgit2/include/git2/stdint.h	/^   typedef signed int        int32_t;$/;"	t	typeref:typename:signed int
int64_t	extern/libgit2/deps/http-parser/http_parser.h	/^typedef __int64 int64_t;$/;"	t	typeref:typename:__int64
int64_t	extern/libgit2/include/git2/stdint.h	/^typedef signed __int64       int64_t;$/;"	t	typeref:typename:signed __int64
int8_t	extern/libgit2/deps/http-parser/http_parser.h	/^typedef __int8 int8_t;$/;"	t	typeref:typename:__int8
int8_t	extern/libgit2/include/git2/stdint.h	/^   typedef signed __int8     int8_t;$/;"	t	typeref:typename:signed __int8
int8_t	extern/libgit2/include/git2/stdint.h	/^   typedef signed char       int8_t;$/;"	t	typeref:typename:signed char
int_fast16_t	extern/libgit2/include/git2/stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t	typeref:typename:int16_t
int_fast32_t	extern/libgit2/include/git2/stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t	typeref:typename:int32_t
int_fast64_t	extern/libgit2/include/git2/stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t	typeref:typename:int64_t
int_fast8_t	extern/libgit2/include/git2/stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t	typeref:typename:int8_t
int_least16_t	extern/libgit2/include/git2/stdint.h	/^typedef int16_t   int_least16_t;$/;"	t	typeref:typename:int16_t
int_least32_t	extern/libgit2/include/git2/stdint.h	/^typedef int32_t   int_least32_t;$/;"	t	typeref:typename:int32_t
int_least64_t	extern/libgit2/include/git2/stdint.h	/^typedef int64_t   int_least64_t;$/;"	t	typeref:typename:int64_t
int_least8_t	extern/libgit2/include/git2/stdint.h	/^typedef int8_t    int_least8_t;$/;"	t	typeref:typename:int8_t
int_lookup	extern/libgit2/tests/core/array.c	/^static int int_lookup(const void *k, const void *a)$/;"	f	typeref:typename:int	file:
integer_to_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN PUGI__UNSIGNED_OVERFLOW char_t* integer_to_string(char_t* begin, char_t* end, U val/;"	f	typeref:typename:PUGI__FN PUGI__UNSIGNED_OVERFLOW char_t *
interesting	extern/libgit2/src/graph.c	/^static int interesting(git_pqueue *list, git_commit_list *roots)$/;"	f	typeref:typename:int	file:
interesting	extern/libgit2/src/merge.c	/^static int interesting(git_pqueue *list)$/;"	f	typeref:typename:int	file:
interhunk_lines	extern/libgit2/include/git2/diff.h	/^	uint32_t    interhunk_lines;$/;"	m	struct:__anon72022fed0608	typeref:typename:uint32_t
interhunkctxlen	extern/libgit2/src/xdiff/xdiff.h	/^	long interhunkctxlen;$/;"	m	struct:s_xdemitconf	typeref:typename:long
internal_dfa_exec	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^internal_dfa_exec($/;"	f	typeref:typename:int	file:
internal_object	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute_struct* xml_attribute::internal_object() const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute_struct *
internal_object	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node_struct* xml_node::internal_object() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node_struct *
internal_state	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define internal_state /;"	d
internal_state	extern/libgit2/deps/zlib/deflate.h	/^typedef struct internal_state {$/;"	s
internal_state	extern/libgit2/deps/zlib/zconf.h	/^#  define internal_state /;"	d
interrupt_cb	extern/libgit2/tests/refs/foreachglob.c	/^static int interrupt_cb(const char *reference_name, void *payload)$/;"	f	typeref:typename:int	file:
intf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef int intf;$/;"	t	typeref:typename:int
intf	extern/libgit2/deps/zlib/zconf.h	/^#  define intf /;"	d
intf	extern/libgit2/deps/zlib/zconf.h	/^typedef int   FAR intf;$/;"	t	typeref:typename:int FAR
intmax_t	extern/libgit2/include/git2/stdint.h	/^typedef int64_t   intmax_t;$/;"	t	typeref:typename:int64_t
intptr_t	extern/libgit2/include/git2/stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t	typeref:typename:_W64 signed int
intptr_t	extern/libgit2/include/git2/stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t	typeref:typename:signed __int64
inuse_cnt	extern/libgit2/src/mwindow.h	/^	size_t inuse_cnt;$/;"	m	struct:git_mwindow	typeref:typename:size_t
invalid_id	extern/libgit2/tests/index/add.c	/^static const char *invalid_id = "1234567890123456789012345678901234567890";$/;"	v	typeref:typename:const char *	file:
invoke	extern/NamedType/catch.hpp	/^    void invoke() const override {$/;"	f	class:Catch::TestInvokerAsMethod	typeref:typename:void
invoke	extern/OpenXLSX/tests/catch/catch.hpp	/^    void invoke() const override {$/;"	f	class:Catch::TestInvokerAsMethod	typeref:typename:void
invokes	extern/libgit2/tests/stash/foreach.c	/^	int invokes;$/;"	m	struct:callback_data	typeref:typename:int	file:
io	extern/libgit2/src/streams/mbedtls.c	/^	git_stream *io;$/;"	m	struct:__anon7f3464670108	typeref:typename:git_stream *	file:
io	extern/libgit2/src/streams/openssl.c	/^	git_stream *io;$/;"	m	struct:__anon6b0c21600108	typeref:typename:git_stream *	file:
io	extern/libgit2/src/streams/stransport.c	/^	git_stream *io;$/;"	m	struct:__anonc5fef1dc0108	typeref:typename:git_stream *	file:
io	extern/libgit2/src/transports/git.c	/^	git_stream *io;$/;"	m	struct:__anon936e62c10108	typeref:typename:git_stream *	file:
io	extern/libgit2/src/transports/ssh.c	/^	git_stream *io;$/;"	m	struct:__anon944cd18b0108	typeref:typename:git_stream *	file:
isFalseTest	extern/OpenXLSX/tests/catch/catch.hpp	/^    inline bool isFalseTest( int flags ) { return ( flags & ResultDisposition::FalseTest ) != 0;/;"	f	namespace:Catch	typeref:typename:bool
isLegalUTF8	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^static inline bool isLegalUTF8(const UTF8 *source, int length) {$/;"	f	typeref:typename:bool	file:
is_accelerated_repeat	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static BOOL is_accelerated_repeat(pcre_uchar *cc)$/;"	f	typeref:typename:BOOL	file:
is_all_caps_and_underscore	extern/libgit2/src/refs.c	/^static bool is_all_caps_and_underscore(const char *name, size_t len)$/;"	f	typeref:typename:bool	file:
is_alternate	extern/libgit2/src/odb.c	/^	bool is_alternate;$/;"	m	struct:__anonfbf77e230108	typeref:typename:bool	file:
is_anchor	extern/libgit2/src/xdiff/xpatience.c	/^static int is_anchor(xpparam_t const *xpp, const char *line)$/;"	f	typeref:typename:int	file:
is_anchored	extern/libgit2/deps/pcre/pcre_compile.c	/^is_anchored(register const pcre_uchar *code, unsigned int bracket_map,$/;"	f	typeref:typename:BOOL	file:
is_attribute_of	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool is_attribute_of(xml_attribute_struct* attr, xml_node_struct* node) {$/;"	f	typeref:typename:PUGI__FN bool
is_bare	extern/libgit2/src/repository.h	/^	unsigned is_bare:1;$/;"	m	struct:git_repository	typeref:typename:unsigned:1
is_blank_line	extern/libgit2/src/trailer.c	/^static int is_blank_line(const char *str)$/;"	f	typeref:typename:int	file:
is_boundary	extern/libgit2/src/blame.h	/^	bool is_boundary;$/;"	m	struct:git_blame__entry	typeref:typename:bool
is_callable	extern/OpenXLSX/tests/catch/catch.hpp	/^struct is_callable<Fun(Args...)> : decltype(is_callable_tester::test<Fun, Args...>(0)) {};$/;"	s	namespace:Catch
is_callable_tester	extern/OpenXLSX/tests/catch/catch.hpp	/^struct is_callable_tester {$/;"	s	namespace:Catch
is_char7_bitset	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static BOOL is_char7_bitset(const sljit_u8 *bitset, BOOL nclass)$/;"	f	typeref:typename:BOOL	file:
is_chmod_supported	extern/libgit2/src/repository.c	/^static bool is_chmod_supported(const char *file_path)$/;"	f	typeref:typename:bool	file:
is_complete	extern/libgit2/src/transports/auth.h	/^	int (*is_complete)(git_http_auth_context *ctx);$/;"	m	struct:git_http_auth_context	typeref:typename:int (*)(git_http_auth_context * ctx)
is_counted_repeat	extern/libgit2/deps/pcre/pcre_compile.c	/^is_counted_repeat(const pcre_uchar *p)$/;"	f	typeref:typename:BOOL	file:
is_cr_needed	extern/libgit2/src/xdiff/xmerge.c	/^static int is_cr_needed(xdfenv_t *xe1, xdfenv_t *xe2, xdmerge_t *m)$/;"	f	typeref:typename:int	file:
is_crud	extern/libgit2/src/signature.c	/^static bool is_crud(unsigned char c)$/;"	f	typeref:typename:bool	file:
is_date	extern/libgit2/src/date.c	/^static int is_date(int year, int month, int day, struct tm *now_tm, time_t now, struct tm *tm)$/;"	f	typeref:typename:int	file:
is_dir	extern/libgit2/src/attr_file.h	/^	int      is_dir;$/;"	m	struct:__anon32d629ad0808	typeref:typename:int
is_dirty_cb	extern/libgit2/src/stash.c	/^static int is_dirty_cb(const char *path, unsigned int status, void *payload)$/;"	f	typeref:typename:int	file:
is_empty_rec	extern/libgit2/src/xdiff/xemit.c	/^static int is_empty_rec(xdfile_t *xdf, long ri)$/;"	f	typeref:typename:int	file:
is_eol	extern/libgit2/src/mailmap.c	/^static bool is_eol(git_parse_ctx *ctx)$/;"	f	typeref:typename:bool	file:
is_eol_crlf	extern/libgit2/src/xdiff/xmerge.c	/^static int is_eol_crlf(xdfile_t *file, int i)$/;"	f	typeref:typename:int	file:
is_file_or_link	extern/libgit2/src/index.c	/^GIT_INLINE(bool) is_file_or_link(const int filemode)$/;"	f	typeref:typename:bool
is_filemode_changed	extern/libgit2/src/checkout.c	/^GIT_INLINE(bool) is_filemode_changed(git_filemode_t a, git_filemode_t b, int respect_filemode)$/;"	f	typeref:typename:bool
is_filesystem_case_insensitive	extern/libgit2/src/repository.c	/^static bool is_filesystem_case_insensitive(const char *gitdir_path)$/;"	f	typeref:typename:bool	file:
is_forbidden_custom_header	extern/libgit2/src/transports/smart.c	/^static bool is_forbidden_custom_header(const char *custom_header)$/;"	f	typeref:typename:bool	file:
is_func_rec	extern/libgit2/src/xdiff/xemit.c	/^static int is_func_rec(xdfile_t *xdf, xdemitconf_t const *xecfg, long ri)$/;"	f	typeref:typename:int	file:
is_glob_special	extern/libgit2/src/wildmatch.c	/^#define is_glob_special(/;"	d	file:
is_hashable	extern/NamedType/underlying_functionalities.hpp	/^    static constexpr bool is_hashable = true;$/;"	m	struct:fluent::Hashable	typeref:typename:bool
is_hashable	ntskills.hpp	/^  static constexpr bool is_hashable = true;$/;"	m	struct:nt::Hashable	typeref:typename:bool
is_ignored	extern/libgit2/src/iterator.c	/^	int is_ignored;$/;"	m	struct:__anonb487a9b80708	typeref:typename:int	file:
is_index_extended	extern/libgit2/src/index.c	/^static bool is_index_extended(git_index *index)$/;"	f	typeref:typename:bool	file:
is_integer	extern/libgit2/examples/common.c	/^int is_integer(int *out, const char *str, int allow_negative)$/;"	f	typeref:typename:int
is_little_endian	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool is_little_endian() {$/;"	f	typeref:typename:PUGI__FN bool
is_malformed_http_header	extern/libgit2/src/transports/smart.c	/^static bool is_malformed_http_header(const char *http_header)$/;"	f	typeref:typename:bool	file:
is_merge	extern/libgit2/src/fetchhead.h	/^	unsigned int is_merge;$/;"	m	struct:git_fetchhead_ref	typeref:typename:unsigned int
is_namechar	extern/libgit2/src/config_parse.c	/^GIT_INLINE(bool) is_namechar(char c)$/;"	f	typeref:typename:bool
is_nan	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool is_nan(double value)$/;"	f	typeref:typename:PUGI__FN bool
is_path_occupied	extern/libgit2/src/submodule.c	/^static int is_path_occupied(bool *occupied, git_repository *repo, const char *path)$/;"	f	typeref:typename:int	file:
is_per_worktree_ref	extern/libgit2/src/refdb_fs.c	/^static bool is_per_worktree_ref(const char *ref_name)$/;"	f	typeref:typename:bool	file:
is_posinv_expr	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool is_posinv_expr() const$/;"	f	class:xpath_ast_node	typeref:typename:bool	file:
is_posinv_step	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool is_posinv_step() const$/;"	f	class:xpath_ast_node	typeref:typename:bool	file:
is_powerof2	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE BOOL is_powerof2(unsigned int value)$/;"	f	typeref:typename:SLJIT_INLINE BOOL	file:
is_prefixed	extern/libgit2/examples/common.c	/^size_t is_prefixed(const char *str, const char *pfx)$/;"	f	typeref:typename:size_t
is_racy_entry	extern/libgit2/src/index.c	/^static bool is_racy_entry(git_index *index, const git_index_entry *entry)$/;"	f	typeref:typename:bool	file:
is_range	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct is_range {$/;"	s	namespace:Catch
is_range	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct is_range<T^> {$/;"	s	namespace:Catch
is_readonly	extern/libgit2/src/config.c	/^static int is_readonly(const git_config *cfg)$/;"	f	typeref:typename:int	file:
is_rename_source	extern/libgit2/src/diff_tform.c	/^static bool is_rename_source($/;"	f	typeref:typename:bool	file:
is_rename_target	extern/libgit2/src/diff_tform.c	/^static bool is_rename_target($/;"	f	typeref:typename:bool	file:
is_startline	extern/libgit2/deps/pcre/pcre_compile.c	/^is_startline(const pcre_uchar *code, unsigned int bracket_map,$/;"	f	typeref:typename:BOOL	file:
is_text_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline bool is_text_node(xml_node_struct* node) {$/;"	f	typeref:typename:bool
is_valid_ref_char	extern/libgit2/src/refs.c	/^static int is_valid_ref_char(char ch)$/;"	f	typeref:typename:int	file:
is_valid_tmp_path	extern/libgit2/tests/clar/sandbox.h	/^is_valid_tmp_path(const char *path)$/;"	f	typeref:typename:int
is_workdir_base_or_new	extern/libgit2/src/checkout.c	/^GIT_INLINE(bool) is_workdir_base_or_new($/;"	f	typeref:typename:bool
is_worktree	extern/libgit2/src/repository.h	/^	unsigned is_worktree:1;$/;"	m	struct:git_repository	typeref:typename:unsigned:1
is_worktree_dir	extern/libgit2/src/worktree.c	/^static bool is_worktree_dir(const char *dir)$/;"	f	typeref:typename:bool	file:
is_xpath_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	inline bool is_xpath_attribute(const char_t* name)$/;"	f	typeref:typename:bool
is_zlib_compressed_data	extern/libgit2/src/odb_loose.c	/^static int is_zlib_compressed_data(unsigned char *data, size_t data_len)$/;"	f	typeref:typename:int	file:
iscondassert	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL iscondassert;                \/* Next assert is a condition *\/$/;"	m	struct:compile_data	typeref:typename:BOOL
isize	extern/libgit2/src/xdiff/xtypes.h	/^	long isize, nsize;$/;"	m	struct:s_chastore	typeref:typename:long
islr	lr.hpp	/^template <typename T> struct islr : std::false_type {};$/;"	s	namespace:lr
islr_t	lr.hpp	/^template <typename T> using islr_t = typename islr<T>::type;$/;"	t	namespace:lr	typeref:typename:islr<T>::type
islr_v	lr.hpp	/^template <typename T> inline constexpr bool islr_v = islr<T>::value;$/;"	v	namespace:lr	typeref:typename:bool
itMessage	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            std::vector<MessageInfo>::const_iterator itMessage;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:std::vector<MessageInfo>::const_iterator
item	extern/libgit2/src/commit_list.h	/^	git_commit_list_node *item;$/;"	m	struct:git_commit_list	typeref:typename:git_commit_list_node *
item	extern/libgit2/tests/refs/branches/create.c	/^	struct item {$/;"	s	function:test_refs_branches_create__name_vs_namespace	file:
item	extern/libgit2/tests/refs/branches/create.c	/^	struct item {$/;"	s	function:test_refs_branches_create__name_vs_namespace_fail	file:
item 1.1 item 1.2 changed item 1.3 changed item 1.4 item 1.5 item 1.6 item 1.7 item 1.8 item 1.9 item 1.10 added	extern/libgit2/tests/resources/userdiff/after/file.html	/^  <\/h1>$/;"	h
item 1.1 item 1.2 changed item 1.3 changed item 1.4 item 1.5 item 1.6 item 1.7 item 1.8 item 1.9 item 1.10 added	extern/libgit2/tests/resources/userdiff/files/file.html	/^  <\/h1>$/;"	h
item 1.1 item 1.2 item 1.3 item 1.4 item 1.5 item 1.6 item 1.7 item 1.8 item 1.9	extern/libgit2/tests/resources/userdiff/before/file.html	/^  <\/h1>$/;"	h
item 2.1 item 2.2 item 2.3 item 2.4 item 2.5 item 2.6 item 2.7 changed item 2.7.1 added item 2.8	extern/libgit2/tests/resources/userdiff/after/file.html	/^  <\/h1>$/;"	h
item 2.1 item 2.2 item 2.3 item 2.4 item 2.5 item 2.6 item 2.7 changed item 2.7.1 added item 2.8	extern/libgit2/tests/resources/userdiff/files/file.html	/^  <\/h1>$/;"	h
item 2.1 item 2.2 item 2.3 item 2.4 item 2.5 item 2.6 item 2.7 item 2.8	extern/libgit2/tests/resources/userdiff/before/file.html	/^  <\/h1>$/;"	h
item 3.1 item 3.2 item 3.3 item 3.4 item 3.5 item 3.6	extern/libgit2/tests/resources/userdiff/after/file.html	/^  <\/h1>$/;"	h
item 3.1 item 3.2 item 3.3 item 3.4 item 3.5 item 3.6	extern/libgit2/tests/resources/userdiff/files/file.html	/^  <\/h1>$/;"	h
item 3.1 item 3.2 item 3.3 item 3.4 item 3.5 item 3.6 item 3.7 item 3.8	extern/libgit2/tests/resources/userdiff/before/file.html	/^  <\/h1>$/;"	h
item_path_offset	extern/libgit2/src/sortedcache.h	/^	size_t       item_path_offset;$/;"	m	struct:__anond92d40380108	typeref:typename:size_t
item_size	extern/libgit2/src/pool.h	/^	size_t item_size;  \/* size of single alloc unit in bytes *\/$/;"	m	struct:__anon7e0b9aed0108	typeref:typename:size_t
item_size	extern/libgit2/src/pool.h	/^	size_t item_size;$/;"	m	struct:__anon7e0b9aed0208	typeref:typename:size_t
item_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		struct item_t$/;"	s	class:compact_hash_table	file:
items	extern/libgit2/src/repository.c	/^} items[] = {$/;"	v	typeref:typename:const struct __anon05b1158e0108[]
items	extern/libgit2/src/sortedcache.h	/^	git_vector   items;$/;"	m	struct:__anond92d40380108	typeref:typename:git_vector
iter	extern/libgit2/src/branch.c	/^	git_reference_iterator *iter;$/;"	m	struct:__anon0a4c2abc0108	typeref:typename:git_reference_iterator *	file:
iter	extern/libgit2/src/config.c	/^	git_config_iterator *iter;$/;"	m	struct:__anon2d64db840508	typeref:typename:git_config_iterator *	file:
iter_load_loose_paths	extern/libgit2/src/refdb_fs.c	/^static int iter_load_loose_paths(refdb_fs_backend *backend, refdb_fs_iter *iter)$/;"	f	typeref:typename:int	file:
iterate_over_patch	extern/libgit2/tests/diff/diffiter.c	/^static void iterate_over_patch(git_patch *patch, diff_expects *exp)$/;"	f	typeref:typename:void	file:
iterate_refs	extern/libgit2/tests/threads/refdb.c	/^static void *iterate_refs(void *arg)$/;"	f	typeref:typename:void *	file:
iterator	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef It iterator;$/;"	t	class:pugi::xml_object_range	typeref:typename:It
iterator	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef const xpath_node* iterator;$/;"	t	class:pugi::xpath_node_set	typeref:typename:const xpath_node *
iterator	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef xml_node_iterator iterator;$/;"	t	class:pugi::xml_node	typeref:typename:xml_node_iterator
iterator__descend_symlinks	extern/libgit2/src/iterator.c	/^#define iterator__descend_symlinks(/;"	d	file:
iterator__do_autoexpand	extern/libgit2/src/iterator.c	/^#define iterator__do_autoexpand(/;"	d	file:
iterator__dont_autoexpand	extern/libgit2/src/iterator.c	/^#define iterator__dont_autoexpand(/;"	d	file:
iterator__flag	extern/libgit2/src/iterator.c	/^#define iterator__flag(/;"	d	file:
iterator__has_been_accessed	extern/libgit2/src/iterator.c	/^#define iterator__has_been_accessed(/;"	d	file:
iterator__honor_ignores	extern/libgit2/src/iterator.c	/^#define iterator__honor_ignores(/;"	d	file:
iterator__ignore_case	extern/libgit2/src/iterator.c	/^#define iterator__ignore_case(/;"	d	file:
iterator__ignore_dot_git	extern/libgit2/src/iterator.c	/^#define iterator__ignore_dot_git(/;"	d	file:
iterator__include_conflicts	extern/libgit2/src/iterator.c	/^#define iterator__include_conflicts(/;"	d	file:
iterator__include_trees	extern/libgit2/src/iterator.c	/^#define iterator__include_trees(/;"	d	file:
iterator_advance	extern/libgit2/src/diff_generate.c	/^static int iterator_advance($/;"	f	typeref:typename:int	file:
iterator_advance_into	extern/libgit2/src/diff_generate.c	/^static int iterator_advance_into($/;"	f	typeref:typename:int	file:
iterator_advance_over	extern/libgit2/src/diff_generate.c	/^static int iterator_advance_over($/;"	f	typeref:typename:int	file:
iterator_category	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef std::bidirectional_iterator_tag iterator_category;$/;"	t	class:pugi::xml_attribute_iterator	typeref:typename:std::bidirectional_iterator_tag
iterator_category	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef std::bidirectional_iterator_tag iterator_category;$/;"	t	class:pugi::xml_named_node_iterator	typeref:typename:std::bidirectional_iterator_tag
iterator_category	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef std::bidirectional_iterator_tag iterator_category;$/;"	t	class:pugi::xml_node_iterator	typeref:typename:std::bidirectional_iterator_tag
iterator_category	p.cpp	/^  using iterator_category = std::input_iterator_tag;$/;"	t	struct:aiterator	typeref:typename:std::input_iterator_tag	file:
iterator_clear	extern/libgit2/src/iterator.c	/^static void iterator_clear(git_iterator *iter)$/;"	f	typeref:typename:void	file:
iterator_compare	extern/libgit2/tests/apply/apply_helpers.c	/^static int iterator_compare(const git_index_entry *entry, void *_data)$/;"	f	typeref:typename:int	file:
iterator_compare_data	extern/libgit2/tests/apply/apply_helpers.c	/^struct iterator_compare_data {$/;"	s	file:
iterator_current	extern/libgit2/src/diff_generate.c	/^static int iterator_current($/;"	f	typeref:typename:int	file:
iterator_eq	extern/libgit2/tests/apply/apply_helpers.c	/^static int iterator_eq(const git_index_entry **entry, void *_data)$/;"	f	typeref:typename:int	file:
iterator_flags	extern/libgit2/src/refdb_fs.c	/^	git_iterator_flag_t iterator_flags;$/;"	m	struct:refdb_fs_backend	typeref:typename:git_iterator_flag_t	file:
iterator_for_annotated_commit	extern/libgit2/src/merge.c	/^static int iterator_for_annotated_commit($/;"	f	typeref:typename:int	file:
iterator_for_filesystem	extern/libgit2/src/iterator.c	/^static int iterator_for_filesystem($/;"	f	typeref:typename:int	file:
iterator_given_or_empty	extern/libgit2/src/merge.c	/^static git_iterator *iterator_given_or_empty(git_iterator **empty, git_iterator *given)$/;"	f	typeref:typename:git_iterator *	file:
iterator_has_ended	extern/libgit2/src/iterator.c	/^GIT_INLINE(bool) iterator_has_ended(git_iterator *iter, const char *path)$/;"	f	typeref:typename:bool
iterator_has_started	extern/libgit2/src/iterator.c	/^GIT_INLINE(bool) iterator_has_started($/;"	f	typeref:typename:bool
iterator_init_common	extern/libgit2/src/iterator.c	/^static int iterator_init_common($/;"	f	typeref:typename:int	file:
iterator_pathlist_init	extern/libgit2/src/iterator.c	/^static int iterator_pathlist_init(git_iterator *iter, git_strarray *pathlist)$/;"	f	typeref:typename:int	file:
iterator_pathlist_next_is	extern/libgit2/src/iterator.c	/^static bool iterator_pathlist_next_is(git_iterator *iter, const char *path)$/;"	f	typeref:typename:bool	file:
iterator_pathlist_search	extern/libgit2/src/iterator.c	/^static iterator_pathlist_search_t iterator_pathlist_search($/;"	f	typeref:typename:iterator_pathlist_search_t	file:
iterator_pathlist_search_t	extern/libgit2/src/iterator.c	/^} iterator_pathlist_search_t;$/;"	t	typeref:enum:__anonb487a9b80103	file:
iterator_rand	extern/libgit2/src/revwalk.h	/^	git_commit_list *iterator_rand;$/;"	m	struct:git_revwalk	typeref:typename:git_commit_list *
iterator_range_free	extern/libgit2/src/iterator.c	/^static void iterator_range_free(git_iterator *iter)$/;"	f	typeref:typename:void	file:
iterator_range_init	extern/libgit2/src/iterator.c	/^static int iterator_range_init($/;"	f	typeref:typename:int	file:
iterator_reset_range	extern/libgit2/src/iterator.c	/^static int iterator_reset_range($/;"	f	typeref:typename:int	file:
iterator_reverse	extern/libgit2/src/revwalk.h	/^	git_commit_list *iterator_reverse;$/;"	m	struct:git_revwalk	typeref:typename:git_commit_list *
iterator_set_ignore_case	extern/libgit2/src/iterator.c	/^static void iterator_set_ignore_case(git_iterator *iter, bool ignore_case)$/;"	f	typeref:typename:void	file:
iterator_time	extern/libgit2/src/revwalk.h	/^	git_pqueue iterator_time;$/;"	m	struct:git_revwalk	typeref:typename:git_pqueue
iterator_topo	extern/libgit2/src/revwalk.h	/^	git_commit_list *iterator_topo;$/;"	m	struct:git_revwalk	typeref:typename:git_commit_list *
j	extern/NamedType/main.cpp	/^    StrongInt j(42);$/;"	v	typeref:typename:StrongInt
j_	extern/OpenXLSX/benchmark/table_printer.h	/^        int j_; \/\/ index of current column$/;"	m	class:bprinter::TablePrinter	typeref:typename:int
jit_arguments	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct jit_arguments {$/;"	s	file:
jit_arguments	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} jit_arguments;$/;"	t	typeref:struct:jit_arguments	file:
jit_function	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef int (SLJIT_FUNC *jit_function)(jit_arguments *args);$/;"	t	typeref:typename:int (SLJIT_FUNC *)(jit_arguments * args)	file:
jit_machine_stack_exec	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_NOINLINE int jit_machine_stack_exec(jit_arguments *arguments, void *executable_func/;"	f	typeref:typename:SLJIT_NOINLINE int	file:
jscript_compat	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   jscript_compat;          \/* JAVASCRIPT_COMPAT flag *\/$/;"	m	struct:match_data	typeref:typename:BOOL
jscript_compat	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL jscript_compat;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
jump	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_jump *jump;$/;"	m	struct:jump_list	typeref:struct:sljit_jump *	file:
jump_list	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct jump_list {$/;"	s	file:
jump_list	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} jump_list;$/;"	t	typeref:struct:jump_list	file:
junk_obj	extern/libgit2/tests/object/raw/data.h	/^static git_rawobj junk_obj = {$/;"	v	typeref:typename:git_rawobj
just_return_origin	extern/libgit2/tests/clone/nonetwork.c	/^static int just_return_origin(git_remote **out, git_repository *repo, const char *name, const ch/;"	f	typeref:typename:int	file:
just_return_repo	extern/libgit2/tests/clone/nonetwork.c	/^static int just_return_repo(git_repository **out, const char *path, int bare, void *payload)$/;"	f	typeref:typename:int	file:
kbd	extern/OpenXLSX/doxy/customdoxygen.css	/^tt, code, kbd, samp, a.el,$/;"	s
kcalloc	extern/libgit2/src/idxmap.c	/^#define kcalloc /;"	d	file:
kcalloc	extern/libgit2/src/khash.h	/^#define kcalloc(/;"	d
kcalloc	extern/libgit2/src/offmap.c	/^#define kcalloc /;"	d	file:
kcalloc	extern/libgit2/src/oidmap.c	/^#define kcalloc /;"	d	file:
kcalloc	extern/libgit2/src/strmap.c	/^#define kcalloc /;"	d	file:
keepalive	extern/libgit2/src/transports/http.c	/^	    keepalive : 1,$/;"	m	struct:__anon0458035d0308	typeref:typename:unsigned:1	file:
key	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			const void* key;$/;"	m	struct:compact_hash_table::item_t	typeref:typename:const void *	file:
key	extern/libgit2/include/git2/message.h	/^  const char *key;$/;"	m	struct:__anond70699990108	typeref:typename:const char *
key	extern/libgit2/src/attr_file.h	/^	int key;$/;"	m	struct:__anon32d629ad0908	typeref:typename:int
key	extern/libgit2/src/sortedcache.c	/^	const char *key;$/;"	m	struct:sortedcache_magic_key	typeref:typename:const char *	file:
key	extern/libgit2/tests/core/strmap.c	/^		char *key;$/;"	m	struct:test_core_strmap__iteration::__anon7181b0a80108	typeref:typename:char *	file:
key_shift	extern/libgit2/src/xdiff/xhistogram.c	/^		     key_shift,$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
kfree	extern/libgit2/src/idxmap.c	/^#define kfree /;"	d	file:
kfree	extern/libgit2/src/khash.h	/^#define kfree(/;"	d
kfree	extern/libgit2/src/offmap.c	/^#define kfree /;"	d	file:
kfree	extern/libgit2/src/oidmap.c	/^#define kfree /;"	d	file:
kfree	extern/libgit2/src/strmap.c	/^#define kfree /;"	d	file:
kh_begin	extern/libgit2/src/khash.h	/^#define kh_begin(/;"	d
kh_clear	extern/libgit2/src/khash.h	/^#define kh_clear(/;"	d
kh_cstr_t	extern/libgit2/src/khash.h	/^typedef const char *kh_cstr_t;$/;"	t	typeref:typename:const char *
kh_del	extern/libgit2/src/khash.h	/^#define kh_del(/;"	d
kh_destroy	extern/libgit2/src/khash.h	/^#define kh_destroy(/;"	d
kh_end	extern/libgit2/src/khash.h	/^#define kh_end(/;"	d
kh_exist	extern/libgit2/src/khash.h	/^#define kh_exist(/;"	d
kh_foreach	extern/libgit2/src/khash.h	/^#define kh_foreach(/;"	d
kh_foreach_value	extern/libgit2/src/khash.h	/^#define kh_foreach_value(/;"	d
kh_get	extern/libgit2/src/khash.h	/^#define kh_get(/;"	d
kh_init	extern/libgit2/src/khash.h	/^#define kh_init(/;"	d
kh_inline	extern/libgit2/src/khash.h	/^#define kh_inline /;"	d
kh_inline	extern/libgit2/src/khash.h	/^#define kh_inline$/;"	d
kh_int64_hash_equal	extern/libgit2/src/khash.h	/^#define kh_int64_hash_equal(/;"	d
kh_int64_hash_func	extern/libgit2/src/khash.h	/^#define kh_int64_hash_func(/;"	d
kh_int_hash_equal	extern/libgit2/src/khash.h	/^#define kh_int_hash_equal(/;"	d
kh_int_hash_func	extern/libgit2/src/khash.h	/^#define kh_int_hash_func(/;"	d
kh_int_hash_func2	extern/libgit2/src/khash.h	/^#define kh_int_hash_func2(/;"	d
kh_key	extern/libgit2/src/khash.h	/^#define kh_key(/;"	d
kh_n_buckets	extern/libgit2/src/khash.h	/^#define kh_n_buckets(/;"	d
kh_put	extern/libgit2/src/khash.h	/^#define kh_put(/;"	d
kh_resize	extern/libgit2/src/khash.h	/^#define kh_resize(/;"	d
kh_size	extern/libgit2/src/khash.h	/^#define kh_size(/;"	d
kh_str_hash_equal	extern/libgit2/src/khash.h	/^#define kh_str_hash_equal(/;"	d
kh_str_hash_func	extern/libgit2/src/khash.h	/^#define kh_str_hash_func(/;"	d
kh_val	extern/libgit2/src/khash.h	/^#define kh_val(/;"	d
kh_value	extern/libgit2/src/khash.h	/^#define kh_value(/;"	d
khash_t	extern/libgit2/src/khash.h	/^#define khash_t(/;"	d
khint32_t	extern/libgit2/src/khash.h	/^typedef unsigned int khint32_t;$/;"	t	typeref:typename:unsigned int
khint32_t	extern/libgit2/src/khash.h	/^typedef unsigned long khint32_t;$/;"	t	typeref:typename:unsigned long
khint64_t	extern/libgit2/src/khash.h	/^typedef unsigned long khint64_t;$/;"	t	typeref:typename:unsigned long
khint64_t	extern/libgit2/src/khash.h	/^typedef unsigned long long khint64_t;$/;"	t	typeref:typename:unsigned long long
khint_t	extern/libgit2/src/khash.h	/^typedef khint32_t khint_t;$/;"	t	typeref:typename:khint32_t
khiter_t	extern/libgit2/src/khash.h	/^typedef khint_t khiter_t;$/;"	t	typeref:typename:khint_t
klass	extern/libgit2/include/git2/errors.h	/^	int klass;$/;"	m	struct:__anonb92219d10208	typeref:typename:int
kmalloc	extern/libgit2/src/idxmap.c	/^#define kmalloc /;"	d	file:
kmalloc	extern/libgit2/src/khash.h	/^#define kmalloc(/;"	d
kmalloc	extern/libgit2/src/offmap.c	/^#define kmalloc /;"	d	file:
kmalloc	extern/libgit2/src/oidmap.c	/^#define kmalloc /;"	d	file:
kmalloc	extern/libgit2/src/strmap.c	/^#define kmalloc /;"	d	file:
krealloc	extern/libgit2/src/idxmap.c	/^#define krealloc /;"	d	file:
krealloc	extern/libgit2/src/khash.h	/^#define krealloc(/;"	d
krealloc	extern/libgit2/src/offmap.c	/^#define krealloc /;"	d	file:
krealloc	extern/libgit2/src/oidmap.c	/^#define krealloc /;"	d	file:
krealloc	extern/libgit2/src/strmap.c	/^#define krealloc /;"	d	file:
kreallocarray	extern/libgit2/src/idxmap.c	/^#define kreallocarray /;"	d	file:
kreallocarray	extern/libgit2/src/khash.h	/^#define kreallocarray(/;"	d
kreallocarray	extern/libgit2/src/offmap.c	/^#define kreallocarray /;"	d	file:
kreallocarray	extern/libgit2/src/oidmap.c	/^#define kreallocarray /;"	d	file:
kreallocarray	extern/libgit2/src/strmap.c	/^#define kreallocarray /;"	d	file:
kroundup32	extern/libgit2/src/khash.h	/^#define kroundup32(/;"	d
l_buf	extern/libgit2/deps/zlib/deflate.h	/^    uchf *l_buf;          \/* buffer for literals or lengths *\/$/;"	m	struct:internal_state	typeref:typename:uchf *
l_desc	extern/libgit2/deps/zlib/deflate.h	/^    struct tree_desc_s l_desc;               \/* desc. for literal tree *\/$/;"	m	struct:internal_state	typeref:struct:tree_desc_s
label	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *label;$/;"	m	struct:label_addr_list	typeref:struct:sljit_label *	file:
label_addr_list	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct label_addr_list {$/;"	s	file:
label_addr_list	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} label_addr_list;$/;"	t	typeref:struct:label_addr_list	file:
label_addrs	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  label_addr_list *label_addrs;$/;"	m	struct:compiler_common	typeref:typename:label_addr_list *	file:
last	extern/libgit2/deps/zlib/inflate.h	/^    int last;                   \/* true if processing last block *\/$/;"	m	struct:inflate_state	typeref:typename:int
last	extern/libgit2/src/config_entries.c	/^	struct config_entry_list *last;$/;"	m	struct:config_entry_list	typeref:struct:config_entry_list *	file:
last	extern/libgit2/src/xdiff/xpatience.c	/^	} *entries, *first, *last;$/;"	m	struct:hashmap	typeref:struct:hashmap::entry ***	file:
last	extern/libgit2/tests/clar_libgit2_timer.h	/^	double last;$/;"	m	struct:cl_perf_timer	typeref:typename:double
lastName	extern/NamedType/main.cpp	/^    static const LastName::argument lastName;$/;"	v	typeref:typename:const LastName::argument	file:
last_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_node::last_attribute() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_attribute
last_bytes	extern/libgit2/src/transports/smart_protocol.c	/^	size_t last_bytes;$/;"	m	struct:push_packbuilder_payload	typeref:typename:size_t	file:
last_cb	extern/libgit2/src/transports/http.c	/^	enum last_cb last_cb;$/;"	m	struct:__anon0458035d0308	typeref:enum:last_cb	file:
last_cb	extern/libgit2/src/transports/http.c	/^enum last_cb {$/;"	g	file:
last_child	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::last_child() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
last_commit	extern/libgit2/src/rebase.c	/^	git_commit *last_commit;$/;"	m	struct:git_rebase	typeref:typename:git_commit *	file:
last_error	extern/libgit2/src/filebuf.h	/^	int last_error;$/;"	m	struct:git_filebuf	typeref:typename:int
last_error	extern/libgit2/src/global.h	/^	git_error *last_error;$/;"	m	struct:__anonf985f1a40108	typeref:typename:git_error *
last_error	extern/libgit2/tests/clar.c	/^	struct clar_error *last_error;$/;"	m	struct:clar_report	typeref:struct:clar_error *	file:
last_error_retryable	extern/libgit2/src/win32/posix_w32.c	/^GIT_INLINE(bool) last_error_retryable(void)$/;"	f	typeref:typename:bool
last_explicit	extern/libgit2/tests/clar.c	/^	struct clar_explicit *last_explicit;$/;"	m	struct:__anonab24499b0108	typeref:struct:clar_explicit *	file:
last_fired_bytes	extern/libgit2/src/transports/smart_protocol.c	/^	size_t last_fired_bytes;$/;"	m	struct:network_packetsize_payload	typeref:typename:size_t	file:
last_flush	extern/libgit2/deps/zlib/deflate.h	/^    int   last_flush;    \/* value of flush param for previous deflate call *\/$/;"	m	struct:internal_state	typeref:typename:int
last_found	extern/libgit2/src/odb_pack.c	/^	struct git_pack_file *last_found;$/;"	m	struct:pack_backend	typeref:struct:git_pack_file *	file:
last_freshen	extern/libgit2/src/pack.h	/^	time_t last_freshen; \/* last time the packfile was freshened *\/$/;"	m	struct:git_pack_file	typeref:typename:time_t
last_line	extern/libgit2/src/trailer.c	/^static bool last_line(size_t *out, const char *buf, size_t len)$/;"	f	typeref:typename:bool	file:
last_lit	extern/libgit2/deps/zlib/deflate.h	/^    uInt last_lit;      \/* running index in l_buf *\/$/;"	m	struct:internal_state	typeref:typename:uInt
last_progress_report_time	extern/libgit2/src/pack-objects.h	/^	double last_progress_report_time; \/* the time progress was last reported *\/$/;"	m	struct:git_packbuilder	typeref:typename:double
last_progress_report_time	extern/libgit2/src/transports/smart_protocol.c	/^	double last_progress_report_time;$/;"	m	struct:push_packbuilder_payload	typeref:typename:double	file:
last_report	extern/libgit2/tests/clar.c	/^	struct clar_report *last_report;$/;"	m	struct:__anonab24499b0108	typeref:struct:clar_report *	file:
last_usage	extern/libgit2/src/pack.h	/^	size_t last_usage; \/* enough? *\/$/;"	m	struct:git_pack_cache_entry	typeref:typename:size_t
last_used	extern/libgit2/src/mwindow.h	/^	size_t last_used;$/;"	m	struct:git_mwindow	typeref:typename:size_t
latin1_decoder	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct latin1_decoder$/;"	s	file:
latin1_writer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct latin1_writer$/;"	s	file:
lcc	extern/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uint8 *lcc;         \/* Points to lower casing table *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uint8 *
lcc	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *lcc;            \/* Points to lower casing table *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uint8 *
lcc	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_sw lcc;$/;"	m	struct:compiler_common	typeref:typename:sljit_sw	file:
lcc_offset	extern/libgit2/deps/pcre/pcre_internal.h	/^#define lcc_offset /;"	d
leaky_pack	extern/libgit2/tests/pack/indexer.c	/^static const unsigned char leaky_pack[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
leaky_pack_len	extern/libgit2/tests/pack/indexer.c	/^static const unsigned int leaky_pack_len = 33;$/;"	v	typeref:typename:const unsigned int	file:
len	extern/libgit2/deps/http-parser/http_parser.h	/^    uint16_t len;               \/* Length of run in buffer *\/$/;"	m	struct:http_parser_url::__anonb6e7d14c0108	typeref:typename:uint16_t
len	extern/libgit2/deps/ntlmclient/ntlm.h	/^	size_t len;$/;"	m	struct:__anon8624cbbb0208	typeref:typename:size_t
len	extern/libgit2/deps/pcre/pcre_compile.c	/^  int   len;                 \/* Length of verb name *\/$/;"	m	struct:verbitem	typeref:typename:int	file:
len	extern/libgit2/deps/zlib/deflate.h	/^        ush  len;        \/* length of bit string *\/$/;"	m	union:ct_data_s::__anonfe3a00cc020a	typeref:typename:ush
len	extern/libgit2/include/git2/cert.h	/^	size_t len;$/;"	m	struct:__anon6f6b75620308	typeref:typename:size_t
len	extern/libgit2/include/git2/merge.h	/^	size_t len;$/;"	m	struct:__anon5e9a43240608	typeref:typename:size_t
len	extern/libgit2/src/hash.h	/^	size_t len;$/;"	m	struct:__anon6a671f570108	typeref:typename:size_t
len	extern/libgit2/src/map.h	/^	size_t len; \/* data length			*\/$/;"	m	struct:__anonfbd1e3910108	typeref:typename:size_t
len	extern/libgit2/src/netops.h	/^	size_t len;$/;"	m	struct:gitno_buffer	typeref:typename:size_t
len	extern/libgit2/src/odb.h	/^	size_t len;			\/**< Total number of bytes in data. *\/$/;"	m	struct:__anonfbf77e280108	typeref:typename:size_t
len	extern/libgit2/src/odb_mempack.c	/^	size_t len;$/;"	m	struct:memobject	typeref:typename:size_t	file:
len	extern/libgit2/src/transports/smart.h	/^	size_t len;$/;"	m	struct:__anoncc6f59690608	typeref:typename:size_t
len	extern/libgit2/src/transports/smart.h	/^	size_t len;$/;"	m	struct:__anoncc6f59690708	typeref:typename:size_t
len	extern/libgit2/src/win32/findfile.c	/^	DWORD len;$/;"	m	struct:__anon9f0fab110108	typeref:typename:DWORD	file:
len	extern/libgit2/src/xdiff/xemit.c	/^	long len;$/;"	m	struct:func_line	typeref:typename:long	file:
len	extern/libgit2/tests/diff/rename.c	/^	size_t len;$/;"	m	struct:rename_expected	typeref:typename:size_t	file:
len	extern/libgit2/tests/merge/workdir/setup.c	/^	unsigned int len;$/;"	m	struct:annotated_commit_cb_data	typeref:typename:unsigned int	file:
len1	extern/libgit2/src/xdiff/xprepare.c	/^	long len1, len2;$/;"	m	struct:s_xdlclass	typeref:typename:long	file:
len2	extern/libgit2/src/xdiff/xprepare.c	/^	long len1, len2;$/;"	m	struct:s_xdlclass	typeref:typename:long	file:
lenbits	extern/libgit2/deps/zlib/inflate.h	/^    unsigned lenbits;           \/* index bits for lencode *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
lencode	extern/libgit2/deps/zlib/inflate.h	/^    code const FAR *lencode;    \/* starting table for length\/literal codes *\/$/;"	m	struct:inflate_state	typeref:typename:code const FAR *
lenfix	extern/libgit2/deps/zlib/inffixed.h	/^    static const code lenfix[512] = {$/;"	v	typeref:typename:const code[512]
length	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		size_t length() const$/;"	f	class:xpath_string	typeref:typename:size_t	file:
length	extern/libgit2/deps/pcre/pcre_exec.c	/^#define length /;"	d	file:
length	extern/libgit2/deps/pcre/pcre_internal.h	/^  int                length;        \/* Length of the name *\/$/;"	m	struct:named_group	typeref:typename:int
length	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int length;$/;"	m	struct:compare_context	typeref:typename:int	file:
length	extern/libgit2/deps/zlib/inflate.h	/^    unsigned length;            \/* literal or length of data to copy *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
length	extern/libgit2/include/git2/odb.h	/^	unsigned short length;$/;"	m	struct:git_odb_expand_id	typeref:typename:unsigned short
length	extern/libgit2/script/user_model.c	/^	size_t length;$/;"	m	struct:git_vector	typeref:typename:size_t	file:
length	extern/libgit2/src/attr_file.h	/^	size_t length;$/;"	m	struct:__anon32d629ad0208	typeref:typename:size_t
length	extern/libgit2/src/bitvec.h	/^	size_t length;$/;"	m	struct:__anon8263d3700108	typeref:typename:size_t
length	extern/libgit2/src/date.c	/^	int length;$/;"	m	struct:typelen	typeref:typename:int	file:
length	extern/libgit2/src/tsort.c	/^	ssize_t length;$/;"	m	struct:tsort_run	typeref:typename:ssize_t	file:
length	extern/libgit2/src/vector.h	/^	size_t length;$/;"	m	struct:git_vector	typeref:typename:size_t
length_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		typedef __int64 length_type;$/;"	t	function:get_file_size	typeref:typename:__int64	file:
lenientConversion	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^	lenientConversion$/;"	e	enum:__anonce5e58f80203	file:
lens	extern/libgit2/deps/zlib/inflate.h	/^    unsigned short lens[320];   \/* temporary storage for code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned short[320]
less	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct less$/;"	s	file:
less_equal	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct less_equal$/;"	s	file:
level	extern/libgit2/deps/zlib/deflate.h	/^    int level;    \/* compression level (1..9) *\/$/;"	m	struct:internal_state	typeref:typename:int
level	extern/libgit2/deps/zlib/gzguts.h	/^    int level;              \/* compression level *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:int
level	extern/libgit2/include/git2/config.h	/^	git_config_level_t level; \/**< Which config file this was found in *\/$/;"	m	struct:git_config_entry	typeref:typename:git_config_level_t
level	extern/libgit2/src/config.c	/^	git_config_level_t level;$/;"	m	struct:__anon2d64db840108	typeref:typename:git_config_level_t	file:
level	extern/libgit2/src/config_file.c	/^	git_config_level_t level;$/;"	m	struct:__anon041cc2a30108	typeref:typename:git_config_level_t	file:
level	extern/libgit2/src/config_file.c	/^	git_config_level_t level;$/;"	m	struct:__anon041cc2a30208	typeref:typename:git_config_level_t	file:
level	extern/libgit2/src/config_mem.c	/^	git_config_level_t level;$/;"	m	struct:__anon36e9f1a20208	typeref:typename:git_config_level_t	file:
level	extern/libgit2/src/trace.h	/^	git_trace_level_t level;$/;"	m	struct:git_trace_data	typeref:typename:git_trace_level_t
level	extern/libgit2/src/xdiff/xdiff.h	/^	int level;$/;"	m	struct:s_xmparam	typeref:typename:int
lex_axis_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_axis_attribute,$/;"	e	enum:lexeme_t	file:
lex_close_brace	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_close_brace,$/;"	e	enum:lexeme_t	file:
lex_close_square_brace	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_close_square_brace,$/;"	e	enum:lexeme_t	file:
lex_comma	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_comma,$/;"	e	enum:lexeme_t	file:
lex_dot	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_dot,$/;"	e	enum:lexeme_t	file:
lex_double_colon	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_double_colon,$/;"	e	enum:lexeme_t	file:
lex_double_dot	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_double_dot,$/;"	e	enum:lexeme_t	file:
lex_double_slash	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_double_slash,$/;"	e	enum:lexeme_t	file:
lex_eof	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_eof$/;"	e	enum:lexeme_t	file:
lex_equal	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_equal,$/;"	e	enum:lexeme_t	file:
lex_greater	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_greater,$/;"	e	enum:lexeme_t	file:
lex_greater_or_equal	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_greater_or_equal,$/;"	e	enum:lexeme_t	file:
lex_less	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_less,$/;"	e	enum:lexeme_t	file:
lex_less_or_equal	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_less_or_equal,$/;"	e	enum:lexeme_t	file:
lex_minus	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_minus,$/;"	e	enum:lexeme_t	file:
lex_multiply	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_multiply,$/;"	e	enum:lexeme_t	file:
lex_none	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_none = 0,$/;"	e	enum:lexeme_t	file:
lex_not_equal	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_not_equal,$/;"	e	enum:lexeme_t	file:
lex_number	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_number,$/;"	e	enum:lexeme_t	file:
lex_open_brace	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_open_brace,$/;"	e	enum:lexeme_t	file:
lex_open_square_brace	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_open_square_brace,$/;"	e	enum:lexeme_t	file:
lex_plus	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_plus,$/;"	e	enum:lexeme_t	file:
lex_quoted_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_quoted_string,$/;"	e	enum:lexeme_t	file:
lex_slash	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_slash,$/;"	e	enum:lexeme_t	file:
lex_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_string,$/;"	e	enum:lexeme_t	file:
lex_union	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_union,$/;"	e	enum:lexeme_t	file:
lex_var_ref	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		lex_var_ref,$/;"	e	enum:lexeme_t	file:
lexeme_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	enum lexeme_t$/;"	g	file:
lf	extern/libgit2/src/buf_text.h	/^	unsigned int nul, cr, lf, crlf; \/* NUL, CR, LF and CRLF counts *\/$/;"	m	struct:__anon6db101b40208	typeref:typename:unsigned int
lfc_data	extern/libgit2/src/submodule.c	/^} lfc_data;$/;"	t	typeref:struct:__anon952effbe0408	file:
lg2	extern/libgit2/examples/CMakeLists.txt	/^ADD_EXECUTABLE(lg2 ${LG2_SOURCES})$/;"	t
lg2_add	extern/libgit2/examples/add.c	/^int lg2_add(git_repository *repo, int argc, char** argv)$/;"	f	typeref:typename:int
lg2_blame	extern/libgit2/examples/blame.c	/^int lg2_blame(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_cat_file	extern/libgit2/examples/cat-file.c	/^int lg2_cat_file(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_checkout	extern/libgit2/examples/checkout.c	/^int lg2_checkout(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_clone	extern/libgit2/examples/clone.c	/^int lg2_clone(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_config	extern/libgit2/examples/config.c	/^int lg2_config(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_describe	extern/libgit2/examples/describe.c	/^int lg2_describe(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_diff	extern/libgit2/examples/diff.c	/^int lg2_diff(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_fetch	extern/libgit2/examples/fetch.c	/^int lg2_fetch(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_for_each_ref	extern/libgit2/examples/for-each-ref.c	/^int lg2_for_each_ref(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_general	extern/libgit2/examples/general.c	/^int lg2_general(git_repository *repo, int argc, char** argv)$/;"	f	typeref:typename:int
lg2_index_pack	extern/libgit2/examples/index-pack.c	/^int lg2_index_pack(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_init	extern/libgit2/examples/init.c	/^int lg2_init(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_log	extern/libgit2/examples/log.c	/^int lg2_log(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_ls_files	extern/libgit2/examples/ls-files.c	/^int lg2_ls_files(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_ls_remote	extern/libgit2/examples/ls-remote.c	/^int lg2_ls_remote(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_merge	extern/libgit2/examples/merge.c	/^int lg2_merge(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_remote	extern/libgit2/examples/remote.c	/^int lg2_remote(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_rev_list	extern/libgit2/examples/rev-list.c	/^int lg2_rev_list(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_rev_parse	extern/libgit2/examples/rev-parse.c	/^int lg2_rev_parse(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_show_index	extern/libgit2/examples/show-index.c	/^int lg2_show_index(git_repository *repo, int argc, char** argv)$/;"	f	typeref:typename:int
lg2_stash	extern/libgit2/examples/stash.c	/^int lg2_stash(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_status	extern/libgit2/examples/status.c	/^int lg2_status(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_tag	extern/libgit2/examples/tag.c	/^int lg2_tag(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
libgit2	extern/libgit2/CMakeLists.txt	/^PROJECT(libgit2 C)$/;"	p
libgit2 - the Git linkable library	extern/libgit2/README.md	/^libgit2 - the Git linkable library$/;"	c
libgit2 examples	extern/libgit2/examples/README.md	/^libgit2 examples$/;"	c
libgit2_clar	extern/libgit2/tests/CMakeLists.txt	/^ADD_EXECUTABLE(libgit2_clar ${SRC_CLAR} ${SRC_TEST} ${LIBGIT2_OBJECTS})$/;"	t
libxls	extern/OpenXLSX/README.md	/^### libxls$/;"	S
libxlsxwriter	extern/OpenXLSX/README.md	/^### libxlsxwriter$/;"	S
limit	extern/libgit2/examples/log.c	/^	int skip, limit;$/;"	m	struct:log_options	typeref:typename:int	file:
limit_list	extern/libgit2/src/revwalk.c	/^static int limit_list(git_commit_list **out, git_revwalk *walk, git_commit_list *commits)$/;"	f	typeref:typename:int	file:
limit_match	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 limit_match;        \/* Limit set from regex *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
limit_match	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 limit_match;        \/* Limit set from regex *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint32
limit_match	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 limit_match;$/;"	m	struct:executable_functions	typeref:typename:sljit_u32	file:
limit_match	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 limit_match;$/;"	m	struct:jit_arguments	typeref:typename:sljit_u32	file:
limit_recursion	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 limit_recursion;    \/* Limit set from regex *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
limit_recursion	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 limit_recursion;    \/* Limit set from regex *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint32
limited	extern/libgit2/src/revwalk.h	/^		limited: 1;$/;"	m	struct:git_revwalk	typeref:typename:unsigned:1
line	extern/NamedType/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo	typeref:typename:std::size_t
line	extern/OpenXLSX/tests/catch/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo	typeref:typename:std::size_t
line	extern/libgit2/src/diff_driver.h	/^	git_buf line;$/;"	m	struct:__anon6fb9a4970108	typeref:typename:git_buf
line	extern/libgit2/src/diff_print.c	/^	git_diff_line line;$/;"	m	struct:__anoncda507930108	typeref:typename:git_diff_line	file:
line	extern/libgit2/src/parse.h	/^	const char *line;$/;"	m	struct:__anon1f11c2ce0108	typeref:typename:const char *
line	extern/libgit2/src/xdiff/xprepare.c	/^	char const *line;$/;"	m	struct:s_xdlclass	typeref:typename:char const *	file:
line	extern/libgit2/tests/clar_libgit2.h	/^	int line;$/;"	m	struct:__anonc7d6e3cc0108	typeref:typename:int
line	extern/libgit2/tests/commit/parse.c	/^	const char *line;$/;"	m	struct:__anond44356cc0108	typeref:typename:const char *	file:
line	extern/libgit2/tests/status/status_helpers.h	/^	int line;$/;"	m	struct:__anon9cf2f0870108	typeref:typename:int
line1	extern/libgit2/src/xdiff/xpatience.c	/^		unsigned long line1, line2;$/;"	m	struct:hashmap::entry	typeref:typename:unsigned long	file:
line2	extern/libgit2/src/xdiff/xpatience.c	/^		unsigned long line1, line2;$/;"	m	struct:hashmap::entry	typeref:typename:unsigned long	file:
lineInfo	extern/OpenXLSX/tests/catch/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo	typeref:typename:SourceLineInfo
line_adds	extern/libgit2/tests/diff/diff_helpers.h	/^	int line_adds;$/;"	m	struct:__anona765b0910108	typeref:typename:int
line_cb	extern/libgit2/tests/diff/binary.c	/^static int line_cb($/;"	f	typeref:typename:int	file:
line_contains_alnum	extern/libgit2/src/xdiff/xmerge.c	/^static int line_contains_alnum(const char *ptr, long size)$/;"	f	typeref:typename:int	file:
line_count	extern/libgit2/src/patch.h	/^	size_t line_count;$/;"	m	struct:git_patch_hunk	typeref:typename:size_t
line_ctxt	extern/libgit2/tests/diff/diff_helpers.h	/^	int line_ctxt;$/;"	m	struct:__anona765b0910108	typeref:typename:int
line_dels	extern/libgit2/tests/diff/diff_helpers.h	/^	int line_dels;$/;"	m	struct:__anona765b0910108	typeref:typename:int
line_len	extern/libgit2/src/parse.h	/^	size_t line_len;$/;"	m	struct:__anon1f11c2ce0108	typeref:typename:size_t
line_length_without_trailing_spaces	extern/libgit2/src/message.c	/^static size_t line_length_without_trailing_spaces(const char *line, size_t len)$/;"	f	typeref:typename:size_t	file:
line_map	extern/libgit2/src/xdiff/xhistogram.c	/^	  **line_map; \/* map of line to record chain *\/$/;"	m	struct:histindex	typeref:struct:histindex::record ****	file:
line_map_size	extern/libgit2/src/xdiff/xhistogram.c	/^		     line_map_size;$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
line_num	extern/libgit2/src/parse.h	/^	size_t line_num;$/;"	m	struct:__anon1f11c2ce0108	typeref:typename:size_t
line_number	extern/libgit2/tests/clar.c	/^	size_t line_number;$/;"	m	struct:clar_error	typeref:typename:size_t	file:
line_start	extern/libgit2/src/patch.h	/^	size_t line_start;$/;"	m	struct:git_patch_hunk	typeref:typename:size_t
lines	extern/libgit2/src/apply.c	/^	git_vector lines;$/;"	m	struct:__anonbf3de2540108	typeref:typename:git_vector	file:
lines	extern/libgit2/src/hashsig.c	/^	size_t lines;$/;"	m	struct:git_hashsig	typeref:typename:size_t	file:
lines	extern/libgit2/tests/diff/diff_helpers.h	/^	int lines;$/;"	m	struct:__anona765b0910108	typeref:typename:int
lines_contain_alnum	extern/libgit2/src/xdiff/xmerge.c	/^static int lines_contain_alnum(xdfenv_t *xe, int i, int chg)$/;"	f	typeref:typename:int	file:
lines_in_hunk	extern/libgit2/include/git2/blame.h	/^	size_t lines_in_hunk;$/;"	m	struct:git_blame_hunk	typeref:typename:size_t
list	extern/libgit2/src/config_entries.c	/^	config_entry_list *list;$/;"	m	struct:git_config_entries	typeref:typename:config_entry_list *	file:
list	extern/libgit2/src/pack-objects.c	/^	git_pobject **list;$/;"	m	struct:thread_params	typeref:typename:git_pobject **	file:
list_auth_methods	extern/libgit2/src/transports/ssh.c	/^static int list_auth_methods(int *out, LIBSSH2_SESSION *session, const char *username)$/;"	f	typeref:typename:int	file:
list_expectations	extern/libgit2/tests/notes/notes.c	/^list_expectations[] = {$/;"	v	typeref:struct:__anon4085ff9a0108[]
list_size	extern/libgit2/src/pack-objects.c	/^	size_t list_size;$/;"	m	struct:thread_params	typeref:typename:size_t	file:
list_stash_cb	extern/libgit2/examples/stash.c	/^static int list_stash_cb(size_t index, const char *message,$/;"	f	typeref:typename:int	file:
lit_bufsize	extern/libgit2/deps/zlib/deflate.h	/^    uInt  lit_bufsize;$/;"	m	struct:internal_state	typeref:typename:uInt
ll_find_deltas	extern/libgit2/src/pack-objects.c	/^#define ll_find_deltas(/;"	d	file:
ll_find_deltas	extern/libgit2/src/pack-objects.c	/^static int ll_find_deltas(git_packbuilder *pb, git_pobject **list,$/;"	f	typeref:typename:int	file:
lm_init	extern/libgit2/deps/zlib/deflate.c	/^local void lm_init (s)$/;"	f
lm_response	extern/libgit2/deps/ntlmclient/ntlm.h	/^	unsigned char lm_response[NTLM_LM_RESPONSE_LEN];$/;"	m	struct:ntlm_client	typeref:typename:unsigned char[]
lm_response_len	extern/libgit2/deps/ntlmclient/ntlm.h	/^	size_t lm_response_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
lno	extern/libgit2/src/blame.h	/^	size_t lno;$/;"	m	struct:git_blame__entry	typeref:typename:size_t
load	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result xml_document::load(const char_t* contents, unsigned int options) {$/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN xml_parse_result
load	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result xml_document::load(std::basic_istream<char, std::char_traits<char>/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN xml_parse_result
load	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result xml_document::load(std::basic_istream<wchar_t, std::char_traits<wc/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN xml_parse_result
load	extern/libgit2/tests/generate.py	/^    def load(self, force = False):$/;"	m	class:TestSuite
load_alternates	extern/libgit2/src/odb.c	/^static int load_alternates(git_odb *odb, const char *objects_dir, int alternate_depth)$/;"	f	typeref:typename:int	file:
load_blob	extern/libgit2/src/blame.c	/^static int load_blob(git_blame *blame)$/;"	f	typeref:typename:int	file:
load_buffer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result xml_document::load_buffer(const void* contents, size_t size, unsig/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN xml_parse_result
load_buffer_impl	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result load_buffer_impl(xml_document_struct* doc, xml_node_struct* root, /;"	f	typeref:typename:PUGI__FN xml_parse_result
load_buffer_inplace	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result xml_document::load_buffer_inplace(void* contents, size_t size, uns/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN xml_parse_result
load_buffer_inplace_own	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result xml_document::load_buffer_inplace_own(void* contents, size_t size,/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN xml_parse_result
load_cache	extern/libgit2/tests/generate.py	/^    def load_cache(self):$/;"	m	class:TestSuite
load_config	extern/libgit2/src/repository.c	/^static int load_config($/;"	f	typeref:typename:int	file:
load_config_data	extern/libgit2/src/repository.c	/^static int load_config_data(git_repository *repo, const git_config *config)$/;"	f	typeref:typename:int	file:
load_file	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result xml_document::load_file(const char* path_, unsigned int options, x/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN xml_parse_result
load_file	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result xml_document::load_file(const wchar_t* path_, unsigned int options/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN xml_parse_result
load_file_impl	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result load_file_impl(xml_document_struct* doc, FILE* file, unsigned int /;"	f	typeref:typename:PUGI__FN xml_parse_result
load_proxy_config	extern/libgit2/src/transports/http.c	/^static int load_proxy_config(http_subtransport *t)$/;"	f	typeref:typename:int	file:
load_stream_data_noseek	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_status load_stream_data_noseek(std::basic_istream<T>& stream, void** out_/;"	f	typeref:typename:PUGI__FN xml_parse_status
load_stream_data_seek	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_status load_stream_data_seek(std::basic_istream<T>& stream, void** out_bu/;"	f	typeref:typename:PUGI__FN xml_parse_status
load_stream_impl	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result load_stream_impl(xml_document_struct* doc, std::basic_istream<T>& /;"	f	typeref:typename:PUGI__FN xml_parse_result
load_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result xml_document::load_string(const char_t* contents, unsigned int opt/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN xml_parse_result
load_submodule_names	extern/libgit2/src/submodule.c	/^static int load_submodule_names(git_strmap **out, git_repository *repo, git_config *cfg)$/;"	f	typeref:typename:int	file:
load_workdir	extern/libgit2/src/repository.c	/^static int load_workdir(git_repository *repo, git_config *config, git_buf *parent_path)$/;"	f	typeref:typename:int	file:
local	extern/libgit2/deps/zlib/gzguts.h	/^#  define local /;"	d
local	extern/libgit2/deps/zlib/zutil.h	/^#  define local /;"	d
local	extern/libgit2/include/git2/clone.h	/^	git_clone_local_t local;$/;"	m	struct:git_clone_options	typeref:typename:git_clone_local_t
local	extern/libgit2/include/git2/net.h	/^	int local; \/* available locally *\/$/;"	m	struct:git_remote_head	typeref:typename:int
local_cancel	extern/libgit2/src/transports/local.c	/^static void local_cancel(git_transport *transport)$/;"	f	typeref:typename:void	file:
local_cleanup	extern/libgit2/tests/clar.c	/^	void (*local_cleanup)(void *);$/;"	m	struct:__anonab24499b0108	typeref:typename:void (*)(void *)	file:
local_cleanup_payload	extern/libgit2/tests/clar.c	/^	void *local_cleanup_payload;$/;"	m	struct:__anonab24499b0108	typeref:typename:void *	file:
local_close	extern/libgit2/src/transports/local.c	/^static int local_close(git_transport *transport)$/;"	f	typeref:typename:int	file:
local_connect	extern/libgit2/src/transports/local.c	/^static int local_connect($/;"	f	typeref:typename:int	file:
local_counting	extern/libgit2/src/transports/local.c	/^static int local_counting(int stage, unsigned int current, unsigned int total, void *payload)$/;"	f	typeref:typename:int	file:
local_download_pack	extern/libgit2/src/transports/local.c	/^static int local_download_pack($/;"	f	typeref:typename:int	file:
local_exit	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL local_exit;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
local_file_url_prefixlen	extern/libgit2/src/path.c	/^static int local_file_url_prefixlen(const char *file_url)$/;"	f	typeref:typename:int	file:
local_free	extern/libgit2/src/transports/local.c	/^static void local_free(git_transport *transport)$/;"	f	typeref:typename:void	file:
local_is_connected	extern/libgit2/src/transports/local.c	/^static int local_is_connected(git_transport *transport)$/;"	f	typeref:typename:int	file:
local_ls	extern/libgit2/src/transports/local.c	/^static int local_ls(const git_remote_head ***out, size_t *size, git_transport *transport)$/;"	f	typeref:typename:int	file:
local_name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const char_t* local_name(const xpath_node& node)$/;"	f	typeref:typename:PUGI__FN const char_t *
local_negotiate_fetch	extern/libgit2/src/transports/local.c	/^static int local_negotiate_fetch($/;"	f	typeref:typename:int	file:
local_objects	extern/libgit2/include/git2/indexer.h	/^	unsigned int local_objects;$/;"	m	struct:git_indexer_progress	typeref:typename:unsigned int
local_push	extern/libgit2/src/transports/local.c	/^static int local_push($/;"	f	typeref:typename:int	file:
local_push_update_remote_ref	extern/libgit2/src/transports/local.c	/^static int local_push_update_remote_ref($/;"	f	typeref:typename:int	file:
local_read_flags	extern/libgit2/src/transports/local.c	/^static int local_read_flags(git_transport *transport, int *flags)$/;"	f	typeref:typename:int	file:
local_set_callbacks	extern/libgit2/src/transports/local.c	/^static int local_set_callbacks($/;"	f	typeref:typename:int	file:
local_transport_definition	extern/libgit2/src/transport.c	/^static transport_definition local_transport_definition = { "file:\/\/", git_transport_local, NUL/;"	v	typeref:typename:transport_definition	file:
locate_object	extern/libgit2/src/odb_loose.c	/^static int locate_object($/;"	f	typeref:typename:int	file:
locate_object_short_oid	extern/libgit2/src/odb_loose.c	/^static int locate_object_short_oid($/;"	f	typeref:typename:int	file:
location	extern/libgit2/src/transports/http.c	/^	char *location;$/;"	m	struct:__anon0458035d0308	typeref:typename:char *	file:
lock	extern/libgit2/include/git2/worktree.h	/^	int lock; \/**< lock newly created worktree *\/$/;"	m	struct:git_worktree_add_options	typeref:typename:int
lock	extern/libgit2/src/attr_file.h	/^	git_mutex lock;$/;"	m	struct:__anon32d629ad0608	typeref:typename:git_mutex
lock	extern/libgit2/src/attrcache.h	/^	git_mutex lock;$/;"	m	struct:__anon5aa68d020108	typeref:typename:git_mutex
lock	extern/libgit2/src/cache.h	/^	git_rwlock  lock;$/;"	m	struct:__anon354735470308	typeref:typename:git_rwlock
lock	extern/libgit2/src/filter.c	/^	git_rwlock lock;$/;"	m	struct:git_filter_registry	typeref:typename:git_rwlock	file:
lock	extern/libgit2/src/merge_driver.c	/^	git_rwlock lock;$/;"	m	struct:merge_driver_registry	typeref:typename:git_rwlock	file:
lock	extern/libgit2/src/pack.h	/^	git_mutex lock; \/* protect updates to mwf and index_map *\/$/;"	m	struct:git_pack_file	typeref:typename:git_mutex
lock	extern/libgit2/src/pack.h	/^	git_mutex lock;$/;"	m	struct:__anon7d07ab120108	typeref:typename:git_mutex
lock	extern/libgit2/src/sortedcache.h	/^	git_rwlock   lock;$/;"	m	struct:__anond92d40380108	typeref:typename:git_rwlock
lock	extern/libgit2/src/streams/registry.c	/^	git_rwlock lock;$/;"	m	struct:stream_registry	typeref:typename:git_rwlock	file:
lock_file	extern/libgit2/src/filebuf.c	/^static int lock_file(git_filebuf *file, int flags, mode_t mode)$/;"	f	typeref:typename:int	file:
lock_reflog	extern/libgit2/src/refdb_fs.c	/^static int lock_reflog(git_filebuf *file, refdb_fs_backend *backend, const char *refname)$/;"	f	typeref:typename:int	file:
locked	extern/libgit2/src/config_file.c	/^	bool locked;$/;"	m	struct:__anon041cc2a30108	typeref:typename:bool	file:
locked	extern/libgit2/src/worktree.h	/^	int locked:1;$/;"	m	struct:git_worktree	typeref:typename:int:1
locked_buf	extern/libgit2/src/config_file.c	/^	git_filebuf locked_buf;$/;"	m	struct:__anon041cc2a30108	typeref:typename:git_filebuf	file:
locked_content	extern/libgit2/src/config_file.c	/^	git_buf locked_content;$/;"	m	struct:__anon041cc2a30108	typeref:typename:git_buf	file:
locks	extern/libgit2/src/transaction.c	/^	git_strmap *locks;$/;"	m	struct:git_transaction	typeref:typename:git_strmap *	file:
log_message_matches	extern/libgit2/examples/log.c	/^static int log_message_matches(const git_commit *commit, const char *filter) {$/;"	f	typeref:typename:int	file:
log_options	extern/libgit2/examples/log.c	/^struct log_options {$/;"	s	file:
log_state	extern/libgit2/examples/log.c	/^struct log_state {$/;"	s	file:
loid	extern/libgit2/include/git2/net.h	/^	git_oid loid;$/;"	m	struct:git_remote_head	typeref:typename:git_oid
loid	extern/libgit2/src/push.h	/^	git_oid loid;$/;"	m	struct:push_spec	typeref:typename:git_oid
longest_match	extern/libgit2/deps/zlib/deflate.c	/^local uInt longest_match(s, cur_match)$/;"	f
longname	extern/libgit2/tests/status/status_data.h	/^static const char *longname = "\\xe5\\x8f\\x97\\xe5\\x8f\\x97\\xe5\\x8f\\x97\\xe5\\x8f\\x97\\xe5/;"	v	typeref:typename:const char *
lookahead	extern/libgit2/deps/zlib/deflate.h	/^    uInt lookahead;              \/* number of valid bytes ahead in window *\/$/;"	m	struct:internal_state	typeref:typename:uInt
looks_like_command_line_option	extern/libgit2/src/submodule.c	/^static bool looks_like_command_line_option(const char *s)$/;"	f	typeref:typename:bool	file:
looks_like_network_computer_name	extern/libgit2/src/path.c	/^static bool looks_like_network_computer_name(const char *path, int pos)$/;"	f	typeref:typename:bool	file:
lookupTree	main.cpp	/^static auto lookupTree = make(git_tree_lookup, git_tree_free);$/;"	v	typeref:typename:auto	file:
lookup_default_remote	extern/libgit2/src/submodule.c	/^static int lookup_default_remote(git_remote **remote, git_repository *repo)$/;"	f	typeref:typename:int	file:
lookup_head_remote	extern/libgit2/src/submodule.c	/^static int lookup_head_remote(git_remote **remote, git_repository *repo)$/;"	f	typeref:typename:int	file:
lookup_head_remote_key	extern/libgit2/src/submodule.c	/^static int lookup_head_remote_key(git_buf *remote_name, git_repository *repo)$/;"	f	typeref:typename:int	file:
lookup_id	extern/libgit2/tests/odb/mixed.c	/^	char *lookup_id;$/;"	m	struct:expand_id_test_data	typeref:typename:char *	file:
lookup_index_alloc	extern/libgit2/src/delta.c	/^static int lookup_index_alloc($/;"	f	typeref:typename:int	file:
lookup_remote_prune_config	extern/libgit2/src/remote.c	/^static int lookup_remote_prune_config(git_remote *remote, git_config *config, const char *name)$/;"	f	typeref:typename:int	file:
lookup_walk_object	extern/libgit2/src/pack-objects.c	/^static int lookup_walk_object(struct walk_object **out, git_packbuilder *pb, const git_oid *id)$/;"	f	typeref:typename:int	file:
loop	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  loop,$/;"	e	enum:copy_private_data::__anon313b80c30603	file:
loose	extern/libgit2/src/refdb_fs.c	/^	git_vector loose;$/;"	m	struct:__anonbd02e2090308	typeref:typename:git_vector	file:
loose_backend	extern/libgit2/src/odb_loose.c	/^typedef struct loose_backend {$/;"	s	file:
loose_backend	extern/libgit2/src/odb_loose.c	/^} loose_backend;$/;"	t	typeref:struct:loose_backend	file:
loose_backend__exists	extern/libgit2/src/odb_loose.c	/^static int loose_backend__exists(git_odb_backend *backend, const git_oid *oid)$/;"	f	typeref:typename:int	file:
loose_backend__exists_prefix	extern/libgit2/src/odb_loose.c	/^static int loose_backend__exists_prefix($/;"	f	typeref:typename:int	file:
loose_backend__foreach	extern/libgit2/src/odb_loose.c	/^static int loose_backend__foreach(git_odb_backend *_backend, git_odb_foreach_cb cb, void *data)$/;"	f	typeref:typename:int	file:
loose_backend__free	extern/libgit2/src/odb_loose.c	/^static void loose_backend__free(git_odb_backend *_backend)$/;"	f	typeref:typename:void	file:
loose_backend__freshen	extern/libgit2/src/odb_loose.c	/^static int loose_backend__freshen($/;"	f	typeref:typename:int	file:
loose_backend__read	extern/libgit2/src/odb_loose.c	/^static int loose_backend__read(void **buffer_p, size_t *len_p, git_object_t *type_p, git_odb_bac/;"	f	typeref:typename:int	file:
loose_backend__read_header	extern/libgit2/src/odb_loose.c	/^static int loose_backend__read_header(size_t *len_p, git_object_t *type_p, git_odb_backend *back/;"	f	typeref:typename:int	file:
loose_backend__read_prefix	extern/libgit2/src/odb_loose.c	/^static int loose_backend__read_prefix($/;"	f	typeref:typename:int	file:
loose_backend__readstream	extern/libgit2/src/odb_loose.c	/^static int loose_backend__readstream($/;"	f	typeref:typename:int	file:
loose_backend__readstream_free	extern/libgit2/src/odb_loose.c	/^static void loose_backend__readstream_free(git_odb_stream *_stream)$/;"	f	typeref:typename:void	file:
loose_backend__readstream_packlike	extern/libgit2/src/odb_loose.c	/^static int loose_backend__readstream_packlike($/;"	f	typeref:typename:int	file:
loose_backend__readstream_read	extern/libgit2/src/odb_loose.c	/^static int loose_backend__readstream_read($/;"	f	typeref:typename:int	file:
loose_backend__readstream_standard	extern/libgit2/src/odb_loose.c	/^static int loose_backend__readstream_standard($/;"	f	typeref:typename:int	file:
loose_backend__write	extern/libgit2/src/odb_loose.c	/^static int loose_backend__write(git_odb_backend *_backend, const git_oid *oid, const void *data,/;"	f	typeref:typename:int	file:
loose_backend__writestream	extern/libgit2/src/odb_loose.c	/^static int loose_backend__writestream(git_odb_stream **stream_out, git_odb_backend *_backend, gi/;"	f	typeref:typename:int	file:
loose_backend__writestream_finalize	extern/libgit2/src/odb_loose.c	/^static int loose_backend__writestream_finalize(git_odb_stream *_stream, const git_oid *oid)$/;"	f	typeref:typename:int	file:
loose_backend__writestream_free	extern/libgit2/src/odb_loose.c	/^static void loose_backend__writestream_free(git_odb_stream *_stream)$/;"	f	typeref:typename:void	file:
loose_backend__writestream_write	extern/libgit2/src/odb_loose.c	/^static int loose_backend__writestream_write(git_odb_stream *_stream, const char *data, size_t le/;"	f	typeref:typename:int	file:
loose_commit	extern/libgit2/src/refdb_fs.c	/^static int loose_commit(git_filebuf *file, const git_reference *ref)$/;"	f	typeref:typename:int	file:
loose_locate_object_state	extern/libgit2/src/odb_loose.c	/^} loose_locate_object_state;$/;"	t	typeref:struct:__anon81c02f840408	file:
loose_lock	extern/libgit2/src/refdb_fs.c	/^static int loose_lock(git_filebuf *file, refdb_fs_backend *backend, const char *name)$/;"	f	typeref:typename:int	file:
loose_lookup	extern/libgit2/src/refdb_fs.c	/^static int loose_lookup($/;"	f	typeref:typename:int	file:
loose_lookup_to_packfile	extern/libgit2/src/refdb_fs.c	/^static int loose_lookup_to_packfile(refdb_fs_backend *backend, const char *name)$/;"	f	typeref:typename:int	file:
loose_objects	extern/libgit2/tests/odb/pack_data.h	/^static const char *loose_objects[] = {$/;"	v	typeref:typename:const char * []
loose_parse_oid	extern/libgit2/src/refdb_fs.c	/^static int loose_parse_oid($/;"	f	typeref:typename:int	file:
loose_parse_symbolic	extern/libgit2/src/refdb_fs.c	/^static const char *loose_parse_symbolic(git_buf *file_content)$/;"	f	typeref:typename:const char *	file:
loose_pos	extern/libgit2/src/refdb_fs.c	/^	size_t loose_pos;$/;"	m	struct:__anonbd02e2090308	typeref:typename:size_t	file:
loose_readbuffer	extern/libgit2/src/refdb_fs.c	/^static int loose_readbuffer(git_buf *buf, const char *base, const char *path)$/;"	f	typeref:typename:int	file:
loose_readstream	extern/libgit2/src/odb_loose.c	/^} loose_readstream;$/;"	t	typeref:struct:__anon81c02f840308	file:
loose_tag_ref_name	extern/libgit2/tests/refs/pack.c	/^static const char *loose_tag_ref_name = "refs\/tags\/e90810b";$/;"	v	typeref:typename:const char *	file:
loose_tag_ref_name	extern/libgit2/tests/refs/read.c	/^static const char *loose_tag_ref_name = "refs\/tags\/e90810b";$/;"	v	typeref:typename:const char *	file:
loose_tag_ref_name	extern/libgit2/tests/refs/rename.c	/^static const char *loose_tag_ref_name = "refs\/tags\/e90810b";$/;"	v	typeref:typename:const char *	file:
loose_writestream	extern/libgit2/src/odb_loose.c	/^} loose_writestream;$/;"	t	typeref:struct:__anon81c02f840208	file:
low	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type low(value_type result, uint32_t ch) {$/;"	f	struct:latin1_writer	typeref:typename:value_type	file:
low	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type low(value_type result, uint32_t ch) {$/;"	f	struct:utf16_writer	typeref:typename:value_type	file:
low	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type low(value_type result, uint32_t ch) {$/;"	f	struct:utf32_writer	typeref:typename:value_type	file:
low	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type low(value_type result, uint32_t ch) {$/;"	f	struct:utf8_counter	typeref:typename:value_type	file:
low	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type low(value_type result, uint32_t ch) {$/;"	f	struct:utf8_writer	typeref:typename:value_type	file:
low	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type low(value_type result, uint32_t) {$/;"	f	struct:utf16_counter	typeref:typename:value_type	file:
low	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static value_type low(value_type result, uint32_t) {$/;"	f	struct:utf32_counter	typeref:typename:value_type	file:
lpVtbl	extern/libgit2/deps/winhttp/urlmon.h	/^	CONST_VTBL struct IInternetSecurityManagerVtbl *lpVtbl;$/;"	m	struct:IInternetSecurityManager	typeref:struct:IInternetSecurityManagerVtbl *
lpszAutoConfigUrl	extern/libgit2/deps/winhttp/winhttp.h	/^    LPCWSTR lpszAutoConfigUrl;$/;"	m	struct:__anonb531ffc20608	typeref:typename:LPCWSTR
lpszAutoConfigUrl	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszAutoConfigUrl;$/;"	m	struct:__anonb531ffc20508	typeref:typename:LPWSTR
lpszEncryptionAlgName	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszEncryptionAlgName;$/;"	m	struct:__anonb531ffc20308	typeref:typename:LPWSTR
lpszExtraInfo	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR  lpszExtraInfo;$/;"	m	struct:__anonb531ffc20108	typeref:typename:LPWSTR
lpszHostName	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR  lpszHostName;$/;"	m	struct:__anonb531ffc20108	typeref:typename:LPWSTR
lpszIssuerInfo	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszIssuerInfo;$/;"	m	struct:__anonb531ffc20308	typeref:typename:LPWSTR
lpszPassword	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR  lpszPassword;$/;"	m	struct:__anonb531ffc20108	typeref:typename:LPWSTR
lpszProtocolName	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszProtocolName;$/;"	m	struct:__anonb531ffc20308	typeref:typename:LPWSTR
lpszProxy	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszProxy;$/;"	m	struct:__anonb531ffc20408	typeref:typename:LPWSTR
lpszProxy	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszProxy;$/;"	m	struct:__anonb531ffc20508	typeref:typename:LPWSTR
lpszProxyBypass	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszProxyBypass;$/;"	m	struct:__anonb531ffc20408	typeref:typename:LPWSTR
lpszProxyBypass	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszProxyBypass;$/;"	m	struct:__anonb531ffc20508	typeref:typename:LPWSTR
lpszScheme	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR  lpszScheme;$/;"	m	struct:__anonb531ffc20108	typeref:typename:LPWSTR
lpszSignatureAlgName	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszSignatureAlgName;$/;"	m	struct:__anonb531ffc20308	typeref:typename:LPWSTR
lpszSubjectInfo	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszSubjectInfo;$/;"	m	struct:__anonb531ffc20308	typeref:typename:LPWSTR
lpszUrlPath	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR  lpszUrlPath;$/;"	m	struct:__anonb531ffc20108	typeref:typename:LPWSTR
lpszUserName	extern/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR  lpszUserName;$/;"	m	struct:__anonb531ffc20108	typeref:typename:LPWSTR
lpvReserved	extern/libgit2/deps/winhttp/winhttp.h	/^    LPVOID lpvReserved;$/;"	m	struct:__anonb531ffc20608	typeref:typename:LPVOID
lr	lr.hpp	/^namespace lr {$/;"	n
lru_counter	extern/libgit2/src/repository.h	/^	unsigned int lru_counter;$/;"	m	struct:git_repository	typeref:typename:unsigned int
ls_options	extern/libgit2/examples/ls-files.c	/^} ls_options;$/;"	t	typeref:struct:__anonefee04e40108	file:
ls_to_vector	extern/libgit2/src/remote.c	/^static int ls_to_vector(git_vector *out, git_remote *remote)$/;"	f	typeref:typename:int	file:
lstat_w	extern/libgit2/src/win32/posix_w32.c	/^static int lstat_w($/;"	f	typeref:typename:int	file:
m1	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	uint32_t m1[80];$/;"	m	struct:__anon3f63bb720108	typeref:typename:uint32_t[80]
m2	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	uint32_t m2[80];$/;"	m	struct:__anon3f63bb720108	typeref:typename:uint32_t[80]
m_Archive	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        mz_zip_archive m_Archive = mz_zip_archive(); \/**< The struct used by miniz, to handle a/;"	m	class:Zippy::ZipArchive	typeref:typename:mz_zip_archive
m_ArchivePath	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        std::string m_ArchivePath = ""; \/**< The path of the archive file. *\/$/;"	m	class:Zippy::ZipArchive	typeref:typename:std::string
m_EntryData	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            ZipEntryData m_EntryData = ZipEntryData(); \/**< *\/$/;"	m	class:Zippy::Impl::ZipEntry	typeref:typename:ZipEntryData
m_EntryInfo	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            ZipEntryInfo m_EntryInfo = ZipEntryInfo(); \/**< *\/$/;"	m	class:Zippy::Impl::ZipEntry	typeref:typename:ZipEntryInfo
m_IsModified	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            bool m_IsModified = false; \/**< *\/$/;"	m	class:Zippy::Impl::ZipEntry	typeref:typename:bool
m_IsOpen	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        bool m_IsOpen = false; \/**< A flag indicating if the file is currently open for reading/;"	m	class:Zippy::ZipArchive	typeref:typename:bool
m_ZipEntries	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        std::vector<Impl::ZipEntry> m_ZipEntries = std::vector<Impl::ZipEntry>(); \/**< Data str/;"	m	class:Zippy::ZipArchive	typeref:typename:std::vector<Impl::ZipEntry>
m_ZipEntry	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^        Impl::ZipEntry* m_ZipEntry;  \/**< *\/$/;"	m	class:Zippy::ZipEntry	typeref:typename:Impl::ZipEntry *
m_adler32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_archive	extern/OpenXLSX/library/openxlsx/implementation/headers/XLDocument_Impl.h	/^        std::unique_ptr<Zippy::ZipArchive> m_archive; \/**<  *\/$/;"	m	class:OpenXLSX::Impl::XLDocument	typeref:typename:std::unique_ptr<Zippy::ZipArchive>
m_archive_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 m_archive_size;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_uint64
m_bit_buf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    tinfl_bit_buf_t m_bit_buf;$/;"	m	struct:tinfl_decompressor_tag	typeref:typename:tinfl_bit_buf_t
m_bit_buffer	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_bit_flag	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint16 m_bit_flag;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint16
m_bits_in	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_block_index	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flu/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_bottomRight	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellRange_Impl.h	/^        XLCellReference m_bottomRight; \/**< The cell reference of the last cell in the range *\/$/;"	m	class:OpenXLSX::Impl::XLCellRange	typeref:typename:XLCellReference
m_buffer	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTokenizer_Impl.h	/^        std::string m_buffer; \/**< input string *\/$/;"	m	class:OpenXLSX::Impl::XLTokenizer	typeref:typename:std::string
m_capacity	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    size_t m_size, m_capacity;$/;"	m	struct:__anon09af45a71d08	typeref:typename:size_t
m_capacity	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    size_t m_size, m_capacity;$/;"	m	struct:__anon09af45a71f08	typeref:typename:size_t
m_cell	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCell.h	/^        Impl::XLCell* m_cell; \/**<  *\/$/;"	m	class:OpenXLSX::XLCell	typeref:typename:Impl::XLCell *
m_cellAddress	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^        std::string m_cellAddress; \/**< The address, e.g. 'A1' *\/$/;"	m	class:OpenXLSX::Impl::XLCellReference	typeref:typename:std::string
m_cellNode	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCell_Impl.h	/^        XMLNode m_cellNode;      \/**< A pointer to the root XMLNode for the cell. *\/$/;"	m	class:OpenXLSX::Impl::XLCell	typeref:typename:XMLNode
m_cellReference	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCell_Impl.h	/^        XLCellReference m_cellReference; \/**< The cell reference variable. *\/$/;"	m	class:OpenXLSX::Impl::XLCell	typeref:typename:XLCellReference
m_cellReference	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellReference.h	/^        std::unique_ptr<Impl::XLCellReference> m_cellReference; \/**< *\/$/;"	m	class:OpenXLSX::XLCellReference	typeref:typename:std::unique_ptr<Impl::XLCellReference>
m_cellrange	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellRange.h	/^        std::unique_ptr<Impl::XLCellRange> m_cellrange; \/**< *\/$/;"	m	class:OpenXLSX::XLCellRange	typeref:typename:std::unique_ptr<Impl::XLCellRange>
m_cells	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRow_Impl.h	/^        std::vector<XLCellData> m_cells; \/**< A vector with the XLCell objects. *\/$/;"	m	class:OpenXLSX::Impl::XLRow	typeref:typename:std::vector<XLCellData>
m_cells	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellRange.h	/^        mutable std::unique_ptr<std::vector<XLCell>> m_cells; \/**< *\/$/;"	m	class:OpenXLSX::XLCellRange	typeref:typename:std::unique_ptr<std::vector<XLCell>>
m_central_dir	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_zip_array m_central_dir;$/;"	m	struct:mz_zip_internal_state_tag	typeref:typename:mz_zip_array
m_central_dir_offsets	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_zip_array m_central_dir_offsets;$/;"	m	struct:mz_zip_internal_state_tag	typeref:typename:mz_zip_array
m_central_dir_ofs	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 m_central_dir_ofs;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint64
m_central_directory_file_ofs	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 m_central_directory_file_ofs;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_uint64
m_check_adler32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler/;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint32
m_code_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8 m_code_size[TINFL_MAX_HUFF_SYMBOLS_0];$/;"	m	struct:__anon09af45a71008	typeref:typename:mz_uint8[]
m_column	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^        unsigned int m_column; \/**< The column *\/$/;"	m	class:OpenXLSX::Impl::XLCellReference	typeref:typename:unsigned int
m_column	extern/OpenXLSX/library/openxlsx/implementation/headers/XLColumn_Impl.h	/^        unsigned long m_column; \/**< The column number for the column *\/$/;"	m	class:OpenXLSX::Impl::XLColumn	typeref:typename:unsigned long
m_column	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLColumn.h	/^        Impl::XLColumn* m_column; \/**< *\/$/;"	m	class:OpenXLSX::XLColumn	typeref:typename:Impl::XLColumn *
m_columnNode	extern/OpenXLSX/library/openxlsx/implementation/headers/XLColumn_Impl.h	/^        std::unique_ptr<XMLNode> m_columnNode; \/**< A pointer to the XMLNode object for the col/;"	m	class:OpenXLSX::Impl::XLColumn	typeref:typename:std::unique_ptr<XMLNode>
m_columnOffset	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellRange_Impl.h	/^        unsigned int m_columnOffset; \/**< The column offset, relative to the parent spreadsheet/;"	m	class:OpenXLSX::Impl::XLCellRange	typeref:typename:unsigned int
m_columns	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellRange_Impl.h	/^        unsigned int m_columns; \/**< The number of columns in the range *\/$/;"	m	class:OpenXLSX::Impl::XLCellRange	typeref:typename:unsigned int
m_columns	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^        XLColumns m_columns; \/**< A std::vector with pointers to all columns in sheet. *\/$/;"	m	class:OpenXLSX::Impl::XLWorksheet	typeref:typename:XLColumns
m_columnsNode	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^        std::unique_ptr<XMLNode> m_columnsNode; \/**< The head node for sheet column data *\/$/;"	m	class:OpenXLSX::Impl::XLWorksheet	typeref:typename:std::unique_ptr<XMLNode>
m_comment	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    char m_comment[MZ_ZIP_MAX_ARCHIVE_FILE_COMMENT_SIZE];$/;"	m	struct:__anon09af45a71208	typeref:typename:char[]
m_comment_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_comment_size;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint32
m_comp_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 m_comp_size;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint64
m_comp_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 m_comp_size;$/;"	m	struct:__anon09af45a72008	typeref:typename:mz_uint64
m_contentNode	extern/OpenXLSX/library/openxlsx/implementation/headers/XLContentTypes_Impl.h	/^        XMLNode m_contentNode; \/**< *\/$/;"	m	class:OpenXLSX::Impl::XLContentItem	typeref:typename:XMLNode
m_contentTypes	extern/OpenXLSX/library/openxlsx/implementation/headers/XLDocument_Impl.h	/^        std::unique_ptr<XLContentTypes> m_contentTypes; \/**< A pointer to the content types obj/;"	m	class:OpenXLSX::Impl::XLDocument	typeref:typename:std::unique_ptr<XLContentTypes>
m_counter	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler/;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint32
m_crc32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_crc32;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint32
m_cur_archive_file_ofs	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 m_cur_archive_file_ofs;$/;"	m	struct:__anon09af45a72008	typeref:typename:mz_uint64
m_currPos	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTokenizer_Impl.h	/^        std::string::const_iterator m_currPos; \/**< string iterator pointing the current positi/;"	m	class:OpenXLSX::Impl::XLTokenizer	typeref:typename:std::string::const_iterator
m_data	extern/NamedType/catch.hpp	/^        char* m_data = nullptr;$/;"	m	class:Catch::StringRef	typeref:typename:char *
m_data	extern/OpenXLSX/tests/catch/catch.hpp	/^        char* m_data = nullptr;$/;"	m	class:Catch::StringRef	typeref:typename:char *
m_decomp	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    tinfl_decompressor m_decomp;$/;"	m	struct:__anon09af45a71908	typeref:typename:tinfl_decompressor
m_defaults	extern/OpenXLSX/library/openxlsx/implementation/headers/XLContentTypes_Impl.h	/^        std::map<std::string, XMLNode> m_defaults; \/**< @todo Consider changing to std::vector /;"	m	class:OpenXLSX::Impl::XLContentTypes	typeref:typename:std::map<std::string,XMLNode>
m_definedNames	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^        XMLNode m_definedNames; \/**< Pointer to root node of defined names in the workbook. *\/$/;"	m	class:OpenXLSX::Impl::XLWorkbook	typeref:typename:XMLNode
m_delimiter	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTokenizer_Impl.h	/^        std::string m_delimiter; \/**< delimiter string *\/$/;"	m	class:OpenXLSX::Impl::XLTokenizer	typeref:typename:std::string
m_dict	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8 m_dict[TDEFL_LZ_DICT_SIZE + TDEFL_MAX_MATCH_LEN - 1];$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint8[]
m_dict	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8 m_dict[TINFL_LZ_DICT_SIZE];$/;"	m	struct:__anon09af45a71908	typeref:typename:mz_uint8[]
m_dict_avail	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed;$/;"	m	struct:__anon09af45a71908	typeref:typename:mz_uint
m_dict_ofs	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed;$/;"	m	struct:__anon09af45a71908	typeref:typename:mz_uint
m_dict_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_dimensionNode	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^        std::unique_ptr<XMLNode> m_dimensionNode; \/**< The node specifying the dimensions of th/;"	m	class:OpenXLSX::Impl::XLWorksheet	typeref:typename:std::unique_ptr<XMLNode>
m_dist	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler/;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint32
m_dist_from_out_buf_start	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    size_t m_dist_from_out_buf_start;$/;"	m	struct:tinfl_decompressor_tag	typeref:typename:size_t
m_docAppProperties	extern/OpenXLSX/library/openxlsx/implementation/headers/XLDocument_Impl.h	/^        std::unique_ptr<XLAppProperties> m_docAppProperties; \/**< A pointer to the App properti/;"	m	class:OpenXLSX::Impl::XLDocument	typeref:typename:std::unique_ptr<XLAppProperties>
m_docCoreProperties	extern/OpenXLSX/library/openxlsx/implementation/headers/XLDocument_Impl.h	/^        std::unique_ptr<XLCoreProperties> m_docCoreProperties; \/**< A pointer to the Core prope/;"	m	class:OpenXLSX::Impl::XLDocument	typeref:typename:std::unique_ptr<XLCoreProperties>
m_document	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^        XLDocument* m_document; \/**< *\/$/;"	m	class:OpenXLSX::Impl::XLWorkbook	typeref:typename:XLDocument *
m_document	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDocument.h	/^        std::shared_ptr<Impl::XLDocument> m_document; \/**< A shared pointer to the underlying i/;"	m	class:OpenXLSX::XLDocument	typeref:typename:std::shared_ptr<Impl::XLDocument>
m_documentRelationships	extern/OpenXLSX/library/openxlsx/implementation/headers/XLDocument_Impl.h	/^        std::unique_ptr<XLRelationships> m_documentRelationships; \/**< A pointer to the documen/;"	m	class:OpenXLSX::Impl::XLDocument	typeref:typename:std::unique_ptr<XLRelationships>
m_dummy	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    int m_dummy;$/;"	m	struct:mz_dummy_time_t_tag	typeref:typename:int
m_element_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_element_size;$/;"	m	struct:__anon09af45a71f08	typeref:typename:mz_uint
m_emptyString	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSharedStrings_Impl.h	/^        std::string m_emptyString; \/**< A dummy member used for returning an empty string. *\/$/;"	m	class:OpenXLSX::Impl::XLSharedStrings	typeref:typename:std::string
m_err	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^        int m_err;$/;"	m	struct:mz_error::__anon09af45a71a08	typeref:typename:int
m_expandable	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_bool m_expandable;$/;"	m	struct:__anon09af45a71d08	typeref:typename:mz_bool
m_external_attr	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_external_attr;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint32
m_filePath	extern/OpenXLSX/library/openxlsx/implementation/headers/XLDocument_Impl.h	/^        std::string m_filePath; \/**< The path to the original file*\/$/;"	m	class:OpenXLSX::Impl::XLDocument	typeref:typename:std::string
m_file_archive_start_ofs	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 m_file_archive_start_ofs;$/;"	m	struct:mz_zip_internal_state_tag	typeref:typename:mz_uint64
m_file_index	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_file_index;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint32
m_file_offset_alignment	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 m_file_offset_alignment;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_uint64
m_filename	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    char m_filename[MZ_ZIP_MAX_ARCHIVE_FILENAME_SIZE];$/;"	m	struct:__anon09af45a71208	typeref:typename:char[]
m_final	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler/;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint32
m_finished	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flu/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_firstCell	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^        XLCellReference m_firstCell; \/**< The first cell in the sheet (i.e. the top left cell)./;"	m	class:OpenXLSX::Impl::XLWorksheet	typeref:typename:XLCellReference
m_first_call	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed;$/;"	m	struct:__anon09af45a71908	typeref:typename:mz_uint
m_flags	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_flags, m_max_probes[2];$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_flush	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    tdefl_flush m_flush;$/;"	m	struct:__anon09af45a70c08	typeref:typename:tdefl_flush
m_greedy_parsing	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    int m_greedy_parsing;$/;"	m	struct:__anon09af45a70c08	typeref:typename:int
m_has_flushed	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed;$/;"	m	struct:__anon09af45a71908	typeref:typename:mz_uint
m_hash	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint16 m_hash[TDEFL_LZ_HASH_SIZE];$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint16[]
m_headerPrintedForThisSection	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        bool m_headerPrintedForThisSection = false;$/;"	m	struct:Catch::TeamCityReporter	typeref:typename:bool
m_headingPairsCategories	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAppProperties_Impl.h	/^        XMLNode m_headingPairsCategories; \/**< *\/$/;"	m	class:OpenXLSX::Impl::XLAppProperties	typeref:typename:XMLNode
m_headingPairsCounts	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAppProperties_Impl.h	/^        XMLNode m_headingPairsCounts; \/**< *\/$/;"	m	class:OpenXLSX::Impl::XLAppProperties	typeref:typename:XMLNode
m_headingPairsSize	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAppProperties_Impl.h	/^        XMLAttribute m_headingPairsSize; \/**< *\/$/;"	m	class:OpenXLSX::Impl::XLAppProperties	typeref:typename:XMLAttribute
m_hidden	extern/OpenXLSX/library/openxlsx/implementation/headers/XLColumn_Impl.h	/^        bool m_hidden; \/**< The hidden state of the column *\/$/;"	m	class:OpenXLSX::Impl::XLColumn	typeref:typename:bool
m_huff_code_sizes	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8 m_huff_code_sizes[TDEFL_MAX_HUFF_TABLES][TDEFL_MAX_HUFF_SYMBOLS];$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint8[][]
m_huff_codes	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint16 m_huff_codes[TDEFL_MAX_HUFF_TABLES][TDEFL_MAX_HUFF_SYMBOLS];$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint16[][]
m_huff_count	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint16 m_huff_count[TDEFL_MAX_HUFF_TABLES][TDEFL_MAX_HUFF_SYMBOLS];$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint16[][]
m_index	extern/OpenXLSX/tests/catch/catch.hpp	/^        std::size_t m_index;$/;"	m	class:Catch::ReusableStringStream	typeref:typename:std::size_t
m_init_flags	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    uint32_t m_init_flags;$/;"	m	struct:mz_zip_internal_state_tag	typeref:typename:uint32_t
m_internal_attr	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint16 m_internal_attr;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint16
m_is_directory	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_bool m_is_directory;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_bool
m_is_encrypted	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_bool m_is_encrypted;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_bool
m_is_supported	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_bool m_is_supported;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_bool
m_key	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint16 m_key, m_sym_index;$/;"	m	struct:__anon09af45a71b08	typeref:typename:mz_uint16
m_lastCell	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^        mutable XLCellReference m_lastCell; \/**<  The last cell in the sheet (i.e. the bottom r/;"	m	class:OpenXLSX::Impl::XLWorksheet	typeref:typename:XLCellReference
m_last_error	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_zip_error m_last_error;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_zip_error
m_last_status	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    tinfl_status m_last_status;$/;"	m	struct:__anon09af45a71908	typeref:typename:tinfl_status
m_len_codes	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8 m_raw_header[4], m_len_codes[TINFL_MAX_HUFF_SYMBOLS_0 + TINFL_MAX_HUFF_SYMBOLS_1 + /;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint8[4][]
m_local_header_ofs	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 m_local_header_ofs;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint64
m_look_up	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_int16 m_look_up[TINFL_FAST_LOOKUP_SIZE], m_tree[TINFL_MAX_HUFF_SYMBOLS_0 * 2];$/;"	m	struct:__anon09af45a71008	typeref:typename:mz_int16[]
m_lookahead_pos	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_lookahead_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_lz_code_buf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8 m_lz_code_buf[TDEFL_LZ_CODE_BUF_SIZE];$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint8[]
m_lz_code_buf_dict_pos	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_maxColumn	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^        unsigned int m_maxColumn; \/**< The last column with properties set *\/$/;"	m	class:OpenXLSX::Impl::XLWorksheet	typeref:typename:unsigned int
m_max_probes	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_flags, m_max_probes[2];$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint[2]
m_mem_capacity	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    size_t m_mem_capacity;$/;"	m	struct:mz_zip_internal_state_tag	typeref:typename:size_t
m_mem_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    size_t m_mem_size;$/;"	m	struct:mz_zip_internal_state_tag	typeref:typename:size_t
m_method	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint16 m_method;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint16
m_name	extern/OpenXLSX/tests/catch/catch.hpp	/^            StringRef m_name;$/;"	m	struct:Catch::Detail::EnumInfo	typeref:typename:StringRef
m_next	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint16 m_next[TDEFL_LZ_DICT_SIZE];$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint16[]
m_nodeInApp	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSheet_Impl.h	/^        XMLNode m_nodeInApp; \/**< A pointer to the relevant TitleOfParts node in app.xml *\/$/;"	m	class:OpenXLSX::Impl::XLSheet	typeref:typename:XMLNode
m_nodeInContentTypes	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSheet_Impl.h	/^        XLContentItem m_nodeInContentTypes; \/**< A pointer to the relevant content type item in/;"	m	class:OpenXLSX::Impl::XLSheet	typeref:typename:XLContentItem
m_nodeInWorkbook	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSheet_Impl.h	/^        XMLNode m_nodeInWorkbook; \/**< A pointer to the relevant sheet node in workbook.xml *\/$/;"	m	class:OpenXLSX::Impl::XLSheet	typeref:typename:XMLNode
m_nodeInWorkbookRels	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSheet_Impl.h	/^        XLRelationshipItem m_nodeInWorkbookRels; \/**< A pointer to the relationship item in wor/;"	m	class:OpenXLSX::Impl::XLSheet	typeref:typename:XLRelationshipItem
m_num_bits	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler/;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint32
m_num_extra	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler/;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint32
m_num_flags_left	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_oss	extern/OpenXLSX/tests/catch/catch.hpp	/^        std::ostream* m_oss;$/;"	m	class:Catch::ReusableStringStream	typeref:typename:std::ostream *
m_out_buf_ofs	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    size_t m_src_buf_left, m_out_buf_ofs;$/;"	m	struct:__anon09af45a70c08	typeref:typename:size_t
m_output_buf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8 m_output_buf[TDEFL_OUT_BUF_SIZE];$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint8[]
m_output_flush_ofs	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flu/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_output_flush_remaining	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flu/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_overrides	extern/OpenXLSX/library/openxlsx/implementation/headers/XLContentTypes_Impl.h	/^        std::map<std::string, XLContentItem> m_overrides; \/**< @todo Consider changing to std::/;"	m	class:OpenXLSX::Impl::XLContentTypes	typeref:typename:std::map<std::string,XLContentItem>
m_p	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    void* m_p;$/;"	m	struct:__anon09af45a71f08	typeref:typename:void *
m_pAlloc	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_alloc_func m_pAlloc;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_alloc_func
m_pAlloc_opaque	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    void* m_pAlloc_opaque;$/;"	m	struct:__anon09af45a71708	typeref:typename:void *
m_pBuf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8* m_pBuf;$/;"	m	struct:__anon09af45a71d08	typeref:typename:mz_uint8 *
m_pDesc	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^        const char* m_pDesc;$/;"	m	struct:mz_error::__anon09af45a71a08	typeref:typename:const char *
m_pFile	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_FILE* m_pFile;$/;"	m	struct:mz_zip_internal_state_tag	typeref:typename:MZ_FILE *
m_pFree	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_free_func m_pFree;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_free_func
m_pIO_opaque	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    void* m_pIO_opaque;$/;"	m	struct:__anon09af45a71708	typeref:typename:void *
m_pIn_buf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    const void* m_pIn_buf;$/;"	m	struct:__anon09af45a70c08	typeref:typename:const void *
m_pIn_buf_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    size_t* m_pIn_buf_size, * m_pOut_buf_size;$/;"	m	struct:__anon09af45a70c08	typeref:typename:size_t *
m_pLZ_code_buf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8* m_pLZ_code_buf, * m_pLZ_flags, * m_pOutput_buf, * m_pOutput_buf_end;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint8 *
m_pLZ_flags	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8* m_pLZ_code_buf, * m_pLZ_flags, * m_pOutput_buf, * m_pOutput_buf_end;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint8 **
m_pMem	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    void* m_pMem;$/;"	m	struct:mz_zip_internal_state_tag	typeref:typename:void *
m_pNeeds_keepalive	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_file_needs_keepalive m_pNeeds_keepalive;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_file_needs_keepalive
m_pOut_buf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    void* m_pOut_buf;$/;"	m	struct:__anon09af45a70c08	typeref:typename:void *
m_pOut_buf_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    size_t* m_pIn_buf_size, * m_pOut_buf_size;$/;"	m	struct:__anon09af45a70c08	typeref:typename:size_t **
m_pOutput_buf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8* m_pLZ_code_buf, * m_pLZ_flags, * m_pOutput_buf, * m_pOutput_buf_end;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint8 ***
m_pOutput_buf_end	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8* m_pLZ_code_buf, * m_pLZ_flags, * m_pOutput_buf, * m_pOutput_buf_end;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint8 ****
m_pPut_buf_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    tdefl_put_buf_func_ptr m_pPut_buf_func;$/;"	m	struct:__anon09af45a70c08	typeref:typename:tdefl_put_buf_func_ptr
m_pPut_buf_user	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    void* m_pPut_buf_user;$/;"	m	struct:__anon09af45a70c08	typeref:typename:void *
m_pRead	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_file_read_func m_pRead;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_file_read_func
m_pRealloc	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_realloc_func m_pRealloc;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_realloc_func
m_pSrc	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    const mz_uint8* m_pSrc;$/;"	m	struct:__anon09af45a70c08	typeref:typename:const mz_uint8 *
m_pState	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_zip_internal_state* m_pState;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_zip_internal_state *
m_pWrite	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_file_write_func m_pWrite;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_file_write_func
m_pZip	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_zip_archive* m_pZip;$/;"	m	struct:__anon09af45a72008	typeref:typename:mz_zip_archive *
m_parentCell	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellValue_Impl.h	/^        XLCell& m_parentCell; \/**< A reference to the parent XLCell object. *\/$/;"	m	class:OpenXLSX::Impl::XLCellValue	typeref:typename:XLCell &
m_parentDocument	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAbstractXMLFile_Impl.h	/^        XLDocument& m_parentDocument; \/**< *\/$/;"	m	class:OpenXLSX::Impl::XLAbstractXMLFile	typeref:typename:XLDocument &
m_parentDocument	extern/OpenXLSX/library/openxlsx/implementation/headers/XLColumn_Impl.h	/^        XLDocument* m_parentDocument; \/**< A pointer to the parent XLDocument object. *\/$/;"	m	class:OpenXLSX::Impl::XLColumn	typeref:typename:XLDocument *
m_parentWorkbook	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSheet_Impl.h	/^        XLWorkbook& m_parentWorkbook;$/;"	m	class:OpenXLSX::Impl::XLSheet	typeref:typename:XLWorkbook &
m_parentWorksheet	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellRange_Impl.h	/^        XLWorksheet* m_parentWorksheet; \/**< A pointer to the parent spreadsheet *\/$/;"	m	class:OpenXLSX::Impl::XLCellRange	typeref:typename:XLWorksheet *
m_parentWorksheet	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCell_Impl.h	/^        XLWorksheet* m_parentWorksheet; \/**< A pointer to the parent XLWorksheet object. *\/$/;"	m	class:OpenXLSX::Impl::XLCell	typeref:typename:XLWorksheet *
m_parentWorksheet	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRow_Impl.h	/^        XLWorksheet& m_parentWorksheet; \/**< A pointer to the parent XLWorksheet object. *\/$/;"	m	class:OpenXLSX::Impl::XLRow	typeref:typename:XLWorksheet &
m_path	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAbstractXMLFile_Impl.h	/^        std::string m_path; \/**< *\/$/;"	m	class:OpenXLSX::Impl::XLAbstractXMLFile	typeref:typename:std::string
m_prev_return_status	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    tdefl_status m_prev_return_status;$/;"	m	struct:__anon09af45a70c08	typeref:typename:tdefl_status
m_raw_header	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint8 m_raw_header[4], m_len_codes[TINFL_MAX_HUFF_SYMBOLS_0 + TINFL_MAX_HUFF_SYMBOLS_1 + /;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint8[4]
m_relationshipNode	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRelationships_Impl.h	/^        XMLNode m_relationshipNode; \/**< An XMLNode object with the relationship item *\/$/;"	m	class:OpenXLSX::Impl::XLRelationshipItem	typeref:typename:XMLNode
m_relationships	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRelationships_Impl.h	/^        std::vector<XLRelationshipItem> m_relationships; \/**< A std::vector with the relationsh/;"	m	class:OpenXLSX::Impl::XLRelationships	typeref:typename:std::vector<XLRelationshipItem>
m_relationships	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^        XLRelationships m_relationships; \/**< pointer to the XLRelationships object for workboo/;"	m	class:OpenXLSX::Impl::XLWorkbook	typeref:typename:XLRelationships
m_row	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^        unsigned long m_row; \/**< The row *\/$/;"	m	class:OpenXLSX::Impl::XLCellReference	typeref:typename:unsigned long
m_row	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLRow.h	/^        Impl::XLRow* m_row; \/**< *\/$/;"	m	class:OpenXLSX::XLRow	typeref:typename:Impl::XLRow *
m_rowNode	extern/OpenXLSX/library/openxlsx/implementation/headers/XLRow_Impl.h	/^        XMLNode m_rowNode; \/**< The XMLNode object for the row. *\/$/;"	m	class:OpenXLSX::Impl::XLRow	typeref:typename:XMLNode
m_rowOffset	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellRange_Impl.h	/^        unsigned long m_rowOffset; \/**< The row offset, relative to the parent spreadsheet *\/$/;"	m	class:OpenXLSX::Impl::XLCellRange	typeref:typename:unsigned long
m_rows	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellRange_Impl.h	/^        unsigned long m_rows; \/**< The number of rows in the range *\/$/;"	m	class:OpenXLSX::Impl::XLCellRange	typeref:typename:unsigned long
m_rows	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^        std::vector<XLRowData> m_rows; \/**< A std::vector with pointers to all rows in the shee/;"	m	class:OpenXLSX::Impl::XLWorksheet	typeref:typename:std::vector<XLRowData>
m_saved_lit	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flu/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_saved_match_dist	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flu/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_saved_match_len	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flu/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_sharedStringNodes	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSharedStrings_Impl.h	/^        std::vector<XMLNode> m_sharedStringNodes; \/**< A std::vector with the XMLNodes holding /;"	m	class:OpenXLSX::Impl::XLSharedStrings	typeref:typename:std::vector<XMLNode>
m_sharedStrings	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^        mutable XLSharedStrings m_sharedStrings; \/**< Pointer to the XLSharedStrings object. *\/$/;"	m	class:OpenXLSX::Impl::XLWorkbook	typeref:typename:XLSharedStrings
m_sheet	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLSheet.h	/^        Impl::XLSheet* m_sheet; \/**< *\/$/;"	m	class:OpenXLSX::XLSheet	typeref:typename:Impl::XLSheet *
m_sheetCountAttribute	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAppProperties_Impl.h	/^        XMLAttribute m_sheetCountAttribute; \/**< *\/$/;"	m	class:OpenXLSX::Impl::XLAppProperties	typeref:typename:XMLAttribute
m_sheetDataNode	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^        std::unique_ptr<XMLNode> m_sheetDataNode; \/**< The node where the sheet data (i.e. rows/;"	m	class:OpenXLSX::Impl::XLWorksheet	typeref:typename:std::unique_ptr<XMLNode>
m_sheetId	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^        int m_sheetId; \/**< Counter to use to create ID for new sheet *\/$/;"	m	class:OpenXLSX::Impl::XLWorkbook	typeref:typename:int
m_sheetName	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSheet_Impl.h	/^        XMLAttribute m_sheetName; \/**< The sheet name given by the user *\/$/;"	m	class:OpenXLSX::Impl::XLSheet	typeref:typename:XMLAttribute
m_sheetNamesParent	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAppProperties_Impl.h	/^        XMLNode m_sheetNamesParent; \/**< *\/$/;"	m	class:OpenXLSX::Impl::XLAppProperties	typeref:typename:XMLNode
m_sheetState	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSheet_Impl.h	/^        XLSheetState m_sheetState; \/**< The state of the sheet, i.e. Visible, Hidden or VeryHid/;"	m	class:OpenXLSX::Impl::XLSheet	typeref:typename:XLSheetState
m_sheetType	extern/OpenXLSX/library/openxlsx/implementation/headers/XLSheet_Impl.h	/^        XLSheetType m_sheetType; \/**< The sheet type, i.e. WorkSheet, ChartSheet, etc. *\/$/;"	m	class:OpenXLSX::Impl::XLSheet	typeref:typename:XLSheetType
m_sheetViewsNode	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^        std::unique_ptr<XMLNode> m_sheetViewsNode; \/**< The head node for sheet views *\/$/;"	m	class:OpenXLSX::Impl::XLWorksheet	typeref:typename:std::unique_ptr<XMLNode>
m_sheets	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^        mutable std::vector<XLSheetData> m_sheets; \/**< >*\/$/;"	m	class:OpenXLSX::Impl::XLWorkbook	typeref:typename:std::vector<XLSheetData>
m_sheetsNode	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^        XMLNode m_sheetsNode; \/**< The parent node for all the sheet nodes (worksheets as well /;"	m	class:OpenXLSX::Impl::XLWorkbook	typeref:typename:XMLNode
m_size	extern/NamedType/catch.hpp	/^        size_type m_size;$/;"	m	class:Catch::StringRef	typeref:typename:size_type
m_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    size_t m_size, m_capacity;$/;"	m	struct:__anon09af45a71d08	typeref:typename:size_t
m_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    size_t m_size, m_capacity;$/;"	m	struct:__anon09af45a71f08	typeref:typename:size_t
m_size	extern/OpenXLSX/tests/catch/catch.hpp	/^        size_type m_size;$/;"	m	class:Catch::StringRef	typeref:typename:size_type
m_sorted_central_dir_offsets	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_zip_array m_sorted_central_dir_offsets;$/;"	m	struct:mz_zip_internal_state_tag	typeref:typename:mz_zip_array
m_src_buf_left	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    size_t m_src_buf_left, m_out_buf_ofs;$/;"	m	struct:__anon09af45a70c08	typeref:typename:size_t
m_start	extern/NamedType/catch.hpp	/^        char const* m_start;$/;"	m	class:Catch::StringRef	typeref:typename:char const *
m_start	extern/OpenXLSX/tests/catch/catch.hpp	/^        char const* m_start;$/;"	m	class:Catch::StringRef	typeref:typename:char const *
m_state	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler/;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint32
m_sym_index	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint16 m_key, m_sym_index;$/;"	m	struct:__anon09af45a71b08	typeref:typename:mz_uint16
m_table_sizes	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler/;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint32[]
m_tables	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    tinfl_huff_table m_tables[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	typeref:typename:tinfl_huff_table[]
m_testAsMethod	extern/NamedType/catch.hpp	/^    void (C::*m_testAsMethod)();$/;"	m	class:Catch::TestInvokerAsMethod	typeref:typename:void (C::*)()
m_testAsMethod	extern/OpenXLSX/tests/catch/catch.hpp	/^    void (C::*m_testAsMethod)();$/;"	m	class:Catch::TestInvokerAsMethod	typeref:typename:void (C::*)()
m_testTimer	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        Timer m_testTimer;$/;"	m	struct:Catch::TeamCityReporter	typeref:typename:Timer
m_time	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    MZ_TIME_T m_time;$/;"	m	struct:__anon09af45a71208	typeref:typename:MZ_TIME_T
m_token	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTokenizer_Impl.h	/^        std::string m_token; \/**<  *\/$/;"	m	class:OpenXLSX::Impl::XLToken	typeref:typename:std::string
m_token	extern/OpenXLSX/library/openxlsx/implementation/headers/XLTokenizer_Impl.h	/^        std::string m_token; \/**< output string *\/$/;"	m	class:OpenXLSX::Impl::XLTokenizer	typeref:typename:std::string
m_topLeft	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellRange_Impl.h	/^        XLCellReference m_topLeft; \/**< The cell reference of the first cell in the range *\/$/;"	m	class:OpenXLSX::Impl::XLCellRange	typeref:typename:XLCellReference
m_total_files	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_total_files;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_uint32
m_total_lz_bytes	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_transpose	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellRange_Impl.h	/^        mutable bool m_transpose; \/**< *\/$/;"	m	class:OpenXLSX::Impl::XLCellRange	typeref:typename:bool
m_tree	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_int16 m_look_up[TINFL_FAST_LOOKUP_SIZE], m_tree[TINFL_MAX_HUFF_SYMBOLS_0 * 2];$/;"	m	struct:__anon09af45a71008	typeref:typename:mz_int16[][]
m_type	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler/;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint32
m_uncomp_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 m_uncomp_size;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint64
m_valid	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^        bool m_valid \/**< Flag indicating if the reference is valid. *\/;$/;"	m	class:OpenXLSX::Impl::XLCellReference	typeref:typename:bool
m_value	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCell_Impl.h	/^        XLCellValue m_value;         \/**< The XLCellValue object, holding the current value. *\/$/;"	m	class:OpenXLSX::Impl::XLCell	typeref:typename:XLCellValue
m_value	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellValue.h	/^        Impl::XLCellValue* m_value; \/**< A pointer to the underlying implementation object, Imp/;"	m	class:OpenXLSX::XLCellValue	typeref:typename:Impl::XLCellValue *
m_values	extern/OpenXLSX/tests/catch/catch.hpp	/^            std::vector<std::pair<int, std::string>> m_values;$/;"	m	struct:Catch::Detail::EnumInfo	typeref:typename:std::vector<std::pair<int,std::string>>
m_version_made_by	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint16 m_version_made_by;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint16
m_version_needed	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint16 m_version_needed;$/;"	m	struct:__anon09af45a71208	typeref:typename:mz_uint16
m_wants_to_finish	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flu/;"	m	struct:__anon09af45a70c08	typeref:typename:mz_uint
m_width	extern/OpenXLSX/library/openxlsx/implementation/headers/XLColumn_Impl.h	/^        float m_width; \/**< The width of the column *\/$/;"	m	class:OpenXLSX::Impl::XLColumn	typeref:typename:float
m_window_bits	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    int m_window_bits;$/;"	m	struct:__anon09af45a71908	typeref:typename:int
m_workbook	extern/OpenXLSX/library/openxlsx/implementation/headers/XLDocument_Impl.h	/^        std::unique_ptr<XLWorkbook> m_workbook; \/**< A pointer to the workbook object *\/$/;"	m	class:OpenXLSX::Impl::XLDocument	typeref:typename:std::unique_ptr<XLWorkbook>
m_workbook	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLWorkbook.h	/^        Impl::XLWorkbook* m_workbook; \/**< *\/$/;"	m	class:OpenXLSX::XLWorkbook	typeref:typename:Impl::XLWorkbook *
m_xmlData	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAbstractXMLFile_Impl.h	/^        mutable std::string m_xmlData; \/**< A std::string with the XML data. This is only updat/;"	m	class:OpenXLSX::Impl::XLAbstractXMLFile	typeref:typename:std::string
m_xmlDocument	extern/OpenXLSX/library/openxlsx/implementation/headers/XLAbstractXMLFile_Impl.h	/^        XMLDocument m_xmlDocument; \/**< A pointer to the underlying XMLDocument resource*\/$/;"	m	class:OpenXLSX::Impl::XLAbstractXMLFile	typeref:typename:XMLDocument
m_z_adler32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler/;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint32
m_zhdr0	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler/;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint32
m_zhdr1	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler/;"	m	struct:tinfl_decompressor_tag	typeref:typename:mz_uint32
m_zip64	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_bool m_zip64;$/;"	m	struct:mz_zip_internal_state_tag	typeref:typename:mz_bool
m_zip64_has_extended_info_fields	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_bool m_zip64_has_extended_info_fields;$/;"	m	struct:mz_zip_internal_state_tag	typeref:typename:mz_bool
m_zip_mode	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_zip_mode m_zip_mode;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_zip_mode
m_zip_type	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_zip_type m_zip_type;$/;"	m	struct:__anon09af45a71708	typeref:typename:mz_zip_type
macOS	extern/libgit2/tests/README.md	/^#### macOS$/;"	t
macroName	extern/OpenXLSX/tests/catch/catch.hpp	/^        StringRef macroName;$/;"	m	struct:Catch::AssertionInfo	typeref:typename:StringRef
macros	extern/libgit2/src/attrcache.h	/^	git_strmap *macros;	 \/* hash name to vector<git_attr_assignment> *\/$/;"	m	struct:__anon5aa68d020108	typeref:typename:git_strmap *
magic_number	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 magic_number;$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
magic_number	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 magic_number;$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint32
mailmap	extern/libgit2/src/blame.h	/^	git_mailmap *mailmap;$/;"	m	struct:git_blame	typeref:typename:git_mailmap *
mailmap	extern/libgit2/tests/mailmap/basic.c	/^static git_mailmap *mailmap = NULL;$/;"	v	typeref:typename:git_mailmap *	file:
mailmap_add_blob	extern/libgit2/src/mailmap.c	/^static int mailmap_add_blob($/;"	f	typeref:typename:int	file:
mailmap_add_buffer	extern/libgit2/src/mailmap.c	/^static int mailmap_add_buffer(git_mailmap *mm, const char *buf, size_t len)$/;"	f	typeref:typename:int	file:
mailmap_add_entry_unterminated	extern/libgit2/src/mailmap.c	/^static int mailmap_add_entry_unterminated($/;"	f	typeref:typename:int	file:
mailmap_add_file_ondisk	extern/libgit2/src/mailmap.c	/^static int mailmap_add_file_ondisk($/;"	f	typeref:typename:int	file:
mailmap_add_from_repository	extern/libgit2/src/mailmap.c	/^static void mailmap_add_from_repository(git_mailmap *mm, git_repository *repo)$/;"	f	typeref:typename:void	file:
mailmap_entry	extern/libgit2/tests/mailmap/mailmap_testdata.h	/^typedef struct mailmap_entry {$/;"	s
mailmap_entry	extern/libgit2/tests/mailmap/mailmap_testdata.h	/^} mailmap_entry;$/;"	t	typeref:struct:mailmap_entry
mailmap_entry_cmp	extern/libgit2/src/mailmap.c	/^static int mailmap_entry_cmp(const void *a_raw, const void *b_raw)$/;"	f	typeref:typename:int	file:
mailmap_entry_free	extern/libgit2/src/mailmap.c	/^static void mailmap_entry_free(git_mailmap_entry *entry)$/;"	f	typeref:typename:void	file:
mailmap_entry_replace	extern/libgit2/src/mailmap.c	/^static int mailmap_entry_replace(void **old_raw, void *new_raw)$/;"	f	typeref:typename:int	file:
main	CMakeLists.txt	/^add_executable(main$/;"	t
main	CMakeLists.txt	/^project(main VERSION 0.1.0)$/;"	p
main	extern/OpenXLSX/benchmark/Benchmark.cpp	/^int main() {$/;"	f	typeref:typename:int
main	extern/OpenXLSX/examples/c++/Demo1.cpp	/^int main() {$/;"	f	typeref:typename:int
main	extern/OpenXLSX/examples/c++/Demo2.cpp	/^int main() {$/;"	f	typeref:typename:int
main	extern/OpenXLSX/tests/c++/Test00_Main.cpp	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	extern/libgit2/cmake/Modules/CheckPrototypeDefinition.c.in	/^int main() {$/;"	f	typeref:typename:int
main	extern/libgit2/examples/lg2.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	extern/libgit2/fuzzers/standalone_driver.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	extern/libgit2/tests/main.c	/^int __cdecl main(int argc, char *argv[])$/;"	f	typeref:typename:int __cdecl
main	main.cpp	/^int main() {$/;"	f	typeref:typename:int
main	oset.cpp	/^int main() {$/;"	f	typeref:typename:int
main	oset.hpp	/^int main() {$/;"	f	typeref:typename:int
main	p.cpp	/^int main() {$/;"	f	typeref:typename:int
mainline	extern/libgit2/include/git2/cherrypick.h	/^	unsigned int mainline;$/;"	m	struct:__anon46ced4e80108	typeref:typename:unsigned int
mainline	extern/libgit2/include/git2/revert.h	/^	unsigned int mainline;$/;"	m	struct:__anond864852c0108	typeref:typename:unsigned int
mainloop_entry	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE struct sljit_label *mainloop_entry(compiler_common *common, BOOL hascrorlf)$/;"	f	typeref:typename:SLJIT_INLINE struct sljit_label *	file:
major	extern/libgit2/deps/ntlmclient/ntlm.h	/^	uint8_t major;$/;"	m	struct:__anon8624cbbb0308	typeref:typename:uint8_t
make	git.hpp	/^  make(C _c, D _d) : c(_c), d(_d) {}$/;"	f	struct:git::make
make	git.hpp	/^template <typename T, typename... Args> struct make {$/;"	s	namespace:git
make2	git.hpp	/^  make2(C _c) : c(_c) {}$/;"	f	struct:git::make2
make2	git.hpp	/^template <typename T, typename... Args> struct make2 {$/;"	s	namespace:git
makeTestInvoker	extern/NamedType/catch.hpp	/^auto makeTestInvoker( void (C::*testAsMethod)() ) noexcept -> ITestInvoker* {$/;"	f	namespace:Catch	typeref:typename:auto
makeTestInvoker	extern/OpenXLSX/tests/catch/catch.hpp	/^auto makeTestInvoker( void (C::*testAsMethod)() ) noexcept -> ITestInvoker* {$/;"	f	namespace:Catch	typeref:typename:auto
make_crc_table	extern/libgit2/deps/zlib/crc32.c	/^local void make_crc_table()$/;"	f	typeref:typename:local void
make_gitlink_dir	extern/libgit2/tests/repo/open.c	/^static void make_gitlink_dir(const char *dir, const char *linktext)$/;"	f	typeref:typename:void	file:
make_head_unborn	extern/libgit2/tests/repo/repo_helpers.c	/^void make_head_unborn(git_repository* repo, const char *target)$/;"	f	typeref:typename:void
make_named	extern/NamedType/named_type_impl.hpp	/^constexpr StrongType<T> make_named(T const& value)$/;"	f	namespace:fluent	typeref:typename:StrongType<T>
make_named	nt.hpp	/^constexpr StrongType<T> make_named(T const &value) {$/;"	f	namespace:nt	typeref:typename:StrongType<T>
make_odb_dir	extern/libgit2/tests/object/raw/write.c	/^static void make_odb_dir(void)$/;"	f	typeref:typename:void	file:
make_origin	extern/libgit2/src/blame_git.c	/^static int make_origin(git_blame__origin **out, git_commit *commit, const char *path)$/;"	f	typeref:typename:int	file:
make_parse_result	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline xml_parse_result make_parse_result(xml_parse_status status, ptrdiff_t offset = 0) {$/;"	f	typeref:typename:xml_parse_result
make_submodule_dirty	extern/libgit2/tests/checkout/typechange.c	/^static int make_submodule_dirty(git_submodule *sm, const char *name, void *payload)$/;"	f	typeref:typename:int	file:
make_test_data	extern/libgit2/tests/ignore/status.c	/^static void make_test_data(const char *reponame, const char **files)$/;"	f	typeref:typename:void	file:
makefixed	extern/libgit2/deps/zlib/inflate.c	/^void makefixed()$/;"	f	typeref:typename:void
manipulate_note_in_tree_r	extern/libgit2/src/notes.c	/^static int manipulate_note_in_tree_r($/;"	f	typeref:typename:int	file:
map	extern/libgit2/src/cache.h	/^	git_oidmap *map;$/;"	m	struct:__anon354735470308	typeref:typename:git_oidmap *
map	extern/libgit2/src/config_entries.c	/^	git_strmap *map;$/;"	m	struct:git_config_entries	typeref:typename:git_strmap *	file:
map	extern/libgit2/src/diff_file.h	/^	git_map map;$/;"	m	struct:__anon2493e46b0108	typeref:typename:git_map
map	extern/libgit2/src/odb_loose.c	/^	git_map map;$/;"	m	struct:__anon81c02f840308	typeref:typename:git_map	file:
map	extern/libgit2/src/path.h	/^	iconv_t map;$/;"	m	struct:__anon7d10f0c00308	typeref:typename:iconv_t
map	extern/libgit2/src/sortedcache.h	/^	git_strmap   *map;$/;"	m	struct:__anond92d40380108	typeref:typename:git_strmap *
map	extern/libgit2/src/submodule.c	/^	git_strmap *map;$/;"	m	struct:__anon952effbe0408	typeref:typename:git_strmap *	file:
map	extern/libgit2/src/tree.h	/^	git_strmap *map;$/;"	m	struct:git_treebuilder	typeref:typename:git_strmap *
map_count	extern/libgit2/src/config_cache.c	/^	size_t map_count;$/;"	m	struct:map_data	typeref:typename:size_t	file:
map_data	extern/libgit2/src/config_cache.c	/^struct map_data {$/;"	s	file:
map_value	extern/libgit2/include/git2/config.h	/^	int map_value;$/;"	m	struct:__anonefb3184a0308	typeref:typename:int
mapped	extern/libgit2/src/mwindow.h	/^	size_t mapped;$/;"	m	struct:git_mwindow_ctl	typeref:typename:size_t
maps	extern/libgit2/src/config_cache.c	/^	git_configmap *maps;$/;"	m	struct:map_data	typeref:typename:git_configmap *	file:
mark	extern/libgit2/deps/pcre/pcre.h	/^  PCRE_UCHAR16 **mark;            \/* For passing back a mark pointer *\/$/;"	m	struct:pcre16_extra	typeref:typename:PCRE_UCHAR16 **
mark	extern/libgit2/deps/pcre/pcre.h	/^  PCRE_UCHAR32 **mark;            \/* For passing back a mark pointer *\/$/;"	m	struct:pcre32_extra	typeref:typename:PCRE_UCHAR32 **
mark	extern/libgit2/deps/pcre/pcre.h	/^  const PCRE_UCHAR16 *mark;       \/* Pointer to current mark or NULL    *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:const PCRE_UCHAR16 *
mark	extern/libgit2/deps/pcre/pcre.h	/^  const PCRE_UCHAR32 *mark;       \/* Pointer to current mark or NULL    *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:const PCRE_UCHAR32 *
mark	extern/libgit2/deps/pcre/pcre.h	/^  const unsigned char *mark;      \/* Pointer to current mark or NULL    *\/$/;"	m	struct:pcre_callout_block	typeref:typename:const unsigned char *
mark	extern/libgit2/deps/pcre/pcre.h	/^  unsigned char **mark;           \/* For passing back a mark pointer *\/$/;"	m	struct:pcre_extra	typeref:typename:unsigned char **
mark	extern/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uchar *mark;        \/* Mark pointer to pass back on success *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uchar *
mark_blob_uninteresting	extern/libgit2/src/pack-objects.c	/^static int mark_blob_uninteresting(git_packbuilder *pb, const git_oid *id)$/;"	f	typeref:typename:int	file:
mark_edges_uninteresting	extern/libgit2/src/pack-objects.c	/^static int mark_edges_uninteresting(git_packbuilder *pb, git_commit_list *commits)$/;"	f	typeref:typename:int	file:
mark_parents	extern/libgit2/src/graph.c	/^static int mark_parents(git_revwalk *walk, git_commit_list_node *one,$/;"	f	typeref:typename:int	file:
mark_parents_uninteresting	extern/libgit2/src/revwalk.c	/^static void mark_parents_uninteresting(git_commit_list_node *commit)$/;"	f	typeref:typename:void	file:
mark_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  pcre_uchar *mark_ptr;$/;"	m	struct:jit_arguments	typeref:typename:pcre_uchar *	file:
mark_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 mark_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
mark_tree_uninteresting	extern/libgit2/src/pack-objects.c	/^static int mark_tree_uninteresting(git_packbuilder *pb, const git_oid *id)$/;"	f	typeref:typename:int	file:
marker_size	extern/libgit2/include/git2/merge.h	/^	unsigned short marker_size;$/;"	m	struct:__anon5e9a43240508	typeref:typename:unsigned short
marker_size	extern/libgit2/src/xdiff/xdiff.h	/^	int marker_size;$/;"	m	struct:s_xmparam	typeref:typename:int
maskb	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonda4e2ebc0108	typeref:typename:int
maski	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonda4e2ebc0108	typeref:typename:int
match	extern/libgit2/deps/pcre/pcre_exec.c	/^match(REGISTER PCRE_PUCHAR eptr, REGISTER const pcre_uchar *ecode,$/;"	f	typeref:typename:int	file:
match	extern/libgit2/src/attr_file.h	/^	git_attr_fnmatch match;$/;"	m	struct:__anon32d629ad0308	typeref:typename:git_attr_fnmatch
match	extern/libgit2/src/iterator.c	/^	iterator_pathlist_search_t match;$/;"	m	struct:__anonb487a9b80608	typeref:typename:iterator_pathlist_search_t	file:
match	extern/libgit2/src/xdiff/xpatience.c	/^static int match(struct hashmap *map, int line1, int line2)$/;"	f	typeref:typename:int	file:
match_alpha	extern/libgit2/src/date.c	/^static size_t match_alpha(const char *date, struct tm *tm, int *offset)$/;"	f	typeref:typename:size_t	file:
match_available	extern/libgit2/deps/zlib/deflate.h	/^    int match_available;         \/* set if previous match exists *\/$/;"	m	struct:internal_state	typeref:typename:int
match_bool_arg	extern/libgit2/examples/common.c	/^int match_bool_arg(int *out, struct args_info *args, const char *opt)$/;"	f	typeref:typename:int
match_call_count	extern/libgit2/deps/pcre/pcre_internal.h	/^  unsigned long int match_call_count;      \/* As it says *\/$/;"	m	struct:match_data	typeref:typename:unsigned long int
match_capture_common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE int match_capture_common(compiler_common *common, int stacksize, int offset,/;"	f	typeref:typename:SLJIT_INLINE int	file:
match_data	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct match_data {$/;"	s
match_data	extern/libgit2/deps/pcre/pcre_internal.h	/^} match_data;$/;"	t	typeref:struct:match_data
match_digit	extern/libgit2/src/date.c	/^static size_t match_digit(const char *date, struct tm *tm, int *offset, int *tm_gmt)$/;"	f	typeref:typename:size_t	file:
match_end_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 match_end_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
match_frames_base	extern/libgit2/deps/pcre/pcre_internal.h	/^  void  *match_frames_base;       \/* For remembering malloc'd frames *\/$/;"	m	struct:match_data	typeref:typename:void *
match_func_rec	extern/libgit2/src/xdiff/xemit.c	/^static long match_func_rec(xdfile_t *xdf, xdemitconf_t const *xecfg, long ri,$/;"	f	typeref:typename:long	file:
match_function_type	extern/libgit2/deps/pcre/pcre_internal.h	/^  int    match_function_type;     \/* Set for certain special calls of MATCH() *\/$/;"	m	struct:match_data	typeref:typename:int
match_hunk	extern/libgit2/src/apply.c	/^static bool match_hunk($/;"	f	typeref:typename:bool	file:
match_int_arg	extern/libgit2/examples/common.c	/^int match_int_arg($/;"	f	typeref:typename:int
match_int_internal	extern/libgit2/examples/common.c	/^static int match_int_internal($/;"	f	typeref:typename:int	file:
match_length	extern/libgit2/deps/zlib/deflate.h	/^    uInt match_length;           \/* length of best match *\/$/;"	m	struct:internal_state	typeref:typename:uInt
match_limit	extern/libgit2/deps/pcre/pcre.h	/^  unsigned long int match_limit;  \/* Maximum number of calls to match() *\/$/;"	m	struct:pcre16_extra	typeref:typename:unsigned long int
match_limit	extern/libgit2/deps/pcre/pcre.h	/^  unsigned long int match_limit;  \/* Maximum number of calls to match() *\/$/;"	m	struct:pcre32_extra	typeref:typename:unsigned long int
match_limit	extern/libgit2/deps/pcre/pcre.h	/^  unsigned long int match_limit;  \/* Maximum number of calls to match() *\/$/;"	m	struct:pcre_extra	typeref:typename:unsigned long int
match_limit	extern/libgit2/deps/pcre/pcre_internal.h	/^  unsigned long int match_limit;           \/* As it says *\/$/;"	m	struct:match_data	typeref:typename:unsigned long int
match_limit_recursion	extern/libgit2/deps/pcre/pcre.h	/^  unsigned long int match_limit_recursion; \/* Max recursive calls to match() *\/$/;"	m	struct:pcre16_extra	typeref:typename:unsigned long int
match_limit_recursion	extern/libgit2/deps/pcre/pcre.h	/^  unsigned long int match_limit_recursion; \/* Max recursive calls to match() *\/$/;"	m	struct:pcre32_extra	typeref:typename:unsigned long int
match_limit_recursion	extern/libgit2/deps/pcre/pcre.h	/^  unsigned long int match_limit_recursion; \/* Max recursive calls to match() *\/$/;"	m	struct:pcre_extra	typeref:typename:unsigned long int
match_limit_recursion	extern/libgit2/deps/pcre/pcre_internal.h	/^  unsigned long int match_limit_recursion; \/* As it says *\/$/;"	m	struct:match_data	typeref:typename:unsigned long int
match_line	extern/libgit2/src/diff_driver.h	/^	git_diff_find_context_line match_line;$/;"	m	struct:__anon6fb9a4970108	typeref:typename:git_diff_find_context_line
match_multi_number	extern/libgit2/src/date.c	/^static size_t match_multi_number(unsigned long num, char c, const char *date, char *end, struct /;"	f	typeref:typename:size_t	file:
match_numeric_arg	extern/libgit2/examples/common.c	/^static const char *match_numeric_arg(struct args_info *args, const char *opt)$/;"	f	typeref:typename:const char *	file:
match_object_header_date	extern/libgit2/src/date.c	/^static int match_object_header_date(const char *date, git_time_t *timestamp, int *offset)$/;"	f	typeref:typename:int	file:
match_once_common	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void match_once_common(compiler_common *common, pcre_uchar ket, int framesiz/;"	f	typeref:typename:SLJIT_INLINE void	file:
match_ref	extern/libgit2/deps/pcre/pcre_exec.c	/^match_ref(int offset, register PCRE_PUCHAR eptr, int length, match_data *md,$/;"	f	typeref:typename:int	file:
match_start	extern/libgit2/deps/zlib/deflate.h	/^    uInt match_start;            \/* start of matching string *\/$/;"	m	struct:internal_state	typeref:typename:uInt
match_str_arg	extern/libgit2/examples/common.c	/^int match_str_arg($/;"	f	typeref:typename:int
match_string	extern/libgit2/src/date.c	/^static size_t match_string(const char *date, const char *str)$/;"	f	typeref:typename:size_t	file:
match_tz	extern/libgit2/src/date.c	/^static size_t match_tz(const char *date, int *offp)$/;"	f	typeref:typename:size_t	file:
match_uint16_arg	extern/libgit2/examples/common.c	/^int match_uint16_arg($/;"	f	typeref:typename:int
match_uint32_arg	extern/libgit2/examples/common.c	/^int match_uint32_arg($/;"	f	typeref:typename:int
match_with_parent	extern/libgit2/examples/log.c	/^static int match_with_parent(git_commit *commit, int i, git_diff_options *opts)$/;"	f	typeref:typename:int	file:
matched_once	extern/libgit2/deps/pcre/pcre_exec.c	/^#define matched_once /;"	d	file:
matched_pathspec	extern/libgit2/tests/diff/diff_helpers.h	/^	const char *matched_pathspec;$/;"	m	struct:__anona765b0910208	typeref:typename:const char *
matches	extern/libgit2/deps/zlib/deflate.h	/^    uInt matches;       \/* number of string matches in current block *\/$/;"	m	struct:internal_state	typeref:typename:uInt
matches	extern/libgit2/src/config_file.c	/^	int (*matches)(int *matches, const git_repository *repo, const char *cfg, const char *value);$/;"	m	struct:__anon041cc2a30308	typeref:typename:int (*)(int * matches,const git_repository * repo,const char * cfg,const char * value)	file:
matches	extern/libgit2/tests/object/tag/list.c	/^static const struct pattern_match_t matches[] = {$/;"	v	typeref:typename:const struct pattern_match_t[]	file:
matching	extern/libgit2/src/refspec.h	/^		matching :1;$/;"	m	struct:git_refspec	typeref:typename:unsigned int:1
matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *matchingpath;$/;"	m	struct:assert_backtrack	typeref:struct:sljit_label *	file:
matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *matchingpath;$/;"	m	struct:braminzero_backtrack	typeref:struct:sljit_label *	file:
matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *matchingpath;$/;"	m	struct:char_iterator_backtrack	typeref:struct:sljit_label *	file:
matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *matchingpath;$/;"	m	struct:ref_iterator_backtrack	typeref:struct:sljit_label *	file:
max	extern/libgit2/deps/pcre/pcre_exec.c	/^#define max /;"	d	file:
max	extern/libgit2/src/util.h	/^# define max(/;"	d
maxCols	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^    constexpr uint16_t maxCols = 16'384;$/;"	v	namespace:OpenXLSX	typeref:typename:uint16_t
maxRetries	extern/libgit2/tests/resources/userdiff/after/file.php	/^    protected $maxRetries;$/;"	v	class:Faker\\UniqueGenerator
maxRetries	extern/libgit2/tests/resources/userdiff/before/file.php	/^    protected $maxRetries;$/;"	v	class:Faker\\UniqueGenerator
maxRetries	extern/libgit2/tests/resources/userdiff/files/file.php	/^    protected $maxRetries;$/;"	v	class:Faker\\UniqueGenerator
maxRows	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLDefinitions.h	/^    constexpr uint32_t maxRows = 1'048'576;$/;"	v	namespace:OpenXLSX	typeref:typename:uint32_t
max_candidates_tags	extern/libgit2/include/git2/describe.h	/^	unsigned int max_candidates_tags; \/**< default: 10 *\/$/;"	m	struct:git_describe_options	typeref:typename:unsigned int
max_chain	extern/libgit2/deps/zlib/deflate.c	/^   ush max_chain;$/;"	m	struct:config_s	typeref:typename:ush	file:
max_chain_length	extern/libgit2/deps/zlib/deflate.h	/^    uInt max_chain_length;$/;"	m	struct:internal_state	typeref:typename:uInt
max_chain_length	extern/libgit2/src/xdiff/xhistogram.c	/^	unsigned int max_chain_length,$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
max_code	extern/libgit2/deps/zlib/deflate.h	/^    int     max_code;            \/* largest code with non zero frequency *\/$/;"	m	struct:tree_desc_s	typeref:typename:int
max_delta_cache_size	extern/libgit2/src/pack-objects.h	/^	size_t max_delta_cache_size;$/;"	m	struct:git_packbuilder	typeref:typename:size_t
max_digits	extern/libgit2/src/diff_stats.c	/^	int max_digits;$/;"	m	struct:git_diff_stats	typeref:typename:int	file:
max_filestat	extern/libgit2/src/diff_stats.c	/^	size_t max_filestat;$/;"	m	struct:git_diff_stats	typeref:typename:size_t	file:
max_insert_length	extern/libgit2/deps/zlib/deflate.h	/^#   define max_insert_length /;"	d
max_lazy	extern/libgit2/deps/zlib/deflate.c	/^   ush max_lazy;    \/* do not perform lazy search above this match length *\/$/;"	m	struct:config_s	typeref:typename:ush	file:
max_lazy_match	extern/libgit2/deps/zlib/deflate.h	/^    uInt max_lazy_match;$/;"	m	struct:internal_state	typeref:typename:uInt
max_length	extern/libgit2/deps/zlib/trees.c	/^    int     max_length;          \/* max bit length for the codes *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:int	file:
max_line	extern/libgit2/include/git2/blame.h	/^	size_t max_line;$/;"	m	struct:git_blame_options	typeref:typename:size_t
max_lookbehind	extern/libgit2/deps/pcre/pcre_internal.h	/^  int  max_lookbehind;              \/* Maximum lookbehind (characters) *\/$/;"	m	struct:compile_data	typeref:typename:int
max_lookbehind	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 max_lookbehind;     \/* Longest lookbehind (characters) *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
max_lookbehind	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 max_lookbehind;     \/* Longest lookbehind (characters) *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
max_name	extern/libgit2/src/diff_stats.c	/^	size_t max_name;$/;"	m	struct:git_diff_stats	typeref:typename:size_t	file:
max_parents	extern/libgit2/examples/log.c	/^	int min_parents, max_parents;$/;"	m	struct:log_options	typeref:typename:int	file:
max_size	extern/libgit2/include/git2/diff.h	/^	git_off_t   max_size;$/;"	m	struct:__anon72022fed0608	typeref:typename:git_off_t
maxs	extern/libgit2/src/hashsig.c	/^	hashsig_heap maxs;$/;"	m	struct:git_hashsig	typeref:typename:hashsig_heap	file:
maybe_abbrev	extern/libgit2/src/revparse.c	/^static int maybe_abbrev(git_object** out, git_repository *repo, const char *spec)$/;"	f	typeref:typename:int	file:
maybe_append_head	extern/libgit2/src/refdb_fs.c	/^static int maybe_append_head(refdb_fs_backend *backend, const git_reference *ref, const git_sign/;"	f	typeref:typename:int	file:
maybe_describe	extern/libgit2/src/revparse.c	/^static int maybe_describe(git_object**out, git_repository *repo, const char *spec)$/;"	f	typeref:typename:int	file:
maybe_modified	extern/libgit2/src/diff_generate.c	/^static int maybe_modified($/;"	f	typeref:typename:int	file:
maybe_modified_submodule	extern/libgit2/src/diff_generate.c	/^static int maybe_modified_submodule($/;"	f	typeref:typename:int	file:
maybe_sha	extern/libgit2/src/revparse.c	/^static int maybe_sha(git_object** out, git_repository *repo, const char *spec)$/;"	f	typeref:typename:int	file:
maybe_sha_or_abbrev	extern/libgit2/src/revparse.c	/^static int maybe_sha_or_abbrev(git_object** out, git_repository *repo, const char *spec, size_t /;"	f	typeref:typename:int	file:
maybe_want	extern/libgit2/src/fetch.c	/^static int maybe_want(git_remote *remote, git_remote_head *head, git_odb *odb, git_refspec *tags/;"	f	typeref:typename:int	file:
mbed	extern/libgit2/deps/ntlmclient/crypt_mbedtls.h	/^	mbedtls_md_context_t mbed;$/;"	m	struct:__anond124c25c0108	typeref:typename:mbedtls_md_context_t
mbedtls_certificate	extern/libgit2/src/streams/mbedtls.c	/^static int mbedtls_certificate(git_cert **out, git_stream *stream)$/;"	f	typeref:typename:int	file:
mbedtls_connect	extern/libgit2/src/streams/mbedtls.c	/^static int mbedtls_connect(git_stream *stream)$/;"	f	typeref:typename:int	file:
mbedtls_entropy	extern/libgit2/src/streams/mbedtls.c	/^static mbedtls_entropy_context *mbedtls_entropy;$/;"	v	typeref:typename:mbedtls_entropy_context *	file:
mbedtls_set_proxy	extern/libgit2/src/streams/mbedtls.c	/^static int mbedtls_set_proxy(git_stream *stream, const git_proxy_options *proxy_options)$/;"	f	typeref:typename:int	file:
mbedtls_stream	extern/libgit2/src/streams/mbedtls.c	/^} mbedtls_stream;$/;"	t	typeref:struct:__anon7f3464670108	file:
mbedtls_stream_close	extern/libgit2/src/streams/mbedtls.c	/^static int mbedtls_stream_close(git_stream *stream)$/;"	f	typeref:typename:int	file:
mbedtls_stream_free	extern/libgit2/src/streams/mbedtls.c	/^static void mbedtls_stream_free(git_stream *stream)$/;"	f	typeref:typename:void	file:
mbedtls_stream_read	extern/libgit2/src/streams/mbedtls.c	/^static ssize_t mbedtls_stream_read(git_stream *stream, void *data, size_t len)$/;"	f	typeref:typename:ssize_t	file:
mbedtls_stream_wrap	extern/libgit2/src/streams/mbedtls.c	/^static int mbedtls_stream_wrap($/;"	f	typeref:typename:int	file:
mbedtls_stream_write	extern/libgit2/src/streams/mbedtls.c	/^static ssize_t mbedtls_stream_write(git_stream *stream, const char *data, size_t len, int flags)$/;"	f	typeref:typename:ssize_t	file:
mcopy	extern/OpenXLSX/tests/c++/Test03_Workbook.cpp	/^auto mcopy = mwbk;$/;"	v	typeref:typename:auto
mdoc	extern/OpenXLSX/tests/c++/Test03_Workbook.cpp	/^XLDocument mdoc;$/;"	v	typeref:typename:XLDocument
measure_split	extern/libgit2/src/xdiff/xdiffi.c	/^static void measure_split(const xdfile_t *xdf, long split,$/;"	f	typeref:typename:void	file:
median3	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename I, typename Pred> I median3(I first, I middle, I last, const Pred& pred)$/;"	f	typeref:typename:I
mem_ctl	extern/libgit2/src/mwindow.c	/^static git_mwindow_ctl mem_ctl;$/;"	v	typeref:typename:git_mwindow_ctl	file:
memcmp	extern/libgit2/deps/pcre/pcre_internal.h	/^#define memcmp(/;"	d
memcpy	extern/libgit2/deps/pcre/pcre_internal.h	/^#define memcpy(/;"	d
memmove	extern/libgit2/deps/pcre/pcre_internal.h	/^#define memmove(/;"	d
memobject	extern/libgit2/src/odb_mempack.c	/^struct memobject {$/;"	s	file:
memory_limit	extern/libgit2/src/pack.h	/^	size_t memory_limit;$/;"	m	struct:__anon7d07ab120108	typeref:typename:size_t
memory_packer_db	extern/libgit2/src/odb_mempack.c	/^struct memory_packer_db {$/;"	s	file:
memory_used	extern/libgit2/src/pack.h	/^	size_t memory_used;$/;"	m	struct:__anon7d07ab120108	typeref:typename:size_t
mempack	extern/libgit2/fuzzers/packfile_fuzzer.c	/^static git_odb_backend *mempack = NULL;$/;"	v	typeref:typename:git_odb_backend *	file:
memset	extern/libgit2/deps/pcre/pcre_internal.h	/^#define memset(/;"	d
memsize	extern/libgit2/src/delta.c	/^	unsigned long memsize;$/;"	m	struct:git_delta_index	typeref:typename:unsigned long	file:
memzero	extern/libgit2/deps/ntlmclient/util.c	/^void memzero(void *data, size_t size)$/;"	f	typeref:typename:void
merge	extern/libgit2/src/tsort.c	/^static void merge(void **dst, const struct tsort_run *stack, ssize_t stack_curr, struct tsort_st/;"	f	typeref:typename:void	file:
merge__dump_index_entries	extern/libgit2/tests/merge/merge_helpers.c	/^void merge__dump_index_entries(git_vector *index_entries)$/;"	f	typeref:typename:void
merge__dump_names	extern/libgit2/tests/merge/merge_helpers.c	/^void merge__dump_names(git_index *index)$/;"	f	typeref:typename:void
merge__dump_reuc	extern/libgit2/tests/merge/merge_helpers.c	/^void merge__dump_reuc(git_index *index)$/;"	f	typeref:typename:void
merge_ancestor_head	extern/libgit2/src/merge.c	/^static int merge_ancestor_head($/;"	f	typeref:typename:int	file:
merge_annotated_commits	extern/libgit2/src/merge.c	/^static int merge_annotated_commits($/;"	f	typeref:typename:int	file:
merge_assignments	extern/libgit2/src/attr_file.c	/^static int merge_assignments(void **old_raw, void *new_raw)$/;"	f	typeref:typename:int	file:
merge_bases	extern/libgit2/src/merge.c	/^static int merge_bases(git_commit_list **out, git_revwalk **walk_out, git_repository *repo, cons/;"	f	typeref:typename:int	file:
merge_bases_many	extern/libgit2/src/merge.c	/^int merge_bases_many(git_commit_list **out, git_revwalk **walk_out, git_repository *repo, size_t/;"	f	typeref:typename:int
merge_branch	extern/libgit2/tests/merge/driver.c	/^static void merge_branch(void)$/;"	f	typeref:typename:void	file:
merge_branch	extern/libgit2/tests/merge/workdir/dirty.c	/^static int merge_branch(void)$/;"	f	typeref:typename:int	file:
merge_branches	extern/libgit2/tests/merge/merge_helpers.c	/^int merge_branches(git_repository *repo,$/;"	f	typeref:typename:int
merge_check_index	extern/libgit2/src/merge.c	/^static int merge_check_index(size_t *conflicts, git_repository *repo, git_index *index_new, git_/;"	f	typeref:typename:int	file:
merge_check_workdir	extern/libgit2/src/merge.c	/^static int merge_check_workdir(size_t *conflicts, git_repository *repo, git_index *index_new, gi/;"	f	typeref:typename:int	file:
merge_commits_from_branches	extern/libgit2/tests/merge/merge_helpers.c	/^int merge_commits_from_branches($/;"	f	typeref:typename:int
merge_conflict_can_resolve_contents	extern/libgit2/src/merge.c	/^static bool merge_conflict_can_resolve_contents($/;"	f	typeref:typename:bool	file:
merge_conflict_invoke_driver	extern/libgit2/src/merge.c	/^static int merge_conflict_invoke_driver($/;"	f	typeref:typename:int	file:
merge_conflict_resolve	extern/libgit2/src/merge.c	/^static int merge_conflict_resolve($/;"	f	typeref:typename:int	file:
merge_conflict_resolve_contents	extern/libgit2/src/merge.c	/^static int merge_conflict_resolve_contents($/;"	f	typeref:typename:int	file:
merge_conflict_resolve_one_removed	extern/libgit2/src/merge.c	/^static int merge_conflict_resolve_one_removed($/;"	f	typeref:typename:int	file:
merge_conflict_resolve_one_renamed	extern/libgit2/src/merge.c	/^static int merge_conflict_resolve_one_renamed($/;"	f	typeref:typename:int	file:
merge_conflict_resolve_trivial	extern/libgit2/src/merge.c	/^static int merge_conflict_resolve_trivial($/;"	f	typeref:typename:int	file:
merge_delta_type_from_index_entries	extern/libgit2/src/merge.c	/^GIT_INLINE(int) merge_delta_type_from_index_entries($/;"	f	typeref:typename:int
merge_diff_any_side_added_or_modified	extern/libgit2/src/merge.c	/^GIT_INLINE(bool) merge_diff_any_side_added_or_modified($/;"	f	typeref:typename:bool
merge_diff_coalesce_rename	extern/libgit2/src/merge.c	/^GIT_INLINE(void) merge_diff_coalesce_rename($/;"	f	typeref:typename:void
merge_diff_detect_df_conflict	extern/libgit2/src/merge.c	/^GIT_INLINE(int) merge_diff_detect_df_conflict($/;"	f	typeref:typename:int
merge_diff_detect_type	extern/libgit2/src/merge.c	/^GIT_INLINE(int) merge_diff_detect_type($/;"	f	typeref:typename:int
merge_diff_df_data	extern/libgit2/src/merge.c	/^struct merge_diff_df_data {$/;"	s	file:
merge_diff_empty	extern/libgit2/src/merge.c	/^static int merge_diff_empty(const git_vector *conflicts, size_t idx, void *p)$/;"	f	typeref:typename:int	file:
merge_diff_find_data	extern/libgit2/src/merge.c	/^struct merge_diff_find_data {$/;"	s	file:
merge_diff_from_index_entries	extern/libgit2/src/merge.c	/^static git_merge_diff *merge_diff_from_index_entries($/;"	f	typeref:typename:git_merge_diff *	file:
merge_diff_list_coalesce_renames	extern/libgit2/src/merge.c	/^static void merge_diff_list_coalesce_renames($/;"	f	typeref:typename:void	file:
merge_diff_list_count_candidates	extern/libgit2/src/merge.c	/^static void merge_diff_list_count_candidates($/;"	f	typeref:typename:void	file:
merge_diff_list_insert_conflict	extern/libgit2/src/merge.c	/^static int merge_diff_list_insert_conflict($/;"	f	typeref:typename:int	file:
merge_diff_list_insert_unmodified	extern/libgit2/src/merge.c	/^static int merge_diff_list_insert_unmodified($/;"	f	typeref:typename:int	file:
merge_diff_mark_rename_conflict	extern/libgit2/src/merge.c	/^static void merge_diff_mark_rename_conflict($/;"	f	typeref:typename:void	file:
merge_diff_mark_similarity_exact	extern/libgit2/src/merge.c	/^static int merge_diff_mark_similarity_exact($/;"	f	typeref:typename:int	file:
merge_diff_mark_similarity_inexact	extern/libgit2/src/merge.c	/^static int merge_diff_mark_similarity_inexact($/;"	f	typeref:typename:int	file:
merge_diff_path	extern/libgit2/src/merge.c	/^GIT_INLINE(const char *) merge_diff_path($/;"	f	typeref:typename:const char *
merge_diff_similarity	extern/libgit2/src/merge.c	/^struct merge_diff_similarity {$/;"	s	file:
merge_differently_filtered_files	extern/libgit2/tests/merge/workdir/dirty.c	/^static int merge_differently_filtered_files(char *files[])$/;"	f	typeref:typename:int	file:
merge_dirty_files	extern/libgit2/tests/merge/workdir/dirty.c	/^static int merge_dirty_files(char *dirty_files[])$/;"	f	typeref:typename:int	file:
merge_driver_binary_apply	extern/libgit2/src/merge_driver.c	/^static int merge_driver_binary_apply($/;"	f	typeref:typename:int	file:
merge_driver_entry_cmp	extern/libgit2/src/merge_driver.c	/^static int merge_driver_entry_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
merge_driver_entry_search	extern/libgit2/src/merge_driver.c	/^static int merge_driver_entry_search(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
merge_driver_lookup_with_wildcard	extern/libgit2/src/merge_driver.c	/^GIT_INLINE(git_merge_driver *) merge_driver_lookup_with_wildcard($/;"	f	typeref:typename:git_merge_driver *
merge_driver_name__binary	extern/libgit2/src/merge_driver.c	/^static const char *merge_driver_name__binary = "binary";$/;"	v	typeref:typename:const char *	file:
merge_driver_name__text	extern/libgit2/src/merge_driver.c	/^static const char *merge_driver_name__text = "text";$/;"	v	typeref:typename:const char *	file:
merge_driver_name__union	extern/libgit2/src/merge_driver.c	/^static const char *merge_driver_name__union = "union";$/;"	v	typeref:typename:const char *	file:
merge_driver_name_for_path	extern/libgit2/src/merge_driver.c	/^static int merge_driver_name_for_path($/;"	f	typeref:typename:int	file:
merge_driver_registry	extern/libgit2/src/merge_driver.c	/^static struct merge_driver_registry merge_driver_registry;$/;"	v	typeref:struct:merge_driver_registry	file:
merge_driver_registry	extern/libgit2/src/merge_driver.c	/^struct merge_driver_registry {$/;"	s	file:
merge_driver_registry_find	extern/libgit2/src/merge_driver.c	/^static int merge_driver_registry_find(size_t *pos, const char *name)$/;"	f	typeref:typename:int	file:
merge_driver_registry_insert	extern/libgit2/src/merge_driver.c	/^static int merge_driver_registry_insert($/;"	f	typeref:typename:int	file:
merge_driver_registry_lookup	extern/libgit2/src/merge_driver.c	/^static git_merge_driver_entry *merge_driver_registry_lookup($/;"	f	typeref:typename:git_merge_driver_entry *	file:
merge_file__binary	extern/libgit2/src/merge_file.c	/^static int merge_file__binary($/;"	f	typeref:typename:int	file:
merge_file__from_inputs	extern/libgit2/src/merge_file.c	/^static int merge_file__from_inputs($/;"	f	typeref:typename:int	file:
merge_file__is_binary	extern/libgit2/src/merge_file.c	/^static bool merge_file__is_binary(const git_merge_file_input *file)$/;"	f	typeref:typename:bool	file:
merge_file__xdiff	extern/libgit2/src/merge_file.c	/^static int merge_file__xdiff($/;"	f	typeref:typename:int	file:
merge_file_normalize_opts	extern/libgit2/src/merge_file.c	/^static void merge_file_normalize_opts($/;"	f	typeref:typename:void	file:
merge_files	extern/libgit2/tests/worktree/merge.c	/^static const char *merge_files[] = {$/;"	v	typeref:typename:const char * []	file:
merge_head	extern/libgit2/src/merge.c	/^	const git_annotated_commit *merge_head;$/;"	m	struct:merge_msg_entry	typeref:typename:const git_annotated_commit *	file:
merge_heads	extern/libgit2/src/merge.c	/^static int merge_heads($/;"	f	typeref:typename:int	file:
merge_index_and_tree	extern/libgit2/src/stash.c	/^static int merge_index_and_tree($/;"	f	typeref:typename:int	file:
merge_index_conflict_data	extern/libgit2/tests/merge/merge_helpers.h	/^struct merge_index_conflict_data {$/;"	s
merge_index_entry	extern/libgit2/tests/merge/merge_helpers.h	/^struct merge_index_entry {$/;"	s
merge_index_insert_reuc	extern/libgit2/src/merge.c	/^static int merge_index_insert_reuc($/;"	f	typeref:typename:int	file:
merge_index_with_status	extern/libgit2/tests/merge/merge_helpers.h	/^struct merge_index_with_status {$/;"	s
merge_indexes	extern/libgit2/src/stash.c	/^static int merge_indexes($/;"	f	typeref:typename:int	file:
merge_msg_entries	extern/libgit2/src/merge.c	/^static int merge_msg_entries($/;"	f	typeref:typename:int	file:
merge_msg_entry	extern/libgit2/src/merge.c	/^struct merge_msg_entry {$/;"	s	file:
merge_msg_entry_written	extern/libgit2/src/merge.c	/^static int merge_msg_entry_written($/;"	f	typeref:typename:int	file:
merge_msg_write_branches	extern/libgit2/src/merge.c	/^static int merge_msg_write_branches($/;"	f	typeref:typename:int	file:
merge_msg_write_entries	extern/libgit2/src/merge.c	/^static int merge_msg_write_entries($/;"	f	typeref:typename:int	file:
merge_msg_write_remotes	extern/libgit2/src/merge.c	/^static int merge_msg_write_remotes($/;"	f	typeref:typename:int	file:
merge_msg_write_tags	extern/libgit2/src/merge.c	/^static int merge_msg_write_tags($/;"	f	typeref:typename:int	file:
merge_msg_write_tracking	extern/libgit2/src/merge.c	/^static int merge_msg_write_tracking($/;"	f	typeref:typename:int	file:
merge_name_entry	extern/libgit2/tests/merge/merge_helpers.h	/^struct merge_name_entry {$/;"	s
merge_normalize_checkout_opts	extern/libgit2/src/merge.c	/^static int merge_normalize_checkout_opts($/;"	f	typeref:typename:int	file:
merge_normalize_opts	extern/libgit2/src/merge.c	/^static int merge_normalize_opts($/;"	f	typeref:typename:int	file:
merge_options	extern/libgit2/examples/merge.c	/^} merge_options;$/;"	t	typeref:struct:__anon29b823750108	file:
merge_options	extern/libgit2/include/git2/rebase.h	/^	git_merge_options merge_options;$/;"	m	struct:__anona97543260108	typeref:typename:git_merge_options
merge_options_init	extern/libgit2/examples/merge.c	/^static void merge_options_init(merge_options *opts)$/;"	f	typeref:typename:void	file:
merge_opts	extern/libgit2/include/git2/cherrypick.h	/^	git_merge_options merge_opts; \/**< Options for the merging *\/$/;"	m	struct:__anon46ced4e80108	typeref:typename:git_merge_options
merge_opts	extern/libgit2/include/git2/revert.h	/^	git_merge_options merge_opts; \/**< Options for the merging *\/$/;"	m	struct:__anond864852c0108	typeref:typename:git_merge_options
merge_preference	extern/libgit2/src/merge.c	/^static int merge_preference(git_merge_preference_t *out, git_repository *repo)$/;"	f	typeref:typename:int	file:
merge_reuc_entry	extern/libgit2/tests/merge/merge_helpers.h	/^struct merge_reuc_entry {$/;"	s
merge_simple_branch	extern/libgit2/tests/merge/workdir/simple.c	/^static void merge_simple_branch(int merge_file_favor, int addl_checkout_strategy)$/;"	f	typeref:typename:void	file:
merge_staged_files	extern/libgit2/tests/merge/workdir/dirty.c	/^static int merge_staged_files(char *staged_files[])$/;"	f	typeref:typename:int	file:
merge_state_cleanup	extern/libgit2/src/merge.c	/^static int merge_state_cleanup(git_repository *repo)$/;"	f	typeref:typename:int	file:
merge_structs	extern/libgit2/tests/core/vector.c	/^static int merge_structs(void **old_raw, void *new)$/;"	f	typeref:typename:int	file:
merge_test_index	extern/libgit2/tests/merge/merge_helpers.c	/^int merge_test_index(git_index *index, const struct merge_index_entry expected[], size_t expecte/;"	f	typeref:typename:int
merge_test_merge_conflicts	extern/libgit2/tests/merge/merge_helpers.c	/^int merge_test_merge_conflicts(git_vector *conflicts, const struct merge_index_conflict_data exp/;"	f	typeref:typename:int
merge_test_names	extern/libgit2/tests/merge/merge_helpers.c	/^int merge_test_names(git_index *index, const struct merge_name_entry expected[], size_t expected/;"	f	typeref:typename:int
merge_test_reuc	extern/libgit2/tests/merge/merge_helpers.c	/^int merge_test_reuc(git_index *index, const struct merge_reuc_entry expected[], size_t expected_/;"	f	typeref:typename:int
merge_test_workdir	extern/libgit2/tests/merge/merge_helpers.c	/^int merge_test_workdir(git_repository *repo, const struct merge_index_entry expected[], size_t e/;"	f	typeref:typename:int
merge_their_label	extern/libgit2/src/merge.c	/^const char *merge_their_label(const char *branchname)$/;"	f	typeref:typename:const char *
merge_tree_index_t	extern/libgit2/src/merge.c	/^} merge_tree_index_t;$/;"	t	typeref:enum:__anon41711a7e0103	file:
merge_trees_from_branches	extern/libgit2/tests/merge/merge_helpers.c	/^int merge_trees_from_branches($/;"	f	typeref:typename:int
merge_trivial	extern/libgit2/tests/merge/trees/trivial.c	/^static int merge_trivial(git_index **index, const char *ours, const char *theirs)$/;"	f	typeref:typename:int	file:
merge_trivial	extern/libgit2/tests/merge/workdir/trivial.c	/^static int merge_trivial(const char *ours, const char *theirs)$/;"	f	typeref:typename:int	file:
merge_trivial_conflict_entrycount	extern/libgit2/tests/merge/trees/trivial.c	/^static int merge_trivial_conflict_entrycount(git_index *index)$/;"	f	typeref:typename:int	file:
merge_trivial_conflict_entrycount	extern/libgit2/tests/merge/workdir/trivial.c	/^static size_t merge_trivial_conflict_entrycount(void)$/;"	f	typeref:typename:size_t	file:
message	extern/libgit2/examples/tag.c	/^	const char *message;$/;"	m	struct:__anon8e82c8010108	typeref:typename:const char *	file:
message	extern/libgit2/include/git2/errors.h	/^	char *message;$/;"	m	struct:__anonb92219d10208	typeref:typename:char *
message	extern/libgit2/src/commit.c	/^	const char *message;$/;"	v	typeref:typename:const char *
message	extern/libgit2/src/notes.h	/^	char *message;$/;"	m	struct:git_note	typeref:typename:char *
message	extern/libgit2/src/tag.h	/^	char *message;$/;"	m	struct:git_tag	typeref:typename:char *
message	extern/libgit2/src/transaction.c	/^	const char *message;$/;"	m	struct:__anon8eca35140208	typeref:typename:const char *	file:
message	lr.hpp	/^  std::string message;$/;"	m	struct:lr::L	typeref:typename:std::string
message_cb_payload	extern/libgit2/src/transports/local.c	/^	void *message_cb_payload;$/;"	m	struct:__anonb65cbde80108	typeref:typename:void *	file:
message_cb_payload	extern/libgit2/src/transports/smart.h	/^	void *message_cb_payload;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:void *
message_encoding	extern/libgit2/src/commit.h	/^	char *message_encoding;$/;"	m	struct:git_commit	typeref:typename:char *
messages	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            std::vector<MessageInfo> messages;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:std::vector<MessageInfo>
messages	extern/libgit2/tests/notes/notes.c	/^static char *messages[] = {$/;"	v	typeref:typename:char * []	file:
method	extern/NamedType/main.cpp	/^        int method(){ return x; }$/;"	f	class:A	typeref:typename:int	file:
method	extern/libgit2/deps/http-parser/http_parser.h	/^  unsigned char method;       \/* requests only *\/$/;"	m	struct:http_parser	typeref:typename:unsigned char
method	extern/libgit2/deps/zlib/deflate.h	/^    Byte  method;        \/* can only be DEFLATED *\/$/;"	m	struct:internal_state	typeref:typename:Byte
method	extern/libgit2/tests/clar_libgit2_trace.c	/^struct method {$/;"	s	file:
method_strings	extern/libgit2/deps/http-parser/http_parser.c	/^static const char *method_strings[] =$/;"	v	typeref:typename:const char * []	file:
metric	extern/libgit2/include/git2/diff.h	/^	git_diff_similarity_metric *metric;$/;"	m	struct:__anon72022fed0f08	typeref:typename:git_diff_similarity_metric *
metric	extern/libgit2/include/git2/merge.h	/^	git_diff_similarity_metric *metric;$/;"	m	struct:__anon5e9a43240708	typeref:typename:git_diff_similarity_metric *
might_be_empty	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL might_be_empty;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
min	extern/libgit2/deps/pcre/pcre_exec.c	/^#define min /;"	d	file:
min	extern/libgit2/src/util.h	/^# define min(/;"	d
min_element	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename I, typename Pred> I min_element(I begin, I end, const Pred& pred)$/;"	f	typeref:typename:I
min_hi	extern/libgit2/src/xdiff/xdiffi.c	/^	int min_lo, min_hi;$/;"	m	struct:s_xdpsplit	typeref:typename:int	file:
min_length	extern/libgit2/src/oid.c	/^	int min_length, full;$/;"	m	struct:git_oid_shorten	typeref:typename:int	file:
min_line	extern/libgit2/include/git2/blame.h	/^	size_t min_line;$/;"	m	struct:git_blame_options	typeref:typename:size_t
min_lo	extern/libgit2/src/xdiff/xdiffi.c	/^	int min_lo, min_hi;$/;"	m	struct:s_xdpsplit	typeref:typename:int	file:
min_match_characters	extern/libgit2/include/git2/blame.h	/^	uint16_t min_match_characters;$/;"	m	struct:git_blame_options	typeref:typename:uint16_t
min_parents	extern/libgit2/examples/log.c	/^	int min_parents, max_parents;$/;"	m	struct:log_options	typeref:typename:int	file:
minimal_entry_size	extern/libgit2/src/index.c	/^#define minimal_entry_size /;"	d	file:
miniz_def_alloc_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void* miniz_def_alloc_func(void* opaque, size_t items, size_t size) {$/;"	f	typeref:typename:void *
miniz_def_free_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void miniz_def_free_func(void* opaque, void* address) {$/;"	f	typeref:typename:void
miniz_def_realloc_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void* miniz_def_realloc_func(void* opaque, void* address, size_t items, size_t size) {$/;"	f	typeref:typename:void *
minlength	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 minlength;          \/* Minimum subject length *\/$/;"	m	struct:pcre_study_data	typeref:typename:pcre_uint32
minor	extern/libgit2/deps/ntlmclient/ntlm.h	/^	uint8_t minor;$/;"	m	struct:__anon8624cbbb0308	typeref:typename:uint8_t
mins	extern/libgit2/src/hashsig.c	/^	hashsig_heap mins;$/;"	m	struct:git_hashsig	typeref:typename:hashsig_heap	file:
missing_trailer_pack	extern/libgit2/tests/pack/indexer.c	/^static const unsigned char missing_trailer_pack[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
missing_trailer_pack_len	extern/libgit2/tests/pack/indexer.c	/^static const unsigned int missing_trailer_pack_len = 12;$/;"	v	typeref:typename:const unsigned int	file:
mkdir	extern/libgit2/tests/clar.c	/^#		define mkdir(/;"	d	file:
mkdir_calls	extern/libgit2/include/git2/checkout.h	/^	size_t mkdir_calls;$/;"	m	struct:__anon4996472a0308	typeref:typename:size_t
mkdir_calls	extern/libgit2/src/futils.h	/^	size_t mkdir_calls;$/;"	m	struct:git_futils_mkdir_perfdata	typeref:typename:size_t
mkdir_canonicalize	extern/libgit2/src/futils.c	/^GIT_INLINE(int) mkdir_canonicalize($/;"	f	typeref:typename:int
mkdir_flags	extern/libgit2/src/futils.c	/^	uint32_t mkdir_flags;$/;"	m	struct:__anonce3edc250208	typeref:typename:uint32_t	file:
mkdir_map	extern/libgit2/src/checkout.c	/^	git_strmap *mkdir_map;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_strmap *	file:
mkdir_parent	extern/libgit2/src/repository.c	/^static int mkdir_parent(git_buf *buf, uint32_t mode, bool skip2)$/;"	f	typeref:typename:int	file:
mkdir_validate_dir	extern/libgit2/src/futils.c	/^GIT_INLINE(int) mkdir_validate_dir($/;"	f	typeref:typename:int
mkdir_validate_mode	extern/libgit2/src/futils.c	/^GIT_INLINE(int) mkdir_validate_mode($/;"	f	typeref:typename:int
mkpath2file	extern/libgit2/src/checkout.c	/^static int mkpath2file($/;"	f	typeref:typename:int	file:
mmap_calls	extern/libgit2/src/mwindow.h	/^	unsigned int mmap_calls;$/;"	m	struct:git_mwindow_ctl	typeref:typename:unsigned int
mmbuffer_t	extern/libgit2/src/xdiff/xdiff.h	/^} mmbuffer_t;$/;"	t	typeref:struct:s_mmbuffer
mmfile_t	extern/libgit2/src/xdiff/xdiff.h	/^} mmfile_t;$/;"	t	typeref:struct:s_mmfile
mode	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int mode;$/;"	m	struct:compiler_common	typeref:typename:int	file:
mode	extern/libgit2/deps/zlib/gzguts.h	/^    int mode;               \/* see gzip modes above *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:int
mode	extern/libgit2/deps/zlib/inflate.h	/^    inflate_mode mode;          \/* current inflate mode *\/$/;"	m	struct:inflate_state	typeref:typename:inflate_mode
mode	extern/libgit2/include/git2/diff.h	/^	uint16_t    mode;$/;"	m	struct:__anon72022fed0408	typeref:typename:uint16_t
mode	extern/libgit2/include/git2/index.h	/^	uint32_t mode;$/;"	m	struct:git_index_entry	typeref:typename:uint32_t
mode	extern/libgit2/include/git2/merge.h	/^	unsigned int mode;$/;"	m	struct:__anon5e9a43240108	typeref:typename:unsigned int
mode	extern/libgit2/include/git2/merge.h	/^	unsigned int mode;$/;"	m	struct:__anon5e9a43240608	typeref:typename:unsigned int
mode	extern/libgit2/include/git2/odb_backend.h	/^	unsigned int mode;$/;"	m	struct:git_odb_stream	typeref:typename:unsigned int
mode	extern/libgit2/include/git2/repository.h	/^	uint32_t    mode;$/;"	m	struct:__anon8a61cad40408	typeref:typename:uint32_t
mode	extern/libgit2/include/git2/sys/index.h	/^	uint32_t mode[3];$/;"	m	struct:git_index_reuc_entry	typeref:typename:uint32_t[3]
mode	extern/libgit2/src/filter.c	/^	git_filter_mode_t mode;$/;"	m	struct:git_filter_source	typeref:typename:git_filter_mode_t	file:
mode	extern/libgit2/src/index.c	/^	uint32_t mode;$/;"	m	struct:entry_long	typeref:typename:uint32_t	file:
mode	extern/libgit2/src/index.c	/^	uint32_t mode;$/;"	m	struct:entry_short	typeref:typename:uint32_t	file:
mode	extern/libgit2/src/indexer.c	/^	unsigned int mode;$/;"	m	struct:git_indexer	typeref:typename:unsigned int	file:
mode	extern/libgit2/src/repo_template.h	/^	mode_t mode;$/;"	m	struct:__anon60a8fbc40108	typeref:typename:mode_t
mode	extern/libgit2/src/xdiff/xmerge.c	/^	int mode;$/;"	m	struct:s_xdmerge	typeref:typename:int	file:
mode	extern/libgit2/tests/checkout/conflict.c	/^	uint16_t mode;$/;"	m	struct:checkout_index_entry	typeref:typename:uint16_t	file:
mode	extern/libgit2/tests/filter/stream.c	/^	git_filter_mode_t mode;$/;"	m	struct:compress_stream	typeref:typename:git_filter_mode_t	file:
mode	extern/libgit2/tests/merge/merge_helpers.h	/^	uint16_t mode;$/;"	m	struct:merge_index_entry	typeref:typename:uint16_t
mode_t	extern/libgit2/src/win32/msvc-compat.h	/^typedef unsigned short mode_t;$/;"	t	typeref:typename:unsigned short
modify_index_and_checkout_tree	extern/libgit2/tests/checkout/tree.c	/^static void modify_index_and_checkout_tree(git_checkout_options *opts)$/;"	f	typeref:typename:void	file:
modify_index_ondisk	extern/libgit2/tests/checkout/tree.c	/^static void modify_index_ondisk(void)$/;"	f	typeref:typename:void	file:
mods	extern/libgit2/src/submodule.c	/^	git_config *mods;$/;"	m	struct:__anon952effbe0408	typeref:typename:git_config *	file:
month_names	extern/libgit2/src/date.c	/^static const char *month_names[] = {$/;"	v	typeref:typename:const char * []	file:
moptions	extern/libgit2/deps/pcre/pcre_internal.h	/^  int   moptions;                   \/* Match options *\/$/;"	m	struct:dfa_match_data	typeref:typename:int
moreStuff	extern/libgit2/tests/resources/userdiff/after/file.php	/^	protected $moreStuff;$/;"	v	class:Faker\\UniqueGenerator
moreStuff	extern/libgit2/tests/resources/userdiff/files/file.php	/^	protected $moreStuff;$/;"	v	class:Faker\\UniqueGenerator
mpl_	extern/OpenXLSX/tests/catch/catch.hpp	/^namespace mpl_{$/;"	n
msg	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    char* msg;                       \/* error msg (unused) *\/$/;"	m	struct:mz_stream_s	typeref:typename:char *
msg	extern/libgit2/deps/zlib/gzguts.h	/^    char *msg;              \/* error message *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:char *
msg	extern/libgit2/deps/zlib/zlib.h	/^    z_const char *msg;  \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s	typeref:typename:z_const char *
msg	extern/libgit2/src/push.h	/^	char *msg;$/;"	m	struct:push_status	typeref:typename:char *
msg	extern/libgit2/src/reflog.h	/^	char *msg;$/;"	m	struct:git_reflog_entry	typeref:typename:char *
msg	extern/libgit2/src/transports/smart.h	/^	char *msg;$/;"	m	struct:__anoncc6f59690908	typeref:typename:char *
msg	extern/libgit2/tests/online/push_util.h	/^	char *msg;$/;"	m	struct:__anon56a1c92f0408	typeref:typename:char *
msg_entry_is_branch	extern/libgit2/src/merge.c	/^static int msg_entry_is_branch($/;"	f	typeref:typename:int	file:
msg_entry_is_oid	extern/libgit2/src/merge.c	/^static int msg_entry_is_oid($/;"	f	typeref:typename:int	file:
msg_entry_is_remote	extern/libgit2/src/merge.c	/^static int msg_entry_is_remote($/;"	f	typeref:typename:int	file:
msg_entry_is_tag	extern/libgit2/src/merge.c	/^static int msg_entry_is_tag($/;"	f	typeref:typename:int	file:
msg_entry_is_tracking	extern/libgit2/src/merge.c	/^static int msg_entry_is_tracking($/;"	f	typeref:typename:int	file:
mstart	extern/libgit2/deps/pcre/pcre_exec.c	/^#define mstart /;"	d	file:
mtime	extern/libgit2/include/git2/index.h	/^	git_index_time mtime;$/;"	m	struct:git_index_entry	typeref:typename:git_index_time
mtime	extern/libgit2/src/futils.h	/^	struct timespec mtime;$/;"	m	struct:__anonce3edc2a0408	typeref:struct:timespec
mtime	extern/libgit2/src/index.c	/^	struct entry_time mtime;$/;"	m	struct:entry_long	typeref:struct:entry_time	file:
mtime	extern/libgit2/src/index.c	/^	struct entry_time mtime;$/;"	m	struct:entry_short	typeref:struct:entry_time	file:
mtime	extern/libgit2/src/pack.h	/^	git_time_t mtime;$/;"	m	struct:git_pack_file	typeref:typename:git_time_t
mtime	extern/libgit2/tests/index/tests.c	/^   git_time_t mtime;$/;"	m	struct:test_entry	typeref:typename:git_time_t	file:
multiValueArgs	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^    set(multiValueArgs LIBS PRIVATE_LIBS REQUIRES CFLAGS)$/;"	v	function:pkg_build_config
multi_ack	extern/libgit2/src/transports/smart.h	/^		multi_ack: 1,$/;"	m	struct:transport_smart_caps	typeref:typename:int:1
multi_ack_detailed	extern/libgit2/src/transports/smart.h	/^		multi_ack_detailed: 1,$/;"	m	struct:transport_smart_caps	typeref:typename:int:1
multivar_cb	extern/libgit2/tests/config/write.c	/^static int multivar_cb(const git_config_entry *entry, void *data)$/;"	f	typeref:typename:int	file:
multivar_iter	extern/libgit2/src/config.c	/^} multivar_iter;$/;"	t	typeref:struct:__anon2d64db840508	file:
multivar_iter_free	extern/libgit2/src/config.c	/^void multivar_iter_free(git_config_iterator *_iter)$/;"	f	typeref:typename:void
multivar_iter_next	extern/libgit2/src/config.c	/^static int multivar_iter_next(git_config_entry **entry, git_config_iterator *_iter)$/;"	f	typeref:typename:int	file:
mutex	extern/libgit2/src/pack-objects.c	/^	git_mutex mutex;$/;"	m	struct:thread_params	typeref:typename:git_mutex	file:
mv_read_cb	extern/libgit2/tests/config/multivar.c	/^static int mv_read_cb(const git_config_entry *entry, void *data)$/;"	f	typeref:typename:int	file:
mw	extern/libgit2/src/pack.h	/^	git_mwindow *mw;$/;"	m	struct:git_packfile_stream	typeref:typename:git_mwindow *
mwbk	extern/OpenXLSX/tests/c++/Test03_Workbook.cpp	/^auto mwbk = mdoc.Workbook();$/;"	v	typeref:typename:auto
mwf	extern/libgit2/src/pack.h	/^	git_mwindow_file mwf;$/;"	m	struct:git_pack_file	typeref:typename:git_mwindow_file
mxcost	extern/libgit2/src/xdiff/xdiffi.h	/^	long mxcost;$/;"	m	struct:s_xdalgoenv	typeref:typename:long
myInt	extern/NamedType/main.cpp	/^    MyInt myInt(42);$/;"	v	typeref:typename:MyInt
my_emit	extern/libgit2/src/blame_git.c	/^static int my_emit($/;"	f	typeref:typename:int	file:
my_output	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static void my_output(const char *buf)$/;"	f	typeref:typename:void	file:
my_struct	extern/libgit2/tests/core/vector.c	/^} my_struct;$/;"	t	typeref:struct:__anon91269fe40108	file:
mz_adler32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_ulong mz_adler32(mz_ulong adler, const unsigned char* ptr, size_t buf_len) {$/;"	f	typeref:typename:mz_ulong
mz_alloc_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef void* (* mz_alloc_func)(void* opaque, size_t items, size_t size);$/;"	t	typeref:typename:void * (*)(void * opaque,size_t items,size_t size)
mz_bitmasks	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static const mz_uint mz_bitmasks[17] = {0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F, 0x003F, /;"	v	typeref:typename:const mz_uint[17]
mz_bool	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef int mz_bool;$/;"	t	typeref:typename:int
mz_compress	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_compress(unsigned char* pDest, mz_ulong* pDest_len, const unsigned char* pSource, /;"	f	typeref:typename:int
mz_compress2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_compress2(unsigned char* pDest, mz_ulong* pDest_len, const unsigned char* pSource,/;"	f	typeref:typename:int
mz_compressBound	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_ulong mz_compressBound(mz_ulong source_len) {$/;"	f	typeref:typename:mz_ulong
mz_crc32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_ulong mz_crc32(mz_ulong crc, const mz_uint8* ptr, size_t buf_len) {$/;"	f	typeref:typename:mz_ulong
mz_deflate	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_deflate(mz_streamp pStream, int flush) {$/;"	f	typeref:typename:int
mz_deflateBound	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_ulong mz_deflateBound(mz_streamp pStream, mz_ulong source_len) {$/;"	f	typeref:typename:mz_ulong
mz_deflateEnd	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_deflateEnd(mz_streamp pStream) {$/;"	f	typeref:typename:int
mz_deflateInit	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_deflateInit(mz_streamp pStream, int level) {$/;"	f	typeref:typename:int
mz_deflateInit2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_deflateInit2(mz_streamp pStream, int level, int method, int window_bits, int mem_l/;"	f	typeref:typename:int
mz_deflateReset	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_deflateReset(mz_streamp pStream) {$/;"	f	typeref:typename:int
mz_dummy_time_t	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} mz_dummy_time_t;$/;"	t	typeref:struct:mz_dummy_time_t_tag
mz_dummy_time_t_tag	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef struct mz_dummy_time_t_tag$/;"	s
mz_error	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline const char* mz_error(int err) {$/;"	f	typeref:typename:const char *
mz_file_needs_keepalive	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef mz_bool (* mz_file_needs_keepalive)(void* pOpaque);$/;"	t	typeref:typename:mz_bool (*)(void * pOpaque)
mz_file_read_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef size_t  (* mz_file_read_func)(void* pOpaque, mz_uint64 file_ofs, void* pBuf, size_t n);$/;"	t	typeref:typename:size_t (*)(void * pOpaque,mz_uint64 file_ofs,void * pBuf,size_t n)
mz_file_write_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef size_t  (* mz_file_write_func)(void* pOpaque, mz_uint64 file_ofs, const void* pBuf, size/;"	t	typeref:typename:size_t (*)(void * pOpaque,mz_uint64 file_ofs,const void * pBuf,size_t n)
mz_free	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void mz_free(void* p) {$/;"	f	typeref:typename:void
mz_free_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef void (* mz_free_func)(void* opaque, void* address);$/;"	t	typeref:typename:void (*)(void * opaque,void * address)
mz_inflate	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_inflate(mz_streamp pStream, int flush) {$/;"	f	typeref:typename:int
mz_inflateEnd	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_inflateEnd(mz_streamp pStream) {$/;"	f	typeref:typename:int
mz_inflateInit	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_inflateInit(mz_streamp pStream) {$/;"	f	typeref:typename:int
mz_inflateInit2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_inflateInit2(mz_streamp pStream, int window_bits) {$/;"	f	typeref:typename:int
mz_int16	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef signed short mz_int16;$/;"	t	typeref:typename:signed short
mz_int64	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef int64_t mz_int64;$/;"	t	typeref:typename:int64_t
mz_realloc_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef void* (* mz_realloc_func)(void* opaque, void* address, size_t items, size_t size);$/;"	t	typeref:typename:void * (*)(void * opaque,void * address,size_t items,size_t size)
mz_stream	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} mz_stream;$/;"	t	typeref:struct:mz_stream_s
mz_stream_s	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef struct mz_stream_s$/;"	s
mz_streamp	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef mz_stream* mz_streamp;$/;"	t	typeref:typename:mz_stream *
mz_uint	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef unsigned int mz_uint;$/;"	t	typeref:typename:unsigned int
mz_uint16	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef unsigned short mz_uint16;$/;"	t	typeref:typename:unsigned short
mz_uint32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef unsigned int mz_uint32;$/;"	t	typeref:typename:unsigned int
mz_uint64	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef uint64_t mz_uint64;$/;"	t	typeref:typename:uint64_t
mz_uint8	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef unsigned char mz_uint8;$/;"	t	typeref:typename:unsigned char
mz_ulong	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef unsigned long mz_ulong;$/;"	t	typeref:typename:unsigned long
mz_uncompress	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_uncompress(unsigned char* pDest, mz_ulong* pDest_len, const unsigned char* pSource/;"	f	typeref:typename:int
mz_validate_uint16	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef unsigned char mz_validate_uint16[sizeof(mz_uint16) == 2 ? 1 : -1];$/;"	t	typeref:typename:unsigned char[sizeof (mz_uint16)==2?1:-1]
mz_validate_uint32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef unsigned char mz_validate_uint32[sizeof(mz_uint32) == 4 ? 1 : -1];$/;"	t	typeref:typename:unsigned char[sizeof (mz_uint32)==4?1:-1]
mz_validate_uint64	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef unsigned char mz_validate_uint64[sizeof(mz_uint64) == 8 ? 1 : -1];$/;"	t	typeref:typename:unsigned char[sizeof (mz_uint64)==8?1:-1]
mz_version	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline const char* mz_version(void) {$/;"	f	typeref:typename:const char *
mz_write_le16	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE void mz_write_le16(mz_uint8* p, mz_uint16 v) {$/;"	f	typeref:typename:MZ_FORCEINLINE void
mz_write_le32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE void mz_write_le32(mz_uint8* p, mz_uint32 v) {$/;"	f	typeref:typename:MZ_FORCEINLINE void
mz_write_le64	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE void mz_write_le64(mz_uint8* p, mz_uint64 v) {$/;"	f	typeref:typename:MZ_FORCEINLINE void
mz_zip_add_mem_to_archive_file_in_place	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_add_mem_to_archive_file_in_place(const char* pZip_filename,$/;"	f	typeref:typename:mz_bool
mz_zip_add_mem_to_archive_file_in_place_v2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_add_mem_to_archive_file_in_place_v2(const char* pZip_filename,$/;"	f	typeref:typename:mz_bool
mz_zip_archive	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} mz_zip_archive;$/;"	t	typeref:struct:__anon09af45a71708
mz_zip_archive_file_stat	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} mz_zip_archive_file_stat;$/;"	t	typeref:struct:__anon09af45a71208
mz_zip_array	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} mz_zip_array;$/;"	t	typeref:struct:__anon09af45a71f08
mz_zip_array_clear	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE void mz_zip_array_clear(mz_zip_archive* pZip, mz_zip_array* pArray) {$/;"	f	typeref:typename:MZ_FORCEINLINE void
mz_zip_array_ensure_capacity	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^mz_zip_array_ensure_capacity(mz_zip_archive* pZip, mz_zip_array* pArray, size_t min_new_capacity/;"	f	typeref:typename:mz_bool
mz_zip_array_ensure_room	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE mz_bool mz_zip_array_ensure_room(mz_zip_archive* pZip, mz_zip_array* pArra/;"	f	typeref:typename:MZ_FORCEINLINE mz_bool
mz_zip_array_init	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE void mz_zip_array_init(mz_zip_array* pArray, mz_uint32 element_size) {$/;"	f	typeref:typename:MZ_FORCEINLINE void
mz_zip_array_push_back	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^mz_zip_array_push_back(mz_zip_archive* pZip, mz_zip_array* pArray, const void* pElements, size_t/;"	f	typeref:typename:MZ_FORCEINLINE mz_bool
mz_zip_array_range_check	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE mz_uint mz_zip_array_range_check(const mz_zip_array* pArray, mz_uint index/;"	f	typeref:typename:MZ_FORCEINLINE mz_uint
mz_zip_array_reserve	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^mz_zip_array_reserve(mz_zip_archive* pZip, mz_zip_array* pArray, size_t new_capacity, mz_uint gr/;"	f	typeref:typename:MZ_FORCEINLINE mz_bool
mz_zip_array_resize	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE mz_bool mz_zip_array_resize(mz_zip_archive* pZip, mz_zip_array* pArray, si/;"	f	typeref:typename:MZ_FORCEINLINE mz_bool
mz_zip_clear_last_error	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_zip_error mz_zip_clear_last_error(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_zip_error
mz_zip_compute_crc32_callback	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static size_t mz_zip_compute_crc32_callback(void* pOpaque, mz_uint64 file_ofs, const void* pBuf,/;"	f	typeref:typename:size_t
mz_zip_dos_to_time_t	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_TIME_T mz_zip_dos_to_time_t(int dos_time, int dos_date) {$/;"	f	typeref:typename:MZ_TIME_T
mz_zip_end	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_end(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_bool
mz_zip_error	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} mz_zip_error;$/;"	t	typeref:enum:__anon09af45a71603
mz_zip_extract_archive_file_to_heap	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^mz_zip_extract_archive_file_to_heap(const char* pZip_filename, const char* pArchive_name, size_t/;"	f	typeref:typename:void *
mz_zip_extract_archive_file_to_heap_v2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void* mz_zip_extract_archive_file_to_heap_v2(const char* pZip_filename,$/;"	f	typeref:typename:void *
mz_zip_file_read_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static size_t mz_zip_file_read_func(void* pOpaque, mz_uint64 file_ofs, void* pBuf, size_t n) {$/;"	f	typeref:typename:size_t
mz_zip_file_stat_internal	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_file_stat_internal(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_file_write_callback	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static size_t mz_zip_file_write_callback(void* pOpaque, mz_uint64 ofs, const void* pBuf, size_t /;"	f	typeref:typename:size_t
mz_zip_file_write_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static size_t mz_zip_file_write_func(void* pOpaque, mz_uint64 file_ofs, const void* pBuf, size_t/;"	f	typeref:typename:size_t
mz_zip_filename_compare	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE int mz_zip_filename_compare(const mz_zip_array* pCentral_dir_array,$/;"	f	typeref:typename:MZ_FORCEINLINE int
mz_zip_flags	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} mz_zip_flags;$/;"	t	typeref:enum:__anon09af45a71403
mz_zip_get_archive_file_start_offset	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_uint64 mz_zip_get_archive_file_start_offset(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_uint64
mz_zip_get_archive_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_uint64 mz_zip_get_archive_size(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_uint64
mz_zip_get_cdh	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE const mz_uint8* mz_zip_get_cdh(mz_zip_archive* pZip, mz_uint file_index) {$/;"	f	typeref:typename:MZ_FORCEINLINE const mz_uint8 *
mz_zip_get_central_dir_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline size_t mz_zip_get_central_dir_size(mz_zip_archive* pZip) {$/;"	f	typeref:typename:size_t
mz_zip_get_cfile	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline MZ_FILE* mz_zip_get_cfile(mz_zip_archive* pZip) {$/;"	f	typeref:typename:MZ_FILE *
mz_zip_get_error_string	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline const char* mz_zip_get_error_string(mz_zip_error mz_err) {$/;"	f	typeref:typename:const char *
mz_zip_get_file_modified_time	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_get_file_modified_time(const char* pFilename, MZ_TIME_T* pTime) {$/;"	f	typeref:typename:mz_bool
mz_zip_get_last_error	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_zip_error mz_zip_get_last_error(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_zip_error
mz_zip_get_mode	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_zip_mode mz_zip_get_mode(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_zip_mode
mz_zip_get_type	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_zip_type mz_zip_get_type(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_zip_type
mz_zip_heap_write_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static size_t mz_zip_heap_write_func(void* pOpaque, mz_uint64 file_ofs, const void* pBuf, size_t/;"	f	typeref:typename:size_t
mz_zip_internal_state	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef struct mz_zip_internal_state_tag mz_zip_internal_state;$/;"	t	typeref:struct:mz_zip_internal_state_tag
mz_zip_internal_state_tag	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^struct mz_zip_internal_state_tag$/;"	s
mz_zip_is_zip64	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_is_zip64(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_bool
mz_zip_locate_file_binary_search	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_locate_file_binary_search(mz_zip_archive* pZip, const char* pFilename, mz_/;"	f	typeref:typename:mz_bool
mz_zip_mem_read_func	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static size_t mz_zip_mem_read_func(void* pOpaque, mz_uint64 file_ofs, void* pBuf, size_t n) {$/;"	f	typeref:typename:size_t
mz_zip_mode	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} mz_zip_mode;$/;"	t	typeref:enum:__anon09af45a71303
mz_zip_peek_last_error	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_zip_error mz_zip_peek_last_error(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_zip_error
mz_zip_read_archive_data	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline size_t mz_zip_read_archive_data(mz_zip_archive* pZip, mz_uint64 file_ofs, void* pBuf, siz/;"	f	typeref:typename:size_t
mz_zip_reader_end	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_end(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_bool
mz_zip_reader_end_internal	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_reader_end_internal(mz_zip_archive* pZip, mz_bool set_last_error) {$/;"	f	typeref:typename:mz_bool
mz_zip_reader_extract_file_iter_new	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^mz_zip_reader_extract_file_iter_new(mz_zip_archive* pZip, const char* pFilename, mz_uint flags) /;"	f	typeref:typename:mz_zip_reader_extract_iter_state *
mz_zip_reader_extract_file_to_callback	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_extract_file_to_callback(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_reader_extract_file_to_cfile	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^mz_zip_reader_extract_file_to_cfile(mz_zip_archive* pZip, const char* pArchive_filename, MZ_FILE/;"	f	typeref:typename:mz_bool
mz_zip_reader_extract_file_to_file	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_extract_file_to_file(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_reader_extract_file_to_heap	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void* mz_zip_reader_extract_file_to_heap(mz_zip_archive* pZip, const char* pFilename, siz/;"	f	typeref:typename:void *
mz_zip_reader_extract_file_to_mem	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^mz_zip_reader_extract_file_to_mem(mz_zip_archive* pZip, const char* pFilename, void* pBuf, size_/;"	f	typeref:typename:mz_bool
mz_zip_reader_extract_file_to_mem_no_alloc	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_extract_file_to_mem_no_alloc(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_reader_extract_iter_free	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_extract_iter_free(mz_zip_reader_extract_iter_state* pState) {$/;"	f	typeref:typename:mz_bool
mz_zip_reader_extract_iter_new	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_zip_reader_extract_iter_state* mz_zip_reader_extract_iter_new(mz_zip_archive* pZip, mz/;"	f	typeref:typename:mz_zip_reader_extract_iter_state *
mz_zip_reader_extract_iter_read	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline size_t mz_zip_reader_extract_iter_read(mz_zip_reader_extract_iter_state* pState, void* pv/;"	f	typeref:typename:size_t
mz_zip_reader_extract_iter_state	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} mz_zip_reader_extract_iter_state;$/;"	t	typeref:struct:__anon09af45a71808
mz_zip_reader_extract_to_callback	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_extract_to_callback(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_reader_extract_to_cfile	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_extract_to_cfile(mz_zip_archive* pZip, mz_uint file_index, MZ_FILE*/;"	f	typeref:typename:mz_bool
mz_zip_reader_extract_to_file	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_extract_to_file(mz_zip_archive* pZip, mz_uint file_index, const cha/;"	f	typeref:typename:mz_bool
mz_zip_reader_extract_to_heap	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void* mz_zip_reader_extract_to_heap(mz_zip_archive* pZip, mz_uint file_index, size_t* pSi/;"	f	typeref:typename:void *
mz_zip_reader_extract_to_mem	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^mz_zip_reader_extract_to_mem(mz_zip_archive* pZip, mz_uint file_index, void* pBuf, size_t buf_si/;"	f	typeref:typename:mz_bool
mz_zip_reader_extract_to_mem_no_alloc	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_extract_to_mem_no_alloc(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_reader_file_stat	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_file_stat(mz_zip_archive* pZip, mz_uint file_index, mz_zip_archive_/;"	f	typeref:typename:mz_bool
mz_zip_reader_filename_less	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE mz_bool mz_zip_reader_filename_less(const mz_zip_array* pCentral_dir_array/;"	f	typeref:typename:MZ_FORCEINLINE mz_bool
mz_zip_reader_get_filename	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_uint mz_zip_reader_get_filename(mz_zip_archive* pZip, mz_uint file_index, char* pFilen/;"	f	typeref:typename:mz_uint
mz_zip_reader_get_num_files	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_uint mz_zip_reader_get_num_files(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_uint
mz_zip_reader_init	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_init(mz_zip_archive* pZip, mz_uint64 size, mz_uint flags) {$/;"	f	typeref:typename:mz_bool
mz_zip_reader_init_cfile	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_init_cfile(mz_zip_archive* pZip, MZ_FILE* pFile, mz_uint64 archive_/;"	f	typeref:typename:mz_bool
mz_zip_reader_init_file	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_init_file(mz_zip_archive* pZip, const char* pFilename, mz_uint32 fl/;"	f	typeref:typename:mz_bool
mz_zip_reader_init_file_v2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_init_file_v2(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_reader_init_internal	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_reader_init_internal(mz_zip_archive* pZip, mz_uint flags) {$/;"	f	typeref:typename:mz_bool
mz_zip_reader_init_mem	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_init_mem(mz_zip_archive* pZip, const void* pMem, size_t size, mz_ui/;"	f	typeref:typename:mz_bool
mz_zip_reader_is_file_a_directory	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_is_file_a_directory(mz_zip_archive* pZip, mz_uint file_index) {$/;"	f	typeref:typename:mz_bool
mz_zip_reader_is_file_encrypted	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_is_file_encrypted(mz_zip_archive* pZip, mz_uint file_index) {$/;"	f	typeref:typename:mz_bool
mz_zip_reader_is_file_supported	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_reader_is_file_supported(mz_zip_archive* pZip, mz_uint file_index) {$/;"	f	typeref:typename:mz_bool
mz_zip_reader_locate_file	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int mz_zip_reader_locate_file(mz_zip_archive* pZip, const char* pName, const char* pComme/;"	f	typeref:typename:int
mz_zip_reader_locate_file_v2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^mz_zip_reader_locate_file_v2(mz_zip_archive* pZip, const char* pName, const char* pComment, mz_u/;"	f	typeref:typename:mz_bool
mz_zip_reader_locate_header_sig	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^mz_zip_reader_locate_header_sig(mz_zip_archive* pZip, mz_uint32 record_sig, mz_uint32 record_siz/;"	f	typeref:typename:mz_bool
mz_zip_reader_read_central_dir	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_reader_read_central_dir(mz_zip_archive* pZip, mz_uint flags) {$/;"	f	typeref:typename:mz_bool
mz_zip_reader_sort_central_dir_offsets_by_filename	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static void mz_zip_reader_sort_central_dir_offsets_by_filename(mz_zip_archive* pZip) {$/;"	f	typeref:typename:void
mz_zip_set_error	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE mz_bool mz_zip_set_error(mz_zip_archive* pZip, mz_zip_error err_num) {$/;"	f	typeref:typename:MZ_FORCEINLINE mz_bool
mz_zip_set_file_times	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_set_file_times(const char* pFilename, MZ_TIME_T access_time, MZ_TIME_T mod/;"	f	typeref:typename:mz_bool
mz_zip_set_last_error	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_zip_error mz_zip_set_last_error(mz_zip_archive* pZip, mz_zip_error err_num) {$/;"	f	typeref:typename:mz_zip_error
mz_zip_string_equal	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE mz_bool mz_zip_string_equal(const char* pA, const char* pB, mz_uint len, m/;"	f	typeref:typename:MZ_FORCEINLINE mz_bool
mz_zip_time_t_to_dos_time	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static void mz_zip_time_t_to_dos_time(MZ_TIME_T time, mz_uint16* pDOS_time, mz_uint16* pDOS_date/;"	f	typeref:typename:void
mz_zip_type	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} mz_zip_type;$/;"	t	typeref:enum:__anon09af45a71503
mz_zip_validate_archive	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_validate_archive(mz_zip_archive* pZip, mz_uint flags) {$/;"	f	typeref:typename:mz_bool
mz_zip_validate_file	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_validate_file(mz_zip_archive* pZip, mz_uint file_index, mz_uint flags) {$/;"	f	typeref:typename:mz_bool
mz_zip_validate_file_archive	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_validate_file_archive(const char* pFilename, mz_uint flags, mz_zip_error* /;"	f	typeref:typename:mz_bool
mz_zip_validate_mem_archive	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_validate_mem_archive(const void* pMem, size_t size, mz_uint flags, mz_zip_/;"	f	typeref:typename:mz_bool
mz_zip_writer_add_cfile	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_add_cfile(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_writer_add_file	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_add_file(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_writer_add_from_zip_reader	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_add_from_zip_reader(mz_zip_archive* pZip, mz_zip_archive* pSource_z/;"	f	typeref:typename:mz_bool
mz_zip_writer_add_mem	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_add_mem(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_writer_add_mem_ex	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_add_mem_ex(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_writer_add_mem_ex_v2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_add_mem_ex_v2(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_writer_add_put_buf_callback	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_writer_add_put_buf_callback(const void* pBuf, int len, void* pUser) {$/;"	f	typeref:typename:mz_bool
mz_zip_writer_add_state	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} mz_zip_writer_add_state;$/;"	t	typeref:struct:__anon09af45a72008
mz_zip_writer_add_to_central_dir	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_writer_add_to_central_dir(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_writer_compute_padding_needed_for_file_alignment	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_uint mz_zip_writer_compute_padding_needed_for_file_alignment(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_uint
mz_zip_writer_create_central_dir_header	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_writer_create_central_dir_header(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_writer_create_local_dir_header	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_writer_create_local_dir_header(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_writer_create_zip64_extra_data	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_uint32 mz_zip_writer_create_zip64_extra_data(mz_uint8* pBuf,$/;"	f	typeref:typename:mz_uint32
mz_zip_writer_end	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_end(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_bool
mz_zip_writer_end_internal	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_writer_end_internal(mz_zip_archive* pZip, mz_bool set_last_error) {$/;"	f	typeref:typename:mz_bool
mz_zip_writer_finalize_archive	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_finalize_archive(mz_zip_archive* pZip) {$/;"	f	typeref:typename:mz_bool
mz_zip_writer_finalize_heap_archive	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_finalize_heap_archive(mz_zip_archive* pZip, void** ppBuf, size_t* p/;"	f	typeref:typename:mz_bool
mz_zip_writer_init	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_init(mz_zip_archive* pZip, mz_uint64 existing_size) {$/;"	f	typeref:typename:mz_bool
mz_zip_writer_init_cfile	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_init_cfile(mz_zip_archive* pZip, MZ_FILE* pFile, mz_uint flags) {$/;"	f	typeref:typename:mz_bool
mz_zip_writer_init_file	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_init_file(mz_zip_archive* pZip, const char* pFilename,$/;"	f	typeref:typename:mz_bool
mz_zip_writer_init_file_v2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^mz_zip_writer_init_file_v2(mz_zip_archive* pZip, const char* pFilename, mz_uint64 size_to_reserv/;"	f	typeref:typename:mz_bool
mz_zip_writer_init_from_reader	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_init_from_reader(mz_zip_archive* pZip, const char* pFilename) {$/;"	f	typeref:typename:mz_bool
mz_zip_writer_init_from_reader_v2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_init_from_reader_v2(mz_zip_archive* pZip, const char* pFilename, mz/;"	f	typeref:typename:mz_bool
mz_zip_writer_init_heap	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^mz_zip_writer_init_heap(mz_zip_archive* pZip, size_t size_to_reserve_at_beginning, size_t initia/;"	f	typeref:typename:mz_bool
mz_zip_writer_init_heap_v2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_init_heap_v2(mz_zip_archive* pZip,$/;"	f	typeref:typename:mz_bool
mz_zip_writer_init_v2	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool mz_zip_writer_init_v2(mz_zip_archive* pZip, mz_uint64 existing_size, mz_uint flag/;"	f	typeref:typename:mz_bool
mz_zip_writer_update_zip64_extension_block	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline static mz_bool mz_zip_writer_update_zip64_extension_block(mz_zip_array* pNew_ext,$/;"	f	typeref:typename:mz_bool
mz_zip_writer_validate_archive_name	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_writer_validate_archive_name(const char* pArchive_name) {$/;"	f	typeref:typename:mz_bool
mz_zip_writer_write_zeros	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool mz_zip_writer_write_zeros(mz_zip_archive* pZip, mz_uint64 cur_file_ofs, mz_uint32/;"	f	typeref:typename:mz_bool
mz_zip_zero_struct	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void mz_zip_zero_struct(mz_zip_archive* pZip) {$/;"	f	typeref:typename:void
n	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_node n;$/;"	m	struct:xpath_context	typeref:typename:xpath_node	file:
n	extern/libgit2/tests/core/posix.c	/^		const uint8_t n[16];$/;"	m	struct:test_core_posix__inet_pton::in6_addr_data	typeref:typename:const uint8_t[16]	file:
n	extern/libgit2/tests/core/posix.c	/^		const uint8_t n[4];$/;"	m	struct:test_core_posix__inet_pton::in_addr_data	typeref:typename:const uint8_t[4]	file:
nPort	extern/libgit2/deps/winhttp/winhttp.h	/^    INTERNET_PORT nPort;$/;"	m	struct:__anonb531ffc20108	typeref:typename:INTERNET_PORT
nScheme	extern/libgit2/deps/winhttp/winhttp.h	/^    INTERNET_SCHEME nScheme;$/;"	m	struct:__anonb531ffc20108	typeref:typename:INTERNET_SCHEME
n_conflicts	extern/libgit2/tests/checkout/checkout_helpers.h	/^	int n_conflicts;$/;"	m	struct:__anonc1a5ebab0108	typeref:typename:int
n_dirty	extern/libgit2/tests/checkout/checkout_helpers.h	/^	int n_dirty;$/;"	m	struct:__anonc1a5ebab0108	typeref:typename:int
n_ignored	extern/libgit2/tests/checkout/checkout_helpers.h	/^	int n_ignored;$/;"	m	struct:__anonc1a5ebab0108	typeref:typename:int
n_untracked	extern/libgit2/tests/checkout/checkout_helpers.h	/^	int n_untracked;$/;"	m	struct:__anonc1a5ebab0108	typeref:typename:int
n_updates	extern/libgit2/tests/checkout/checkout_helpers.h	/^	int n_updates;$/;"	m	struct:__anonc1a5ebab0108	typeref:typename:int
nak_pkt	extern/libgit2/src/transports/smart_pkt.c	/^static int nak_pkt(git_pkt **out)$/;"	f	typeref:typename:int	file:
name	extern/NamedType/catch.hpp	/^    StringRef name;$/;"	m	struct:Catch::NameAndTags	typeref:typename:StringRef
name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		char_t name[1];$/;"	m	struct:xpath_variable_boolean	typeref:typename:char_t[1]	file:
name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		char_t name[1];$/;"	m	struct:xpath_variable_node_set	typeref:typename:char_t[1]	file:
name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		char_t name[1];$/;"	m	struct:xpath_variable_number	typeref:typename:char_t[1]	file:
name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		char_t name[1];$/;"	m	struct:xpath_variable_string	typeref:typename:char_t[1]	file:
name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_string<4, 2> name;$/;"	m	struct:pugi::xml_attribute_struct	typeref:typename:impl::compact_string<4,2>	file:
name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_string<4, 2> name;$/;"	m	struct:pugi::xml_node_struct	typeref:typename:impl::compact_string<4,2>	file:
name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const char_t* xpath_variable::name() const$/;"	f	class:pugi::xpath_variable	typeref:typename:PUGI__FN const char_t *
name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t* name;$/;"	m	struct:name_null_sentry	typeref:typename:char_t *	file:
name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const char_t* xml_attribute::name() const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN const char_t *
name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const char_t* xml_node::name() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN const char_t *
name	extern/OpenXLSX/tests/catch/catch.hpp	/^    StringRef name;$/;"	m	struct:Catch::NameAndTags	typeref:typename:StringRef
name	extern/libgit2/deps/http-parser/http_parser.c	/^  const char *name;$/;"	m	struct:__anonb6e7d1470108	typeref:typename:const char *	file:
name	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar  *name;          \/* Points to the name in the pattern *\/$/;"	m	struct:named_group	typeref:typename:const pcre_uchar *
name	extern/libgit2/deps/zlib/zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s	typeref:typename:Bytef *
name	extern/libgit2/examples/lg2.c	/^	char *name;$/;"	m	struct:__anon8df46cca0108	typeref:typename:char *	file:
name	extern/libgit2/include/git2/config.h	/^	const char *name; \/**< Name of the entry (normalised) *\/$/;"	m	struct:git_config_entry	typeref:typename:const char *
name	extern/libgit2/include/git2/net.h	/^	char *name;$/;"	m	struct:git_remote_head	typeref:typename:char *
name	extern/libgit2/include/git2/remote.h	/^	const char *name;$/;"	m	struct:git_remote_create_options	typeref:typename:const char *
name	extern/libgit2/include/git2/types.h	/^	char *name; \/**< full name of the author *\/$/;"	m	struct:git_signature	typeref:typename:char *
name	extern/libgit2/package.json	/^  "name": "libgit2",$/;"	s
name	extern/libgit2/src/attr.c	/^	git_attr_name name;$/;"	m	struct:__anon5b6b8b690108	typeref:typename:git_attr_name	file:
name	extern/libgit2/src/attr_file.h	/^	char *name;$/;"	m	struct:__anon32d629ad0508	typeref:typename:char *
name	extern/libgit2/src/attr_file.h	/^	const char *name;$/;"	m	struct:__anon32d629ad0408	typeref:typename:const char *
name	extern/libgit2/src/config.c	/^	char *name;$/;"	m	struct:__anon2d64db840508	typeref:typename:char *	file:
name	extern/libgit2/src/config.c	/^	git_buf *name;$/;"	m	struct:rename_data	typeref:typename:git_buf *	file:
name	extern/libgit2/src/config_cache.c	/^	const char *name;$/;"	m	struct:map_data	typeref:typename:const char *	file:
name	extern/libgit2/src/config_file.c	/^	const char *name;$/;"	m	struct:write_data	typeref:typename:const char *	file:
name	extern/libgit2/src/date.c	/^	const char *name;$/;"	m	struct:__anon6112fc6c0208	typeref:typename:const char *	file:
name	extern/libgit2/src/date.c	/^	const char *name;$/;"	m	struct:special	typeref:typename:const char *	file:
name	extern/libgit2/src/describe.c	/^	struct commit_name *name;$/;"	m	struct:git_describe_result	typeref:struct:commit_name *	file:
name	extern/libgit2/src/describe.c	/^	struct commit_name *name;$/;"	m	struct:possible_tag	typeref:struct:commit_name *	file:
name	extern/libgit2/src/diff_driver.c	/^	char name[GIT_FLEX_ARRAY];$/;"	m	struct:git_diff_driver	typeref:typename:char[]	file:
name	extern/libgit2/src/merge_driver.c	/^	char name[GIT_FLEX_ARRAY];$/;"	m	struct:__anon8d5767c90108	typeref:typename:char[]	file:
name	extern/libgit2/src/refdb_fs.c	/^	char name[GIT_FLEX_ARRAY];$/;"	m	struct:packref	typeref:typename:char[]	file:
name	extern/libgit2/src/refs.h	/^	char name[GIT_FLEX_ARRAY];$/;"	m	struct:git_reference	typeref:typename:char[]
name	extern/libgit2/src/remote.h	/^	char *name;$/;"	m	struct:git_remote	typeref:typename:char *
name	extern/libgit2/src/repository.c	/^    const char *name;$/;"	m	struct:__anon05b1158e0108	typeref:typename:const char *	file:
name	extern/libgit2/src/submodule.c	/^	char *name;$/;"	m	struct:__anon952effbe0308	typeref:typename:char *	file:
name	extern/libgit2/src/submodule.h	/^	char *name;$/;"	m	struct:git_submodule	typeref:typename:char *
name	extern/libgit2/src/transaction.c	/^	const char *name;$/;"	m	struct:__anon8eca35140208	typeref:typename:const char *	file:
name	extern/libgit2/src/transports/auth.h	/^	const char *name;$/;"	m	struct:__anonf415dd740208	typeref:typename:const char *
name	extern/libgit2/src/tree-cache.h	/^	char name[GIT_FLEX_ARRAY];$/;"	m	struct:git_tree_cache	typeref:typename:char[]
name	extern/libgit2/src/tree.c	/^	char *name;$/;"	m	struct:__anon8790ed5e0108	typeref:typename:char *	file:
name	extern/libgit2/src/userdiff.h	/^	const char *name;$/;"	m	struct:__anon76bd502b0108	typeref:typename:const char *
name	extern/libgit2/src/worktree.h	/^	char *name;$/;"	m	struct:git_worktree	typeref:typename:char *
name	extern/libgit2/tests/clar.c	/^	const char *name;$/;"	m	struct:clar_func	typeref:typename:const char *	file:
name	extern/libgit2/tests/clar.c	/^	const char *name;$/;"	m	struct:clar_suite	typeref:typename:const char *	file:
name	extern/libgit2/tests/clar_libgit2_trace.c	/^	const char *name;$/;"	m	struct:method	typeref:typename:const char *	file:
name	extern/libgit2/tests/commit/parse.c	/^	const char *name;$/;"	m	struct:__anond44356cc0208	typeref:typename:const char *	file:
name	extern/libgit2/tests/config/memory.c	/^	const char *name;$/;"	m	struct:expected_entry	typeref:typename:const char *	file:
name	extern/libgit2/tests/core/dirent.c	/^	char *name; \/* filename		*\/$/;"	m	struct:name_data	typeref:typename:char *	file:
name	extern/libgit2/tests/online/push_util.h	/^	char *name;$/;"	m	struct:__anon56a1c92f0108	typeref:typename:char *
name	extern/libgit2/tests/online/push_util.h	/^	const char *name;$/;"	m	struct:__anon56a1c92f0308	typeref:typename:const char *
name_checked	extern/libgit2/src/describe.c	/^	unsigned name_checked:1;$/;"	m	struct:commit_name	typeref:typename:unsigned:1	file:
name_collision	extern/libgit2/src/checkout.c	/^	int name_collision:1,$/;"	m	struct:__anonbac5d6240308	typeref:typename:int:1	file:
name_count	extern/libgit2/deps/pcre/pcre_internal.h	/^  int    name_count;              \/* Number of names in name table *\/$/;"	m	struct:match_data	typeref:typename:int
name_count	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_count;         \/* Number of name items *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
name_count	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_count;         \/* Number of name items *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
name_count	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_sw name_count;$/;"	m	struct:compiler_common	typeref:typename:sljit_sw	file:
name_data	extern/libgit2/tests/core/dirent.c	/^typedef struct name_data {$/;"	s	file:
name_data	extern/libgit2/tests/core/dirent.c	/^} name_data;$/;"	t	typeref:struct:name_data	file:
name_entry_eq	extern/libgit2/tests/merge/merge_helpers.c	/^static int name_entry_eq(const char *expected, const char *actual)$/;"	f	typeref:typename:int	file:
name_entry_eq_merge_name_entry	extern/libgit2/tests/merge/merge_helpers.c	/^static int name_entry_eq_merge_name_entry(const struct merge_name_entry *expected, const git_ind/;"	f	typeref:typename:int	file:
name_entry_size	extern/libgit2/deps/pcre/pcre_internal.h	/^  int    name_entry_size;         \/* Size of entry in names table *\/$/;"	m	struct:match_data	typeref:typename:int
name_entry_size	extern/libgit2/deps/pcre/pcre_internal.h	/^  int  name_entry_size;             \/* Size of each entry *\/$/;"	m	struct:compile_data	typeref:typename:int
name_entry_size	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_entry_size;    \/* Size of any name items *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
name_entry_size	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_entry_size;    \/* Size of any name items *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
name_entry_size	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_sw name_entry_size;$/;"	m	struct:compiler_common	typeref:typename:sljit_sw	file:
name_hash	extern/libgit2/src/attr_file.h	/^	uint32_t name_hash;$/;"	m	struct:__anon32d629ad0408	typeref:typename:uint32_t
name_hash	extern/libgit2/src/attr_file.h	/^	uint32_t name_hash;$/;"	m	struct:__anon32d629ad0508	typeref:typename:uint32_t
name_hash	extern/libgit2/src/pack-objects.c	/^static unsigned name_hash(const char *name)$/;"	f	typeref:typename:unsigned	file:
name_max	extern/libgit2/deps/zlib/zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s	typeref:typename:uInt
name_null_sentry	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        name_null_sentry(xml_node_struct* node_) : node(node_), name(node_->name) {$/;"	f	struct:name_null_sentry	file:
name_null_sentry	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct name_null_sentry$/;"	s	file:
name_offset	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_offset;$/;"	m	struct:__anonb814e4160508	typeref:typename:pcre_uint16
name_offset	extern/libgit2/src/remote.c	/^static const char *name_offset(size_t *len_out, const char *name)$/;"	f	typeref:typename:const char *	file:
name_only_cmp	extern/libgit2/tests/core/sortedcache.c	/^static int name_only_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
name_table	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar *name_table;           \/* The name\/number table *\/$/;"	m	struct:compile_data	typeref:typename:pcre_uchar *
name_table	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar *name_table;         \/* Table of names *\/$/;"	m	struct:match_data	typeref:typename:pcre_uchar *
name_table	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  pcre_uchar *name_table;$/;"	m	struct:compiler_common	typeref:typename:pcre_uchar *	file:
name_table_offset	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_table_offset;  \/* Offset to name table that follows *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
name_table_offset	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_table_offset;  \/* Offset to name table that follows *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
named_group	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct named_group {$/;"	s
named_group	extern/libgit2/deps/pcre/pcre_internal.h	/^} named_group;$/;"	t	typeref:struct:named_group
named_group_list_size	extern/libgit2/deps/pcre/pcre_internal.h	/^  int  named_group_list_size;       \/* Number of entries in the list *\/$/;"	m	struct:compile_data	typeref:typename:int
named_groups	extern/libgit2/deps/pcre/pcre_internal.h	/^  named_group *named_groups;        \/* Points to vector in pre-compile *\/$/;"	m	struct:compile_data	typeref:typename:named_group *
named_type_impl_h	extern/NamedType/named_type_impl.hpp	/^#define named_type_impl_h$/;"	d
named_type_impl_h	nt.hpp	/^#define named_type_impl_h$/;"	d
namedrefcount	extern/libgit2/deps/pcre/pcre_internal.h	/^  unsigned int namedrefcount;       \/* Number of backreferences by name *\/$/;"	m	struct:compile_data	typeref:typename:unsigned int
namelen	extern/libgit2/src/tree-cache.h	/^	size_t namelen;$/;"	m	struct:git_tree_cache	typeref:typename:size_t
names	extern/libgit2/src/describe.c	/^	git_oidmap *names;$/;"	m	struct:get_name_data	typeref:typename:git_oidmap *	file:
names	extern/libgit2/src/index.h	/^	git_vector names;$/;"	m	struct:git_index	typeref:typename:git_vector
names	extern/libgit2/tests/core/dirent.c	/^	name_data *names; \/* name state data	*\/$/;"	m	struct:walk_data	typeref:typename:name_data *	file:
names	extern/libgit2/tests/diff/diff_helpers.h	/^	const char **names;$/;"	m	struct:__anona765b0910108	typeref:typename:const char **
names_found	extern/libgit2/deps/pcre/pcre_internal.h	/^  int  names_found;                 \/* Number of entries so far *\/$/;"	m	struct:compile_data	typeref:typename:int
namespace	extern/libgit2/src/repository.h	/^	char *namespace;$/;"	m	struct:git_repository	typeref:typename:char *
namespace_uri	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const char_t* namespace_uri(const xpath_node& node)$/;"	f	typeref:typename:PUGI__FN const char_t *
namespace_uri	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const char_t* namespace_uri(xml_attribute attr, xml_node parent)$/;"	f	typeref:typename:PUGI__FN const char_t *
namespace_uri	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const char_t* namespace_uri(xml_node node)$/;"	f	typeref:typename:PUGI__FN const char_t *
namespace_uri_predicate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		namespace_uri_predicate(const char_t* name)$/;"	f	struct:namespace_uri_predicate	file:
namespace_uri_predicate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct namespace_uri_predicate$/;"	s	file:
namevalue_base	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		uint16_t namevalue_base;$/;"	m	struct:pugi::xml_attribute_struct	typeref:typename:uint16_t	file:
namevalue_base	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		uint16_t namevalue_base;$/;"	m	struct:pugi::xml_node_struct	typeref:typename:uint16_t	file:
nanoseconds	extern/libgit2/include/git2/index.h	/^	uint32_t nanoseconds;$/;"	m	struct:__anon3eb19ecc0108	typeref:typename:uint32_t
nanoseconds	extern/libgit2/src/index.c	/^	uint32_t nanoseconds;$/;"	m	struct:entry_time	typeref:typename:uint32_t	file:
narrow_stream	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        std::basic_ostream<char, std::char_traits<char>>* narrow_stream;$/;"	m	class:pugi::xml_writer_stream	typeref:typename:std::basic_ostream<char,std::char_traits<char>> *
native	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.h	/^	CCHmacContext native;$/;"	m	struct:__anon2929e89b0108	typeref:typename:CCHmacContext
native	extern/libgit2/src/win32/thread.h	/^	} native;$/;"	m	struct:__anon7162bc2d0308	typeref:union:__anon7162bc2d0308::__anon7162bc2d040a
nattrs	extern/libgit2/src/filter.c	/^	size_t nattrs, nmatches;$/;"	m	struct:__anon209df0b40208	typeref:typename:size_t	file:
ncha	extern/libgit2/src/xdiff/xprepare.c	/^	chastore_t ncha;$/;"	m	struct:s_xdlclassifier	typeref:typename:chastore_t	file:
ncode	extern/libgit2/deps/zlib/inflate.h	/^    unsigned ncode;             \/* number of code length code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
ndist	extern/libgit2/deps/zlib/inflate.h	/^    unsigned ndist;             \/* number of distance code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
need_endian_swap_utf	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	f	typeref:typename:PUGI__FN bool
need_more	extern/libgit2/deps/zlib/deflate.c	/^    need_more,      \/* block not completed, need more input or more output *\/$/;"	e	enum:__anonfe3a00c70103	file:
need_pack	extern/libgit2/src/remote.h	/^	unsigned int need_pack;$/;"	m	struct:git_remote	typeref:typename:unsigned int
needs_next	extern/libgit2/src/path.h	/^	unsigned int needs_next;$/;"	m	struct:git_path_diriter	typeref:typename:unsigned int
negotiate	extern/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_buf negotiate;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_buf
negotiate_context_free	extern/libgit2/src/transports/auth_negotiate.c	/^static void negotiate_context_free(git_http_auth_context *c)$/;"	f	typeref:typename:void	file:
negotiate_err_set	extern/libgit2/src/transports/auth_negotiate.c	/^static void negotiate_err_set($/;"	f	typeref:typename:void	file:
negotiate_init_context	extern/libgit2/src/transports/auth_negotiate.c	/^static int negotiate_init_context($/;"	f	typeref:typename:int	file:
negotiate_is_complete	extern/libgit2/src/transports/auth_negotiate.c	/^static int negotiate_is_complete(git_http_auth_context *c)$/;"	f	typeref:typename:int	file:
negotiate_next_token	extern/libgit2/src/transports/auth_negotiate.c	/^static int negotiate_next_token($/;"	f	typeref:typename:int	file:
negotiate_oid_krb5	extern/libgit2/src/transports/auth_negotiate.c	/^static gss_OID_desc negotiate_oid_krb5 =$/;"	v	typeref:typename:gss_OID_desc	file:
negotiate_oid_spnego	extern/libgit2/src/transports/auth_negotiate.c	/^static gss_OID_desc negotiate_oid_spnego =$/;"	v	typeref:typename:gss_OID_desc	file:
negotiate_oids	extern/libgit2/src/transports/auth_negotiate.c	/^static gss_OID negotiate_oids[] =$/;"	v	typeref:typename:gss_OID[]	file:
negotiate_set_challenge	extern/libgit2/src/transports/auth_negotiate.c	/^static int negotiate_set_challenge($/;"	f	typeref:typename:int	file:
negotiation_cb	extern/libgit2/tests/network/remote/push.c	/^int negotiation_cb(const git_push_update **updates, size_t len, void *payload)$/;"	f	typeref:typename:int
net_set_error	extern/libgit2/src/streams/socket.c	/^static void net_set_error(const char *str)$/;"	f	typeref:typename:void	file:
network_packetsize	extern/libgit2/src/transports/smart_protocol.c	/^static int network_packetsize(size_t received, void *payload)$/;"	f	typeref:typename:int	file:
network_packetsize_payload	extern/libgit2/src/transports/smart_protocol.c	/^struct network_packetsize_payload$/;"	s	file:
new_backend	extern/libgit2/tests/odb/sorting.c	/^static git_odb_backend *new_backend(size_t position)$/;"	f	typeref:typename:git_odb_backend *	file:
new_binary_base85	extern/libgit2/tests/diff/binary.c	/^	git_buf new_binary_base85;$/;"	m	struct:diff_data	typeref:typename:git_buf	file:
new_binary_inflatedlen	extern/libgit2/tests/diff/binary.c	/^	size_t new_binary_inflatedlen;$/;"	m	struct:diff_data	typeref:typename:size_t	file:
new_binary_type	extern/libgit2/tests/diff/binary.c	/^	git_diff_binary_t new_binary_type;$/;"	m	struct:diff_data	typeref:typename:git_diff_binary_t	file:
new_cache_object	extern/libgit2/src/pack.c	/^static git_pack_cache_entry *new_cache_object(git_rawobj *source)$/;"	f	typeref:typename:git_pack_cache_entry *	file:
new_entries	extern/libgit2/src/index.c	/^	git_vector *new_entries;$/;"	m	struct:read_tree_data	typeref:typename:git_vector *	file:
new_file	extern/libgit2/include/git2/diff.h	/^	git_diff_binary_file new_file; \/**< The contents of the new file. *\/$/;"	m	struct:__anon72022fed0908	typeref:typename:git_diff_binary_file
new_file	extern/libgit2/include/git2/diff.h	/^	git_diff_file new_file;$/;"	m	struct:__anon72022fed0508	typeref:typename:git_diff_file
new_hunk	extern/libgit2/src/blame.c	/^static git_blame_hunk* new_hunk($/;"	f	typeref:typename:git_blame_hunk *	file:
new_id	extern/libgit2/tests/diff/binary.c	/^	git_oid new_id;$/;"	m	struct:diff_data	typeref:typename:git_oid	file:
new_iter	extern/libgit2/src/diff_generate.c	/^	git_iterator *new_iter;$/;"	m	struct:__anon047407f10208	typeref:typename:git_iterator *	file:
new_lineno	extern/libgit2/include/git2/diff.h	/^	int    new_lineno;   \/**< Line number in new file or -1 for deleted line *\/$/;"	m	struct:__anon72022fed0c08	typeref:typename:int
new_lineno	extern/libgit2/src/diff_xdiff.c	/^	int old_lineno, new_lineno;$/;"	m	struct:__anon14ca16370108	typeref:typename:int	file:
new_lines	extern/libgit2/include/git2/diff.h	/^	int    new_lines;     \/**< Number of lines in new_file *\/$/;"	m	struct:__anon72022fed0a08	typeref:typename:int
new_name	extern/libgit2/src/refs.c	/^    git_refname_t new_name;$/;"	m	struct:__anon81fc257e0208	typeref:typename:git_refname_t	file:
new_oid	extern/libgit2/tests/online/push_util.h	/^	git_oid new_oid;$/;"	m	struct:__anon56a1c92f0108	typeref:typename:git_oid
new_path	extern/libgit2/src/patch_parse.c	/^	char *old_path, *new_path;$/;"	m	struct:__anonadbd87d80108	typeref:typename:char **	file:
new_path	extern/libgit2/tests/diff/binary.c	/^	char *new_path;$/;"	m	struct:diff_data	typeref:typename:char *	file:
new_prefix	extern/libgit2/include/git2/diff.h	/^	const char *new_prefix;$/;"	m	struct:__anon72022fed0608	typeref:typename:const char *
new_prefix	extern/libgit2/src/diff_print.c	/^	const char *new_prefix;$/;"	m	struct:__anoncda507930108	typeref:typename:const char *	file:
new_prefix	extern/libgit2/src/patch_parse.c	/^	char *old_prefix, *new_prefix;$/;"	m	struct:__anonadbd87d80108	typeref:typename:char **	file:
new_ptr	extern/libgit2/deps/zlib/zutil.c	/^    voidpf new_ptr;$/;"	m	struct:ptr_table_s	typeref:typename:voidpf	file:
new_recursive	extern/libgit2/deps/pcre/pcre_exec.c	/^#define new_recursive /;"	d	file:
new_ref	extern/libgit2/tests/refs/reflog/reflog.c	/^static const char *new_ref = "refs\/heads\/test-reflog";$/;"	v	typeref:typename:const char *	file:
new_remote_name	extern/libgit2/src/remote.c	/^	const char *new_remote_name;$/;"	m	struct:update_data	typeref:typename:const char *	file:
new_src	extern/libgit2/src/diff.h	/^	git_iterator_type_t new_src;$/;"	m	struct:git_diff	typeref:typename:git_iterator_type_t
new_start	extern/libgit2/include/git2/diff.h	/^	int    new_start;     \/**< Starting line number in new_file *\/$/;"	m	struct:__anon72022fed0a08	typeref:typename:int
new_window	extern/libgit2/src/mwindow.c	/^static git_mwindow *new_window($/;"	f	typeref:typename:git_mwindow *	file:
new_xpath_variable	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_variable* new_xpath_variable(xpath_value_type type, const char_t* name)$/;"	f	typeref:typename:PUGI__FN xpath_variable *
new_xpath_variable	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename T> PUGI__FN T* new_xpath_variable(const char_t* name)$/;"	f	typeref:typename:PUGI__FN T *
newest_commit	extern/libgit2/include/git2/blame.h	/^	git_oid newest_commit;$/;"	m	struct:git_blame_options	typeref:typename:git_oid
newfile	extern/OpenXLSX/tests/c++/Test01_DocumentCreation.cpp	/^std::string newfile = ".\/TestDocumentCreationNew.xlsx";$/;"	v	typeref:typename:std::string
newline	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int newline;$/;"	m	struct:compiler_common	typeref:typename:int	file:
newname	extern/libgit2/tests/status/renames.c	/^	const char *newname;$/;"	m	struct:status_entry	typeref:typename:const char *	file:
newptrb	extern/libgit2/deps/pcre/pcre_exec.c	/^#define newptrb /;"	d	file:
newtype	newtype.hpp	/^  constexpr newtype(U &&u) : value(std::forward<U>(u)) {}$/;"	f	struct:abo::nt::newtype
newtype	newtype.hpp	/^struct newtype : Skills<newtype<Tag, T, Skills...>>... {$/;"	s	namespace:abo::nt
next	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void next()$/;"	f	class:xpath_lexer	typeref:typename:void	file:
next	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_memory_block* next;$/;"	m	struct:xpath_memory_block	typeref:typename:xpath_memory_block *	file:
next	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_extra_buffer* next;$/;"	m	struct:xml_extra_buffer	typeref:typename:xml_extra_buffer *	file:
next	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_memory_page* next;$/;"	m	struct:xml_memory_page	typeref:typename:xml_memory_page *	file:
next	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_stream_chunk* next;$/;"	m	struct:xml_stream_chunk	typeref:typename:xml_stream_chunk *	file:
next	extern/libgit2/deps/pcre/pcre_exec.c	/^#define next /;"	d	file:
next	extern/libgit2/deps/pcre/pcre_internal.h	/^  struct open_capitem *next;    \/* Chain link *\/$/;"	m	struct:open_capitem	typeref:struct:open_capitem *
next	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct jump_list *next;$/;"	m	struct:jump_list	typeref:struct:jump_list *	file:
next	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct label_addr_list *next;$/;"	m	struct:label_addr_list	typeref:struct:label_addr_list *	file:
next	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct recurse_entry *next;$/;"	m	struct:recurse_entry	typeref:struct:recurse_entry *	file:
next	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct stub_list *next;$/;"	m	struct:stub_list	typeref:struct:stub_list *	file:
next	extern/libgit2/deps/zlib/inflate.h	/^    code FAR *next;             \/* next available space in codes[] *\/$/;"	m	struct:inflate_state	typeref:typename:code FAR *
next	extern/libgit2/deps/zlib/zlib.h	/^    unsigned char *next;$/;"	m	struct:gzFile_s	typeref:typename:unsigned char *
next	extern/libgit2/src/blame.h	/^	struct git_blame__entry *next;$/;"	m	struct:git_blame__entry	typeref:struct:git_blame__entry *
next	extern/libgit2/src/commit_list.h	/^	struct git_commit_list *next;$/;"	m	struct:git_commit_list	typeref:struct:git_commit_list *
next	extern/libgit2/src/config_entries.c	/^	struct config_entry_list *next;$/;"	m	struct:config_entry_list	typeref:struct:config_entry_list *	file:
next	extern/libgit2/src/delta.c	/^	struct index_entry *next;$/;"	m	struct:index_entry	typeref:struct:index_entry *	file:
next	extern/libgit2/src/mwindow.h	/^	struct git_mwindow *next;$/;"	m	struct:git_mwindow	typeref:struct:git_mwindow *
next	extern/libgit2/src/pool.c	/^	git_pool_page *next;$/;"	m	struct:git_pool_page	typeref:typename:git_pool_page *	file:
next	extern/libgit2/src/xdiff/xdiffi.h	/^	struct s_xdchange *next;$/;"	m	struct:s_xdchange	typeref:struct:s_xdchange *
next	extern/libgit2/src/xdiff/xhistogram.c	/^		struct record *next;$/;"	m	struct:histindex::record	typeref:struct:record *	file:
next	extern/libgit2/src/xdiff/xmerge.c	/^	struct s_xdmerge *next;$/;"	m	struct:s_xdmerge	typeref:struct:s_xdmerge *	file:
next	extern/libgit2/src/xdiff/xpatience.c	/^		struct entry *next, *previous;$/;"	m	struct:hashmap::entry	typeref:struct:entry *	file:
next	extern/libgit2/src/xdiff/xprepare.c	/^	struct s_xdlclass *next;$/;"	m	struct:s_xdlclass	typeref:struct:s_xdlclass *	file:
next	extern/libgit2/src/xdiff/xtypes.h	/^	struct s_chanode *next;$/;"	m	struct:s_chanode	typeref:struct:s_chanode *
next	extern/libgit2/src/xdiff/xtypes.h	/^	struct s_xrecord *next;$/;"	m	struct:s_xrecord	typeref:struct:s_xrecord *
next	extern/libgit2/tests/clar.c	/^	struct clar_error *next;$/;"	m	struct:clar_error	typeref:struct:clar_error *	file:
next	extern/libgit2/tests/clar.c	/^	struct clar_explicit *next;$/;"	m	struct:clar_explicit	typeref:struct:clar_explicit *	file:
next	extern/libgit2/tests/clar.c	/^	struct clar_report *next;$/;"	m	struct:clar_report	typeref:struct:clar_report *	file:
next	extern/libgit2/tests/filter/stream.c	/^	git_writestream *next;$/;"	m	struct:compress_stream	typeref:typename:git_writestream *	file:
next_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_pointer<xml_attribute_struct, 7, 0> next_attribute;$/;"	m	struct:pugi::xml_attribute_struct	typeref:typename:impl::compact_pointer<xml_attribute_struct,7,0>	file:
next_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_attribute::next_attribute() const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute
next_component	extern/libgit2/src/tree.c	/^static bool next_component(git_buf *out, const char *in)$/;"	f	typeref:typename:bool	file:
next_head	extern/libgit2/src/remote.c	/^static int next_head(const git_remote *remote, git_vector *refs,$/;"	f	typeref:typename:int	file:
next_hfs_char	extern/libgit2/src/path.c	/^static int32_t next_hfs_char(const char **in, size_t *len)$/;"	f	typeref:typename:int32_t	file:
next_idx	extern/libgit2/src/iterator.c	/^	size_t next_idx;$/;"	m	struct:__anonb487a9b80408	typeref:typename:size_t	file:
next_idx	extern/libgit2/src/iterator.c	/^	size_t next_idx;$/;"	m	struct:__anonb487a9b80708	typeref:typename:size_t	file:
next_idx	extern/libgit2/src/iterator.c	/^	size_t next_idx;$/;"	m	struct:__anonb487a9b80908	typeref:typename:size_t	file:
next_in	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    const unsigned char* next_in; \/* pointer to next byte to read *\/$/;"	m	struct:mz_stream_s	typeref:typename:const unsigned char *
next_in	extern/libgit2/deps/zlib/zlib.h	/^    z_const Bytef *next_in;     \/* next input byte *\/$/;"	m	struct:z_stream_s	typeref:typename:z_const Bytef *
next_item_length	extern/libgit2/deps/pcre/pcre.h	/^  int          next_item_length;  \/* Length of next item in the pattern *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
next_item_length	extern/libgit2/deps/pcre/pcre.h	/^  int          next_item_length;  \/* Length of next item in the pattern *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
next_item_length	extern/libgit2/deps/pcre/pcre.h	/^  int          next_item_length;  \/* Length of next item in the pattern *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
next_line	extern/libgit2/src/trailer.c	/^static const char *next_line(const char *str)$/;"	f	typeref:typename:const char *	file:
next_opcode	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *next_opcode(compiler_common *common, pcre_uchar *cc)$/;"	f	typeref:typename:pcre_uchar *	file:
next_out	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    unsigned char* next_out; \/* pointer to next byte to write *\/$/;"	m	struct:mz_stream_s	typeref:typename:unsigned char *
next_out	extern/libgit2/deps/zlib/zlib.h	/^    Bytef    *next_out; \/* next output byte will go here *\/$/;"	m	struct:z_stream_s	typeref:typename:Bytef *
next_pos	extern/libgit2/src/merge.c	/^	size_t next_pos;$/;"	m	struct:__anon41711a7e0208	typeref:typename:size_t	file:
next_ptr	extern/libgit2/deps/zlib/zutil.c	/^local int next_ptr = 0;$/;"	v	typeref:typename:local int
next_ptrs	extern/libgit2/src/xdiff/xhistogram.c	/^	unsigned int *next_ptrs;$/;"	m	struct:histindex	typeref:typename:unsigned int *	file:
next_sibling	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_pointer<xml_node_struct, 10, 0> next_sibling;$/;"	m	struct:pugi::xml_node_struct	typeref:typename:impl::compact_pointer<xml_node_struct,10,0>	file:
next_sibling	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::next_sibling() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
next_sibling	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::next_sibling(const char_t* name_) const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
next_state	extern/libgit2/src/patch_parse.c	/^	parse_header_state next_state;$/;"	m	struct:__anonadbd87d80308	typeref:typename:parse_header_state	file:
next_token	extern/libgit2/src/transports/auth.h	/^	int (*next_token)(git_buf *out, git_http_auth_context *ctx, git_cred *cred);$/;"	m	struct:git_http_auth_context	typeref:typename:int (*)(git_buf * out,git_http_auth_context * ctx,git_cred * cred)
nextbacktracks	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *nextbacktracks;$/;"	m	struct:backtrack_common	typeref:typename:jump_list *	file:
nfc	extern/libgit2/tests/core/iconv.c	/^static char *nfc = "\\xC3\\x85\\x73\\x74\\x72\\xC3\\xB6\\x6D";$/;"	v	typeref:typename:char *	file:
nfc	extern/libgit2/tests/status/renames.c	/^static char *nfc = "\\xC3\\x85\\x73\\x74\\x72\\xC3\\xB6\\x6D";$/;"	v	typeref:typename:char *	file:
nfc_file	extern/libgit2/src/path.c	/^static const char *nfc_file = "\\xC3\\x85\\x73\\x74\\x72\\xC3\\xB6\\x6D.XXXXXX";$/;"	v	typeref:typename:const char *	file:
nfd	extern/libgit2/tests/core/iconv.c	/^static char *nfd = "\\x41\\xCC\\x8A\\x73\\x74\\x72\\x6F\\xCC\\x88\\x6D";$/;"	v	typeref:typename:char *	file:
nfd	extern/libgit2/tests/status/renames.c	/^static char *nfd = "\\x41\\xCC\\x8A\\x73\\x74\\x72\\x6F\\xCC\\x88\\x6D";$/;"	v	typeref:typename:char *	file:
nfd_file	extern/libgit2/src/path.c	/^static const char *nfd_file = "\\x41\\xCC\\x8A\\x73\\x74\\x72\\x6F\\xCC\\x88\\x6D.XXXXXX";$/;"	v	typeref:typename:const char *	file:
nfile	extern/libgit2/src/patch_generate.h	/^	git_diff_file_content nfile;$/;"	m	struct:git_patch_generated	typeref:typename:git_diff_file_content
nfiles	extern/libgit2/include/git2/diff.h	/^	uint16_t      nfiles;	   \/**< number of files in this delta *\/$/;"	m	struct:__anon72022fed0508	typeref:typename:uint16_t
ng_pkt	extern/libgit2/src/transports/smart_pkt.c	/^static int ng_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
nice_length	extern/libgit2/deps/zlib/deflate.c	/^   ush nice_length; \/* quit search above this match length *\/$/;"	m	struct:config_s	typeref:typename:ush	file:
nice_match	extern/libgit2/deps/zlib/deflate.h	/^    int nice_match; \/* Stop searching when current match exceeds this *\/$/;"	m	struct:internal_state	typeref:typename:int
nitem	extern/libgit2/src/diff_generate.c	/^	const git_index_entry *nitem;$/;"	m	struct:__anon047407f10208	typeref:typename:const git_index_entry *	file:
nl	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar nl[4];                 \/* Newline string when fixed *\/$/;"	m	struct:dfa_match_data	typeref:typename:pcre_uchar[4]
nl	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar nl[4];                 \/* Newline string when fixed length *\/$/;"	m	struct:compile_data	typeref:typename:pcre_uchar[4]
nl	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar nl[4];               \/* Newline string when fixed *\/$/;"	m	struct:match_data	typeref:typename:pcre_uchar[4]
nlen	extern/libgit2/deps/zlib/inflate.h	/^    unsigned nlen;              \/* number of length code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
nllen	extern/libgit2/deps/pcre/pcre_internal.h	/^  int    nllen;                   \/* Newline string length *\/$/;"	m	struct:match_data	typeref:typename:int
nllen	extern/libgit2/deps/pcre/pcre_internal.h	/^  int   nllen;                      \/* Newline string length *\/$/;"	m	struct:dfa_match_data	typeref:typename:int
nllen	extern/libgit2/deps/pcre/pcre_internal.h	/^  int  nllen;                       \/* Newline string length *\/$/;"	m	struct:compile_data	typeref:typename:int
nlmax	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 nlmax;$/;"	m	struct:compiler_common	typeref:typename:sljit_u32	file:
nlmin	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 nlmin;$/;"	m	struct:compiler_common	typeref:typename:sljit_u32	file:
nltype	extern/libgit2/deps/pcre/pcre_internal.h	/^  int    nltype;                  \/* Newline type *\/$/;"	m	struct:match_data	typeref:typename:int
nltype	extern/libgit2/deps/pcre/pcre_internal.h	/^  int   nltype;                     \/* Newline type *\/$/;"	m	struct:dfa_match_data	typeref:typename:int
nltype	extern/libgit2/deps/pcre/pcre_internal.h	/^  int  nltype;                      \/* Newline type *\/$/;"	m	struct:compile_data	typeref:typename:int
nltype	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int nltype;$/;"	m	struct:compiler_common	typeref:typename:int	file:
nmatches	extern/libgit2/src/filter.c	/^	size_t nattrs, nmatches;$/;"	m	struct:__anon209df0b40208	typeref:typename:size_t	file:
noMatchingTestCases	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^        void noMatchingTestCases( std::string const& spec ) override {$/;"	f	struct:Catch::TAPReporter	typeref:typename:void
noMatchingTestCases	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        void noMatchingTestCases( std::string const& \/* spec *\/ ) override {}$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
no_alternatives	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static int no_alternatives(pcre_uchar *cc)$/;"	f	typeref:typename:int	file:
no_check_cert_flags	extern/libgit2/src/transports/winhttp.c	/^static const int no_check_cert_flags = SECURITY_FLAG_IGNORE_CERT_CN_INVALID |$/;"	v	typeref:typename:const int	file:
no_commit	extern/libgit2/examples/merge.c	/^	int no_commit : 1;$/;"	m	struct:__anon29b823750108	typeref:typename:int:1	file:
no_frame	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  no_frame = -1,$/;"	e	enum:frame_types	file:
no_index	extern/libgit2/examples/diff.c	/^	int no_index;$/;"	m	struct:opts	typeref:typename:int	file:
no_options	extern/libgit2/examples/init.c	/^	int no_options;$/;"	m	struct:opts	typeref:typename:int	file:
no_sideband	extern/libgit2/src/transports/smart_protocol.c	/^static int no_sideband(transport_smart *t, struct git_odb_writepack *writepack, gitno_buffer *bu/;"	f	typeref:typename:int	file:
no_stack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  no_stack = -2$/;"	e	enum:frame_types	file:
no_symlinks	extern/libgit2/src/index.h	/^	unsigned int no_symlinks:1;$/;"	m	struct:git_index	typeref:typename:unsigned int:1
nodate	extern/libgit2/src/date.c	/^static int nodate(struct tm *tm)$/;"	f	typeref:typename:int	file:
node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xml_node xpath_node::node() const$/;"	f	class:pugi::xpath_node	typeref:typename:PUGI__FN xml_node
node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_node_struct* node;$/;"	m	struct:name_null_sentry	typeref:typename:xml_node_struct *	file:
node_cdata	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        node_cdata,            \/\/ Character data, i.e. '<![CDATA[text]]>'$/;"	e	enum:pugi::xml_node_type
node_comment	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        node_comment,        \/\/ Comment tag, i.e. '<!-- text -->'$/;"	e	enum:pugi::xml_node_type
node_copy_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void node_copy_attribute(xml_attribute_struct* da, xml_attribute_struct* sa) {$/;"	f	typeref:typename:PUGI__FN void
node_copy_contents	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void node_copy_contents(xml_node_struct* dn, xml_node_struct* sn, xml_allocator* sh/;"	f	typeref:typename:PUGI__FN void
node_copy_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void node_copy_string(String& dest, Header& header, uintptr_t header_mask, char_t* /;"	f	typeref:typename:PUGI__FN void
node_copy_tree	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void node_copy_tree(xml_node_struct* dn, xml_node_struct* sn) {$/;"	f	typeref:typename:PUGI__FN void
node_count	extern/libgit2/src/oid.c	/^	size_t node_count, size;$/;"	m	struct:git_oid_shorten	typeref:typename:size_t	file:
node_declaration	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        node_declaration,    \/\/ Document declaration, i.e. '<?xml version="1.0"?>'$/;"	e	enum:pugi::xml_node_type
node_doctype	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        node_doctype        \/\/ Document type declaration, i.e. '<!DOCTYPE doc>'$/;"	e	enum:pugi::xml_node_type
node_document	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        node_document,        \/\/ A document tree's absolute root$/;"	e	enum:pugi::xml_node_type
node_element	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        node_element,        \/\/ Element tag, i.e. '<node\/>'$/;"	e	enum:pugi::xml_node_type
node_index	extern/libgit2/src/oid.c	/^typedef short node_index;$/;"	t	typeref:typename:short	file:
node_is_ancestor	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool node_is_ancestor(xml_node_struct* parent, xml_node_struct* node)$/;"	f	typeref:typename:PUGI__FN bool
node_is_before	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool node_is_before(xml_node_struct* ln, xml_node_struct* rn)$/;"	f	typeref:typename:PUGI__FN bool
node_is_before_sibling	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool node_is_before_sibling(xml_node_struct* ln, xml_node_struct* rn)$/;"	f	typeref:typename:PUGI__FN bool
node_null	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        node_null,            \/\/ Empty (null) node handle$/;"	e	enum:pugi::xml_node_type
node_output	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void node_output(xml_buffered_writer& writer, xml_node_struct* root, const char_t* /;"	f	typeref:typename:PUGI__FN void
node_output_attributes	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void node_output_attributes(xml_buffered_writer& writer, xml_node_struct* node, con/;"	f	typeref:typename:PUGI__FN void
node_output_comment	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void node_output_comment(xml_buffered_writer& writer, const char_t* s) {$/;"	f	typeref:typename:PUGI__FN void
node_output_end	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void node_output_end(xml_buffered_writer& writer, xml_node_struct* node) {$/;"	f	typeref:typename:PUGI__FN void
node_output_pi_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void node_output_pi_value(xml_buffered_writer& writer, const char_t* s) {$/;"	f	typeref:typename:PUGI__FN void
node_output_simple	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void node_output_simple(xml_buffered_writer& writer, xml_node_struct* node, unsigne/;"	f	typeref:typename:PUGI__FN void
node_output_start	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool node_output_start(xml_buffered_writer& writer, xml_node_struct* node, const ch/;"	f	typeref:typename:PUGI__FN bool
node_pcdata	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        node_pcdata,        \/\/ Plain character data, i.e. 'text'$/;"	e	enum:pugi::xml_node_type
node_pi	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        node_pi,            \/\/ Processing instruction, i.e. '<?name?>'$/;"	e	enum:pugi::xml_node_type
nodes	extern/libgit2/src/oid.c	/^	trie_node *nodes;$/;"	m	struct:git_oid_shorten	typeref:typename:trie_node *	file:
nodeset_eval_all	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodeset_eval_all,$/;"	e	enum:nodeset_eval_t	file:
nodeset_eval_any	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodeset_eval_any,$/;"	e	enum:nodeset_eval_t	file:
nodeset_eval_first	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodeset_eval_first$/;"	e	enum:nodeset_eval_t	file:
nodeset_eval_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	enum nodeset_eval_t$/;"	g	file:
nodetest	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			const char_t* nodetest;$/;"	m	union:xpath_ast_node::__anonfceed08a070a	typeref:typename:const char_t *	file:
nodetest_all	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodetest_all,$/;"	e	enum:nodetest_t	file:
nodetest_all_in_namespace	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodetest_all_in_namespace$/;"	e	enum:nodetest_t	file:
nodetest_name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodetest_name,$/;"	e	enum:nodetest_t	file:
nodetest_none	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodetest_none,$/;"	e	enum:nodetest_t	file:
nodetest_pi	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodetest_pi,$/;"	e	enum:nodetest_t	file:
nodetest_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	enum nodetest_t$/;"	g	file:
nodetest_type_comment	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodetest_type_comment,$/;"	e	enum:nodetest_t	file:
nodetest_type_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodetest_type_node,$/;"	e	enum:nodetest_t	file:
nodetest_type_pi	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodetest_type_pi,$/;"	e	enum:nodetest_t	file:
nodetest_type_text	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodetest_type_text,$/;"	e	enum:nodetest_t	file:
nomatch_mark	extern/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uchar *nomatch_mark;\/* Mark pointer to pass back on failure *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uchar *
non_existing_tag_ref_name	extern/libgit2/tests/refs/read.c	/^static const char *non_existing_tag_ref_name = "refs\/tags\/i-do-not-exist";$/;"	v	typeref:typename:const char *	file:
nonce	extern/libgit2/deps/ntlmclient/ntlm.h	/^	uint64_t nonce;$/;"	m	struct:__anon8624cbbb0408	typeref:typename:uint64_t
nonce	extern/libgit2/deps/ntlmclient/ntlm.h	/^	uint64_t nonce;$/;"	m	struct:ntlm_client	typeref:typename:uint64_t
nonexistent	extern/libgit2/src/attr_file.h	/^	unsigned int nonexistent:1;$/;"	m	struct:__anon32d629ad0608	typeref:typename:unsigned int:1
nonprintable	extern/libgit2/src/buf_text.h	/^	unsigned int printable, nonprintable; \/* These are just approximations! *\/$/;"	m	struct:__anon6db101b40208	typeref:typename:unsigned int
normal_url_char	extern/libgit2/deps/http-parser/http_parser.c	/^static const uint8_t normal_url_char[32] = {$/;"	v	typeref:typename:const uint8_t[32]	file:
normalize_apply_options	extern/libgit2/src/stash.c	/^static void normalize_apply_options($/;"	f	typeref:typename:void	file:
normalize_checkout_options_for_apply	extern/libgit2/src/rebase.c	/^static void normalize_checkout_options_for_apply($/;"	f	typeref:typename:void	file:
normalize_filemode	extern/libgit2/src/tree.c	/^GIT_INLINE(git_filemode_t) normalize_filemode(git_filemode_t filemode)$/;"	f	typeref:typename:git_filemode_t
normalize_find_opts	extern/libgit2/src/diff_tform.c	/^static int normalize_find_opts($/;"	f	typeref:typename:int	file:
normalize_format_options	extern/libgit2/src/describe.c	/^static int normalize_format_options($/;"	f	typeref:typename:int	file:
normalize_namespace	extern/libgit2/src/notes.c	/^static int normalize_namespace(char **out, git_repository *repo, const char *notes_ref)$/;"	f	typeref:typename:int	file:
normalize_options	extern/libgit2/src/blame.c	/^static int normalize_options($/;"	f	typeref:typename:int	file:
normalize_options	extern/libgit2/src/describe.c	/^static int normalize_options($/;"	f	typeref:typename:int	file:
normalize_section	extern/libgit2/src/config.c	/^static int normalize_section(char *start, char *end)$/;"	f	typeref:typename:int	file:
normalize_space	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN char_t* normalize_space(char_t* buffer)$/;"	f	typeref:typename:PUGI__FN char_t *
not	extern/libgit2/examples/rev-parse.c	/^	int not;$/;"	m	struct:parse_state	typeref:typename:int	file:
not_a_local_branch	extern/libgit2/src/branch.c	/^static int not_a_local_branch(const char *reference_name)$/;"	f	typeref:typename:int	file:
not_equal_to	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct not_equal_to$/;"	s	file:
not_this_one	extern/OpenXLSX/tests/catch/catch.hpp	/^    struct not_this_one {}; \/\/ Tag type for detecting which begin\/ end are being selected$/;"	s	namespace:Catch
notbol	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   notbol;                  \/* NOTBOL flag *\/$/;"	m	struct:match_data	typeref:typename:BOOL
notbol	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u8 notbol;$/;"	m	struct:jit_arguments	typeref:typename:sljit_u8	file:
note_cancel_cb	extern/libgit2/tests/notes/notes.c	/^static int note_cancel_cb($/;"	f	typeref:typename:int	file:
note_create_payload	extern/libgit2/tests/notes/notes.c	/^struct note_create_payload {$/;"	s	file:
note_error_notfound	extern/libgit2/src/notes.c	/^static int note_error_notfound(void)$/;"	f	typeref:typename:int	file:
note_get_default_ref	extern/libgit2/src/notes.c	/^static int note_get_default_ref(char **out, git_repository *repo)$/;"	f	typeref:typename:int	file:
note_list_cb	extern/libgit2/tests/notes/notes.c	/^static int note_list_cb($/;"	f	typeref:typename:int	file:
note_list_create_cb	extern/libgit2/tests/notes/notes.c	/^static int note_list_create_cb($/;"	f	typeref:typename:int	file:
note_lookup	extern/libgit2/src/notes.c	/^static int note_lookup($/;"	f	typeref:typename:int	file:
note_new	extern/libgit2/src/notes.c	/^static int note_new($/;"	f	typeref:typename:int	file:
note_oid	extern/libgit2/tests/notes/notes.c	/^	const char *note_oid;$/;"	m	struct:note_create_payload	typeref:typename:const char *	file:
note_remove	extern/libgit2/src/notes.c	/^static int note_remove($/;"	f	typeref:typename:int	file:
note_sha	extern/libgit2/tests/notes/notes.c	/^	const char *note_sha;$/;"	m	struct:__anon4085ff9a0108	typeref:typename:const char *	file:
note_write	extern/libgit2/src/notes.c	/^static int note_write($/;"	f	typeref:typename:int	file:
notempty	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   notempty;                \/* Empty string match not wanted *\/$/;"	m	struct:match_data	typeref:typename:BOOL
notempty	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u8 notempty;$/;"	m	struct:jit_arguments	typeref:typename:sljit_u8	file:
notempty_atstart	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   notempty_atstart;        \/* Empty string match at start not wanted *\/$/;"	m	struct:match_data	typeref:typename:BOOL
notempty_atstart	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u8 notempty_atstart;$/;"	m	struct:jit_arguments	typeref:typename:sljit_u8	file:
noteol	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   noteol;                  \/* NOTEOL flag *\/$/;"	m	struct:match_data	typeref:typename:BOOL
noteol	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u8 noteol;$/;"	m	struct:jit_arguments	typeref:typename:sljit_u8	file:
notes_ref_lookup	extern/libgit2/src/rebase.c	/^static int notes_ref_lookup(git_buf *out, git_rebase *rebase)$/;"	f	typeref:typename:int	file:
notify_cb	extern/libgit2/include/git2/checkout.h	/^	git_checkout_notify_cb notify_cb;$/;"	m	struct:git_checkout_options	typeref:typename:git_checkout_notify_cb
notify_cb	extern/libgit2/include/git2/diff.h	/^	git_diff_notify_cb   notify_cb;$/;"	m	struct:__anon72022fed0608	typeref:typename:git_diff_notify_cb
notify_cb__basic	extern/libgit2/tests/diff/racediffiter.c	/^static int notify_cb__basic($/;"	f	typeref:typename:int	file:
notify_cb__racy_rmdir	extern/libgit2/tests/diff/racediffiter.c	/^static int notify_cb__racy_rmdir($/;"	f	typeref:typename:int	file:
notify_counter	extern/libgit2/tests/checkout/typechange.c	/^static int notify_counter($/;"	f	typeref:typename:int	file:
notify_counts	extern/libgit2/tests/checkout/typechange.c	/^} notify_counts;$/;"	t	typeref:struct:__anone3edc9c60108	file:
notify_data	extern/libgit2/tests/checkout/index.c	/^struct notify_data {$/;"	s	file:
notify_expected	extern/libgit2/tests/diff/diff_helpers.h	/^} notify_expected;$/;"	t	typeref:struct:__anona765b0910208
notify_flags	extern/libgit2/include/git2/checkout.h	/^	unsigned int notify_flags; \/**< see `git_checkout_notify_t` above *\/$/;"	m	struct:git_checkout_options	typeref:typename:unsigned int
notify_payload	extern/libgit2/include/git2/checkout.h	/^	void *notify_payload;$/;"	m	struct:git_checkout_options	typeref:typename:void *
now_in_ms	extern/libgit2/tests/perf/helper__perf__timer.c	/^static uint32_t now_in_ms(void)$/;"	f	typeref:typename:uint32_t	file:
npaths	extern/libgit2/examples/status.c	/^	int npaths;$/;"	m	struct:opts	typeref:typename:int	file:
nr	extern/libgit2/src/xdiff/xpatience.c	/^	int nr, alloc;$/;"	m	struct:hashmap	typeref:typename:int	file:
nr_alloc	extern/libgit2/src/pack-objects.h	/^	size_t nr_alloc;$/;"	m	struct:git_packbuilder	typeref:typename:size_t
nr_deltified	extern/libgit2/src/pack-objects.h	/^		nr_deltified,$/;"	m	struct:git_packbuilder	typeref:typename:uint32_t
nr_frames	extern/libgit2/src/win32/w32_stack.h	/^	unsigned int nr_frames;$/;"	m	struct:__anon991580660108	typeref:typename:unsigned int
nr_objects	extern/libgit2/src/indexer.c	/^	size_t nr_objects;$/;"	m	struct:git_indexer	typeref:typename:size_t	file:
nr_objects	extern/libgit2/src/pack-objects.h	/^	uint32_t nr_objects,$/;"	m	struct:git_packbuilder	typeref:typename:uint32_t
nr_remaining	extern/libgit2/src/pack-objects.h	/^		nr_remaining;$/;"	m	struct:git_packbuilder	typeref:typename:uint32_t
nr_threads	extern/libgit2/src/pack-objects.h	/^	unsigned int nr_threads; \/* nr of threads to use *\/$/;"	m	struct:git_packbuilder	typeref:typename:unsigned int
nr_written	extern/libgit2/src/pack-objects.h	/^		nr_written,$/;"	m	struct:git_packbuilder	typeref:typename:uint32_t
nread	extern/libgit2/deps/http-parser/http_parser.h	/^  uint32_t nread;          \/* # bytes read in various scenarios *\/$/;"	m	struct:http_parser	typeref:typename:uint32_t
nrec	extern/libgit2/src/xdiff/xdiffi.h	/^	long nrec;$/;"	m	struct:s_diffdata	typeref:typename:long
nrec	extern/libgit2/src/xdiff/xtypes.h	/^	long nrec;$/;"	m	struct:s_xdfile	typeref:typename:long
nreff	extern/libgit2/src/xdiff/xtypes.h	/^	long nreff;$/;"	m	struct:s_xdfile	typeref:typename:long
nsize	extern/libgit2/src/xdiff/xtypes.h	/^	long isize, nsize;$/;"	m	struct:s_chastore	typeref:typename:long
nt	newtype.hpp	/^namespace abo::nt {$/;"	n	namespace:abo
nt	nt.hpp	/^namespace nt {$/;"	n
nt	ntskills.hpp	/^namespace nt {$/;"	n
nth_packed_object_offset	extern/libgit2/src/pack.c	/^static git_off_t nth_packed_object_offset(const struct git_pack_file *p, uint32_t n)$/;"	f	typeref:typename:git_off_t	file:
ntlm	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^	ntlm_client *ntlm;$/;"	m	struct:ntlm_unicode_ctx	typeref:typename:ntlm_client *	file:
ntlm	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^	ntlm_client *ntlm;$/;"	m	struct:ntlm_unicode_ctx	typeref:typename:ntlm_client *	file:
ntlm	extern/libgit2/src/transports/auth_ntlm.c	/^	ntlm_client *ntlm;$/;"	m	struct:__anon2e3324090108	typeref:typename:ntlm_client *	file:
ntlm2_response	extern/libgit2/deps/ntlmclient/ntlm.h	/^	unsigned char *ntlm2_response;$/;"	m	struct:ntlm_client	typeref:typename:unsigned char *
ntlm2_response_len	extern/libgit2/deps/ntlmclient/ntlm.h	/^	size_t ntlm2_response_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
ntlm_buf	extern/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_buf;$/;"	t	typeref:struct:__anon8624cbbb0208
ntlm_challenge	extern/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_challenge;$/;"	t	typeref:struct:__anon8624cbbb0408
ntlm_client	extern/libgit2/deps/ntlmclient/ntlm.h	/^struct ntlm_client {$/;"	s
ntlm_client	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^typedef struct ntlm_client ntlm_client;$/;"	t	typeref:struct:ntlm_client
ntlm_client_challenge_nonce	extern/libgit2/deps/ntlmclient/ntlm.c	/^uint64_t ntlm_client_challenge_nonce(ntlm_client *ntlm)$/;"	f	typeref:typename:uint64_t
ntlm_client_errmsg	extern/libgit2/deps/ntlmclient/ntlm.c	/^const char *ntlm_client_errmsg(ntlm_client *ntlm)$/;"	f	typeref:typename:const char *
ntlm_client_flags	extern/libgit2/deps/ntlmclient/ntlmclient.h	/^} ntlm_client_flags;$/;"	t	typeref:enum:__anon53f50bfa0103
ntlm_client_free	extern/libgit2/deps/ntlmclient/ntlm.c	/^void ntlm_client_free(ntlm_client *ntlm)$/;"	f	typeref:typename:void
ntlm_client_init	extern/libgit2/deps/ntlmclient/ntlm.c	/^ntlm_client *ntlm_client_init(ntlm_client_flags flags)$/;"	f	typeref:typename:ntlm_client *
ntlm_client_internal_flags	extern/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_client_internal_flags;$/;"	t	typeref:enum:__anon8624cbbb0503
ntlm_client_negotiate	extern/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_negotiate($/;"	f	typeref:typename:int
ntlm_client_reset	extern/libgit2/deps/ntlmclient/ntlm.c	/^void ntlm_client_reset(ntlm_client *ntlm)$/;"	f	typeref:typename:void
ntlm_client_response	extern/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_response($/;"	f	typeref:typename:int
ntlm_client_set_challenge	extern/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_challenge($/;"	f	typeref:typename:int
ntlm_client_set_credentials	extern/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_credentials($/;"	f	typeref:typename:int
ntlm_client_set_errmsg	extern/libgit2/deps/ntlmclient/ntlm.c	/^void ntlm_client_set_errmsg(ntlm_client *ntlm, const char *errmsg)$/;"	f	typeref:typename:void
ntlm_client_set_hostname	extern/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_hostname($/;"	f	typeref:typename:int
ntlm_client_set_nonce	extern/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_nonce(ntlm_client *ntlm, uint64_t nonce)$/;"	f	typeref:typename:int
ntlm_client_set_target	extern/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_target(ntlm_client *ntlm, const char *target)$/;"	f	typeref:typename:int
ntlm_client_set_timestamp	extern/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_timestamp(ntlm_client *ntlm, uint64_t timestamp)$/;"	f	typeref:typename:int
ntlm_client_set_version	extern/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_version($/;"	f	typeref:typename:int
ntlm_client_signature	extern/libgit2/deps/ntlmclient/ntlm.c	/^unsigned char ntlm_client_signature[] = NTLM_SIGNATURE;$/;"	v	typeref:typename:unsigned char[]
ntlm_client_target	extern/libgit2/deps/ntlmclient/ntlm.c	/^const char *ntlm_client_target(ntlm_client *ntlm)$/;"	f	typeref:typename:const char *
ntlm_client_target_domain	extern/libgit2/deps/ntlmclient/ntlm.c	/^const char *ntlm_client_target_domain(ntlm_client *ntlm)$/;"	f	typeref:typename:const char *
ntlm_client_target_domain_dns	extern/libgit2/deps/ntlmclient/ntlm.c	/^const char *ntlm_client_target_domain_dns(ntlm_client *ntlm)$/;"	f	typeref:typename:const char *
ntlm_client_target_server	extern/libgit2/deps/ntlmclient/ntlm.c	/^const char *ntlm_client_target_server(ntlm_client *ntlm)$/;"	f	typeref:typename:const char *
ntlm_client_target_server_dns	extern/libgit2/deps/ntlmclient/ntlm.c	/^const char *ntlm_client_target_server_dns(ntlm_client *ntlm)$/;"	f	typeref:typename:const char *
ntlm_context_free	extern/libgit2/src/transports/auth_ntlm.c	/^static void ntlm_context_free(git_http_auth_context *c)$/;"	f	typeref:typename:void	file:
ntlm_des_block	extern/libgit2/deps/ntlmclient/crypt.h	/^typedef unsigned char ntlm_des_block[CRYPT_DES_BLOCKSIZE];$/;"	t	typeref:typename:unsigned char[CRYPT_DES_BLOCKSIZE]
ntlm_des_encrypt	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_des_encrypt($/;"	f	typeref:typename:bool
ntlm_des_encrypt	extern/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_des_encrypt($/;"	f	typeref:typename:bool
ntlm_des_encrypt	extern/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_des_encrypt($/;"	f	typeref:typename:bool
ntlm_hmac_ctx	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.h	/^} ntlm_hmac_ctx;$/;"	t	typeref:struct:__anon2929e89b0108
ntlm_hmac_ctx	extern/libgit2/deps/ntlmclient/crypt_mbedtls.h	/^} ntlm_hmac_ctx;$/;"	t	typeref:struct:__anond124c25c0108
ntlm_hmac_ctx	extern/libgit2/deps/ntlmclient/crypt_openssl.h	/^# define ntlm_hmac_ctx /;"	d
ntlm_hmac_ctx	extern/libgit2/deps/ntlmclient/crypt_openssl.h	/^typedef struct hmac_ctx_st ntlm_hmac_ctx;$/;"	t	typeref:struct:hmac_ctx_st
ntlm_hmac_ctx_free	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^void ntlm_hmac_ctx_free(ntlm_hmac_ctx *ctx)$/;"	f	typeref:typename:void
ntlm_hmac_ctx_free	extern/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^void ntlm_hmac_ctx_free(ntlm_hmac_ctx *ctx)$/;"	f	typeref:typename:void
ntlm_hmac_ctx_free	extern/libgit2/deps/ntlmclient/crypt_openssl.c	/^void ntlm_hmac_ctx_free(ntlm_hmac_ctx *ctx)$/;"	f	typeref:typename:void
ntlm_hmac_ctx_init	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^ntlm_hmac_ctx *ntlm_hmac_ctx_init(void)$/;"	f	typeref:typename:ntlm_hmac_ctx *
ntlm_hmac_ctx_init	extern/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^ntlm_hmac_ctx *ntlm_hmac_ctx_init(void)$/;"	f	typeref:typename:ntlm_hmac_ctx *
ntlm_hmac_ctx_init	extern/libgit2/deps/ntlmclient/crypt_openssl.c	/^ntlm_hmac_ctx *ntlm_hmac_ctx_init(void)$/;"	f	typeref:typename:ntlm_hmac_ctx *
ntlm_hmac_ctx_reset	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_hmac_ctx_reset(ntlm_hmac_ctx *ctx)$/;"	f	typeref:typename:bool
ntlm_hmac_ctx_reset	extern/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_hmac_ctx_reset(ntlm_hmac_ctx *ctx)$/;"	f	typeref:typename:bool
ntlm_hmac_ctx_reset	extern/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_hmac_ctx_reset(ntlm_hmac_ctx *ctx)$/;"	f	typeref:typename:bool
ntlm_hmac_md5_final	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_hmac_md5_final($/;"	f	typeref:typename:bool
ntlm_hmac_md5_final	extern/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_hmac_md5_final($/;"	f	typeref:typename:bool
ntlm_hmac_md5_final	extern/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_hmac_md5_final($/;"	f	typeref:typename:bool
ntlm_hmac_md5_init	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_hmac_md5_init($/;"	f	typeref:typename:bool
ntlm_hmac_md5_init	extern/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_hmac_md5_init($/;"	f	typeref:typename:bool
ntlm_hmac_md5_init	extern/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_hmac_md5_init($/;"	f	typeref:typename:bool
ntlm_hmac_md5_update	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_hmac_md5_update($/;"	f	typeref:typename:bool
ntlm_hmac_md5_update	extern/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_hmac_md5_update($/;"	f	typeref:typename:bool
ntlm_hmac_md5_update	extern/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_hmac_md5_update($/;"	f	typeref:typename:bool
ntlm_init_context	extern/libgit2/src/transports/auth_ntlm.c	/^static int ntlm_init_context($/;"	f	typeref:typename:int	file:
ntlm_is_complete	extern/libgit2/src/transports/auth_ntlm.c	/^static int ntlm_is_complete(git_http_auth_context *c)$/;"	f	typeref:typename:int	file:
ntlm_md4_digest	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_md4_digest($/;"	f	typeref:typename:bool
ntlm_md4_digest	extern/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_md4_digest($/;"	f	typeref:typename:bool
ntlm_md4_digest	extern/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_md4_digest($/;"	f	typeref:typename:bool
ntlm_negotiate_t	extern/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_negotiate_t;$/;"	t	typeref:enum:__anon8624cbbb0703
ntlm_next_token	extern/libgit2/src/transports/auth_ntlm.c	/^static int ntlm_next_token($/;"	f	typeref:typename:int	file:
ntlm_random_bytes	extern/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_random_bytes($/;"	f	typeref:typename:bool
ntlm_random_bytes	extern/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_random_bytes($/;"	f	typeref:typename:bool
ntlm_random_bytes	extern/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_random_bytes($/;"	f	typeref:typename:bool
ntlm_response	extern/libgit2/deps/ntlmclient/ntlm.h	/^	unsigned char ntlm_response[NTLM_NTLM_RESPONSE_LEN];$/;"	m	struct:ntlm_client	typeref:typename:unsigned char[]
ntlm_response_len	extern/libgit2/deps/ntlmclient/ntlm.h	/^	size_t ntlm_response_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
ntlm_set_challenge	extern/libgit2/src/transports/auth_ntlm.c	/^static int ntlm_set_challenge($/;"	f	typeref:typename:int	file:
ntlm_set_credentials	extern/libgit2/src/transports/auth_ntlm.c	/^static int ntlm_set_credentials(http_auth_ntlm_context *ctx, git_cred *_cred)$/;"	f	typeref:typename:int	file:
ntlm_state	extern/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_state;$/;"	t	typeref:enum:__anon8624cbbb0103
ntlm_target_info_type_t	extern/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_target_info_type_t;$/;"	t	typeref:enum:__anon8624cbbb0603
ntlm_unicode_ctx	extern/libgit2/deps/ntlmclient/unicode.h	/^typedef struct ntlm_unicode_ctx ntlm_unicode_ctx;$/;"	t	typeref:struct:ntlm_unicode_ctx
ntlm_unicode_ctx	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^struct ntlm_unicode_ctx {$/;"	s	file:
ntlm_unicode_ctx	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^struct ntlm_unicode_ctx {$/;"	s	file:
ntlm_unicode_ctx_free	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^void ntlm_unicode_ctx_free(ntlm_unicode_ctx *ctx)$/;"	f	typeref:typename:void
ntlm_unicode_ctx_free	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^void ntlm_unicode_ctx_free(ntlm_unicode_ctx *ctx)$/;"	f	typeref:typename:void
ntlm_unicode_ctx_init	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^ntlm_unicode_ctx *ntlm_unicode_ctx_init(ntlm_client *ntlm)$/;"	f	typeref:typename:ntlm_unicode_ctx *
ntlm_unicode_ctx_init	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^ntlm_unicode_ctx *ntlm_unicode_ctx_init(ntlm_client *ntlm)$/;"	f	typeref:typename:ntlm_unicode_ctx *
ntlm_unicode_utf16_to_8	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^bool ntlm_unicode_utf16_to_8($/;"	f	typeref:typename:bool
ntlm_unicode_utf16_to_8	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^bool ntlm_unicode_utf16_to_8($/;"	f	typeref:typename:bool
ntlm_unicode_utf8_to_16	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^bool ntlm_unicode_utf8_to_16($/;"	f	typeref:typename:bool
ntlm_unicode_utf8_to_16	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^bool ntlm_unicode_utf8_to_16($/;"	f	typeref:typename:bool
ntlm_version	extern/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_version;$/;"	t	typeref:struct:__anon8624cbbb0308
ntlmclient	extern/libgit2/deps/ntlmclient/CMakeLists.txt	/^ADD_LIBRARY(ntlmclient OBJECT ${SRC_NTLMCLIENT} ${SRC_NTLMCLIENT_CRYPTO})$/;"	t
nul	extern/libgit2/src/buf_text.h	/^	unsigned int nul, cr, lf, crlf; \/* NUL, CR, LF and CRLF counts *\/$/;"	m	struct:__anon6db101b40208	typeref:typename:unsigned int
nullpad	extern/libgit2/deps/pcre/pcre_internal.h	/^  void             *nullpad;      \/* NULL padding *\/$/;"	m	struct:real_pcre32	typeref:typename:void *
nullpad	extern/libgit2/deps/pcre/pcre_internal.h	/^  void             *nullpad;      \/* NULL padding *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:void *
num_bad_objects	extern/libgit2/src/pack.h	/^	uint32_t num_bad_objects;$/;"	m	struct:git_pack_file	typeref:typename:uint32_t
num_lines	extern/libgit2/examples/tag.c	/^	int num_lines;$/;"	m	struct:__anon8e82c8010108	typeref:typename:int	file:
num_lines	extern/libgit2/include/git2/diff.h	/^	int    num_lines;    \/**< Number of newline characters in content *\/$/;"	m	struct:__anon72022fed0c08	typeref:typename:int
num_lines	extern/libgit2/src/blame.h	/^	int num_lines;$/;"	m	struct:git_blame	typeref:typename:int
num_lines	extern/libgit2/src/blame.h	/^	size_t num_lines;$/;"	m	struct:git_blame__entry	typeref:typename:size_t
num_modified_deltas	extern/libgit2/tests/diff/diff_helpers.c	/^static size_t num_modified_deltas(git_diff *diff)$/;"	f	typeref:typename:size_t	file:
num_objects	extern/libgit2/src/pack.h	/^	uint32_t num_objects;$/;"	m	struct:git_pack_file	typeref:typename:uint32_t
number	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			double number;$/;"	m	union:xpath_ast_node::__anonfceed08a070a	typeref:typename:double	file:
number	extern/libgit2/deps/pcre/pcre_exec.c	/^#define number /;"	d	file:
number	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 number;           \/* Capture number *\/$/;"	m	struct:open_capitem	typeref:typename:pcre_uint16
number	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32        number;        \/* Group number *\/$/;"	m	struct:named_group	typeref:typename:pcre_uint32
number_name	extern/libgit2/src/date.c	/^static const char *number_name[] = {$/;"	v	typeref:typename:const char * []	file:
obj	extern/libgit2/tests/checkout/icase.c	/^static git_object *obj;$/;"	v	typeref:typename:git_object *	file:
obj_	function_ref.hpp	/^  void *obj_ = nullptr;$/;"	m	struct:abo::function_ref	typeref:typename:void *
obj_hdr	extern/libgit2/src/odb_loose.c	/^} obj_hdr;$/;"	t	typeref:struct:__anon81c02f840108	file:
objbuf	extern/libgit2/src/indexer.c	/^	char objbuf[8*1024];$/;"	m	struct:git_indexer	typeref:typename:char[]	file:
object	extern/libgit2/src/blob.h	/^	git_object object;$/;"	m	struct:git_blob	typeref:typename:git_object
object	extern/libgit2/src/commit.h	/^	git_object object;$/;"	m	struct:git_commit	typeref:typename:git_object
object	extern/libgit2/src/pack-objects.c	/^	git_pobject *object;$/;"	m	struct:unpacked	typeref:typename:git_pobject *	file:
object	extern/libgit2/src/tag.h	/^	git_object object;$/;"	m	struct:git_tag	typeref:typename:git_object
object	extern/libgit2/src/tree.h	/^	git_object object;$/;"	m	struct:git_tree	typeref:typename:git_object
object_data	extern/libgit2/tests/object/raw/write.c	/^typedef struct object_data {$/;"	s	file:
object_data	extern/libgit2/tests/object/raw/write.c	/^} object_data;$/;"	t	typeref:struct:object_data	file:
object_data	extern/libgit2/tests/odb/loose_data.h	/^typedef struct object_data {$/;"	s
object_data	extern/libgit2/tests/odb/loose_data.h	/^} object_data;$/;"	t	typeref:struct:object_data
object_database	extern/libgit2/examples/general.c	/^static void object_database(git_repository *repo, git_oid *oid)$/;"	f	typeref:typename:void	file:
object_dir_mode	extern/libgit2/src/odb_loose.c	/^	mode_t object_dir_mode;$/;"	m	struct:loose_backend	typeref:typename:mode_t	file:
object_file_mode	extern/libgit2/src/odb_loose.c	/^	mode_t object_file_mode;$/;"	m	struct:loose_backend	typeref:typename:mode_t	file:
object_file_name	extern/libgit2/src/odb_loose.c	/^static int object_file_name($/;"	f	typeref:typename:int	file:
object_from_reference	extern/libgit2/src/revparse.c	/^static int object_from_reference(git_object **object, git_reference *reference)$/;"	f	typeref:typename:int	file:
object_ix	extern/libgit2/src/pack-objects.h	/^	git_oidmap *object_ix;$/;"	m	struct:git_packbuilder	typeref:typename:git_oidmap *
object_list	extern/libgit2/src/pack-objects.h	/^	git_pobject *object_list;$/;"	m	struct:git_packbuilder	typeref:typename:git_pobject *
object_mkdir	extern/libgit2/src/odb_loose.c	/^static int object_mkdir(const git_buf *name, const loose_backend *be)$/;"	f	typeref:typename:int	file:
object_oid	extern/libgit2/tests/notes/notes.c	/^	const char *object_oid;$/;"	m	struct:note_create_payload	typeref:typename:const char *	file:
object_pool	extern/libgit2/src/pack-objects.h	/^	git_pool object_pool;$/;"	m	struct:git_packbuilder	typeref:typename:git_pool
object_type	extern/libgit2/tests/object/cache.c	/^static int object_type;$/;"	v	typeref:typename:int	file:
object_zlib_level	extern/libgit2/src/odb_loose.c	/^	int object_zlib_level; \/** loose object zlib compression level. *\/$/;"	m	struct:loose_backend	typeref:typename:int	file:
objects	extern/libgit2/src/indexer.c	/^	git_vector objects;$/;"	m	struct:git_indexer	typeref:typename:git_vector	file:
objects	extern/libgit2/src/odb_mempack.c	/^	git_oidmap *objects;$/;"	m	struct:memory_packer_db	typeref:typename:git_oidmap *	file:
objects	extern/libgit2/src/repository.h	/^	git_cache objects;$/;"	m	struct:git_repository	typeref:typename:git_cache
objects	extern/libgit2/tests/odb/backend/backend_helpers.h	/^	const fake_object *objects;$/;"	m	struct:__anon7ee03db30208	typeref:typename:const fake_object *
objects_cmp	extern/libgit2/src/indexer.c	/^static int objects_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
objects_dir	extern/libgit2/src/odb_loose.c	/^	char objects_dir[GIT_FLEX_ARRAY];$/;"	m	struct:loose_backend	typeref:typename:char[]	file:
objects_dirlen	extern/libgit2/src/odb_loose.c	/^	size_t objects_dirlen;$/;"	m	struct:loose_backend	typeref:typename:size_t	file:
oc	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  } oc;$/;"	m	struct:compare_context	typeref:union:compare_context::__anon313b80c3050a	file:
occhars	extern/libgit2/deps/pcre/pcre_exec.c	/^#define occhars /;"	d	file:
oclength	extern/libgit2/deps/pcre/pcre_exec.c	/^#define oclength /;"	d	file:
odb	extern/libgit2/fuzzers/packfile_fuzzer.c	/^static git_odb *odb = NULL;$/;"	v	typeref:typename:git_odb *	file:
odb	extern/libgit2/include/git2/sys/odb_backend.h	/^	git_odb *odb;$/;"	m	struct:git_odb_backend	typeref:typename:git_odb *
odb	extern/libgit2/src/blob.h	/^		git_odb_object *odb;$/;"	m	union:git_blob::__anon5d2cee12010a	typeref:typename:git_odb_object *
odb	extern/libgit2/src/indexer.c	/^	git_odb *odb;$/;"	m	struct:git_indexer	typeref:typename:git_odb *	file:
odb	extern/libgit2/src/pack-objects.h	/^	git_odb *odb; \/* associated object database *\/$/;"	m	struct:git_packbuilder	typeref:typename:git_odb *
odb	extern/libgit2/src/revwalk.h	/^	git_odb *odb;$/;"	m	struct:git_revwalk	typeref:typename:git_odb *
odb	extern/libgit2/tests/odb/freshen.c	/^static git_odb *odb;$/;"	v	typeref:typename:git_odb *	file:
odb	extern/libgit2/tests/odb/largefiles.c	/^static git_odb *odb;$/;"	v	typeref:typename:git_odb *	file:
odb	extern/libgit2/tests/odb/streamwrite.c	/^static git_odb *odb;$/;"	v	typeref:typename:git_odb *	file:
odb_cache	extern/libgit2/src/odb.c	/^static git_cache *odb_cache(git_odb *odb)$/;"	f	typeref:typename:git_cache *	file:
odb_dir	extern/libgit2/tests/object/raw/write.c	/^static const char *odb_dir = "test-objects";$/;"	v	typeref:typename:const char *	file:
odb_exists_1	extern/libgit2/src/odb.c	/^static int odb_exists_1($/;"	f	typeref:typename:int	file:
odb_exists_prefix_1	extern/libgit2/src/odb.c	/^static int odb_exists_prefix_1(git_oid *out, git_odb *db,$/;"	f	typeref:typename:int	file:
odb_free	extern/libgit2/src/odb.c	/^static void odb_free(git_odb *db)$/;"	f	typeref:typename:void	file:
odb_freshen_1	extern/libgit2/src/odb.c	/^static int odb_freshen_1($/;"	f	typeref:typename:int	file:
odb_hardcoded_type	extern/libgit2/src/odb.c	/^static git_object_t odb_hardcoded_type(const git_oid *id)$/;"	f	typeref:typename:git_object_t	file:
odb_obj	extern/libgit2/src/diff_tform.c	/^	git_odb_object *odb_obj;$/;"	m	struct:__anone5feb9ce0108	typeref:typename:git_odb_object *	file:
odb_obj	extern/libgit2/src/tree.h	/^	git_odb_object *odb_obj;$/;"	m	struct:git_tree	typeref:typename:git_odb_object *
odb_object__alloc	extern/libgit2/src/odb.c	/^static git_odb_object *odb_object__alloc(const git_oid *oid, git_rawobj *source)$/;"	f	typeref:typename:git_odb_object *	file:
odb_otype_fast	extern/libgit2/src/odb.c	/^static int odb_otype_fast(git_object_t *type_p, git_odb *db, const git_oid *id)$/;"	f	typeref:typename:int	file:
odb_read_1	extern/libgit2/src/odb.c	/^static int odb_read_1(git_odb_object **out, git_odb *db, const git_oid *id,$/;"	f	typeref:typename:int	file:
odb_read_hardcoded	extern/libgit2/src/odb.c	/^static int odb_read_hardcoded(bool *found, git_rawobj *raw, const git_oid *id)$/;"	f	typeref:typename:int	file:
odb_read_header_1	extern/libgit2/src/odb.c	/^static int odb_read_header_1($/;"	f	typeref:typename:int	file:
odd	extern/libgit2/tests/core/dirent.c	/^static walk_data odd = {$/;"	v	typeref:typename:walk_data	file:
odd_names	extern/libgit2/tests/core/dirent.c	/^static name_data odd_names[] = {$/;"	v	typeref:typename:name_data[]	file:
off	extern/libgit2/deps/http-parser/http_parser.h	/^    uint16_t off;               \/* Offset into buffer in which field starts *\/$/;"	m	struct:http_parser_url::__anonb6e7d14c0108	typeref:typename:uint16_t
off	extern/libgit2/src/indexer.c	/^	git_off_t off;$/;"	m	struct:git_indexer	typeref:typename:git_off_t	file:
offset	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        ptrdiff_t offset;$/;"	m	struct:pugi::xml_parse_result	typeref:typename:ptrdiff_t
offset	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        ptrdiff_t offset;$/;"	m	struct:pugi::xpath_parse_result	typeref:typename:ptrdiff_t
offset	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^  int offset;                     \/* Offset to opcode *\/$/;"	m	struct:stateblock	typeref:typename:int	file:
offset	extern/libgit2/deps/pcre/pcre_exec.c	/^#define offset /;"	d	file:
offset	extern/libgit2/deps/zlib/inflate.h	/^    unsigned offset;            \/* distance back to copy string from *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
offset	extern/libgit2/include/git2/types.h	/^	int offset; \/**< timezone offset, in minutes *\/$/;"	m	struct:git_time	typeref:typename:int
offset	extern/libgit2/src/date.c	/^	int offset;$/;"	m	struct:__anon6112fc6c0208	typeref:typename:int	file:
offset	extern/libgit2/src/indexer.c	/^	uint32_t offset;$/;"	m	struct:entry	typeref:typename:uint32_t	file:
offset	extern/libgit2/src/mwindow.h	/^	git_off_t offset;$/;"	m	struct:git_mwindow	typeref:typename:git_off_t
offset	extern/libgit2/src/netops.h	/^	size_t offset;$/;"	m	struct:gitno_buffer	typeref:typename:size_t
offset	extern/libgit2/src/pack-objects.h	/^	git_off_t offset;$/;"	m	struct:git_pobject	typeref:typename:git_off_t
offset	extern/libgit2/src/pack.h	/^	git_off_t offset;$/;"	m	struct:git_pack_entry	typeref:typename:git_off_t
offset	extern/libgit2/src/pack.h	/^	git_off_t offset;$/;"	m	struct:pack_chain_elem	typeref:typename:git_off_t
offset	extern/libgit2/src/sortedcache.c	/^	size_t offset;$/;"	m	struct:sortedcache_magic_key	typeref:typename:size_t	file:
offset	extern/libgit2/tests/commit/parse.c	/^	int offset;$/;"	m	struct:__anond44356cc0208	typeref:typename:int	file:
offset_count	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int offset_count;$/;"	m	struct:jit_arguments	typeref:typename:int	file:
offset_debug	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN ptrdiff_t xml_node::offset_debug() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN ptrdiff_t
offset_end	extern/libgit2/deps/pcre/pcre_internal.h	/^  int    offset_end;              \/* One past the end *\/$/;"	m	struct:match_data	typeref:typename:int
offset_long	extern/libgit2/src/indexer.c	/^	uint64_t offset_long;$/;"	m	struct:entry	typeref:typename:uint64_t	file:
offset_max	extern/libgit2/deps/pcre/pcre_internal.h	/^  int    offset_max;              \/* The maximum usable for return data *\/$/;"	m	struct:match_data	typeref:typename:int
offset_save	extern/libgit2/deps/pcre/pcre_internal.h	/^  int *offset_save;               \/* Pointer to start of saved offsets *\/$/;"	m	struct:recursion_info	typeref:typename:int *
offset_top	extern/libgit2/deps/pcre/pcre_exec.c	/^#define offset_top /;"	d	file:
offset_vector	extern/libgit2/deps/pcre/pcre.h	/^  int         *offset_vector;     \/* The offset vector *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int *
offset_vector	extern/libgit2/deps/pcre/pcre.h	/^  int         *offset_vector;     \/* The offset vector *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int *
offset_vector	extern/libgit2/deps/pcre/pcre.h	/^  int         *offset_vector;     \/* The offset vector *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int *
offset_vector	extern/libgit2/deps/pcre/pcre_internal.h	/^  int   *offset_vector;           \/* Offset vector *\/$/;"	m	struct:match_data	typeref:typename:int *
offsets	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int *offsets;$/;"	m	struct:jit_arguments	typeref:typename:int *	file:
offsetsFromUTF8	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^static const UTF32 offsetsFromUTF8[6] = {$/;"	v	typeref:typename:const UTF32[6]	file:
ofile	extern/libgit2/src/patch_generate.h	/^	git_diff_file_content ofile;$/;"	m	struct:git_patch_generated	typeref:typename:git_diff_file_content
ofs_delta	extern/libgit2/src/transports/smart.h	/^		ofs_delta:1,$/;"	m	struct:transport_smart_caps	typeref:typename:int:1
oid	extern/libgit2/include/git2/net.h	/^	git_oid oid;$/;"	m	struct:git_remote_head	typeref:typename:git_oid
oid	extern/libgit2/include/git2/sys/index.h	/^	git_oid oid[3];$/;"	m	struct:git_index_reuc_entry	typeref:typename:git_oid[3]
oid	extern/libgit2/src/attr_file.h	/^		git_oid oid;$/;"	m	union:__anon32d629ad0608::__anon32d629ad070a	typeref:typename:git_oid
oid	extern/libgit2/src/cache.h	/^	git_oid    oid;$/;"	m	struct:__anon354735470208	typeref:typename:git_oid
oid	extern/libgit2/src/commit_list.h	/^	git_oid oid;$/;"	m	struct:git_commit_list_node	typeref:typename:git_oid
oid	extern/libgit2/src/fetchhead.h	/^	git_oid oid;$/;"	m	struct:git_fetchhead_ref	typeref:typename:git_oid
oid	extern/libgit2/src/filter.c	/^	git_oid         oid;  \/* zero if unknown (which is likely) *\/$/;"	m	struct:git_filter_source	typeref:typename:git_oid	file:
oid	extern/libgit2/src/index.c	/^	git_oid oid;$/;"	m	struct:entry_long	typeref:typename:git_oid	file:
oid	extern/libgit2/src/index.c	/^	git_oid oid;$/;"	m	struct:entry_short	typeref:typename:git_oid	file:
oid	extern/libgit2/src/indexer.c	/^	git_oid oid;$/;"	m	struct:entry	typeref:typename:git_oid	file:
oid	extern/libgit2/src/odb_mempack.c	/^	git_oid oid;$/;"	m	struct:memobject	typeref:typename:git_oid	file:
oid	extern/libgit2/src/refdb_fs.c	/^	git_oid oid;$/;"	m	struct:packref	typeref:typename:git_oid	file:
oid	extern/libgit2/src/refs.h	/^		git_oid oid;$/;"	m	union:git_reference::__anon81fc2583010a	typeref:typename:git_oid
oid	extern/libgit2/src/transports/auth_negotiate.c	/^	gss_OID oid;$/;"	m	struct:__anon8bc72ece0108	typeref:typename:gss_OID	file:
oid	extern/libgit2/src/transports/smart.h	/^	git_oid oid;$/;"	m	struct:__anoncc6f59690408	typeref:typename:git_oid
oid	extern/libgit2/src/tree-cache.h	/^	git_oid oid;$/;"	m	struct:git_tree_cache	typeref:typename:git_oid
oid	extern/libgit2/src/tree.h	/^	const git_oid *oid;$/;"	m	struct:git_tree_entry	typeref:typename:const git_oid *
oid	extern/libgit2/tests/core/oidmap.c	/^	git_oid oid;$/;"	m	struct:__anon5111880b0108	typeref:typename:git_oid	file:
oid	extern/libgit2/tests/object/tree/parse.c	/^	const char *oid;$/;"	m	struct:__anonc4c32e390108	typeref:typename:const char *	file:
oid	extern/libgit2/tests/odb/backend/backend_helpers.h	/^	const char *oid;$/;"	m	struct:__anon7ee03db30108	typeref:typename:const char *
oid	extern/libgit2/tests/online/push_util.h	/^	const git_oid *oid;$/;"	m	struct:__anon56a1c92f0308	typeref:typename:const git_oid *
oidFromStr	main.cpp	/^static auto oidFromStr = make2(git_oid_fromstr);$/;"	v	typeref:typename:auto	file:
oid_calculations	extern/libgit2/include/git2/sys/diff.h	/^	size_t oid_calculations; \/**< Number of ID calculations *\/$/;"	m	struct:__anon7e7f02bb0108	typeref:typename:size_t
oid_cur	extern/libgit2/src/reflog.h	/^	git_oid oid_cur;$/;"	m	struct:git_reflog_entry	typeref:typename:git_oid
oid_error_invalid	extern/libgit2/src/oid.c	/^static int oid_error_invalid(const char *msg)$/;"	f	typeref:typename:int	file:
oid_fmt	extern/libgit2/src/global.h	/^	char oid_fmt[GIT_OID_HEXSZ+1];$/;"	m	struct:__anonf985f1a40108	typeref:typename:char[]
oid_old	extern/libgit2/src/reflog.h	/^	git_oid oid_old;$/;"	m	struct:git_reflog_entry	typeref:typename:git_oid
oid_parsing	extern/libgit2/examples/general.c	/^static void oid_parsing(git_oid *oid)$/;"	f	typeref:typename:void	file:
oid_str	extern/libgit2/tests/checkout/conflict.c	/^	char oid_str[GIT_OID_HEXSZ+1];$/;"	m	struct:checkout_index_entry	typeref:typename:char[]	file:
oid_str	extern/libgit2/tests/merge/merge_helpers.h	/^	char oid_str[GIT_OID_HEXSZ+1];$/;"	m	struct:merge_index_entry	typeref:typename:char[]
oid_str	extern/libgit2/tests/merge/workdir/setup.c	/^	const char **oid_str;$/;"	m	struct:annotated_commit_cb_data	typeref:typename:const char **	file:
oidmap_value_bykey	extern/libgit2/src/describe.c	/^static void *oidmap_value_bykey(git_oidmap *map, const git_oid *key)$/;"	f	typeref:typename:void *	file:
oids	extern/libgit2/src/pack.h	/^	git_oid **oids;$/;"	m	struct:git_pack_file	typeref:typename:git_oid **
oids	extern/libgit2/tests/stash/foreach.c	/^	char **oids;$/;"	m	struct:callback_data	typeref:typename:char **	file:
oitem	extern/libgit2/src/diff_generate.c	/^	const git_index_entry *oitem;$/;"	m	struct:__anon047407f10208	typeref:typename:const git_index_entry *	file:
ok	extern/libgit2/src/push.h	/^	bool ok;$/;"	m	struct:push_status	typeref:typename:bool
ok_pkt	extern/libgit2/src/transports/smart_pkt.c	/^static int ok_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
old_binary_base85	extern/libgit2/tests/diff/binary.c	/^	git_buf old_binary_base85;$/;"	m	struct:diff_data	typeref:typename:git_buf	file:
old_binary_inflatedlen	extern/libgit2/tests/diff/binary.c	/^	size_t old_binary_inflatedlen;$/;"	m	struct:diff_data	typeref:typename:size_t	file:
old_binary_type	extern/libgit2/tests/diff/binary.c	/^	git_diff_binary_t old_binary_type;$/;"	m	struct:diff_data	typeref:typename:git_diff_binary_t	file:
old_entries	extern/libgit2/src/index.c	/^	git_vector *old_entries;$/;"	m	struct:read_tree_data	typeref:typename:git_vector *	file:
old_file	extern/libgit2/include/git2/diff.h	/^	git_diff_binary_file old_file; \/**< The contents of the old file. *\/$/;"	m	struct:__anon72022fed0908	typeref:typename:git_diff_binary_file
old_file	extern/libgit2/include/git2/diff.h	/^	git_diff_file old_file;$/;"	m	struct:__anon72022fed0508	typeref:typename:git_diff_file
old_id	extern/libgit2/tests/diff/binary.c	/^	git_oid old_id;$/;"	m	struct:diff_data	typeref:typename:git_oid	file:
old_iter	extern/libgit2/src/diff_generate.c	/^	git_iterator *old_iter;$/;"	m	struct:__anon047407f10208	typeref:typename:git_iterator *	file:
old_len	extern/libgit2/src/config.c	/^	size_t old_len;$/;"	m	struct:rename_data	typeref:typename:size_t	file:
old_lineno	extern/libgit2/include/git2/diff.h	/^	int    old_lineno;   \/**< Line number in old file or -1 for added line *\/$/;"	m	struct:__anon72022fed0c08	typeref:typename:int
old_lineno	extern/libgit2/src/diff_xdiff.c	/^	int old_lineno, new_lineno;$/;"	m	struct:__anon14ca16370108	typeref:typename:int	file:
old_lines	extern/libgit2/include/git2/diff.h	/^	int    old_lines;     \/**< Number of lines in old_file *\/$/;"	m	struct:__anon72022fed0a08	typeref:typename:int
old_locales	extern/libgit2/tests/core/posix.c	/^static const char *old_locales[LC_ALL];$/;"	v	typeref:typename:const char * []	file:
old_name	extern/libgit2/src/refs.c	/^    const char *old_name;$/;"	m	struct:__anon81fc257e0208	typeref:typename:const char *	file:
old_oid	extern/libgit2/tests/online/push_util.h	/^	git_oid old_oid;$/;"	m	struct:__anon56a1c92f0108	typeref:typename:git_oid
old_path	extern/libgit2/src/patch_parse.c	/^	char *old_path, *new_path;$/;"	m	struct:__anonadbd87d80108	typeref:typename:char *	file:
old_path	extern/libgit2/tests/diff/binary.c	/^	char *old_path;$/;"	m	struct:diff_data	typeref:typename:char *	file:
old_prefix	extern/libgit2/include/git2/diff.h	/^	const char *old_prefix;$/;"	m	struct:__anon72022fed0608	typeref:typename:const char *
old_prefix	extern/libgit2/src/diff_print.c	/^	const char *old_prefix;$/;"	m	struct:__anoncda507930108	typeref:typename:const char *	file:
old_prefix	extern/libgit2/src/patch_parse.c	/^	char *old_prefix, *new_prefix;$/;"	m	struct:__anonadbd87d80108	typeref:typename:char *	file:
old_remote_name	extern/libgit2/src/remote.c	/^	const char *old_remote_name;$/;"	m	struct:update_data	typeref:typename:const char *	file:
old_src	extern/libgit2/src/diff.h	/^	git_iterator_type_t old_src;$/;"	m	struct:git_diff	typeref:typename:git_iterator_type_t
old_start	extern/libgit2/include/git2/diff.h	/^	int    old_start;     \/**< Starting line number in old_file *\/$/;"	m	struct:__anon72022fed0a08	typeref:typename:int
oldest_commit	extern/libgit2/include/git2/blame.h	/^	git_oid oldest_commit;$/;"	m	struct:git_blame_options	typeref:typename:git_oid
oldname	extern/libgit2/tests/status/renames.c	/^	const char *oldname;$/;"	m	struct:status_entry	typeref:typename:const char *	file:
on_auth_required	extern/libgit2/src/transports/http.c	/^static int on_auth_required($/;"	f	typeref:typename:int	file:
on_auth_success	extern/libgit2/src/transports/http.c	/^static void on_auth_success(http_server *server)$/;"	f	typeref:typename:void	file:
on_body	extern/libgit2/deps/http-parser/http_parser.h	/^  http_data_cb on_body;$/;"	m	struct:http_parser_settings	typeref:typename:http_data_cb
on_body_fill_buffer	extern/libgit2/src/transports/http.c	/^static int on_body_fill_buffer(http_parser *parser, const char *str, size_t len)$/;"	f	typeref:typename:int	file:
on_disk	extern/libgit2/src/index.h	/^	unsigned int on_disk:1;$/;"	m	struct:git_index	typeref:typename:unsigned int:1
on_dup_entry	extern/libgit2/src/tree.c	/^static int on_dup_entry(void **old, void *new)$/;"	f	typeref:typename:int	file:
on_header_field	extern/libgit2/deps/http-parser/http_parser.h	/^  http_data_cb on_header_field;$/;"	m	struct:http_parser_settings	typeref:typename:http_data_cb
on_header_field	extern/libgit2/src/transports/http.c	/^static int on_header_field(http_parser *parser, const char *str, size_t len)$/;"	f	typeref:typename:int	file:
on_header_ready	extern/libgit2/src/transports/http.c	/^static int on_header_ready(http_subtransport *t)$/;"	f	typeref:typename:int	file:
on_header_value	extern/libgit2/deps/http-parser/http_parser.h	/^  http_data_cb on_header_value;$/;"	m	struct:http_parser_settings	typeref:typename:http_data_cb
on_header_value	extern/libgit2/src/transports/http.c	/^static int on_header_value(http_parser *parser, const char *str, size_t len)$/;"	f	typeref:typename:int	file:
on_headers_complete	extern/libgit2/deps/http-parser/http_parser.h	/^  http_cb      on_headers_complete;$/;"	m	struct:http_parser_settings	typeref:typename:http_cb
on_headers_complete	extern/libgit2/src/transports/http.c	/^static int on_headers_complete(http_parser *parser)$/;"	f	typeref:typename:int	file:
on_message_begin	extern/libgit2/deps/http-parser/http_parser.h	/^  http_cb      on_message_begin;$/;"	m	struct:http_parser_settings	typeref:typename:http_cb
on_message_complete	extern/libgit2/deps/http-parser/http_parser.h	/^  http_cb      on_message_complete;$/;"	m	struct:http_parser_settings	typeref:typename:http_cb
on_message_complete	extern/libgit2/src/transports/http.c	/^static int on_message_complete(http_parser *parser)$/;"	f	typeref:typename:int	file:
on_url	extern/libgit2/deps/http-parser/http_parser.h	/^  http_data_cb on_url;$/;"	m	struct:http_parser_settings	typeref:typename:http_data_cb
once_target	extern/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uchar *once_target; \/* Where to back up to for atomic groups *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uchar *
one	extern/libgit2/tests/odb/loose_data.h	/^static object_data one = {$/;"	v	typeref:typename:object_data
oneValueArgs	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^    set(oneValueArgs NAME DESCRIPTION VERSION FILENAME LIBS_SELF)$/;"	v	function:pkg_build_config
one_blob_and_one_tree	extern/libgit2/tests/object/tree/duplicateentries.c	/^static void one_blob_and_one_tree(git_treebuilder *bld)$/;"	f	typeref:typename:void	file:
one_bytes	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char one_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
one_data	extern/libgit2/tests/object/raw/data.h	/^static unsigned char one_data[] = {$/;"	v	typeref:typename:unsigned char[]
one_data	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char one_data[] = {$/;"	v	typeref:typename:unsigned char[]
one_entry	extern/libgit2/tests/core/dirent.c	/^static int one_entry(void *state, git_buf *path)$/;"	f	typeref:typename:int	file:
one_id	extern/libgit2/tests/object/raw/data.h	/^static char *one_id = "8b137891791fe96927ad78e64b0aad7bded08bdc";$/;"	v	typeref:typename:char *
one_obj	extern/libgit2/tests/object/raw/data.h	/^static git_rawobj one_obj = {$/;"	v	typeref:typename:git_rawobj
one_to_two	extern/libgit2/src/checkout.c	/^		one_to_two:1,$/;"	m	struct:__anonbac5d6240308	typeref:typename:int:1	file:
only_follow_first_parent	extern/libgit2/include/git2/describe.h	/^	int only_follow_first_parent;$/;"	m	struct:git_describe_options	typeref:typename:int
only_spaces_and_dots	extern/libgit2/src/path.c	/^GIT_INLINE(bool) only_spaces_and_dots(const char *path)$/;"	f	typeref:typename:bool
onto_id	extern/libgit2/src/rebase.c	/^	git_oid onto_id;$/;"	m	struct:git_rebase	typeref:typename:git_oid	file:
onto_name	extern/libgit2/src/rebase.c	/^	char *onto_name;$/;"	m	struct:git_rebase	typeref:typename:char *	file:
oom	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool oom;$/;"	m	struct:xpath_query_impl	typeref:typename:bool	file:
oom	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool oom;$/;"	m	struct:xpath_stack_data	typeref:typename:bool	file:
oom	extern/libgit2/src/errors.h	/^	unsigned int oom : 1;$/;"	m	struct:__anonf6d3dd100108	typeref:typename:unsigned int:1
oom_alloc	extern/libgit2/tests/buf/oom.c	/^static git_allocator oom_alloc;$/;"	v	typeref:typename:git_allocator	file:
oom_malloc	extern/libgit2/tests/buf/oom.c	/^static void *oom_malloc(size_t n, const char *file, int line)$/;"	f	typeref:typename:void *	file:
oom_realloc	extern/libgit2/tests/buf/oom.c	/^static void *oom_realloc(void *p, size_t n, const char *file, int line)$/;"	f	typeref:typename:void *	file:
op	extern/libgit2/deps/pcre/pcre_compile.c	/^  int   op;                  \/* Op when no arg, or -1 if arg mandatory *\/$/;"	m	struct:verbitem	typeref:typename:int	file:
op	extern/libgit2/deps/pcre/pcre_exec.c	/^#define op /;"	d	file:
op	extern/libgit2/deps/zlib/inftrees.h	/^    unsigned char op;           \/* operation, extra bits, table bits *\/$/;"	m	struct:__anon807a30970108	typeref:typename:unsigned char
op_arg	extern/libgit2/deps/pcre/pcre_compile.c	/^  int   op_arg;              \/* Op when arg present, or -1 if not allowed *\/$/;"	m	struct:verbitem	typeref:typename:int	file:
opaque	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    void* opaque;         \/* heap alloc function user pointer *\/$/;"	m	struct:mz_stream_s	typeref:typename:void *
opaque	extern/libgit2/deps/zlib/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s	typeref:typename:voidpf
opcode_possessify	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 opcode_possessify[] = {$/;"	v	typeref:typename:const pcre_uint8[]	file:
open	extern/libgit2/deps/zlib/gzguts.h	/^#  define open /;"	d
open	extern/libgit2/examples/common.h	/^# define open /;"	d
open	extern/libgit2/src/checkout.c	/^	int open;$/;"	m	struct:checkout_stream	typeref:typename:int	file:
openLarge	extern/OpenXLSX/benchmark/Benchmark.cpp	/^void openLarge() {$/;"	f	typeref:typename:void
openRepository	main.cpp	/^static auto openRepository = make(git_repository_open, git_repository_free);$/;"	v	typeref:typename:auto	file:
open_algorithm_provider	extern/libgit2/src/hash/sha1/win32.h	/^	hash_win32_cng_open_algorithm_provider_fn open_algorithm_provider;$/;"	m	struct:hash_cng_prov	typeref:typename:hash_win32_cng_open_algorithm_provider_fn
open_capitem	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct open_capitem {$/;"	s
open_capitem	extern/libgit2/deps/pcre/pcre_internal.h	/^} open_capitem;$/;"	t	typeref:struct:open_capitem
open_caps	extern/libgit2/deps/pcre/pcre_internal.h	/^  open_capitem *open_caps;          \/* Chain of open capture items *\/$/;"	m	struct:compile_data	typeref:typename:open_capitem *
open_file_wide	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	f	typeref:typename:PUGI__FN FILE *
open_file_wide	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN FILE* open_file_wide(const wchar_t* path, const wchar_t* mode) {$/;"	f	typeref:typename:PUGI__FN FILE *
open_gitmodules	extern/libgit2/src/submodule.c	/^static git_config_backend *open_gitmodules($/;"	f	typeref:typename:git_config_backend *	file:
open_once	extern/libgit2/src/win32/posix_w32.c	/^GIT_INLINE(int) open_once($/;"	f	typeref:typename:int
open_opts	extern/libgit2/src/win32/posix_w32.c	/^struct open_opts {$/;"	s	file:
open_opts_from_posix	extern/libgit2/src/win32/posix_w32.c	/^GIT_INLINE(void) open_opts_from_posix(struct open_opts *opts, int flags, mode_t mode)$/;"	f	typeref:typename:void
open_windows	extern/libgit2/src/mwindow.h	/^	unsigned int open_windows;$/;"	m	struct:git_mwindow_ctl	typeref:typename:unsigned int
open_worktree_dir	extern/libgit2/src/worktree.c	/^static int open_worktree_dir(git_worktree **out, const char *parent, const char *dir, const char/;"	f	typeref:typename:int	file:
opendir	extern/libgit2/src/win32/dir.h	/^#	define opendir	/;"	d
openssl_certificate	extern/libgit2/src/streams/openssl.c	/^static int openssl_certificate(git_cert **out, git_stream *stream)$/;"	f	typeref:typename:int	file:
openssl_close	extern/libgit2/src/streams/openssl.c	/^static int openssl_close(git_stream *stream)$/;"	f	typeref:typename:int	file:
openssl_connect	extern/libgit2/src/streams/openssl.c	/^static int openssl_connect(git_stream *stream)$/;"	f	typeref:typename:int	file:
openssl_free	extern/libgit2/src/streams/openssl.c	/^static void openssl_free(git_stream *stream)$/;"	f	typeref:typename:void	file:
openssl_locking_function	extern/libgit2/src/streams/openssl.c	/^static void openssl_locking_function($/;"	f	typeref:typename:void	file:
openssl_locks	extern/libgit2/src/streams/openssl.c	/^static git_mutex *openssl_locks;$/;"	v	typeref:typename:git_mutex *	file:
openssl_read	extern/libgit2/src/streams/openssl.c	/^static ssize_t openssl_read(git_stream *stream, void *data, size_t len)$/;"	f	typeref:typename:ssize_t	file:
openssl_set_proxy	extern/libgit2/src/streams/openssl.c	/^static int openssl_set_proxy(git_stream *stream, const git_proxy_options *proxy_opts)$/;"	f	typeref:typename:int	file:
openssl_stream	extern/libgit2/src/streams/openssl.c	/^} openssl_stream;$/;"	t	typeref:struct:__anon6b0c21600108	file:
openssl_stream_wrap	extern/libgit2/src/streams/openssl.c	/^static int openssl_stream_wrap($/;"	f	typeref:typename:int	file:
openssl_write	extern/libgit2/src/streams/openssl.c	/^static ssize_t openssl_write(git_stream *stream, const char *data, size_t data_len, int flags)$/;"	f	typeref:typename:ssize_t	file:
operator !	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_node::operator!() const$/;"	f	class:pugi::xpath_node	typeref:typename:PUGI__FN bool
operator !	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_query::operator!() const$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN bool
operator !	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::operator!() const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
operator !	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::operator!() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
operator !	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::operator!() const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
operator !=	extern/NamedType/underlying_functionalities.hpp	/^    bool operator!=(T const& other) const { return !(*this == other); }$/;"	f	struct:fluent::Comparable	typeref:typename:bool
operator !=	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^    inline bool operator!=(const XLCellReference& lhs, const XLCellReference& rhs) {$/;"	f	namespace:OpenXLSX::Impl	typeref:typename:bool
operator !=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool operator!=(const xpath_string& o) const$/;"	f	class:xpath_string	typeref:typename:bool	file:
operator !=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_node::operator!=(const xpath_node& n) const$/;"	f	class:pugi::xpath_node	typeref:typename:PUGI__FN bool
operator !=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::operator!=(const xml_attribute& r) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
operator !=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute_iterator::operator!=(const xml_attribute_iterator& rhs) const {$/;"	f	class:pugi::xml_attribute_iterator	typeref:typename:PUGI__FN bool
operator !=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_named_node_iterator::operator!=(const xml_named_node_iterator& rhs) const /;"	f	class:pugi::xml_named_node_iterator	typeref:typename:PUGI__FN bool
operator !=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::operator!=(const xml_node& r) const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
operator !=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node_iterator::operator!=(const xml_node_iterator& rhs) const {$/;"	f	class:pugi::xml_node_iterator	typeref:typename:PUGI__FN bool
operator !=	ntskills.hpp	/^  bool operator!=(T const &other) const { return !(*this == other); }$/;"	f	struct:nt::Comparable	typeref:typename:bool
operator &	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		uintptr_t operator&(uintptr_t mod) const$/;"	f	class:compact_header	typeref:typename:uintptr_t	file:
operator &&	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool operator&&(const xpath_node& lhs, bool rhs)$/;"	f	namespace:pugi	typeref:typename:PUGI__FN bool
operator &&	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	f	namespace:pugi	typeref:typename:PUGI__FN bool
operator &=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void operator&=(uintptr_t mod)$/;"	f	class:compact_header	typeref:typename:void	file:
operator ()	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool operator()(const xpath_node& lhs, const xpath_node& rhs) const$/;"	f	struct:document_order_comparator	typeref:typename:bool	file:
operator ()	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool operator()(const xpath_node& lhs, const xpath_node& rhs) const$/;"	f	struct:duplicate_comparator	typeref:typename:bool	file:
operator ()	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool operator()(xml_attribute a) const$/;"	f	struct:namespace_uri_predicate	typeref:typename:bool	file:
operator ()	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		template <typename T> bool operator()(const T& lhs, const T& rhs) const$/;"	f	struct:equal_to	typeref:typename:bool	file:
operator ()	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		template <typename T> bool operator()(const T& lhs, const T& rhs) const$/;"	f	struct:less	typeref:typename:bool	file:
operator ()	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		template <typename T> bool operator()(const T& lhs, const T& rhs) const$/;"	f	struct:less_equal	typeref:typename:bool	file:
operator ()	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		template <typename T> bool operator()(const T& lhs, const T& rhs) const$/;"	f	struct:not_equal_to	typeref:typename:bool	file:
operator ()	function_ref.hpp	/^  R operator()(Args... args) const {$/;"	f	struct:abo::function_ref	typeref:typename:R
operator ()	git.hpp	/^  lr::LR<T> operator()(Args &&... args) const {$/;"	f	struct:git::make2	typeref:typename:lr::LR<T>
operator ()	git.hpp	/^  lr::LR<UPtr<T>> operator()(Args &&... args) const {$/;"	f	struct:git::make	typeref:typename:lr::LR<UPtr<T>>
operator ()	git.hpp	/^  template <typename Pith> LR<git_oid> operator()(Pith &&pith) const {$/;"	f	struct:git::TreeBark	typeref:typename:LR<git_oid>
operator ()	git_.hpp	/^  LR<TreeSha> operator()(const Repo &) const {$/;"	f	struct:abo::Bark	typeref:typename:LR<TreeSha>
operator ()	oset.cpp	/^  template <typename U> constexpr void operator()(U &&u) const {$/;"	f	struct:oset	typeref:typename:void	file:
operator *	extern/NamedType/underlying_functionalities.hpp	/^    T operator*(T const& other) const { return T(this->underlying().get() * other.get()); }$/;"	f	struct:fluent::Multiplicable	typeref:typename:T
operator *	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute& xml_attribute_iterator::operator*() const {$/;"	f	class:pugi::xml_attribute_iterator	typeref:typename:PUGI__FN xml_attribute &
operator *	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node& xml_named_node_iterator::operator*() const {$/;"	f	class:pugi::xml_named_node_iterator	typeref:typename:PUGI__FN xml_node &
operator *	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node& xml_node_iterator::operator*() const {$/;"	f	class:pugi::xml_node_iterator	typeref:typename:PUGI__FN xml_node &
operator *	ntskills.hpp	/^  T operator*(T const &other) const {$/;"	f	struct:nt::Multiplicable	typeref:typename:T
operator +	extern/NamedType/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch	typeref:typename:T const &
operator +	extern/NamedType/main.cpp	/^testFunctionCallable_A operator+(testFunctionCallable_A const& a1, testFunctionCallable_A const&/;"	f	typeref:typename:testFunctionCallable_A
operator +	extern/NamedType/underlying_functionalities.hpp	/^    T operator+(T const& other) const { return T(this->underlying().get() + other.get()); }$/;"	f	struct:fluent::Addable	typeref:typename:T
operator +	extern/OpenXLSX/tests/catch/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch	typeref:typename:T const &
operator +	lr.hpp	/^  L operator+(const L &other) { return L(this->message + other.message); }$/;"	f	struct:lr::L	typeref:typename:L
operator +	newtype.hpp	/^  T operator+(T const &other) const {$/;"	f	struct:abo::nt::Addable	typeref:typename:T
operator +	ntskills.hpp	/^  T operator+(T const &other) const {$/;"	f	struct:nt::Addable	typeref:typename:T
operator ++	extern/NamedType/underlying_functionalities.hpp	/^    T& operator++() { ++this->underlying().get(); return this->underlying(); }$/;"	f	struct:fluent::PreIncrementable	typeref:typename:T &
operator ++	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const xml_attribute_iterator& xml_attribute_iterator::operator++() {$/;"	f	class:pugi::xml_attribute_iterator	typeref:typename:PUGI__FN const xml_attribute_iterator &
operator ++	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const xml_named_node_iterator& xml_named_node_iterator::operator++() {$/;"	f	class:pugi::xml_named_node_iterator	typeref:typename:PUGI__FN const xml_named_node_iterator &
operator ++	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const xml_node_iterator& xml_node_iterator::operator++() {$/;"	f	class:pugi::xml_node_iterator	typeref:typename:PUGI__FN const xml_node_iterator &
operator ++	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute_iterator xml_attribute_iterator::operator++(int) {$/;"	f	class:pugi::xml_attribute_iterator	typeref:typename:PUGI__FN xml_attribute_iterator
operator ++	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_named_node_iterator xml_named_node_iterator::operator++(int) {$/;"	f	class:pugi::xml_named_node_iterator	typeref:typename:PUGI__FN xml_named_node_iterator
operator ++	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node_iterator xml_node_iterator::operator++(int) {$/;"	f	class:pugi::xml_node_iterator	typeref:typename:PUGI__FN xml_node_iterator
operator ++	ntskills.hpp	/^  T &operator++() {$/;"	f	struct:nt::PreIncrementable	typeref:typename:T &
operator +=	extern/NamedType/main.cpp	/^    testFunctionCallable_A& operator+=(testFunctionCallable_A const& other) { x += other.x; retu/;"	f	struct:testFunctionCallable_A	typeref:typename:testFunctionCallable_A &	file:
operator +=	extern/NamedType/underlying_functionalities.hpp	/^    T& operator+=(T const& other) { this->underlying().get() += other.get(); return this->underl/;"	f	struct:fluent::Incrementable	typeref:typename:T &
operator +=	ntskills.hpp	/^  T &operator+=(T const &other) {$/;"	f	struct:nt::Incrementable	typeref:typename:T &
operator -	extern/NamedType/underlying_functionalities.hpp	/^    T operator-() const { return T(-this->underlying().get()); }$/;"	f	struct:fluent::Negatable	typeref:typename:T
operator -	extern/NamedType/underlying_functionalities.hpp	/^    T operator-(T const& other) const { return T(this->underlying().get() - other.get()); }$/;"	f	struct:fluent::Subtractable	typeref:typename:T
operator -	ntskills.hpp	/^  T operator-() const { return T(-this->underlying().get()); }$/;"	f	struct:nt::Negatable	typeref:typename:T
operator -	ntskills.hpp	/^  T operator-(T const &other) const {$/;"	f	struct:nt::Subtractable	typeref:typename:T
operator --	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const xml_attribute_iterator& xml_attribute_iterator::operator--() {$/;"	f	class:pugi::xml_attribute_iterator	typeref:typename:PUGI__FN const xml_attribute_iterator &
operator --	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const xml_named_node_iterator& xml_named_node_iterator::operator--() {$/;"	f	class:pugi::xml_named_node_iterator	typeref:typename:PUGI__FN const xml_named_node_iterator &
operator --	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const xml_node_iterator& xml_node_iterator::operator--() {$/;"	f	class:pugi::xml_node_iterator	typeref:typename:PUGI__FN const xml_node_iterator &
operator --	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute_iterator xml_attribute_iterator::operator--(int) {$/;"	f	class:pugi::xml_attribute_iterator	typeref:typename:PUGI__FN xml_attribute_iterator
operator --	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_named_node_iterator xml_named_node_iterator::operator--(int) {$/;"	f	class:pugi::xml_named_node_iterator	typeref:typename:PUGI__FN xml_named_node_iterator
operator --	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node_iterator xml_node_iterator::operator--(int) {$/;"	f	class:pugi::xml_node_iterator	typeref:typename:PUGI__FN xml_node_iterator
operator ->	extern/NamedType/underlying_functionalities.hpp	/^    T* operator->() { return std::addressof(this->underlying().get()); }$/;"	f	typeref:struct:MethodCallable T *
operator ->	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		T* operator->() const$/;"	f	class:compact_pointer	typeref:typename:T *	file:
operator ->	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		T* operator->() const$/;"	f	class:compact_pointer_parent	typeref:typename:T *	file:
operator ->	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute* xml_attribute_iterator::operator->() const {$/;"	f	class:pugi::xml_attribute_iterator	typeref:typename:PUGI__FN xml_attribute *
operator ->	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node* xml_named_node_iterator::operator->() const {$/;"	f	class:pugi::xml_named_node_iterator	typeref:typename:PUGI__FN xml_node *
operator ->	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node* xml_node_iterator::operator->() const {$/;"	f	class:pugi::xml_node_iterator	typeref:typename:PUGI__FN xml_node *
operator ->	ntskills.hpp	/^  T *operator->() { return std::addressof(this->underlying().get()); }$/;"	f	typeref:struct:MethodCallable T *
operator <	extern/NamedType/underlying_functionalities.hpp	/^    bool operator<(T const& other) const  { return this->underlying().get() < other.get(); }$/;"	f	struct:fluent::Comparable	typeref:typename:bool
operator <	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^    inline bool operator<(const XLCellReference& lhs, const XLCellReference& rhs) {$/;"	f	namespace:OpenXLSX::Impl	typeref:typename:bool
operator <	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::operator<(const xml_attribute& r) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
operator <	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::operator<(const xml_node& r) const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
operator <	ntskills.hpp	/^  bool operator<(T const &other) const {$/;"	f	struct:nt::Comparable	typeref:typename:bool
operator <<	extern/NamedType/underlying_functionalities.hpp	/^std::ostream& operator<<(std::ostream& os, NamedType<T, Parameter, Skills...> const& object)$/;"	f	namespace:fluent	typeref:typename:std::ostream &
operator <<	extern/OpenXLSX/benchmark/table_printer.h	/^        TablePrinter& operator<<(T input) {$/;"	f	class:bprinter::TablePrinter	typeref:typename:TablePrinter &
operator <<	extern/OpenXLSX/benchmark/table_printer.h	/^        TablePrinter& operator<<(endl input) {$/;"	f	class:bprinter::TablePrinter	typeref:typename:TablePrinter &
operator <<	extern/OpenXLSX/tests/catch/catch.hpp	/^        auto operator << ( T const& value ) -> ReusableStringStream& {$/;"	f	class:Catch::ReusableStringStream	typeref:typename:ReusableStringStream &
operator <<	ntskills.hpp	/^std::ostream &operator<<(std::ostream &os,$/;"	f	namespace:nt	typeref:typename:std::ostream &
operator <=	extern/NamedType/underlying_functionalities.hpp	/^    bool operator<=(T const& other) const { return !(*this > other); }$/;"	f	struct:fluent::Comparable	typeref:typename:bool
operator <=	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^    inline bool operator<=(const XLCellReference& lhs, const XLCellReference& rhs) {$/;"	f	namespace:OpenXLSX::Impl	typeref:typename:bool
operator <=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::operator<=(const xml_attribute& r) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
operator <=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::operator<=(const xml_node& r) const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
operator <=	ntskills.hpp	/^  bool operator<=(T const &other) const { return !(*this > other); }$/;"	f	struct:nt::Comparable	typeref:typename:bool
operator =	extern/NamedType/named_type_impl.hpp	/^        NamedType operator=(U&& value) const$/;"	f	struct:fluent::NamedType::argument	typeref:typename:NamedType
operator =	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellValue_Impl.h	/^    XLCellValue& XLCellValue::operator=(T numberValue) {$/;"	f	class:OpenXLSX::Impl::XLCellValue	typeref:typename:XLCellValue &
operator =	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellRange_Impl.cpp	/^Impl::XLCellRange& Impl::XLCellRange::operator=(const XLCellRange& other) {$/;"	f	class:Impl::XLCellRange	typeref:typename:Impl::XLCellRange &
operator =	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^Impl::XLCellValue& Impl::XLCellValue::operator=(const Impl::XLCellValue& other) {$/;"	f	class:Impl::XLCellValue	typeref:typename:Impl::XLCellValue &
operator =	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^Impl::XLCellValue& Impl::XLCellValue::operator=(const char* stringValue) {$/;"	f	class:Impl::XLCellValue	typeref:typename:Impl::XLCellValue &
operator =	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCellValue_Impl.cpp	/^Impl::XLCellValue& Impl::XLCellValue::operator=(const std::string& stringValue) {$/;"	f	class:Impl::XLCellValue	typeref:typename:Impl::XLCellValue &
operator =	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCell_Impl.cpp	/^Impl::XLCell& Impl::XLCell::operator=(const XLCellRange& range) {$/;"	f	class:Impl::XLCell	typeref:typename:Impl::XLCell &
operator =	extern/OpenXLSX/library/openxlsx/interfaces/c++/headers/XLCellValue.h	/^    XLCellValue& XLCellValue::operator=(T numberValue) {$/;"	f	class:OpenXLSX::XLCellValue	typeref:typename:XLCellValue &
operator =	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellReference.cpp	/^XLCellReference& XLCellReference::operator=(const XLCellReference& other) {$/;"	f	class:XLCellReference	typeref:typename:XLCellReference &
operator =	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^XLCellValue& XLCellValue::operator=(const XLCellValue& other) {$/;"	f	class:XLCellValue	typeref:typename:XLCellValue &
operator =	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^XLCellValue& XLCellValue::operator=(const char* stringValue) {$/;"	f	class:XLCellValue	typeref:typename:XLCellValue &
operator =	extern/OpenXLSX/library/openxlsx/interfaces/c++/sources/XLCellValue.cpp	/^XLCellValue& XLCellValue::operator=(const std::string& stringValue) {$/;"	f	class:XLCellValue	typeref:typename:XLCellValue &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void operator=(T* value)$/;"	f	class:compact_pointer	typeref:typename:void	file:
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void operator=(T* value)$/;"	f	class:compact_pointer_parent	typeref:typename:void	file:
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void operator=(char_t* value)$/;"	f	class:compact_string	typeref:typename:void	file:
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void operator=(const compact_pointer& rhs)$/;"	f	class:compact_pointer	typeref:typename:void	file:
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void operator=(const compact_pointer_parent& rhs)$/;"	f	class:compact_pointer_parent	typeref:typename:void	file:
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void operator=(const compact_string& rhs)$/;"	f	class:compact_string	typeref:typename:void	file:
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set& xpath_node_set::operator=(const xpath_node_set& ns)$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN xpath_node_set &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set& xpath_node_set::operator=(xpath_node_set&& rhs) PUGIXML_NOEXCEPT$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN xpath_node_set &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_query& xpath_query::operator=(xpath_query&& rhs) PUGIXML_NOEXCEPT$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN xpath_query &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_variable_set& xpath_variable_set::operator=(const xpath_variable_set& rhs)$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN xpath_variable_set &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_variable_set& xpath_variable_set::operator=(xpath_variable_set&& rhs) PUGIXML_NO/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN xpath_variable_set &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute& xml_attribute::operator=(bool rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute& xml_attribute::operator=(const char_t* rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute& xml_attribute::operator=(double rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute& xml_attribute::operator=(float rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute& xml_attribute::operator=(int rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute& xml_attribute::operator=(long long rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute& xml_attribute::operator=(long rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute& xml_attribute::operator=(unsigned int rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute& xml_attribute::operator=(unsigned long long rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute& xml_attribute::operator=(unsigned long rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_document& xml_document::operator=(xml_document&& rhs) PUGIXML_NOEXCEPT_IF_NOT_C/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN xml_document &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text& xml_text::operator=(bool rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_text &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text& xml_text::operator=(const char_t* rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_text &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text& xml_text::operator=(double rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_text &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text& xml_text::operator=(float rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_text &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text& xml_text::operator=(int rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_text &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text& xml_text::operator=(long long rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_text &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text& xml_text::operator=(long rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_text &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text& xml_text::operator=(unsigned int rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_text &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text& xml_text::operator=(unsigned long long rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_text &
operator =	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text& xml_text::operator=(unsigned long rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN xml_text &
operator =	extern/OpenXLSX/tests/catch/catch.hpp	/^        auto operator = ( StringRef const &other ) noexcept -> StringRef& {$/;"	f	class:Catch::StringRef	typeref:typename:auto
operator =	nt.hpp	/^    template <typename U> NamedType operator=(U &&value) const {$/;"	f	struct:nt::NamedType::argument	typeref:typename:NamedType
operator =	p.cpp	/^  S &operator=(S &&) noexcept {$/;"	f	struct:S	typeref:typename:S &	file:
operator =	p.cpp	/^  S &operator=(const S &) noexcept {$/;"	f	struct:S	typeref:typename:S &	file:
operator ==	extern/NamedType/main.cpp	/^bool operator==(testFunctionCallable_A const& a1, testFunctionCallable_A const& a2)$/;"	f	typeref:typename:bool
operator ==	extern/NamedType/underlying_functionalities.hpp	/^    bool operator==(T const& other) const { return !(*this < other || *this > other); }$/;"	f	struct:fluent::Comparable	typeref:typename:bool
operator ==	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^    inline bool operator==(const XLCellReference& lhs, const XLCellReference& rhs) {$/;"	f	namespace:OpenXLSX::Impl	typeref:typename:bool
operator ==	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool operator==(const char_t* other) const$/;"	f	struct:xpath_lexer_string	typeref:typename:bool	file:
operator ==	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool operator==(const xpath_string& o) const$/;"	f	class:xpath_string	typeref:typename:bool	file:
operator ==	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_node::operator==(const xpath_node& n) const$/;"	f	class:pugi::xpath_node	typeref:typename:PUGI__FN bool
operator ==	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::operator==(const xml_attribute& r) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
operator ==	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute_iterator::operator==(const xml_attribute_iterator& rhs) const {$/;"	f	class:pugi::xml_attribute_iterator	typeref:typename:PUGI__FN bool
operator ==	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_named_node_iterator::operator==(const xml_named_node_iterator& rhs) const /;"	f	class:pugi::xml_named_node_iterator	typeref:typename:PUGI__FN bool
operator ==	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::operator==(const xml_node& r) const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
operator ==	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node_iterator::operator==(const xml_node_iterator& rhs) const {$/;"	f	class:pugi::xml_node_iterator	typeref:typename:PUGI__FN bool
operator ==	ntskills.hpp	/^  bool operator==(T const &other) const {$/;"	f	struct:nt::Comparable	typeref:typename:bool
operator >	extern/NamedType/underlying_functionalities.hpp	/^    bool operator>(T const& other) const  { return other.get() < this->underlying().get(); }$/;"	f	struct:fluent::Comparable	typeref:typename:bool
operator >	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^    inline bool operator>(const XLCellReference& lhs, const XLCellReference& rhs) {$/;"	f	namespace:OpenXLSX::Impl	typeref:typename:bool
operator >	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::operator>(const xml_attribute& r) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
operator >	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::operator>(const xml_node& r) const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
operator >	ntskills.hpp	/^  bool operator>(T const &other) const {$/;"	f	struct:nt::Comparable	typeref:typename:bool
operator >=	extern/NamedType/underlying_functionalities.hpp	/^    bool operator>=(T const& other) const { return !(*this < other); }$/;"	f	struct:fluent::Comparable	typeref:typename:bool
operator >=	extern/OpenXLSX/library/openxlsx/implementation/headers/XLCellReference_Impl.h	/^    inline bool operator>=(const XLCellReference& lhs, const XLCellReference& rhs) {$/;"	f	namespace:OpenXLSX::Impl	typeref:typename:bool
operator >=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::operator>=(const xml_attribute& r) const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
operator >=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::operator>=(const xml_node& r) const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
operator >=	ntskills.hpp	/^  bool operator>=(T const &other) const { return !(*this < other); }$/;"	f	struct:nt::Comparable	typeref:typename:bool
operator B	extern/NamedType/main.cpp	/^        operator B () const { return B(x);}$/;"	f	struct:A	file:
operator Destination	extern/NamedType/underlying_functionalities.hpp	/^        operator Destination() const$/;"	f	struct:fluent::ImplicitlyConvertibleTo::templ
operator Destination	ntskills.hpp	/^    operator Destination() const { return this->underlying().get(); }$/;"	f	struct:nt::ImplicitlyConvertibleTo::templ
operator T&	extern/NamedType/underlying_functionalities.hpp	/^    operator T&()$/;"	f	namespace:fluent	typeref:struct:FunctionCallable
operator T&	ntskills.hpp	/^  operator T &() { return this->underlying().get(); }$/;"	f	namespace:nt	typeref:struct:FunctionCallable
operator T*	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		operator T*() const$/;"	f	class:compact_pointer	file:
operator T*	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		operator T*() const$/;"	f	class:compact_pointer_parent	file:
operator []	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const xpath_node& xpath_node_set::operator[](size_t index) const$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN const xpath_node &
operator char_t*	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		operator char_t*() const$/;"	f	class:compact_string	file:
operator ref	extern/NamedType/named_type_impl.hpp	/^    operator ref ()$/;"	f	class:fluent::NamedType
operator ref	nt.hpp	/^  operator ref() { return ref(value_); }$/;"	f	class:nt::NamedType
operator xml_attribute::unspecified_bool_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute::operator xml_attribute::unspecified_bool_type() const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN
operator xml_node::unspecified_bool_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node::operator xml_node::unspecified_bool_type() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN
operator xml_text::unspecified_bool_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text::operator xml_text::unspecified_bool_type() const {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN
operator xpath_node::unspecified_bool_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node::operator xpath_node::unspecified_bool_type() const$/;"	f	class:pugi::xpath_node	typeref:typename:PUGI__FN
operator xpath_query::unspecified_bool_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_query::operator xpath_query::unspecified_bool_type() const$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN
operator |	lr.hpp	/^template <typename A, typename F> decltype(auto) operator|(A &&a, F &&f) {$/;"	f	namespace:lr	typeref:typename:decltype (auto)
operator |=	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void operator|=(uintptr_t mod)$/;"	f	class:compact_header	typeref:typename:void	file:
operator ||	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool operator||(const xml_attribute& lhs, bool rhs)$/;"	f	namespace:pugi	typeref:typename:PUGI__FN bool
operator ||	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool operator||(const xml_node& lhs, bool rhs)$/;"	f	namespace:pugi	typeref:typename:PUGI__FN bool
operator ||	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool operator||(const xml_text& lhs, bool rhs)$/;"	f	namespace:pugi	typeref:typename:PUGI__FN bool
operator ||	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool operator||(const xpath_node& lhs, bool rhs)$/;"	f	namespace:pugi	typeref:typename:PUGI__FN bool
opportunistic_updates	extern/libgit2/src/remote.c	/^static int opportunistic_updates(const git_remote *remote, const git_remote_callbacks *callbacks/;"	f	typeref:typename:int	file:
opt	extern/libgit2/src/hashsig.c	/^	git_hashsig_option_t opt;$/;"	m	struct:git_hashsig	typeref:typename:git_hashsig_option_t	file:
opt_false	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct opt_false$/;"	s	file:
opt_len	extern/libgit2/deps/zlib/deflate.h	/^    ulg opt_len;        \/* bit length of current block with optimal trees *\/$/;"	m	struct:internal_state	typeref:typename:ulg
opt_true	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct opt_true$/;"	s	file:
optimize	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void optimize(xpath_allocator* alloc)$/;"	f	class:xpath_ast_node	typeref:typename:void	file:
optimize_self	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void optimize_self(xpath_allocator* alloc)$/;"	f	class:xpath_ast_node	typeref:typename:void	file:
optimized_cbracket	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u8 *optimized_cbracket;$/;"	m	struct:compiler_common	typeref:typename:sljit_u8 *	file:
optional_str_arg	extern/libgit2/examples/common.c	/^int optional_str_arg($/;"	f	typeref:typename:int
options	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^    set(options)$/;"	v	function:pkg_build_config
options	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 options;            \/* Public options *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
options	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 options;            \/* Public options *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint32
options	extern/libgit2/examples/add.c	/^	enum print_options options;$/;"	m	struct:print_payload	typeref:enum:print_options	file:
options	extern/libgit2/src/blame.h	/^	git_blame_options options;$/;"	m	struct:git_blame	typeref:typename:git_blame_options
options	extern/libgit2/src/rebase.c	/^	git_rebase_options options;$/;"	m	struct:git_rebase	typeref:typename:git_rebase_options	file:
options	extern/libgit2/tests/generate.py	/^    options, args = parser.parse_args()$/;"	v
options_cmp	extern/libgit2/tests/core/structinit.c	/^static void options_cmp(void *one, void *two, size_t size, const char *name)$/;"	f	typeref:typename:void	file:
opts	extern/libgit2/examples/blame.c	/^struct opts {$/;"	s	file:
opts	extern/libgit2/examples/cat-file.c	/^struct opts {$/;"	s	file:
opts	extern/libgit2/examples/diff.c	/^struct opts {$/;"	s	file:
opts	extern/libgit2/examples/init.c	/^struct opts {$/;"	s	file:
opts	extern/libgit2/examples/remote.c	/^struct opts {$/;"	s	file:
opts	extern/libgit2/examples/stash.c	/^struct opts {$/;"	s	file:
opts	extern/libgit2/examples/status.c	/^struct opts {$/;"	s	file:
opts	extern/libgit2/examples/tag.c	/^	tag_options *opts;$/;"	m	struct:__anon8e82c8010208	typeref:typename:tag_options *	file:
opts	extern/libgit2/src/apply.c	/^	git_apply_options opts;$/;"	m	struct:__anonbf3de2540208	typeref:typename:git_apply_options	file:
opts	extern/libgit2/src/checkout.c	/^	git_checkout_options opts;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_checkout_options	file:
opts	extern/libgit2/src/describe.c	/^	git_describe_options *opts;$/;"	m	struct:get_name_data	typeref:typename:git_describe_options *	file:
opts	extern/libgit2/src/diff.h	/^	git_diff_options opts;$/;"	m	struct:git_diff	typeref:typename:git_diff_options
opts	extern/libgit2/src/patch_parse.h	/^	git_patch_options opts;$/;"	m	struct:__anonadbd87dd0108	typeref:typename:git_patch_options
opts	extern/libgit2/src/status.h	/^	git_status_options opts;$/;"	m	struct:git_status_list	typeref:typename:git_status_options
opts	extern/libgit2/tests/diff/blob.c	/^static git_diff_options opts;$/;"	v	typeref:typename:git_diff_options	file:
opts	extern/libgit2/tests/diff/tree.c	/^static git_diff_options opts;$/;"	v	typeref:typename:git_diff_options	file:
opts_add_commit	extern/libgit2/examples/describe.c	/^static void opts_add_commit(describe_options *opts, const char *commit)$/;"	f	typeref:typename:void	file:
opts_add_refish	extern/libgit2/examples/merge.c	/^static void opts_add_refish(merge_options *opts, const char *refish)$/;"	f	typeref:typename:void	file:
opts_flags	extern/libgit2/src/diff_file.h	/^	uint32_t opts_flags;$/;"	m	struct:__anon2493e46b0108	typeref:typename:uint32_t
opts_free_baseline	extern/libgit2/src/checkout.c	/^	bool opts_free_baseline;$/;"	m	struct:__anonbac5d6240208	typeref:typename:bool	file:
opts_max_size	extern/libgit2/src/diff_file.h	/^	git_off_t opts_max_size;$/;"	m	struct:__anon2493e46b0108	typeref:typename:git_off_t
org_ptr	extern/libgit2/deps/zlib/zutil.c	/^    voidpf org_ptr;$/;"	m	struct:ptr_table_s	typeref:typename:voidpf	file:
orig_commit_id	extern/libgit2/include/git2/blame.h	/^	git_oid orig_commit_id;$/;"	m	struct:git_blame_hunk	typeref:typename:git_oid
orig_head_id	extern/libgit2/src/rebase.c	/^	git_oid orig_head_id;$/;"	m	struct:git_rebase	typeref:typename:git_oid	file:
orig_head_name	extern/libgit2/src/rebase.c	/^	char *orig_head_name;$/;"	m	struct:git_rebase	typeref:typename:char *	file:
orig_name	extern/libgit2/src/config_file.c	/^	const char *orig_name;$/;"	m	struct:write_data	typeref:typename:const char *	file:
orig_path	extern/libgit2/include/git2/blame.h	/^	const char *orig_path;$/;"	m	struct:git_blame_hunk	typeref:typename:const char *
orig_section	extern/libgit2/src/config_file.c	/^	const char *orig_section;$/;"	m	struct:write_data	typeref:typename:const char *	file:
orig_signature	extern/libgit2/include/git2/blame.h	/^	git_signature *orig_signature;$/;"	m	struct:git_blame_hunk	typeref:typename:git_signature *
orig_start_line_number	extern/libgit2/include/git2/blame.h	/^	size_t orig_start_line_number;$/;"	m	struct:git_blame_hunk	typeref:typename:size_t
origin	extern/libgit2/include/git2/diff.h	/^	char   origin;       \/**< A git_diff_line_t value *\/$/;"	m	struct:__anon72022fed0c08	typeref:typename:char
origin_decref	extern/libgit2/src/blame_git.c	/^static void origin_decref(git_blame__origin *o)$/;"	f	typeref:typename:void	file:
origin_incref	extern/libgit2/src/blame_git.c	/^static git_blame__origin *origin_incref(git_blame__origin *o)$/;"	f	typeref:typename:git_blame__origin *	file:
origin_url	extern/libgit2/include/git2/repository.h	/^	const char *origin_url;$/;"	m	struct:__anon8a61cad40408	typeref:typename:const char *
os	extern/libgit2/deps/zlib/zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s	typeref:typename:int
oset	oset.cpp	/^  constexpr oset(U &&u, Us &&... us)$/;"	f	struct:oset	file:
oset	oset.cpp	/^  template <typename U> constexpr oset(U &&u) : T(std::forward<U>(u)) {}$/;"	f	struct:oset	file:
oset	oset.cpp	/^  template <typename U> oset(U &&u) : f(std::forward<U>(u)) {}$/;"	f	struct:oset	file:
oset	oset.cpp	/^struct oset<T, Rest...> : T, oset<Rest...> {$/;"	s	file:
oset	oset.cpp	/^struct oset<void (*)(T &&), Rest...> : oset<Rest...> {$/;"	s	file:
oset	oset.cpp	/^template <typename T> struct oset<T> : T {$/;"	s	file:
oset	oset.cpp	/^template <typename T> struct oset<void (*)(T &&)> {$/;"	s	file:
oset	oset.hpp	/^struct oset<T, Rest...> : T, oset<Rest...> {};$/;"	s
oset	oset.hpp	/^template <typename T> struct oset<T> : T {};$/;"	s
osf_flags	extern/libgit2/src/win32/posix_w32.c	/^	int osf_flags;$/;"	m	struct:open_opts	typeref:typename:int	file:
other_case	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_int32 other_case; \/* offset to other case, or zero if none *\/$/;"	m	struct:__anonb814e4160608	typeref:typename:pcre_int32
other_commit_id	extern/libgit2/tests/refs/races.c	/^static const char *other_commit_id = "a65fedf39aefe402d3bb6e24df4d4f5fe4547750";$/;"	v	typeref:typename:const char *	file:
other_flags	extern/libgit2/src/diff_driver.c	/^	uint32_t other_flags;$/;"	m	struct:git_diff_driver	typeref:typename:uint32_t	file:
other_idx	extern/libgit2/src/merge.c	/^	size_t other_idx;$/;"	m	struct:merge_diff_similarity	typeref:typename:size_t	file:
other_refname	extern/libgit2/tests/refs/races.c	/^static const char *other_refname = "refs\/heads\/foo";$/;"	v	typeref:typename:const char *	file:
othercasebit	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^      unsigned int othercasebit;$/;"	m	struct:char_iterator_backtrack::__anon313b80c3020a::__anon313b80c30308	typeref:typename:unsigned int	file:
otype_from_mode	extern/libgit2/src/tree.c	/^static git_object_t otype_from_mode(git_filemode_t filemode)$/;"	f	typeref:typename:git_object_t	file:
our_entry	extern/libgit2/src/merge.h	/^	git_index_entry our_entry;$/;"	m	struct:__anon41711a830508	typeref:typename:git_index_entry
our_label	extern/libgit2/include/git2/checkout.h	/^	const char *our_label; \/**< the name of the "our" side of conflicts *\/$/;"	m	struct:git_checkout_options	typeref:typename:const char *
our_label	extern/libgit2/include/git2/merge.h	/^	const char *our_label;$/;"	m	struct:__anon5e9a43240508	typeref:typename:const char *
our_mode	extern/libgit2/tests/merge/merge_helpers.h	/^	unsigned int our_mode;$/;"	m	struct:merge_reuc_entry	typeref:typename:unsigned int
our_oid_str	extern/libgit2/tests/merge/merge_helpers.h	/^	char our_oid_str[GIT_OID_HEXSZ+1];$/;"	m	struct:merge_reuc_entry	typeref:typename:char[]
our_path	extern/libgit2/tests/merge/merge_helpers.h	/^	char our_path[128];$/;"	m	struct:merge_name_entry	typeref:typename:char[128]
our_status	extern/libgit2/src/merge.h	/^	git_delta_t our_status;$/;"	m	struct:__anon41711a830508	typeref:typename:git_delta_t
ours	extern/libgit2/include/git2/sys/index.h	/^	char *ours;$/;"	m	struct:git_index_name_entry	typeref:typename:char *
ours	extern/libgit2/src/checkout.c	/^	const git_index_entry *ours;$/;"	m	struct:__anonbac5d6240308	typeref:typename:const git_index_entry *	file:
ours	extern/libgit2/src/merge_driver.h	/^	const git_index_entry *ours;$/;"	m	struct:git_merge_driver_source	typeref:typename:const git_index_entry *
ours	extern/libgit2/tests/checkout/conflict.c	/^	char ours[64];$/;"	m	struct:checkout_name_entry	typeref:typename:char[64]	file:
ours	extern/libgit2/tests/merge/merge_helpers.h	/^	struct merge_index_with_status ours;$/;"	m	struct:merge_index_conflict_data	typeref:struct:merge_index_with_status
out	extern/libgit2/deps/zlib/gzguts.h	/^    unsigned char *out;     \/* output buffer (double-sized when reading) *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:unsigned char *
out_blk_remain	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    size_t out_blk_remain;$/;"	m	struct:__anon09af45a71808	typeref:typename:size_t
out_buf_ofs	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 read_buf_size, read_buf_ofs, read_buf_avail, comp_remaining, out_buf_ofs, cur_file/;"	m	struct:__anon09af45a71808	typeref:typename:mz_uint64
out_degree	extern/libgit2/src/commit_list.h	/^	unsigned short out_degree;$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned short
out_func	extern/libgit2/deps/zlib/zconf.h	/^#  define out_func /;"	d
out_func	extern/libgit2/deps/zlib/zlib.h	/^typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));$/;"	t	typeref:typename:int (*)OF ((void FAR *,unsigned char FAR *,unsigned))
out_of_order_pack	extern/libgit2/tests/pack/indexer.c	/^static const unsigned char out_of_order_pack[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
out_of_order_pack_len	extern/libgit2/tests/pack/indexer.c	/^static const unsigned int out_of_order_pack_len = 112;$/;"	v	typeref:typename:const unsigned int	file:
out_stream_	extern/OpenXLSX/benchmark/table_printer.h	/^        std::ostream* out_stream_;$/;"	m	class:bprinter::TablePrinter	typeref:typename:std::ostream *
outer	extern/libgit2/deps/pcre/pcre_internal.h	/^  struct branch_chain *outer;$/;"	m	struct:branch_chain	typeref:struct:branch_chain *
outf	extern/libgit2/src/xdiff/xdiff.h	/^	int (*outf)(void *, mmbuffer_t *, int);$/;"	m	struct:s_xdemitcb	typeref:typename:int (*)(void *,mmbuffer_t *,int)
output	extern/libgit2/examples/diff.c	/^	int output;$/;"	m	struct:opts	typeref:typename:int	file:
output	extern/libgit2/src/diff_xdiff.h	/^	git_patch_generated_output output;$/;"	m	struct:__anon14ca163c0108	typeref:typename:git_patch_generated_output
output	extern/libgit2/src/filter.c	/^	git_buf *output;$/;"	m	struct:proxy_stream	typeref:typename:git_buf *	file:
output	extern/libgit2/tests/generate.py	/^    output = options.output or path$/;"	v
output_conflicts	extern/libgit2/examples/merge.c	/^static void output_conflicts(git_index *index)$/;"	f	typeref:typename:void	file:
output_eol	extern/libgit2/src/crlf.c	/^static git_configmap_value output_eol(struct crlf_attrs *ca)$/;"	f	typeref:typename:git_configmap_value	file:
ovector_start	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 ovector_start;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
overloaded	overloaded.hpp	/^template <class... Ts> struct overloaded : Ts... { using Ts::operator()...; };$/;"	s
overwrite_filemode	extern/libgit2/tests/diff/drivers.c	/^static void overwrite_filemode(const char *expected, git_buf *actual)$/;"	f	typeref:typename:void	file:
own_cache	extern/libgit2/src/odb.h	/^	git_cache own_cache;$/;"	m	struct:git_odb	typeref:typename:git_cache
owned	extern/libgit2/src/streams/mbedtls.c	/^	int owned;$/;"	m	struct:__anon7f3464670108	typeref:typename:int	file:
owned	extern/libgit2/src/streams/openssl.c	/^	int owned;$/;"	m	struct:__anon6b0c21600108	typeref:typename:int	file:
owned	extern/libgit2/src/streams/stransport.c	/^	int owned;$/;"	m	struct:__anonc5fef1dc0108	typeref:typename:int	file:
owner	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^	git_transport *owner;$/;"	m	struct:fuzzer_subtransport	typeref:typename:git_transport *	file:
owner	extern/libgit2/src/transports/git.c	/^	git_transport *owner;$/;"	m	struct:__anon936e62c10208	typeref:typename:git_transport *	file:
owner	extern/libgit2/src/transports/http.c	/^	transport_smart *owner;$/;"	m	struct:__anon0458035d0308	typeref:typename:transport_smart *	file:
owner	extern/libgit2/src/transports/local.c	/^	git_remote *owner;$/;"	m	struct:__anonb65cbde80108	typeref:typename:git_remote *	file:
owner	extern/libgit2/src/transports/smart.h	/^	git_remote *owner;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_remote *
owner	extern/libgit2/src/transports/ssh.c	/^	transport_smart *owner;$/;"	m	struct:__anon944cd18b0208	typeref:typename:transport_smart *	file:
owner	extern/libgit2/src/transports/winhttp.c	/^	transport_smart *owner;$/;"	m	struct:__anon981dd28b0408	typeref:typename:transport_smart *	file:
owner	extern/libgit2/src/util.h	/^	void *owner;$/;"	m	struct:__anon8a0c96510108	typeref:typename:void *
p	extern/OpenXLSX/doxy/customdoxygen.css	/^body, table, div, p, dl,$/;"	s
p	extern/OpenXLSX/tests/catch/catch.hpp	/^            cli::pin_ptr<System::Byte> p = &bytes[0];$/;"	v	namespace:Catch::Detail	typeref:typename:cli::pin_ptr<System::Byte>
p	extern/libgit2/src/pack.h	/^	struct git_pack_file *p;$/;"	m	struct:git_pack_entry	typeref:struct:git_pack_file *
p	extern/libgit2/src/pack.h	/^	struct git_pack_file *p;$/;"	m	struct:git_packfile_stream	typeref:struct:git_pack_file *
p	extern/libgit2/tests/core/posix.c	/^		const char *p;$/;"	m	struct:test_core_posix__inet_pton::in6_addr_data	typeref:typename:const char *	file:
p	extern/libgit2/tests/core/posix.c	/^		const char *p;$/;"	m	struct:test_core_posix__inet_pton::in_addr_data	typeref:typename:const char *	file:
p.enddd	extern/OpenXLSX/doxy/customdoxygen.css	/^p.enddd {$/;"	c
p.endli	extern/OpenXLSX/doxy/customdoxygen.css	/^p.endli {$/;"	c
p.endtd	extern/OpenXLSX/doxy/customdoxygen.css	/^p.endtd {$/;"	c
p.formulaDsp	extern/OpenXLSX/doxy/customdoxygen.css	/^p.formulaDsp {$/;"	c
p.startdd	extern/OpenXLSX/doxy/customdoxygen.css	/^p.startli, p.startdd, p.starttd {$/;"	c
p.startli	extern/OpenXLSX/doxy/customdoxygen.css	/^p.startli, p.startdd, p.starttd {$/;"	c
p.starttd	extern/OpenXLSX/doxy/customdoxygen.css	/^p.startli, p.startdd, p.starttd {$/;"	c
pRead_buf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    void* pRead_buf;$/;"	m	struct:__anon09af45a71808	typeref:typename:void *
pWrite_buf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    void* pWrite_buf;$/;"	m	struct:__anon09af45a71808	typeref:typename:void *
pZip	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_zip_archive* pZip;$/;"	m	struct:__anon09af45a71808	typeref:typename:mz_zip_archive *
p_access	extern/libgit2/src/unix/posix.h	/^#define p_access(/;"	d
p_access	extern/libgit2/src/win32/posix_w32.c	/^int p_access(const char* path, mode_t mode)$/;"	f	typeref:typename:int
p_chdir	extern/libgit2/src/unix/posix.h	/^#define p_chdir(/;"	d
p_chdir	extern/libgit2/src/win32/posix_w32.c	/^int p_chdir(const char* path)$/;"	f	typeref:typename:int
p_chmod	extern/libgit2/src/unix/posix.h	/^#define p_chmod(/;"	d
p_chmod	extern/libgit2/src/win32/posix_w32.c	/^int p_chmod(const char* path, mode_t mode)$/;"	f	typeref:typename:int
p_close	extern/libgit2/src/posix.h	/^#define p_close(/;"	d
p_creat	extern/libgit2/src/posix.c	/^int p_creat(const char *path, mode_t mode)$/;"	f	typeref:typename:int
p_creat	extern/libgit2/src/win32/posix_w32.c	/^int p_creat(const char *path, mode_t mode)$/;"	f	typeref:typename:int
p_freeaddrinfo	extern/libgit2/src/posix.c	/^void p_freeaddrinfo(struct addrinfo *info)$/;"	f	typeref:typename:void
p_freeaddrinfo	extern/libgit2/src/posix.h	/^#	define p_freeaddrinfo(/;"	d
p_fstat	extern/libgit2/src/unix/posix.h	/^#define p_fstat(/;"	d
p_fstat	extern/libgit2/src/win32/posix_w32.c	/^int p_fstat(int fd, struct stat *buf)$/;"	f	typeref:typename:int
p_fsync	extern/libgit2/src/unix/posix.h	/^GIT_INLINE(int) p_fsync(int fd)$/;"	f	typeref:typename:int
p_fsync	extern/libgit2/src/win32/posix_w32.c	/^int p_fsync(int fd)$/;"	f	typeref:typename:int
p_fsync__cnt	extern/libgit2/src/posix.c	/^size_t p_fsync__cnt = 0;$/;"	v	typeref:typename:size_t
p_ftruncate	extern/libgit2/src/unix/posix.h	/^#define p_ftruncate(/;"	d
p_ftruncate	extern/libgit2/src/win32/posix_w32.c	/^int p_ftruncate(int fd, git_off_t size)$/;"	f	typeref:typename:int
p_futimes	extern/libgit2/src/unix/posix.h	/^# define p_futimes /;"	d
p_futimes	extern/libgit2/src/unix/posix.h	/^GIT_INLINE(int) p_futimes(int f, const struct p_timeval t[2])$/;"	f	typeref:typename:int
p_futimes	extern/libgit2/src/win32/posix_w32.c	/^int p_futimes(int fd, const struct p_timeval times[2])$/;"	f	typeref:typename:int
p_gai_strerror	extern/libgit2/src/posix.c	/^const char *p_gai_strerror(int ret)$/;"	f	typeref:typename:const char *
p_gai_strerror	extern/libgit2/src/posix.h	/^#	define p_gai_strerror(/;"	d
p_getaddrinfo	extern/libgit2/src/posix.c	/^int p_getaddrinfo($/;"	f	typeref:typename:int
p_getaddrinfo	extern/libgit2/src/posix.h	/^#	define p_getaddrinfo(/;"	d
p_getcwd	extern/libgit2/src/posix.c	/^int p_getcwd(char *buffer_out, size_t size)$/;"	f	typeref:typename:int
p_getcwd	extern/libgit2/src/win32/posix_w32.c	/^int p_getcwd(char *buffer_out, size_t size)$/;"	f	typeref:typename:int
p_gmtime_r	extern/libgit2/src/unix/posix.h	/^#define p_gmtime_r(/;"	d
p_gmtime_r	extern/libgit2/src/win32/posix_w32.c	/^p_gmtime_r (const time_t *timer, struct tm *result)$/;"	f	typeref:struct:tm *
p_inet_pton	extern/libgit2/src/unix/posix.h	/^#define p_inet_pton(/;"	d
p_inet_pton	extern/libgit2/src/win32/posix_w32.c	/^int p_inet_pton(int af, const char *src, void *dst)$/;"	f	typeref:typename:int
p_link	extern/libgit2/src/unix/posix.h	/^#define p_link(/;"	d
p_link	extern/libgit2/src/win32/posix_w32.c	/^int p_link(const char *old, const char *new)$/;"	f	typeref:typename:int
p_localtime_r	extern/libgit2/src/unix/posix.h	/^#define p_localtime_r(/;"	d
p_localtime_r	extern/libgit2/src/win32/posix_w32.c	/^p_localtime_r (const time_t *timer, struct tm *result)$/;"	f	typeref:struct:tm *
p_lseek	extern/libgit2/src/unix/posix.h	/^#define p_lseek(/;"	d
p_lseek	extern/libgit2/src/win32/posix.h	/^#define p_lseek(/;"	d
p_lstat	extern/libgit2/src/unix/posix.h	/^#define p_lstat(/;"	d
p_lstat	extern/libgit2/src/win32/posix_w32.c	/^int p_lstat(const char *filename, struct stat *buf)$/;"	f	typeref:typename:int
p_lstat_posixly	extern/libgit2/src/unix/posix.h	/^#define p_lstat_posixly(/;"	d
p_lstat_posixly	extern/libgit2/src/win32/posix_w32.c	/^int p_lstat_posixly(const char *filename, struct stat *buf)$/;"	f	typeref:typename:int
p_mkdir	extern/libgit2/src/unix/posix.h	/^#define p_mkdir(/;"	d
p_mkdir	extern/libgit2/src/win32/posix_w32.c	/^int p_mkdir(const char *path, mode_t mode)$/;"	f	typeref:typename:int
p_mkstemp	extern/libgit2/src/unix/posix.h	/^#define p_mkstemp(/;"	d
p_mkstemp	extern/libgit2/src/win32/posix_w32.c	/^int p_mkstemp(char *tmp_path)$/;"	f	typeref:typename:int
p_mmap	extern/libgit2/src/posix.c	/^int p_mmap(git_map *out, size_t len, int prot, int flags, int fd, git_off_t offset)$/;"	f	typeref:typename:int
p_mmap	extern/libgit2/src/unix/map.c	/^int p_mmap(git_map *out, size_t len, int prot, int flags, int fd, git_off_t offset)$/;"	f	typeref:typename:int
p_mmap	extern/libgit2/src/win32/map.c	/^int p_mmap(git_map *out, size_t len, int prot, int flags, int fd, git_off_t offset)$/;"	f	typeref:typename:int
p_munmap	extern/libgit2/src/posix.c	/^int p_munmap(git_map *map)$/;"	f	typeref:typename:int
p_munmap	extern/libgit2/src/unix/map.c	/^int p_munmap(git_map *map)$/;"	f	typeref:typename:int
p_munmap	extern/libgit2/src/win32/map.c	/^int p_munmap(git_map *map)$/;"	f	typeref:typename:int
p_open	extern/libgit2/src/posix.c	/^int p_open(const char *path, volatile int flags, ...)$/;"	f	typeref:typename:int
p_open	extern/libgit2/src/win32/posix_w32.c	/^int p_open(const char *path, int flags, ...)$/;"	f	typeref:typename:int
p_read	extern/libgit2/src/posix.c	/^ssize_t p_read(git_file fd, void *buf, size_t cnt)$/;"	f	typeref:typename:ssize_t
p_readdir_r	extern/libgit2/src/posix.h	/^#	define p_readdir_r(/;"	d
p_readdir_r	extern/libgit2/src/posix.h	/^GIT_INLINE(int) p_readdir_r(DIR *dirp, struct dirent *entry, struct dirent **result)$/;"	f	typeref:typename:int
p_readlink	extern/libgit2/src/unix/posix.h	/^#define p_readlink(/;"	d
p_readlink	extern/libgit2/src/win32/posix_w32.c	/^int p_readlink(const char *path, char *buf, size_t bufsiz)$/;"	f	typeref:typename:int
p_realpath	extern/libgit2/src/unix/realpath.c	/^char *p_realpath(const char *pathname, char *resolved)$/;"	f	typeref:typename:char *
p_realpath	extern/libgit2/src/win32/posix_w32.c	/^char *p_realpath(const char *orig_path, char *buffer)$/;"	f	typeref:typename:char *
p_recv	extern/libgit2/src/unix/posix.h	/^#define p_recv(/;"	d
p_recv	extern/libgit2/src/win32/posix_w32.c	/^int p_recv(GIT_SOCKET socket, void *buffer, size_t length, int flags)$/;"	f	typeref:typename:int
p_regcomp	extern/libgit2/src/posix_regex.h	/^#  define p_regcomp /;"	d
p_regcomp	extern/libgit2/src/posix_regex.h	/^# define p_regcomp /;"	d
p_regcomp	extern/libgit2/src/posix_regex.h	/^GIT_INLINE(int) p_regcomp(p_regex_t *preg, const char *pattern, int cflags)$/;"	f	typeref:typename:int
p_regerror	extern/libgit2/src/posix_regex.h	/^# define p_regerror /;"	d
p_regex_t	extern/libgit2/src/posix_regex.h	/^# define p_regex_t /;"	d
p_regexec	extern/libgit2/src/posix_regex.h	/^# define p_regexec /;"	d
p_regfree	extern/libgit2/src/posix_regex.h	/^# define p_regfree /;"	d
p_regmatch_t	extern/libgit2/src/posix_regex.h	/^# define p_regmatch_t /;"	d
p_rename	extern/libgit2/src/posix.c	/^int p_rename(const char *from, const char *to)$/;"	f	typeref:typename:int
p_rename	extern/libgit2/src/win32/posix_w32.c	/^int p_rename(const char *from, const char *to)$/;"	f	typeref:typename:int
p_rmdir	extern/libgit2/src/unix/posix.h	/^#define p_rmdir(/;"	d
p_rmdir	extern/libgit2/src/win32/posix_w32.c	/^int p_rmdir(const char* path)$/;"	f	typeref:typename:int
p_send	extern/libgit2/src/unix/posix.h	/^#define p_send(/;"	d
p_send	extern/libgit2/src/win32/posix_w32.c	/^int p_send(GIT_SOCKET socket, const void *buffer, size_t length, int flags)$/;"	f	typeref:typename:int
p_snprintf	extern/libgit2/src/unix/posix.h	/^#define p_snprintf /;"	d
p_snprintf	extern/libgit2/src/win32/posix_w32.c	/^int p_snprintf(char *buffer, size_t count, const char *format, ...)$/;"	f	typeref:typename:int
p_snprintf	extern/libgit2/tests/clar.c	/^#		define p_snprintf /;"	d	file:
p_snprintf	extern/libgit2/tests/clar.c	/^#		define p_snprintf(/;"	d	file:
p_snprintf	extern/libgit2/tests/clar.c	/^#	define p_snprintf /;"	d	file:
p_stat	extern/libgit2/src/unix/posix.h	/^#define p_stat(/;"	d
p_stat	extern/libgit2/src/win32/posix_w32.c	/^int p_stat(const char* path, struct stat* buf)$/;"	f	typeref:typename:int
p_stat	extern/libgit2/src/win32/win32-compat.h	/^struct p_stat {$/;"	s
p_strcasecmp	extern/libgit2/src/unix/posix.h	/^#define p_strcasecmp(/;"	d
p_strncasecmp	extern/libgit2/src/unix/posix.h	/^#define p_strncasecmp(/;"	d
p_strnlen	extern/libgit2/src/strnlen.h	/^#   define p_strnlen /;"	d
p_strnlen	extern/libgit2/src/strnlen.h	/^GIT_INLINE(size_t) p_strnlen(const char *s, size_t maxlen) {$/;"	f	typeref:typename:size_t
p_symlink	extern/libgit2/src/unix/posix.h	/^#define p_symlink(/;"	d
p_symlink	extern/libgit2/src/win32/posix_w32.c	/^int p_symlink(const char *target, const char *path)$/;"	f	typeref:typename:int
p_timespec	extern/libgit2/src/win32/win32-compat.h	/^struct p_timespec {$/;"	s
p_timeval	extern/libgit2/src/unix/posix.h	/^#define p_timeval /;"	d
p_timeval	extern/libgit2/src/win32/win32-compat.h	/^struct p_timeval {$/;"	s
p_umask	extern/libgit2/src/posix.h	/^#define p_umask(/;"	d
p_unlink	extern/libgit2/src/unix/posix.h	/^#define p_unlink(/;"	d
p_unlink	extern/libgit2/src/win32/posix_w32.c	/^int p_unlink(const char *path)$/;"	f	typeref:typename:int
p_utimes	extern/libgit2/src/unix/posix.h	/^#define p_utimes(/;"	d
p_utimes	extern/libgit2/src/win32/posix_w32.c	/^int p_utimes(const char *path, const struct p_timeval times[2])$/;"	f	typeref:typename:int
p_vsnprintf	extern/libgit2/src/unix/posix.h	/^#define p_vsnprintf(/;"	d
p_vsnprintf	extern/libgit2/src/win32/posix_w32.c	/^int p_vsnprintf(char *buffer, size_t count, const char *format, va_list argptr)$/;"	f	typeref:typename:int
p_write	extern/libgit2/src/posix.c	/^int p_write(git_file fd, const void *buf, size_t cnt)$/;"	f	typeref:typename:int
pack	extern/libgit2/src/indexer.c	/^	struct git_pack_file *pack;$/;"	m	struct:git_indexer	typeref:struct:git_pack_file *	file:
pack_backend	extern/libgit2/src/odb_pack.c	/^struct pack_backend {$/;"	s	file:
pack_backend__alloc	extern/libgit2/src/odb_pack.c	/^static int pack_backend__alloc(struct pack_backend **out, size_t initial_size)$/;"	f	typeref:typename:int	file:
pack_backend__exists	extern/libgit2/src/odb_pack.c	/^static int pack_backend__exists(git_odb_backend *backend, const git_oid *oid)$/;"	f	typeref:typename:int	file:
pack_backend__exists_prefix	extern/libgit2/src/odb_pack.c	/^static int pack_backend__exists_prefix($/;"	f	typeref:typename:int	file:
pack_backend__foreach	extern/libgit2/src/odb_pack.c	/^static int pack_backend__foreach(git_odb_backend *_backend, git_odb_foreach_cb cb, void *data)$/;"	f	typeref:typename:int	file:
pack_backend__free	extern/libgit2/src/odb_pack.c	/^static void pack_backend__free(git_odb_backend *_backend)$/;"	f	typeref:typename:void	file:
pack_backend__freshen	extern/libgit2/src/odb_pack.c	/^static int pack_backend__freshen($/;"	f	typeref:typename:int	file:
pack_backend__read	extern/libgit2/src/odb_pack.c	/^static int pack_backend__read($/;"	f	typeref:typename:int	file:
pack_backend__read_header	extern/libgit2/src/odb_pack.c	/^static int pack_backend__read_header($/;"	f	typeref:typename:int	file:
pack_backend__read_prefix	extern/libgit2/src/odb_pack.c	/^static int pack_backend__read_prefix($/;"	f	typeref:typename:int	file:
pack_backend__refresh	extern/libgit2/src/odb_pack.c	/^static int pack_backend__refresh(git_odb_backend *backend_)$/;"	f	typeref:typename:int	file:
pack_backend__writepack	extern/libgit2/src/odb_pack.c	/^static int pack_backend__writepack(struct git_odb_writepack **out,$/;"	f	typeref:typename:int	file:
pack_backend__writepack_append	extern/libgit2/src/odb_pack.c	/^static int pack_backend__writepack_append(struct git_odb_writepack *_writepack, const void *data/;"	f	typeref:typename:int	file:
pack_backend__writepack_commit	extern/libgit2/src/odb_pack.c	/^static int pack_backend__writepack_commit(struct git_odb_writepack *_writepack, git_indexer_prog/;"	f	typeref:typename:int	file:
pack_backend__writepack_free	extern/libgit2/src/odb_pack.c	/^static void pack_backend__writepack_free(struct git_odb_writepack *_writepack)$/;"	f	typeref:typename:void	file:
pack_chain_elem	extern/libgit2/src/pack.h	/^struct pack_chain_elem {$/;"	s
pack_committed	extern/libgit2/src/indexer.c	/^		pack_committed :1,$/;"	m	struct:git_indexer	typeref:typename:unsigned int:1	file:
pack_dependency_chain	extern/libgit2/src/pack.c	/^static int pack_dependency_chain(git_dependency_chain *chain_out,$/;"	f	typeref:typename:int	file:
pack_entry_find	extern/libgit2/src/odb_pack.c	/^static int pack_entry_find(struct git_pack_entry *e, struct pack_backend *backend, const git_oid/;"	f	typeref:typename:int	file:
pack_entry_find_inner	extern/libgit2/src/odb_pack.c	/^static int pack_entry_find_inner($/;"	f	typeref:typename:int	file:
pack_entry_find_offset	extern/libgit2/src/pack.c	/^static int pack_entry_find_offset($/;"	f	typeref:typename:int	file:
pack_entry_find_prefix	extern/libgit2/src/odb_pack.c	/^static int pack_entry_find_prefix($/;"	f	typeref:typename:int	file:
pack_folder	extern/libgit2/src/odb_pack.c	/^	char *pack_folder;$/;"	m	struct:pack_backend	typeref:typename:char *	file:
pack_index_check	extern/libgit2/src/pack.c	/^static int pack_index_check(const char *path, struct git_pack_file *p)$/;"	f	typeref:typename:int	file:
pack_index_free	extern/libgit2/src/pack.c	/^static void pack_index_free(struct git_pack_file *p)$/;"	f	typeref:typename:void	file:
pack_index_open	extern/libgit2/src/pack.c	/^static int pack_index_open(struct git_pack_file *p)$/;"	f	typeref:typename:int	file:
pack_keep	extern/libgit2/src/pack.h	/^	unsigned pack_local:1, pack_keep:1, has_cache:1;$/;"	m	struct:git_pack_file	typeref:typename:unsigned:1
pack_local	extern/libgit2/src/pack.h	/^	unsigned pack_local:1, pack_keep:1, has_cache:1;$/;"	m	struct:git_pack_file	typeref:typename:unsigned:1
pack_name	extern/libgit2/src/pack.h	/^	char pack_name[GIT_FLEX_ARRAY]; \/* more *\/$/;"	m	struct:git_pack_file	typeref:typename:char[]
pack_oid	extern/libgit2/src/pack-objects.h	/^	git_oid pack_oid; \/* hash of written pack *\/$/;"	m	struct:git_packbuilder	typeref:typename:git_oid
pack_progress	extern/libgit2/include/git2/remote.h	/^	git_packbuilder_progress pack_progress;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_packbuilder_progress
pack_progress_calls	extern/libgit2/tests/online/push_util.h	/^	int pack_progress_calls;$/;"	m	struct:__anon56a1c92f0208	typeref:typename:int
pack_version_ok	extern/libgit2/src/pack.h	/^#define pack_version_ok(/;"	d
pack_window_open	extern/libgit2/src/pack.c	/^static unsigned char *pack_window_open($/;"	f	typeref:typename:unsigned char *	file:
pack_write_context	extern/libgit2/src/pack-objects.c	/^struct pack_write_context {$/;"	s	file:
pack_writepack	extern/libgit2/src/odb_pack.c	/^struct pack_writepack {$/;"	s	file:
packall	extern/libgit2/tests/refs/pack.c	/^static void packall(void)$/;"	f	typeref:typename:void	file:
packbuilder_config	extern/libgit2/src/pack-objects.c	/^static int packbuilder_config(git_packbuilder *pb)$/;"	f	typeref:typename:int	file:
packed_find_peel	extern/libgit2/src/refdb_fs.c	/^static int packed_find_peel(refdb_fs_backend *backend, struct packref *ref)$/;"	f	typeref:typename:int	file:
packed_head_name	extern/libgit2/tests/refs/read.c	/^static const char *packed_head_name = "refs\/heads\/packed";$/;"	v	typeref:typename:const char *	file:
packed_head_name	extern/libgit2/tests/refs/rename.c	/^static const char *packed_head_name = "refs\/heads\/packed";$/;"	v	typeref:typename:const char *	file:
packed_loadloose	extern/libgit2/src/refdb_fs.c	/^static int packed_loadloose(refdb_fs_backend *backend)$/;"	f	typeref:typename:int	file:
packed_lookup	extern/libgit2/src/refdb_fs.c	/^static int packed_lookup($/;"	f	typeref:typename:int	file:
packed_objects	extern/libgit2/tests/odb/pack_data.h	/^static const char *packed_objects[] = {$/;"	v	typeref:typename:const char * []
packed_objects_one	extern/libgit2/tests/odb/pack_data_one.h	/^static const char *packed_objects_one[] = {$/;"	v	typeref:typename:const char * []
packed_pos	extern/libgit2/src/refdb_fs.c	/^	size_t packed_pos;$/;"	m	struct:__anonbd02e2090308	typeref:typename:size_t	file:
packed_reload	extern/libgit2/src/refdb_fs.c	/^static int packed_reload(refdb_fs_backend *backend)$/;"	f	typeref:typename:int	file:
packed_remove_loose	extern/libgit2/src/refdb_fs.c	/^static int packed_remove_loose(refdb_fs_backend *backend)$/;"	f	typeref:typename:int	file:
packed_test_head_name	extern/libgit2/tests/refs/delete.c	/^static const char *packed_test_head_name = "refs\/heads\/packed-test";$/;"	v	typeref:typename:const char *	file:
packed_test_head_name	extern/libgit2/tests/refs/read.c	/^static const char *packed_test_head_name = "refs\/heads\/packed-test";$/;"	v	typeref:typename:const char *	file:
packed_test_head_name	extern/libgit2/tests/refs/rename.c	/^static const char *packed_test_head_name = "refs\/heads\/packed-test";$/;"	v	typeref:typename:const char *	file:
packed_write	extern/libgit2/src/refdb_fs.c	/^static int packed_write(refdb_fs_backend *backend)$/;"	f	typeref:typename:int	file:
packed_write_ref	extern/libgit2/src/refdb_fs.c	/^static int packed_write_ref(struct packref *ref, git_filebuf *file)$/;"	f	typeref:typename:int	file:
packetsize_cb	extern/libgit2/src/transports/smart.h	/^	packetsize_cb packetsize_cb;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:packetsize_cb
packetsize_cb	extern/libgit2/src/transports/smart.h	/^typedef int (*packetsize_cb)(size_t received, void *payload);$/;"	t	typeref:typename:int (*)(size_t received,void * payload)
packetsize_payload	extern/libgit2/src/transports/smart.h	/^	void *packetsize_payload;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:void *
packfile	extern/libgit2/src/refdb_fs.h	/^	git_strmap *packfile;$/;"	m	struct:__anonbd02e20e0108	typeref:typename:git_strmap *
packfile_error	extern/libgit2/src/pack.c	/^static int packfile_error(const char *message)$/;"	f	typeref:typename:int	file:
packfile_load__cb	extern/libgit2/src/odb_pack.c	/^static int packfile_load__cb(void *data, git_buf *path)$/;"	f	typeref:typename:int	file:
packfile_open	extern/libgit2/src/pack.c	/^static int packfile_open(struct git_pack_file *p)$/;"	f	typeref:typename:int	file:
packfile_sort__cb	extern/libgit2/src/odb_pack.c	/^static int packfile_sort__cb(const void *a_, const void *b_)$/;"	f	typeref:typename:int	file:
packfile_time	extern/libgit2/src/refdb_fs.h	/^	time_t packfile_time;$/;"	m	struct:__anonbd02e20e0108	typeref:typename:time_t
packfile_unpack_compressed	extern/libgit2/src/pack.c	/^static int packfile_unpack_compressed($/;"	f	typeref:typename:int	file:
packfile_unpack_header1	extern/libgit2/src/pack.c	/^static int packfile_unpack_header1($/;"	f	typeref:typename:int	file:
packref	extern/libgit2/src/refdb_fs.c	/^struct packref {$/;"	s	file:
packref_cmp	extern/libgit2/src/refdb_fs.c	/^static int packref_cmp(const void *a_, const void *b_)$/;"	f	typeref:typename:int	file:
packs	extern/libgit2/src/odb_pack.c	/^	git_vector packs;$/;"	m	struct:pack_backend	typeref:typename:git_vector	file:
page_offset	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        uint16_t page_offset; \/\/ offset from page->data$/;"	m	struct:xml_memory_string_header	typeref:typename:uint16_t	file:
page_size	extern/libgit2/src/pool.h	/^	size_t page_size;  \/* size of page in bytes *\/$/;"	m	struct:__anon7e0b9aed0108	typeref:typename:size_t
page_size	extern/libgit2/src/pool.h	/^	size_t page_size;$/;"	m	struct:__anon7e0b9aed0208	typeref:typename:size_t
pages	extern/libgit2/src/pool.h	/^	git_pool_page *pages; \/* allocated pages *\/$/;"	m	struct:__anon7e0b9aed0108	typeref:typename:git_pool_page *
paint_down_to_common	extern/libgit2/src/merge.c	/^static int paint_down_to_common($/;"	f	typeref:typename:int	file:
paired	extern/libgit2/src/status.h	/^	git_vector paired;$/;"	m	struct:git_status_list	typeref:typename:git_vector
param	extern/libgit2/include/git2/sys/transport.h	/^	void *param;$/;"	m	struct:git_smart_subtransport_definition	typeref:typename:void *
param	extern/libgit2/src/transport.c	/^	void *param;$/;"	m	struct:transport_definition	typeref:typename:void *	file:
param	extern/libgit2/src/win32/thread.h	/^	void *param;$/;"	m	struct:__anon7162bc2d0108	typeref:typename:void *
params	extern/libgit2/src/diff_xdiff.h	/^	xpparam_t    params;$/;"	m	struct:__anon14ca163c0108	typeref:typename:xpparam_t
parens_depth	extern/libgit2/deps/pcre/pcre_internal.h	/^  int  parens_depth;                \/* Depth of nested parentheses *\/$/;"	m	struct:compile_data	typeref:typename:int
parent	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_pointer_parent<xml_node_struct, 6> parent;$/;"	m	struct:pugi::xml_node_struct	typeref:typename:impl::compact_pointer_parent<xml_node_struct,6>	file:
parent	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xml_node xpath_node::parent() const$/;"	f	class:pugi::xpath_node	typeref:typename:PUGI__FN xml_node
parent	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::parent() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
parent	extern/libgit2/include/git2/cert.h	/^	git_cert parent; \/**< The parent cert *\/$/;"	m	struct:__anon6f6b75620208	typeref:typename:git_cert
parent	extern/libgit2/include/git2/cert.h	/^	git_cert parent; \/**< The parent cert *\/$/;"	m	struct:__anon6f6b75620308	typeref:typename:git_cert
parent	extern/libgit2/include/git2/sys/cred.h	/^	git_cred parent; \/**< The parent cred *\/$/;"	m	struct:git_cred_ssh_custom	typeref:typename:git_cred
parent	extern/libgit2/include/git2/sys/cred.h	/^	git_cred parent; \/**< The parent cred *\/$/;"	m	struct:git_cred_ssh_interactive	typeref:typename:git_cred
parent	extern/libgit2/include/git2/sys/cred.h	/^	git_cred parent; \/**< The parent cred *\/$/;"	m	struct:git_cred_ssh_key	typeref:typename:git_cred
parent	extern/libgit2/include/git2/sys/cred.h	/^	git_cred parent; \/**< The parent cred *\/$/;"	m	struct:git_cred_username	typeref:typename:git_cred
parent	extern/libgit2/include/git2/sys/cred.h	/^	git_cred parent; \/**< The parent cred *\/$/;"	m	struct:git_cred_userpass_plaintext	typeref:typename:git_cred
parent	extern/libgit2/src/blame_git.c	/^	git_blame__origin *parent;$/;"	m	struct:blame_chunk_cb_data	typeref:typename:git_blame__origin *	file:
parent	extern/libgit2/src/blob.c	/^	git_writestream parent;$/;"	m	struct:__anon5d2cee0d0108	typeref:typename:git_writestream	file:
parent	extern/libgit2/src/config.c	/^	git_config_iterator parent;$/;"	m	struct:__anon2d64db840208	typeref:typename:git_config_iterator	file:
parent	extern/libgit2/src/config.c	/^	git_config_iterator parent;$/;"	m	struct:__anon2d64db840508	typeref:typename:git_config_iterator	file:
parent	extern/libgit2/src/config_entries.c	/^	git_config_iterator parent;$/;"	m	struct:config_entries_iterator	typeref:typename:git_config_iterator	file:
parent	extern/libgit2/src/config_file.c	/^	git_config_backend parent;$/;"	m	struct:__anon041cc2a30108	typeref:typename:git_config_backend	file:
parent	extern/libgit2/src/config_mem.c	/^	git_config_backend parent;$/;"	m	struct:__anon36e9f1a20108	typeref:typename:git_config_backend	file:
parent	extern/libgit2/src/config_snapshot.c	/^	git_config_backend parent;$/;"	m	struct:__anonb8a4a6330108	typeref:typename:git_config_backend	file:
parent	extern/libgit2/src/filter.c	/^	git_writestream parent;$/;"	m	struct:buf_stream	typeref:typename:git_writestream	file:
parent	extern/libgit2/src/filter.c	/^	git_writestream parent;$/;"	m	struct:proxy_stream	typeref:typename:git_writestream	file:
parent	extern/libgit2/src/odb_loose.c	/^	git_odb_backend parent;$/;"	m	struct:loose_backend	typeref:typename:git_odb_backend	file:
parent	extern/libgit2/src/odb_mempack.c	/^	git_odb_backend parent;$/;"	m	struct:memory_packer_db	typeref:typename:git_odb_backend	file:
parent	extern/libgit2/src/odb_pack.c	/^	git_odb_backend parent;$/;"	m	struct:pack_backend	typeref:typename:git_odb_backend	file:
parent	extern/libgit2/src/odb_pack.c	/^	struct git_odb_writepack parent;$/;"	m	struct:pack_writepack	typeref:struct:git_odb_writepack	file:
parent	extern/libgit2/src/refdb_fs.c	/^	git_refdb_backend parent;$/;"	m	struct:refdb_fs_backend	typeref:typename:git_refdb_backend	file:
parent	extern/libgit2/src/refdb_fs.c	/^	git_reference_iterator parent;$/;"	m	struct:__anonbd02e2090308	typeref:typename:git_reference_iterator	file:
parent	extern/libgit2/src/repository.c	/^    git_repository_item_t parent;$/;"	m	struct:__anon05b1158e0108	typeref:typename:git_repository_item_t	file:
parent	extern/libgit2/src/streams/mbedtls.c	/^	git_stream parent;$/;"	m	struct:__anon7f3464670108	typeref:typename:git_stream	file:
parent	extern/libgit2/src/streams/openssl.c	/^	git_stream parent;$/;"	m	struct:__anon6b0c21600108	typeref:typename:git_stream	file:
parent	extern/libgit2/src/streams/socket.h	/^	git_stream parent;$/;"	m	struct:__anonde82408a0108	typeref:typename:git_stream
parent	extern/libgit2/src/streams/stransport.c	/^	git_stream parent;$/;"	m	struct:__anonc5fef1dc0108	typeref:typename:git_stream	file:
parent	extern/libgit2/src/transports/auth_negotiate.c	/^	git_http_auth_context parent;$/;"	m	struct:__anon8bc72ece0108	typeref:typename:git_http_auth_context	file:
parent	extern/libgit2/src/transports/auth_ntlm.c	/^	git_http_auth_context parent;$/;"	m	struct:__anon2e3324090108	typeref:typename:git_http_auth_context	file:
parent	extern/libgit2/src/transports/git.c	/^	git_smart_subtransport parent;$/;"	m	struct:__anon936e62c10208	typeref:typename:git_smart_subtransport	file:
parent	extern/libgit2/src/transports/git.c	/^	git_smart_subtransport_stream parent;$/;"	m	struct:__anon936e62c10108	typeref:typename:git_smart_subtransport_stream	file:
parent	extern/libgit2/src/transports/http.c	/^	git_smart_subtransport parent;$/;"	m	struct:__anon0458035d0308	typeref:typename:git_smart_subtransport	file:
parent	extern/libgit2/src/transports/http.c	/^	git_smart_subtransport_stream parent;$/;"	m	struct:__anon0458035d0108	typeref:typename:git_smart_subtransport_stream	file:
parent	extern/libgit2/src/transports/local.c	/^	git_transport parent;$/;"	m	struct:__anonb65cbde80108	typeref:typename:git_transport	file:
parent	extern/libgit2/src/transports/smart.h	/^	git_transport parent;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_transport
parent	extern/libgit2/src/transports/ssh.c	/^	git_smart_subtransport parent;$/;"	m	struct:__anon944cd18b0208	typeref:typename:git_smart_subtransport	file:
parent	extern/libgit2/src/transports/ssh.c	/^	git_smart_subtransport_stream parent;$/;"	m	struct:__anon944cd18b0108	typeref:typename:git_smart_subtransport_stream	file:
parent	extern/libgit2/src/transports/winhttp.c	/^	git_smart_subtransport parent;$/;"	m	struct:__anon981dd28b0408	typeref:typename:git_smart_subtransport	file:
parent	extern/libgit2/src/transports/winhttp.c	/^	git_smart_subtransport_stream parent;$/;"	m	struct:__anon981dd28b0208	typeref:typename:git_smart_subtransport_stream	file:
parent	extern/libgit2/tests/filter/stream.c	/^	git_writestream parent;$/;"	m	struct:compress_stream	typeref:typename:git_writestream	file:
parent	extern/libgit2/tests/odb/backend/backend_helpers.h	/^	git_odb_backend parent;$/;"	m	struct:__anon7ee03db30208	typeref:typename:git_odb_backend
parent	extern/libgit2/tests/worktree/submodule.c	/^static worktree_fixture parent$/;"	v	typeref:typename:worktree_fixture	file:
parent_id_str	extern/libgit2/tests/commit/write.c	/^static const char *parent_id_str = "8496071c1b46c854b31185ea97743be6a8774479";$/;"	v	typeref:typename:const char *	file:
parent_len	extern/libgit2/src/path.h	/^	size_t parent_len;$/;"	m	struct:git_path_diriter	typeref:typename:size_t
parent_path	extern/libgit2/src/iterator.c	/^	const char *parent_path;$/;"	m	struct:__anonb487a9b80308	typeref:typename:const char *	file:
parent_path	extern/libgit2/src/worktree.h	/^	char *parent_path;$/;"	m	struct:git_worktree	typeref:typename:char *
parent_utf8_len	extern/libgit2/src/path.h	/^	size_t parent_utf8_len;$/;"	m	struct:git_path_diriter	typeref:typename:size_t
parents	extern/libgit2/src/annotated_commit.h	/^	git_array_oid_t parents;$/;"	m	struct:git_annotated_commit	typeref:typename:git_array_oid_t
parents	extern/libgit2/src/commit.c	/^	const git_commit **parents;$/;"	m	struct:__anon2b8e95b70308	typeref:typename:const git_commit **	file:
parents	extern/libgit2/src/commit.c	/^	const git_oid **parents;$/;"	m	struct:__anon2b8e95b70208	typeref:typename:const git_oid **	file:
parents	extern/libgit2/src/commit_list.h	/^	struct git_commit_list_node **parents;$/;"	m	struct:git_commit_list_node	typeref:struct:git_commit_list_node **
parse	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			static binary_op_t parse(xpath_lexer& lexer)$/;"	f	struct:xpath_parser::binary_op_t	typeref:typename:binary_op_t	file:
parse	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		static xpath_ast_node* parse(const char_t* query, xpath_variable_set* variables, xpath_allocat/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
parse	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* parse()$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
parse	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static char_t* parse(char_t* s) {$/;"	f	struct:strconv_pcdata_impl	typeref:typename:char_t *	file:
parse	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static xml_parse_result parse(char_t* buffer, size_t length, xml_document_struct* xmldoc/;"	f	struct:xml_parser	typeref:typename:xml_parse_result	file:
parse	extern/libgit2/src/object.c	/^	int  (*parse)(void *self, git_odb_object *obj);$/;"	m	struct:__anon4e5bf2450108	typeref:typename:int (*)(void * self,git_odb_object * obj)	file:
parse	extern/libgit2/tests/generate.py	/^    def parse(self, contents):$/;"	m	class:Module
parse_authenticate_response	extern/libgit2/src/transports/http.c	/^static int parse_authenticate_response(http_server *server)$/;"	f	typeref:typename:int	file:
parse_axis_name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		axis_t parse_axis_name(const xpath_lexer_string& name, bool& specified)$/;"	f	struct:xpath_parser	typeref:typename:axis_t	file:
parse_buffer	extern/libgit2/src/transports/http.c	/^	gitno_buffer parse_buffer;$/;"	m	struct:__anon0458035d0308	typeref:typename:gitno_buffer	file:
parse_buffer_data	extern/libgit2/src/transports/http.c	/^	char parse_buffer_data[NETIO_BUFSIZE];$/;"	m	struct:__anon0458035d0308	typeref:typename:char[]	file:
parse_cdata	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_cdata = 0x0004;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_comments	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_comments = 0x0002;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_commit	extern/libgit2/tests/commit/parse.c	/^static int parse_commit(git_commit **out, const char *buffer)$/;"	f	typeref:typename:int	file:
parse_conditional_include	extern/libgit2/src/config_file.c	/^static int parse_conditional_include(config_file_parse_data *parse_data, const char *section, co/;"	f	typeref:typename:int	file:
parse_ctx	extern/libgit2/src/patch_parse.h	/^	git_parse_ctx parse_ctx;$/;"	m	struct:__anonadbd87dd0108	typeref:typename:git_parse_ctx
parse_date_basic	extern/libgit2/src/date.c	/^static int parse_date_basic(const char *date, git_time_t *timestamp, int *offset)$/;"	f	typeref:typename:int	file:
parse_declaration	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_declaration = 0x0100;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_declaration_encoding	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool parse_declaration_encoding(const uint8_t* data, size_t size, const uint8_t*& o/;"	f	typeref:typename:PUGI__FN bool
parse_default	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_default = parse_cdata | parse_escapes | parse_wconv_attribute | par/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_doctype	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_doctype = 0x0200;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_doctype_group	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t* parse_doctype_group(char_t* s, char_t endch) {$/;"	f	struct:xml_parser	typeref:typename:char_t *	file:
parse_doctype_ignore	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t* parse_doctype_ignore(char_t* s) {$/;"	f	struct:xml_parser	typeref:typename:char_t *	file:
parse_doctype_primitive	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t* parse_doctype_primitive(char_t* s) {$/;"	f	struct:xml_parser	typeref:typename:char_t *	file:
parse_embed_pcdata	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_embed_pcdata = 0x2000;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_eol	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static char_t* parse_eol(char_t* s, char_t end_quote) {$/;"	f	struct:strconv_attribute_impl	typeref:typename:char_t *	file:
parse_eol	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_eol = 0x0020;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_error	extern/libgit2/src/transports/http.c	/^	int parse_error;$/;"	m	struct:__anon0458035d0308	typeref:typename:int	file:
parse_escapes	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_escapes = 0x0010;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_exclamation	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t* parse_exclamation(char_t* s, xml_node_struct* cursor, unsigned int optmsk, char_/;"	f	struct:xml_parser	typeref:typename:char_t *	file:
parse_expression	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* parse_expression(int limit = 0)$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
parse_expression_rec	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* parse_expression_rec(xpath_ast_node* lhs, int limit)$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
parse_filter_expression	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* parse_filter_expression()$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
parse_finished	extern/libgit2/src/transports/http.c	/^	unsigned parse_finished : 1,$/;"	m	struct:__anon0458035d0308	typeref:typename:unsigned:1	file:
parse_fragment	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_fragment = 0x1000;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_full	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_full = parse_default | parse_pi | parse_comments | parse_declaratio/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_function	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* parse_function(const xpath_lexer_string& name, size_t argc, xpath_ast_node* ar/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
parse_header	extern/libgit2/src/indexer.c	/^static int parse_header(struct git_pack_header *hdr, struct git_pack_file *pack)$/;"	f	typeref:typename:int	file:
parse_header	extern/libgit2/src/odb_loose.c	/^static int parse_header($/;"	f	typeref:typename:int	file:
parse_header_copyfrom	extern/libgit2/src/patch_parse.c	/^static int parse_header_copyfrom($/;"	f	typeref:typename:int	file:
parse_header_copyto	extern/libgit2/src/patch_parse.c	/^static int parse_header_copyto($/;"	f	typeref:typename:int	file:
parse_header_dissimilarity	extern/libgit2/src/patch_parse.c	/^static int parse_header_dissimilarity($/;"	f	typeref:typename:int	file:
parse_header_git	extern/libgit2/src/patch_parse.c	/^static int parse_header_git($/;"	f	typeref:typename:int	file:
parse_header_git_deletedfilemode	extern/libgit2/src/patch_parse.c	/^static int parse_header_git_deletedfilemode($/;"	f	typeref:typename:int	file:
parse_header_git_index	extern/libgit2/src/patch_parse.c	/^static int parse_header_git_index($/;"	f	typeref:typename:int	file:
parse_header_git_newfilemode	extern/libgit2/src/patch_parse.c	/^static int parse_header_git_newfilemode($/;"	f	typeref:typename:int	file:
parse_header_git_newmode	extern/libgit2/src/patch_parse.c	/^static int parse_header_git_newmode($/;"	f	typeref:typename:int	file:
parse_header_git_newpath	extern/libgit2/src/patch_parse.c	/^static int parse_header_git_newpath($/;"	f	typeref:typename:int	file:
parse_header_git_oldmode	extern/libgit2/src/patch_parse.c	/^static int parse_header_git_oldmode($/;"	f	typeref:typename:int	file:
parse_header_git_oldpath	extern/libgit2/src/patch_parse.c	/^static int parse_header_git_oldpath($/;"	f	typeref:typename:int	file:
parse_header_mode	extern/libgit2/src/patch_parse.c	/^static int parse_header_mode(uint16_t *mode, git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:int	file:
parse_header_name	extern/libgit2/src/transports/http.c	/^	git_buf parse_header_name;$/;"	m	struct:__anon0458035d0308	typeref:typename:git_buf	file:
parse_header_oid	extern/libgit2/src/patch_parse.c	/^static int parse_header_oid($/;"	f	typeref:typename:int	file:
parse_header_packlike	extern/libgit2/src/odb_loose.c	/^static int parse_header_packlike($/;"	f	typeref:typename:int	file:
parse_header_path	extern/libgit2/src/patch_parse.c	/^static int parse_header_path(char **out, git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:int	file:
parse_header_path_buf	extern/libgit2/src/patch_parse.c	/^static int parse_header_path_buf(git_buf *path, git_patch_parse_ctx *ctx, size_t path_len)$/;"	f	typeref:typename:int	file:
parse_header_percent	extern/libgit2/src/patch_parse.c	/^static int parse_header_percent(uint16_t *out, git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:int	file:
parse_header_rename	extern/libgit2/src/patch_parse.c	/^static int parse_header_rename($/;"	f	typeref:typename:int	file:
parse_header_renamefrom	extern/libgit2/src/patch_parse.c	/^static int parse_header_renamefrom($/;"	f	typeref:typename:int	file:
parse_header_renameto	extern/libgit2/src/patch_parse.c	/^static int parse_header_renameto($/;"	f	typeref:typename:int	file:
parse_header_similarity	extern/libgit2/src/patch_parse.c	/^static int parse_header_similarity($/;"	f	typeref:typename:int	file:
parse_header_start	extern/libgit2/src/patch_parse.c	/^static int parse_header_start(git_patch_parsed *patch, git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:int	file:
parse_header_state	extern/libgit2/src/patch_parse.c	/^} parse_header_state;$/;"	t	typeref:enum:__anonadbd87d80203	file:
parse_header_transition	extern/libgit2/src/patch_parse.c	/^} parse_header_transition;$/;"	t	typeref:struct:__anonadbd87d80308	file:
parse_header_value	extern/libgit2/src/transports/http.c	/^	git_buf parse_header_value;$/;"	m	struct:__anon0458035d0308	typeref:typename:git_buf	file:
parse_hunk_body	extern/libgit2/src/patch_parse.c	/^static int parse_hunk_body($/;"	f	typeref:typename:int	file:
parse_hunk_header	extern/libgit2/src/patch_parse.c	/^static int parse_hunk_header($/;"	f	typeref:typename:int	file:
parse_ignore_file	extern/libgit2/src/ignore.c	/^static int parse_ignore_file($/;"	f	typeref:typename:int	file:
parse_include	extern/libgit2/src/config_file.c	/^static int parse_include(config_file_parse_data *parse_data, const char *file)$/;"	f	typeref:typename:int	file:
parse_index	extern/libgit2/src/index.c	/^static int parse_index(git_index *index, const char *buffer, size_t buffer_size)$/;"	f	typeref:typename:int	file:
parse_int	extern/libgit2/src/patch_parse.c	/^static int parse_int(int *out, git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:int	file:
parse_len	extern/libgit2/src/transports/smart_pkt.c	/^static int parse_len(size_t *out, const char *line, size_t linelen)$/;"	f	typeref:typename:int	file:
parse_location_path	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* parse_location_path()$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
parse_mailmap_entry	extern/libgit2/src/mailmap.c	/^static int parse_mailmap_entry($/;"	f	typeref:typename:int	file:
parse_minimal	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_minimal = 0x0000;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_mode	extern/libgit2/src/tree.c	/^static int parse_mode(uint16_t *mode_out, const char *buffer, size_t buffer_len, const char **bu/;"	f	typeref:typename:int	file:
parse_multiline_variable	extern/libgit2/src/config_parse.c	/^static int parse_multiline_variable(git_config_parser *reader, git_buf *value, int in_quotes)$/;"	f	typeref:typename:int	file:
parse_name	extern/libgit2/src/config_parse.c	/^static int parse_name($/;"	f	typeref:typename:int	file:
parse_node_test_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		nodetest_t parse_node_test_type(const xpath_lexer_string& name)$/;"	f	struct:xpath_parser	typeref:typename:nodetest_t	file:
parse_obj_type	extern/libgit2/src/revparse.c	/^static git_object_t parse_obj_type(const char *str)$/;"	f	typeref:typename:git_object_t	file:
parse_optimized_patterns	extern/libgit2/src/attr_file.c	/^static bool parse_optimized_patterns($/;"	f	typeref:typename:bool	file:
parse_options	extern/libgit2/examples/checkout.c	/^static void parse_options(const char **repo_path, checkout_options *opts, struct args_info *args/;"	f	typeref:typename:void	file:
parse_options	extern/libgit2/examples/describe.c	/^static void parse_options(describe_options *opts, int argc, char **argv)$/;"	f	typeref:typename:void	file:
parse_options	extern/libgit2/examples/log.c	/^static int parse_options($/;"	f	typeref:typename:int	file:
parse_options	extern/libgit2/examples/ls-files.c	/^static int parse_options(ls_options *opts, int argc, char *argv[])$/;"	f	typeref:typename:int	file:
parse_options	extern/libgit2/examples/merge.c	/^static void parse_options(const char **repo_path, merge_options *opts, int argc, char **argv)$/;"	f	typeref:typename:void	file:
parse_options	extern/libgit2/examples/tag.c	/^static void parse_options(tag_action *action, tag_options *opts, int argc, char **argv)$/;"	f	typeref:typename:void	file:
parse_opts	extern/libgit2/examples/add.c	/^static void parse_opts(int *options, int *count, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_opts	extern/libgit2/examples/blame.c	/^static void parse_opts(struct opts *o, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_opts	extern/libgit2/examples/cat-file.c	/^static void parse_opts(struct opts *o, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_opts	extern/libgit2/examples/diff.c	/^static void parse_opts(struct opts *o, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_opts	extern/libgit2/examples/init.c	/^static void parse_opts(struct opts *o, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_opts	extern/libgit2/examples/rev-parse.c	/^static void parse_opts(struct parse_state *ps, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_opts	extern/libgit2/examples/status.c	/^static void parse_opts(struct opts *o, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_patch_binary	extern/libgit2/src/patch_parse.c	/^static int parse_patch_binary($/;"	f	typeref:typename:int	file:
parse_patch_binary_nodata	extern/libgit2/src/patch_parse.c	/^static int parse_patch_binary_nodata($/;"	f	typeref:typename:int	file:
parse_patch_binary_side	extern/libgit2/src/patch_parse.c	/^static int parse_patch_binary_side($/;"	f	typeref:typename:int	file:
parse_patch_body	extern/libgit2/src/patch_parse.c	/^static int parse_patch_body($/;"	f	typeref:typename:int	file:
parse_patch_header	extern/libgit2/src/patch_parse.c	/^static int parse_patch_header($/;"	f	typeref:typename:int	file:
parse_patch_hunks	extern/libgit2/src/patch_parse.c	/^static int parse_patch_hunks($/;"	f	typeref:typename:int	file:
parse_path_or_unary_expression	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* parse_path_or_unary_expression()$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
parse_pi	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_pi = 0x0001;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_primary_expression	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* parse_primary_expression()$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
parse_question	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t* parse_question(char_t* s, xml_node_struct*& ref_cursor, unsigned int optmsk, cha/;"	f	struct:xml_parser	typeref:typename:char_t *	file:
parse_raw	extern/libgit2/src/object.c	/^	int  (*parse_raw)(void *self, const char *data, size_t size);$/;"	m	struct:__anon4e5bf2450108	typeref:typename:int (*)(void * self,const char * data,size_t size)	file:
parse_refspec	extern/libgit2/src/push.c	/^static int parse_refspec(git_push *push, push_spec **spec, const char *str)$/;"	f	typeref:typename:int	file:
parse_relative_location_path	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* parse_relative_location_path(xpath_ast_node* set)$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
parse_report	extern/libgit2/src/transports/smart_protocol.c	/^static int parse_report(transport_smart *transport, git_push *push)$/;"	f	typeref:typename:int	file:
parse_revision	extern/libgit2/examples/rev-parse.c	/^static int parse_revision(git_repository *repo, struct parse_state *ps)$/;"	f	typeref:typename:int	file:
parse_section_header	extern/libgit2/src/config_parse.c	/^static int parse_section_header(git_config_parser *reader, char **section_out)$/;"	f	typeref:typename:int	file:
parse_shared	extern/libgit2/examples/init.c	/^static uint32_t parse_shared(const char *shared)$/;"	f	typeref:typename:uint32_t	file:
parse_simple	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static char_t* parse_simple(char_t* s, char_t end_quote) {$/;"	f	struct:strconv_attribute_impl	typeref:typename:char_t *	file:
parse_skip_bom	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	f	struct:xml_parser	typeref:typename:char_t *	file:
parse_skip_bom	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static char_t* parse_skip_bom(char_t* s) {$/;"	f	struct:xml_parser	typeref:typename:char_t *	file:
parse_state	extern/libgit2/examples/rev-parse.c	/^struct parse_state {$/;"	s	file:
parse_step	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* parse_step(xpath_ast_node* set)$/;"	f	struct:xpath_parser	typeref:typename:xpath_ast_node *	file:
parse_subcmd	extern/libgit2/examples/remote.c	/^static void parse_subcmd($/;"	f	typeref:typename:void	file:
parse_subcommand	extern/libgit2/examples/stash.c	/^static void parse_subcommand(struct opts *opts, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_subsection_header	extern/libgit2/src/config_parse.c	/^static int parse_subsection_header(git_config_parser *reader, const char *line, size_t pos, cons/;"	f	typeref:typename:int	file:
parse_test_case	extern/libgit2/tests/commit/parse.c	/^} parse_test_case;$/;"	t	typeref:struct:__anond44356cc0108	file:
parse_tree	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        char_t* parse_tree(char_t* s, xml_node_struct* root, unsigned int optmsk, char_t endch) /;"	f	struct:xml_parser	typeref:typename:char_t *	file:
parse_trim_pcdata	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_trim_pcdata = 0x0800;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_unauthorized_response	extern/libgit2/src/transports/winhttp.c	/^static int parse_unauthorized_response($/;"	f	typeref:typename:int	file:
parse_url_char	extern/libgit2/deps/http-parser/http_parser.c	/^parse_url_char(enum state s, const char ch)$/;"	f	typeref:enum:state	file:
parse_variable	extern/libgit2/src/config_parse.c	/^static int parse_variable(git_config_parser *reader, char **var_name, char **var_value)$/;"	f	typeref:typename:int	file:
parse_wconv	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static char_t* parse_wconv(char_t* s, char_t end_quote) {$/;"	f	struct:strconv_attribute_impl	typeref:typename:char_t *	file:
parse_wconv_attribute	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_wconv_attribute = 0x0040;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_wnorm	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        static char_t* parse_wnorm(char_t* s, char_t end_quote) {$/;"	f	struct:strconv_attribute_impl	typeref:typename:char_t *	file:
parse_wnorm_attribute	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_wnorm_attribute = 0x0080;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_ws_pcdata	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_ws_pcdata = 0x0008;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parse_ws_pcdata_single	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    const unsigned int parse_ws_pcdata_single = 0x0400;$/;"	v	namespace:pugi	typeref:typename:const unsigned int
parsed	extern/libgit2/src/commit_list.h	/^			 parsed:1,$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned int:1
parsed_header	extern/libgit2/src/indexer.c	/^	unsigned int parsed_header :1,$/;"	m	struct:git_indexer	typeref:typename:unsigned int:1	file:
parser	extern/libgit2/src/transports/http.c	/^	http_parser parser;$/;"	m	struct:__anon0458035d0308	typeref:typename:http_parser	file:
parser	extern/libgit2/tests/generate.py	/^    parser = OptionParser()$/;"	v
parser_context	extern/libgit2/src/transports/http.c	/^} parser_context;$/;"	t	typeref:struct:__anon0458035d0408	file:
partial	extern/libgit2/deps/pcre/pcre_internal.h	/^  int    partial;                 \/* PARTIAL options *\/$/;"	m	struct:match_data	typeref:typename:int
partialmatch	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *partialmatch;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
partialmatchlabel	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *partialmatchlabel;$/;"	m	struct:compiler_common	typeref:struct:sljit_label *	file:
partition3	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename T, typename Pred> void partition3(T* begin, T* end, T pivot, const Pred& pre/;"	f	typeref:typename:void
pass_blame	extern/libgit2/src/blame_git.c	/^static int pass_blame(git_blame *blame, git_blame__origin *origin, uint32_t opt)$/;"	f	typeref:typename:int	file:
pass_blame_to_parent	extern/libgit2/src/blame_git.c	/^static int pass_blame_to_parent($/;"	f	typeref:typename:int	file:
pass_whole_blame	extern/libgit2/src/blame_git.c	/^static int pass_whole_blame(git_blame *blame,$/;"	f	typeref:typename:int	file:
passedString	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            static const char* passedString() { return "ok"; }$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:const char *
passed_refspecs	extern/libgit2/src/remote.h	/^	int passed_refspecs;$/;"	m	struct:git_remote	typeref:typename:int
passing_commit_cases	extern/libgit2/tests/commit/parse.c	/^static char *passing_commit_cases[] = {$/;"	v	typeref:typename:char * []	file:
passing_header_cases	extern/libgit2/tests/commit/parse.c	/^static parse_test_case passing_header_cases[] = {$/;"	v	typeref:typename:parse_test_case[]	file:
passing_signature_cases	extern/libgit2/tests/commit/parse.c	/^passing_signature_test_case passing_signature_cases[] = {$/;"	v	typeref:typename:passing_signature_test_case[]
passing_signature_test_case	extern/libgit2/tests/commit/parse.c	/^} passing_signature_test_case;$/;"	t	typeref:struct:__anond44356cc0208	file:
passive_refspecs	extern/libgit2/src/remote.h	/^	git_vector passive_refspecs;$/;"	m	struct:git_remote	typeref:typename:git_vector
passphrase	extern/libgit2/include/git2/sys/cred.h	/^	char *passphrase; \/**< Passphrase used to decrypt the private key *\/$/;"	m	struct:git_cred_ssh_key	typeref:typename:char *
password	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *password;$/;"	m	struct:ntlm_client	typeref:typename:char *
password	extern/libgit2/include/git2/cred_helpers.h	/^	const char *password;$/;"	m	struct:git_cred_userpass_payload	typeref:typename:const char *
password	extern/libgit2/include/git2/sys/cred.h	/^	char *password; \/**< The password to use *\/$/;"	m	struct:git_cred_userpass_plaintext	typeref:typename:char *
password	extern/libgit2/src/net.h	/^	char *password;$/;"	m	struct:git_net_url	typeref:typename:char *
password_utf16	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *password_utf16;$/;"	m	struct:ntlm_client	typeref:typename:char *
password_utf16_len	extern/libgit2/deps/ntlmclient/ntlm.h	/^	size_t password_utf16_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
past	extern/libgit2/deps/zlib/gzguts.h	/^    int past;               \/* true if read requested past end *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:int
patch	extern/libgit2/src/diff_xdiff.c	/^	git_patch_generated *patch;$/;"	m	struct:__anon14ca16370108	typeref:typename:git_patch_generated *	file:
patch	extern/libgit2/src/patch_generate.c	/^	git_patch_generated patch;$/;"	m	struct:__anon63ef94e80108	typeref:typename:git_patch_generated	file:
patch_error_outofrange	extern/libgit2/src/patch.c	/^static int patch_error_outofrange(const char *thing)$/;"	f	typeref:typename:int	file:
patch_fn	extern/libgit2/src/diff.h	/^	int (*patch_fn)(git_patch **out, git_diff *diff, size_t idx);$/;"	m	struct:git_diff	typeref:typename:int (*)(git_patch ** out,git_diff * diff,size_t idx)
patch_from_sources	extern/libgit2/src/patch_generate.c	/^static int patch_from_sources($/;"	f	typeref:typename:int	file:
patch_generated_alloc_from_diff	extern/libgit2/src/patch_generate.c	/^static int patch_generated_alloc_from_diff($/;"	f	typeref:typename:int	file:
patch_generated_binary_cb	extern/libgit2/src/patch_generate.c	/^static int patch_generated_binary_cb($/;"	f	typeref:typename:int	file:
patch_generated_create	extern/libgit2/src/patch_generate.c	/^static int patch_generated_create($/;"	f	typeref:typename:int	file:
patch_generated_diffable	extern/libgit2/src/patch_generate.c	/^static bool patch_generated_diffable(git_patch_generated *patch)$/;"	f	typeref:typename:bool	file:
patch_generated_file_cb	extern/libgit2/src/patch_generate.c	/^static int patch_generated_file_cb($/;"	f	typeref:typename:int	file:
patch_generated_free	extern/libgit2/src/patch_generate.c	/^static void patch_generated_free(git_patch *p)$/;"	f	typeref:typename:void	file:
patch_generated_from_sources	extern/libgit2/src/patch_generate.c	/^static int patch_generated_from_sources($/;"	f	typeref:typename:int	file:
patch_generated_init	extern/libgit2/src/patch_generate.c	/^static int patch_generated_init($/;"	f	typeref:typename:int	file:
patch_generated_init_common	extern/libgit2/src/patch_generate.c	/^static void patch_generated_init_common(git_patch_generated *patch)$/;"	f	typeref:typename:void	file:
patch_generated_invoke_file_callback	extern/libgit2/src/patch_generate.c	/^static int patch_generated_invoke_file_callback($/;"	f	typeref:typename:int	file:
patch_generated_line_cb	extern/libgit2/src/patch_generate.c	/^static int patch_generated_line_cb($/;"	f	typeref:typename:int	file:
patch_generated_load	extern/libgit2/src/patch_generate.c	/^static int patch_generated_load(git_patch_generated *patch, git_patch_generated_output *output)$/;"	f	typeref:typename:int	file:
patch_generated_normalize_options	extern/libgit2/src/patch_generate.c	/^static int patch_generated_normalize_options($/;"	f	typeref:typename:int	file:
patch_generated_update_binary	extern/libgit2/src/patch_generate.c	/^static void patch_generated_update_binary(git_patch_generated *patch)$/;"	f	typeref:typename:void	file:
patch_generated_with_delta	extern/libgit2/src/patch_generate.c	/^} patch_generated_with_delta;$/;"	t	typeref:struct:__anon63ef94e80108	file:
patch_generated_with_delta_alloc	extern/libgit2/src/patch_generate.c	/^static int patch_generated_with_delta_alloc($/;"	f	typeref:typename:int	file:
patch_id_args	extern/libgit2/src/diff.c	/^struct patch_id_args {$/;"	s	file:
patch_image	extern/libgit2/src/apply.c	/^} patch_image;$/;"	t	typeref:struct:__anonbf3de2540108	file:
patch_image_free	extern/libgit2/src/apply.c	/^static void patch_image_free(patch_image *image)$/;"	f	typeref:typename:void	file:
patch_image_init_fromstr	extern/libgit2/src/apply.c	/^static int patch_image_init_fromstr($/;"	f	typeref:typename:int	file:
patch_line_init	extern/libgit2/src/apply.c	/^static void patch_line_init($/;"	f	typeref:typename:void	file:
patch_no	extern/libgit2/include/git2/diff.h	/^	size_t patch_no;$/;"	m	struct:__anon72022fed1308	typeref:typename:size_t
patch_parse_ctx_free	extern/libgit2/src/patch_parse.c	/^static void patch_parse_ctx_free(git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:void	file:
patch_parsed__free	extern/libgit2/src/patch_parse.c	/^static void patch_parsed__free(git_patch *p)$/;"	f	typeref:typename:void	file:
patch_print_from_patchfile	extern/libgit2/tests/patch/print.c	/^void patch_print_from_patchfile(const char *data, size_t len)$/;"	f	typeref:typename:void
patches	extern/libgit2/src/diff_parse.h	/^	git_vector patches;$/;"	m	struct:__anona6a2af860108	typeref:typename:git_vector
patchid_line_cb	extern/libgit2/src/diff.c	/^static int patchid_line_cb($/;"	f	typeref:typename:int	file:
path	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN string_t xml_node::path(char_t delimiter) const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN string_t
path	extern/libgit2/deps/zlib/gzguts.h	/^    char *path;             \/* path or fd for error messages *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:char *
path	extern/libgit2/examples/blame.c	/^	char *path;$/;"	m	struct:opts	typeref:typename:char *	file:
path	extern/libgit2/examples/clone.c	/^	const char *path;$/;"	m	struct:progress_data	typeref:typename:const char *	file:
path	extern/libgit2/include/git2/diff.h	/^	const char *path;$/;"	m	struct:__anon72022fed0408	typeref:typename:const char *
path	extern/libgit2/include/git2/index.h	/^	const char *path;$/;"	m	struct:git_index_entry	typeref:typename:const char *
path	extern/libgit2/include/git2/merge.h	/^	const char *path;$/;"	m	struct:__anon5e9a43240108	typeref:typename:const char *
path	extern/libgit2/include/git2/merge.h	/^	const char *path;$/;"	m	struct:__anon5e9a43240608	typeref:typename:const char *
path	extern/libgit2/include/git2/sys/index.h	/^	char *path;$/;"	m	struct:git_index_reuc_entry	typeref:typename:char *
path	extern/libgit2/include/git2/tree.h	/^	const char *path;$/;"	m	struct:__anon97f705e40308	typeref:typename:const char *
path	extern/libgit2/src/attr_file.h	/^	char    *path;$/;"	m	struct:__anon32d629ad0808	typeref:typename:char *
path	extern/libgit2/src/attr_file.h	/^	const char *path; \/* points into fullpath *\/$/;"	m	struct:git_attr_file_entry	typeref:typename:const char *
path	extern/libgit2/src/blame.h	/^	char *path;$/;"	m	struct:git_blame	typeref:typename:char *
path	extern/libgit2/src/blame.h	/^	char path[GIT_FLEX_ARRAY];$/;"	m	struct:git_blame__origin	typeref:typename:char[]
path	extern/libgit2/src/checkout.c	/^	const char *path;$/;"	m	struct:checkout_stream	typeref:typename:const char *	file:
path	extern/libgit2/src/config_file.c	/^	char *path;$/;"	m	struct:config_file	typeref:typename:char *	file:
path	extern/libgit2/src/config_parse.h	/^	const char *path;$/;"	m	struct:__anon774755630108	typeref:typename:const char *
path	extern/libgit2/src/describe.c	/^	char *path;$/;"	m	struct:commit_name	typeref:typename:char *	file:
path	extern/libgit2/src/filter.c	/^	char path[GIT_FLEX_ARRAY];$/;"	m	struct:git_filter_list	typeref:typename:char[]	file:
path	extern/libgit2/src/filter.c	/^	const char     *path;$/;"	m	struct:git_filter_source	typeref:typename:const char *	file:
path	extern/libgit2/src/index.c	/^	char path[1]; \/* arbitrary length *\/$/;"	m	struct:entry_long	typeref:typename:char[1]	file:
path	extern/libgit2/src/index.c	/^	char path[1]; \/* arbitrary length *\/$/;"	m	struct:entry_short	typeref:typename:char[1]	file:
path	extern/libgit2/src/index.c	/^	char path[GIT_FLEX_ARRAY];$/;"	m	struct:entry_internal	typeref:typename:char[]	file:
path	extern/libgit2/src/index.c	/^	char path[GIT_FLEX_ARRAY];$/;"	m	struct:reuc_entry_internal	typeref:typename:char[]	file:
path	extern/libgit2/src/index.c	/^	const char *path;$/;"	m	struct:entry_srch_key	typeref:typename:const char *	file:
path	extern/libgit2/src/iterator.c	/^	char path[GIT_FLEX_ARRAY];$/;"	m	struct:__anonb487a9b80608	typeref:typename:char[]	file:
path	extern/libgit2/src/iterator.c	/^	git_buf path;$/;"	m	struct:__anonb487a9b80408	typeref:typename:git_buf	file:
path	extern/libgit2/src/net.h	/^	char *path;$/;"	m	struct:git_net_url	typeref:typename:char *
path	extern/libgit2/src/path.h	/^	git_buf path;$/;"	m	struct:git_path_diriter	typeref:typename:git_buf
path	extern/libgit2/src/path.h	/^	git_win32_path path;$/;"	m	struct:git_path_diriter	typeref:typename:git_win32_path
path	extern/libgit2/src/repo_template.h	/^	const char *path;$/;"	m	struct:__anon60a8fbc40108	typeref:typename:const char *
path	extern/libgit2/src/sortedcache.h	/^	char         path[GIT_FLEX_ARRAY];$/;"	m	struct:__anond92d40380108	typeref:typename:char[]
path	extern/libgit2/src/submodule.c	/^	const char *path;$/;"	m	struct:__anon952effbe0308	typeref:typename:const char *	file:
path	extern/libgit2/src/submodule.h	/^	char *path; \/* important: may just point to "name" string *\/$/;"	m	struct:git_submodule	typeref:typename:char *
path	extern/libgit2/src/transports/smart.h	/^	char *path;$/;"	m	struct:git_pkt_cmd	typeref:typename:char *
path	extern/libgit2/src/win32/findfile.c	/^	git_win32_path path;$/;"	m	struct:__anon9f0fab110108	typeref:typename:git_win32_path	file:
path	extern/libgit2/tests/attr/attr_expect.h	/^	const char *path;$/;"	m	struct:attr_expected	typeref:typename:const char *
path	extern/libgit2/tests/checkout/conflict.c	/^	char path[128];$/;"	m	struct:checkout_index_entry	typeref:typename:char[128]	file:
path	extern/libgit2/tests/core/dirent.c	/^	git_buf path;$/;"	m	struct:walk_data	typeref:typename:git_buf	file:
path	extern/libgit2/tests/core/sortedcache.c	/^	char path[GIT_FLEX_ARRAY];$/;"	m	struct:__anon76b5c0160108	typeref:typename:char[]	file:
path	extern/libgit2/tests/diff/diff_helpers.h	/^	const char *path;$/;"	m	struct:__anona765b0910208	typeref:typename:const char *
path	extern/libgit2/tests/diff/racediffiter.c	/^	const char *path;$/;"	m	struct:__anone9839ae90108	typeref:typename:const char *	file:
path	extern/libgit2/tests/generate.py	/^    path = args.pop() if args else '.'$/;"	v
path	extern/libgit2/tests/ignore/status.c	/^		const char *path;$/;"	m	struct:test_ignore_status__0::__anoncf0ee4500108	typeref:typename:const char *	file:
path	extern/libgit2/tests/index/tests.c	/^   char path[128];$/;"	m	struct:test_entry	typeref:typename:char[128]	file:
path	extern/libgit2/tests/iterator/workdir.c	/^		const char *path;$/;"	m	struct:test_iterator_workdir__builtin_ignores::__anon521ee3d40108	typeref:typename:const char *	file:
path	extern/libgit2/tests/merge/merge_helpers.h	/^	char path[128];$/;"	m	struct:merge_index_entry	typeref:typename:char[128]
path	extern/libgit2/tests/merge/merge_helpers.h	/^	char path[128];$/;"	m	struct:merge_reuc_entry	typeref:typename:char[128]
path	extern/libgit2/tests/repo/config.c	/^static git_buf path = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
path	extern/libgit2/tests/threads/refdb.c	/^	const char *path;$/;"	m	struct:th_data	typeref:typename:const char *	file:
path	extern/libgit2/tests/win32/longpath.c	/^static git_buf path = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
path__cwd	extern/libgit2/src/win32/path_w32.c	/^GIT_INLINE(int) path__cwd(wchar_t *path, int size)$/;"	f	typeref:typename:int
path__is_nt_namespace	extern/libgit2/src/win32/path_w32.c	/^#define path__is_nt_namespace(/;"	d	file:
path__is_unc	extern/libgit2/src/win32/path_w32.c	/^#define path__is_unc(/;"	d	file:
path__skip_prefix	extern/libgit2/src/win32/path_w32.c	/^static wchar_t *path__skip_prefix(wchar_t *path)$/;"	f	typeref:typename:wchar_t *	file:
path__skip_server	extern/libgit2/src/win32/path_w32.c	/^static wchar_t *path__skip_server(wchar_t *path)$/;"	f	typeref:typename:wchar_t *	file:
path_dirent_data	extern/libgit2/src/path.c	/^typedef char path_dirent_data[sizeof(struct dirent) + FILENAME_MAX + 1];$/;"	t	typeref:typename:char[sizeof (struct dirent)+FILENAME_MAX+1]	file:
path_dirent_data	extern/libgit2/src/path.c	/^typedef struct dirent path_dirent_data;$/;"	t	typeref:struct:dirent	file:
path_found_entry	extern/libgit2/src/path.c	/^static int path_found_entry(void *payload, git_buf *path)$/;"	f	typeref:typename:int	file:
path_is_prefixed	extern/libgit2/src/merge.c	/^GIT_INLINE(bool) path_is_prefixed(const char *parent, const char *child)$/;"	f	typeref:typename:bool
path_is_volume	extern/libgit2/src/win32/path_w32.c	/^static bool path_is_volume(wchar_t *target, size_t target_len)$/;"	f	typeref:typename:bool	file:
path_len	extern/libgit2/src/iterator.c	/^	size_t path_len;$/;"	m	struct:__anonb487a9b80608	typeref:typename:size_t	file:
path_len	extern/libgit2/src/iterator.c	/^	size_t path_len;$/;"	m	struct:__anonb487a9b80708	typeref:typename:size_t	file:
path_lock	extern/libgit2/src/filebuf.h	/^	char *path_lock;$/;"	m	struct:git_filebuf	typeref:typename:char *
path_original	extern/libgit2/src/filebuf.h	/^	char *path_original;$/;"	m	struct:git_filebuf	typeref:typename:char *
path_unless_empty	extern/libgit2/src/repository.c	/^static const char *path_unless_empty(git_buf *buf)$/;"	f	typeref:typename:const char *	file:
path_utf8	extern/libgit2/src/path.h	/^	git_buf path_utf8;$/;"	m	struct:git_path_diriter	typeref:typename:git_buf
pathlen	extern/libgit2/src/index.c	/^	size_t pathlen;$/;"	m	struct:entry_internal	typeref:typename:size_t	file:
pathlen	extern/libgit2/src/index.c	/^	size_t pathlen;$/;"	m	struct:entry_srch_key	typeref:typename:size_t	file:
pathlen	extern/libgit2/src/index.c	/^	size_t pathlen;$/;"	m	struct:reuc_entry_internal	typeref:typename:size_t	file:
pathlist	extern/libgit2/src/iterator.h	/^	git_strarray pathlist;$/;"	m	struct:__anonb487a9bd0408	typeref:typename:git_strarray
pathlist	extern/libgit2/src/iterator.h	/^	git_vector pathlist;$/;"	m	struct:git_iterator	typeref:typename:git_vector
pathlist_walk_idx	extern/libgit2/src/iterator.h	/^	size_t pathlist_walk_idx;$/;"	m	struct:git_iterator	typeref:typename:size_t
paths	extern/libgit2/include/git2/checkout.h	/^	git_strarray paths;$/;"	m	struct:git_checkout_options	typeref:typename:git_strarray
paths	extern/libgit2/src/blame.h	/^	git_vector paths;$/;"	m	struct:git_blame	typeref:typename:git_vector
paths	extern/libgit2/src/patch_generate.c	/^	char paths[GIT_FLEX_ARRAY];$/;"	m	struct:__anon63ef94e80108	typeref:typename:char[]	file:
paths	extern/libgit2/tests/odb/alternates.c	/^static const char *paths[] = {$/;"	v	typeref:typename:const char * []	file:
paths	extern/libgit2/tests/submodule/status.c	/^	const char **paths;$/;"	m	struct:__anon75f7307c0108	typeref:typename:const char **	file:
paths_cmp	extern/libgit2/src/blame.c	/^static int paths_cmp(const void *a, const void *b) { return git__strcmp((char*)a, (char*)b); }$/;"	f	typeref:typename:int	file:
paths_on_dup	extern/libgit2/src/blame_git.c	/^static int paths_on_dup(void **old, void *new)$/;"	f	typeref:typename:int	file:
pathspec	extern/libgit2/examples/status.c	/^	char *pathspec[MAX_PATHSPEC];$/;"	m	struct:opts	typeref:typename:char * []	file:
pathspec	extern/libgit2/include/git2/diff.h	/^	git_strarray       pathspec;$/;"	m	struct:__anon72022fed0608	typeref:typename:git_strarray
pathspec	extern/libgit2/include/git2/status.h	/^	git_strarray      pathspec;$/;"	m	struct:__anon1764a4980408	typeref:typename:git_strarray
pathspec	extern/libgit2/src/diff_generate.c	/^	git_vector pathspec;$/;"	m	struct:__anon047407f10108	typeref:typename:git_vector	file:
pathspec	extern/libgit2/src/index.c	/^	const git_pathspec *pathspec;$/;"	m	struct:foreach_diff_data	typeref:typename:const git_pathspec *	file:
pathspec	extern/libgit2/src/pathspec.h	/^	git_pathspec *pathspec;$/;"	m	struct:git_pathspec_match_list	typeref:typename:git_pathspec *
pathspec	extern/libgit2/src/pathspec.h	/^	git_vector pathspec;$/;"	m	struct:git_pathspec	typeref:typename:git_vector
pathspec_build_failure_array	extern/libgit2/src/pathspec.c	/^static int pathspec_build_failure_array($/;"	f	typeref:typename:int	file:
pathspec_free	extern/libgit2/src/pathspec.c	/^static void pathspec_free(git_pathspec *ps)$/;"	f	typeref:typename:void	file:
pathspec_mark_pattern	extern/libgit2/src/pathspec.c	/^GIT_INLINE(size_t) pathspec_mark_pattern(git_bitvec *used, size_t pos)$/;"	f	typeref:typename:size_t
pathspec_mark_remaining	extern/libgit2/src/pathspec.c	/^static size_t pathspec_mark_remaining($/;"	f	typeref:typename:size_t	file:
pathspec_match_alloc	extern/libgit2/src/pathspec.c	/^static git_pathspec_match_list *pathspec_match_alloc($/;"	f	typeref:typename:git_pathspec_match_list *	file:
pathspec_match_context	extern/libgit2/src/pathspec.c	/^struct pathspec_match_context {$/;"	s	file:
pathspec_match_context_init	extern/libgit2/src/pathspec.c	/^static void pathspec_match_context_init($/;"	f	typeref:typename:void	file:
pathspec_match_free	extern/libgit2/src/pathspec.c	/^static void pathspec_match_free(git_pathspec_match_list *m)$/;"	f	typeref:typename:void	file:
pathspec_match_from_iterator	extern/libgit2/src/pathspec.c	/^static int pathspec_match_from_iterator($/;"	f	typeref:typename:int	file:
pathspec_match_iter_flags	extern/libgit2/src/pathspec.c	/^static git_iterator_flag_t pathspec_match_iter_flags(uint32_t flags)$/;"	f	typeref:typename:git_iterator_flag_t	file:
pathspec_match_one	extern/libgit2/src/pathspec.c	/^static int pathspec_match_one($/;"	f	typeref:typename:int	file:
patience_diff	extern/libgit2/src/xdiff/xpatience.c	/^static int patience_diff(mmfile_t *file1, mmfile_t *file2,$/;"	f	typeref:typename:int	file:
pattern	extern/libgit2/examples/tag.c	/^	const char *pattern;$/;"	m	struct:__anon8e82c8010108	typeref:typename:const char *	file:
pattern	extern/libgit2/include/git2/describe.h	/^	const char *pattern;$/;"	m	struct:git_describe_options	typeref:typename:const char *
pattern	extern/libgit2/src/attr_file.h	/^	char *pattern;$/;"	m	struct:__anon32d629ad0208	typeref:typename:char *
pattern	extern/libgit2/src/refspec.h	/^		pattern :1,$/;"	m	struct:git_refspec	typeref:typename:unsigned int:1
pattern	extern/libgit2/src/tag.c	/^	const char *pattern;$/;"	m	struct:__anonfc5068ca0208	typeref:typename:const char *	file:
pattern	extern/libgit2/tests/object/tag/list.c	/^	const char* pattern;$/;"	m	struct:pattern_match_t	typeref:typename:const char *	file:
pattern_match_t	extern/libgit2/tests/object/tag/list.c	/^struct pattern_match_t$/;"	s	file:
pattern_position	extern/libgit2/deps/pcre/pcre.h	/^  int          pattern_position;  \/* Offset to next item in the pattern *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
pattern_position	extern/libgit2/deps/pcre/pcre.h	/^  int          pattern_position;  \/* Offset to next item in the pattern *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
pattern_position	extern/libgit2/deps/pcre/pcre.h	/^  int          pattern_position;  \/* Offset to next item in the pattern *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
payload	extern/libgit2/include/git2/apply.h	/^	void *payload;$/;"	m	struct:__anondc670afa0108	typeref:typename:void *
payload	extern/libgit2/include/git2/config.h	/^	void *payload; \/**< Opaque value for the free function. Do not read or write *\/$/;"	m	struct:git_config_entry	typeref:typename:void *
payload	extern/libgit2/include/git2/diff.h	/^	void                *payload;$/;"	m	struct:__anon72022fed0608	typeref:typename:void *
payload	extern/libgit2/include/git2/diff.h	/^	void *payload;$/;"	m	struct:__anon72022fed0e08	typeref:typename:void *
payload	extern/libgit2/include/git2/proxy.h	/^	void *payload;$/;"	m	struct:__anon63af67960208	typeref:typename:void *
payload	extern/libgit2/include/git2/rebase.h	/^	void *payload;$/;"	m	struct:__anona97543260108	typeref:typename:void *
payload	extern/libgit2/include/git2/remote.h	/^	void *payload;$/;"	m	struct:git_remote_callbacks	typeref:typename:void *
payload	extern/libgit2/include/git2/sys/cred.h	/^	void *payload; \/**< Payload passed to prompt_callback *\/$/;"	m	struct:git_cred_ssh_custom	typeref:typename:void *
payload	extern/libgit2/include/git2/sys/cred.h	/^	void *payload; \/**< Payload passed to prompt_callback *\/$/;"	m	struct:git_cred_ssh_interactive	typeref:typename:void *
payload	extern/libgit2/src/diff_print.c	/^	void *payload;$/;"	m	struct:__anoncda507930108	typeref:typename:void *	file:
payload	extern/libgit2/src/filter.c	/^	void **payload;$/;"	m	struct:proxy_stream	typeref:typename:void **	file:
payload	extern/libgit2/src/filter.c	/^	void *payload;$/;"	m	struct:__anon209df0b40108	typeref:typename:void *	file:
payload	extern/libgit2/src/index.c	/^	void *payload;$/;"	m	struct:foreach_diff_data	typeref:typename:void *	file:
payload	extern/libgit2/src/patch_generate.h	/^	void *payload;$/;"	m	struct:git_patch_generated_output	typeref:typename:void *
payload	extern/libgit2/src/transaction.c	/^	void *payload;$/;"	m	struct:__anon8eca35140208	typeref:typename:void *	file:
payload	extern/libgit2/src/transports/smart_protocol.c	/^	void *payload;$/;"	m	struct:network_packetsize_payload	typeref:typename:void *	file:
payload	extern/libgit2/src/tsort.c	/^	void *payload;$/;"	m	struct:tsort_store	typeref:typename:void *	file:
payload	extern/libgit2/src/util.c	/^	void *payload;$/;"	m	struct:__anon8a0c964c0108	typeref:typename:void *	file:
pb	extern/libgit2/src/pack-objects.c	/^	git_packbuilder *pb;$/;"	m	struct:thread_params	typeref:typename:git_packbuilder *	file:
pb	extern/libgit2/src/pack-objects.c	/^	git_packbuilder *pb;$/;"	m	struct:tree_walk_context	typeref:typename:git_packbuilder *	file:
pb	extern/libgit2/src/push.h	/^	git_packbuilder *pb;$/;"	m	struct:git_push	typeref:typename:git_packbuilder *
pb	extern/libgit2/src/transports/smart_protocol.c	/^	git_packbuilder *pb;$/;"	m	struct:push_packbuilder_payload	typeref:typename:git_packbuilder *	file:
pb_parallelism	extern/libgit2/include/git2/remote.h	/^	unsigned int pb_parallelism;$/;"	m	struct:__anonc41be5800608	typeref:typename:unsigned int
pb_parallelism	extern/libgit2/src/push.h	/^	unsigned pb_parallelism;$/;"	m	struct:git_push	typeref:typename:unsigned
pchars	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^pchars(const pcre_uchar *p, int length, FILE *f)$/;"	f	typeref:typename:void	file:
pchars	extern/libgit2/deps/pcre/pcre_exec.c	/^pchars(const pcre_uchar *p, int length, BOOL is_subject, match_data *md)$/;"	f	typeref:typename:void	file:
pcre	extern/libgit2/deps/pcre/CMakeLists.txt	/^ADD_LIBRARY(pcre OBJECT ${PCRE_HEADERS} ${PCRE_SOURCES} ${PCREPOSIX_SOURCES})$/;"	t
pcre	extern/libgit2/deps/pcre/pcre.h	/^typedef struct real_pcre8_or_16 pcre;$/;"	t	typeref:struct:real_pcre8_or_16
pcre16	extern/libgit2/deps/pcre/pcre.h	/^typedef struct real_pcre8_or_16 pcre16;$/;"	t	typeref:struct:real_pcre8_or_16
pcre16_callout	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL int   (*pcre16_callout)(pcre16_callout_block *);$/;"	v	typeref:typename:PCRE_EXP_DECL int (*)(pcre16_callout_block *)
pcre16_callout_block	extern/libgit2/deps/pcre/pcre.h	/^typedef struct pcre16_callout_block {$/;"	s
pcre16_callout_block	extern/libgit2/deps/pcre/pcre.h	/^} pcre16_callout_block;$/;"	t	typeref:struct:pcre16_callout_block
pcre16_extra	extern/libgit2/deps/pcre/pcre.h	/^typedef struct pcre16_extra {$/;"	s
pcre16_extra	extern/libgit2/deps/pcre/pcre.h	/^} pcre16_extra;$/;"	t	typeref:struct:pcre16_extra
pcre16_free	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void  (*pcre16_free)(void *);$/;"	v	typeref:typename:PCRE_EXP_DECL void (*)(void *)
pcre16_jit_callback	extern/libgit2/deps/pcre/pcre.h	/^typedef pcre16_jit_stack *(*pcre16_jit_callback)(void *);$/;"	t	typeref:typename:pcre16_jit_stack * (*)(void *)
pcre16_jit_stack	extern/libgit2/deps/pcre/pcre.h	/^typedef struct real_pcre16_jit_stack pcre16_jit_stack;$/;"	t	typeref:struct:real_pcre16_jit_stack
pcre16_malloc	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void *(*pcre16_malloc)(size_t);$/;"	v	typeref:typename:PCRE_EXP_DECL void * (*)(size_t)
pcre16_stack_free	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void  (*pcre16_stack_free)(void *);$/;"	v	typeref:typename:PCRE_EXP_DECL void (*)(void *)
pcre16_stack_guard	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL int   (*pcre16_stack_guard)(void);$/;"	v	typeref:typename:PCRE_EXP_DECL int (*)(void)
pcre16_stack_malloc	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void *(*pcre16_stack_malloc)(size_t);$/;"	v	typeref:typename:PCRE_EXP_DECL void * (*)(size_t)
pcre32	extern/libgit2/deps/pcre/pcre.h	/^typedef struct real_pcre32 pcre32;$/;"	t	typeref:struct:real_pcre32
pcre32_callout	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL int   (*pcre32_callout)(pcre32_callout_block *);$/;"	v	typeref:typename:PCRE_EXP_DECL int (*)(pcre32_callout_block *)
pcre32_callout_block	extern/libgit2/deps/pcre/pcre.h	/^typedef struct pcre32_callout_block {$/;"	s
pcre32_callout_block	extern/libgit2/deps/pcre/pcre.h	/^} pcre32_callout_block;$/;"	t	typeref:struct:pcre32_callout_block
pcre32_extra	extern/libgit2/deps/pcre/pcre.h	/^typedef struct pcre32_extra {$/;"	s
pcre32_extra	extern/libgit2/deps/pcre/pcre.h	/^} pcre32_extra;$/;"	t	typeref:struct:pcre32_extra
pcre32_free	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void  (*pcre32_free)(void *);$/;"	v	typeref:typename:PCRE_EXP_DECL void (*)(void *)
pcre32_jit_callback	extern/libgit2/deps/pcre/pcre.h	/^typedef pcre32_jit_stack *(*pcre32_jit_callback)(void *);$/;"	t	typeref:typename:pcre32_jit_stack * (*)(void *)
pcre32_jit_stack	extern/libgit2/deps/pcre/pcre.h	/^typedef struct real_pcre32_jit_stack pcre32_jit_stack;$/;"	t	typeref:struct:real_pcre32_jit_stack
pcre32_malloc	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void *(*pcre32_malloc)(size_t);$/;"	v	typeref:typename:PCRE_EXP_DECL void * (*)(size_t)
pcre32_stack_free	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void  (*pcre32_stack_free)(void *);$/;"	v	typeref:typename:PCRE_EXP_DECL void (*)(void *)
pcre32_stack_guard	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL int   (*pcre32_stack_guard)(void);$/;"	v	typeref:typename:PCRE_EXP_DECL int (*)(void)
pcre32_stack_malloc	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void *(*pcre32_stack_malloc)(size_t);$/;"	v	typeref:typename:PCRE_EXP_DECL void * (*)(size_t)
pcre_assign_jit_stack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^pcre_assign_jit_stack(pcre_extra *extra, pcre_jit_callback callback, void *userdata)$/;"	f	typeref:typename:PCRE_EXP_DECL void
pcre_callout	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL int   (*pcre_callout)(pcre_callout_block *);$/;"	v	typeref:typename:PCRE_EXP_DECL int (*)(pcre_callout_block *)
pcre_callout_block	extern/libgit2/deps/pcre/pcre.h	/^typedef struct pcre_callout_block {$/;"	s
pcre_callout_block	extern/libgit2/deps/pcre/pcre.h	/^} pcre_callout_block;$/;"	t	typeref:struct:pcre_callout_block
pcre_compile	extern/libgit2/deps/pcre/pcre_compile.c	/^pcre_compile(const char *pattern, int options, const char **errorptr,$/;"	f	typeref:typename:PCRE_EXP_DEFN pcre * PCRE_CALL_CONVENTION
pcre_compile2	extern/libgit2/deps/pcre/pcre_compile.c	/^pcre_compile2(const char *pattern, int options, int *errorcodeptr,$/;"	f	typeref:typename:PCRE_EXP_DEFN pcre * PCRE_CALL_CONVENTION
pcre_config	extern/libgit2/deps/pcre/pcre_config.c	/^pcre_config(int what, void *where)$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_copy_named_substring	extern/libgit2/deps/pcre/pcre_get.c	/^pcre_copy_named_substring(const pcre *code, const char *subject,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_copy_substring	extern/libgit2/deps/pcre/pcre_get.c	/^pcre_copy_substring(const char *subject, int *ovector, int stringcount,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_dfa_exec	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^pcre_dfa_exec(const pcre *argument_re, const pcre_extra *extra_data,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_exec	extern/libgit2/deps/pcre/pcre_exec.c	/^pcre_exec(const pcre *argument_re, const pcre_extra *extra_data,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_extra	extern/libgit2/deps/pcre/pcre.h	/^typedef struct pcre_extra {$/;"	s
pcre_extra	extern/libgit2/deps/pcre/pcre.h	/^} pcre_extra;$/;"	t	typeref:struct:pcre_extra
pcre_free	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void  (*pcre_free)(void *);$/;"	v	typeref:typename:PCRE_EXP_DECL void (*)(void *)
pcre_free_study	extern/libgit2/deps/pcre/pcre_study.c	/^pcre_free_study(pcre_extra *extra)$/;"	f	typeref:typename:PCRE_EXP_DEFN void
pcre_free_substring	extern/libgit2/deps/pcre/pcre_get.c	/^pcre_free_substring(const char *pointer)$/;"	f	typeref:typename:PCRE_EXP_DEFN void PCRE_CALL_CONVENTION
pcre_free_substring_list	extern/libgit2/deps/pcre/pcre_get.c	/^pcre_free_substring_list(const char **pointer)$/;"	f	typeref:typename:PCRE_EXP_DEFN void PCRE_CALL_CONVENTION
pcre_fullinfo	extern/libgit2/deps/pcre/pcre_fullinfo.c	/^pcre_fullinfo(const pcre *argument_re, const pcre_extra *extra_data,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_get_named_substring	extern/libgit2/deps/pcre/pcre_get.c	/^pcre_get_named_substring(const pcre *code, const char *subject,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_get_stringnumber	extern/libgit2/deps/pcre/pcre_get.c	/^pcre_get_stringnumber(const pcre *code, const char *stringname)$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_get_stringtable_entries	extern/libgit2/deps/pcre/pcre_get.c	/^pcre_get_stringtable_entries(const pcre *code, const char *stringname,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_get_substring	extern/libgit2/deps/pcre/pcre_get.c	/^pcre_get_substring(const char *subject, int *ovector, int stringcount,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_get_substring_list	extern/libgit2/deps/pcre/pcre_get.c	/^pcre_get_substring_list(const char *subject, int *ovector, int stringcount,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_have_long_long	extern/libgit2/deps/pcre/CMakeLists.txt	/^        SET(pcre_have_long_long 1)$/;"	v
pcre_have_long_long	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(pcre_have_long_long 0)$/;"	v
pcre_have_ulong_long	extern/libgit2/deps/pcre/CMakeLists.txt	/^        SET(pcre_have_ulong_long 1)$/;"	v
pcre_have_ulong_long	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(pcre_have_ulong_long 0)$/;"	v
pcre_int16	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef int pcre_int16;$/;"	t	typeref:typename:int
pcre_int16	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef short pcre_int16;$/;"	t	typeref:typename:short
pcre_int32	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef int pcre_int32;$/;"	t	typeref:typename:int
pcre_int32	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef long int pcre_int32;$/;"	t	typeref:typename:long int
pcre_jit_callback	extern/libgit2/deps/pcre/pcre.h	/^typedef pcre_jit_stack *(*pcre_jit_callback)(void *);$/;"	t	typeref:typename:pcre_jit_stack * (*)(void *)
pcre_jit_exec	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^pcre_jit_exec(const pcre *argument_re, const pcre_extra *extra_data,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_jit_free_unused_memory	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^pcre_jit_free_unused_memory(void)$/;"	f	typeref:typename:PCRE_EXP_DECL void
pcre_jit_stack	extern/libgit2/deps/pcre/pcre.h	/^typedef struct real_pcre_jit_stack pcre_jit_stack;$/;"	t	typeref:struct:real_pcre_jit_stack
pcre_jit_stack_alloc	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^pcre_jit_stack_alloc(int startsize, int maxsize)$/;"	f	typeref:typename:PCRE_EXP_DECL pcre_jit_stack *
pcre_jit_stack_free	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^pcre_jit_stack_free(pcre_jit_stack *stack)$/;"	f	typeref:typename:PCRE_EXP_DECL void
pcre_maketables	extern/libgit2/deps/pcre/pcre_maketables.c	/^pcre_maketables(void)$/;"	f	typeref:typename:const unsigned char *
pcre_malloc	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void *(*pcre_malloc)(size_t);$/;"	v	typeref:typename:PCRE_EXP_DECL void * (*)(size_t)
pcre_memmove	extern/libgit2/deps/pcre/pcre_internal.h	/^pcre_memmove(void *d, const void *s, size_t n)$/;"	f	typeref:typename:void *
pcre_pattern_to_host_byte_order	extern/libgit2/deps/pcre/pcre_byte_order.c	/^PCRE_EXP_DECL int pcre_pattern_to_host_byte_order(pcre *argument_re,$/;"	f	typeref:typename:PCRE_EXP_DECL int
pcre_printint	extern/libgit2/deps/pcre/pcre_printint.c	/^pcre_printint(pcre *external_re, FILE *f, BOOL print_lengths)$/;"	f	typeref:typename:void	file:
pcre_refcount	extern/libgit2/deps/pcre/pcre_refcount.c	/^pcre_refcount(pcre *argument_re, int adjust)$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_regcomp	extern/libgit2/deps/pcre/pcreposix.c	/^pcre_regcomp(pcre_regex_t *preg, const char *pattern, int cflags)$/;"	f	typeref:typename:PCREPOSIX_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_regerror	extern/libgit2/deps/pcre/pcreposix.c	/^pcre_regerror(int errcode, const pcre_regex_t *preg, char *errbuf, size_t errbuf_size)$/;"	f	typeref:typename:PCREPOSIX_EXP_DEFN size_t PCRE_CALL_CONVENTION
pcre_regex_t	extern/libgit2/deps/pcre/pcreposix.h	/^} pcre_regex_t;$/;"	t	typeref:struct:__anonf0efc70d0208
pcre_regexec	extern/libgit2/deps/pcre/pcreposix.c	/^pcre_regexec(const pcre_regex_t *preg, const char *string, size_t nmatch,$/;"	f	typeref:typename:PCREPOSIX_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_regfree	extern/libgit2/deps/pcre/pcreposix.c	/^pcre_regfree(pcre_regex_t *preg)$/;"	f	typeref:typename:PCREPOSIX_EXP_DEFN void PCRE_CALL_CONVENTION
pcre_regmatch_t	extern/libgit2/deps/pcre/pcreposix.h	/^} pcre_regmatch_t;$/;"	t	typeref:struct:__anonf0efc70d0308
pcre_regoff_t	extern/libgit2/deps/pcre/pcreposix.h	/^typedef int pcre_regoff_t;$/;"	t	typeref:typename:int
pcre_stack_free	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void  (*pcre_stack_free)(void *);$/;"	v	typeref:typename:PCRE_EXP_DECL void (*)(void *)
pcre_stack_guard	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL int   (*pcre_stack_guard)(void);$/;"	v	typeref:typename:PCRE_EXP_DECL int (*)(void)
pcre_stack_malloc	extern/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void *(*pcre_stack_malloc)(size_t);$/;"	v	typeref:typename:PCRE_EXP_DECL void * (*)(size_t)
pcre_study	extern/libgit2/deps/pcre/pcre_study.c	/^pcre_study(const pcre *external_re, int options, const char **errorptr)$/;"	f	typeref:typename:PCRE_EXP_DEFN pcre_extra * PCRE_CALL_CONVENTION
pcre_study_data	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct pcre_study_data {$/;"	s
pcre_study_data	extern/libgit2/deps/pcre/pcre_internal.h	/^} pcre_study_data;$/;"	t	typeref:struct:pcre_study_data
pcre_uchar	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef pcre_uint16 pcre_uchar;$/;"	t	typeref:typename:pcre_uint16
pcre_uchar	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef pcre_uint32 pcre_uchar;$/;"	t	typeref:typename:pcre_uint32
pcre_uchar	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef unsigned char pcre_uchar;$/;"	t	typeref:typename:unsigned char
pcre_uint16	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef unsigned int pcre_uint16;$/;"	t	typeref:typename:unsigned int
pcre_uint16	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef unsigned short pcre_uint16;$/;"	t	typeref:typename:unsigned short
pcre_uint32	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef unsigned int pcre_uint32;$/;"	t	typeref:typename:unsigned int
pcre_uint32	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef unsigned long int pcre_uint32;$/;"	t	typeref:typename:unsigned long int
pcre_uint8	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef unsigned char pcre_uint8;$/;"	t	typeref:typename:unsigned char
pcre_version	extern/libgit2/deps/pcre/pcre_version.c	/^pcre_version(void)$/;"	f	typeref:typename:PCRE_EXP_DEFN const char * PCRE_CALL_CONVENTION
peak_mapped	extern/libgit2/src/mwindow.h	/^	size_t peak_mapped;$/;"	m	struct:git_mwindow_ctl	typeref:typename:size_t
peak_open_windows	extern/libgit2/src/mwindow.h	/^	unsigned int peak_open_windows;$/;"	m	struct:git_mwindow_ctl	typeref:typename:unsigned int
peek_char	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void peek_char(compiler_common *common, sljit_u32 max)$/;"	f	typeref:typename:void	file:
peel	extern/libgit2/src/refdb_fs.c	/^	git_oid peel;$/;"	m	struct:packref	typeref:typename:git_oid	file:
peel	extern/libgit2/src/refs.h	/^	git_oid peel;$/;"	m	struct:git_reference	typeref:typename:git_oid
peel_error	extern/libgit2/src/object.c	/^static int peel_error(int error, const git_oid *oid, git_object_t type)$/;"	f	typeref:typename:int	file:
peel_error	extern/libgit2/src/refs.c	/^static int peel_error(int error, const git_reference *ref, const char* msg)$/;"	f	typeref:typename:int	file:
peeled	extern/libgit2/src/describe.c	/^	git_oid peeled;$/;"	m	struct:commit_name	typeref:typename:git_oid	file:
peeling_mode	extern/libgit2/src/refdb_fs.c	/^	int peeling_mode;$/;"	m	struct:refdb_fs_backend	typeref:typename:int	file:
penalty	extern/libgit2/src/xdiff/xdiffi.c	/^	int penalty;$/;"	m	struct:split_score	typeref:typename:int	file:
pending	extern/libgit2/deps/zlib/deflate.h	/^    ulg   pending;       \/* nb of bytes in the pending buffer *\/$/;"	m	struct:internal_state	typeref:typename:ulg
pending_buf	extern/libgit2/deps/zlib/deflate.h	/^    Bytef *pending_buf;  \/* output still pending *\/$/;"	m	struct:internal_state	typeref:typename:Bytef *
pending_buf_size	extern/libgit2/deps/zlib/deflate.h	/^    ulg   pending_buf_size; \/* size of pending_buf *\/$/;"	m	struct:internal_state	typeref:typename:ulg
pending_number	extern/libgit2/src/date.c	/^static void pending_number(struct tm *tm, int *num)$/;"	f	typeref:typename:void	file:
pending_out	extern/libgit2/deps/zlib/deflate.h	/^    Bytef *pending_out;  \/* next pending byte to output to the stream *\/$/;"	m	struct:internal_state	typeref:typename:Bytef *
perf	extern/libgit2/examples/checkout.c	/^	int perf : 1;$/;"	m	struct:__anon96974fbb0108	typeref:typename:int:1	file:
perf	extern/libgit2/src/diff.h	/^	git_diff_perfdata perf;$/;"	m	struct:git_diff	typeref:typename:git_diff_perfdata
perf__do_merge	extern/libgit2/tests/perf/helper__perf__do_merge.c	/^void perf__do_merge(const char *fixture,$/;"	f	typeref:typename:void
perf__timer	extern/libgit2/tests/perf/helper__perf__timer.h	/^struct perf__timer$/;"	s
perf__timer__report	extern/libgit2/tests/perf/helper__perf__timer.c	/^void perf__timer__report(perf_timer *t, const char *fmt, ...)$/;"	f	typeref:typename:void
perf__timer__start	extern/libgit2/tests/perf/helper__perf__timer.c	/^void perf__timer__start(perf_timer *t)$/;"	f	typeref:typename:void
perf__timer__stop	extern/libgit2/tests/perf/helper__perf__timer.c	/^void perf__timer__stop(perf_timer *t)$/;"	f	typeref:typename:void
perf_timer	extern/libgit2/tests/perf/helper__perf__timer.h	/^typedef struct perf__timer perf_timer;$/;"	t	typeref:struct:perf__timer
perfdata	extern/libgit2/src/checkout.c	/^	git_checkout_perfdata perfdata;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_checkout_perfdata	file:
perfdata	extern/libgit2/src/futils.h	/^	struct git_futils_mkdir_perfdata perfdata;$/;"	m	struct:git_futils_mkdir_options	typeref:struct:git_futils_mkdir_perfdata
perfdata_cb	extern/libgit2/include/git2/checkout.h	/^	git_checkout_perfdata_cb perfdata_cb;$/;"	m	struct:git_checkout_options	typeref:typename:git_checkout_perfdata_cb
perfdata_cb	extern/libgit2/tests/checkout/tree.c	/^void perfdata_cb(const git_checkout_perfdata *in, void *payload)$/;"	f	typeref:typename:void
perfdata_payload	extern/libgit2/include/git2/checkout.h	/^	void *perfdata_payload;$/;"	m	struct:git_checkout_options	typeref:typename:void *
performAction	extern/NamedType/main.cpp	/^std::string performAction(Comparator<Function> comp)$/;"	f	typeref:typename:std::string
performOptionalSelector	extern/NamedType/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f	typeref:typename:id
performOptionalSelector	extern/OpenXLSX/tests/catch/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f	typeref:typename:id
perform_checkout_ref	extern/libgit2/examples/checkout.c	/^static int perform_checkout_ref(git_repository *repo, git_annotated_commit *target, checkout_opt/;"	f	typeref:typename:int	file:
perform_fastforward	extern/libgit2/examples/merge.c	/^static int perform_fastforward(git_repository *repo, const git_oid *target_oid, int is_unborn)$/;"	f	typeref:typename:int	file:
pfn_trace_cb	extern/libgit2/tests/clar.c	/^	cl_trace_cb *pfn_trace_cb;$/;"	m	struct:__anonab24499b0108	typeref:typename:cl_trace_cb *	file:
pfx	extern/libgit2/src/checkout.c	/^	char *pfx;$/;"	m	struct:__anonbac5d6240208	typeref:typename:char *	file:
pfxcomp	extern/libgit2/src/diff.h	/^	int (*pfxcomp)(const char *str, const char *pfx);$/;"	m	struct:git_diff	typeref:typename:int (*)(const char * str,const char * pfx)
pick_dir_mode	extern/libgit2/src/repository.c	/^static mode_t pick_dir_mode(git_repository_init_options *opts)$/;"	f	typeref:typename:mode_t	file:
pith	git_.hpp	/^  Pith pith;$/;"	m	struct:abo::Bark	typeref:typename:Pith
pith	oset.cpp	/^  Pith pith;$/;"	m	struct:union_bark	typeref:typename:Pith	file:
pkg_build_config	extern/libgit2/cmake/Modules/PkgBuildConfig.cmake	/^function(pkg_build_config)$/;"	f
pkt_done_str	extern/libgit2/src/transports/smart_pkt.c	/^static const char pkt_done_str[] = "0009done\\n";$/;"	v	typeref:typename:const char[]	file:
pkt_flush_str	extern/libgit2/src/transports/smart_pkt.c	/^static const char pkt_flush_str[] = "0000";$/;"	v	typeref:typename:const char[]	file:
pkt_have_prefix	extern/libgit2/src/transports/smart_pkt.c	/^static const char pkt_have_prefix[] = "0032have ";$/;"	v	typeref:typename:const char[]	file:
pkt_want_prefix	extern/libgit2/src/transports/smart_pkt.c	/^static const char pkt_want_prefix[] = "0032want ";$/;"	v	typeref:typename:const char[]	file:
plaintext_free	extern/libgit2/src/transports/cred.c	/^static void plaintext_free(struct git_cred *cred)$/;"	f	typeref:typename:void	file:
plno	extern/libgit2/src/blame_git.c	/^	long plno;$/;"	m	struct:blame_chunk_cb_data	typeref:typename:long	file:
pointer	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef xml_attribute* pointer;$/;"	t	class:pugi::xml_attribute_iterator	typeref:typename:xml_attribute *
pointer	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef xml_node* pointer;$/;"	t	class:pugi::xml_named_node_iterator	typeref:typename:xml_node *
pointer	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef xml_node* pointer;$/;"	t	class:pugi::xml_node_iterator	typeref:typename:xml_node *
pointer	p.cpp	/^  using pointer = value_type *;$/;"	t	struct:aiterator	typeref:typename:value_type *	file:
pool	extern/libgit2/src/apply.c	/^	git_pool pool;$/;"	m	struct:__anonbf3de2540108	typeref:typename:git_pool	file:
pool	extern/libgit2/src/attr_file.h	/^	git_pool pool;$/;"	m	struct:__anon32d629ad0608	typeref:typename:git_pool
pool	extern/libgit2/src/attrcache.h	/^	git_pool  pool;$/;"	m	struct:__anon5aa68d020108	typeref:typename:git_pool
pool	extern/libgit2/src/checkout.c	/^	git_pool pool;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_pool	file:
pool	extern/libgit2/src/diff.h	/^	git_pool pool;$/;"	m	struct:git_diff	typeref:typename:git_pool
pool	extern/libgit2/src/futils.h	/^	git_pool *pool;$/;"	m	struct:git_futils_mkdir_options	typeref:typename:git_pool *
pool	extern/libgit2/src/merge.h	/^	git_pool pool;$/;"	m	struct:__anon41711a830408	typeref:typename:git_pool
pool	extern/libgit2/src/pathspec.h	/^	git_pool pool;$/;"	m	struct:git_pathspec	typeref:typename:git_pool
pool	extern/libgit2/src/pathspec.h	/^	git_pool pool;$/;"	m	struct:git_pathspec_match_list	typeref:typename:git_pool
pool	extern/libgit2/src/refdb_fs.c	/^	git_pool pool;$/;"	m	struct:__anonbd02e2090308	typeref:typename:git_pool	file:
pool	extern/libgit2/src/sortedcache.h	/^	git_pool     pool;$/;"	m	struct:__anond92d40380108	typeref:typename:git_pool
pool	extern/libgit2/src/transaction.c	/^	git_pool pool;$/;"	m	struct:git_transaction	typeref:typename:git_pool	file:
pool_alloc	extern/libgit2/src/pool.c	/^static void *pool_alloc(git_pool *pool, size_t size) {$/;"	f	typeref:typename:void *	file:
pool_alloc	extern/libgit2/src/pool.c	/^static void *pool_alloc(git_pool *pool, size_t size)$/;"	f	typeref:typename:void *	file:
pool_alloc_page	extern/libgit2/src/pool.c	/^static void *pool_alloc_page(git_pool *pool, size_t size)$/;"	f	typeref:typename:void *	file:
poptable	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^static const pcre_uint8 poptable[] = {$/;"	v	typeref:typename:const pcre_uint8[]	file:
poptions	extern/libgit2/deps/pcre/pcre_internal.h	/^  int   poptions;                   \/* Pattern options *\/$/;"	m	struct:dfa_match_data	typeref:typename:int
populate_fetchhead	extern/libgit2/tests/fetchhead/nonetwork.c	/^static void populate_fetchhead(git_vector *out, git_repository *repo)$/;"	f	typeref:typename:void	file:
populate_symlink_workdir	extern/libgit2/tests/checkout/index.c	/^static void populate_symlink_workdir(void)$/;"	f	typeref:typename:void	file:
port	extern/libgit2/deps/http-parser/http_parser.h	/^  uint16_t port;                \/* Converted UF_PORT string *\/$/;"	m	struct:http_parser_url	typeref:typename:uint16_t
port	extern/libgit2/src/net.h	/^	char *port;$/;"	m	struct:git_net_url	typeref:typename:char *
port	extern/libgit2/src/streams/socket.h	/^	char *port;$/;"	m	struct:__anonde82408a0108	typeref:typename:char *
pos	extern/libgit2/deps/ntlmclient/ntlm.h	/^	size_t pos;$/;"	m	struct:__anon8624cbbb0208	typeref:typename:size_t
pos	extern/libgit2/deps/zlib/zlib.h	/^    z_off64_t pos;$/;"	m	struct:gzFile_s	typeref:typename:z_off64_t
pos	extern/libgit2/examples/common.h	/^	int    pos;$/;"	m	struct:args_info	typeref:typename:int
position	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		size_t position, size;$/;"	m	struct:xpath_context	typeref:typename:size_t	file:
position	extern/libgit2/tests/odb/sorting.c	/^	size_t position;$/;"	m	struct:__anon89f64fa30108	typeref:typename:size_t	file:
positive_assert	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL positive_assert;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
positive_assert_quit	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *positive_assert_quit;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
posix_class_maps	extern/libgit2/deps/pcre/pcre_compile.c	/^static const int posix_class_maps[] = {$/;"	v	typeref:typename:const int[]	file:
posix_name_lengths	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 posix_name_lengths[] = {$/;"	v	typeref:typename:const pcre_uint8[]	file:
posix_names	extern/libgit2/deps/pcre/pcre_compile.c	/^static const char posix_names[] =$/;"	v	typeref:typename:const char[]	file:
posix_substitutes	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar *posix_substitutes[] = {$/;"	v	typeref:typename:const pcre_uchar * []	file:
possible_tag	extern/libgit2/src/describe.c	/^struct possible_tag {$/;"	s	file:
possible_tag_dup	extern/libgit2/src/describe.c	/^static int possible_tag_dup(struct possible_tag **out, struct possible_tag *in)$/;"	f	typeref:typename:int	file:
posspropstab	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 posspropstab[3][4] = {$/;"	v	typeref:typename:const pcre_uint8[3][4]	file:
post_blank	extern/libgit2/src/xdiff/xdiffi.c	/^	int post_blank;$/;"	m	struct:split_measurement	typeref:typename:int	file:
post_body	extern/libgit2/src/transports/winhttp.c	/^	HANDLE post_body;$/;"	m	struct:__anon981dd28b0208	typeref:typename:HANDLE	file:
post_body_len	extern/libgit2/src/transports/winhttp.c	/^	DWORD post_body_len;$/;"	m	struct:__anon981dd28b0208	typeref:typename:DWORD	file:
post_indent	extern/libgit2/src/xdiff/xdiffi.c	/^	int post_indent;$/;"	m	struct:split_measurement	typeref:typename:int	file:
post_verb	extern/libgit2/src/transports/http.c	/^static const char *post_verb = "POST";$/;"	v	typeref:typename:const char *	file:
post_verb	extern/libgit2/src/transports/winhttp.c	/^static const wchar_t *post_verb = L"POST";$/;"	v	typeref:typename:const wchar_t *	file:
pp	extern/libgit2/deps/pcre/pcre_exec.c	/^#define pp /;"	d	file:
pqdownheap	extern/libgit2/deps/zlib/trees.c	/^local void pqdownheap(s, tree, k)$/;"	f
pqremove	extern/libgit2/deps/zlib/trees.c	/^#define pqremove(/;"	d	file:
pqueue_down	extern/libgit2/src/pqueue.c	/^static void pqueue_down(git_pqueue *pq, size_t el)$/;"	f	typeref:typename:void	file:
pqueue_up	extern/libgit2/src/pqueue.c	/^static void pqueue_up(git_pqueue *pq, size_t el)$/;"	f	typeref:typename:void	file:
pragma_nocache	extern/libgit2/src/transports/winhttp.c	/^static const wchar_t *pragma_nocache = L"Pragma: no-cache";$/;"	v	typeref:typename:const wchar_t *	file:
pre.fragment	extern/OpenXLSX/doxy/customdoxygen.css	/^pre.fragment {$/;"	c
pre.fragment	extern/OpenXLSX/doxy/customdoxygen.css	/^pre.fragment, div.line,$/;"	c
pre_blank	extern/libgit2/src/xdiff/xdiffi.c	/^	int pre_blank;$/;"	m	struct:split_measurement	typeref:typename:int	file:
pre_indent	extern/libgit2/src/xdiff/xdiffi.c	/^	int pre_indent;$/;"	m	struct:split_measurement	typeref:typename:int	file:
precedence	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			int precedence;$/;"	m	struct:xpath_parser::binary_op_t	typeref:typename:int	file:
precision	extern/OpenXLSX/tests/catch/catch.hpp	/^        static int precision;$/;"	m	struct:Catch::StringMaker	typeref:typename:int
predicate_constant	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		predicate_constant,$/;"	e	enum:predicate_t	file:
predicate_constant_one	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		predicate_constant_one$/;"	e	enum:predicate_t	file:
predicate_default	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		predicate_default,$/;"	e	enum:predicate_t	file:
predicate_posinv	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		predicate_posinv,$/;"	e	enum:predicate_t	file:
predicate_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	enum predicate_t$/;"	g	file:
prefix	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		const char_t* prefix;$/;"	m	struct:namespace_uri_predicate	typeref:typename:const char_t *	file:
prefix	extern/libgit2/src/config_file.c	/^	const char *prefix;$/;"	m	struct:__anon041cc2a30308	typeref:typename:const char *	file:
prefix	extern/libgit2/src/pathspec.h	/^	char *prefix;$/;"	m	struct:git_pathspec	typeref:typename:char *
prefix	extern/libgit2/src/transport.c	/^	char *prefix;$/;"	m	struct:transport_definition	typeref:typename:char *	file:
prefix	extern/libgit2/tests/fetchhead/nonetwork.c	/^	const char *prefix;$/;"	m	struct:prefix_count	typeref:typename:const char *	file:
prefix_count	extern/libgit2/tests/fetchhead/nonetwork.c	/^struct prefix_count {$/;"	s	file:
prefix_git	extern/libgit2/src/transports/git.c	/^static const char prefix_git[] = "git:\/\/";$/;"	v	typeref:typename:const char[]	file:
prefix_https	extern/libgit2/src/transports/winhttp.c	/^static const char *prefix_https = "https:\/\/";$/;"	v	typeref:typename:const char *	file:
prefix_len	extern/libgit2/src/patch.h	/^	uint32_t prefix_len;$/;"	m	struct:__anon1f2d3a830108	typeref:typename:uint32_t
prefix_length	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		size_t prefix_length;$/;"	m	struct:namespace_uri_predicate	typeref:typename:size_t	file:
prefixcmp	extern/libgit2/src/util.c	/^GIT_INLINE(int) prefixcmp(const char *str, size_t str_n, const char *prefix, bool icase)$/;"	f	typeref:typename:int
prefixcomp	extern/libgit2/src/iterator.h	/^	int (*prefixcomp)(const char *str, const char *prefix);$/;"	m	struct:git_iterator	typeref:typename:int (*)(const char * str,const char * prefix)
preg	extern/libgit2/src/config_file.c	/^	const p_regex_t *preg;$/;"	m	struct:write_data	typeref:typename:const p_regex_t *	file:
preg_replaced	extern/libgit2/src/config_file.c	/^		preg_replaced : 1;$/;"	m	struct:write_data	typeref:typename:unsigned int:1	file:
preload_attr_file	extern/libgit2/src/attr.c	/^static int preload_attr_file($/;"	f	typeref:typename:int	file:
prepare_pack	extern/libgit2/src/pack-objects.c	/^static int prepare_pack(git_packbuilder *pb)$/;"	f	typeref:typename:int	file:
prepare_walk	extern/libgit2/src/revwalk.c	/^static int prepare_walk(git_revwalk *walk)$/;"	f	typeref:typename:int	file:
prepare_worktree_commit_message	extern/libgit2/src/stash.c	/^static int prepare_worktree_commit_message($/;"	f	typeref:typename:int	file:
prepend_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_node::prepend_attribute(const char_t* name_) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_attribute
prepend_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline void prepend_attribute(xml_attribute_struct* attr, xml_node_struct* node) {$/;"	f	typeref:typename:void
prepend_child	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::prepend_child(const char_t* name_) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
prepend_child	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::prepend_child(xml_node_type type_) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
prepend_copy	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_node::prepend_copy(const xml_attribute& proto) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_attribute
prepend_copy	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::prepend_copy(const xml_node& proto) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
prepend_move	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::prepend_move(const xml_node& moved) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
prepend_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline void prepend_node(xml_node_struct* child, xml_node_struct* node) {$/;"	f	typeref:typename:void
prev	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_memory_page* prev;$/;"	m	struct:xml_memory_page	typeref:typename:xml_memory_page *	file:
prev	extern/libgit2/deps/pcre/pcre_exec.c	/^#define prev /;"	d	file:
prev	extern/libgit2/deps/pcre/pcre_internal.h	/^  struct recurse_check *prev;$/;"	m	struct:recurse_check	typeref:struct:recurse_check *
prev	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct backtrack_common *prev;$/;"	m	struct:backtrack_common	typeref:struct:backtrack_common *	file:
prev	extern/libgit2/deps/zlib/deflate.h	/^    Posf *prev;$/;"	m	struct:internal_state	typeref:typename:Posf *
prev	extern/libgit2/src/blame.h	/^	struct git_blame__entry *prev;$/;"	m	struct:git_blame__entry	typeref:struct:git_blame__entry *
prev_attribute_c	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_pointer<xml_attribute_struct, 6> prev_attribute_c;$/;"	m	struct:pugi::xml_attribute_struct	typeref:typename:impl::compact_pointer<xml_attribute_struct,6>	file:
prev_conflict	extern/libgit2/src/merge.c	/^	git_merge_diff *prev_conflict;$/;"	m	struct:merge_diff_df_data	typeref:typename:git_merge_diff *	file:
prev_is_word	extern/libgit2/deps/pcre/pcre_exec.c	/^#define prev_is_word /;"	d	file:
prev_length	extern/libgit2/deps/zlib/deflate.h	/^    uInt prev_length;$/;"	m	struct:internal_state	typeref:typename:uInt
prev_match	extern/libgit2/deps/zlib/deflate.h	/^    IPos prev_match;             \/* previous match *\/$/;"	m	struct:internal_state	typeref:typename:IPos
prev_path	extern/libgit2/src/merge.c	/^	const char *prev_path;$/;"	m	struct:merge_diff_df_data	typeref:typename:const char *	file:
prev_sibling_c	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_pointer<xml_node_struct,  9>    prev_sibling_c;$/;"	m	struct:pugi::xml_node_struct	typeref:typename:impl::compact_pointer<xml_node_struct,9>	file:
previous	extern/libgit2/src/blame.h	/^	struct git_blame__origin *previous;$/;"	m	struct:git_blame__origin	typeref:struct:git_blame__origin *
previous	extern/libgit2/src/xdiff/xpatience.c	/^		struct entry *next, *previous;$/;"	m	struct:hashmap::entry	typeref:struct:entry **	file:
previous_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute xml_attribute::previous_attribute() const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN xml_attribute
previous_sibling	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::previous_sibling() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
previous_sibling	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::previous_sibling(const char_t* name_) const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
prevrec	extern/libgit2/deps/pcre/pcre_internal.h	/^  struct dfa_recursion_info *prevrec;$/;"	m	struct:dfa_recursion_info	typeref:struct:dfa_recursion_info *
prevrec	extern/libgit2/deps/pcre/pcre_internal.h	/^  struct recursion_info *prevrec; \/* Previous recursion record (or NULL) *\/$/;"	m	struct:recursion_info	typeref:struct:recursion_info *
print	extern/NamedType/catch.hpp	/^            static void print(const Tuple& tuple, std::ostream& os) {$/;"	f	struct:Catch::Detail::TupleElementPrinter	typeref:typename:void
print	extern/NamedType/catch.hpp	/^            static void print(const Tuple&, std::ostream&) {}$/;"	f	struct:Catch::Detail::TupleElementPrinter	typeref:typename:void
print	extern/NamedType/underlying_functionalities.hpp	/^    void print(std::ostream& os) const { os << this->underlying().get(); }$/;"	f	struct:fluent::Printable	typeref:typename:void
print	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_node::print(std::basic_ostream<char, std::char_traits<char>>& stream, cons/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN void
print	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_node::print(std::basic_ostream<wchar_t, std::char_traits<wchar_t>>& stream/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN void
print	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_node::print(xml_writer& writer, const char_t* indent, unsigned int flags, /;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN void
print	extern/OpenXLSX/tests/catch/catch.hpp	/^            static void print(const Tuple& tuple, std::ostream& os) {$/;"	f	struct:Catch::Detail::TupleElementPrinter	typeref:typename:void
print	extern/OpenXLSX/tests/catch/catch.hpp	/^            static void print(const Tuple&, std::ostream&) {}$/;"	f	struct:Catch::Detail::TupleElementPrinter	typeref:typename:void
print	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            void print() {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
print	ntskills.hpp	/^  void print(std::ostream &os) const { os << this->underlying().get(); }$/;"	f	struct:nt::Printable	typeref:typename:void
printExpressionWas	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            void printExpressionWas() {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printHeaderString	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        static void printHeaderString( std::ostream& os, std::string const& _string, std::size_t/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
printInfoMessages	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            bool printInfoMessages;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:bool
printIssue	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            void printIssue( std::string const& issue ) const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printMessage	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            void printMessage() {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printOriginalExpression	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            void printOriginalExpression() const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printReconstructedExpression	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            void printReconstructedExpression() const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printRemainingMessages	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            void printRemainingMessages( Colour::Code colour = dimColour() ) {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printResultType	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            void printResultType( std::string const& passOrFail ) const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printSectionHeader	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        void printSectionHeader( std::ostream& os ) {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
printSourceInfo	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            void printSourceInfo() const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printTotals	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^        void printTotals( const Totals& totals ) const {$/;"	f	struct:Catch::TAPReporter	typeref:typename:void
print_cb	extern/libgit2/src/diff_print.c	/^	git_diff_line_cb print_cb;$/;"	m	struct:__anoncda507930108	typeref:typename:git_diff_line_cb	file:
print_cb	extern/libgit2/tests/diff/binary.c	/^static int print_cb($/;"	f	typeref:typename:int	file:
print_char	extern/libgit2/deps/pcre/pcre_printint.c	/^print_char(FILE *f, pcre_uchar *ptr, BOOL utf)$/;"	f	typeref:typename:unsigned int	file:
print_checkout_progress	extern/libgit2/examples/checkout.c	/^static void print_checkout_progress(const char *path, size_t completed_steps, size_t total_steps/;"	f	typeref:typename:void	file:
print_commit	extern/libgit2/examples/log.c	/^static void print_commit(git_commit *commit, struct log_options *opts)$/;"	f	typeref:typename:void	file:
print_commit	extern/libgit2/examples/tag.c	/^static void print_commit(git_commit *commit, const char *name,$/;"	f	typeref:typename:void	file:
print_list_lines	extern/libgit2/examples/tag.c	/^static void print_list_lines(const char *message, const tag_state *state)$/;"	f	typeref:typename:void	file:
print_long	extern/libgit2/examples/status.c	/^static void print_long(git_status_list *status)$/;"	f	typeref:typename:void	file:
print_matched_cb	extern/libgit2/examples/add.c	/^int print_matched_cb(const char *path, const char *matched_pathspec, void *payload)$/;"	f	typeref:typename:int
print_name	extern/libgit2/examples/tag.c	/^static void print_name(const char *name)$/;"	f	typeref:typename:void	file:
print_options	extern/libgit2/examples/add.c	/^enum print_options {$/;"	g	file:
print_paths	extern/libgit2/examples/ls-files.c	/^static int print_paths(ls_options *opts, git_index *index)$/;"	f	typeref:typename:int	file:
print_payload	extern/libgit2/examples/add.c	/^struct print_payload {$/;"	s	file:
print_perf_data	extern/libgit2/examples/checkout.c	/^static void print_perf_data(const git_checkout_perfdata *perfdata, void *payload)$/;"	f	typeref:typename:void	file:
print_progress	extern/libgit2/examples/clone.c	/^static void print_progress(const progress_data *pd)$/;"	f	typeref:typename:void	file:
print_prop	extern/libgit2/deps/pcre/pcre_printint.c	/^print_prop(FILE *f, pcre_uchar *code, const char *before, const char *after)$/;"	f	typeref:typename:void	file:
print_puchar	extern/libgit2/deps/pcre/pcre_printint.c	/^print_puchar(FILE *f, PCRE_PUCHAR ptr)$/;"	f	typeref:typename:void	file:
print_short	extern/libgit2/examples/status.c	/^static void print_short(git_repository *repo, git_status_list *status)$/;"	f	typeref:typename:void	file:
print_signature	extern/libgit2/examples/cat-file.c	/^static void print_signature(const char *header, const git_signature *sig)$/;"	f	typeref:typename:void	file:
print_submod	extern/libgit2/examples/status.c	/^static int print_submod(git_submodule *sm, const char *name, void *payload)$/;"	f	typeref:typename:int	file:
print_submodules	extern/libgit2/tests/submodule/submodule_helpers.c	/^static int print_submodules(git_submodule *sm, const char *name, void *p)$/;"	f	typeref:typename:int	file:
print_tag	extern/libgit2/examples/tag.c	/^static void print_tag(git_tag *tag, const tag_state *state)$/;"	f	typeref:typename:void	file:
print_time	extern/libgit2/examples/log.c	/^static void print_time(const git_time *intime, const char *prefix)$/;"	f	typeref:typename:void	file:
print_usage	extern/libgit2/examples/add.c	/^void print_usage(void)$/;"	f	typeref:typename:void
print_usage	extern/libgit2/examples/checkout.c	/^static void print_usage(void)$/;"	f	typeref:typename:void	file:
print_usage	extern/libgit2/examples/describe.c	/^static void print_usage(void)$/;"	f	typeref:typename:void	file:
print_usage	extern/libgit2/examples/merge.c	/^static void print_usage(void)$/;"	f	typeref:typename:void	file:
print_usage	extern/libgit2/examples/tag.c	/^static void print_usage(void)$/;"	f	typeref:typename:void	file:
printable	extern/libgit2/src/buf_text.h	/^	unsigned int printable, nonprintable; \/* These are just approximations! *\/$/;"	m	struct:__anon6db101b40208	typeref:typename:unsigned int
prio	extern/libgit2/src/describe.c	/^	unsigned prio:2; \/* annotated tag = 2, tag = 1, head = 0 *\/$/;"	m	struct:commit_name	typeref:typename:unsigned:2	file:
priority	extern/libgit2/src/filter.c	/^	int priority;$/;"	m	struct:__anon209df0b40208	typeref:typename:int	file:
priority	extern/libgit2/src/odb.c	/^	int priority;$/;"	m	struct:__anonfbf77e230108	typeref:typename:int	file:
priv	extern/libgit2/src/xdiff/xdiff.h	/^	void *priv;$/;"	m	struct:s_xdemitcb	typeref:typename:void *
priv_OP_lengths	extern/libgit2/deps/pcre/pcre_printint.c	/^static const pcre_uint8 priv_OP_lengths[] = { OP_LENGTHS };$/;"	v	typeref:typename:const pcre_uint8[]	file:
priv_OP_names	extern/libgit2/deps/pcre/pcre_printint.c	/^static const char *priv_OP_names[] = { OP_NAME_LIST };$/;"	v	typeref:typename:const char * []	file:
private_data_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int private_data_ptr;$/;"	m	struct:assert_backtrack	typeref:typename:int	file:
private_data_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int private_data_ptr;$/;"	m	struct:bracket_backtrack	typeref:typename:int	file:
private_data_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int private_data_ptr;$/;"	m	struct:bracketpos_backtrack	typeref:typename:int	file:
private_data_ptrs	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 *private_data_ptrs;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32 *	file:
privatekey	extern/libgit2/include/git2/sys/cred.h	/^	char *privatekey; \/**< The path to a private key *\/$/;"	m	struct:git_cred_ssh_key	typeref:typename:char *
proc	extern/libgit2/src/win32/thread.h	/^	void *(*proc)(void *);$/;"	m	struct:__anon7162bc2d0108	typeref:typename:void * (*)(void *)
process	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        template<typename Traits> static inline typename Traits::value_type process(const uint16/;"	f	struct:utf16_decoder	typeref:typename:Traits::value_type	file:
process	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        template<typename Traits> static inline typename Traits::value_type process(const uint32/;"	f	struct:utf32_decoder	typeref:typename:Traits::value_type	file:
process	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        template<typename Traits> static inline typename Traits::value_type process(const uint8_/;"	f	struct:latin1_decoder	typeref:typename:Traits::value_type	file:
process	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        template<typename Traits> static inline typename Traits::value_type process(const uint8_/;"	f	struct:utf8_decoder	typeref:typename:Traits::value_type	file:
process	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        template<typename Traits> static inline typename Traits::value_type process(const wchar_/;"	f	struct:wchar_decoder	typeref:typename:Traits::value_type	file:
process_entry_path	extern/libgit2/src/notes.c	/^static int process_entry_path($/;"	f	typeref:typename:int	file:
process_tree_to_tree_diffing	extern/libgit2/tests/diff/tree.c	/^void process_tree_to_tree_diffing($/;"	f	typeref:typename:void
progress	extern/libgit2/examples/checkout.c	/^	int progress : 1;$/;"	m	struct:__anon96974fbb0108	typeref:typename:int:1	file:
progress	extern/libgit2/tests/checkout/tree.c	/^static void progress(const char *path, size_t cur, size_t tot, void *payload)$/;"	f	typeref:typename:void	file:
progress	extern/libgit2/tests/online/fetch.c	/^static int progress(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
progress_abort_diff	extern/libgit2/tests/diff/notify.c	/^static int progress_abort_diff($/;"	f	typeref:typename:int	file:
progress_cb	extern/libgit2/examples/fetch.c	/^static int progress_cb(const char *str, int len, void *data)$/;"	f	typeref:typename:int	file:
progress_cb	extern/libgit2/include/git2/checkout.h	/^	git_checkout_progress_cb progress_cb;$/;"	m	struct:git_checkout_options	typeref:typename:git_checkout_progress_cb
progress_cb	extern/libgit2/include/git2/diff.h	/^	git_diff_progress_cb progress_cb;$/;"	m	struct:__anon72022fed0608	typeref:typename:git_diff_progress_cb
progress_cb	extern/libgit2/include/git2/indexer.h	/^	git_indexer_progress_cb progress_cb;$/;"	m	struct:git_indexer_options	typeref:typename:git_indexer_progress_cb
progress_cb	extern/libgit2/include/git2/stash.h	/^	git_stash_apply_progress_cb progress_cb;$/;"	m	struct:git_stash_apply_options	typeref:typename:git_stash_apply_progress_cb
progress_cb	extern/libgit2/src/indexer.c	/^	git_indexer_progress_cb progress_cb;$/;"	m	struct:git_indexer	typeref:typename:git_indexer_progress_cb	file:
progress_cb	extern/libgit2/src/pack-objects.h	/^	git_packbuilder_progress progress_cb;$/;"	m	struct:git_packbuilder	typeref:typename:git_packbuilder_progress
progress_cb	extern/libgit2/src/transports/local.c	/^	git_indexer_progress_cb progress_cb;$/;"	m	struct:foreach_data	typeref:typename:git_indexer_progress_cb	file:
progress_cb	extern/libgit2/src/transports/local.c	/^	git_transport_message_cb progress_cb;$/;"	m	struct:__anonb65cbde80108	typeref:typename:git_transport_message_cb	file:
progress_cb	extern/libgit2/src/transports/smart.h	/^	git_transport_message_cb progress_cb;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_transport_message_cb
progress_cb	extern/libgit2/tests/stash/apply.c	/^int progress_cb($/;"	f	typeref:typename:int
progress_cb_payload	extern/libgit2/include/git2/indexer.h	/^	void *progress_cb_payload;$/;"	m	struct:git_indexer_options	typeref:typename:void *
progress_cb_payload	extern/libgit2/src/pack-objects.h	/^	void *progress_cb_payload;$/;"	m	struct:git_packbuilder	typeref:typename:void *
progress_cond	extern/libgit2/src/pack-objects.h	/^	git_cond progress_cond;$/;"	m	struct:git_packbuilder	typeref:typename:git_cond
progress_data	extern/libgit2/examples/clone.c	/^typedef struct progress_data {$/;"	s	file:
progress_data	extern/libgit2/examples/clone.c	/^} progress_data;$/;"	t	typeref:struct:progress_data	file:
progress_mutex	extern/libgit2/src/pack-objects.h	/^	git_mutex progress_mutex;$/;"	m	struct:git_packbuilder	typeref:typename:git_mutex
progress_payload	extern/libgit2/include/git2/checkout.h	/^	void *progress_payload;$/;"	m	struct:git_checkout_options	typeref:typename:void *
progress_payload	extern/libgit2/include/git2/stash.h	/^	void *progress_payload;$/;"	m	struct:git_stash_apply_options	typeref:typename:void *
progress_payload	extern/libgit2/src/indexer.c	/^	void *progress_payload;$/;"	m	struct:git_indexer	typeref:typename:void *	file:
progress_payload	extern/libgit2/src/transports/local.c	/^	void *progress_payload;$/;"	m	struct:foreach_data	typeref:typename:void *	file:
prompt_callback	extern/libgit2/include/git2/sys/cred.h	/^	git_cred_ssh_interactive_cb prompt_callback;$/;"	m	struct:git_cred_ssh_interactive	typeref:typename:git_cred_ssh_interactive_cb
prop_fail_result	extern/libgit2/deps/pcre/pcre_exec.c	/^#define prop_fail_result /;"	d	file:
prop_type	extern/libgit2/deps/pcre/pcre_exec.c	/^#define prop_type /;"	d	file:
prop_value	extern/libgit2/deps/pcre/pcre_exec.c	/^#define prop_value /;"	d	file:
propposstab	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 propposstab[PT_TABSIZE][PT_TABSIZE] = {$/;"	v	typeref:typename:const pcre_uint8[][]	file:
prov	extern/libgit2/src/hash/sha1/win32.h	/^	git_hash_prov *prov;$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:git_hash_prov *
prov	extern/libgit2/src/hash/sha1/win32.h	/^	} prov;$/;"	m	struct:__anon67941f950108	typeref:union:__anon67941f950108::__anon67941f95020a
proxy	extern/libgit2/src/remote.h	/^	const git_proxy_options *proxy;$/;"	m	struct:git_remote_connection_opts	typeref:typename:const git_proxy_options *
proxy	extern/libgit2/src/transports/http.c	/^	http_server proxy;$/;"	m	struct:__anon0458035d0308	typeref:typename:http_server	file:
proxy	extern/libgit2/src/transports/smart.h	/^	git_proxy_options proxy;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_proxy_options
proxy	extern/libgit2/src/transports/winhttp.c	/^	winhttp_server proxy;$/;"	m	struct:__anon981dd28b0408	typeref:typename:winhttp_server	file:
proxy_cert_cb	extern/libgit2/tests/online/clone.c	/^static int proxy_cert_cb(git_cert *cert, int valid, const char *host, void *payload)$/;"	f	typeref:typename:int	file:
proxy_connect	extern/libgit2/src/transports/http.c	/^static int proxy_connect($/;"	f	typeref:typename:int	file:
proxy_cred_cb	extern/libgit2/tests/online/clone.c	/^static int proxy_cred_cb(git_cred **out, const char *url, const char *username, unsigned int all/;"	f	typeref:typename:int	file:
proxy_headers_complete	extern/libgit2/src/transports/http.c	/^static int proxy_headers_complete(http_parser *parser)$/;"	f	typeref:typename:int	file:
proxy_opts	extern/libgit2/include/git2/remote.h	/^	git_proxy_options proxy_opts;$/;"	m	struct:__anonc41be5800508	typeref:typename:git_proxy_options
proxy_opts	extern/libgit2/include/git2/remote.h	/^	git_proxy_options proxy_opts;$/;"	m	struct:__anonc41be5800608	typeref:typename:git_proxy_options
proxy_opts	extern/libgit2/src/transports/http.c	/^	git_proxy_options proxy_opts;$/;"	m	struct:__anon0458035d0308	typeref:typename:git_proxy_options	file:
proxy_stream	extern/libgit2/src/filter.c	/^struct proxy_stream {$/;"	s	file:
proxy_stream_close	extern/libgit2/src/filter.c	/^static int proxy_stream_close(git_writestream *s)$/;"	f	typeref:typename:int	file:
proxy_stream_free	extern/libgit2/src/filter.c	/^static void proxy_stream_free(git_writestream *s)$/;"	f	typeref:typename:void	file:
proxy_stream_init	extern/libgit2/src/filter.c	/^static int proxy_stream_init($/;"	f	typeref:typename:int	file:
proxy_stream_write	extern/libgit2/src/filter.c	/^static int proxy_stream_write($/;"	f	typeref:typename:int	file:
proxy_support	extern/libgit2/include/git2/sys/stream.h	/^	int proxy_support;$/;"	m	struct:git_stream	typeref:typename:int
proxy_url	extern/libgit2/src/transports/http.c	/^	char *proxy_url;$/;"	m	struct:__anon0458035d0308	typeref:typename:char *	file:
prune	extern/libgit2/include/git2/remote.h	/^	git_fetch_prune_t prune;$/;"	m	struct:__anonc41be5800508	typeref:typename:git_fetch_prune_t
prune_candidates	extern/libgit2/src/remote.c	/^static int prune_candidates(git_vector *candidates, git_remote *remote)$/;"	f	typeref:typename:int	file:
prune_refs	extern/libgit2/src/remote.h	/^	int prune_refs;$/;"	m	struct:git_remote	typeref:typename:int
pstring	extern/libgit2/deps/pcre/pcreposix.c	/^static const char *const pstring[] = {$/;"	v	typeref:typename:const char * const[]	file:
ptr	extern/libgit2/include/git2/buffer.h	/^	char   *ptr;$/;"	m	struct:__anonbea3682e0108	typeref:typename:char *
ptr	extern/libgit2/include/git2/merge.h	/^	const char *ptr;$/;"	m	struct:__anon5e9a43240108	typeref:typename:const char *
ptr	extern/libgit2/include/git2/merge.h	/^	const char *ptr;$/;"	m	struct:__anon5e9a43240608	typeref:typename:const char *
ptr	extern/libgit2/script/user_model.c	/^	char *ptr;$/;"	m	struct:git_buf	typeref:typename:char *	file:
ptr	extern/libgit2/src/delta.c	/^	const unsigned char *ptr;$/;"	m	struct:index_entry	typeref:typename:const unsigned char *	file:
ptr	extern/libgit2/src/xdiff/xdiff.h	/^	char *ptr;$/;"	m	struct:s_mmbuffer	typeref:typename:char *
ptr	extern/libgit2/src/xdiff/xdiff.h	/^	char *ptr;$/;"	m	struct:s_mmfile	typeref:typename:char *
ptr	extern/libgit2/src/xdiff/xhistogram.c	/^		unsigned int ptr, cnt;$/;"	m	struct:histindex::record	typeref:typename:unsigned int	file:
ptr	extern/libgit2/src/xdiff/xtypes.h	/^	char const *ptr;$/;"	m	struct:s_xrecord	typeref:typename:char const *
ptr	extern/libgit2/tests/clar.c	/^	void (*ptr)(void);$/;"	m	struct:clar_func	typeref:typename:void (*)(void)	file:
ptr_shift	extern/libgit2/src/xdiff/xhistogram.c	/^		     ptr_shift;$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
ptr_table	extern/libgit2/deps/zlib/zutil.c	/^} ptr_table;$/;"	t	typeref:struct:ptr_table_s	file:
ptr_table_s	extern/libgit2/deps/zlib/zutil.c	/^typedef struct ptr_table_s {$/;"	s	file:
ptrdiff_t	extern/libgit2/deps/zlib/zutil.h	/^       typedef int ptrdiff_t;$/;"	t	typeref:typename:int
ptrdiff_t	extern/libgit2/deps/zlib/zutil.h	/^   typedef long ptrdiff_t;  \/* guess -- will be caught if guess is wrong *\/$/;"	t	typeref:typename:long
ptrs_equal_cmp	extern/libgit2/src/blame.c	/^static int ptrs_equal_cmp(const void *a, const void *b) { return a<b ? -1 : a>b ? 1 : 0; }$/;"	f	typeref:typename:int	file:
publickey	extern/libgit2/include/git2/sys/cred.h	/^	char *publickey; \/**< The path to a public key *\/$/;"	m	struct:git_cred_ssh_key	typeref:typename:char *
publickey	extern/libgit2/include/git2/sys/cred.h	/^	char *publickey; \/**< The public key data *\/$/;"	m	struct:git_cred_ssh_custom	typeref:typename:char *
publickey_len	extern/libgit2/include/git2/sys/cred.h	/^	size_t publickey_len; \/**< Length of the public key *\/$/;"	m	struct:git_cred_ssh_custom	typeref:typename:size_t
pugi	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	n	file:
pugi	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^namespace pugi$/;"	n	file:
pugi	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^namespace pugi$/;"	n
pugixml [![Build Status](https://travis-ci.org/zeux/pugixml.svg?branch=master)](https://travis-ci.org/zeux/pugixml) [![Build status](https://ci.appveyor.com/api/projects/status/9hdks1doqvq8pwe7/branch/master?svg=true)](https://ci.appveyor.com/project/zeux/pugixml) [![codecov.io](https://codecov.io/github/zeux/pugixml/coverage.svg?branch=master)](https://codecov.io/github/zeux/pugixml?branch=master) ![MIT](https://img.shields.io/badge/license-MIT-blue.svg)	extern/OpenXLSX/library/pugixml/README.md	/^pugixml [![Build Status](https:\/\/travis-ci.org\/zeux\/pugixml.svg?branch=master)](https:\/\/tr/;"	c
push	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void push(char_t*& s, size_t count) {$/;"	f	struct:gap	typeref:typename:void	file:
push	extern/libgit2/src/refspec.h	/^		push : 1,$/;"	m	struct:git_refspec	typeref:typename:unsigned int:1
push	extern/libgit2/src/remote.h	/^	git_push *push;$/;"	m	struct:git_remote	typeref:typename:git_push *
push_array	extern/libgit2/tests/network/remote/local.c	/^static git_strarray push_array = {$/;"	v	typeref:typename:git_strarray	file:
push_attr_file	extern/libgit2/src/attr.c	/^static int push_attr_file($/;"	f	typeref:typename:int	file:
push_back	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void push_back(const xpath_node& node, xpath_allocator* alloc)$/;"	f	class:xpath_node_set_raw	typeref:typename:void	file:
push_back_grow	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN_NO_INLINE void xpath_node_set_raw::push_back_grow(const xpath_node& node, xpath_alloca/;"	f	class:xpath_node_set_raw	typeref:typename:PUGI__FN_NO_INLINE void
push_commit	extern/libgit2/examples/rev-list.c	/^static int push_commit(git_revwalk *walk, const git_oid *oid, int hide)$/;"	f	typeref:typename:int	file:
push_ignore_file	extern/libgit2/src/ignore.c	/^static int push_ignore_file($/;"	f	typeref:typename:int	file:
push_leaf	extern/libgit2/src/oid.c	/^static trie_node *push_leaf(git_oid_shorten *os, node_index idx, int push_at, const char *oid)$/;"	f	typeref:typename:trie_node *	file:
push_negotiation	extern/libgit2/include/git2/remote.h	/^	git_push_negotiation push_negotiation;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_push_negotiation
push_one_attr	extern/libgit2/src/attr.c	/^static int push_one_attr(void *ref, const char *path)$/;"	f	typeref:typename:int	file:
push_one_ignore	extern/libgit2/src/ignore.c	/^static int push_one_ignore(void *payload, const char *path)$/;"	f	typeref:typename:int	file:
push_pack_progress_cb	extern/libgit2/tests/online/push.c	/^static int push_pack_progress_cb($/;"	f	typeref:typename:int	file:
push_packbuilder_payload	extern/libgit2/src/transports/smart_protocol.c	/^struct push_packbuilder_payload$/;"	s	file:
push_range	extern/libgit2/examples/rev-list.c	/^static int push_range(git_repository *repo, git_revwalk *walk, const char *range, int hide)$/;"	f	typeref:typename:int	file:
push_refspec_strings	extern/libgit2/tests/network/remote/local.c	/^static char *push_refspec_strings[] = {$/;"	v	typeref:typename:char * []	file:
push_refspecs	extern/libgit2/tests/network/remote/remotes.c	/^static const char *push_refspecs[] = {$/;"	v	typeref:typename:const char * []	file:
push_rev	extern/libgit2/examples/log.c	/^static void push_rev(struct log_state *s, git_object *obj, int hide)$/;"	f	typeref:typename:void	file:
push_spec	extern/libgit2/examples/rev-list.c	/^static int push_spec(git_repository *repo, git_revwalk *walk, const char *spec, int hide)$/;"	f	typeref:typename:int	file:
push_spec	extern/libgit2/src/push.h	/^typedef struct push_spec {$/;"	s
push_spec	extern/libgit2/src/push.h	/^} push_spec;$/;"	t	typeref:struct:push_spec
push_spec_rref_cmp	extern/libgit2/src/push.c	/^static int push_spec_rref_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
push_status	extern/libgit2/src/push.h	/^typedef struct push_status {$/;"	s
push_status	extern/libgit2/src/push.h	/^} push_status;$/;"	t	typeref:struct:push_status
push_status	extern/libgit2/tests/online/push_util.h	/^} push_status;$/;"	t	typeref:struct:__anon56a1c92f0408
push_status_free	extern/libgit2/tests/online/push_util.c	/^void push_status_free(push_status *s)$/;"	f	typeref:typename:void
push_status_ref_cmp	extern/libgit2/src/push.c	/^static int push_status_ref_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
push_three_states	extern/libgit2/tests/stash/drop.c	/^static void push_three_states(void)$/;"	f	typeref:typename:void	file:
push_transfer_progress	extern/libgit2/include/git2/remote.h	/^	git_push_transfer_progress_cb push_transfer_progress;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_push_transfer_progress_cb
push_transfer_progress_cb	extern/libgit2/tests/online/push.c	/^static int push_transfer_progress_cb($/;"	f	typeref:typename:int	file:
push_update_reference	extern/libgit2/include/git2/remote.h	/^	git_push_update_reference_cb push_update_reference;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_push_update_reference_cb
pushurl	extern/libgit2/src/remote.h	/^	char *pushurl;$/;"	m	struct:git_remote	typeref:typename:char *
putShortMSB	extern/libgit2/deps/zlib/deflate.c	/^local void putShortMSB (s, b)$/;"	f
put_be32	extern/libgit2/src/hash/sha1/generic.c	/^#define put_be32(/;"	d	file:
put_byte	extern/libgit2/deps/zlib/deflate.h	/^#define put_byte(/;"	d
put_short	extern/libgit2/deps/zlib/trees.c	/^#define put_short(/;"	d	file:
put_uuid_string	extern/libgit2/src/transports/winhttp.c	/^static int put_uuid_string(LPWSTR buffer, size_t buffer_len_cch)$/;"	f	typeref:typename:int	file:
qualified_name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const char_t* qualified_name(const xpath_node& node)$/;"	f	typeref:typename:PUGI__FN const char_t *
query	extern/libgit2/src/net.h	/^	char *query;$/;"	m	struct:git_net_url	typeref:typename:char *
queue_difference	extern/libgit2/src/merge.c	/^static int queue_difference(const git_index_entry **entries, void *data)$/;"	f	typeref:typename:int	file:
queue_objects	extern/libgit2/src/push.c	/^static int queue_objects(git_push *push)$/;"	f	typeref:typename:int	file:
quick_diff_blob_to_str	extern/libgit2/tests/diff/blob.c	/^static void quick_diff_blob_to_str($/;"	f	typeref:typename:void	file:
quiet	extern/libgit2/examples/init.c	/^	int quiet;$/;"	m	struct:opts	typeref:typename:int	file:
quiet	extern/libgit2/include/git2/rebase.h	/^	int quiet;$/;"	m	struct:__anona97543260108	typeref:typename:int
quiet	extern/libgit2/src/rebase.c	/^		quiet : 1,$/;"	m	struct:git_rebase	typeref:typename:int:1	file:
quit	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *quit;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
quit	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *quit;$/;"	m	struct:then_trap_backtrack	typeref:typename:jump_list *	file:
quit	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *quit;$/;"	m	struct:stub_list	typeref:struct:sljit_label *	file:
quit_label	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *quit_label;$/;"	m	struct:compiler_common	typeref:struct:sljit_label *	file:
quotes_for_value	extern/libgit2/src/config_file.c	/^static const char *quotes_for_value(const char *value)$/;"	f	typeref:typename:const char *	file:
r	extern/NamedType/main.cpp	/^    Rectangle r(Width(10_meter), Height(12_meter));$/;"	v	typeref:typename:Rectangle
racy_payload	extern/libgit2/tests/diff/racediffiter.c	/^} racy_payload;$/;"	t	typeref:struct:__anone9839ae90208	file:
rangeToString	extern/NamedType/catch.hpp	/^        std::string rangeToString(InputIterator first, InputIterator last) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
rangeToString	extern/OpenXLSX/tests/catch/catch.hpp	/^        std::string rangeToString(InputIterator first, InputIterator last) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
rangeToString	extern/OpenXLSX/tests/catch/catch.hpp	/^    std::string rangeToString( Range const& range ) {$/;"	f	namespace:Catch	typeref:typename:std::string
rangeToString	extern/OpenXLSX/tests/catch/catch.hpp	/^    std::string rangeToString( std::vector<bool, Allocator> const& v ) {$/;"	f	namespace:Catch	typeref:typename:std::string
ratio_string	extern/NamedType/catch.hpp	/^struct ratio_string {$/;"	s
ratio_string	extern/NamedType/catch.hpp	/^struct ratio_string<std::atto> {$/;"	s
ratio_string	extern/NamedType/catch.hpp	/^struct ratio_string<std::femto> {$/;"	s
ratio_string	extern/NamedType/catch.hpp	/^struct ratio_string<std::micro> {$/;"	s
ratio_string	extern/NamedType/catch.hpp	/^struct ratio_string<std::milli> {$/;"	s
ratio_string	extern/NamedType/catch.hpp	/^struct ratio_string<std::nano> {$/;"	s
ratio_string	extern/NamedType/catch.hpp	/^struct ratio_string<std::pico> {$/;"	s
ratio_string	extern/OpenXLSX/tests/catch/catch.hpp	/^struct ratio_string {$/;"	s	namespace:Catch
ratio_string	extern/OpenXLSX/tests/catch/catch.hpp	/^struct ratio_string<std::atto> {$/;"	s	namespace:Catch
ratio_string	extern/OpenXLSX/tests/catch/catch.hpp	/^struct ratio_string<std::femto> {$/;"	s	namespace:Catch
ratio_string	extern/OpenXLSX/tests/catch/catch.hpp	/^struct ratio_string<std::micro> {$/;"	s	namespace:Catch
ratio_string	extern/OpenXLSX/tests/catch/catch.hpp	/^struct ratio_string<std::milli> {$/;"	s	namespace:Catch
ratio_string	extern/OpenXLSX/tests/catch/catch.hpp	/^struct ratio_string<std::nano> {$/;"	s	namespace:Catch
ratio_string	extern/OpenXLSX/tests/catch/catch.hpp	/^struct ratio_string<std::pico> {$/;"	s	namespace:Catch
raw	extern/libgit2/src/blob.h	/^		} raw;$/;"	m	union:git_blob::__anon5d2cee12010a	typeref:struct:git_blob::__anon5d2cee12010a::__anon5d2cee120208
raw	extern/libgit2/src/blob.h	/^	unsigned int raw:1;$/;"	m	struct:git_blob	typeref:typename:unsigned int:1
raw	extern/libgit2/src/pack.h	/^	git_rawobj raw;$/;"	m	struct:git_pack_cache_entry	typeref:typename:git_rawobj
rawMemoryToString	extern/NamedType/catch.hpp	/^        std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
rawMemoryToString	extern/OpenXLSX/tests/catch/catch.hpp	/^        std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
raw_data	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^	git_win32__stack__raw_data raw_data;$/;"	m	struct:__anon6890d5050208	typeref:typename:git_win32__stack__raw_data	file:
raw_header	extern/libgit2/src/commit.h	/^	char *raw_header;$/;"	m	struct:git_commit	typeref:typename:char *
raw_message	extern/libgit2/src/commit.h	/^	char *raw_message;$/;"	m	struct:git_commit	typeref:typename:char *
rc	extern/libgit2/src/attr_file.h	/^	git_refcount rc;		\/* for macros *\/$/;"	m	struct:__anon32d629ad0508	typeref:typename:git_refcount
rc	extern/libgit2/src/attr_file.h	/^	git_refcount rc;$/;"	m	struct:__anon32d629ad0608	typeref:typename:git_refcount
rc	extern/libgit2/src/config.c	/^	git_refcount rc;$/;"	m	struct:__anon2d64db840108	typeref:typename:git_refcount	file:
rc	extern/libgit2/src/config.h	/^	git_refcount rc;$/;"	m	struct:git_config	typeref:typename:git_refcount
rc	extern/libgit2/src/config_entries.c	/^	git_refcount rc;$/;"	m	struct:git_config_entries	typeref:typename:git_refcount	file:
rc	extern/libgit2/src/diff.h	/^	git_refcount     rc;$/;"	m	struct:git_diff	typeref:typename:git_refcount
rc	extern/libgit2/src/index.h	/^	git_refcount rc;$/;"	m	struct:git_index	typeref:typename:git_refcount
rc	extern/libgit2/src/odb.h	/^	git_refcount rc;$/;"	m	struct:git_odb	typeref:typename:git_refcount
rc	extern/libgit2/src/patch.h	/^	git_refcount rc;$/;"	m	struct:git_patch	typeref:typename:git_refcount
rc	extern/libgit2/src/patch_parse.h	/^	git_refcount rc;$/;"	m	struct:__anonadbd87dd0108	typeref:typename:git_refcount
rc	extern/libgit2/src/pathspec.h	/^	git_refcount rc;$/;"	m	struct:git_pathspec	typeref:typename:git_refcount
rc	extern/libgit2/src/refdb.h	/^	git_refcount rc;$/;"	m	struct:git_refdb	typeref:typename:git_refcount
rc	extern/libgit2/src/sortedcache.h	/^	git_refcount rc;$/;"	m	struct:__anond92d40380108	typeref:typename:git_refcount
rc	extern/libgit2/src/submodule.h	/^	git_refcount rc;$/;"	m	struct:git_submodule	typeref:typename:git_refcount
rcha	extern/libgit2/src/xdiff/xhistogram.c	/^	chastore_t rcha;$/;"	m	struct:histindex	typeref:typename:chastore_t	file:
rcha	extern/libgit2/src/xdiff/xtypes.h	/^	chastore_t rcha;$/;"	m	struct:s_xdfile	typeref:typename:chastore_t
rchash	extern/libgit2/src/xdiff/xprepare.c	/^	xdlclass_t **rchash;$/;"	m	struct:s_xdlclassifier	typeref:typename:xdlclass_t **	file:
rchg	extern/libgit2/src/xdiff/xdiffi.h	/^	char *rchg;$/;"	m	struct:s_diffdata	typeref:typename:char *
rchg	extern/libgit2/src/xdiff/xtypes.h	/^	char *rchg;$/;"	m	struct:s_xdfile	typeref:typename:char *
rcrecs	extern/libgit2/src/xdiff/xprepare.c	/^	xdlclass_t **rcrecs;$/;"	m	struct:s_xdlclassifier	typeref:typename:xdlclass_t **	file:
rdepth	extern/libgit2/deps/pcre/pcre_exec.c	/^#define rdepth /;"	d	file:
re	extern/libgit2/src/diff_driver.c	/^	p_regex_t re;$/;"	m	struct:__anon6fb9a4920208	typeref:typename:p_regex_t	file:
re_erroffset	extern/libgit2/deps/pcre/pcreposix.h	/^  size_t re_erroffset;$/;"	m	struct:__anonf0efc70d0208	typeref:typename:size_t
re_nsub	extern/libgit2/deps/pcre/pcreposix.h	/^  size_t re_nsub;$/;"	m	struct:__anonf0efc70d0208	typeref:typename:size_t
re_pcre	extern/libgit2/deps/pcre/pcreposix.h	/^  void *re_pcre;$/;"	m	struct:__anonf0efc70d0208	typeref:typename:void *
read	extern/libgit2/deps/zlib/gzguts.h	/^#  define read /;"	d
read	extern/libgit2/examples/common.h	/^# define read /;"	d
read	extern/libgit2/src/reader.h	/^	int (*read)(git_buf *out, git_oid *out_oid, git_filemode_t *mode, git_reader *reader, const cha/;"	m	struct:git_reader	typeref:typename:int (*)(git_buf * out,git_oid * out_oid,git_filemode_t * mode,git_reader * reader,const char * filename)
read_buf	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_buf($/;"	f	typeref:typename:bool	file:
read_buf	extern/libgit2/deps/zlib/deflate.c	/^local unsigned read_buf(strm, buf, size)$/;"	f
read_buf_avail	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 read_buf_size, read_buf_ofs, read_buf_avail, comp_remaining, out_buf_ofs, cur_file/;"	m	struct:__anon09af45a71808	typeref:typename:mz_uint64
read_buf_ofs	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 read_buf_size, read_buf_ofs, read_buf_avail, comp_remaining, out_buf_ofs, cur_file/;"	m	struct:__anon09af45a71808	typeref:typename:mz_uint64
read_buf_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_uint64 read_buf_size, read_buf_ofs, read_buf_avail, comp_remaining, out_buf_ofs, cur_file/;"	m	struct:__anon09af45a71808	typeref:typename:mz_uint64
read_bufinfo	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_bufinfo($/;"	f	typeref:typename:bool	file:
read_byte	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_byte($/;"	f	typeref:typename:bool	file:
read_calls	extern/libgit2/tests/odb/backend/backend_helpers.h	/^	int read_calls;$/;"	m	struct:__anon7ee03db30208	typeref:typename:int
read_cb	extern/libgit2/src/streams/stransport.c	/^static OSStatus read_cb(SSLConnectionRef conn, void *data, size_t *len)$/;"	f	typeref:typename:OSStatus	file:
read_char	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void read_char(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
read_char7_type	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void read_char7_type(compiler_common *common, BOOL full_read)$/;"	f	typeref:typename:void	file:
read_char8_type	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void read_char8_type(compiler_common *common, BOOL update_str_ptr)$/;"	f	typeref:typename:void	file:
read_char_range	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void read_char_range(compiler_common *common, sljit_u32 min, sljit_u32 max, BOOL update_s/;"	f	typeref:typename:void	file:
read_conflict_name	extern/libgit2/src/index.c	/^#define read_conflict_name(/;"	d	file:
read_conflict_names	extern/libgit2/src/index.c	/^static int read_conflict_names(git_index *index, const char *buffer, size_t size)$/;"	f	typeref:typename:int	file:
read_entry	extern/libgit2/src/index.c	/^static int read_entry($/;"	f	typeref:typename:int	file:
read_extension	extern/libgit2/src/index.c	/^static int read_extension(size_t *read_len, git_index *index, const char *buffer, size_t buffer_/;"	f	typeref:typename:int	file:
read_file	extern/libgit2/examples/common.c	/^char *read_file(const char *path)$/;"	f	typeref:typename:char *
read_filemode	extern/libgit2/tests/checkout/tree.c	/^mode_t read_filemode(const char *path)$/;"	f	typeref:typename:mode_t
read_gitfile	extern/libgit2/src/repository.c	/^static int read_gitfile(git_buf *path_out, const char *file_path)$/;"	f	typeref:typename:int	file:
read_head_ref	extern/libgit2/tests/worktree/worktree.c	/^static int read_head_ref(git_repository *repo, const char *path, void *payload)$/;"	f	typeref:typename:int	file:
read_header	extern/libgit2/src/index.c	/^static int read_header(struct index_header *dest, const void *buffer)$/;"	f	typeref:typename:int	file:
read_header_calls	extern/libgit2/tests/odb/backend/backend_helpers.h	/^	int read_header_calls;$/;"	m	struct:__anon7ee03db30208	typeref:typename:int
read_header_loose	extern/libgit2/src/odb_loose.c	/^static int read_header_loose(git_rawobj *out, git_buf *loc)$/;"	f	typeref:typename:int	file:
read_header_loose_packlike	extern/libgit2/src/odb_loose.c	/^static int read_header_loose_packlike($/;"	f	typeref:typename:int	file:
read_header_loose_standard	extern/libgit2/src/odb_loose.c	/^static int read_header_loose_standard($/;"	f	typeref:typename:int	file:
read_int16	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_int16($/;"	f	typeref:typename:bool	file:
read_int32	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_int32($/;"	f	typeref:typename:bool	file:
read_int64	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_int64($/;"	f	typeref:typename:bool	file:
read_key_file	extern/libgit2/tests/online/clone.c	/^static char *read_key_file(const char *path)$/;"	f	typeref:typename:char *	file:
read_loose	extern/libgit2/src/odb_loose.c	/^static int read_loose(git_rawobj *out, git_buf *loc)$/;"	f	typeref:typename:int	file:
read_loose_packlike	extern/libgit2/src/odb_loose.c	/^static int read_loose_packlike(git_rawobj *out, git_buf *obj)$/;"	f	typeref:typename:int	file:
read_loose_standard	extern/libgit2/src/odb_loose.c	/^static int read_loose_standard(git_rawobj *out, git_buf *obj)$/;"	f	typeref:typename:int	file:
read_name_missing	extern/libgit2/tests/fetchhead/nonetwork.c	/^static int read_name_missing(const char *ref_name, const char *remote_url,$/;"	f	typeref:typename:int	file:
read_noop	extern/libgit2/tests/fetchhead/nonetwork.c	/^static int read_noop(const char *ref_name, const char *remote_url,$/;"	f	typeref:typename:int	file:
read_nosection_cb	extern/libgit2/tests/config/read.c	/^static int read_nosection_cb(const git_config_entry *entry, void *payload) {$/;"	f	typeref:typename:int	file:
read_object_stream	extern/libgit2/src/indexer.c	/^static int read_object_stream(git_indexer *idx, git_packfile_stream *stream)$/;"	f	typeref:typename:int	file:
read_old_style_cb	extern/libgit2/tests/fetchhead/nonetwork.c	/^static int read_old_style_cb(const char *name, const char *url,$/;"	f	typeref:typename:int	file:
read_on_variable	extern/libgit2/src/config_file.c	/^static int read_on_variable($/;"	f	typeref:typename:int	file:
read_only_data_head	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  void *read_only_data_head;$/;"	m	struct:compiler_common	typeref:typename:void *	file:
read_only_data_heads	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  void *read_only_data_heads[JIT_NUMBER_OF_COMPILE_MODES];$/;"	m	struct:executable_functions	typeref:typename:void * []	file:
read_prefix_1	extern/libgit2/src/odb.c	/^static int read_prefix_1(git_odb_object **out, git_odb *db,$/;"	f	typeref:typename:int	file:
read_prefix_calls	extern/libgit2/tests/odb/backend/backend_helpers.h	/^	int read_prefix_calls;$/;"	m	struct:__anon7ee03db30208	typeref:typename:int
read_repeat_counts	extern/libgit2/deps/pcre/pcre_compile.c	/^read_repeat_counts(const pcre_uchar *p, int *minp, int *maxp, int *errorcodeptr)$/;"	f	typeref:typename:const pcre_uchar *	file:
read_reuc	extern/libgit2/src/index.c	/^static int read_reuc(git_index *index, const char *buffer, size_t size)$/;"	f	typeref:typename:int	file:
read_stream_object	extern/libgit2/src/indexer.c	/^static int read_stream_object(git_indexer *idx, git_indexer_progress *stats)$/;"	f	typeref:typename:int	file:
read_string	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_string($/;"	f	typeref:typename:bool	file:
read_string_ascii	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_string_ascii($/;"	f	typeref:typename:bool	file:
read_string_unicode	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_string_unicode($/;"	f	typeref:typename:bool	file:
read_target_info	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_target_info($/;"	f	typeref:typename:bool	file:
read_tree_cb	extern/libgit2/src/index.c	/^static int read_tree_cb($/;"	f	typeref:typename:int	file:
read_tree_data	extern/libgit2/src/index.c	/^typedef struct read_tree_data {$/;"	s	file:
read_tree_data	extern/libgit2/src/index.c	/^} read_tree_data;$/;"	t	typeref:struct:read_tree_data	file:
read_tree_internal	extern/libgit2/src/tree-cache.c	/^static int read_tree_internal(git_tree_cache **out,$/;"	f	typeref:typename:int	file:
read_tree_recursive	extern/libgit2/src/tree-cache.c	/^static int read_tree_recursive(git_tree_cache *cache, const git_tree *tree, git_pool *pool)$/;"	f	typeref:typename:int	file:
read_type_missing	extern/libgit2/tests/fetchhead/nonetwork.c	/^static int read_type_missing(const char *ref_name, const char *remote_url,$/;"	f	typeref:typename:int	file:
read_variable_cb	extern/libgit2/src/config_mem.c	/^static int read_variable_cb($/;"	f	typeref:typename:int	file:
read_version	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_version($/;"	f	typeref:typename:bool	file:
readdir	extern/libgit2/src/win32/dir.h	/^#	define readdir	/;"	d
readdir_r	extern/libgit2/src/win32/dir.h	/^#   define readdir_r(/;"	d
reader	extern/libgit2/src/reader.c	/^	git_reader reader;$/;"	m	struct:__anone500b1410108	typeref:typename:git_reader	file:
reader	extern/libgit2/src/reader.c	/^	git_reader reader;$/;"	m	struct:__anone500b1410208	typeref:typename:git_reader	file:
reader	extern/libgit2/src/reader.c	/^	git_reader reader;$/;"	m	struct:__anone500b1410308	typeref:typename:git_reader	file:
readers	extern/libgit2/src/index.h	/^	git_atomic readers; \/* number of active iterators *\/$/;"	m	struct:git_index	typeref:typename:git_atomic
readline	extern/libgit2/examples/common.c	/^static int readline(char **out)$/;"	f	typeref:typename:int	file:
readonly	extern/libgit2/include/git2/sys/config.h	/^	int readonly;$/;"	m	struct:git_config_backend	typeref:typename:int
readp	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^	const unsigned char *readp;$/;"	m	struct:fuzzer_stream	typeref:typename:const unsigned char *	file:
real_email	extern/libgit2/src/mailmap.h	/^	char *real_email; \/**< the real email (may be NULL) *\/$/;"	m	struct:git_mailmap_entry	typeref:typename:char *
real_email	extern/libgit2/tests/mailmap/basic.c	/^	const char *real_email;$/;"	m	struct:__anon966719eb0108	typeref:typename:const char *	file:
real_email	extern/libgit2/tests/mailmap/mailmap_testdata.h	/^	const char *real_email;$/;"	m	struct:mailmap_entry	typeref:typename:const char *
real_link_size	extern/libgit2/deps/pcre/pcre_config.c	/^static int real_link_size = LINK_SIZE;$/;"	v	typeref:typename:int	file:
real_name	extern/libgit2/src/mailmap.h	/^	char *real_name; \/**< the real name (may be NULL) *\/$/;"	m	struct:git_mailmap_entry	typeref:typename:char *
real_name	extern/libgit2/tests/mailmap/basic.c	/^	const char *real_name;$/;"	m	struct:__anon966719eb0108	typeref:typename:const char *	file:
real_name	extern/libgit2/tests/mailmap/mailmap_testdata.h	/^	const char *real_name;$/;"	m	struct:mailmap_entry	typeref:typename:const char *
real_offset_count	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int real_offset_count;$/;"	m	struct:jit_arguments	typeref:typename:int	file:
real_pcre	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct real_pcre8_or_16 real_pcre;$/;"	t	typeref:struct:real_pcre8_or_16
real_pcre16	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct real_pcre8_or_16 real_pcre16;$/;"	t	typeref:struct:real_pcre8_or_16
real_pcre32	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct real_pcre32 {$/;"	s
real_pcre32	extern/libgit2/deps/pcre/pcre_internal.h	/^} real_pcre32;$/;"	t	typeref:struct:real_pcre32
real_pcre8_or_16	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct real_pcre8_or_16 {$/;"	s
real_pcre8_or_16	extern/libgit2/deps/pcre/pcre_internal.h	/^} real_pcre8_or_16;$/;"	t	typeref:struct:real_pcre8_or_16
reallocate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void* reallocate(void* ptr, size_t old_size, size_t new_size)$/;"	f	struct:xpath_allocator	typeref:typename:void *	file:
rebase_alloc	extern/libgit2/src/rebase.c	/^static int rebase_alloc(git_rebase **out, const git_rebase_options *rebase_opts)$/;"	f	typeref:typename:int	file:
rebase_check_versions	extern/libgit2/src/rebase.c	/^static int rebase_check_versions(const git_rebase_options *given_opts)$/;"	f	typeref:typename:int	file:
rebase_checkout_progress_cb	extern/libgit2/tests/rebase/merge.c	/^void rebase_checkout_progress_cb($/;"	f	typeref:typename:void
rebase_cleanup	extern/libgit2/src/rebase.c	/^static int rebase_cleanup(git_rebase *rebase)$/;"	f	typeref:typename:int	file:
rebase_commit__create	extern/libgit2/src/rebase.c	/^static int rebase_commit__create($/;"	f	typeref:typename:int	file:
rebase_commit_inmemory	extern/libgit2/src/rebase.c	/^static int rebase_commit_inmemory($/;"	f	typeref:typename:int	file:
rebase_commit_merge	extern/libgit2/src/rebase.c	/^static int rebase_commit_merge($/;"	f	typeref:typename:int	file:
rebase_copy_note	extern/libgit2/src/rebase.c	/^static int rebase_copy_note($/;"	f	typeref:typename:int	file:
rebase_copy_notes	extern/libgit2/src/rebase.c	/^static int rebase_copy_notes($/;"	f	typeref:typename:int	file:
rebase_ensure_not_dirty	extern/libgit2/src/rebase.c	/^static int rebase_ensure_not_dirty($/;"	f	typeref:typename:int	file:
rebase_ensure_not_in_progress	extern/libgit2/src/rebase.c	/^static int rebase_ensure_not_in_progress(git_repository *repo)$/;"	f	typeref:typename:int	file:
rebase_init_inmemory	extern/libgit2/src/rebase.c	/^static int rebase_init_inmemory($/;"	f	typeref:typename:int	file:
rebase_init_merge	extern/libgit2/src/rebase.c	/^static int rebase_init_merge($/;"	f	typeref:typename:int	file:
rebase_init_operations	extern/libgit2/src/rebase.c	/^static int rebase_init_operations($/;"	f	typeref:typename:int	file:
rebase_is_blocked	extern/libgit2/tests/rebase/setup.c	/^static int rebase_is_blocked(void)$/;"	f	typeref:typename:int	file:
rebase_movenext	extern/libgit2/src/rebase.c	/^GIT_INLINE(int) rebase_movenext(git_rebase *rebase)$/;"	f	typeref:typename:int
rebase_next_inmemory	extern/libgit2/src/rebase.c	/^static int rebase_next_inmemory($/;"	f	typeref:typename:int	file:
rebase_next_merge	extern/libgit2/src/rebase.c	/^static int rebase_next_merge($/;"	f	typeref:typename:int	file:
rebase_onto_name	extern/libgit2/src/rebase.c	/^static const char *rebase_onto_name(const git_annotated_commit *onto)$/;"	f	typeref:typename:const char *	file:
rebase_open_merge	extern/libgit2/src/rebase.c	/^static int rebase_open_merge(git_rebase *rebase)$/;"	f	typeref:typename:int	file:
rebase_operation_alloc	extern/libgit2/src/rebase.c	/^static git_rebase_operation *rebase_operation_alloc($/;"	f	typeref:typename:git_rebase_operation *	file:
rebase_readfile	extern/libgit2/src/rebase.c	/^GIT_INLINE(int) rebase_readfile($/;"	f	typeref:typename:int
rebase_readint	extern/libgit2/src/rebase.c	/^GIT_INLINE(int) rebase_readint($/;"	f	typeref:typename:int
rebase_readoid	extern/libgit2/src/rebase.c	/^GIT_INLINE(int) rebase_readoid($/;"	f	typeref:typename:int
rebase_setupfile	extern/libgit2/src/rebase.c	/^static int rebase_setupfile(git_rebase *rebase, const char *filename, int flags, const char *fmt/;"	f	typeref:typename:int	file:
rebase_setupfiles	extern/libgit2/src/rebase.c	/^static int rebase_setupfiles(git_rebase *rebase)$/;"	f	typeref:typename:int	file:
rebase_setupfiles_merge	extern/libgit2/src/rebase.c	/^static int rebase_setupfiles_merge(git_rebase *rebase)$/;"	f	typeref:typename:int	file:
rebase_state_type	extern/libgit2/src/rebase.c	/^static int rebase_state_type($/;"	f	typeref:typename:int	file:
receive_pack_ls_service_url	extern/libgit2/src/transports/http.c	/^static const char *receive_pack_ls_service_url = "\/info\/refs?service=git-receive-pack";$/;"	v	typeref:typename:const char *	file:
receive_pack_ls_service_url	extern/libgit2/src/transports/winhttp.c	/^static const char *receive_pack_ls_service_url = "\/info\/refs?service=git-receive-pack";$/;"	v	typeref:typename:const char *	file:
receive_pack_service	extern/libgit2/src/transports/http.c	/^static const char *receive_pack_service = "receive-pack";$/;"	v	typeref:typename:const char *	file:
receive_pack_service	extern/libgit2/src/transports/winhttp.c	/^static const char *receive_pack_service = "receive-pack";$/;"	v	typeref:typename:const char *	file:
receive_pack_service_url	extern/libgit2/src/transports/http.c	/^static const char *receive_pack_service_url = "\/git-receive-pack";$/;"	v	typeref:typename:const char *	file:
receive_pack_service_url	extern/libgit2/src/transports/winhttp.c	/^static const char *receive_pack_service_url = "\/git-receive-pack";$/;"	v	typeref:typename:const char *	file:
received_bytes	extern/libgit2/include/git2/indexer.h	/^	size_t received_bytes;$/;"	m	struct:git_indexer_progress	typeref:typename:size_t
received_bytes	extern/libgit2/include/git2/odb_backend.h	/^	git_off_t received_bytes;$/;"	m	struct:git_odb_stream	typeref:typename:git_off_t
received_objects	extern/libgit2/include/git2/indexer.h	/^	unsigned int received_objects;$/;"	m	struct:git_indexer_progress	typeref:typename:unsigned int
received_response	extern/libgit2/src/transports/http.c	/^		received_response : 1,$/;"	m	struct:__anon0458035d0108	typeref:typename:unsigned:1	file:
received_response	extern/libgit2/src/transports/winhttp.c	/^		received_response : 1,$/;"	m	struct:__anon981dd28b0208	typeref:typename:unsigned:1	file:
record	extern/libgit2/src/xdiff/xhistogram.c	/^	struct record {$/;"	s	struct:histindex	file:
record_callbacks_data	extern/libgit2/tests/online/push_util.h	/^} record_callbacks_data;$/;"	t	typeref:struct:__anon56a1c92f0208
record_callbacks_data_clear	extern/libgit2/tests/online/push_util.c	/^void record_callbacks_data_clear(record_callbacks_data *data)$/;"	f	typeref:typename:void
record_push_status_cb	extern/libgit2/tests/online/push.c	/^static int record_push_status_cb(const char *ref, const char *msg, void *payload)$/;"	f	typeref:typename:int	file:
record_ref_cb	extern/libgit2/tests/online/push_util.c	/^int record_ref_cb(git_remote_head *head, void *payload)$/;"	f	typeref:typename:int
record_update_tips_cb	extern/libgit2/tests/online/push_util.c	/^int record_update_tips_cb(const char *refname, const git_oid *a, const git_oid *b, void *data)$/;"	f	typeref:typename:int
records	extern/libgit2/src/xdiff/xhistogram.c	/^	} **records, \/* an occurrence *\/$/;"	m	struct:histindex	typeref:struct:histindex::record **	file:
records_size	extern/libgit2/src/xdiff/xhistogram.c	/^		     records_size,$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
recs	extern/libgit2/src/xdiff/xtypes.h	/^	xrecord_t **recs;$/;"	m	struct:s_xdfile	typeref:typename:xrecord_t **
recs_match	extern/libgit2/src/xdiff/xdiffi.c	/^static int recs_match(xrecord_t *rec1, xrecord_t *rec2, long flags)$/;"	f	typeref:typename:int	file:
recurse_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct recurse_backtrack {$/;"	s	file:
recurse_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} recurse_backtrack;$/;"	t	typeref:struct:recurse_backtrack	file:
recurse_check	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct recurse_check {$/;"	s
recurse_check	extern/libgit2/deps/pcre/pcre_internal.h	/^} recurse_check;$/;"	t	typeref:struct:recurse_check
recurse_entry	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct recurse_entry {$/;"	s	file:
recurse_entry	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} recurse_entry;$/;"	t	typeref:struct:recurse_entry	file:
recursing	extern/libgit2/src/pack-objects.h	/^	    recursing:1,$/;"	m	struct:git_pobject	typeref:typename:int:1
recursion_info	extern/libgit2/deps/pcre/pcre_internal.h	/^typedef struct recursion_info {$/;"	s
recursion_info	extern/libgit2/deps/pcre/pcre_internal.h	/^} recursion_info;$/;"	t	typeref:struct:recursion_info
recursion_limit	extern/libgit2/include/git2/merge.h	/^	unsigned int recursion_limit;$/;"	m	struct:__anon5e9a43240708	typeref:typename:unsigned int
recursive	extern/libgit2/deps/pcre/pcre_internal.h	/^  dfa_recursion_info *recursive;    \/* Linked list of recursion data *\/$/;"	m	struct:dfa_match_data	typeref:typename:dfa_recursion_info *
recursive	extern/libgit2/deps/pcre/pcre_internal.h	/^  recursion_info *recursive;      \/* Linked list of recursion data *\/$/;"	m	struct:match_data	typeref:typename:recursion_info *
recursive_head_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 recursive_head_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
recursive_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *recursive_matchingpath;$/;"	m	struct:bracket_backtrack	typeref:struct:sljit_label *	file:
recv	extern/libgit2/src/netops.h	/^	int (*recv)(struct gitno_buffer *buffer);$/;"	m	struct:gitno_buffer	typeref:typename:int (*)(struct gitno_buffer * buffer)
recv_pkt	extern/libgit2/src/transports/smart_protocol.c	/^static int recv_pkt(git_pkt **out_pkt, git_pkt_type *out_type, gitno_buffer *buf)$/;"	f	typeref:typename:int	file:
recv_stream	extern/libgit2/src/netops.c	/^static int recv_stream(gitno_buffer *buf)$/;"	f	typeref:typename:int	file:
redirect_url	extern/libgit2/src/transports/http.c	/^	char *redirect_url;$/;"	m	struct:__anon0458035d0108	typeref:typename:char *	file:
reduced_round_coll	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	int reduced_round_coll;$/;"	m	struct:__anon3f63bb720108	typeref:typename:int
ref	extern/NamedType/named_type_impl.hpp	/^    using ref = NamedType<T&, Parameter, Skills...>;$/;"	t	class:fluent::NamedType	typeref:typename:NamedType<T &,Parameter,Skills...>
ref	extern/OpenXLSX/tests/c++/Test04-06_Sheet.cpp	/^auto ref = sheet.FirstCell();$/;"	v	typeref:typename:auto
ref	extern/OpenXLSX/tests/c++/Test07_CellReference.cpp	/^XLCellReference ref(3, 3);$/;"	v	typeref:typename:XLCellReference
ref	extern/libgit2/include/git2/worktree.h	/^	git_reference *ref; \/**< reference to use for the new worktree HEAD *\/$/;"	m	struct:git_worktree_add_options	typeref:typename:git_reference *
ref	extern/libgit2/src/push.h	/^	char *ref;$/;"	m	struct:push_status	typeref:typename:char *
ref	extern/libgit2/src/transports/smart.h	/^	char *ref;$/;"	m	struct:__anoncc6f59690808	typeref:typename:char *
ref	extern/libgit2/src/transports/smart.h	/^	char *ref;$/;"	m	struct:__anoncc6f59690908	typeref:typename:char *
ref	extern/libgit2/tests/online/push_util.h	/^	char *ref;$/;"	m	struct:__anon56a1c92f0408	typeref:typename:char *
ref	extern/libgit2/tests/refs/branches/name.c	/^static git_reference *ref;$/;"	v	typeref:typename:git_reference *	file:
ref	nt.hpp	/^  using ref = NamedType<T &, Parameter, Skills...>;$/;"	t	class:nt::NamedType	typeref:typename:NamedType<T &,Parameter,Skills...>
ref_branch_name	extern/libgit2/tests/refs/overwrite.c	/^static const char *ref_branch_name = "refs\/heads\/branch";$/;"	v	typeref:typename:const char *	file:
ref_count	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 ref_count;          \/* Reference count *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
ref_count	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 ref_count;          \/* Reference count *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
ref_error_notfound	extern/libgit2/src/refdb_fs.c	/^static int ref_error_notfound(const char *name)$/;"	f	typeref:typename:int	file:
ref_is_available	extern/libgit2/src/refdb_fs.c	/^static bool ref_is_available($/;"	f	typeref:typename:bool	file:
ref_iterator_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct ref_iterator_backtrack {$/;"	s	file:
ref_iterator_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} ref_iterator_backtrack;$/;"	t	typeref:struct:ref_iterator_backtrack	file:
ref_list	extern/libgit2/tests/refs/listall.c	/^static git_strarray ref_list;$/;"	v	typeref:typename:git_strarray	file:
ref_master_name	extern/libgit2/tests/refs/overwrite.c	/^static const char *ref_master_name = "refs\/heads\/master";$/;"	v	typeref:typename:const char *	file:
ref_master_name	extern/libgit2/tests/refs/rename.c	/^static const char *ref_master_name = "refs\/heads\/master";$/;"	v	typeref:typename:const char *	file:
ref_master_name	extern/libgit2/tests/refs/setter.c	/^static const char *ref_master_name = "refs\/heads\/master";$/;"	v	typeref:typename:const char *	file:
ref_name	extern/libgit2/src/annotated_commit.h	/^	const char *ref_name;$/;"	m	struct:git_annotated_commit	typeref:typename:const char *
ref_name	extern/libgit2/src/fetchhead.h	/^	char *ref_name;$/;"	m	struct:git_fetchhead_ref	typeref:typename:char *
ref_name	extern/libgit2/src/reflog.h	/^	char *ref_name;$/;"	m	struct:git_reflog	typeref:typename:char *
ref_name	extern/libgit2/tests/refs/overwrite.c	/^static const char *ref_name = "refs\/heads\/other";$/;"	v	typeref:typename:const char *	file:
ref_name	extern/libgit2/tests/refs/setter.c	/^static const char *ref_name = "refs\/heads\/other";$/;"	v	typeref:typename:const char *	file:
ref_name_cmp	extern/libgit2/src/transports/smart.c	/^static int ref_name_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
ref_one_name	extern/libgit2/tests/refs/rename.c	/^static const char *ref_one_name = "refs\/heads\/one\/branch";$/;"	v	typeref:typename:const char *	file:
ref_one_name_new	extern/libgit2/tests/refs/rename.c	/^static const char *ref_one_name_new = "refs\/heads\/two\/branch";$/;"	v	typeref:typename:const char *	file:
ref_pkt	extern/libgit2/src/transports/smart_pkt.c	/^static int ref_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
ref_test_name	extern/libgit2/tests/refs/overwrite.c	/^static const char *ref_test_name = "refs\/heads\/test";$/;"	v	typeref:typename:const char *	file:
ref_test_name	extern/libgit2/tests/refs/setter.c	/^static const char *ref_test_name = "refs\/heads\/test";$/;"	v	typeref:typename:const char *	file:
ref_to_update	extern/libgit2/src/remote.c	/^static int ref_to_update(int *update, git_buf *remote_name, git_remote *remote, git_refspec *spe/;"	f	typeref:typename:int	file:
ref_two_name	extern/libgit2/tests/refs/rename.c	/^static const char *ref_two_name = "refs\/heads\/two";$/;"	v	typeref:typename:const char *	file:
ref_two_name_new	extern/libgit2/tests/refs/rename.c	/^static const char *ref_two_name_new = "refs\/heads\/two\/two";$/;"	v	typeref:typename:const char *	file:
ref_type	extern/libgit2/src/transaction.c	/^	git_reference_t ref_type;$/;"	m	struct:__anon8eca35140208	typeref:typename:git_reference_t	file:
refcache	extern/libgit2/src/refdb_fs.c	/^	git_sortedcache *refcache;$/;"	m	struct:refdb_fs_backend	typeref:typename:git_sortedcache *	file:
refcmp_cb	extern/libgit2/tests/refs/iterator.c	/^static int refcmp_cb(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
refcnt	extern/libgit2/src/blame.h	/^	int refcnt;$/;"	m	struct:git_blame__origin	typeref:typename:int
refcount	extern/libgit2/src/cache.h	/^	git_atomic refcount;$/;"	m	struct:__anon354735470208	typeref:typename:git_atomic
refcount	extern/libgit2/src/pack.h	/^	git_atomic refcount;$/;"	m	struct:git_pack_cache_entry	typeref:typename:git_atomic
refcount	extern/libgit2/src/pack.h	/^	git_atomic refcount;$/;"	m	struct:git_pack_file	typeref:typename:git_atomic
refcount	extern/libgit2/src/util.h	/^	git_atomic refcount;$/;"	m	struct:__anon8a0c96510108	typeref:typename:git_atomic
refdb_free_backend	extern/libgit2/src/refdb.c	/^static void refdb_free_backend(git_refdb *db)$/;"	f	typeref:typename:void	file:
refdb_fs_backend	extern/libgit2/src/refdb_fs.c	/^typedef struct refdb_fs_backend {$/;"	s	file:
refdb_fs_backend	extern/libgit2/src/refdb_fs.c	/^} refdb_fs_backend;$/;"	t	typeref:struct:refdb_fs_backend	file:
refdb_fs_backend__compress	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__compress(git_refdb_backend *_backend)$/;"	f	typeref:typename:int	file:
refdb_fs_backend__delete	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__delete($/;"	f	typeref:typename:int	file:
refdb_fs_backend__delete_tail	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__delete_tail($/;"	f	typeref:typename:int	file:
refdb_fs_backend__exists	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__exists($/;"	f	typeref:typename:int	file:
refdb_fs_backend__free	extern/libgit2/src/refdb_fs.c	/^static void refdb_fs_backend__free(git_refdb_backend *_backend)$/;"	f	typeref:typename:void	file:
refdb_fs_backend__iterator	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__iterator($/;"	f	typeref:typename:int	file:
refdb_fs_backend__iterator_free	extern/libgit2/src/refdb_fs.c	/^static void refdb_fs_backend__iterator_free(git_reference_iterator *_iter)$/;"	f	typeref:typename:void	file:
refdb_fs_backend__iterator_next	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__iterator_next($/;"	f	typeref:typename:int	file:
refdb_fs_backend__iterator_next_name	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__iterator_next_name($/;"	f	typeref:typename:int	file:
refdb_fs_backend__lock	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__lock(void **out, git_refdb_backend *_backend, const char *refname)$/;"	f	typeref:typename:int	file:
refdb_fs_backend__lookup	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__lookup($/;"	f	typeref:typename:int	file:
refdb_fs_backend__rename	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__rename($/;"	f	typeref:typename:int	file:
refdb_fs_backend__try_delete_empty_ref_hierarchie	extern/libgit2/src/refdb_fs.c	/^static void refdb_fs_backend__try_delete_empty_ref_hierarchie($/;"	f	typeref:typename:void	file:
refdb_fs_backend__unlock	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__unlock(git_refdb_backend *backend, void *payload, int success, int /;"	f	typeref:typename:int	file:
refdb_fs_backend__write	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__write($/;"	f	typeref:typename:int	file:
refdb_fs_backend__write_tail	extern/libgit2/src/refdb_fs.c	/^static int refdb_fs_backend__write_tail($/;"	f	typeref:typename:int	file:
refdb_fs_iter	extern/libgit2/src/refdb_fs.c	/^} refdb_fs_iter;$/;"	t	typeref:struct:__anonbd02e2090308	file:
refdb_reflog_fs__delete	extern/libgit2/src/refdb_fs.c	/^static int refdb_reflog_fs__delete(git_refdb_backend *_backend, const char *name)$/;"	f	typeref:typename:int	file:
refdb_reflog_fs__ensure_log	extern/libgit2/src/refdb_fs.c	/^static int refdb_reflog_fs__ensure_log(git_refdb_backend *_backend, const char *name)$/;"	f	typeref:typename:int	file:
refdb_reflog_fs__has_log	extern/libgit2/src/refdb_fs.c	/^static int refdb_reflog_fs__has_log(git_refdb_backend *_backend, const char *name)$/;"	f	typeref:typename:int	file:
refdb_reflog_fs__read	extern/libgit2/src/refdb_fs.c	/^static int refdb_reflog_fs__read(git_reflog **out, git_refdb_backend *_backend, const char *name/;"	f	typeref:typename:int	file:
refdb_reflog_fs__rename	extern/libgit2/src/refdb_fs.c	/^static int refdb_reflog_fs__rename(git_refdb_backend *_backend, const char *old_name, const char/;"	f	typeref:typename:int	file:
refdb_reflog_fs__write	extern/libgit2/src/refdb_fs.c	/^static int refdb_reflog_fs__write(git_refdb_backend *_backend, git_reflog *reflog)$/;"	f	typeref:typename:int	file:
reference	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef xml_attribute& reference;$/;"	t	class:pugi::xml_attribute_iterator	typeref:typename:xml_attribute &
reference	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef xml_node& reference;$/;"	t	class:pugi::xml_named_node_iterator	typeref:typename:xml_node &
reference	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef xml_node& reference;$/;"	t	class:pugi::xml_node_iterator	typeref:typename:xml_node &
reference	p.cpp	/^  using reference = value_type &;$/;"	t	struct:aiterator	typeref:typename:value_type &	file:
reference__create	extern/libgit2/src/refs.c	/^static int reference__create($/;"	f	typeref:typename:int	file:
reference__rename	extern/libgit2/src/refs.c	/^static int reference__rename(git_reference **out, git_reference *ref, const char *new_name, int /;"	f	typeref:typename:int	file:
reference_is_packed	extern/libgit2/tests/refs/ref_helpers.c	/^int reference_is_packed(git_reference *ref)$/;"	f	typeref:typename:int
reference_listing	extern/libgit2/examples/general.c	/^static void reference_listing(git_repository *repo)$/;"	f	typeref:typename:void	file:
reference_normalize_for_repo	extern/libgit2/src/refs.c	/^static int reference_normalize_for_repo($/;"	f	typeref:typename:int	file:
reference_path_available	extern/libgit2/src/refdb_fs.c	/^static int reference_path_available($/;"	f	typeref:typename:int	file:
reflog	extern/libgit2/src/transaction.c	/^	git_reflog *reflog;$/;"	m	struct:__anon8eca35140208	typeref:typename:git_reflog *	file:
reflog_alloc	extern/libgit2/src/refdb_fs.c	/^static int reflog_alloc(git_reflog **reflog, const char *name)$/;"	f	typeref:typename:int	file:
reflog_append	extern/libgit2/src/refdb_fs.c	/^static int reflog_append(refdb_fs_backend *backend, const git_reference *ref, const git_oid *old/;"	f	typeref:typename:int	file:
reflog_check	extern/libgit2/tests/reset/reset_helpers.c	/^void reflog_check(git_repository *repo, const char *refname,$/;"	f	typeref:typename:void
reflog_entry_tostr	extern/libgit2/tests/refs/reflog/reflog_helpers.c	/^static int reflog_entry_tostr(git_buf *out, const git_reflog_entry *entry)$/;"	f	typeref:typename:int	file:
reflog_entrycount	extern/libgit2/tests/refs/reflog/reflog_helpers.c	/^size_t reflog_entrycount(git_repository *repo, const char *name)$/;"	f	typeref:typename:size_t
reflog_inverse_index	extern/libgit2/src/reflog.h	/^GIT_INLINE(size_t) reflog_inverse_index(size_t idx, size_t total)$/;"	f	typeref:typename:size_t
reflog_parse	extern/libgit2/src/refdb_fs.c	/^static int reflog_parse(git_reflog *log, const char *buf, size_t buf_size)$/;"	f	typeref:typename:int	file:
reflog_print	extern/libgit2/tests/refs/reflog/reflog_helpers.c	/^void reflog_print(git_repository *repo, const char *reflog_name)$/;"	f	typeref:typename:void
refname	extern/libgit2/tests/refs/races.c	/^static const char *refname = "refs\/heads\/master";$/;"	v	typeref:typename:const char *	file:
refnames	extern/libgit2/tests/refs/iterator.c	/^static const char *refnames[] = {$/;"	v	typeref:typename:const char * []	file:
refnames_with_symlink	extern/libgit2/tests/refs/iterator.c	/^static const char *refnames_with_symlink[] = {$/;"	v	typeref:typename:const char * []	file:
refresh	extern/libgit2/tests/generate.py	/^    def refresh(self, path):$/;"	m	class:Module
refs	extern/libgit2/src/remote.h	/^	git_vector refs;$/;"	m	struct:git_remote	typeref:typename:git_vector
refs	extern/libgit2/src/transports/local.c	/^	git_vector refs;$/;"	m	struct:__anonb65cbde80108	typeref:typename:git_vector	file:
refs	extern/libgit2/src/transports/smart.h	/^	git_vector refs;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_vector
refs_foreach_cancel_cb	extern/libgit2/tests/refs/iterator.c	/^static int refs_foreach_cancel_cb(git_reference *reference, void *payload)$/;"	f	typeref:typename:int	file:
refs_foreach_cb	extern/libgit2/tests/refs/iterator.c	/^static int refs_foreach_cb(git_reference *reference, void *payload)$/;"	f	typeref:typename:int	file:
refs_foreach_name_cancel_cb	extern/libgit2/tests/refs/iterator.c	/^static int refs_foreach_name_cancel_cb(const char *name, void *payload)$/;"	f	typeref:typename:int	file:
refs_foreach_name_cb	extern/libgit2/tests/refs/iterator.c	/^static int refs_foreach_name_cb(const char *name, void *payload)$/;"	f	typeref:typename:int	file:
refspec	extern/libgit2/src/push.h	/^	struct git_refspec refspec;$/;"	m	struct:push_spec	typeref:struct:git_refspec
refspec_cb	extern/libgit2/src/remote.c	/^static int refspec_cb(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
refspec_cb_data	extern/libgit2/src/remote.c	/^struct refspec_cb_data {$/;"	s	file:
refspec_transform	extern/libgit2/src/refspec.c	/^static int refspec_transform($/;"	f	typeref:typename:int	file:
refspecs	extern/libgit2/src/remote.h	/^	git_vector refspecs;$/;"	m	struct:git_remote	typeref:typename:git_vector
refute__submodule_exists	extern/libgit2/tests/submodule/submodule_helpers.c	/^void refute__submodule_exists($/;"	f	typeref:typename:void
refute_is_ignored	extern/libgit2/tests/ignore/status.c	/^#define refute_is_ignored(/;"	d	file:
refute_submodule_exists	extern/libgit2/tests/submodule/submodule_helpers.h	/^#define refute_submodule_exists(/;"	d
regex	extern/libgit2/src/config.c	/^	p_regex_t regex;$/;"	m	struct:__anon2d64db840208	typeref:typename:p_regex_t	file:
regex	extern/libgit2/src/config.c	/^	p_regex_t regex;$/;"	m	struct:__anon2d64db840508	typeref:typename:p_regex_t	file:
region	extern/libgit2/src/xdiff/xhistogram.c	/^struct region {$/;"	s	file:
registerEnum	extern/OpenXLSX/tests/catch/catch.hpp	/^        Detail::EnumInfo const& registerEnum( StringRef enumName, StringRef allEnums, std::initi/;"	f	struct:Catch::IMutableEnumValuesRegistry	typeref:typename:Detail::EnumInfo const &
register_custom_filters	extern/libgit2/tests/filter/custom.c	/^static void register_custom_filters(void)$/;"	f	typeref:typename:void	file:
rehash	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN_NO_INLINE bool compact_hash_table::rehash(size_t count)$/;"	f	class:compact_hash_table	typeref:typename:PUGI__FN_NO_INLINE bool
rehash	extern/libgit2/src/pack-objects.c	/^static int rehash(git_packbuilder *pb)$/;"	f	typeref:typename:int	file:
reinit	extern/libgit2/tests/core/init.c	/^static void *reinit(void *unused)$/;"	f	typeref:typename:void *	file:
release	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void release()$/;"	f	struct:xpath_allocator	typeref:typename:void	file:
release	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        T* release() {$/;"	f	struct:auto_deleter	typeref:typename:T *	file:
release_attr_files	extern/libgit2/src/attr.c	/^static void release_attr_files(git_vector *files)$/;"	f	typeref:typename:void	file:
release_match_heapframes	extern/libgit2/deps/pcre/pcre_exec.c	/^release_match_heapframes (heapframe *frame_base)$/;"	f	typeref:typename:void	file:
reload_submodules	extern/libgit2/src/checkout.c	/^	bool reload_submodules;$/;"	m	struct:__anonbac5d6240208	typeref:typename:bool	file:
remain	extern/libgit2/src/parse.h	/^	const char *remain;$/;"	m	struct:__anon1f11c2ce0108	typeref:typename:const char *
remain_len	extern/libgit2/src/parse.h	/^	size_t remain_len;$/;"	m	struct:__anon1f11c2ce0108	typeref:typename:size_t
remaining	extern/libgit2/src/pack-objects.c	/^	size_t remaining;$/;"	m	struct:thread_params	typeref:typename:size_t	file:
remote	extern/libgit2/src/push.h	/^	git_remote *remote;$/;"	m	struct:git_push	typeref:typename:git_remote *
remote	extern/libgit2/src/remote.c	/^	git_remote *remote;$/;"	m	struct:refspec_cb_data	typeref:typename:git_remote *	file:
remote	extern/libgit2/tests/network/remote/local.c	/^static git_remote *remote;$/;"	v	typeref:typename:git_remote *	file:
remote_cb	extern/libgit2/include/git2/clone.h	/^	git_remote_create_cb remote_cb;$/;"	m	struct:git_clone_options	typeref:typename:git_remote_create_cb
remote_cb_payload	extern/libgit2/include/git2/clone.h	/^	void *remote_cb_payload;$/;"	m	struct:git_clone_options	typeref:typename:void *
remote_head_cmp	extern/libgit2/src/remote.c	/^static int remote_head_cmp(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
remote_head_for_fetchspec_src	extern/libgit2/src/remote.c	/^static int remote_head_for_fetchspec_src(git_remote_head **out, git_vector *update_heads, const /;"	f	typeref:typename:int	file:
remote_head_for_ref	extern/libgit2/src/remote.c	/^static int remote_head_for_ref(git_remote_head **out, git_remote *remote, git_refspec *spec, git/;"	f	typeref:typename:int	file:
remote_list_cb	extern/libgit2/src/remote.c	/^static int remote_list_cb(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
remote_mirror_cb	extern/libgit2/tests/network/fetchlocal.c	/^static int remote_mirror_cb(git_remote **out, git_repository *repo,$/;"	f	typeref:typename:int	file:
remote_mirror_cb	extern/libgit2/tests/online/clone.c	/^static int remote_mirror_cb(git_remote **out, git_repository *repo,$/;"	f	typeref:typename:int	file:
remote_single_branch	extern/libgit2/tests/online/remotes.c	/^static int remote_single_branch(git_remote **out, git_repository *repo, const char *name, const /;"	f	typeref:typename:int	file:
remote_tracking_branch_name	extern/libgit2/tests/refs/branches/remote.c	/^static const char *remote_tracking_branch_name = "refs\/remotes\/test\/master";$/;"	v	typeref:typename:const char *	file:
remote_url	extern/libgit2/src/annotated_commit.h	/^	const char *remote_url;$/;"	m	struct:git_annotated_commit	typeref:typename:const char *
remote_url	extern/libgit2/src/fetchhead.h	/^	char *remote_url;$/;"	m	struct:git_fetchhead_ref	typeref:typename:char *
remove	extern/libgit2/src/transaction.c	/^		remove :1;$/;"	m	struct:__anon8eca35140208	typeref:typename:unsigned int:1	file:
remove_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::remove_attribute(const char_t* name_) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
remove_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::remove_attribute(const xml_attribute& a) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
remove_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline void remove_attribute(xml_attribute_struct* attr, xml_node_struct* node) {$/;"	f	typeref:typename:void
remove_branch_config_related_entries	extern/libgit2/src/remote.c	/^static int remove_branch_config_related_entries($/;"	f	typeref:typename:int	file:
remove_child	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::remove_child(const char_t* name_) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
remove_child	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::remove_child(const xml_node& n) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
remove_conflicts	extern/libgit2/src/checkout.c	/^	git_vector remove_conflicts;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_vector	file:
remove_data	extern/libgit2/tests/clar_libgit2.c	/^} remove_data;$/;"	t	typeref:struct:__anonc7d6e3c70108	file:
remove_duplicates	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void remove_duplicates()$/;"	f	class:xpath_node_set_raw	typeref:typename:void	file:
remove_file_cb	extern/libgit2/tests/status/worktree.c	/^static int remove_file_cb(void *data, git_buf *file)$/;"	f	typeref:typename:int	file:
remove_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline void remove_node(xml_node_struct* node) {$/;"	f	typeref:typename:void
remove_note_in_tree_eexists_cb	extern/libgit2/src/notes.c	/^static int remove_note_in_tree_eexists_cb($/;"	f	typeref:typename:int	file:
remove_note_in_tree_enotfound_cb	extern/libgit2/src/notes.c	/^static int remove_note_in_tree_enotfound_cb($/;"	f	typeref:typename:int	file:
remove_object_files	extern/libgit2/tests/object/raw/write.c	/^static void remove_object_files(object_data *d)$/;"	f	typeref:typename:void	file:
remove_ones	extern/libgit2/tests/core/vector.c	/^static int remove_ones(const git_vector *v, size_t idx, void *p)$/;"	f	typeref:typename:int	file:
remove_placeholders_recurs	extern/libgit2/tests/clar_libgit2.c	/^static int remove_placeholders_recurs(void *_data, git_buf *path)$/;"	f	typeref:typename:int	file:
remove_redundant	extern/libgit2/src/merge.c	/^static int remove_redundant(git_revwalk *walk, git_vector *commits)$/;"	f	typeref:typename:int	file:
remove_refs	extern/libgit2/src/remote.c	/^static int remove_refs(git_repository *repo, const git_refspec *spec)$/;"	f	typeref:typename:int	file:
remove_remote_tracking	extern/libgit2/src/remote.c	/^static int remove_remote_tracking(git_repository *repo, const char *remote_name)$/;"	f	typeref:typename:int	file:
removes	extern/libgit2/src/checkout.c	/^	git_vector removes;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_vector	file:
rename_and_edit_file	extern/libgit2/tests/status/renames.c	/^#define rename_and_edit_file(/;"	d	file:
rename_cb_data	extern/libgit2/src/refs.c	/^} rename_cb_data;$/;"	t	typeref:struct:__anon81fc257e0208	file:
rename_config_entries_cb	extern/libgit2/src/config.c	/^static int rename_config_entries_cb($/;"	f	typeref:typename:int	file:
rename_data	extern/libgit2/src/config.c	/^struct rename_data {$/;"	s	file:
rename_expected	extern/libgit2/tests/diff/rename.c	/^struct rename_expected$/;"	s	file:
rename_fetch_refspecs	extern/libgit2/src/remote.c	/^static int rename_fetch_refspecs(git_vector *problems, git_remote *remote, const char *new_name)$/;"	f	typeref:typename:int	file:
rename_file	extern/libgit2/tests/status/renames.c	/^#define rename_file(/;"	d	file:
rename_from_rewrite_threshold	extern/libgit2/include/git2/diff.h	/^	uint16_t rename_from_rewrite_threshold;$/;"	m	struct:__anon72022fed0f08	typeref:typename:uint16_t
rename_limit	extern/libgit2/include/git2/diff.h	/^	size_t rename_limit;$/;"	m	struct:__anon72022fed0f08	typeref:typename:size_t
rename_new_path	extern/libgit2/src/patch_parse.c	/^	char *rename_old_path, *rename_new_path;$/;"	m	struct:__anonadbd87d80108	typeref:typename:char **	file:
rename_old_path	extern/libgit2/src/patch_parse.c	/^	char *rename_old_path, *rename_new_path;$/;"	m	struct:__anonadbd87d80108	typeref:typename:char *	file:
rename_once	extern/libgit2/src/win32/posix_w32.c	/^GIT_INLINE(int) rename_once(const wchar_t *from, const wchar_t *to)$/;"	f	typeref:typename:int
rename_one_remote_reference	extern/libgit2/src/remote.c	/^static int rename_one_remote_reference($/;"	f	typeref:typename:int	file:
rename_remote_config_section	extern/libgit2/src/remote.c	/^static int rename_remote_config_section($/;"	f	typeref:typename:int	file:
rename_remote_references	extern/libgit2/src/remote.c	/^static int rename_remote_references($/;"	f	typeref:typename:int	file:
rename_threshold	extern/libgit2/include/git2/diff.h	/^	uint16_t rename_threshold;$/;"	m	struct:__anon72022fed0f08	typeref:typename:uint16_t
rename_threshold	extern/libgit2/include/git2/merge.h	/^	unsigned int rename_threshold;$/;"	m	struct:__anon5e9a43240708	typeref:typename:unsigned int
renames	extern/libgit2/src/diff_stats.c	/^	size_t renames;$/;"	m	struct:git_diff_stats	typeref:typename:size_t	file:
render	extern/libgit2/tests/generate.py	/^        def render(self):$/;"	m	class:Module.CallbacksTemplate
render	extern/libgit2/tests/generate.py	/^        def render(self):$/;"	m	class:Module.DeclarationTemplate
render	extern/libgit2/tests/generate.py	/^        def render(self):$/;"	m	class:Module.InfoTemplate
rep_max	extern/libgit2/deps/pcre/pcre_exec.c	/^static const char rep_max[] = { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, };$/;"	v	typeref:typename:const char[]	file:
rep_min	extern/libgit2/deps/pcre/pcre_exec.c	/^static const char rep_min[] = { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, };$/;"	v	typeref:typename:const char[]	file:
repeat	extern/libgit2/examples/status.c	/^	int repeat;$/;"	m	struct:opts	typeref:typename:int	file:
replace_char	extern/libgit2/tests/index/tests.c	/^static void replace_char(char *str, char in, char out)$/;"	f	typeref:typename:void	file:
replace_email	extern/libgit2/src/mailmap.h	/^	char *replace_email; \/**< the email to replace *\/$/;"	m	struct:git_mailmap_entry	typeref:typename:char *
replace_email	extern/libgit2/tests/mailmap/basic.c	/^	const char *replace_email;$/;"	m	struct:__anon966719eb0108	typeref:typename:const char *	file:
replace_email	extern/libgit2/tests/mailmap/mailmap_testdata.h	/^	const char *replace_email;$/;"	m	struct:mailmap_entry	typeref:typename:const char *
replace_file_with_mode	extern/libgit2/tests/index/filemodes.c	/^static void replace_file_with_mode($/;"	f	typeref:typename:void	file:
replace_name	extern/libgit2/src/describe.c	/^static int replace_name($/;"	f	typeref:typename:int	file:
replace_name	extern/libgit2/src/mailmap.h	/^	char *replace_name; \/**< the name to replace (may be NULL) *\/$/;"	m	struct:git_mailmap_entry	typeref:typename:char *
replace_name	extern/libgit2/tests/mailmap/basic.c	/^	const char *replace_name;$/;"	m	struct:__anon966719eb0108	typeref:typename:const char *	file:
replace_name	extern/libgit2/tests/mailmap/mailmap_testdata.h	/^	const char *replace_name;$/;"	m	struct:mailmap_entry	typeref:typename:const char *
replay_count	extern/libgit2/src/transports/http.c	/^	    replay_count : 4;$/;"	m	struct:__anon0458035d0308	typeref:typename:unsigned:4	file:
replicate10	extern/libgit2/tests/config/include.c	/^#define replicate10(/;"	d	file:
repo	extern/libgit2/examples/add.c	/^	git_repository *repo;$/;"	m	struct:print_payload	typeref:typename:git_repository *	file:
repo	extern/libgit2/examples/log.c	/^	git_repository *repo;$/;"	m	struct:log_state	typeref:typename:git_repository *	file:
repo	extern/libgit2/examples/tag.c	/^	git_repository *repo;$/;"	m	struct:__anon8e82c8010208	typeref:typename:git_repository *	file:
repo	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/package.json	/^  "repo": "https:\/\/github.com\/libgit2\/libgit2",$/;"	s
repo	extern/libgit2/src/attr.c	/^	git_repository *repo;$/;"	m	struct:__anon5b6b8b690208	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/blob.c	/^	git_repository *repo;$/;"	m	struct:__anon5d2cee0d0108	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/checkout.c	/^	git_repository *repo;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/commit.c	/^	git_repository *repo;$/;"	m	struct:__anon2b8e95b70308	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/config_file.c	/^	const git_repository *repo;$/;"	m	struct:__anon041cc2a30108	typeref:typename:const git_repository *	file:
repo	extern/libgit2/src/config_file.c	/^	const git_repository *repo;$/;"	m	struct:__anon041cc2a30208	typeref:typename:const git_repository *	file:
repo	extern/libgit2/src/describe.c	/^	git_repository *repo;$/;"	m	struct:get_name_data	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/describe.c	/^	git_repository *repo;$/;"	m	struct:git_describe_result	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/diff.h	/^	git_repository   *repo;$/;"	m	struct:git_diff	typeref:typename:git_repository *
repo	extern/libgit2/src/diff_file.h	/^	git_repository *repo;$/;"	m	struct:__anon2493e46b0108	typeref:typename:git_repository *
repo	extern/libgit2/src/diff_generate.c	/^	git_repository *repo;$/;"	m	struct:__anon047407f10208	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/diff_tform.c	/^	git_repository *repo;$/;"	m	struct:__anone5feb9ce0108	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/filter.c	/^	git_repository *repo;$/;"	m	struct:git_filter_source	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/ignore.h	/^	git_repository *repo;$/;"	m	struct:__anon4fc5b6370108	typeref:typename:git_repository *
repo	extern/libgit2/src/iterator.h	/^	git_repository *repo;$/;"	m	struct:git_iterator	typeref:typename:git_repository *
repo	extern/libgit2/src/merge.h	/^	git_repository *repo;$/;"	m	struct:__anon41711a830408	typeref:typename:git_repository *
repo	extern/libgit2/src/merge_driver.h	/^	git_repository *repo;$/;"	m	struct:git_merge_driver_source	typeref:typename:git_repository *
repo	extern/libgit2/src/object.h	/^	git_repository *repo;$/;"	m	struct:git_object	typeref:typename:git_repository *
repo	extern/libgit2/src/pack-objects.h	/^	git_repository *repo; \/* associated repository *\/$/;"	m	struct:git_packbuilder	typeref:typename:git_repository *
repo	extern/libgit2/src/patch.h	/^	git_repository *repo; \/* may be null *\/$/;"	m	struct:git_patch	typeref:typename:git_repository *
repo	extern/libgit2/src/push.h	/^	git_repository *repo;$/;"	m	struct:git_push	typeref:typename:git_repository *
repo	extern/libgit2/src/reader.c	/^	git_repository *repo;$/;"	m	struct:__anone500b1410208	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/reader.c	/^	git_repository *repo;$/;"	m	struct:__anone500b1410308	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/rebase.c	/^	git_repository *repo;$/;"	m	struct:git_rebase	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/refdb.h	/^	git_repository *repo;$/;"	m	struct:git_refdb	typeref:typename:git_repository *
repo	extern/libgit2/src/refdb_fs.c	/^	git_repository *repo;$/;"	m	struct:refdb_fs_backend	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/remote.h	/^	git_repository *repo;$/;"	m	struct:git_remote	typeref:typename:git_repository *
repo	extern/libgit2/src/revwalk.h	/^	git_repository *repo;$/;"	m	struct:git_revwalk	typeref:typename:git_repository *
repo	extern/libgit2/src/submodule.c	/^	git_repository *repo;$/;"	m	struct:__anon952effbe0408	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/submodule.h	/^	git_repository *repo;$/;"	m	struct:git_submodule	typeref:typename:git_repository *
repo	extern/libgit2/src/tag.c	/^	git_repository *repo;$/;"	m	struct:__anonfc5068ca0108	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/transaction.c	/^	git_repository *repo;$/;"	m	struct:git_transaction	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/transports/local.c	/^	git_repository *repo;$/;"	m	struct:__anonb65cbde80108	typeref:typename:git_repository *	file:
repo	extern/libgit2/src/tree.h	/^	git_repository *repo;$/;"	m	struct:git_treebuilder	typeref:typename:git_repository *
repo	extern/libgit2/tests/apply/both.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/apply/callbacks.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/apply/fromdiff.c	/^static git_repository *repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/apply/fromfile.c	/^static git_repository *repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/apply/index.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/apply/partial.c	/^static git_repository *repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/apply/tree.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/apply/workdir.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/checkout/icase.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/checkout/nasty.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/cherrypick/bare.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/cherrypick/workdir.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/describe/t6120.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/diff/binary.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/diff/format_email.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/index/conflicts.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/index/names.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/index/nsec.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/index/reuc.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/index/stage.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/analysis.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/driver.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/files.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/trees/automerge.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/trees/commits.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/trees/modeconflict.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/trees/recursive.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/trees/renames.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/trees/treediff.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/trees/trivial.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/trees/whitespace.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/workdir/dirty.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/workdir/recursive.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/workdir/renames.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/workdir/setup.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/workdir/simple.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/workdir/submodules.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/merge/workdir/trivial.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/network/remote/local.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/object/blob/fromstream.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/object/blob/write.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/object/commit/commitstagedfile.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/object/tag/peel.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/object/tree/attributes.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/object/tree/frompath.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/odb/alternates.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/odb/freshen.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/odb/largefiles.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/odb/streamwrite.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/rebase/abort.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/rebase/inmemory.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/rebase/iterator.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/rebase/merge.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/rebase/setup.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/rebase/sign.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/rebase/submodule.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/branches/checkedout.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/branches/create.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/branches/delete.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/branches/ishead.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/branches/iterator.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/branches/lookup.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/branches/move.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/branches/name.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/branches/upstream.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/branches/upstreamname.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/foreachglob.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/iterator.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/listall.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/refs/unicode.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/repo/head.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/repo/headtree.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/repo/setters.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/reset/hard.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/reset/mixed.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/reset/soft.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/revert/bare.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/revert/workdir.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/stash/apply.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/stash/drop.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/stash/foreach.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/stash/save.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/stash/submodules.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/win32/forbidden.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	extern/libgit2/tests/worktree/worktree_helpers.h	/^	git_repository *repo;$/;"	m	struct:__anon9abb87050108	typeref:typename:git_repository *
repo	git.hpp	/^  const UPtr<git_repository> &repo;$/;"	m	struct:git::TreeBark	typeref:typename:const UPtr<git_repository> &
repo_contains_no_reference	extern/libgit2/src/repository.c	/^static int repo_contains_no_reference(git_repository *repo)$/;"	f	typeref:typename:int	file:
repo_index	extern/libgit2/tests/cherrypick/workdir.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/index/conflicts.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/index/names.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/index/nsec.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/index/reuc.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/index/stage.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/merge/driver.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/merge/files.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/merge/workdir/dirty.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/merge/workdir/setup.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/merge/workdir/simple.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/merge/workdir/trivial.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/revert/workdir.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	extern/libgit2/tests/stash/apply.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_init_config	extern/libgit2/src/repository.c	/^static int repo_init_config($/;"	f	typeref:typename:int	file:
repo_init_create_origin	extern/libgit2/src/repository.c	/^static int repo_init_create_origin(git_repository *repo, const char *url)$/;"	f	typeref:typename:int	file:
repo_init_directories	extern/libgit2/src/repository.c	/^static int repo_init_directories($/;"	f	typeref:typename:int	file:
repo_init_fs_configs	extern/libgit2/src/repository.c	/^static int repo_init_fs_configs($/;"	f	typeref:typename:int	file:
repo_init_structure	extern/libgit2/src/repository.c	/^static int repo_init_structure($/;"	f	typeref:typename:int	file:
repo_is_worktree	extern/libgit2/src/repository.c	/^static int repo_is_worktree(unsigned *out, const git_repository *repo)$/;"	f	typeref:typename:int	file:
repo_local_config	extern/libgit2/src/repository.c	/^static int repo_local_config($/;"	f	typeref:typename:int	file:
repo_mode	extern/libgit2/tests/repo/init.c	/^enum repo_mode {$/;"	g	file:
repo_name	extern/libgit2/tests/checkout/nasty.c	/^static const char *repo_name = "nasty";$/;"	v	typeref:typename:const char *	file:
repo_name	extern/libgit2/tests/win32/forbidden.c	/^static const char *repo_name = "win32-forbidden";$/;"	v	typeref:typename:const char *	file:
repo_reinit_submodule_fs	extern/libgit2/src/repository.c	/^static int repo_reinit_submodule_fs(git_submodule *sm, const char *n, void *p)$/;"	f	typeref:typename:int	file:
repo_template	extern/libgit2/src/repo_template.h	/^static repo_template_item repo_template[] = {$/;"	v	typeref:typename:repo_template_item[]
repo_template_item	extern/libgit2/src/repo_template.h	/^} repo_template_item;$/;"	t	typeref:struct:__anon60a8fbc40108
repo_write_gitlink	extern/libgit2/src/repository.c	/^static int repo_write_gitlink($/;"	f	typeref:typename:int	file:
repo_write_template	extern/libgit2/src/repository.c	/^static int repo_write_template($/;"	f	typeref:typename:int	file:
repodir	extern/libgit2/examples/log.c	/^	const char *repodir;$/;"	m	struct:log_state	typeref:typename:const char *	file:
repodir	extern/libgit2/examples/rev-parse.c	/^	const char *repodir;$/;"	m	struct:parse_state	typeref:typename:const char *	file:
repodir	extern/libgit2/examples/status.c	/^	char *repodir;$/;"	m	struct:opts	typeref:typename:char *	file:
reponame	extern/libgit2/tests/worktree/worktree_helpers.h	/^	const char *reponame;$/;"	m	struct:__anon9abb87050108	typeref:typename:const char *
report_delta_progress	extern/libgit2/src/pack-objects.c	/^static int report_delta_progress($/;"	f	typeref:typename:int	file:
report_errors_only	extern/libgit2/tests/clar.c	/^	int report_errors_only;$/;"	m	struct:__anonab24499b0108	typeref:typename:int	file:
report_hook	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static int __cdecl report_hook(int nRptType, char *szMsg, int *retVal)$/;"	f	typeref:typename:int __cdecl	file:
report_progress	extern/libgit2/src/checkout.c	/^static void report_progress($/;"	f	typeref:typename:void	file:
report_status	extern/libgit2/src/push.h	/^	bool report_status;$/;"	m	struct:git_push	typeref:typename:bool
report_status	extern/libgit2/src/transports/smart.h	/^		report_status:1,$/;"	m	struct:transport_smart_caps	typeref:typename:int:1
report_suite_names	extern/libgit2/tests/clar.c	/^	int report_suite_names;$/;"	m	struct:__anonab24499b0108	typeref:typename:int	file:
reports	extern/libgit2/tests/clar.c	/^	struct clar_report *reports;$/;"	m	struct:__anonab24499b0108	typeref:struct:clar_report *	file:
repository	extern/libgit2/include/git2/remote.h	/^	git_repository *repository;$/;"	m	struct:git_remote_create_options	typeref:typename:git_repository *
repository	extern/libgit2/src/blame.h	/^	git_repository *repository;$/;"	m	struct:git_blame	typeref:typename:git_repository *
repository_alloc	extern/libgit2/src/repository.c	/^static git_repository *repository_alloc(void)$/;"	f	typeref:typename:git_repository *	file:
repository_cb	extern/libgit2/include/git2/clone.h	/^	git_repository_create_cb repository_cb;$/;"	m	struct:git_clone_options	typeref:typename:git_repository_create_cb
repository_cb_payload	extern/libgit2/include/git2/clone.h	/^	void *repository_cb_payload;$/;"	m	struct:git_clone_options	typeref:typename:void *
req_char	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 req_char;           \/* This character must be seen *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
req_char	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 req_char;           \/* This character must be seen *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
req_char_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 req_char_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
req_varyopt	extern/libgit2/deps/pcre/pcre_internal.h	/^  int  req_varyopt;                 \/* "After variable item" flag for reqbyte *\/$/;"	m	struct:compile_data	typeref:typename:int
request	extern/libgit2/src/transports/winhttp.c	/^	HINTERNET request;$/;"	m	struct:__anon981dd28b0208	typeref:typename:HINTERNET	file:
request_count	extern/libgit2/src/transports/http.c	/^	unsigned request_count;$/;"	m	struct:__anon0458035d0308	typeref:typename:unsigned	file:
request_creds	extern/libgit2/src/transports/ssh.c	/^static int request_creds(git_cred **out, ssh_subtransport *t, const char *user, int auth_methods/;"	f	typeref:typename:int	file:
request_uri	extern/libgit2/src/transports/winhttp.c	/^	wchar_t *request_uri;$/;"	m	struct:__anon981dd28b0208	typeref:typename:wchar_t *	file:
requires_repo	extern/libgit2/examples/lg2.c	/^	char requires_repo;$/;"	m	struct:__anon8df46cca0108	typeref:typename:char	file:
res_oid	extern/libgit2/src/odb_loose.c	/^	unsigned char res_oid[GIT_OID_HEXSZ];	\/* hex formatted oid of$/;"	m	struct:__anon81c02f840408	typeref:typename:unsigned char[]	file:
reserve	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool reserve(size_t extra = 16)$/;"	f	class:compact_hash_table	typeref:typename:bool	file:
reserve	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        bool reserve() {$/;"	f	struct:xml_allocator	typeref:typename:bool	file:
reserved	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_ulong reserved; \/* not used *\/$/;"	m	struct:mz_stream_s	typeref:typename:mz_ulong
reserved	extern/libgit2/deps/ntlmclient/ntlm.h	/^	uint32_t reserved;$/;"	m	struct:__anon8624cbbb0308	typeref:typename:uint32_t
reserved	extern/libgit2/deps/zlib/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s	typeref:typename:uLong
reserved_names_add8dot3	extern/libgit2/src/repository.c	/^static int reserved_names_add8dot3(git_repository *repo, const char *path)$/;"	f	typeref:typename:int	file:
reset	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_document::reset() {$/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN void
reset	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_document::reset(const xml_document& proto) {$/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN void
reset	extern/libgit2/src/iterator.h	/^	int (*reset)(git_iterator *);$/;"	m	struct:__anonb487a9bd0508	typeref:typename:int (*)(git_iterator *)
reset	extern/libgit2/src/reset.c	/^static int reset($/;"	f	typeref:typename:int	file:
reset_auth_connection	extern/libgit2/src/transports/http.c	/^static void reset_auth_connection(http_server *server)$/;"	f	typeref:typename:void	file:
reset_fast_fail	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void reset_fast_fail(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
reset_index_and_workdir	extern/libgit2/src/stash.c	/^static int reset_index_and_workdir($/;"	f	typeref:typename:int	file:
reset_index_to_treeish	extern/libgit2/tests/checkout/checkout_helpers.c	/^void reset_index_to_treeish(git_object *treeish)$/;"	f	typeref:typename:void
reset_match	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *reset_match;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
reset_ovector	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void reset_ovector(compiler_common *common, int length)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
resize	extern/libgit2/src/tsort.c	/^static int resize(struct tsort_store *store, size_t new_size)$/;"	f	typeref:typename:int	file:
resize_trie	extern/libgit2/src/oid.c	/^static int resize_trie(git_oid_shorten *self, size_t new_size)$/;"	f	typeref:typename:int	file:
resize_vector	extern/libgit2/src/vector.c	/^GIT_INLINE(int) resize_vector(git_vector *v, size_t new_size)$/;"	f	typeref:typename:int
resolve_commit_oid_to_tree	extern/libgit2/tests/diff/diff_helpers.c	/^git_tree *resolve_commit_oid_to_tree($/;"	f	typeref:typename:git_tree *
resolve_deltas	extern/libgit2/src/indexer.c	/^static int resolve_deltas(git_indexer *idx, git_indexer_progress *stats)$/;"	f	typeref:typename:int	file:
resolve_heads	extern/libgit2/examples/merge.c	/^static int resolve_heads(git_repository *repo, merge_options *opts)$/;"	f	typeref:typename:int	file:
resolve_refish	extern/libgit2/examples/common.c	/^int resolve_refish(git_annotated_commit **commit, git_repository *repo, const char *refish)$/;"	f	typeref:typename:int
resolve_symlink	extern/libgit2/src/filebuf.c	/^static int resolve_symlink(git_buf *out, const char *path)$/;"	f	typeref:typename:int	file:
resolve_url	extern/libgit2/include/git2/remote.h	/^	git_url_resolve_cb resolve_url;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_url_resolve_cb
resolve_url	extern/libgit2/src/remote.c	/^static int resolve_url(git_buf *resolved_url, const char *url, int direction, const git_remote_c/;"	f	typeref:typename:int	file:
resolved	extern/libgit2/src/merge.h	/^	git_vector resolved;$/;"	m	struct:__anon41711a830408	typeref:typename:git_vector
resolved	extern/libgit2/tests/mailmap/mailmap_testdata.h	/^static const mailmap_entry resolved[] = {$/;"	v	typeref:typename:const mailmap_entry[]
resolved_bare	extern/libgit2/tests/mailmap/parsing.c	/^static const mailmap_entry resolved_bare[] = {$/;"	v	typeref:typename:const mailmap_entry[]	file:
resolved_parent_path	extern/libgit2/src/repository.c	/^static const char *resolved_parent_path(const git_repository *repo, git_repository_item_t item, /;"	f	typeref:typename:const char *	file:
resolved_untracked	extern/libgit2/tests/mailmap/parsing.c	/^static const mailmap_entry resolved_untracked[] = {$/;"	v	typeref:typename:const mailmap_entry[]	file:
resolved_with_blob_override	extern/libgit2/tests/mailmap/parsing.c	/^static const mailmap_entry resolved_with_blob_override[] = {$/;"	v	typeref:typename:const mailmap_entry[]	file:
resolved_with_file_override	extern/libgit2/tests/mailmap/parsing.c	/^static const mailmap_entry resolved_with_file_override[] = {$/;"	v	typeref:typename:const mailmap_entry[]	file:
respect_filemode	extern/libgit2/src/checkout.c	/^	int respect_filemode;$/;"	m	struct:__anonbac5d6240208	typeref:typename:int	file:
response	extern/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_buf response;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_buf
result	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_allocator result;$/;"	m	struct:xpath_stack_data	typeref:typename:xpath_allocator	file:
result	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_allocator* result;$/;"	m	struct:xpath_stack	typeref:typename:xpath_allocator *	file:
result	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const xpath_parse_result& xpath_exception::result() const$/;"	f	class:pugi::xpath_exception	typeref:typename:PUGI__FN const xpath_parse_result &
result	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const xpath_parse_result& xpath_query::result() const$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN const xpath_parse_result &
result	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            AssertionResult const& result;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:AssertionResult const &
result	extern/libgit2/src/describe.c	/^	git_describe_result *result;$/;"	m	struct:get_name_data	typeref:typename:git_describe_result *	file:
result	extern/libgit2/src/diff.c	/^	git_oid result;$/;"	m	struct:patch_id_args	typeref:typename:git_oid	file:
result	extern/libgit2/src/win32/thread.h	/^	void *result;$/;"	m	struct:__anon7162bc2d0108	typeref:typename:void *
resultDisposition	extern/OpenXLSX/tests/catch/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo	typeref:typename:ResultDisposition::Flags
result_bytes	extern/libgit2/tests/revwalk/basic.c	/^static const int result_bytes = 24;$/;"	v	typeref:typename:const int	file:
result_contents	extern/libgit2/tests/merge/workdir/dirty.c	/^static char *result_contents[4][6] = {$/;"	v	typeref:typename:char * [4][6]	file:
retrieve_base_commit_and_message	extern/libgit2/src/stash.c	/^static int retrieve_base_commit_and_message($/;"	f	typeref:typename:int	file:
retrieve_branch_reference	extern/libgit2/src/branch.c	/^static int retrieve_branch_reference($/;"	f	typeref:typename:int	file:
retrieve_head	extern/libgit2/src/stash.c	/^static int retrieve_head(git_reference **out, git_repository *repo)$/;"	f	typeref:typename:int	file:
retrieve_known_commit	extern/libgit2/tests/refs/branches/create.c	/^static void retrieve_known_commit(git_commit **commit, git_repository *repo)$/;"	f	typeref:typename:void	file:
retrieve_note_commit	extern/libgit2/src/notes.c	/^static int retrieve_note_commit($/;"	f	typeref:typename:int	file:
retrieve_object	extern/libgit2/src/pack-objects.c	/^static int retrieve_object(struct walk_object **out, git_packbuilder *pb, const git_oid *id)$/;"	f	typeref:typename:int	file:
retrieve_oid_from_reflog	extern/libgit2/src/revparse.c	/^static int retrieve_oid_from_reflog(git_oid *oid, git_reference *ref, size_t identifier)$/;"	f	typeref:typename:int	file:
retrieve_peeled_tag_or_object_oid	extern/libgit2/src/describe.c	/^static int retrieve_peeled_tag_or_object_oid($/;"	f	typeref:typename:int	file:
retrieve_previously_checked_out_branch_or_revision	extern/libgit2/src/revparse.c	/^static int retrieve_previously_checked_out_branch_or_revision(git_object **out, git_reference **/;"	f	typeref:typename:int	file:
retrieve_reflog_path	extern/libgit2/src/refdb_fs.c	/^GIT_INLINE(int) retrieve_reflog_path(git_buf *path, git_repository *repo, const char *name)$/;"	f	typeref:typename:int
retrieve_remote_tracking_reference	extern/libgit2/src/revparse.c	/^static int retrieve_remote_tracking_reference(git_reference **base_ref, const char *identifier, /;"	f	typeref:typename:int	file:
retrieve_revobject_from_reflog	extern/libgit2/src/revparse.c	/^static int retrieve_revobject_from_reflog(git_object **out, git_reference **base_ref, git_reposi/;"	f	typeref:typename:int	file:
retrieve_stash_commit	extern/libgit2/src/stash.c	/^static int retrieve_stash_commit($/;"	f	typeref:typename:int	file:
retrieve_stash_trees	extern/libgit2/src/stash.c	/^static int retrieve_stash_trees($/;"	f	typeref:typename:int	file:
retrieve_tag_from_oid	extern/libgit2/tests/object/tag/peel.c	/^static void retrieve_tag_from_oid(git_tag **tag_out, git_repository *repo, const char *sha)$/;"	f	typeref:typename:void	file:
retrieve_tag_reference	extern/libgit2/src/tag.c	/^static int retrieve_tag_reference($/;"	f	typeref:typename:int	file:
retrieve_tag_reference_oid	extern/libgit2/src/tag.c	/^static int retrieve_tag_reference_oid($/;"	f	typeref:typename:int	file:
retrieve_target_from_oid	extern/libgit2/tests/refs/branches/create.c	/^static void retrieve_target_from_oid(git_commit **out, git_repository *repo, const char *sha)$/;"	f	typeref:typename:void	file:
retrieve_top_stash_id	extern/libgit2/tests/stash/drop.c	/^void retrieve_top_stash_id(git_oid *out)$/;"	f	typeref:typename:void
retrieve_upstream_configuration	extern/libgit2/src/branch.c	/^static int retrieve_upstream_configuration($/;"	f	typeref:typename:int	file:
rettype	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			xpath_value_type rettype;$/;"	m	struct:xpath_parser::binary_op_t	typeref:typename:xpath_value_type	file:
rettype	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_value_type rettype() const$/;"	f	class:xpath_ast_node	typeref:typename:xpath_value_type	file:
return_normally	extern/libgit2/tests/threads/basic.c	/^static void *return_normally(void *param)$/;"	f	typeref:typename:void *	file:
return_to_orig_head	extern/libgit2/src/rebase.c	/^static int return_to_orig_head(git_rebase *rebase)$/;"	f	typeref:typename:int	file:
return_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_value_type xpath_query::return_type() const$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN xpath_value_type
return_with_partial_match	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void return_with_partial_match(compiler_common *common, struct sljit_label */;"	f	typeref:typename:SLJIT_INLINE void	file:
reuc	extern/libgit2/src/index.h	/^	git_vector reuc;$/;"	m	struct:git_index	typeref:typename:git_vector
reuc_cmp	extern/libgit2/src/index.c	/^static int reuc_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
reuc_entry_alloc	extern/libgit2/src/index.c	/^static git_index_reuc_entry *reuc_entry_alloc(const char *path)$/;"	f	typeref:typename:git_index_reuc_entry *	file:
reuc_entry_exists	extern/libgit2/tests/index/reuc.c	/^static int reuc_entry_exists(void)$/;"	f	typeref:typename:int	file:
reuc_entry_internal	extern/libgit2/src/index.c	/^struct reuc_entry_internal {$/;"	s	file:
reuc_icmp	extern/libgit2/src/index.c	/^static int reuc_icmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
reuc_isrch	extern/libgit2/src/index.c	/^static int reuc_isrch(const void *key, const void *array_member)$/;"	f	typeref:typename:int	file:
reuc_search	extern/libgit2/src/index.h	/^	git_vector_cmp reuc_search;$/;"	m	struct:git_index	typeref:typename:git_vector_cmp
reuc_srch	extern/libgit2/src/index.c	/^static int reuc_srch(const void *key, const void *array_member)$/;"	f	typeref:typename:int	file:
rev	extern/libgit2/examples/cat-file.c	/^	const char *rev;$/;"	m	struct:opts	typeref:typename:const char *	file:
reverse	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename I> void reverse(I begin, I end)$/;"	f	typeref:typename:void
reverse_elements	extern/libgit2/src/tsort.c	/^static void reverse_elements(void **dst, ssize_t start, ssize_t end)$/;"	f	typeref:typename:void	file:
reverse_filter_apply	extern/libgit2/tests/filter/custom_helpers.c	/^int reverse_filter_apply($/;"	f	typeref:typename:int
reverse_filter_free	extern/libgit2/tests/filter/custom_helpers.c	/^static void reverse_filter_free(git_filter *f)$/;"	f	typeref:typename:void	file:
reversed	extern/libgit2/tests/filter/wildcard.c	/^static unsigned char reversed[] = {$/;"	v	typeref:typename:unsigned char[]	file:
revert	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void revert(const xpath_allocator& state)$/;"	f	struct:xpath_allocator	typeref:typename:void	file:
revert_normalize_opts	extern/libgit2/src/revert.c	/^static int revert_normalize_opts($/;"	f	typeref:typename:int	file:
revert_seterr	extern/libgit2/src/revert.c	/^static int revert_seterr(git_commit *commit, const char *fmt)$/;"	f	typeref:typename:int	file:
revert_state_cleanup	extern/libgit2/src/revert.c	/^static int revert_state_cleanup(git_repository *repo)$/;"	f	typeref:typename:int	file:
revertframes	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *revertframes;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
revisions	extern/libgit2/examples/log.c	/^	int revisions;$/;"	m	struct:log_state	typeref:typename:int	file:
revparse__ext	extern/libgit2/src/revparse.c	/^int revparse__ext($/;"	f	typeref:typename:int
revparse_lookup_object	extern/libgit2/src/revparse.c	/^static int revparse_lookup_object($/;"	f	typeref:typename:int	file:
revwalk_basic_setup_walk	extern/libgit2/tests/revwalk/basic.c	/^static void revwalk_basic_setup_walk(const char *fixture)$/;"	f	typeref:typename:void	file:
revwalk_enqueue_timesort	extern/libgit2/src/revwalk.c	/^static int revwalk_enqueue_timesort(git_revwalk *walk, git_commit_list_node *commit)$/;"	f	typeref:typename:int	file:
revwalk_enqueue_unsorted	extern/libgit2/src/revwalk.c	/^static int revwalk_enqueue_unsorted(git_revwalk *walk, git_commit_list_node *commit)$/;"	f	typeref:typename:int	file:
revwalk_next_reverse	extern/libgit2/src/revwalk.c	/^static int revwalk_next_reverse(git_commit_list_node **object_out, git_revwalk *walk)$/;"	f	typeref:typename:int	file:
revwalk_next_timesort	extern/libgit2/src/revwalk.c	/^static int revwalk_next_timesort(git_commit_list_node **object_out, git_revwalk *walk)$/;"	f	typeref:typename:int	file:
revwalk_next_toposort	extern/libgit2/src/revwalk.c	/^static int revwalk_next_toposort(git_commit_list_node **object_out, git_revwalk *walk)$/;"	f	typeref:typename:int	file:
revwalk_next_unsorted	extern/libgit2/src/revwalk.c	/^static int revwalk_next_unsorted(git_commit_list_node **object_out, git_revwalk *walk)$/;"	f	typeref:typename:int	file:
revwalk_parseopts	extern/libgit2/examples/rev-list.c	/^static int revwalk_parseopts(git_repository *repo, git_revwalk *walk, int nopts, char **opts)$/;"	f	typeref:typename:int	file:
revwalking	extern/libgit2/examples/general.c	/^static void revwalking(git_repository *repo)$/;"	f	typeref:typename:void	file:
rewinddir	extern/libgit2/src/win32/dir.h	/^#	define rewinddir /;"	d
rewrite_gitmodules	extern/libgit2/tests/submodule/submodule_helpers.c	/^void rewrite_gitmodules(const char *workdir)$/;"	f	typeref:typename:void
rewrite_notes_ref	extern/libgit2/include/git2/rebase.h	/^	const char *rewrite_notes_ref;$/;"	m	struct:__anona97543260108	typeref:typename:const char *
rhash	extern/libgit2/src/xdiff/xtypes.h	/^	xrecord_t **rhash;$/;"	m	struct:s_xdfile	typeref:typename:xrecord_t **
rindex	extern/libgit2/src/xdiff/xdiffi.h	/^	long *rindex;$/;"	m	struct:s_diffdata	typeref:typename:long *
rindex	extern/libgit2/src/xdiff/xtypes.h	/^	long *rindex;$/;"	m	struct:s_xdfile	typeref:typename:long *
rm_eo	extern/libgit2/deps/pcre/pcreposix.h	/^  pcre_regoff_t rm_eo;$/;"	m	struct:__anonf0efc70d0308	typeref:typename:pcre_regoff_t
rm_so	extern/libgit2/deps/pcre/pcreposix.h	/^  pcre_regoff_t rm_so;$/;"	m	struct:__anonf0efc70d0308	typeref:typename:pcre_regoff_t
rm_submodule	extern/libgit2/tests/submodule/status.c	/^static void rm_submodule(const char *name)$/;"	f	typeref:typename:void	file:
rm_submodule_from_index	extern/libgit2/tests/submodule/status.c	/^static void rm_submodule_from_index(const char *name)$/;"	f	typeref:typename:void	file:
rng	extern/OpenXLSX/tests/c++/Test08_Cell.cpp	/^auto rng = wks.Range(XLCellReference(5, 5), XLCellReference(7, 9));$/;"	v	typeref:typename:auto
roid	extern/libgit2/src/push.h	/^	git_oid roid;$/;"	m	struct:push_spec	typeref:typename:git_oid
root	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node* root;$/;"	m	struct:xpath_query_impl	typeref:typename:xpath_ast_node *	file:
root	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node xml_node::root() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node
root	extern/libgit2/src/iterator.c	/^	char *root;$/;"	m	struct:__anonb487a9b80808	typeref:typename:char *	file:
root	extern/libgit2/src/iterator.c	/^	git_tree *root;$/;"	m	struct:__anonb487a9b80508	typeref:typename:git_tree *	file:
root_commit_message	extern/libgit2/tests/commit/write.c	/^static const char *root_commit_message = "This is a root commit\\n\\$/;"	v	typeref:typename:const char *	file:
root_len	extern/libgit2/src/iterator.c	/^	size_t root_len;$/;"	m	struct:__anonb487a9b80808	typeref:typename:size_t	file:
root_reflog_message	extern/libgit2/tests/commit/write.c	/^static const char *root_reflog_message = "commit (initial): This is a root commit \\$/;"	v	typeref:typename:const char *	file:
rotate_left	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define rotate_left(/;"	d	file:
rotate_right	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define rotate_right(/;"	d	file:
round_nearest	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN double round_nearest(double value)$/;"	f	typeref:typename:PUGI__FN double
round_nearest_nzero	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN double round_nearest_nzero(double value)$/;"	f	typeref:typename:PUGI__FN double
roundtrip_with_read_index	extern/libgit2/tests/index/read_index.c	/^static bool roundtrip_with_read_index(const char *tree_idstr)$/;"	f	typeref:typename:bool	file:
rowIndex	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^            unsigned long rowIndex;$/;"	m	struct:OpenXLSX::Impl::XLWorksheet::XLRowData	typeref:typename:unsigned long
rowItem	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorksheet_Impl.h	/^            std::unique_ptr<XLRow> rowItem = nullptr;$/;"	m	struct:OpenXLSX::Impl::XLWorksheet::XLRowData	typeref:typename:std::unique_ptr<XLRow>
row_cmp	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^static int row_cmp(const void *v1, const void *v2)$/;"	f	typeref:typename:int	file:
rpc	extern/libgit2/include/git2/sys/transport.h	/^	unsigned rpc;$/;"	m	struct:git_smart_subtransport_definition	typeref:typename:unsigned
rpc	extern/libgit2/src/transports/smart.h	/^	unsigned rpc : 1,$/;"	m	struct:__anoncc6f59690b08	typeref:typename:unsigned:1
rules	extern/libgit2/src/attr_file.h	/^	git_vector rules;			\/* vector of <rule*> or <fnmatch*> *\/$/;"	m	struct:__anon32d629ad0608	typeref:typename:git_vector
run_command	extern/libgit2/examples/lg2.c	/^static int run_command(git_command_fn fn, git_repository *repo, struct args_info args)$/;"	f	typeref:typename:int	file:
run_in_parallel	extern/libgit2/tests/threads/thread_helpers.c	/^void run_in_parallel($/;"	f	typeref:typename:void
run_index_diffs	extern/libgit2/tests/threads/diff.c	/^static void *run_index_diffs(void *arg)$/;"	f	typeref:typename:void *	file:
run_index_diffs_with_modifier	extern/libgit2/tests/threads/diff.c	/^static void *run_index_diffs_with_modifier(void *arg)$/;"	f	typeref:typename:void *	file:
run_one_file	extern/libgit2/fuzzers/standalone_driver.c	/^static int run_one_file(const char *filename)$/;"	f	typeref:typename:int	file:
run_test	extern/libgit2/azure-pipelines/test.sh	/^run_test() {$/;"	f
run_test_cases	extern/libgit2/tests/attr/lookup.c	/^static void run_test_cases(git_attr_file *file, struct attr_expected *cases, int force_dir)$/;"	f	typeref:typename:void	file:
run_workdir_iterator	extern/libgit2/tests/threads/iterator.c	/^static void *run_workdir_iterator(void *arg)$/;"	f	typeref:typename:void *	file:
s	extern/libgit2/src/streams/socket.h	/^	GIT_SOCKET s;$/;"	m	struct:__anonde82408a0108	typeref:typename:GIT_SOCKET
s	extern/libgit2/src/transports/http.c	/^	http_stream *s;$/;"	m	struct:__anon0458035d0408	typeref:typename:http_stream *	file:
s1	extern/NamedType/main.cpp	/^    AddableType s1(12);$/;"	v	typeref:typename:AddableType
s1	extern/NamedType/main.cpp	/^    MultiplicableType s1(12);$/;"	v	typeref:typename:MultiplicableType
s1	extern/NamedType/main.cpp	/^    SubtractableType s1(12);$/;"	v	typeref:typename:SubtractableType
s2	extern/NamedType/main.cpp	/^    AddableType s2(10);$/;"	v	typeref:typename:AddableType
s2	extern/NamedType/main.cpp	/^    MultiplicableType s2(10);$/;"	v	typeref:typename:MultiplicableType
s2	extern/NamedType/main.cpp	/^    SubtractableType s2(10);$/;"	v	typeref:typename:SubtractableType
s40	extern/libgit2/tests/object/message.c	/^#define s40 /;"	d	file:
s_LatestIndex	extern/OpenXLSX/library/zippy/Zippy/ZipEntry.h	/^            static uint32_t s_LatestIndex; \/**< *\/$/;"	m	class:Zippy::Impl::ZipEntry	typeref:typename:uint32_t
s_bdiffparam	extern/libgit2/src/xdiff/xdiff.h	/^typedef struct s_bdiffparam {$/;"	s
s_body_identity	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_body_identity$/;"	e	enum:state	file:
s_body_identity_eof	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_body_identity_eof$/;"	e	enum:state	file:
s_chanode	extern/libgit2/src/xdiff/xtypes.h	/^typedef struct s_chanode {$/;"	s
s_chastore	extern/libgit2/src/xdiff/xtypes.h	/^typedef struct s_chastore {$/;"	s
s_chunk_data	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_chunk_data$/;"	e	enum:state	file:
s_chunk_data_almost_done	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_chunk_data_almost_done$/;"	e	enum:state	file:
s_chunk_data_done	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_chunk_data_done$/;"	e	enum:state	file:
s_chunk_parameters	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_chunk_parameters$/;"	e	enum:state	file:
s_chunk_size	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_chunk_size$/;"	e	enum:state	file:
s_chunk_size_almost_done	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_chunk_size_almost_done$/;"	e	enum:state	file:
s_chunk_size_start	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_chunk_size_start$/;"	e	enum:state	file:
s_dead	extern/libgit2/deps/http-parser/http_parser.c	/^  { s_dead = 1 \/* important that this is > 0 *\/$/;"	e	enum:state	file:
s_diffdata	extern/libgit2/src/xdiff/xdiffi.h	/^typedef struct s_diffdata {$/;"	s
s_empty	extern/OpenXLSX/tests/catch/catch.hpp	/^        static constexpr char const* const s_empty = "";$/;"	m	class:Catch::StringRef	typeref:typename:char const * const
s_header_almost_done	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_header_almost_done$/;"	e	enum:state	file:
s_header_field	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_header_field$/;"	e	enum:state	file:
s_header_field_start	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_header_field_start$/;"	e	enum:state	file:
s_header_value	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_header_value$/;"	e	enum:state	file:
s_header_value_lws	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_header_value_lws$/;"	e	enum:state	file:
s_header_value_start	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_header_value_start$/;"	e	enum:state	file:
s_headers_almost_done	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_headers_almost_done$/;"	e	enum:state	file:
s_headers_done	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_headers_done$/;"	e	enum:state	file:
s_http_host	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_http_host$/;"	e	enum:http_host_state	file:
s_http_host_dead	extern/libgit2/deps/http-parser/http_parser.c	/^    s_http_host_dead = 1$/;"	e	enum:http_host_state	file:
s_http_host_port	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_http_host_port$/;"	e	enum:http_host_state	file:
s_http_host_port_start	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_http_host_port_start$/;"	e	enum:http_host_state	file:
s_http_host_start	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_http_host_start$/;"	e	enum:http_host_state	file:
s_http_host_v6	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_http_host_v6$/;"	e	enum:http_host_state	file:
s_http_host_v6_end	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_http_host_v6_end$/;"	e	enum:http_host_state	file:
s_http_host_v6_start	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_http_host_v6_start$/;"	e	enum:http_host_state	file:
s_http_userinfo	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_http_userinfo$/;"	e	enum:http_host_state	file:
s_http_userinfo_start	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_http_userinfo_start$/;"	e	enum:http_host_state	file:
s_lno	extern/libgit2/src/blame.h	/^	size_t s_lno;$/;"	m	struct:git_blame__entry	typeref:typename:size_t
s_message_done	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_message_done$/;"	e	enum:state	file:
s_methods	extern/libgit2/tests/clar_libgit2_trace.c	/^static struct method s_methods[] = {$/;"	v	typeref:struct:method[]	file:
s_mmbuffer	extern/libgit2/src/xdiff/xdiff.h	/^typedef struct s_mmbuffer {$/;"	s
s_mmfile	extern/libgit2/src/xdiff/xdiff.h	/^typedef struct s_mmfile {$/;"	s
s_req_first_http_major	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_first_http_major$/;"	e	enum:state	file:
s_req_first_http_minor	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_first_http_minor$/;"	e	enum:state	file:
s_req_fragment	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_fragment$/;"	e	enum:state	file:
s_req_fragment_start	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_fragment_start$/;"	e	enum:state	file:
s_req_http_H	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_http_H$/;"	e	enum:state	file:
s_req_http_HT	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_http_HT$/;"	e	enum:state	file:
s_req_http_HTT	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_http_HTT$/;"	e	enum:state	file:
s_req_http_HTTP	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_http_HTTP$/;"	e	enum:state	file:
s_req_http_major	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_http_major$/;"	e	enum:state	file:
s_req_http_minor	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_http_minor$/;"	e	enum:state	file:
s_req_http_start	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_http_start$/;"	e	enum:state	file:
s_req_line_almost_done	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_line_almost_done$/;"	e	enum:state	file:
s_req_method	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_method$/;"	e	enum:state	file:
s_req_path	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_path$/;"	e	enum:state	file:
s_req_query_string	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_query_string$/;"	e	enum:state	file:
s_req_query_string_start	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_query_string_start$/;"	e	enum:state	file:
s_req_schema	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_schema$/;"	e	enum:state	file:
s_req_schema_slash	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_schema_slash$/;"	e	enum:state	file:
s_req_schema_slash_slash	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_schema_slash_slash$/;"	e	enum:state	file:
s_req_server	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_server$/;"	e	enum:state	file:
s_req_server_start	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_server_start$/;"	e	enum:state	file:
s_req_server_with_at	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_server_with_at$/;"	e	enum:state	file:
s_req_spaces_before_url	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_req_spaces_before_url$/;"	e	enum:state	file:
s_res_H	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_H$/;"	e	enum:state	file:
s_res_HT	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_HT$/;"	e	enum:state	file:
s_res_HTT	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_HTT$/;"	e	enum:state	file:
s_res_HTTP	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_HTTP$/;"	e	enum:state	file:
s_res_first_http_major	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_first_http_major$/;"	e	enum:state	file:
s_res_first_http_minor	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_first_http_minor$/;"	e	enum:state	file:
s_res_first_status_code	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_first_status_code$/;"	e	enum:state	file:
s_res_http_major	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_http_major$/;"	e	enum:state	file:
s_res_http_minor	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_http_minor$/;"	e	enum:state	file:
s_res_line_almost_done	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_line_almost_done$/;"	e	enum:state	file:
s_res_or_resp_H	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_or_resp_H$/;"	e	enum:state	file:
s_res_status	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_status$/;"	e	enum:state	file:
s_res_status_code	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_res_status_code$/;"	e	enum:state	file:
s_start_req	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_start_req$/;"	e	enum:state	file:
s_start_req_or_res	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_start_req_or_res$/;"	e	enum:state	file:
s_start_res	extern/libgit2/deps/http-parser/http_parser.c	/^  , s_start_res$/;"	e	enum:state	file:
s_tdefl_large_dist_extra	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static const mz_uint8 s_tdefl_large_dist_extra[128] = {0, 0, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 1/;"	v	typeref:typename:const mz_uint8[128]
s_tdefl_large_dist_sym	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static const mz_uint8 s_tdefl_large_dist_sym[128] = {0, 0, 18, 19, 20, 20, 21, 21, 22, 22, 22, 2/;"	v	typeref:typename:const mz_uint8[128]
s_tdefl_len_extra	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static const mz_uint8 s_tdefl_len_extra[256] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, /;"	v	typeref:typename:const mz_uint8[256]
s_tdefl_len_sym	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static const mz_uint16 s_tdefl_len_sym[256] = {257, 258, 259, 260, 261, 262, 263, 264, 265, 265,/;"	v	typeref:typename:const mz_uint16[256]
s_tdefl_num_probes	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static const mz_uint s_tdefl_num_probes[11] = {0, 1, 6, 32, 16, 32, 128, 256, 512, 768, 1500};$/;"	v	typeref:typename:const mz_uint[11]
s_tdefl_packed_code_size_syms_swizzle	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_uint8 s_tdefl_packed_code_size_syms_swizzle[] = {16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11,/;"	v	typeref:typename:mz_uint8[]
s_tdefl_small_dist_extra	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static const mz_uint8 s_tdefl_small_dist_extra[512] = {0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2,/;"	v	typeref:typename:const mz_uint8[512]
s_tdefl_small_dist_sym	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static const mz_uint8 s_tdefl_small_dist_sym[512] = {0, 1, 2, 3, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7/;"	v	typeref:typename:const mz_uint8[512]
s_timer_run	extern/libgit2/tests/clar_libgit2_trace.c	/^static cl_perf_timer s_timer_run = CL_PERF_TIMER_INIT;$/;"	v	typeref:typename:cl_perf_timer	file:
s_timer_test	extern/libgit2/tests/clar_libgit2_trace.c	/^static cl_perf_timer s_timer_test = CL_PERF_TIMER_INIT;$/;"	v	typeref:typename:cl_perf_timer	file:
s_trace_level	extern/libgit2/tests/clar_libgit2_trace.c	/^static int s_trace_level = GIT_TRACE_NONE;$/;"	v	typeref:typename:int	file:
s_trace_loaded	extern/libgit2/tests/clar_libgit2_trace.c	/^static int s_trace_loaded = 0;$/;"	v	typeref:typename:int	file:
s_trace_method	extern/libgit2/tests/clar_libgit2_trace.c	/^static struct method *s_trace_method = NULL;$/;"	v	typeref:struct:method *	file:
s_xdalgoenv	extern/libgit2/src/xdiff/xdiffi.h	/^typedef struct s_xdalgoenv {$/;"	s
s_xdchange	extern/libgit2/src/xdiff/xdiffi.h	/^typedef struct s_xdchange {$/;"	s
s_xdemitcb	extern/libgit2/src/xdiff/xdiff.h	/^typedef struct s_xdemitcb {$/;"	s
s_xdemitconf	extern/libgit2/src/xdiff/xdiff.h	/^typedef struct s_xdemitconf {$/;"	s
s_xdfenv	extern/libgit2/src/xdiff/xtypes.h	/^typedef struct s_xdfenv {$/;"	s
s_xdfile	extern/libgit2/src/xdiff/xtypes.h	/^typedef struct s_xdfile {$/;"	s
s_xdlclass	extern/libgit2/src/xdiff/xprepare.c	/^typedef struct s_xdlclass {$/;"	s	file:
s_xdlclassifier	extern/libgit2/src/xdiff/xprepare.c	/^typedef struct s_xdlclassifier {$/;"	s	file:
s_xdmerge	extern/libgit2/src/xdiff/xmerge.c	/^typedef struct s_xdmerge {$/;"	s	file:
s_xdpsplit	extern/libgit2/src/xdiff/xdiffi.c	/^typedef struct s_xdpsplit {$/;"	s	file:
s_xmparam	extern/libgit2/src/xdiff/xdiff.h	/^typedef struct s_xmparam {$/;"	s
s_xpparam	extern/libgit2/src/xdiff/xdiff.h	/^typedef struct s_xpparam {$/;"	s
s_xrecord	extern/libgit2/src/xdiff/xtypes.h	/^typedef struct s_xrecord {$/;"	s
safe_crlf	extern/libgit2/src/crlf.c	/^	int safe_crlf;$/;"	m	struct:crlf_attrs	typeref:typename:int	file:
safe_hash	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	int safe_hash;$/;"	m	struct:__anon3f63bb720108	typeref:typename:int
safecrlf	extern/libgit2/tests/index/crlf.c	/^	const char *safecrlf;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
same_suspect	extern/libgit2/src/blame_git.c	/^static bool same_suspect(git_blame__origin *a, git_blame__origin *b)$/;"	f	typeref:typename:bool	file:
samp	extern/OpenXLSX/doxy/customdoxygen.css	/^tt, code, kbd, samp, a.el,$/;"	s
sandbox	extern/libgit2/tests/merge/analysis.c	/^static git_repository *sandbox;$/;"	v	typeref:typename:git_repository *	file:
sandbox_path	extern/libgit2/tests/config/conditionals.c	/^static char *sandbox_path(git_buf *buf, const char *suffix)$/;"	f	typeref:typename:char *	file:
sane	extern/libgit2/deps/zlib/inflate.h	/^    int sane;                   \/* if false, allow invalid distance too far *\/$/;"	m	struct:inflate_state	typeref:typename:int
sane_ctype	extern/libgit2/src/wildmatch.c	/^static const unsigned char sane_ctype[256] = {$/;"	v	typeref:typename:const unsigned char[256]	file:
sane_istest	extern/libgit2/src/wildmatch.c	/^#define sane_istest(/;"	d	file:
save	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_document::save(std::basic_ostream<char, std::char_traits<char>>& stream, c/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN void
save	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_document::save(std::basic_ostream<wchar_t, std::char_traits<wchar_t>>& str/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN void
save	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_document::save(xml_writer& writer, const char_t* indent, unsigned int flag/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN void
save_cache	extern/libgit2/tests/generate.py	/^    def save_cache(self):$/;"	m	class:TestSuite
save_capture_last	extern/libgit2/deps/pcre/pcre_exec.c	/^#define save_capture_last /;"	d	file:
save_entry	extern/libgit2/src/indexer.c	/^static int save_entry(git_indexer *idx, struct entry *entry, struct git_pack_entry *pentry, git_/;"	f	typeref:typename:int	file:
save_file	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_document::save_file(const char* path_, const char_t* indent, unsigned int /;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN bool
save_file	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_document::save_file(const wchar_t* path_, const char_t* indent, unsigned i/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN bool
save_file_impl	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool save_file_impl(const xml_document& doc, FILE* file, const char_t* indent, unsi/;"	f	typeref:typename:PUGI__FN bool
save_mark	extern/libgit2/deps/pcre/pcre_exec.c	/^#define save_mark /;"	d	file:
save_offset1	extern/libgit2/deps/pcre/pcre_exec.c	/^#define save_offset1 /;"	d	file:
save_offset2	extern/libgit2/deps/pcre/pcre_exec.c	/^#define save_offset2 /;"	d	file:
save_offset3	extern/libgit2/deps/pcre/pcre_exec.c	/^#define save_offset3 /;"	d	file:
saved_capture_last	extern/libgit2/deps/pcre/pcre_internal.h	/^  int saved_capture_last;         \/* Last capture number *\/$/;"	m	struct:recursion_info	typeref:typename:int
saved_eptr	extern/libgit2/deps/pcre/pcre_exec.c	/^#define saved_eptr /;"	d	file:
saved_max	extern/libgit2/deps/pcre/pcre_internal.h	/^  int saved_max;                  \/* Number of saved offsets *\/$/;"	m	struct:recursion_info	typeref:typename:int
scanA	extern/libgit2/src/xdiff/xhistogram.c	/^static int scanA(struct histindex *index, unsigned int line1, unsigned int count1)$/;"	f	typeref:typename:int	file:
scan_prefix	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static int scan_prefix(compiler_common *common, pcre_uchar *cc, pcre_uchar *chars, int max_chars/;"	f	typeref:typename:int	file:
scan_tree	extern/libgit2/deps/zlib/trees.c	/^local void scan_tree (s, tree, max_code)$/;"	f
scanned	extern/libgit2/src/blame.h	/^	bool scanned;$/;"	m	struct:git_blame__entry	typeref:typename:bool
scheme	extern/libgit2/src/net.h	/^	char *scheme;$/;"	m	struct:git_net_url	typeref:typename:char *
scheme_for_challenge	extern/libgit2/src/transports/http.c	/^static git_http_auth_scheme *scheme_for_challenge($/;"	f	typeref:typename:git_http_auth_scheme *	file:
score	extern/libgit2/src/blame.h	/^	unsigned score;$/;"	m	struct:git_blame__entry	typeref:typename:unsigned
score_add_split	extern/libgit2/src/xdiff/xdiffi.c	/^static void score_add_split(const struct split_measurement *m, struct split_score *s)$/;"	f	typeref:typename:void	file:
score_cmp	extern/libgit2/src/xdiff/xdiffi.c	/^static int score_cmp(struct split_score *s1, struct split_score *s2)$/;"	f	typeref:typename:int	file:
scratch	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        } scratch;$/;"	m	class:xml_buffered_writer	typeref:union:xml_buffered_writer::__anonfceed08a040a	file:
script	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint8 script;     \/* ucp_Arabic, etc. *\/$/;"	m	struct:__anonb814e4160608	typeref:typename:pcre_uint8
scurr	extern/libgit2/src/xdiff/xtypes.h	/^	long scurr;$/;"	m	struct:s_chastore	typeref:typename:long
search_object	extern/libgit2/tests/odb/backend/backend_helpers.c	/^static int search_object(const fake_object **out, fake_backend *fake, const git_oid *oid, size_t/;"	f	typeref:typename:int	file:
search_requested_char	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE struct sljit_jump *search_requested_char(compiler_common *common, pcre_uchar/;"	f	typeref:typename:SLJIT_INLINE struct sljit_jump *	file:
second	extern/libgit2/tests/refs/branches/create.c	/^		const char *second;$/;"	m	struct:test_refs_branches_create__name_vs_namespace::item	typeref:typename:const char *	file:
second	extern/libgit2/tests/refs/branches/create.c	/^		const char *second;$/;"	m	struct:test_refs_branches_create__name_vs_namespace_fail::item	typeref:typename:const char *	file:
second section	extern/libgit2/tests/resources/userdiff/after/file.html	/^  <h1 id="second section">$/;"	I
second section	extern/libgit2/tests/resources/userdiff/before/file.html	/^  <h1 id="second section">$/;"	I
second section	extern/libgit2/tests/resources/userdiff/expected/driver/diff.html	/^@@ -23,3 +24,4 @@ <h1 id="second section">$/;"	I
second section	extern/libgit2/tests/resources/userdiff/files/file.html	/^  <h1 id="second section">$/;"	I
second_tree	extern/libgit2/tests/object/tree/write.c	/^static const char *second_tree = "f60079018b664e4e79329a7ef9559c8d9e0378d1";$/;"	v	typeref:typename:const char *	file:
seconds	extern/libgit2/include/git2/index.h	/^	int32_t seconds;$/;"	m	struct:__anon3eb19ecc0108	typeref:typename:int32_t
seconds	extern/libgit2/src/index.c	/^	uint32_t seconds;$/;"	m	struct:entry_time	typeref:typename:uint32_t	file:
section	extern/libgit2/src/config_file.c	/^	const char *section;$/;"	m	struct:write_data	typeref:typename:const char *	file:
sectionStarting	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        void sectionStarting( SectionInfo const& sectionInfo ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
security	extern/libgit2/src/win32/posix_w32.c	/^	SECURITY_ATTRIBUTES security;$/;"	m	struct:open_opts	typeref:typename:SECURITY_ATTRIBUTES	file:
seed_packbuilder	extern/libgit2/tests/pack/packbuilder.c	/^static void seed_packbuilder(void)$/;"	f	typeref:typename:void	file:
seek	extern/libgit2/deps/zlib/gzguts.h	/^    int seek;               \/* true if seek request pending *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:int
seek_back_trailer	extern/libgit2/src/indexer.c	/^static void seek_back_trailer(git_indexer *idx)$/;"	f	typeref:typename:void	file:
seek_forward	extern/libgit2/src/index.c	/^#define seek_forward(/;"	d	file:
seek_forward	extern/libgit2/src/refdb_fs.c	/^#define seek_forward(/;"	d	file:
seen	extern/libgit2/src/commit_list.h	/^	unsigned int seen:1,$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned int:1
seen	extern/libgit2/src/pack-objects.c	/^		seen:1;$/;"	m	struct:walk_object	typeref:typename:unsigned int:1	file:
seen	extern/libgit2/tests/config/memory.c	/^	int seen;$/;"	m	struct:expected_entry	typeref:typename:int	file:
seen	extern/libgit2/tests/core/strmap.c	/^		int seen;$/;"	m	struct:test_core_strmap__iteration::__anon7181b0a80108	typeref:typename:int	file:
seen	extern/libgit2/tests/notes/notes.c	/^	unsigned seen;$/;"	m	struct:note_create_payload	typeref:typename:unsigned	file:
seen_paths	extern/libgit2/tests/stash/apply.c	/^struct seen_paths {$/;"	s	file:
select_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node xml_node::select_node(const char_t* query, xpath_variable_set* variables) c/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xpath_node
select_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node xml_node::select_node(const xpath_query& query) const$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xpath_node
select_nodes	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set xml_node::select_nodes(const char_t* query, xpath_variable_set* variabl/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xpath_node_set
select_nodes	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set xml_node::select_nodes(const xpath_query& query) const$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xpath_node_set
select_single_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node xml_node::select_single_node(const char_t* query, xpath_variable_set* varia/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xpath_node
select_single_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node xml_node::select_single_node(const xpath_query& query) const$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xpath_node
send_all_trees	extern/libgit2/deps/zlib/trees.c	/^local void send_all_trees(s, lcodes, dcodes, blcodes)$/;"	f
send_bits	extern/libgit2/deps/zlib/trees.c	/^#define send_bits(/;"	d	file:
send_bits	extern/libgit2/deps/zlib/trees.c	/^local void send_bits(s, value, length)$/;"	f
send_code	extern/libgit2/deps/zlib/trees.c	/^#  define send_code(/;"	d	file:
send_command	extern/libgit2/src/transports/git.c	/^static int send_command(git_proto_stream *s)$/;"	f	typeref:typename:int	file:
send_command	extern/libgit2/src/transports/ssh.c	/^static int send_command(ssh_stream *s)$/;"	f	typeref:typename:int	file:
send_request	extern/libgit2/src/transports/winhttp.c	/^static int send_request(winhttp_stream *s, size_t len, int ignore_length)$/;"	f	typeref:typename:int	file:
send_tree	extern/libgit2/deps/zlib/trees.c	/^local void send_tree (s, tree, max_code)$/;"	f
sent_command	extern/libgit2/src/transports/git.c	/^	unsigned sent_command : 1;$/;"	m	struct:__anon936e62c10108	typeref:typename:unsigned:1	file:
sent_command	extern/libgit2/src/transports/ssh.c	/^	unsigned sent_command : 1;$/;"	m	struct:__anon944cd18b0108	typeref:typename:unsigned:1	file:
sent_request	extern/libgit2/src/transports/http.c	/^	unsigned sent_request : 1,$/;"	m	struct:__anon0458035d0108	typeref:typename:unsigned:1	file:
sent_request	extern/libgit2/src/transports/winhttp.c	/^	unsigned sent_request : 1,$/;"	m	struct:__anon981dd28b0208	typeref:typename:unsigned:1	file:
separator_	extern/OpenXLSX/benchmark/table_printer.h	/^        std::string separator_;$/;"	m	class:bprinter::TablePrinter	typeref:typename:std::string
serialize_reflog_entry	extern/libgit2/src/refdb_fs.c	/^static int serialize_reflog_entry($/;"	f	typeref:typename:int	file:
server	extern/libgit2/src/transports/http.c	/^	http_server server;$/;"	m	struct:__anon0458035d0308	typeref:typename:http_server	file:
server	extern/libgit2/src/transports/winhttp.c	/^	winhttp_server server;$/;"	m	struct:__anon981dd28b0408	typeref:typename:winhttp_server	file:
service	extern/libgit2/src/transports/http.c	/^	const char *service;$/;"	m	struct:__anon0458035d0108	typeref:typename:const char *	file:
service	extern/libgit2/src/transports/winhttp.c	/^	const char *service;$/;"	m	struct:__anon981dd28b0208	typeref:typename:const char *	file:
service_url	extern/libgit2/src/transports/http.c	/^	const char *service_url;$/;"	m	struct:__anon0458035d0108	typeref:typename:const char *	file:
service_url	extern/libgit2/src/transports/winhttp.c	/^	const char *service_url;$/;"	m	struct:__anon981dd28b0208	typeref:typename:const char *	file:
session	extern/libgit2/src/transports/ssh.c	/^	LIBSSH2_SESSION *session;$/;"	m	struct:__anon944cd18b0108	typeref:typename:LIBSSH2_SESSION *	file:
session	extern/libgit2/src/transports/winhttp.c	/^	HINTERNET session;$/;"	m	struct:__anon981dd28b0408	typeref:typename:HINTERNET	file:
session_key	extern/libgit2/src/attr_file.h	/^	int session_key;$/;"	m	struct:__anon32d629ad0608	typeref:typename:int
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_variable::set(bool value)$/;"	f	class:pugi::xpath_variable	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_variable::set(const char_t* value)$/;"	f	class:pugi::xpath_variable	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_variable::set(const xpath_node_set& value)$/;"	f	class:pugi::xpath_variable	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_variable::set(double value)$/;"	f	class:pugi::xpath_variable	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_variable_set::set(const char_t* name, bool value)$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_variable_set::set(const char_t* name, const char_t* value)$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_variable_set::set(const char_t* name, const xpath_node_set& value)$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool xpath_variable_set::set(const char_t* name, double value)$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::set(bool rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::set(const char_t* rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::set(double rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::set(float rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::set(int rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::set(long long rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::set(long rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::set(unsigned int rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::set(unsigned long long rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_text::set(unsigned long rhs) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN bool
setW	extern/libgit2/src/hash/sha1/generic.c	/^ #define setW(/;"	d	file:
set_authentication_challenge	extern/libgit2/src/transports/http.c	/^static int set_authentication_challenge(http_server *server)$/;"	f	typeref:typename:int	file:
set_authentication_types	extern/libgit2/src/transports/http.c	/^static int set_authentication_types(http_server *server)$/;"	f	typeref:typename:int	file:
set_challenge	extern/libgit2/src/transports/auth.h	/^	int (*set_challenge)(git_http_auth_context *ctx, const char *challenge);$/;"	m	struct:git_http_auth_context	typeref:typename:int (*)(git_http_auth_context * ctx,const char * challenge)
set_config	extern/libgit2/src/repository.c	/^static void set_config(git_repository *repo, git_config *config)$/;"	f	typeref:typename:void	file:
set_config_int	extern/libgit2/tests/diff/tree.c	/^static void set_config_int(git_repository *repo, const char *name, int value)$/;"	f	typeref:typename:void	file:
set_core_autocrlf_to	extern/libgit2/tests/merge/workdir/dirty.c	/^static void set_core_autocrlf_to(git_repository *repo, bool value)$/;"	f	typeref:typename:void	file:
set_core_autocrlf_to	extern/libgit2/tests/merge/workdir/simple.c	/^static void set_core_autocrlf_to(git_repository *repo, bool value)$/;"	f	typeref:typename:void	file:
set_core_autocrlf_to	extern/libgit2/tests/rebase/merge.c	/^static void set_core_autocrlf_to(git_repository *repo, bool value)$/;"	f	typeref:typename:void	file:
set_errno	extern/libgit2/src/win32/posix_w32.c	/^GIT_INLINE(void) set_errno(void)$/;"	f	typeref:typename:void
set_error	extern/libgit2/src/errors.c	/^static void set_error(int error_class, char *string)$/;"	f	typeref:typename:void	file:
set_error	extern/libgit2/tests/threads/basic.c	/^static void *set_error(void *dummy)$/;"	f	typeref:typename:void *	file:
set_error_from_buffer	extern/libgit2/src/errors.c	/^static void set_error_from_buffer(int error_class)$/;"	f	typeref:typename:void	file:
set_flush_left	extern/OpenXLSX/benchmark/table_printer.h	/^    void TablePrinter::set_flush_left() {$/;"	f	class:bprinter::TablePrinter	typeref:typename:void
set_flush_right	extern/OpenXLSX/benchmark/table_printer.h	/^    void TablePrinter::set_flush_right() {$/;"	f	class:bprinter::TablePrinter	typeref:typename:void
set_gitattributes_to	extern/libgit2/tests/merge/driver.c	/^static void set_gitattributes_to(const char *driver)$/;"	f	typeref:typename:void	file:
set_global_search_path_from_env	extern/libgit2/tests/core/env.c	/^static void set_global_search_path_from_env(void)$/;"	f	typeref:typename:void	file:
set_head	extern/libgit2/tests/config/conditionals.c	/^static void set_head(git_repository *repo, const char *name)$/;"	f	typeref:typename:void	file:
set_index	extern/libgit2/src/repository.c	/^static void set_index(git_repository *repo, git_index *index)$/;"	f	typeref:typename:void	file:
set_jumps	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void set_jumps(jump_list *list, struct sljit_label *label)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
set_memory_management_functions	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void PUGIXML_FUNCTION set_memory_management_functions(allocation_function allocate,$/;"	f	namespace:pugi	typeref:typename:PUGI__FN void PUGIXML_FUNCTION
set_method	extern/libgit2/tests/clar_libgit2_trace.c	/^static int set_method(const char *name)$/;"	f	typeref:typename:int	file:
set_name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::set_name(const char_t* rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
set_name	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::set_name(const char_t* rhs) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
set_next	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void set_next(xpath_ast_node* value)$/;"	f	class:xpath_ast_node	typeref:typename:void	file:
set_nottype_bits	extern/libgit2/deps/pcre/pcre_study.c	/^set_nottype_bits(pcre_uint8 *start_bits, int cbit_type, unsigned int table_limit,$/;"	f	typeref:typename:void	file:
set_odb	extern/libgit2/src/repository.c	/^static void set_odb(git_repository *repo, git_odb *odb)$/;"	f	typeref:typename:void	file:
set_parse_error	extern/libgit2/src/config_parse.c	/^static void set_parse_error(git_config_parser *reader, int col, const char *error_str)$/;"	f	typeref:typename:void	file:
set_private_data_ptrs	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void set_private_data_ptrs(compiler_common *common, int *private_data_start, pcre_uchar */;"	f	typeref:typename:void	file:
set_refdb	extern/libgit2/src/repository.c	/^static void set_refdb(git_repository *repo, git_refdb *refdb)$/;"	f	typeref:typename:void	file:
set_right	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void set_right(xpath_ast_node* value)$/;"	f	class:xpath_ast_node	typeref:typename:void	file:
set_separator	extern/OpenXLSX/benchmark/table_printer.h	/^    void TablePrinter::set_separator(const std::string& separator) {$/;"	f	class:bprinter::TablePrinter	typeref:typename:void
set_some_bits	extern/libgit2/tests/core/bitvec.c	/^static void set_some_bits(git_bitvec *bv, size_t length)$/;"	f	typeref:typename:void	file:
set_sorting	extern/libgit2/examples/log.c	/^static void set_sorting(struct log_state *s, unsigned int sort_mode)$/;"	f	typeref:typename:void	file:
set_start_bits	extern/libgit2/deps/pcre/pcre_study.c	/^set_start_bits(const pcre_uchar *code, pcre_uint8 *start_bits, BOOL utf,$/;"	f	typeref:typename:int	file:
set_system_search_path_from_env	extern/libgit2/tests/core/env.c	/^static void set_system_search_path_from_env(void)$/;"	f	typeref:typename:void	file:
set_table_bit	extern/libgit2/deps/pcre/pcre_study.c	/^set_table_bit(pcre_uint8 *start_bits, const pcre_uchar *p, BOOL caseless,$/;"	f	typeref:typename:const pcre_uchar *	file:
set_then_offsets	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *set_then_offsets(compiler_common *common, pcre_uchar *cc, sljit_/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
set_time_wayback	extern/libgit2/tests/odb/freshen.c	/^static void set_time_wayback(struct stat *out, const char *fn)$/;"	f	typeref:typename:void	file:
set_transport_callbacks	extern/libgit2/src/remote.c	/^int set_transport_callbacks(git_transport *t, const git_remote_callbacks *cbs)$/;"	f	typeref:typename:int
set_transport_custom_headers	extern/libgit2/src/remote.c	/^static int set_transport_custom_headers(git_transport *t, const git_strarray *custom_headers)$/;"	f	typeref:typename:int	file:
set_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void set_type(xpath_node_set::type_t value)$/;"	f	class:xpath_node_set_raw	typeref:typename:void	file:
set_type_bits	extern/libgit2/deps/pcre/pcre_study.c	/^set_type_bits(pcre_uint8 *start_bits, int cbit_type, unsigned int table_limit,$/;"	f	typeref:typename:void	file:
set_up_workingdir	extern/libgit2/tests/index/crlf.c	/^static void set_up_workingdir(const char *name)$/;"	f	typeref:typename:void	file:
set_url	extern/libgit2/src/remote.c	/^static int set_url(git_repository *repo, const char *remote, const char *pattern, const char *ur/;"	f	typeref:typename:int	file:
set_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::set_value(bool rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
set_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::set_value(const char_t* rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
set_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::set_value(double rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
set_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::set_value(float rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
set_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::set_value(int rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
set_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::set_value(long long rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
set_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::set_value(long rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
set_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::set_value(unsigned int rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
set_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::set_value(unsigned long long rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
set_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_attribute::set_value(unsigned long rhs) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN bool
set_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::set_value(const char_t* rhs) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
set_value_ascii	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool set_value_ascii(String& dest, Header& header, uintptr_t header_mask, char* buf/;"	f	typeref:typename:PUGI__FN bool
set_value_bool	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool set_value_bool(String& dest, Header& header, uintptr_t header_mask, bool value/;"	f	typeref:typename:PUGI__FN bool
set_value_convert	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool set_value_convert(String& dest, Header& header, uintptr_t header_mask, double /;"	f	typeref:typename:PUGI__FN bool
set_value_convert	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool set_value_convert(String& dest, Header& header, uintptr_t header_mask, float v/;"	f	typeref:typename:PUGI__FN bool
set_value_integer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool set_value_integer(String& dest, Header& header, uintptr_t header_mask, U value/;"	f	typeref:typename:PUGI__FN bool
setenv_and_check	extern/libgit2/tests/core/env.c	/^static void setenv_and_check(const char *name, const char *value)$/;"	f	typeref:typename:void	file:
settings	extern/libgit2/src/transports/http.c	/^	http_parser_settings settings;$/;"	m	struct:__anon0458035d0308	typeref:typename:http_parser_settings	file:
setup	extern/libgit2/tests/core/dirent.c	/^static void setup(walk_data *d)$/;"	f	typeref:typename:void	file:
setup_backend	extern/libgit2/tests/config/memory.c	/^static void setup_backend(const char *cfg)$/;"	f	typeref:typename:void	file:
setup_backend	extern/libgit2/tests/odb/backend/simple.c	/^static void setup_backend(const fake_object *objs)$/;"	f	typeref:typename:void	file:
setup_default_allocator	extern/libgit2/src/alloc.c	/^static int setup_default_allocator(void)$/;"	f	typeref:typename:int	file:
setup_fixture_submod2	extern/libgit2/tests/submodule/submodule_helpers.c	/^git_repository *setup_fixture_submod2(void)$/;"	f	typeref:typename:git_repository *
setup_fixture_submod3	extern/libgit2/tests/submodule/submodule_helpers.c	/^git_repository *setup_fixture_submod3(void)$/;"	f	typeref:typename:git_repository *
setup_fixture_submodule_simple	extern/libgit2/tests/submodule/submodule_helpers.c	/^git_repository *setup_fixture_submodule_simple(void)$/;"	f	typeref:typename:git_repository *
setup_fixture_submodule_with_path	extern/libgit2/tests/submodule/submodule_helpers.c	/^git_repository *setup_fixture_submodule_with_path(void)$/;"	f	typeref:typename:git_repository *
setup_fixture_submodules	extern/libgit2/tests/submodule/submodule_helpers.c	/^git_repository *setup_fixture_submodules(void)$/;"	f	typeref:typename:git_repository *
setup_fixture_super	extern/libgit2/tests/submodule/submodule_helpers.c	/^git_repository *setup_fixture_super(void)$/;"	f	typeref:typename:git_repository *
setup_fixture_worktree	extern/libgit2/tests/worktree/worktree_helpers.c	/^void setup_fixture_worktree(worktree_fixture *fixture)$/;"	f	typeref:typename:void
setup_namespace	extern/libgit2/src/refdb_fs.c	/^static char *setup_namespace(git_repository *repo, const char *in)$/;"	f	typeref:typename:char *	file:
setup_prefix_query	extern/libgit2/tests/odb/mixed.c	/^static void setup_prefix_query($/;"	f	typeref:typename:void	file:
setup_race	extern/libgit2/tests/index/racy.c	/^static void setup_race(void)$/;"	f	typeref:typename:void	file:
setup_repo	extern/libgit2/tests/repo/template.c	/^static void setup_repo(const char *name, git_repository_init_options *opts)$/;"	f	typeref:typename:void	file:
setup_repository_and_backend	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^static void setup_repository_and_backend(void)$/;"	f	typeref:typename:void	file:
setup_simple_state	extern/libgit2/tests/repo/state.c	/^static void setup_simple_state(const char *filename)$/;"	f	typeref:typename:void	file:
setup_stash	extern/libgit2/tests/stash/stash_helpers.c	/^void setup_stash(git_repository *repo, git_signature *signature)$/;"	f	typeref:typename:void
setup_templates	extern/libgit2/tests/repo/template.c	/^static void setup_templates(const char *name, bool setup_globally)$/;"	f	typeref:typename:void	file:
setup_tracking_config	extern/libgit2/src/clone.c	/^static int setup_tracking_config($/;"	f	typeref:typename:int	file:
setup_trees	extern/libgit2/tests/threads/diff.c	/^static void setup_trees(void)$/;"	f	typeref:typename:void	file:
setup_uptodate_files	extern/libgit2/tests/index/racy.c	/^static void setup_uptodate_files(void)$/;"	f	typeref:typename:void	file:
sha	extern/libgit2/tests/checkout/index.c	/^	const char *sha;$/;"	m	struct:notify_data	typeref:typename:const char *	file:
sha	extern/libgit2/tests/object/cache.c	/^	const char *sha;$/;"	m	struct:__anond3a8d8530108	typeref:typename:const char *	file:
sha1	extern/libgit2/src/describe.c	/^	git_oid sha1;$/;"	m	struct:commit_name	typeref:typename:git_oid	file:
sha1	extern/libgit2/src/hash.h	/^		git_hash_sha1_ctx sha1;$/;"	m	union:git_hash_ctx::__anon6a671f57030a	typeref:typename:git_hash_sha1_ctx
sha1	extern/libgit2/src/pack.h	/^	git_oid sha1;$/;"	m	struct:git_pack_entry	typeref:typename:git_oid
sha1_bswap32	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define sha1_bswap32(/;"	d	file:
sha1_compression	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^void sha1_compression(uint32_t ihv[5], const uint32_t m[16])$/;"	f	typeref:typename:void
sha1_compression_W	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^static void sha1_compression_W(uint32_t ihv[5], const uint32_t W[80])$/;"	f	typeref:typename:void	file:
sha1_compression_states	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^void sha1_compression_states(uint32_t ihv[5], const uint32_t m[16], uint32_t W[80], uint32_t sta/;"	f	typeref:typename:void
sha1_dvs	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^dv_info_t sha1_dvs[] =$/;"	v	typeref:typename:dv_info_t[]
sha1_f1	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define sha1_f1(/;"	d	file:
sha1_f2	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define sha1_f2(/;"	d	file:
sha1_f3	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define sha1_f3(/;"	d	file:
sha1_f4	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define sha1_f4(/;"	d	file:
sha1_file	extern/libgit2/tests/core/sha1.c	/^static int sha1_file(git_oid *oid, const char *filename)$/;"	f	typeref:typename:int	file:
sha1_load	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^	#define sha1_load(/;"	d	file:
sha1_mix	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define sha1_mix(/;"	d	file:
sha1_padding	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^static const unsigned char sha1_padding[64] =$/;"	v	typeref:typename:const unsigned char[64]	file:
sha1_position	extern/libgit2/src/sha1_lookup.c	/^int sha1_position(const void *table,$/;"	f	typeref:typename:int
sha1_process	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^static void sha1_process(SHA1_CTX* ctx, const uint32_t block[16])$/;"	f	typeref:typename:void	file:
sha1_recompression_step	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^static void sha1_recompression_step(uint32_t step, uint32_t ihvin[5], uint32_t ihvout[5], const /;"	f	file:
sha1_recompression_type	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^typedef void(*sha1_recompression_type)(uint32_t*, uint32_t*, const uint32_t*, const uint32_t*);$/;"	t	typeref:typename:void (*)(uint32_t *,uint32_t *,const uint32_t *,const uint32_t *)
sha1_shutdown	extern/libgit2/src/hash/sha1/win32.c	/^static void sha1_shutdown(void)$/;"	f	typeref:typename:void	file:
sha1_store	extern/libgit2/src/hash/sha1/sha1dc/sha1.c	/^#define sha1_store(/;"	d	file:
shared	extern/libgit2/examples/init.c	/^	uint32_t shared;$/;"	m	struct:opts	typeref:typename:uint32_t	file:
sharing	extern/libgit2/src/win32/posix_w32.c	/^	DWORD sharing;$/;"	m	struct:open_opts	typeref:typename:DWORD	file:
sheet	extern/OpenXLSX/tests/c++/Test04-06_Sheet.cpp	/^auto sheet = wbk.Sheet(1);$/;"	v	typeref:typename:auto
sheet	extern/OpenXLSX/tests/c++/Test04-06_Sheet.cpp	/^auto sheet = wbk.Sheet(2);$/;"	v	typeref:typename:auto
sheet	extern/OpenXLSX/tests/c++/Test04-06_Sheet.cpp	/^auto sheet = wbk.Worksheet("Sheet1");$/;"	v	typeref:typename:auto
sheetContentItem	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^            XLContentItem sheetContentItem;$/;"	m	struct:OpenXLSX::Impl::XLWorkbook::XLSheetData	typeref:typename:XLContentItem
sheetItem	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^            std::unique_ptr<XLSheet> sheetItem;$/;"	m	struct:OpenXLSX::Impl::XLWorkbook::XLSheetData	typeref:typename:std::unique_ptr<XLSheet>
sheetNode	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^            XMLNode sheetNode;$/;"	m	struct:OpenXLSX::Impl::XLWorkbook::XLSheetData	typeref:typename:XMLNode
sheetRelationship	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^            XLRelationshipItem sheetRelationship;$/;"	m	struct:OpenXLSX::Impl::XLWorkbook::XLSheetData	typeref:typename:XLRelationshipItem
sheetType	extern/OpenXLSX/library/openxlsx/implementation/headers/XLWorkbook_Impl.h	/^            XLSheetType sheetType;$/;"	m	struct:OpenXLSX::Impl::XLWorkbook::XLSheetData	typeref:typename:XLSheetType
shell_out	extern/libgit2/tests/clar/fs.h	/^shell_out(char * const argv[])$/;"	f	typeref:typename:int
shift_hunks_by	extern/libgit2/src/blame.c	/^static void shift_hunks_by(git_vector *v, size_t start_line, int shift_by)$/;"	f	typeref:typename:void	file:
short_oid	extern/libgit2/src/odb_loose.c	/^	unsigned char short_oid[GIT_OID_HEXSZ]; \/* hex formatted oid to match *\/$/;"	m	struct:__anon81c02f840408	typeref:typename:unsigned char[]	file:
short_oid_len	extern/libgit2/src/odb_loose.c	/^	size_t short_oid_len;$/;"	m	struct:__anon81c02f840408	typeref:typename:size_t	file:
short_tag_id	extern/libgit2/tests/object/tag/read.c	/^static const char *short_tag_id = "5da7760512a953e3c7c4e47e4392c7a4338fb729";$/;"	v	typeref:typename:const char *	file:
short_tagged_commit	extern/libgit2/tests/object/tag/read.c	/^static const char *short_tagged_commit = "4a5ed60bafcf4638b7c8356bd4ce1916bfede93c";$/;"	v	typeref:typename:const char *	file:
should_checkout	extern/libgit2/src/clone.c	/^static bool should_checkout($/;"	f	typeref:typename:bool	file:
should_expect_nsecs	extern/libgit2/tests/index/nsec.c	/^static bool should_expect_nsecs(void)$/;"	f	typeref:typename:bool	file:
should_generate	extern/libgit2/tests/generate.py	/^    def should_generate(self, path):$/;"	m	class:TestSuite
should_remove_existing	extern/libgit2/src/checkout.c	/^static bool should_remove_existing(checkout_data *data)$/;"	f	typeref:typename:bool	file:
should_run	extern/libgit2/tests/core/link.c	/^static bool should_run(void)$/;"	f	typeref:typename:bool	file:
should_skip_binary	extern/libgit2/src/patch_generate.c	/^GIT_INLINE(bool) should_skip_binary(git_patch_generated *patch, git_diff_file *file)$/;"	f	typeref:typename:bool
should_write	extern/libgit2/src/index.h	/^	unsigned int should_write:1;$/;"	m	struct:__anon2188762b0108	typeref:typename:unsigned int:1
should_write_reflog	extern/libgit2/src/refdb_fs.c	/^static int should_write_reflog(int *write, git_repository *repo, const char *name)$/;"	f	typeref:typename:int	file:
show	extern/libgit2/include/git2/status.h	/^	git_status_show_t show;$/;"	m	struct:__anon1764a4980408	typeref:typename:git_status_show_t
show_blob	extern/libgit2/examples/cat-file.c	/^static void show_blob(const git_blob *blob)$/;"	f	typeref:typename:void	file:
show_branch	extern/libgit2/examples/status.c	/^static void show_branch(git_repository *repo, int format)$/;"	f	typeref:typename:void	file:
show_commit	extern/libgit2/examples/cat-file.c	/^static void show_commit(const git_commit *commit)$/;"	f	typeref:typename:void	file:
show_commit_oid_as_fallback	extern/libgit2/include/git2/describe.h	/^	int show_commit_oid_as_fallback;$/;"	m	struct:git_describe_options	typeref:typename:int
show_diff	extern/libgit2/examples/log.c	/^	int show_diff;$/;"	m	struct:log_options	typeref:typename:int	file:
show_log_size	extern/libgit2/examples/log.c	/^	int show_log_size;$/;"	m	struct:log_options	typeref:typename:int	file:
show_ref	extern/libgit2/examples/for-each-ref.c	/^static int show_ref(git_reference *ref, void *data)$/;"	f	typeref:typename:int	file:
show_suffix	extern/libgit2/src/describe.c	/^static int show_suffix($/;"	f	typeref:typename:int	file:
show_tag	extern/libgit2/examples/cat-file.c	/^static void show_tag(const git_tag *tag)$/;"	f	typeref:typename:void	file:
show_tree	extern/libgit2/examples/cat-file.c	/^static void show_tree(const git_tree *tree)$/;"	f	typeref:typename:void	file:
showbranch	extern/libgit2/examples/status.c	/^	int showbranch;$/;"	m	struct:opts	typeref:typename:int	file:
showsubmod	extern/libgit2/examples/status.c	/^	int showsubmod;$/;"	m	struct:opts	typeref:typename:int	file:
shutdown	extern/libgit2/include/git2/sys/filter.h	/^	git_filter_shutdown_fn shutdown;$/;"	m	struct:git_filter	typeref:typename:git_filter_shutdown_fn
shutdown	extern/libgit2/include/git2/sys/merge.h	/^	git_merge_driver_shutdown_fn shutdown;$/;"	m	struct:git_merge_driver	typeref:typename:git_merge_driver_shutdown_fn
shutdown	extern/libgit2/tests/merge/driver.c	/^	int shutdown;$/;"	m	struct:test_merge_driver	typeref:typename:int	file:
shutdown_common	extern/libgit2/src/global.c	/^static void shutdown_common(void)$/;"	f	typeref:typename:void	file:
shutdown_ssh	extern/libgit2/src/transports/ssh.c	/^static void shutdown_ssh(void)$/;"	f	typeref:typename:void	file:
shutdown_ssl	extern/libgit2/src/streams/mbedtls.c	/^static void shutdown_ssl(void)$/;"	f	typeref:typename:void	file:
shutdown_ssl	extern/libgit2/src/streams/openssl.c	/^static void shutdown_ssl(void)$/;"	f	typeref:typename:void	file:
shutdown_ssl_locking	extern/libgit2/src/streams/openssl.c	/^static void shutdown_ssl_locking(void)$/;"	f	typeref:typename:void	file:
shutdown_stream_registry	extern/libgit2/src/streams/registry.c	/^static void shutdown_stream_registry(void)$/;"	f	typeref:typename:void	file:
side_band	extern/libgit2/src/transports/smart.h	/^		side_band:1,$/;"	m	struct:transport_smart_caps	typeref:typename:int:1
side_band_64k	extern/libgit2/src/transports/smart.h	/^		side_band_64k:1,$/;"	m	struct:transport_smart_caps	typeref:typename:int:1
sideband_cb	extern/libgit2/tests/network/fetchlocal.c	/^static int sideband_cb(const char *str, int len, void *payload)$/;"	f	typeref:typename:int	file:
sideband_error_pkt	extern/libgit2/src/transports/smart_pkt.c	/^static int sideband_error_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
sideband_progress	extern/libgit2/examples/clone.c	/^static int sideband_progress(const char *str, int len, void *payload)$/;"	f	typeref:typename:int	file:
sideband_progress	extern/libgit2/include/git2/remote.h	/^	git_transport_message_cb sideband_progress;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_transport_message_cb
sideband_progress_pkt	extern/libgit2/src/transports/smart_pkt.c	/^static int sideband_progress_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
sig	extern/libgit2/src/transaction.c	/^	git_signature *sig;$/;"	m	struct:__anon8eca35140208	typeref:typename:git_signature *	file:
sign	extern/libgit2/include/git2/types.h	/^	char sign; \/**< indicator for questionable '-0000' offsets in signature *\/$/;"	m	struct:git_time	typeref:typename:char
sign_callback	extern/libgit2/include/git2/sys/cred.h	/^	git_cred_sign_cb sign_callback;$/;"	m	struct:git_cred_ssh_custom	typeref:typename:git_cred_sign_cb
signature	extern/libgit2/src/index.c	/^	char signature[4];$/;"	m	struct:index_extension	typeref:typename:char[4]	file:
signature	extern/libgit2/src/index.c	/^	uint32_t signature;$/;"	m	struct:index_header	typeref:typename:uint32_t	file:
signature	extern/libgit2/tests/rebase/inmemory.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	extern/libgit2/tests/rebase/iterator.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	extern/libgit2/tests/rebase/merge.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	extern/libgit2/tests/rebase/setup.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	extern/libgit2/tests/rebase/sign.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	extern/libgit2/tests/rebase/submodule.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	extern/libgit2/tests/stash/apply.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	extern/libgit2/tests/stash/drop.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	extern/libgit2/tests/stash/foreach.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	extern/libgit2/tests/stash/save.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	extern/libgit2/tests/stash/submodules.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature_error	extern/libgit2/src/signature.c	/^static int signature_error(const char *msg)$/;"	f	typeref:typename:int	file:
signature_matches	extern/libgit2/examples/log.c	/^static int signature_matches(const git_signature *sig, const char *filter) {$/;"	f	typeref:typename:int	file:
signing_cb	extern/libgit2/include/git2/rebase.h	/^	git_commit_signing_cb signing_cb;$/;"	m	struct:__anona97543260108	typeref:typename:git_commit_signing_cb
signing_cb_gpg	extern/libgit2/tests/rebase/sign.c	/^int signing_cb_gpg($/;"	f	typeref:typename:int
signing_cb_magic_field	extern/libgit2/tests/rebase/sign.c	/^int signing_cb_magic_field($/;"	f	typeref:typename:int
signing_cb_passthrough	extern/libgit2/tests/rebase/sign.c	/^int signing_cb_passthrough($/;"	f	typeref:typename:int
silly_tag	extern/libgit2/tests/object/tag/read.c	/^static const char *silly_tag = "object c054ccaefbf2da31c3b19178f9e3ef20a3867924\\n\\$/;"	v	typeref:typename:const char *	file:
similar_trees	extern/libgit2/src/iterator.c	/^	git_vector similar_trees;$/;"	m	struct:__anonb487a9b80408	typeref:typename:git_vector	file:
similarity	extern/libgit2/include/git2/diff.h	/^	uint16_t      similarity;  \/**< for RENAMED and COPIED, value 0-100 *\/$/;"	m	struct:__anon72022fed0508	typeref:typename:uint16_t
similarity	extern/libgit2/src/diff_tform.c	/^	uint16_t similarity;$/;"	m	struct:__anone5feb9ce0208	typeref:typename:uint16_t	file:
similarity	extern/libgit2/src/merge.c	/^	unsigned char similarity;$/;"	m	struct:merge_diff_similarity	typeref:typename:unsigned char	file:
similarity_get_file	extern/libgit2/src/diff_tform.c	/^GIT_INLINE(git_diff_file *) similarity_get_file(git_diff *diff, size_t idx)$/;"	f	typeref:typename:git_diff_file *
similarity_info	extern/libgit2/src/diff_tform.c	/^} similarity_info;$/;"	t	typeref:struct:__anone5feb9ce0108	file:
similarity_init	extern/libgit2/src/diff_tform.c	/^static int similarity_init($/;"	f	typeref:typename:int	file:
similarity_measure	extern/libgit2/src/diff_tform.c	/^static int similarity_measure($/;"	f	typeref:typename:int	file:
similarity_sig	extern/libgit2/src/diff_tform.c	/^static int similarity_sig($/;"	f	typeref:typename:int	file:
similarity_unload	extern/libgit2/src/diff_tform.c	/^static void similarity_unload(similarity_info *info)$/;"	f	typeref:typename:void	file:
size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		size_t position, size;$/;"	m	struct:xpath_context	typeref:typename:size_t	file:
size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		size_t size() const$/;"	f	class:xpath_node_set_raw	typeref:typename:size_t	file:
size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN size_t xpath_node_set::size() const$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN size_t
size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        size_t size;$/;"	m	struct:gap	typeref:typename:size_t	file:
size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        size_t size;$/;"	m	struct:xml_stream_chunk	typeref:typename:size_t	file:
size	extern/OpenXLSX/tests/catch/catch.hpp	/^        auto size() const noexcept -> size_type {$/;"	f	class:Catch::StringRef	typeref:typename:auto
size	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 size;               \/* Total that was malloced *\/$/;"	m	struct:pcre_study_data	typeref:typename:pcre_uint32
size	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 size;               \/* Total that was malloced *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
size	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 size;               \/* Total that was malloced *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint32
size	extern/libgit2/deps/zlib/gzguts.h	/^    unsigned size;          \/* buffer size, zero if not allocated yet *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:unsigned
size	extern/libgit2/fuzzers/download_refs_fuzzer.c	/^	size_t size;$/;"	m	struct:fuzzer_buffer	typeref:typename:size_t	file:
size	extern/libgit2/include/git2/buffer.h	/^	size_t size;$/;"	m	struct:__anonbea3682e0108	typeref:typename:size_t
size	extern/libgit2/include/git2/diff.h	/^	git_off_t   size;$/;"	m	struct:__anon72022fed0408	typeref:typename:git_off_t
size	extern/libgit2/include/git2/merge.h	/^	size_t size;$/;"	m	struct:__anon5e9a43240108	typeref:typename:size_t
size	extern/libgit2/script/user_model.c	/^	size_t asize, size;$/;"	m	struct:git_buf	typeref:typename:size_t	file:
size	extern/libgit2/src/blob.h	/^			git_off_t size;$/;"	m	struct:git_blob::__anon5d2cee12010a::__anon5d2cee120208	typeref:typename:git_off_t
size	extern/libgit2/src/cache.h	/^	size_t     size;$/;"	m	struct:__anon354735470208	typeref:typename:size_t
size	extern/libgit2/src/futils.h	/^	git_off_t  size;$/;"	m	struct:__anonce3edc2a0408	typeref:typename:git_off_t
size	extern/libgit2/src/hash/sha1/generic.h	/^	unsigned long long size;$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:unsigned long long
size	extern/libgit2/src/hashsig.c	/^	int size, asize;$/;"	m	struct:__anonbb1957950108	typeref:typename:int	file:
size	extern/libgit2/src/mwindow.h	/^	git_off_t size;$/;"	m	struct:git_mwindow_file	typeref:typename:git_off_t
size	extern/libgit2/src/object.c	/^	size_t		size;	\/* size in bytes of the object structure *\/$/;"	m	struct:__anon4e5bf2450108	typeref:typename:size_t	file:
size	extern/libgit2/src/odb.c	/^	size_t size, written;$/;"	m	struct:__anonfbf77e230208	typeref:typename:size_t	file:
size	extern/libgit2/src/odb_loose.c	/^	size_t	size; \/* object size *\/$/;"	m	struct:__anon81c02f840108	typeref:typename:size_t	file:
size	extern/libgit2/src/oid.c	/^	size_t node_count, size;$/;"	m	struct:git_oid_shorten	typeref:typename:size_t	file:
size	extern/libgit2/src/pack-objects.h	/^	size_t size;$/;"	m	struct:git_pobject	typeref:typename:size_t
size	extern/libgit2/src/pack.h	/^	size_t size;$/;"	m	struct:pack_chain_elem	typeref:typename:size_t
size	extern/libgit2/src/pool.c	/^	size_t size;$/;"	m	struct:git_pool_page	typeref:typename:size_t	file:
size	extern/libgit2/src/xdiff/xdiff.h	/^	size_t size;$/;"	m	struct:s_mmbuffer	typeref:typename:size_t
size	extern/libgit2/src/xdiff/xdiff.h	/^	size_t size;$/;"	m	struct:s_mmfile	typeref:typename:size_t
size	extern/libgit2/src/xdiff/xprepare.c	/^	long size;$/;"	m	struct:s_xdlclass	typeref:typename:long	file:
size	extern/libgit2/src/xdiff/xtypes.h	/^	long size;$/;"	m	struct:s_xrecord	typeref:typename:long
size	extern/libgit2/tests/object/cache.c	/^	size_t size;$/;"	m	struct:__anond3a8d8530108	typeref:typename:size_t	file:
size_t	extern/libgit2/deps/http-parser/http_parser.h	/^typedef SIZE_T size_t;$/;"	t	typeref:typename:SIZE_T
size_t	extern/libgit2/include/git2/common.h	/^typedef size_t size_t;$/;"	t	typeref:typename:size_t
size_type	extern/NamedType/catch.hpp	/^        using size_type = std::size_t;$/;"	t	class:Catch::StringRef	typeref:typename:std::size_t
size_type	extern/OpenXLSX/tests/catch/catch.hpp	/^        using size_type = std::size_t;$/;"	t	class:Catch::StringRef	typeref:typename:std::size_t
skip	extern/libgit2/deps/zlib/gzguts.h	/^    z_off64_t skip;         \/* amount to skip (already rewound if backwards) *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:z_off64_t
skip	extern/libgit2/examples/log.c	/^	int skip, limit;$/;"	m	struct:log_options	typeref:typename:int	file:
skip	extern/libgit2/tests/object/tree/walk.c	/^	const char *skip;$/;"	m	struct:treewalk_skip_data	typeref:typename:const char *	file:
skipTest	extern/OpenXLSX/tests/catch/catch_reporter_automake.hpp	/^        void skipTest( TestCaseInfo const& testInfo ) override {$/;"	f	struct:Catch::AutomakeReporter	typeref:typename:void
skipTest	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        void skipTest( TestCaseInfo const& \/* testInfo *\/ ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
skip_addition	extern/libgit2/tests/apply/partial.c	/^static int skip_addition($/;"	f	typeref:typename:int	file:
skip_alpha	extern/libgit2/src/date.c	/^static int skip_alpha(const char *date)$/;"	f	typeref:typename:int	file:
skip_arg_count	extern/libgit2/deps/pcre/pcre_internal.h	/^  unsigned int skip_arg_count;    \/* For counting SKIP_ARGs *\/$/;"	m	struct:match_data	typeref:typename:unsigned int
skip_bom	extern/libgit2/src/config_parse.c	/^static int skip_bom(git_parse_ctx *parser)$/;"	f	typeref:typename:int	file:
skip_change	extern/libgit2/tests/apply/partial.c	/^static int skip_change($/;"	f	typeref:typename:int	file:
skip_char_back	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static void skip_char_back(compiler_common *common)$/;"	f	typeref:typename:void	file:
skip_deletion	extern/libgit2/tests/apply/partial.c	/^static int skip_deletion($/;"	f	typeref:typename:int	file:
skip_tree	extern/libgit2/src/iterator.c	/^	bool skip_tree;$/;"	m	struct:__anonb487a9b80908	typeref:typename:bool	file:
skipped_new_lines	extern/libgit2/src/apply.c	/^	size_t skipped_new_lines;$/;"	m	struct:__anonbf3de2540208	typeref:typename:size_t	file:
skipped_old_lines	extern/libgit2/src/apply.c	/^	size_t skipped_old_lines;$/;"	m	struct:__anonbf3de2540208	typeref:typename:size_t	file:
sleep	extern/libgit2/examples/common.h	/^# define sleep(/;"	d
slide_hash	extern/libgit2/deps/zlib/deflate.c	/^local void slide_hash(s)$/;"	f
sm	extern/libgit2/tests/stash/submodules.c	/^static git_submodule *sm;$/;"	v	typeref:typename:git_submodule *	file:
sm_lookup_cb	extern/libgit2/tests/submodule/lookup.c	/^static int sm_lookup_cb(git_submodule *sm, const char *name, void *payload)$/;"	f	typeref:typename:int	file:
sm_lookup_data	extern/libgit2/tests/submodule/lookup.c	/^} sm_lookup_data;$/;"	t	typeref:struct:__anon9f4c7e120108	file:
smaller	extern/libgit2/deps/zlib/trees.c	/^#define smaller(/;"	d	file:
smaller_value	extern/libgit2/tests/core/sortedcache.c	/^	char smaller_value;$/;"	m	struct:__anon76b5c0160108	typeref:typename:char	file:
snake_cnt	extern/libgit2/src/xdiff/xdiffi.h	/^	long snake_cnt;$/;"	m	struct:s_xdalgoenv	typeref:typename:long
snap	extern/libgit2/src/index.h	/^	git_vector snap;$/;"	m	struct:git_index_iterator	typeref:typename:git_vector
snapshot	extern/libgit2/tests/config/snapshot.c	/^static git_config *snapshot;$/;"	v	typeref:typename:git_config *	file:
sncur	extern/libgit2/src/xdiff/xtypes.h	/^	chanode_t *sncur;$/;"	m	struct:s_chastore	typeref:typename:chanode_t *
snprintf	extern/libgit2/deps/zlib/gzguts.h	/^#  define snprintf /;"	d
snprintf	extern/libgit2/examples/common.h	/^#define snprintf /;"	d
socket	extern/libgit2/src/netops.h	/^	GIT_SOCKET socket;$/;"	m	struct:gitno_socket	typeref:typename:GIT_SOCKET
socket_close	extern/libgit2/src/streams/socket.c	/^static int socket_close(git_stream *stream)$/;"	f	typeref:typename:int	file:
socket_connect	extern/libgit2/src/streams/socket.c	/^static int socket_connect(git_stream *stream)$/;"	f	typeref:typename:int	file:
socket_free	extern/libgit2/src/streams/socket.c	/^static void socket_free(git_stream *stream)$/;"	f	typeref:typename:void	file:
socket_read	extern/libgit2/src/streams/socket.c	/^static ssize_t socket_read(git_stream *stream, void *data, size_t len)$/;"	f	typeref:typename:ssize_t	file:
socket_write	extern/libgit2/src/streams/socket.c	/^static ssize_t socket_write(git_stream *stream, const char *data, size_t len, int flags)$/;"	f	typeref:typename:ssize_t	file:
some	extern/libgit2/tests/odb/loose_data.h	/^static object_data some = {$/;"	v	typeref:typename:object_data
some_bytes	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char some_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
some_data	extern/libgit2/tests/object/raw/data.h	/^static unsigned char some_data[] = {$/;"	v	typeref:typename:unsigned char[]
some_data	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char some_data[] = {$/;"	v	typeref:typename:unsigned char[]
some_id	extern/libgit2/tests/object/raw/data.h	/^static char *some_id = "fd8430bc864cfcd5f10e5590f8a447e01b942bfe";$/;"	v	typeref:typename:char *
some_obj	extern/libgit2/tests/object/raw/data.h	/^static git_rawobj some_obj = {$/;"	v	typeref:typename:git_rawobj
sort	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN void xpath_node_set::sort(bool reverse)$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN void
sort	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename I, typename Pred> void sort(I begin, I end, const Pred& pred)$/;"	f	typeref:typename:void
sort_by_hash_and_name	extern/libgit2/src/attr_file.c	/^static int sort_by_hash_and_name(const void *a_raw, const void *b_raw)$/;"	f	typeref:typename:int	file:
sort_do	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void sort_do()$/;"	f	class:xpath_node_set_raw	typeref:typename:void	file:
sort_in_topological_order	extern/libgit2/src/revwalk.c	/^static int sort_in_topological_order(git_commit_list **out, git_revwalk *walk, git_commit_list */;"	f	typeref:typename:int	file:
sortedcache_clear	extern/libgit2/src/sortedcache.c	/^static void sortedcache_clear(git_sortedcache *sc)$/;"	f	typeref:typename:void	file:
sortedcache_copy_item	extern/libgit2/src/sortedcache.c	/^static int sortedcache_copy_item(void *payload, void *tgt_item, void *src_item)$/;"	f	typeref:typename:int	file:
sortedcache_free	extern/libgit2/src/sortedcache.c	/^static void sortedcache_free(git_sortedcache *sc)$/;"	f	typeref:typename:void	file:
sortedcache_magic_cmp	extern/libgit2/src/sortedcache.c	/^static int sortedcache_magic_cmp(const void *key, const void *value)$/;"	f	typeref:typename:int	file:
sortedcache_magic_key	extern/libgit2/src/sortedcache.c	/^struct sortedcache_magic_key {$/;"	s	file:
sortedcache_test_reload	extern/libgit2/tests/core/sortedcache.c	/^static void sortedcache_test_reload(git_sortedcache *sc)$/;"	f	typeref:typename:void	file:
sortedcache_test_struct	extern/libgit2/tests/core/sortedcache.c	/^} sortedcache_test_struct;$/;"	t	typeref:struct:__anon76b5c0160108	file:
sortedcache_test_struct_cmp	extern/libgit2/tests/core/sortedcache.c	/^static int sortedcache_test_struct_cmp(const void *a_, const void *b_)$/;"	f	typeref:typename:int	file:
sortedcache_test_struct_free	extern/libgit2/tests/core/sortedcache.c	/^static void sortedcache_test_struct_free(void *payload, void *item_)$/;"	f	typeref:typename:void	file:
sorting	extern/libgit2/examples/log.c	/^	int sorting;$/;"	m	struct:log_state	typeref:typename:int	file:
sorting	extern/libgit2/src/revwalk.h	/^	unsigned int sorting;$/;"	m	struct:git_revwalk	typeref:typename:unsigned int
source	extern/libgit2/src/attr_file.h	/^	git_attr_file_source source;$/;"	m	struct:__anon32d629ad0608	typeref:typename:git_attr_file_source
source	extern/libgit2/src/config_snapshot.c	/^	git_config_backend *source;$/;"	m	struct:__anonb8a4a6330108	typeref:typename:git_config_backend *	file:
source	extern/libgit2/src/filter.c	/^	const git_filter_source *source;$/;"	m	struct:proxy_stream	typeref:typename:const git_filter_source *	file:
source	extern/libgit2/src/filter.c	/^	git_filter_source source;$/;"	m	struct:git_filter_list	typeref:typename:git_filter_source	file:
sourceExhausted	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^	sourceExhausted,        \/* partial character in source, but hit end *\/$/;"	e	enum:__anonce5e58f80103	file:
sourceIllegal	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^	sourceIllegal           \/* source sequence is illegal\/malformed *\/$/;"	e	enum:__anonce5e58f80103	file:
sourcereg	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int sourcereg;$/;"	m	struct:compare_context	typeref:typename:int	file:
sources	extern/libgit2/tests/diff/rename.c	/^	const char **sources;$/;"	m	struct:rename_expected	typeref:typename:const char **	file:
span.charliteral	extern/OpenXLSX/doxy/customdoxygen.css	/^span.charliteral {$/;"	c
span.comment	extern/OpenXLSX/doxy/customdoxygen.css	/^span.comment {$/;"	c
span.keyword	extern/OpenXLSX/doxy/customdoxygen.css	/^span.keyword {$/;"	c
span.keywordflow	extern/OpenXLSX/doxy/customdoxygen.css	/^span.keywordflow {$/;"	c
span.keywordtype	extern/OpenXLSX/doxy/customdoxygen.css	/^span.keywordtype {$/;"	c
span.legend	extern/OpenXLSX/doxy/customdoxygen.css	/^span.legend {$/;"	c
span.lineno	extern/OpenXLSX/doxy/customdoxygen.css	/^span.lineno {$/;"	c
span.lineno a	extern/OpenXLSX/doxy/customdoxygen.css	/^span.lineno a {$/;"	s
span.lineno a:hover	extern/OpenXLSX/doxy/customdoxygen.css	/^span.lineno a:hover {$/;"	s
span.mlabel	extern/OpenXLSX/doxy/customdoxygen.css	/^#navrow4 a, .icon, span.mlabel,$/;"	c
span.mlabel	extern/OpenXLSX/doxy/customdoxygen.css	/^span.mlabel {$/;"	c
span.mlabels	extern/OpenXLSX/doxy/customdoxygen.css	/^span.mlabels {$/;"	c
span.preprocessor	extern/OpenXLSX/doxy/customdoxygen.css	/^span.preprocessor {$/;"	c
span.stringliteral	extern/OpenXLSX/doxy/customdoxygen.css	/^span.stringliteral {$/;"	c
span.vhdlchar	extern/OpenXLSX/doxy/customdoxygen.css	/^span.vhdlchar {$/;"	c
span.vhdldigit	extern/OpenXLSX/doxy/customdoxygen.css	/^span.vhdldigit {$/;"	c
span.vhdlkeyword	extern/OpenXLSX/doxy/customdoxygen.css	/^span.vhdlkeyword {$/;"	c
span.vhdllogic	extern/OpenXLSX/doxy/customdoxygen.css	/^span.vhdllogic {$/;"	c
spec	extern/libgit2/examples/rev-parse.c	/^	const char *spec;$/;"	m	struct:parse_state	typeref:typename:const char *	file:
special	extern/libgit2/src/date.c	/^static const struct special {$/;"	s	file:
special	extern/libgit2/src/date.c	/^} special[] = {$/;"	v	typeref:typename:const struct special[]
specs	extern/libgit2/src/push.h	/^	git_vector specs;$/;"	m	struct:git_push	typeref:typename:git_vector
split_blame	extern/libgit2/src/blame_git.c	/^static int split_blame(git_blame *blame, git_blame__entry *split, git_blame__entry *e)$/;"	f	typeref:typename:int	file:
split_hunk_in_vector	extern/libgit2/src/blame.c	/^static git_blame_hunk *split_hunk_in_vector($/;"	f	typeref:typename:git_blame_hunk *	file:
split_measurement	extern/libgit2/src/xdiff/xdiffi.c	/^struct split_measurement {$/;"	s	file:
split_overlap	extern/libgit2/src/blame_git.c	/^static void split_overlap(git_blame__entry *split, git_blame__entry *e,$/;"	f	typeref:typename:void	file:
split_score	extern/libgit2/src/xdiff/xdiffi.c	/^struct split_score {$/;"	s	file:
src	extern/libgit2/include/git2/remote.h	/^	git_oid src;$/;"	m	struct:__anonc41be5800208	typeref:typename:git_oid
src	extern/libgit2/src/diff_file.h	/^	git_iterator_type_t src;$/;"	m	struct:__anon2493e46b0108	typeref:typename:git_iterator_type_t
src	extern/libgit2/src/diff_tform.c	/^	git_iterator_type_t src;$/;"	m	struct:__anone5feb9ce0108	typeref:typename:git_iterator_type_t	file:
src	extern/libgit2/src/refspec.h	/^	char *src;$/;"	m	struct:git_refspec	typeref:typename:char *
src_buf	extern/libgit2/src/delta.c	/^	const void *src_buf;$/;"	m	struct:git_delta_index	typeref:typename:const void *	file:
src_refname	extern/libgit2/include/git2/remote.h	/^	char *src_refname;$/;"	m	struct:__anonc41be5800208	typeref:typename:char *
src_size	extern/libgit2/src/delta.c	/^	size_t src_size;$/;"	m	struct:git_delta_index	typeref:typename:size_t	file:
srwl	extern/libgit2/src/win32/thread.h	/^		GIT_SRWLOCK srwl;$/;"	m	union:__anon7162bc2d0308::__anon7162bc2d040a	typeref:typename:GIT_SRWLOCK
ss	extern/OpenXLSX/tests/c++/Test02_DocumentProperties.cpp	/^std::stringstream ss;$/;"	v	typeref:typename:std::stringstream
ssh_agent_auth	extern/libgit2/src/transports/ssh.c	/^static int ssh_agent_auth(LIBSSH2_SESSION *session, git_cred_ssh_key *c) {$/;"	f	typeref:typename:int	file:
ssh_certificate_check	extern/libgit2/tests/online/clone.c	/^int ssh_certificate_check(git_cert *cert, int valid, const char *host, void *payload)$/;"	f	typeref:typename:int
ssh_custom_free	extern/libgit2/src/transports/cred.c	/^static void ssh_custom_free(struct git_cred *cred)$/;"	f	typeref:typename:void	file:
ssh_error	extern/libgit2/src/transports/ssh.c	/^static void ssh_error(LIBSSH2_SESSION *session, const char *errmsg)$/;"	f	typeref:typename:void	file:
ssh_interactive_free	extern/libgit2/src/transports/cred.c	/^static void ssh_interactive_free(struct git_cred *cred)$/;"	f	typeref:typename:void	file:
ssh_key_free	extern/libgit2/src/transports/cred.c	/^static void ssh_key_free(struct git_cred *cred)$/;"	f	typeref:typename:void	file:
ssh_memory_cred_cb	extern/libgit2/tests/online/clone.c	/^static int ssh_memory_cred_cb(git_cred **cred, const char *url, const char *user_from_url,$/;"	f	typeref:typename:int	file:
ssh_prefixes	extern/libgit2/src/transports/ssh.c	/^static const char *ssh_prefixes[] = { "ssh:\/\/", "ssh+git:\/\/", "git+ssh:\/\/" };$/;"	v	typeref:typename:const char * []	file:
ssh_receivepack	extern/libgit2/src/transports/ssh.c	/^static int ssh_receivepack($/;"	f	typeref:typename:int	file:
ssh_receivepack_ls	extern/libgit2/src/transports/ssh.c	/^static int ssh_receivepack_ls($/;"	f	typeref:typename:int	file:
ssh_stream	extern/libgit2/src/transports/ssh.c	/^} ssh_stream;$/;"	t	typeref:struct:__anon944cd18b0108	file:
ssh_stream_alloc	extern/libgit2/src/transports/ssh.c	/^static int ssh_stream_alloc($/;"	f	typeref:typename:int	file:
ssh_stream_free	extern/libgit2/src/transports/ssh.c	/^static void ssh_stream_free(git_smart_subtransport_stream *stream)$/;"	f	typeref:typename:void	file:
ssh_stream_read	extern/libgit2/src/transports/ssh.c	/^static int ssh_stream_read($/;"	f	typeref:typename:int	file:
ssh_stream_write	extern/libgit2/src/transports/ssh.c	/^static int ssh_stream_write($/;"	f	typeref:typename:int	file:
ssh_subtransport	extern/libgit2/src/transports/ssh.c	/^} ssh_subtransport;$/;"	t	typeref:struct:__anon944cd18b0208	file:
ssh_subtransport_definition	extern/libgit2/src/transport.c	/^static git_smart_subtransport_definition ssh_subtransport_definition = { git_smart_subtransport_/;"	v	typeref:typename:git_smart_subtransport_definition	file:
ssh_uploadpack	extern/libgit2/src/transports/ssh.c	/^static int ssh_uploadpack($/;"	f	typeref:typename:int	file:
ssh_uploadpack_ls	extern/libgit2/src/transports/ssh.c	/^static int ssh_uploadpack_ls($/;"	f	typeref:typename:int	file:
ssize_t	extern/libgit2/deps/http-parser/http_parser.h	/^typedef SSIZE_T ssize_t;$/;"	t	typeref:typename:SSIZE_T
ssize_t	extern/libgit2/examples/common.h	/^# define ssize_t /;"	d
ssize_t	extern/libgit2/src/win32/msvc-compat.h	/^typedef SSIZE_T ssize_t;$/;"	t	typeref:typename:SSIZE_T
ssl	extern/libgit2/src/netops.h	/^	SSL *ssl;$/;"	m	struct:gitno_ssl	typeref:typename:SSL *
ssl	extern/libgit2/src/netops.h	/^	gitno_ssl ssl;$/;"	m	struct:gitno_socket	typeref:typename:gitno_ssl
ssl	extern/libgit2/src/streams/mbedtls.c	/^	mbedtls_ssl_context *ssl;$/;"	m	struct:__anon7f3464670108	typeref:typename:mbedtls_ssl_context *	file:
ssl	extern/libgit2/src/streams/openssl.c	/^	SSL *ssl;$/;"	m	struct:__anon6b0c21600108	typeref:typename:SSL *	file:
ssl_cert	extern/libgit2/tests/online/clone.c	/^static int ssl_cert(git_cert *cert, int valid, const char *host, void *payload)$/;"	f	typeref:typename:int	file:
ssl_set_error	extern/libgit2/src/streams/mbedtls.c	/^static int ssl_set_error(mbedtls_ssl_context *ssl, int error)$/;"	f	typeref:typename:int	file:
ssl_set_error	extern/libgit2/src/streams/openssl.c	/^static int ssl_set_error(SSL *ssl, int error)$/;"	f	typeref:typename:int	file:
ssl_teardown	extern/libgit2/src/streams/mbedtls.c	/^static int ssl_teardown(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int	file:
ssl_teardown	extern/libgit2/src/streams/openssl.c	/^static int ssl_teardown(SSL *ssl)$/;"	f	typeref:typename:int	file:
sss	extern/libgit2/tests/object/message.c	/^#define sss /;"	d	file:
st	extern/libgit2/src/iterator.c	/^	struct stat st;$/;"	m	struct:__anonb487a9b80608	typeref:struct:stat	file:
st_atim	extern/libgit2/src/common.h	/^# define st_atim /;"	d
st_atim	extern/libgit2/src/win32/win32-compat.h	/^	struct timespec st_atim;$/;"	m	struct:p_stat	typeref:struct:timespec
st_atime	extern/libgit2/src/win32/win32-compat.h	/^#define st_atime /;"	d
st_atime_nsec	extern/libgit2/src/unix/posix.h	/^# define st_atime_nsec /;"	d
st_atime_nsec	extern/libgit2/src/win32/win32-compat.h	/^#define st_atime_nsec /;"	d
st_ctim	extern/libgit2/src/common.h	/^# define st_ctim /;"	d
st_ctim	extern/libgit2/src/win32/win32-compat.h	/^	struct timespec st_ctim;$/;"	m	struct:p_stat	typeref:struct:timespec
st_ctime	extern/libgit2/src/win32/win32-compat.h	/^#define st_ctime /;"	d
st_ctime_nsec	extern/libgit2/src/unix/posix.h	/^# define st_ctime_nsec /;"	d
st_ctime_nsec	extern/libgit2/src/win32/win32-compat.h	/^#define st_ctime_nsec /;"	d
st_dev	extern/libgit2/src/win32/win32-compat.h	/^	_dev_t st_dev;$/;"	m	struct:p_stat	typeref:typename:_dev_t
st_gid	extern/libgit2/src/win32/win32-compat.h	/^	short st_gid;$/;"	m	struct:p_stat	typeref:typename:short
st_ino	extern/libgit2/src/win32/win32-compat.h	/^	_ino_t st_ino;$/;"	m	struct:p_stat	typeref:typename:_ino_t
st_mode	extern/libgit2/src/win32/win32-compat.h	/^	mode_t st_mode;$/;"	m	struct:p_stat	typeref:typename:mode_t
st_mtim	extern/libgit2/src/common.h	/^# define st_mtim /;"	d
st_mtim	extern/libgit2/src/win32/win32-compat.h	/^	struct timespec st_mtim;$/;"	m	struct:p_stat	typeref:struct:timespec
st_mtime	extern/libgit2/src/win32/win32-compat.h	/^#define st_mtime /;"	d
st_mtime_nsec	extern/libgit2/src/unix/posix.h	/^# define st_mtime_nsec /;"	d
st_mtime_nsec	extern/libgit2/src/win32/win32-compat.h	/^#define st_mtime_nsec /;"	d
st_nlink	extern/libgit2/src/win32/win32-compat.h	/^	short st_nlink;$/;"	m	struct:p_stat	typeref:typename:short
st_rdev	extern/libgit2/src/win32/win32-compat.h	/^	_dev_t st_rdev;$/;"	m	struct:p_stat	typeref:typename:_dev_t
st_size	extern/libgit2/src/win32/win32-compat.h	/^	__int64 st_size;$/;"	m	struct:p_stat	typeref:typename:__int64
st_uid	extern/libgit2/src/win32/win32-compat.h	/^	short st_uid;$/;"	m	struct:p_stat	typeref:typename:short
stack	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_stack stack;$/;"	m	struct:xpath_stack_data	typeref:typename:xpath_stack	file:
stack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_stack *stack;$/;"	m	struct:jit_arguments	typeref:struct:sljit_stack *	file:
stackalloc	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *stackalloc;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
stacksave	extern/libgit2/deps/pcre/pcre_exec.c	/^#define stacksave /;"	d	file:
stacksize	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int stacksize;$/;"	m	struct:bracketpos_backtrack	typeref:typename:int	file:
stage	extern/libgit2/src/index.c	/^	int stage;$/;"	m	struct:entry_srch_key	typeref:typename:int	file:
stage	extern/libgit2/tests/checkout/conflict.c	/^	int stage;$/;"	m	struct:checkout_index_entry	typeref:typename:int	file:
stage	extern/libgit2/tests/merge/merge_helpers.h	/^	int stage;$/;"	m	struct:merge_index_entry	typeref:typename:int
stage_and_commit	extern/libgit2/tests/status/worktree.c	/^static void stage_and_commit(git_repository *repo, const char *path)$/;"	f	typeref:typename:void	file:
stage_content	extern/libgit2/tests/merge/workdir/dirty.c	/^static void stage_content(char *content[])$/;"	f	typeref:typename:void	file:
stage_new_file	extern/libgit2/src/stash.c	/^static int stage_new_file(const git_index_entry **entries, void *data)$/;"	f	typeref:typename:int	file:
stage_new_files	extern/libgit2/src/stash.c	/^static int stage_new_files($/;"	f	typeref:typename:int	file:
stage_random_files	extern/libgit2/tests/merge/workdir/dirty.c	/^static void stage_random_files(char *files[])$/;"	f	typeref:typename:void	file:
staged	extern/libgit2/src/merge.h	/^	git_vector staged;$/;"	m	struct:__anon41711a830408	typeref:typename:git_vector
stamp	extern/libgit2/src/attr_file.h	/^		git_futils_filestamp stamp;$/;"	m	union:__anon32d629ad0608::__anon32d629ad070a	typeref:typename:git_futils_filestamp
stamp	extern/libgit2/src/config_file.c	/^	git_futils_filestamp stamp;$/;"	m	struct:config_file	typeref:typename:git_futils_filestamp	file:
stamp	extern/libgit2/src/index.h	/^	git_futils_filestamp stamp;$/;"	m	struct:git_index	typeref:typename:git_futils_filestamp
stamp	extern/libgit2/src/sortedcache.h	/^	git_futils_filestamp stamp;$/;"	m	struct:__anond92d40380108	typeref:typename:git_futils_filestamp
start	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  pcre_uchar *start;$/;"	m	struct:compiler_common	typeref:typename:pcre_uchar *	file:
start	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_sw start;$/;"	m	struct:recurse_entry	typeref:typename:sljit_sw	file:
start	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_sw start;$/;"	m	struct:then_trap_backtrack	typeref:typename:sljit_sw	file:
start	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_jump *start;$/;"	m	struct:stub_list	typeref:struct:sljit_jump *	file:
start	extern/libgit2/deps/zlib/gzguts.h	/^    z_off64_t start;        \/* where the gzip data started, for rewinding *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:z_off64_t
start	extern/libgit2/src/iterator.h	/^	char *start;$/;"	m	struct:git_iterator	typeref:typename:char *
start	extern/libgit2/src/iterator.h	/^	const char *start;$/;"	m	struct:__anonb487a9bd0408	typeref:typename:const char *
start	extern/libgit2/src/odb_loose.c	/^	char start[MAX_HEADER_LEN];$/;"	m	struct:__anon81c02f840308	typeref:typename:char[]	file:
start	extern/libgit2/src/tsort.c	/^	ssize_t start;$/;"	m	struct:tsort_run	typeref:typename:ssize_t	file:
start	extern/libgit2/src/xdiff/xdiffi.c	/^	long start;$/;"	m	struct:xdlgroup	typeref:typename:long	file:
start_bits	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint8 start_bits[32];      \/* Starting char bits *\/$/;"	m	struct:pcre_study_data	typeref:typename:pcre_uint8[32]
start_code	extern/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uchar *start_code;  \/* For use when recursing *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uchar *
start_code	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *start_code;     \/* Start of the compiled pattern *\/$/;"	m	struct:dfa_match_data	typeref:typename:const pcre_uchar *
start_code	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *start_code;     \/* The start of the compiled code *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uchar *
start_len	extern/libgit2/src/iterator.h	/^	size_t start_len;$/;"	m	struct:git_iterator	typeref:typename:size_t
start_len	extern/libgit2/src/odb_loose.c	/^	size_t start_len;$/;"	m	struct:__anon81c02f840308	typeref:typename:size_t	file:
start_line	extern/libgit2/examples/blame.c	/^	int start_line;$/;"	m	struct:opts	typeref:typename:int	file:
start_match	extern/libgit2/deps/pcre/pcre.h	/^  int          start_match;       \/* Offset to start of this match attempt *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
start_match	extern/libgit2/deps/pcre/pcre.h	/^  int          start_match;       \/* Offset to start of this match attempt *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
start_match	extern/libgit2/deps/pcre/pcre.h	/^  int          start_match;       \/* Offset to start of this match attempt *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
start_match_ptr	extern/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR start_match_ptr;    \/* Start of matched string *\/$/;"	m	struct:match_data	typeref:typename:PCRE_PUCHAR
start_offset	extern/libgit2/deps/pcre/pcre_internal.h	/^  int    start_offset;            \/* The start offset value *\/$/;"	m	struct:match_data	typeref:typename:int
start_offset	extern/libgit2/deps/pcre/pcre_internal.h	/^  int   start_offset;               \/* The start offset value *\/$/;"	m	struct:dfa_match_data	typeref:typename:int
start_pattern	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *start_pattern;  \/* The start of the pattern *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uchar *
start_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 start_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
start_read	extern/libgit2/src/odb_loose.c	/^	size_t start_read;$/;"	m	struct:__anon81c02f840308	typeref:typename:size_t	file:
start_state	extern/libgit2/deps/http-parser/http_parser.c	/^#define start_state /;"	d	file:
start_subject	extern/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR start_subject;      \/* Start of the subject string *\/$/;"	m	struct:match_data	typeref:typename:PCRE_PUCHAR
start_subject	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *start_subject ; \/* Start of the subject string *\/$/;"	m	struct:dfa_match_data	typeref:typename:const pcre_uchar *
start_used_ptr	extern/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR start_used_ptr;     \/* Earliest consulted character *\/$/;"	m	struct:match_data	typeref:typename:PCRE_PUCHAR
start_used_ptr	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *start_used_ptr; \/* Earliest consulted character *\/$/;"	m	struct:dfa_match_data	typeref:typename:const pcre_uchar *
start_used_ptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 start_used_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
start_workspace	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *start_workspace;\/* The start of working space *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uchar *
started	extern/libgit2/src/iterator.h	/^	bool started;$/;"	m	struct:git_iterator	typeref:typename:bool
started	extern/libgit2/src/rebase.c	/^		started : 1;$/;"	m	struct:git_rebase	typeref:typename:int:1	file:
starts_with	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN bool starts_with(const char_t* string, const char_t* pattern)$/;"	f	typeref:typename:PUGI__NS_END PUGI__NS_BEGIN PUGI__FN bool
stash_delta_merge	extern/libgit2/src/stash.c	/^static git_diff_delta *stash_delta_merge($/;"	f	typeref:typename:git_diff_delta *	file:
stash_tip_oid	extern/libgit2/tests/stash/foreach.c	/^static git_oid stash_tip_oid;$/;"	v	typeref:typename:git_oid	file:
stash_tip_oid	extern/libgit2/tests/stash/save.c	/^static git_oid stash_tip_oid;$/;"	v	typeref:typename:git_oid	file:
stash_tip_oid	extern/libgit2/tests/stash/submodules.c	/^static git_oid stash_tip_oid;$/;"	v	typeref:typename:git_oid	file:
stash_to_index	extern/libgit2/src/stash.c	/^static int stash_to_index($/;"	f	typeref:typename:int	file:
stash_update_index_from_diff	extern/libgit2/src/stash.c	/^static int stash_update_index_from_diff($/;"	f	typeref:typename:int	file:
stash_update_rules	extern/libgit2/src/stash.c	/^struct stash_update_rules {$/;"	s	file:
stat	extern/libgit2/src/win32/win32-compat.h	/^#define stat /;"	d
stat	extern/libgit2/tests/clar.c	/^#		define stat(/;"	d	file:
stat_calls	extern/libgit2/include/git2/checkout.h	/^	size_t stat_calls;$/;"	m	struct:__anon4996472a0308	typeref:typename:size_t
stat_calls	extern/libgit2/include/git2/sys/diff.h	/^	size_t stat_calls; \/**< Number of stat() calls performed *\/$/;"	m	struct:__anon7e7f02bb0108	typeref:typename:size_t
stat_calls	extern/libgit2/src/futils.h	/^	size_t stat_calls;$/;"	m	struct:git_futils_mkdir_perfdata	typeref:typename:size_t
stat_calls	extern/libgit2/src/iterator.h	/^	size_t stat_calls;$/;"	m	struct:git_iterator	typeref:typename:size_t
stat_desc	extern/libgit2/deps/zlib/deflate.h	/^    const static_tree_desc *stat_desc;  \/* the corresponding static tree *\/$/;"	m	struct:tree_desc_s	typeref:typename:const static_tree_desc *
state	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		const char_t* state() const$/;"	f	class:xpath_lexer	typeref:typename:const char_t *	file:
state	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    struct mz_internal_state* state; \/* internal state, allocated by zalloc\/zfree *\/$/;"	m	struct:mz_stream_s	typeref:struct:mz_internal_state *
state	extern/libgit2/deps/http-parser/http_parser.c	/^enum state$/;"	g	file:
state	extern/libgit2/deps/http-parser/http_parser.h	/^  unsigned char state;        \/* enum state from http_parser.c *\/$/;"	m	struct:http_parser	typeref:typename:unsigned char
state	extern/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_state state;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_state
state	extern/libgit2/deps/zlib/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:internal_state FAR *
state_files	extern/libgit2/src/repository.c	/^static const char *state_files[] = {$/;"	v	typeref:typename:const char * []	file:
state_loc	extern/libgit2/tests/core/dirent.c	/^static walk_data *state_loc;$/;"	v	typeref:typename:walk_data *	file:
state_path	extern/libgit2/src/rebase.c	/^	char *state_path;$/;"	m	struct:git_rebase	typeref:typename:char *	file:
stateblock	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^typedef struct stateblock {$/;"	s	file:
stateblock	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^} stateblock;$/;"	t	typeref:struct:stateblock	file:
states	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	uint32_t states[80][5];$/;"	m	struct:__anon3f63bb720108	typeref:typename:uint32_t[80][5]
static_bl_desc	extern/libgit2/deps/zlib/trees.c	/^local const static_tree_desc  static_bl_desc =$/;"	v	typeref:typename:local const static_tree_desc
static_d_desc	extern/libgit2/deps/zlib/trees.c	/^local const static_tree_desc  static_d_desc =$/;"	v	typeref:typename:local const static_tree_desc
static_dtree	extern/libgit2/deps/zlib/trees.c	/^local ct_data static_dtree[D_CODES];$/;"	v	typeref:typename:local ct_data[]
static_dtree	extern/libgit2/deps/zlib/trees.h	/^local const ct_data static_dtree[D_CODES] = {$/;"	v	typeref:typename:local const ct_data[]
static_l_desc	extern/libgit2/deps/zlib/trees.c	/^local const static_tree_desc  static_l_desc =$/;"	v	typeref:typename:local const static_tree_desc
static_len	extern/libgit2/deps/zlib/deflate.h	/^    ulg static_len;     \/* bit length of current block with static trees *\/$/;"	m	struct:internal_state	typeref:typename:ulg
static_ltree	extern/libgit2/deps/zlib/trees.c	/^local ct_data static_ltree[L_CODES+2];$/;"	v	typeref:typename:local ct_data[]
static_ltree	extern/libgit2/deps/zlib/trees.h	/^local const ct_data static_ltree[L_CODES+2] = {$/;"	v	typeref:typename:local const ct_data[]
static_tree	extern/libgit2/deps/zlib/trees.c	/^    const ct_data *static_tree;  \/* static tree or NULL *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:const ct_data *	file:
static_tree_desc	extern/libgit2/deps/zlib/deflate.h	/^typedef struct static_tree_desc_s  static_tree_desc;$/;"	t	typeref:struct:static_tree_desc_s
static_tree_desc_s	extern/libgit2/deps/zlib/trees.c	/^struct static_tree_desc_s {$/;"	s	file:
stats	extern/libgit2/src/pack-objects.c	/^	git_indexer_progress *stats;$/;"	m	struct:pack_write_context	typeref:typename:git_indexer_progress *	file:
stats	extern/libgit2/src/remote.h	/^	git_indexer_progress stats;$/;"	m	struct:git_remote	typeref:typename:git_indexer_progress
stats	extern/libgit2/src/transports/local.c	/^	git_indexer_progress *stats;$/;"	m	struct:foreach_data	typeref:typename:git_indexer_progress *	file:
stats	extern/libgit2/src/transports/smart_protocol.c	/^	git_indexer_progress *stats;$/;"	m	struct:network_packetsize_payload	typeref:typename:git_indexer_progress *	file:
status	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xml_parse_status status;$/;"	m	struct:pugi::xml_parse_result	typeref:typename:xml_parse_status
status	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    int status;$/;"	m	struct:__anon09af45a71808	typeref:typename:int
status	extern/libgit2/deps/zlib/deflate.h	/^    int   status;        \/* as the name implies *\/$/;"	m	struct:internal_state	typeref:typename:int
status	extern/libgit2/include/git2/diff.h	/^	git_delta_t   status;$/;"	m	struct:__anon72022fed0508	typeref:typename:git_delta_t
status	extern/libgit2/include/git2/status.h	/^	git_status_t status;$/;"	m	struct:__anon1764a4980508	typeref:typename:git_status_t
status	extern/libgit2/src/push.h	/^	git_vector status;$/;"	m	struct:git_push	typeref:typename:git_vector
status	extern/libgit2/src/status.c	/^	unsigned int status;$/;"	m	struct:status_file_info	typeref:typename:unsigned int	file:
status	extern/libgit2/src/transports/smart.h	/^	enum git_ack_status status;$/;"	m	struct:__anoncc6f59690408	typeref:enum:git_ack_status
status	extern/libgit2/tests/clar.c	/^	enum cl_test_status status;$/;"	m	struct:clar_report	typeref:enum:cl_test_status	file:
status	extern/libgit2/tests/diff/rename.c	/^	unsigned int *status;$/;"	m	struct:rename_expected	typeref:typename:unsigned int *	file:
status	extern/libgit2/tests/merge/merge_helpers.h	/^	unsigned int status;$/;"	m	struct:merge_index_with_status	typeref:typename:unsigned int
status	extern/libgit2/tests/status/renames.c	/^	git_status_t status;$/;"	m	struct:status_entry	typeref:typename:git_status_t	file:
status	extern/libgit2/tests/status/status_helpers.h	/^	unsigned int status;$/;"	m	struct:__anon9cf2f0870208	typeref:typename:unsigned int
status_append_invalid_root	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_append_invalid_root,    \/\/ Unable to append nodes since root type is not node_e/;"	e	enum:pugi::xml_parse_status
status_bad_attribute	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_bad_attribute,        \/\/ Parsing error occurred while parsing element attribute$/;"	e	enum:pugi::xml_parse_status
status_bad_cdata	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_bad_cdata,            \/\/ Parsing error occurred while parsing CDATA section$/;"	e	enum:pugi::xml_parse_status
status_bad_comment	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_bad_comment,            \/\/ Parsing error occurred while parsing comment$/;"	e	enum:pugi::xml_parse_status
status_bad_doctype	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_bad_doctype,            \/\/ Parsing error occurred while parsing document type d/;"	e	enum:pugi::xml_parse_status
status_bad_end_element	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_bad_end_element,        \/\/ Parsing error occurred while parsing end element tag$/;"	e	enum:pugi::xml_parse_status
status_bad_pcdata	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_bad_pcdata,            \/\/ Parsing error occurred while parsing PCDATA section$/;"	e	enum:pugi::xml_parse_status
status_bad_pi	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_bad_pi,                \/\/ Parsing error occurred while parsing document declara/;"	e	enum:pugi::xml_parse_status
status_bad_start_element	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_bad_start_element,    \/\/ Parsing error occurred while parsing start element tag$/;"	e	enum:pugi::xml_parse_status
status_code	extern/libgit2/deps/http-parser/http_parser.h	/^  unsigned short status_code; \/* responses only *\/$/;"	m	struct:http_parser	typeref:typename:unsigned short
status_collect	extern/libgit2/src/status.c	/^static int status_collect($/;"	f	typeref:typename:int	file:
status_compute	extern/libgit2/src/status.c	/^static git_status_t status_compute($/;"	f	typeref:typename:git_status_t	file:
status_counts_init	extern/libgit2/tests/status/status_helpers.h	/^#define status_counts_init(/;"	d
status_end_element_mismatch	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_end_element_mismatch,\/\/ There was a mismatch of start-end tags (closing tag had/;"	e	enum:pugi::xml_parse_status
status_entry	extern/libgit2/tests/status/renames.c	/^struct status_entry {$/;"	s	file:
status_entry_cmp	extern/libgit2/src/status.c	/^static int status_entry_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
status_entry_cmp_base	extern/libgit2/src/status.c	/^GIT_INLINE(int) status_entry_cmp_base($/;"	f	typeref:typename:int
status_entry_counts	extern/libgit2/tests/status/status_helpers.h	/^} status_entry_counts;$/;"	t	typeref:struct:__anon9cf2f0870108
status_entry_icmp	extern/libgit2/src/status.c	/^static int status_entry_icmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
status_entry_single	extern/libgit2/tests/status/status_helpers.h	/^} status_entry_single;$/;"	t	typeref:struct:__anon9cf2f0870208
status_file_info	extern/libgit2/src/status.c	/^struct status_file_info {$/;"	s	file:
status_file_not_found	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_file_not_found,        \/\/ File was not found during load_file()$/;"	e	enum:pugi::xml_parse_status
status_internal_error	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_internal_error,        \/\/ Internal error occurred$/;"	e	enum:pugi::xml_parse_status
status_io_error	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_io_error,            \/\/ Error reading from file\/stream$/;"	e	enum:pugi::xml_parse_status
status_is_included	extern/libgit2/src/status.c	/^static bool status_is_included($/;"	f	typeref:typename:bool	file:
status_no_document_element	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_no_document_element    \/\/ Parsing resulted in a document without element nodes$/;"	e	enum:pugi::xml_parse_status
status_ok	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_ok = 0,                \/\/ No error$/;"	e	enum:pugi::xml_parse_status
status_out_of_memory	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_out_of_memory,        \/\/ Could not allocate memory$/;"	e	enum:pugi::xml_parse_status
status_paths	extern/libgit2/tests/iterator/workdir.c	/^static const char *status_paths[] = {$/;"	v	typeref:typename:const char * []	file:
status_paths_range_0	extern/libgit2/tests/iterator/workdir.c	/^static const char *status_paths_range_0[] = {$/;"	v	typeref:typename:const char * []	file:
status_paths_range_1	extern/libgit2/tests/iterator/workdir.c	/^static const char *status_paths_range_1[] = {$/;"	v	typeref:typename:const char * []	file:
status_paths_range_3	extern/libgit2/tests/iterator/workdir.c	/^static const char *status_paths_range_3[] = {$/;"	v	typeref:typename:const char * []	file:
status_paths_range_4	extern/libgit2/tests/iterator/workdir.c	/^static const char *status_paths_range_4[] = {$/;"	v	typeref:typename:const char * []	file:
status_paths_range_5	extern/libgit2/tests/iterator/workdir.c	/^static const char *status_paths_range_5[] = {$/;"	v	typeref:typename:const char * []	file:
status_unrecognized_tag	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        status_unrecognized_tag,    \/\/ Parser could not determine tag type$/;"	e	enum:pugi::xml_parse_status
status_validate_options	extern/libgit2/src/status.c	/^static int status_validate_options(const git_status_options *opts)$/;"	f	typeref:typename:int	file:
statuses	extern/libgit2/tests/diff/diff_helpers.h	/^	int *statuses;$/;"	m	struct:__anona765b0910108	typeref:typename:int *
statuses	extern/libgit2/tests/online/push_util.h	/^	git_vector statuses;$/;"	m	struct:__anon56a1c92f0208	typeref:typename:git_vector
statuses	extern/libgit2/tests/submodule/status.c	/^	int *statuses;$/;"	m	struct:__anon75f7307c0108	typeref:typename:int *	file:
statusopt	extern/libgit2/examples/status.c	/^	git_status_options statusopt;$/;"	m	struct:opts	typeref:typename:git_status_options	file:
std	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^                                                                                                /;"	n	file:
std	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^namespace std$/;"	n
std_alloc	extern/libgit2/tests/buf/oom.c	/^static git_allocator std_alloc;$/;"	v	typeref:typename:git_allocator	file:
stdalloc__calloc	extern/libgit2/src/allocators/stdalloc.c	/^static void *stdalloc__calloc(size_t nelem, size_t elsize, const char *file, int line)$/;"	f	typeref:typename:void *	file:
stdalloc__free	extern/libgit2/src/allocators/stdalloc.c	/^static void stdalloc__free(void *ptr)$/;"	f	typeref:typename:void	file:
stdalloc__malloc	extern/libgit2/src/allocators/stdalloc.c	/^static void *stdalloc__malloc(size_t len, const char *file, int line)$/;"	f	typeref:typename:void *	file:
stdalloc__mallocarray	extern/libgit2/src/allocators/stdalloc.c	/^static void *stdalloc__mallocarray(size_t nelem, size_t elsize, const char *file, int line)$/;"	f	typeref:typename:void *	file:
stdalloc__realloc	extern/libgit2/src/allocators/stdalloc.c	/^static void *stdalloc__realloc(void *ptr, size_t size, const char *file, int line)$/;"	f	typeref:typename:void *	file:
stdalloc__reallocarray	extern/libgit2/src/allocators/stdalloc.c	/^static void *stdalloc__reallocarray(void *ptr, size_t nelem, size_t elsize, const char *file, in/;"	f	typeref:typename:void *	file:
stdalloc__strdup	extern/libgit2/src/allocators/stdalloc.c	/^static char *stdalloc__strdup(const char *str, const char *file, int line)$/;"	f	typeref:typename:char *	file:
stdalloc__strndup	extern/libgit2/src/allocators/stdalloc.c	/^static char *stdalloc__strndup(const char *str, size_t n, const char *file, int line)$/;"	f	typeref:typename:char *	file:
stdalloc__substrdup	extern/libgit2/src/allocators/stdalloc.c	/^static char *stdalloc__substrdup(const char *start, size_t n, const char *file, int line)$/;"	f	typeref:typename:char *	file:
step_do	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		template <class T> xpath_node_set_raw step_do(const xpath_context& c, const xpath_stack& stack/;"	f	class:xpath_ast_node	typeref:typename:xpath_node_set_raw	file:
step_fill	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		template <class T> void step_fill(xpath_node_set_raw& ns, const xpath_node& xn, xpath_allocato/;"	f	class:xpath_ast_node	typeref:typename:void	file:
step_fill	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		template <class T> void step_fill(xpath_node_set_raw& ns, xml_attribute_struct* a, xml_node_st/;"	f	class:xpath_ast_node	typeref:typename:void	file:
step_fill	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		template <class T> void step_fill(xpath_node_set_raw& ns, xml_node_struct* n, xpath_allocator*/;"	f	class:xpath_ast_node	typeref:typename:void	file:
step_push	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool step_push(xpath_node_set_raw& ns, xml_attribute_struct* a, xml_node_struct* parent, xpath/;"	f	class:xpath_ast_node	typeref:typename:bool	file:
step_push	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool step_push(xpath_node_set_raw& ns, xml_node_struct* n, xpath_allocator* alloc)$/;"	f	class:xpath_ast_node	typeref:typename:bool	file:
still_interesting	extern/libgit2/src/revwalk.c	/^static int still_interesting(git_commit_list *list, int64_t time, int slop)$/;"	f	typeref:typename:int	file:
stop	extern/libgit2/tests/object/tree/walk.c	/^	const char *stop;$/;"	m	struct:treewalk_skip_data	typeref:typename:const char *	file:
storage	extern/libgit2/src/tsort.c	/^	void **storage;$/;"	m	struct:tsort_store	typeref:typename:void **	file:
store_common	extern/libgit2/src/transports/smart_protocol.c	/^static int store_common(transport_smart *t)$/;"	f	typeref:typename:int	file:
store_delta	extern/libgit2/src/indexer.c	/^static int store_delta(git_indexer *idx)$/;"	f	typeref:typename:int	file:
store_object	extern/libgit2/src/indexer.c	/^static int store_object(git_indexer *idx)$/;"	f	typeref:typename:int	file:
store_refs	extern/libgit2/src/transports/local.c	/^static int store_refs(transport_local *t)$/;"	f	typeref:typename:int	file:
str	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  const pcre_uchar *str;$/;"	m	struct:jit_arguments	typeref:typename:const pcre_uchar *	file:
str	extern/libgit2/src/object.c	/^	const char	*str;	\/* type name string *\/$/;"	m	struct:__anon4e5bf2450108	typeref:typename:const char *	file:
str	extern/libgit2/src/patch_parse.c	/^	const char *str;$/;"	m	struct:__anonadbd87d80308	typeref:typename:const char *	file:
str0	extern/libgit2/tests/repo/pathspec.c	/^static char *str0[] = { "*_file", "new_file", "garbage" };$/;"	v	typeref:typename:char * []	file:
str1	extern/libgit2/tests/repo/pathspec.c	/^static char *str1[] = { "*_FILE", "NEW_FILE", "GARBAGE" };$/;"	v	typeref:typename:char * []	file:
str2	extern/libgit2/tests/repo/pathspec.c	/^static char *str2[] = { "staged_*" };$/;"	v	typeref:typename:char * []	file:
str3	extern/libgit2/tests/repo/pathspec.c	/^static char *str3[] = { "!subdir", "*_file", "new_file" };$/;"	v	typeref:typename:char * []	file:
str4	extern/libgit2/tests/repo/pathspec.c	/^static char *str4[] = { "*" };$/;"	v	typeref:typename:char * []	file:
str5	extern/libgit2/tests/repo/pathspec.c	/^static char *str5[] = { "S*" };$/;"	v	typeref:typename:char * []	file:
str_match	extern/libgit2/include/git2/config.h	/^	const char *str_match;$/;"	m	struct:__anonefb3184a0308	typeref:typename:const char *
str_oid	extern/libgit2/tests/core/oid.c	/^const char *str_oid = "ae90f12eea699729ed24555e40b9fd669da12a12";$/;"	v	typeref:typename:const char *
str_oid_m	extern/libgit2/tests/core/oid.c	/^const char *str_oid_m = "ae90f12eea699729ed24555e40b9fd669da12a12THIS IS EXTRA TEXT THAT SHOULD /;"	v	typeref:typename:const char *
str_oid_p	extern/libgit2/tests/core/oid.c	/^const char *str_oid_p = "ae90f12eea699729ed";$/;"	v	typeref:typename:const char *
stransport_certificate	extern/libgit2/src/streams/stransport.c	/^static int stransport_certificate(git_cert **out, git_stream *stream)$/;"	f	typeref:typename:int	file:
stransport_close	extern/libgit2/src/streams/stransport.c	/^static int stransport_close(git_stream *stream)$/;"	f	typeref:typename:int	file:
stransport_connect	extern/libgit2/src/streams/stransport.c	/^static int stransport_connect(git_stream *stream)$/;"	f	typeref:typename:int	file:
stransport_error	extern/libgit2/src/streams/stransport.c	/^static int stransport_error(OSStatus ret)$/;"	f	typeref:typename:int	file:
stransport_free	extern/libgit2/src/streams/stransport.c	/^static void stransport_free(git_stream *stream)$/;"	f	typeref:typename:void	file:
stransport_read	extern/libgit2/src/streams/stransport.c	/^static ssize_t stransport_read(git_stream *stream, void *data, size_t len)$/;"	f	typeref:typename:ssize_t	file:
stransport_set_proxy	extern/libgit2/src/streams/stransport.c	/^static int stransport_set_proxy($/;"	f	typeref:typename:int	file:
stransport_stream	extern/libgit2/src/streams/stransport.c	/^} stransport_stream;$/;"	t	typeref:struct:__anonc5fef1dc0108	file:
stransport_wrap	extern/libgit2/src/streams/stransport.c	/^static int stransport_wrap($/;"	f	typeref:typename:int	file:
stransport_write	extern/libgit2/src/streams/stransport.c	/^static ssize_t stransport_write(git_stream *stream, const char *data, size_t len, int flags)$/;"	f	typeref:typename:ssize_t	file:
strategy	extern/libgit2/deps/zlib/deflate.h	/^    int strategy; \/* favor or force Huffman coding*\/$/;"	m	struct:internal_state	typeref:typename:int
strategy	extern/libgit2/deps/zlib/gzguts.h	/^    int strategy;           \/* compression strategy *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:int
strategy	extern/libgit2/src/checkout.c	/^	unsigned int strategy;$/;"	m	struct:__anonbac5d6240208	typeref:typename:unsigned int	file:
strcasecmp	extern/libgit2/examples/common.h	/^#define strcasecmp /;"	d
strcasecmp	extern/libgit2/src/win32/msvc-compat.h	/^#define strcasecmp(/;"	d
strcasecmp	extern/libgit2/tests/clar.c	/^#		define strcasecmp(/;"	d	file:
strcomp	extern/libgit2/src/diff.h	/^	int (*strcomp)(const char *, const char *);$/;"	m	struct:git_diff	typeref:typename:int (*)(const char *,const char *)
strcomp	extern/libgit2/src/diff_print.c	/^	int (*strcomp)(const char *, const char *);$/;"	m	struct:__anoncda507930108	typeref:typename:int (*)(const char *,const char *)	file:
strcomp	extern/libgit2/src/iterator.h	/^	int (*strcomp)(const char *a, const char *b);$/;"	m	struct:git_iterator	typeref:typename:int (*)(const char * a,const char * b)
strcomp	extern/libgit2/src/pathspec.c	/^	int (*strcomp)(const char *, const char *);$/;"	m	struct:pathspec_match_context	typeref:typename:int (*)(const char *,const char *)	file:
strconv_attribute_impl	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<typename opt_escape> struct strconv_attribute_impl$/;"	s	file:
strconv_attribute_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    typedef char_t* (* strconv_attribute_t)(char_t*, char_t);$/;"	t	typeref:typename:char_t * (*)(char_t *,char_t)	file:
strconv_cdata	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN char_t* strconv_cdata(char_t* s, char_t endch) {$/;"	f	typeref:typename:PUGI__FN char_t *
strconv_comment	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN char_t* strconv_comment(char_t* s, char_t endch) {$/;"	f	typeref:typename:PUGI__FN char_t *
strconv_escape	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN char_t* strconv_escape(char_t* s, gap& g) {$/;"	f	typeref:typename:PUGI__FN char_t *
strconv_pcdata_impl	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<typename opt_trim, typename opt_eol, typename opt_escape> struct strconv_pcdata_imp/;"	s	file:
strconv_pcdata_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    typedef char_t* (* strconv_pcdata_t)(char_t*);$/;"	t	typeref:typename:char_t * (*)(char_t *)	file:
strcpy_insitu	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool strcpy_insitu(String& dest, Header& header, uintptr_t header_mask, const char_/;"	f	typeref:typename:PUGI__FN bool
strcpy_insitu_allow	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    inline bool strcpy_insitu_allow(size_t length, const Header& header, uintptr_t header_mask, /;"	f	typeref:typename:bool
strdup	extern/libgit2/tests/clar.c	/^#		define strdup(/;"	d	file:
stream	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^            std::ostream& stream;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:std::ostream &
stream	extern/libgit2/include/git2/sys/filter.h	/^	git_filter_stream_fn   stream;$/;"	m	struct:git_filter	typeref:typename:git_filter_stream_fn
stream	extern/libgit2/src/indexer.c	/^	git_packfile_stream stream;$/;"	m	struct:git_indexer	typeref:typename:git_packfile_stream	file:
stream	extern/libgit2/src/odb.c	/^	git_odb_stream stream;$/;"	m	struct:__anonfbf77e230208	typeref:typename:git_odb_stream	file:
stream	extern/libgit2/src/odb_loose.c	/^	git_odb_stream stream;$/;"	m	struct:__anon81c02f840208	typeref:typename:git_odb_stream	file:
stream	extern/libgit2/src/odb_loose.c	/^	git_odb_stream stream;$/;"	m	struct:__anon81c02f840308	typeref:typename:git_odb_stream	file:
stream	extern/libgit2/src/transports/http.c	/^	git_stream *stream;$/;"	m	struct:__anon0458035d0208	typeref:typename:git_stream *	file:
stream	extern/libgit2/src/transports/smart_protocol.c	/^	git_smart_subtransport_stream *stream;$/;"	m	struct:push_packbuilder_payload	typeref:typename:git_smart_subtransport_stream *	file:
stream	extern/libgit2/tests/odb/streamwrite.c	/^static git_odb_stream *stream;$/;"	v	typeref:typename:git_odb_stream *	file:
stream_connect	extern/libgit2/src/transports/http.c	/^static int stream_connect($/;"	f	typeref:typename:int	file:
stream_list_free	extern/libgit2/src/filter.c	/^void stream_list_free(git_vector *streams)$/;"	f	typeref:typename:void
stream_list_init	extern/libgit2/src/filter.c	/^static int stream_list_init($/;"	f	typeref:typename:int	file:
stream_registration_cpy	extern/libgit2/src/streams/registry.c	/^GIT_INLINE(void) stream_registration_cpy($/;"	f	typeref:typename:void
stream_registry	extern/libgit2/src/streams/registry.c	/^static struct stream_registry stream_registry;$/;"	v	typeref:struct:stream_registry	file:
stream_registry	extern/libgit2/src/streams/registry.c	/^struct stream_registry {$/;"	s	file:
stream_thunk	extern/libgit2/src/transports/smart_protocol.c	/^static int stream_thunk(void *buf, size_t size, void *data)$/;"	f	typeref:typename:int	file:
streaming_write	extern/libgit2/tests/object/raw/write.c	/^static void streaming_write(git_oid *oid, git_odb *odb, git_rawobj *raw)$/;"	f	typeref:typename:void	file:
strequal	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool strequal(const char_t* src, const char_t* dst) {$/;"	f	typeref:typename:PUGI__FN bool
strequal_ignore_eol	extern/libgit2/tests/reset/hard.c	/^static int strequal_ignore_eol(const char *exp, const char *str)$/;"	f	typeref:typename:int	file:
strequalrange	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool strequalrange(const char_t* lhs, const char_t* rhs, size_t count) {$/;"	f	typeref:typename:PUGI__FN bool
strictConversion	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^	strictConversion = 0,$/;"	e	enum:__anonce5e58f80203	file:
strict_comparison	extern/libgit2/src/vector.c	/^static int strict_comparison(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			const char_t* string;$/;"	m	union:xpath_ast_node::__anonfceed08a070a	typeref:typename:const char_t *	file:
string	extern/libgit2/src/refspec.h	/^	char *string;$/;"	m	struct:git_refspec	typeref:typename:char *
string	extern/libgit2/tests/commit/parse.c	/^	const char *string;$/;"	m	struct:__anond44356cc0208	typeref:typename:const char *	file:
string	extern/libgit2/tests/commit/parse.c	/^	const char *string;$/;"	m	struct:__anond44356cc0308	typeref:typename:const char *	file:
string_H	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_H[] =    {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PL	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PL[] =   {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PLl	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PLl[] =  {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PLu	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PLu[] =  {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PNd	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PNd[]  = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PXan	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PXan[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PXps	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PXps[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PXsp	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PXsp[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PXwd	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PXwd[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_h	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_h[] =    {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_mailmap	extern/libgit2/tests/mailmap/parsing.c	/^static const char string_mailmap[] =$/;"	v	typeref:typename:const char[]	file:
string_pL	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pL[] =   {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pLl	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pLl[] =  {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pLu	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pLu[] =  {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pNd	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pNd[]  = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pXan	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pXan[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pXps	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pXps[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pXsp	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pXsp[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pXwd	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pXwd[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_t	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    typedef std::basic_string<PUGIXML_CHAR, std::char_traits<PUGIXML_CHAR>, std::allocator<PUGIX/;"	t	namespace:pugi	typeref:typename:std::basic_string<PUGIXML_CHAR,std::char_traits<PUGIXML_CHAR>,std::allocator<PUGIXML_CHAR>>
string_to_integer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<typename U> PUGI__FN PUGI__UNSIGNED_OVERFLOW U string_to_integer(const char_t* valu/;"	f	typeref:typename:PUGI__FN PUGI__UNSIGNED_OVERFLOW U
string_value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_string string_value(const xpath_node& na, xpath_allocator* alloc)$/;"	f	typeref:typename:PUGI__FN xpath_string
stringify	extern/NamedType/catch.hpp	/^        inline std::string stringify( NSString* nsstring ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
stringify	extern/NamedType/catch.hpp	/^        std::string stringify(const T& e) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
stringify	extern/OpenXLSX/tests/catch/catch.hpp	/^        inline std::string stringify( NSString* nsstring ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
stringify	extern/OpenXLSX/tests/catch/catch.hpp	/^        std::string stringify(const T& e) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
strings	extern/libgit2/include/git2/strarray.h	/^	char **strings;$/;"	m	struct:git_strarray	typeref:typename:char **
strip_comments	extern/libgit2/src/config_parse.c	/^static int strip_comments(char *line, int in_quotes)$/;"	f	typeref:typename:int	file:
strip_cr_from_buf	extern/libgit2/tests/clar_libgit2.c	/^static size_t strip_cr_from_buf(char *start, size_t len)$/;"	f	typeref:typename:size_t	file:
strip_spaces	extern/libgit2/src/diff.c	/^static void strip_spaces(git_buf *buf)$/;"	f	typeref:typename:void	file:
strlen	extern/libgit2/deps/pcre/pcre_internal.h	/^#define strlen(/;"	d
strlength	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN size_t strlength(const char_t* s) {$/;"	f	typeref:typename:PUGI__NS_END PUGI__NS_BEGIN PUGI__FN size_t
strlength_wide	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN size_t strlength_wide(const wchar_t* s) {$/;"	f	typeref:typename:PUGI__FN size_t
strm	extern/libgit2/deps/zlib/deflate.h	/^    z_streamp strm;      \/* pointer back to this zlib stream *\/$/;"	m	struct:internal_state	typeref:typename:z_streamp
strm	extern/libgit2/deps/zlib/gzguts.h	/^    z_stream strm;          \/* stream structure in-place (not a pointer) *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:z_stream
strm	extern/libgit2/deps/zlib/inflate.h	/^    z_streamp strm;             \/* pointer back to this zlib stream *\/$/;"	m	struct:inflate_state	typeref:typename:z_streamp
strncasecmp	extern/libgit2/src/win32/msvc-compat.h	/^#define strncasecmp(/;"	d
strncmp	extern/libgit2/deps/pcre/pcre_internal.h	/^#define strncmp(/;"	d
strncomp	extern/libgit2/src/diff.h	/^	int (*strncomp)(const char *, const char *, size_t);$/;"	m	struct:git_diff	typeref:typename:int (*)(const char *,const char *,size_t)
strncomp	extern/libgit2/src/iterator.h	/^	int (*strncomp)(const char *a, const char *b, size_t n);$/;"	m	struct:git_iterator	typeref:typename:int (*)(const char * a,const char * b,size_t n)
strncomp	extern/libgit2/src/pathspec.c	/^	int (*strncomp)(const char *, const char *, size_t);$/;"	m	struct:pathspec_match_context	typeref:typename:int (*)(const char *,const char *,size_t)	file:
strncpy	extern/libgit2/tests/clar.c	/^#			define strncpy(/;"	d	file:
strongA	extern/NamedType/main.cpp	/^    StrongA strongA(A(42));$/;"	v	typeref:typename:StrongA
strstart	extern/libgit2/deps/zlib/deflate.h	/^    uInt strstart;               \/* start of string to insert *\/$/;"	m	struct:internal_state	typeref:typename:uInt
stub_list	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct stub_list {$/;"	s	file:
stub_list	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} stub_list;$/;"	t	typeref:struct:stub_list	file:
stubs	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  stub_list *stubs;$/;"	m	struct:compiler_common	typeref:typename:stub_list *	file:
study_data	extern/libgit2/deps/pcre/pcre.h	/^  void *study_data;               \/* Opaque data from pcre_study() *\/$/;"	m	struct:pcre16_extra	typeref:typename:void *
study_data	extern/libgit2/deps/pcre/pcre.h	/^  void *study_data;               \/* Opaque data from pcre_study() *\/$/;"	m	struct:pcre32_extra	typeref:typename:void *
study_data	extern/libgit2/deps/pcre/pcre.h	/^  void *study_data;               \/* Opaque data from pcre_study() *\/$/;"	m	struct:pcre_extra	typeref:typename:void *
style	extern/libgit2/src/xdiff/xdiff.h	/^	int style;$/;"	m	struct:s_xmparam	typeref:typename:int
sub	extern/libgit2/tests/core/dirent.c	/^	char *sub;		\/* sub-directory name *\/$/;"	m	struct:walk_data	typeref:typename:char *	file:
sub	extern/libgit2/tests/core/dirent.c	/^static walk_data sub = {$/;"	v	typeref:typename:walk_data	file:
sub_end_of_word	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar sub_end_of_word[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
sub_names	extern/libgit2/tests/core/dirent.c	/^static name_data sub_names[] = {$/;"	v	typeref:typename:name_data[]	file:
sub_slash	extern/libgit2/tests/core/dirent.c	/^static walk_data sub_slash = {$/;"	v	typeref:typename:walk_data	file:
sub_start_of_word	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar sub_start_of_word[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
subcmd	extern/libgit2/examples/remote.c	/^enum subcmd {$/;"	g	file:
subcmd	extern/libgit2/examples/stash.c	/^enum subcmd {$/;"	g	file:
subcmd_add	extern/libgit2/examples/remote.c	/^	subcmd_add,$/;"	e	enum:subcmd	file:
subcmd_remove	extern/libgit2/examples/remote.c	/^	subcmd_remove,$/;"	e	enum:subcmd	file:
subcmd_rename	extern/libgit2/examples/remote.c	/^	subcmd_rename,$/;"	e	enum:subcmd	file:
subcmd_seturl	extern/libgit2/examples/remote.c	/^	subcmd_seturl,$/;"	e	enum:subcmd	file:
subcmd_show	extern/libgit2/examples/remote.c	/^	subcmd_show,$/;"	e	enum:subcmd	file:
subject	extern/libgit2/deps/pcre/pcre.h	/^  PCRE_SPTR    subject;           \/* The subject being matched *\/$/;"	m	struct:pcre_callout_block	typeref:typename:PCRE_SPTR
subject	extern/libgit2/deps/pcre/pcre.h	/^  PCRE_SPTR16  subject;           \/* The subject being matched *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:PCRE_SPTR16
subject	extern/libgit2/deps/pcre/pcre.h	/^  PCRE_SPTR32  subject;           \/* The subject being matched *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:PCRE_SPTR32
subject_length	extern/libgit2/deps/pcre/pcre.h	/^  int          subject_length;    \/* The length of the subject *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
subject_length	extern/libgit2/deps/pcre/pcre.h	/^  int          subject_length;    \/* The length of the subject *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
subject_length	extern/libgit2/deps/pcre/pcre.h	/^  int          subject_length;    \/* The length of the subject *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
subject_position	extern/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR subject_position;   \/* Position at start of recursion *\/$/;"	m	struct:recursion_info	typeref:typename:PCRE_PUCHAR
subject_position	extern/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR subject_position;$/;"	m	struct:dfa_recursion_info	typeref:typename:PCRE_PUCHAR
submodule	extern/libgit2/src/checkout.c	/^		submodule:1;$/;"	m	struct:__anonbac5d6240308	typeref:typename:int:1	file:
submodule_alloc	extern/libgit2/src/submodule.c	/^static int submodule_alloc($/;"	f	typeref:typename:int	file:
submodule_cache	extern/libgit2/src/repository.h	/^	git_strmap *submodule_cache;$/;"	m	struct:git_repository	typeref:typename:git_strmap *
submodule_cmp	extern/libgit2/src/submodule.c	/^static int submodule_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
submodule_config_error	extern/libgit2/src/submodule.c	/^static int submodule_config_error(const char *property, const char *value)$/;"	f	typeref:typename:int	file:
submodule_config_key_trunc_puts	extern/libgit2/src/submodule.c	/^static int submodule_config_key_trunc_puts(git_buf *key, const char *suffix)$/;"	f	typeref:typename:int	file:
submodule_copy_oid_maybe	extern/libgit2/src/submodule.c	/^static void submodule_copy_oid_maybe($/;"	f	typeref:typename:void	file:
submodule_expectations	extern/libgit2/tests/submodule/status.c	/^} submodule_expectations;$/;"	t	typeref:struct:__anon75f7307c0108	file:
submodule_free_dup	extern/libgit2/src/submodule.c	/^static void submodule_free_dup(void *sm)$/;"	f	typeref:typename:void	file:
submodule_get_index_status	extern/libgit2/src/submodule.c	/^static void submodule_get_index_status(unsigned int *status, git_submodule *sm)$/;"	f	typeref:typename:void	file:
submodule_get_or_create	extern/libgit2/src/submodule.c	/^static int submodule_get_or_create(git_submodule **out, git_repository *repo, git_strmap *map, c/;"	f	typeref:typename:int	file:
submodule_get_wd_status	extern/libgit2/src/submodule.c	/^static void submodule_get_wd_status($/;"	f	typeref:typename:void	file:
submodule_is_config_only	extern/libgit2/src/checkout.c	/^static bool submodule_is_config_only($/;"	f	typeref:typename:bool	file:
submodule_load_each	extern/libgit2/src/submodule.c	/^static int submodule_load_each(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
submodule_load_from_wd_lite	extern/libgit2/src/submodule.c	/^static int submodule_load_from_wd_lite(git_submodule *sm)$/;"	f	typeref:typename:int	file:
submodule_read_config	extern/libgit2/src/submodule.c	/^static int submodule_read_config(git_submodule *sm, git_config *cfg)$/;"	f	typeref:typename:int	file:
submodule_release	extern/libgit2/src/submodule.c	/^static void submodule_release(git_submodule *sm)$/;"	f	typeref:typename:void	file:
submodule_repo_create	extern/libgit2/src/submodule.c	/^static int submodule_repo_create($/;"	f	typeref:typename:int	file:
submodule_repo_init	extern/libgit2/src/submodule.c	/^static int submodule_repo_init($/;"	f	typeref:typename:int	file:
submodule_set_lookup_error	extern/libgit2/src/submodule.c	/^static void submodule_set_lookup_error(int error, const char *name)$/;"	f	typeref:typename:void	file:
submodule_update_from_head_data	extern/libgit2/src/submodule.c	/^static void submodule_update_from_head_data($/;"	f	typeref:typename:void	file:
submodule_update_from_index_entry	extern/libgit2/src/submodule.c	/^static void submodule_update_from_index_entry($/;"	f	typeref:typename:void	file:
submodule_update_head	extern/libgit2/src/submodule.c	/^static int submodule_update_head(git_submodule *submodule)$/;"	f	typeref:typename:int	file:
submodule_update_index	extern/libgit2/src/submodule.c	/^static int submodule_update_index(git_submodule *sm)$/;"	f	typeref:typename:int	file:
submodules_from_head	extern/libgit2/src/submodule.c	/^static int submodules_from_head(git_strmap *map, git_tree *head, git_config *cfg)$/;"	f	typeref:typename:int	file:
submodules_from_index	extern/libgit2/src/submodule.c	/^static int submodules_from_index(git_strmap *map, git_index *idx, git_config *cfg)$/;"	f	typeref:typename:int	file:
subpath_len	extern/libgit2/src/tree.c	/^static size_t subpath_len(const char *path)$/;"	f	typeref:typename:size_t	file:
substitutes	extern/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar *substitutes[] = {$/;"	v	typeref:typename:const pcre_uchar * []	file:
subtransport	extern/libgit2/include/git2/sys/transport.h	/^	git_smart_subtransport *subtransport; \/**< The owning subtransport *\/$/;"	m	struct:git_smart_subtransport_stream	typeref:typename:git_smart_subtransport *
succeed_certificate_check	extern/libgit2/tests/online/clone.c	/^static int succeed_certificate_check(git_cert *cert, int valid, const char *host, void *payload)$/;"	f	typeref:typename:int	file:
success	extern/libgit2/tests/online/push_util.h	/^	int success;$/;"	m	struct:__anon56a1c92f0408	typeref:typename:int
suite	extern/libgit2/tests/clar.c	/^	const char *suite;$/;"	m	struct:clar_report	typeref:typename:const char *	file:
suite	extern/libgit2/tests/generate.py	/^    suite = TestSuite(path, output)$/;"	v
suite_count	extern/libgit2/tests/generate.py	/^    def suite_count(self):$/;"	m	class:TestSuite
suite_idx	extern/libgit2/tests/clar.c	/^	size_t suite_idx;$/;"	m	struct:clar_explicit	typeref:typename:size_t	file:
suites_ran	extern/libgit2/tests/clar.c	/^	int suites_ran;$/;"	m	struct:__anonab24499b0108	typeref:typename:int	file:
sum	extern/libgit2/tests/clar_libgit2_timer.h	/^	double sum;$/;"	m	struct:cl_perf_timer	typeref:typename:double
sum	extern/libgit2/tests/perf/helper__perf__timer.h	/^	LARGE_INTEGER sum;$/;"	m	struct:perf__timer	typeref:typename:LARGE_INTEGER
sum	extern/libgit2/tests/perf/helper__perf__timer.h	/^	uint32_t sum;$/;"	m	struct:perf__timer	typeref:typename:uint32_t
summary	extern/libgit2/include/git2/diff.h	/^	const char *summary;$/;"	m	struct:__anon72022fed1308	typeref:typename:const char *
summary	extern/libgit2/src/commit.h	/^	char *summary;$/;"	m	struct:git_commit	typeref:typename:char *
summary	extern/libgit2/tests/clar.c	/^	struct clar_summary *summary;$/;"	m	struct:__anonab24499b0108	typeref:struct:clar_summary *	file:
summary_filename	extern/libgit2/tests/clar.c	/^	char *summary_filename;$/;"	m	struct:__anonab24499b0108	typeref:typename:char *	file:
supports_ipv6	extern/libgit2/tests/core/posix.c	/^static bool supports_ipv6(void)$/;"	f	typeref:typename:bool	file:
supports_unicode	extern/libgit2/deps/ntlmclient/ntlm.c	/^static bool supports_unicode(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
suseconds_t	extern/libgit2/src/win32/win32-compat.h	/^typedef long suseconds_t;$/;"	t	typeref:typename:long
suspect	extern/libgit2/src/blame.h	/^	git_blame__origin *suspect;$/;"	m	struct:git_blame__entry	typeref:typename:git_blame__origin *
swap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename T> void swap(T& lhs, T& rhs)$/;"	f	typeref:typename:void
swap	extern/libgit2/src/util.c	/^static void swap(uint8_t *a, uint8_t *b, size_t elsize)$/;"	f	typeref:typename:void	file:
swap_uint16	extern/libgit2/deps/pcre/pcre_byte_order.c	/^swap_uint16(pcre_uint16 value)$/;"	f	typeref:typename:pcre_uint16	file:
swap_uint32	extern/libgit2/deps/pcre/pcre_byte_order.c	/^swap_uint32(pcre_uint32 value)$/;"	f	typeref:typename:pcre_uint32	file:
symbol	extern/NamedType/catch.hpp	/^    static std::string symbol() { return "a"; }$/;"	f	struct:ratio_string	typeref:typename:std::string
symbol	extern/NamedType/catch.hpp	/^    static std::string symbol() { return "f"; }$/;"	f	struct:ratio_string	typeref:typename:std::string
symbol	extern/NamedType/catch.hpp	/^    static std::string symbol() { return "m"; }$/;"	f	struct:ratio_string	typeref:typename:std::string
symbol	extern/NamedType/catch.hpp	/^    static std::string symbol() { return "n"; }$/;"	f	struct:ratio_string	typeref:typename:std::string
symbol	extern/NamedType/catch.hpp	/^    static std::string symbol() { return "p"; }$/;"	f	struct:ratio_string	typeref:typename:std::string
symbol	extern/NamedType/catch.hpp	/^    static std::string symbol() { return "u"; }$/;"	f	struct:ratio_string	typeref:typename:std::string
symbol	extern/NamedType/catch.hpp	/^std::string ratio_string<Ratio>::symbol() {$/;"	f	class:ratio_string	typeref:typename:std::string
symbol	extern/OpenXLSX/tests/catch/catch.hpp	/^std::string ratio_string<Ratio>::symbol() {$/;"	f	class:Catch::ratio_string	typeref:typename:std::string
symbol	extern/libgit2/src/win32/w32_stack.c	/^		SYMBOL_INFO symbol;$/;"	m	struct:git_win32__stack_format::__anon991580610108	typeref:typename:SYMBOL_INFO	file:
symbolic	extern/libgit2/src/refs.h	/^		char *symbolic;$/;"	m	union:git_reference::__anon81fc2583010a	typeref:typename:char *
symbolic	extern/libgit2/src/transaction.c	/^		char *symbolic;$/;"	m	union:__anon8eca35140208::__anon8eca3514030a	typeref:typename:char *	file:
symlink_or_fake	extern/libgit2/tests/checkout/icase.c	/^static int symlink_or_fake(git_repository *repo, const char *a, const char *b)$/;"	f	typeref:typename:int	file:
symref_target	extern/libgit2/include/git2/net.h	/^	char *symref_target;$/;"	m	struct:git_remote_head	typeref:typename:char *
sync_one_submodule	extern/libgit2/tests/submodule/modify.c	/^static int sync_one_submodule($/;"	f	typeref:typename:int	file:
synchronized_threads_init	extern/libgit2/src/global.c	/^static int synchronized_threads_init(void)$/;"	f	typeref:typename:int	file:
syncsearch	extern/libgit2/deps/zlib/inflate.c	/^local unsigned syncsearch(have, buf, len)$/;"	f
sysdir	extern/libgit2/src/attr_file.h	/^	git_buf sysdir;$/;"	m	struct:__anon32d629ad0908	typeref:typename:git_buf
system_attr_file	extern/libgit2/src/attr.c	/^static int system_attr_file($/;"	f	typeref:typename:int	file:
system_attr_path	extern/libgit2/tests/filter/systemattrs.c	/^static git_buf system_attr_path = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
system_type	extern/libgit2/tests/index/crlf.c	/^static const char *system_type(void)$/;"	f	typeref:typename:const char *	file:
systype	extern/libgit2/tests/checkout/crlf.c	/^static const char *systype;$/;"	v	typeref:typename:const char *	file:
systype	extern/libgit2/tests/index/crlf.c	/^	const char *systype;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
t	extern/OpenXLSX/tests/c++/Test02_DocumentProperties.cpp	/^std::time_t t = std::time(nullptr);$/;"	v	typeref:typename:std::time_t
t	extern/libgit2/src/transports/http.c	/^	http_subtransport *t;$/;"	m	struct:__anon0458035d0408	typeref:typename:http_subtransport *	file:
t	extern/libgit2/tests/diff/racediffiter.c	/^	git_delta_t t;$/;"	m	struct:__anone9839ae90108	typeref:typename:git_delta_t	file:
t40	extern/libgit2/tests/object/message.c	/^#define t40 /;"	d	file:
table	extern/OpenXLSX/doxy/customdoxygen.css	/^body, table, div, p, dl,$/;"	s
table	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			const unsigned char* table;$/;"	m	union:xpath_ast_node::__anonfceed08a070a	typeref:typename:const unsigned char *	file:
table	extern/libgit2/deps/zlib/zutil.c	/^local ptr_table table[MAX_PTR];$/;"	v	typeref:typename:local ptr_table[]
table.directory	extern/OpenXLSX/doxy/customdoxygen.css	/^table.directory, #nav-tree, #nav-tree .label {$/;"	c
table.doxtable	extern/OpenXLSX/doxy/customdoxygen.css	/^table.doxtable {$/;"	c
table.doxtable td	extern/OpenXLSX/doxy/customdoxygen.css	/^table.doxtable td, table.doxtable th {$/;"	s
table.doxtable th	extern/OpenXLSX/doxy/customdoxygen.css	/^table.doxtable td, table.doxtable th {$/;"	s
table.doxtable th	extern/OpenXLSX/doxy/customdoxygen.css	/^table.doxtable th {$/;"	s
table.fieldtable	extern/OpenXLSX/doxy/customdoxygen.css	/^table.fieldtable {$/;"	c
table.memberdecls	extern/OpenXLSX/doxy/customdoxygen.css	/^table.memberdecls {$/;"	c
table.mlabels	extern/OpenXLSX/doxy/customdoxygen.css	/^table.mlabels {$/;"	c
table_bits	extern/libgit2/src/xdiff/xhistogram.c	/^	unsigned int table_bits,$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
table_width_	extern/OpenXLSX/benchmark/table_printer.h	/^        int table_width_;$/;"	m	class:bprinter::TablePrinter	typeref:typename:int
tables	extern/libgit2/deps/pcre/pcre.h	/^  const unsigned char *tables;    \/* Pointer to character tables *\/$/;"	m	struct:pcre16_extra	typeref:typename:const unsigned char *
tables	extern/libgit2/deps/pcre/pcre.h	/^  const unsigned char *tables;    \/* Pointer to character tables *\/$/;"	m	struct:pcre32_extra	typeref:typename:const unsigned char *
tables	extern/libgit2/deps/pcre/pcre.h	/^  const unsigned char *tables;    \/* Pointer to character tables *\/$/;"	m	struct:pcre_extra	typeref:typename:const unsigned char *
tables	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *tables;         \/* Character tables *\/$/;"	m	struct:dfa_match_data	typeref:typename:const pcre_uint8 *
tables	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *tables;       \/* Pointer to tables or NULL for std *\/$/;"	m	struct:real_pcre32	typeref:typename:const pcre_uint8 *
tables	extern/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *tables;       \/* Pointer to tables or NULL for std *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:const pcre_uint8 *
tables_length	extern/libgit2/deps/pcre/pcre_internal.h	/^#define tables_length /;"	d
tag	extern/libgit2/src/describe.c	/^	git_tag *tag;$/;"	m	struct:commit_name	typeref:typename:git_tag *	file:
tag	extern/libgit2/src/describe.c	/^	struct possible_tag *tag;$/;"	m	struct:git_describe_result	typeref:struct:possible_tag *	file:
tag	extern/libgit2/tests/object/tag/peel.c	/^static git_tag *tag;$/;"	v	typeref:typename:git_tag *	file:
tag	extern/libgit2/tests/odb/loose_data.h	/^static object_data tag = {$/;"	v	typeref:typename:object_data
tag1_id	extern/libgit2/tests/object/tag/read.c	/^static const char *tag1_id = "b25fa35b38051e4ae45d4222e795f9df2e43f1d1";$/;"	v	typeref:typename:const char *	file:
tag2_id	extern/libgit2/tests/object/tag/read.c	/^static const char *tag2_id = "7b4384978d2493e851f9cca7858815fac9b10980";$/;"	v	typeref:typename:const char *	file:
tag2_id	extern/libgit2/tests/object/tag/write.c	/^static const char *tag2_id = "7b4384978d2493e851f9cca7858815fac9b10980";$/;"	v	typeref:typename:const char *	file:
tag_action	extern/libgit2/examples/tag.c	/^typedef void (*tag_action)(tag_state *state);$/;"	t	typeref:typename:void (*)(tag_state * state)	file:
tag_bytes	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char tag_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
tag_cb_data	extern/libgit2/src/tag.c	/^} tag_cb_data;$/;"	t	typeref:struct:__anonfc5068ca0108	file:
tag_data	extern/libgit2/tests/object/raw/data.h	/^static unsigned char tag_data[] = {$/;"	v	typeref:typename:unsigned char[]
tag_data	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char tag_data[] = {$/;"	v	typeref:typename:unsigned char[]
tag_error	extern/libgit2/src/tag.c	/^static int tag_error(const char *str)$/;"	f	typeref:typename:int	file:
tag_filter_data	extern/libgit2/src/tag.c	/^} tag_filter_data;$/;"	t	typeref:struct:__anonfc5068ca0208	file:
tag_id	extern/libgit2/tests/object/raw/data.h	/^static char *tag_id = "09d373e1dfdc16b129ceec6dd649739911541e05";$/;"	v	typeref:typename:char *
tag_list_cb	extern/libgit2/src/tag.c	/^static int tag_list_cb(const char *tag_name, git_oid *oid, void *data)$/;"	f	typeref:typename:int	file:
tag_name	extern/libgit2/examples/tag.c	/^	const char *tag_name;$/;"	m	struct:__anon8e82c8010108	typeref:typename:const char *	file:
tag_name	extern/libgit2/src/tag.h	/^	char *tag_name;$/;"	m	struct:git_tag	typeref:typename:char *
tag_obj	extern/libgit2/tests/object/raw/data.h	/^static git_rawobj tag_obj = {$/;"	v	typeref:typename:git_rawobj
tag_options	extern/libgit2/examples/tag.c	/^} tag_options;$/;"	t	typeref:struct:__anon8e82c8010108	file:
tag_options_init	extern/libgit2/examples/tag.c	/^static void tag_options_init(tag_options *opts)$/;"	f	typeref:typename:void	file:
tag_parse	extern/libgit2/src/tag.c	/^static int tag_parse(git_tag *tag, const char *buffer, const char *buffer_end)$/;"	f	typeref:typename:int	file:
tag_parsing	extern/libgit2/examples/general.c	/^static void tag_parsing(git_repository *repo)$/;"	f	typeref:typename:void	file:
tag_state	extern/libgit2/examples/tag.c	/^} tag_state;$/;"	t	typeref:struct:__anon8e82c8010208	file:
tagged	extern/libgit2/src/pack-objects.h	/^	    tagged:1,$/;"	m	struct:git_pobject	typeref:typename:int:1
tagged_commit	extern/libgit2/tests/object/tag/read.c	/^static const char *tagged_commit = "e90810b8df3e80c413d903f631643c716887138d";$/;"	v	typeref:typename:const char *	file:
tagged_commit	extern/libgit2/tests/object/tag/write.c	/^static const char *tagged_commit = "e90810b8df3e80c413d903f631643c716887138d";$/;"	v	typeref:typename:const char *	file:
tagger	extern/libgit2/src/tag.h	/^	git_signature *tagger;$/;"	m	struct:git_tag	typeref:typename:git_signature *
tagger_email	extern/libgit2/tests/network/fetchlocal.c	/^static const char* tagger_email = "vicent@github.com";$/;"	v	typeref:typename:const char *	file:
tagger_email	extern/libgit2/tests/object/tag/write.c	/^static const char* tagger_email = "vicent@github.com";$/;"	v	typeref:typename:const char *	file:
tagger_message	extern/libgit2/tests/network/fetchlocal.c	/^static const char* tagger_message = "This is my tag.\\n\\nThere are many tags, but this one is m/;"	v	typeref:typename:const char *	file:
tagger_message	extern/libgit2/tests/object/tag/write.c	/^static const char* tagger_message = "This is my tag.\\n\\nThere are many tags, but this one is m/;"	v	typeref:typename:const char *	file:
tagger_name	extern/libgit2/tests/network/fetchlocal.c	/^static const char* tagger_name = "Vicent Marti";$/;"	v	typeref:typename:const char *	file:
tagger_name	extern/libgit2/tests/object/tag/write.c	/^static const char* tagger_name = "Vicent Marti";$/;"	v	typeref:typename:const char *	file:
taggerless	extern/libgit2/tests/object/tag/read.c	/^static const char *taggerless = "4a23e2e65ad4e31c4c9db7dc746650bfad082679";$/;"	v	typeref:typename:const char *	file:
taglist	extern/libgit2/src/tag.c	/^	git_vector *taglist;$/;"	m	struct:__anonfc5068ca0208	typeref:typename:git_vector *	file:
tags	extern/NamedType/catch.hpp	/^    StringRef tags;$/;"	m	struct:Catch::NameAndTags	typeref:typename:StringRef
tags	extern/OpenXLSX/tests/catch/catch.hpp	/^    StringRef tags;$/;"	m	struct:Catch::NameAndTags	typeref:typename:StringRef
tags_cb	extern/libgit2/src/tag.c	/^static int tags_cb(const char *ref, void *data)$/;"	f	typeref:typename:int	file:
tail	extern/libgit2/src/oid.c	/^	const char *tail;$/;"	m	union:__anonfbfa448a010a	typeref:typename:const char *	file:
tail	extern/libgit2/src/xdiff/xtypes.h	/^	chanode_t *head, *tail;$/;"	m	struct:s_chastore	typeref:typename:chanode_t **
target	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *target;$/;"	m	struct:__anon8624cbbb0408	typeref:typename:char *
target	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *target;$/;"	m	struct:ntlm_client	typeref:typename:char *
target	extern/libgit2/examples/tag.c	/^	const char *target;$/;"	m	struct:__anon8e82c8010108	typeref:typename:const char *	file:
target	extern/libgit2/src/blame_git.c	/^	git_blame__origin *target;$/;"	m	struct:blame_chunk_cb_data	typeref:typename:git_blame__origin *	file:
target	extern/libgit2/src/checkout.c	/^	git_iterator *target;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_iterator *	file:
target	extern/libgit2/src/filter.c	/^	git_buf *target;$/;"	m	struct:buf_stream	typeref:typename:git_buf *	file:
target	extern/libgit2/src/filter.c	/^	git_writestream *target;$/;"	m	struct:proxy_stream	typeref:typename:git_writestream *	file:
target	extern/libgit2/src/refs.h	/^	} target;$/;"	m	struct:git_reference	typeref:union:git_reference::__anon81fc2583010a
target	extern/libgit2/src/tag.h	/^	git_oid target;$/;"	m	struct:git_tag	typeref:typename:git_oid
target	extern/libgit2/src/transaction.c	/^	} target;$/;"	m	struct:__anon8eca35140208	typeref:union:__anon8eca35140208::__anon8eca3514030a	file:
target	extern/libgit2/src/transports/auth_negotiate.c	/^	git_buf target;$/;"	m	struct:__anon8bc72ece0108	typeref:typename:git_buf	file:
target	extern/libgit2/tests/object/tag/peel.c	/^static git_object *target;$/;"	v	typeref:typename:git_object *	file:
target	extern/libgit2/tests/refs/branches/create.c	/^static git_commit *target;$/;"	v	typeref:typename:git_commit *	file:
target	extern/libgit2/tests/reset/hard.c	/^static git_object *target;$/;"	v	typeref:typename:git_object *	file:
target	extern/libgit2/tests/reset/mixed.c	/^static git_object *target;$/;"	v	typeref:typename:git_object *	file:
target	extern/libgit2/tests/reset/soft.c	/^static git_object *target;$/;"	v	typeref:typename:git_object *	file:
targetExhausted	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^	targetExhausted,        \/* insuff. room in target for conversion *\/$/;"	e	enum:__anonce5e58f80103	file:
target_directory	extern/libgit2/include/git2/checkout.h	/^	const char *target_directory; \/**< alternative checkout path to workdir *\/$/;"	m	struct:git_checkout_options	typeref:typename:const char *
target_domain	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *target_domain;$/;"	m	struct:__anon8624cbbb0408	typeref:typename:char *
target_domain_dns	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *target_domain_dns;$/;"	m	struct:__anon8624cbbb0408	typeref:typename:char *
target_info	extern/libgit2/deps/ntlmclient/ntlm.h	/^	unsigned char *target_info;$/;"	m	struct:__anon8624cbbb0408	typeref:typename:unsigned char *
target_info_len	extern/libgit2/deps/ntlmclient/ntlm.h	/^	size_t target_info_len;$/;"	m	struct:__anon8624cbbb0408	typeref:typename:size_t
target_is_dir	extern/libgit2/src/win32/posix_w32.c	/^static bool target_is_dir(const char *target, const char *path)$/;"	f	typeref:typename:bool	file:
target_len	extern/libgit2/src/checkout.c	/^	size_t target_len;$/;"	m	struct:__anonbac5d6240208	typeref:typename:size_t	file:
target_limit	extern/libgit2/include/git2/merge.h	/^	unsigned int target_limit;$/;"	m	struct:__anon5e9a43240708	typeref:typename:unsigned int
target_path	extern/libgit2/src/checkout.c	/^	git_buf target_path;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_buf	file:
target_server	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *target_server;$/;"	m	struct:__anon8624cbbb0408	typeref:typename:char *
target_server_dns	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *target_server_dns;$/;"	m	struct:__anon8624cbbb0408	typeref:typename:char *
target_utf16	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *target_utf16;$/;"	m	struct:ntlm_client	typeref:typename:char *
target_utf16_len	extern/libgit2/deps/ntlmclient/ntlm.h	/^	size_t target_utf16_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
target_version	extern/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_version target_version;$/;"	m	struct:__anon8624cbbb0408	typeref:typename:ntlm_version
targets	extern/libgit2/deps/pcre/CMakeLists.txt	/^SET(targets)$/;"	v
targets	extern/libgit2/tests/diff/rename.c	/^	const char **targets;$/;"	m	struct:rename_expected	typeref:typename:const char **	file:
td.indexkey	extern/OpenXLSX/doxy/customdoxygen.css	/^td.indexkey {$/;"	c
td.indexvalue	extern/OpenXLSX/doxy/customdoxygen.css	/^td.indexvalue {$/;"	c
td.mlabels-left	extern/OpenXLSX/doxy/customdoxygen.css	/^td.mlabels-left {$/;"	c
td.mlabels-right	extern/OpenXLSX/doxy/customdoxygen.css	/^td.mlabels-right {$/;"	c
td.tiny	extern/OpenXLSX/doxy/customdoxygen.css	/^td.tiny {$/;"	c
tdefl_calculate_minimum_redundancy	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static void tdefl_calculate_minimum_redundancy(tdefl_sym_freq* A, int n) {$/;"	f	typeref:typename:void
tdefl_compress	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline tdefl_status tdefl_compress(tdefl_compressor* d,$/;"	f	typeref:typename:tdefl_status
tdefl_compress_block	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool tdefl_compress_block(tdefl_compressor* d, mz_bool static_block) {$/;"	f	typeref:typename:mz_bool
tdefl_compress_buffer	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline tdefl_status tdefl_compress_buffer(tdefl_compressor* d, const void* pIn_buf, size_t in_bu/;"	f	typeref:typename:tdefl_status
tdefl_compress_fast	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool tdefl_compress_fast(tdefl_compressor* d) {$/;"	f	typeref:typename:mz_bool
tdefl_compress_lz_codes	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool tdefl_compress_lz_codes(tdefl_compressor *d)$/;"	f	typeref:typename:mz_bool
tdefl_compress_lz_codes	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool tdefl_compress_lz_codes(tdefl_compressor* d) {$/;"	f	typeref:typename:mz_bool
tdefl_compress_mem_to_heap	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void* tdefl_compress_mem_to_heap(const void* pSrc_buf, size_t src_buf_len, size_t* pOut_l/;"	f	typeref:typename:void *
tdefl_compress_mem_to_mem	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline size_t tdefl_compress_mem_to_mem(void* pOut_buf, size_t out_buf_len, const void* pSrc_buf/;"	f	typeref:typename:size_t
tdefl_compress_mem_to_output	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_bool tdefl_compress_mem_to_output(const void* pBuf,$/;"	f	typeref:typename:mz_bool
tdefl_compress_normal	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool tdefl_compress_normal(tdefl_compressor* d) {$/;"	f	typeref:typename:mz_bool
tdefl_compressor	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} tdefl_compressor;$/;"	t	typeref:struct:__anon09af45a70c08
tdefl_compressor_alloc	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline tdefl_compressor* tdefl_compressor_alloc() {$/;"	f	typeref:typename:tdefl_compressor *
tdefl_compressor_free	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void tdefl_compressor_free(tdefl_compressor* pComp) {$/;"	f	typeref:typename:void
tdefl_create_comp_flags_from_zip_params	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_uint tdefl_create_comp_flags_from_zip_params(int level, int window_bits, int strategy)/;"	f	typeref:typename:mz_uint
tdefl_find_match	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE void tdefl_find_match(tdefl_compressor *d, mz_uint lookahead_pos, mz_uint /;"	f	typeref:typename:MZ_FORCEINLINE void
tdefl_find_match	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE void tdefl_find_match(tdefl_compressor* d,$/;"	f	typeref:typename:MZ_FORCEINLINE void
tdefl_flush	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} tdefl_flush;$/;"	t	typeref:enum:__anon09af45a70b03
tdefl_flush_block	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static int tdefl_flush_block(tdefl_compressor* d, int flush) {$/;"	f	typeref:typename:int
tdefl_flush_output_buffer	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static tdefl_status tdefl_flush_output_buffer(tdefl_compressor* d) {$/;"	f	typeref:typename:tdefl_status
tdefl_get_adler32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline mz_uint32 tdefl_get_adler32(tdefl_compressor* d) {$/;"	f	typeref:typename:mz_uint32
tdefl_get_prev_return_status	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline tdefl_status tdefl_get_prev_return_status(tdefl_compressor* d) {$/;"	f	typeref:typename:tdefl_status
tdefl_huffman_enforce_max_code_size	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static void tdefl_huffman_enforce_max_code_size(int* pNum_codes, int code_list_len, int max_code/;"	f	typeref:typename:void
tdefl_init	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline tdefl_status tdefl_init(tdefl_compressor* d, tdefl_put_buf_func_ptr pPut_buf_func, void* /;"	f	typeref:typename:tdefl_status
tdefl_optimize_huffman_table	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^tdefl_optimize_huffman_table(tdefl_compressor* d, int table_num, int table_len, int code_size_li/;"	f	typeref:typename:void
tdefl_output_buffer	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} tdefl_output_buffer;$/;"	t	typeref:struct:__anon09af45a71d08
tdefl_output_buffer_putter	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static mz_bool tdefl_output_buffer_putter(const void* pBuf, int len, void* pUser) {$/;"	f	typeref:typename:mz_bool
tdefl_put_buf_func_ptr	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef mz_bool (* tdefl_put_buf_func_ptr)(const void* pBuf, int len, void* pUser);$/;"	t	typeref:typename:mz_bool (*)(const void * pBuf,int len,void * pUser)
tdefl_radix_sort_syms	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static tdefl_sym_freq* tdefl_radix_sort_syms(mz_uint num_syms, tdefl_sym_freq* pSyms0, tdefl_sym/;"	f	typeref:typename:tdefl_sym_freq *
tdefl_record_literal	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE void tdefl_record_literal(tdefl_compressor* d, mz_uint8 lit) {$/;"	f	typeref:typename:MZ_FORCEINLINE void
tdefl_record_match	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static MZ_FORCEINLINE void tdefl_record_match(tdefl_compressor* d, mz_uint match_len, mz_uint ma/;"	f	typeref:typename:MZ_FORCEINLINE void
tdefl_start_dynamic_block	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static void tdefl_start_dynamic_block(tdefl_compressor* d) {$/;"	f	typeref:typename:void
tdefl_start_static_block	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^static void tdefl_start_static_block(tdefl_compressor* d) {$/;"	f	typeref:typename:void
tdefl_status	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} tdefl_status;$/;"	t	typeref:enum:__anon09af45a70a03
tdefl_sym_freq	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} tdefl_sym_freq;$/;"	t	typeref:struct:__anon09af45a71b08
tdefl_write_image_to_png_file_in_memory	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void* tdefl_write_image_to_png_file_in_memory(const void* pImage, int w, int h, int num_c/;"	f	typeref:typename:void *
tdefl_write_image_to_png_file_in_memory_ex	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void* tdefl_write_image_to_png_file_in_memory_ex(const void* pImage,$/;"	f	typeref:typename:void *
tee	extern/NamedType/main.cpp	/^decltype(auto) tee(T&& value)$/;"	f	typeref:typename:decltype (auto)
temp	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_allocator temp;$/;"	m	struct:xpath_stack_data	typeref:typename:xpath_allocator	file:
temp	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_allocator* temp;$/;"	m	struct:xpath_stack	typeref:typename:xpath_allocator *	file:
temp_buf	extern/libgit2/src/filter.c	/^	git_buf *temp_buf;$/;"	m	struct:git_filter_list	typeref:typename:git_buf *	file:
temp_buf	extern/libgit2/src/filter.c	/^	git_buf temp_buf;$/;"	m	struct:proxy_stream	typeref:typename:git_buf	file:
temp_buf	extern/libgit2/src/filter.h	/^	git_buf *temp_buf;$/;"	m	struct:__anon209df0b90108	typeref:typename:git_buf *
templ	extern/NamedType/underlying_functionalities.hpp	/^    struct templ : crtp<T, templ>$/;"	s	struct:fluent::ImplicitlyConvertibleTo
templ	ntskills.hpp	/^  template <typename T> struct templ : crtp<T, templ> {$/;"	s	struct:nt::ImplicitlyConvertibleTo
template	extern/libgit2/examples/init.c	/^	const char *template;$/;"	m	struct:opts	typeref:typename:const char *	file:
template_path	extern/libgit2/include/git2/repository.h	/^	const char *template_path;$/;"	m	struct:__anon8a61cad40408	typeref:typename:const char *
test	extern/libgit2/tests/clar.c	/^	const char *test;$/;"	m	struct:clar_report	typeref:typename:const char *	file:
testCaseEnded	extern/OpenXLSX/tests/catch/catch_reporter_automake.hpp	/^        void testCaseEnded( TestCaseStats const& _testCaseStats ) override {$/;"	f	struct:Catch::AutomakeReporter	typeref:typename:void
testCaseEnded	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        void testCaseEnded( TestCaseStats const& testCaseStats ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
testCaseStarting	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        void testCaseStarting( TestCaseInfo const& testInfo ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
testFunctionCallable_A	extern/NamedType/main.cpp	/^    testFunctionCallable_A(int x) : x(x) {}$/;"	f	struct:testFunctionCallable_A	file:
testFunctionCallable_A	extern/NamedType/main.cpp	/^struct testFunctionCallable_A$/;"	s	file:
testGroupEnded	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        void testGroupEnded( TestGroupStats const& testGroupStats ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
testGroupStarting	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^        void testGroupStarting( GroupInfo const& groupInfo ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
testRunEnded	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^        void testRunEnded( TestRunStats const& _testRunStats ) override {$/;"	f	struct:Catch::TAPReporter	typeref:typename:void
test_4096	extern/libgit2/tests/core/buffer.c	/^const char *test_4096 = TESTSTR_4096;$/;"	v	typeref:typename:const char *
test_8192	extern/libgit2/tests/core/buffer.c	/^const char *test_8192 = TESTSTR_8192;$/;"	v	typeref:typename:const char *
test_abort	extern/libgit2/tests/rebase/abort.c	/^static void test_abort($/;"	f	typeref:typename:void	file:
test_add_entry	extern/libgit2/tests/index/add.c	/^static void test_add_entry($/;"	f	typeref:typename:void	file:
test_add_entry	extern/libgit2/tests/submodule/add.c	/^static void test_add_entry($/;"	f	typeref:typename:void	file:
test_add_index	extern/libgit2/tests/index/crlf.c	/^static void test_add_index(const char *safecrlf, const char *autocrlf, const char *attrs)$/;"	f	typeref:typename:void	file:
test_apply_both__adds_file	extern/libgit2/tests/apply/both.c	/^void test_apply_both__adds_file(void)$/;"	f	typeref:typename:void
test_apply_both__application_failure_leaves_index_unmodified	extern/libgit2/tests/apply/both.c	/^void test_apply_both__application_failure_leaves_index_unmodified(void)$/;"	f	typeref:typename:void
test_apply_both__application_failure_leaves_workdir_unmodified	extern/libgit2/tests/apply/both.c	/^void test_apply_both__application_failure_leaves_workdir_unmodified(void)$/;"	f	typeref:typename:void
test_apply_both__can_apply_nonconflicting_file_changes	extern/libgit2/tests/apply/both.c	/^void test_apply_both__can_apply_nonconflicting_file_changes(void)$/;"	f	typeref:typename:void
test_apply_both__cant_modify_source_path_after_rename	extern/libgit2/tests/apply/both.c	/^void test_apply_both__cant_modify_source_path_after_rename(void)$/;"	f	typeref:typename:void
test_apply_both__cant_remove_file_twice	extern/libgit2/tests/apply/both.c	/^void test_apply_both__cant_remove_file_twice(void)$/;"	f	typeref:typename:void
test_apply_both__cant_rename_after_modify_nonexistent_target_path	extern/libgit2/tests/apply/both.c	/^void test_apply_both__cant_rename_after_modify_nonexistent_target_path(void)$/;"	f	typeref:typename:void
test_apply_both__cleanup	extern/libgit2/tests/apply/both.c	/^void test_apply_both__cleanup(void)$/;"	f	typeref:typename:void
test_apply_both__generated_diff	extern/libgit2/tests/apply/both.c	/^void test_apply_both__generated_diff(void)$/;"	f	typeref:typename:void
test_apply_both__honors_crlf_attributes	extern/libgit2/tests/apply/both.c	/^void test_apply_both__honors_crlf_attributes(void)$/;"	f	typeref:typename:void
test_apply_both__index_mode_must_match_workdir	extern/libgit2/tests/apply/both.c	/^void test_apply_both__index_mode_must_match_workdir(void)$/;"	f	typeref:typename:void
test_apply_both__index_must_match_workdir	extern/libgit2/tests/apply/both.c	/^void test_apply_both__index_must_match_workdir(void)$/;"	f	typeref:typename:void
test_apply_both__initialize	extern/libgit2/tests/apply/both.c	/^void test_apply_both__initialize(void)$/;"	f	typeref:typename:void
test_apply_both__keeps_nonconflicting_changes	extern/libgit2/tests/apply/both.c	/^void test_apply_both__keeps_nonconflicting_changes(void)$/;"	f	typeref:typename:void
test_apply_both__parsed_diff	extern/libgit2/tests/apply/both.c	/^void test_apply_both__parsed_diff(void)$/;"	f	typeref:typename:void
test_apply_both__readd_deleted_file	extern/libgit2/tests/apply/both.c	/^void test_apply_both__readd_deleted_file(void)$/;"	f	typeref:typename:void
test_apply_both__removes_file	extern/libgit2/tests/apply/both.c	/^void test_apply_both__removes_file(void)$/;"	f	typeref:typename:void
test_apply_both__rename	extern/libgit2/tests/apply/both.c	/^void test_apply_both__rename(void)$/;"	f	typeref:typename:void
test_apply_both__rename_1_to_2	extern/libgit2/tests/apply/both.c	/^void test_apply_both__rename_1_to_2(void)$/;"	f	typeref:typename:void
test_apply_both__rename_2_to_1	extern/libgit2/tests/apply/both.c	/^void test_apply_both__rename_2_to_1(void)$/;"	f	typeref:typename:void
test_apply_both__rename_a_to_b_to_c	extern/libgit2/tests/apply/both.c	/^void test_apply_both__rename_a_to_b_to_c(void)$/;"	f	typeref:typename:void
test_apply_both__rename_a_to_b_to_c_exact	extern/libgit2/tests/apply/both.c	/^void test_apply_both__rename_a_to_b_to_c_exact(void)$/;"	f	typeref:typename:void
test_apply_both__rename_and_modify	extern/libgit2/tests/apply/both.c	/^void test_apply_both__rename_and_modify(void)$/;"	f	typeref:typename:void
test_apply_both__rename_and_modify_deltas	extern/libgit2/tests/apply/both.c	/^void test_apply_both__rename_and_modify_deltas(void)$/;"	f	typeref:typename:void
test_apply_both__rename_circular	extern/libgit2/tests/apply/both.c	/^void test_apply_both__rename_circular(void)$/;"	f	typeref:typename:void
test_apply_both__rename_delta_after_modify_delta	extern/libgit2/tests/apply/both.c	/^void test_apply_both__rename_delta_after_modify_delta(void)$/;"	f	typeref:typename:void
test_apply_both__two_deltas_one_file	extern/libgit2/tests/apply/both.c	/^void test_apply_both__two_deltas_one_file(void)$/;"	f	typeref:typename:void
test_apply_both__two_deltas_one_new_file	extern/libgit2/tests/apply/both.c	/^void test_apply_both__two_deltas_one_new_file(void)$/;"	f	typeref:typename:void
test_apply_callbacks__cleanup	extern/libgit2/tests/apply/callbacks.c	/^void test_apply_callbacks__cleanup(void)$/;"	f	typeref:typename:void
test_apply_callbacks__delta_aborts	extern/libgit2/tests/apply/callbacks.c	/^void test_apply_callbacks__delta_aborts(void)$/;"	f	typeref:typename:void
test_apply_callbacks__delta_can_skip	extern/libgit2/tests/apply/callbacks.c	/^void test_apply_callbacks__delta_can_skip(void)$/;"	f	typeref:typename:void
test_apply_callbacks__hunk_can_skip	extern/libgit2/tests/apply/callbacks.c	/^void test_apply_callbacks__hunk_can_skip(void)$/;"	f	typeref:typename:void
test_apply_callbacks__initialize	extern/libgit2/tests/apply/callbacks.c	/^void test_apply_callbacks__initialize(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__add	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__add(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__append	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__append(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__append_nocontext	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__append_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__binary_add	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__binary_add(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__binary_change_delta	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__binary_change_delta(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__binary_change_literal	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__binary_change_literal(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__binary_delete	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__binary_delete(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__binary_no_change	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__binary_no_change(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__change_firstline	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__change_firstline(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__change_middle	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__change_middle(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__change_middle_and_lastline_nocontext	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__change_middle_and_lastline_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__change_middle_nocontext	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__change_middle_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__cleanup	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__cleanup(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__delete	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__delete(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__delete_and_change	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__delete_and_change(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__delete_and_change_nocontext	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__delete_and_change_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__delete_firstline	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__delete_firstline(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__from_empty_file	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__from_empty_file(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__initialize	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__initialize(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__lastline	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__lastline(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__no_change	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__no_change(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__patching_correctly_truncates_source	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__patching_correctly_truncates_source(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__prepend	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__prepend(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__prepend_and_append	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__prepend_and_append(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__prepend_and_change	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__prepend_and_change(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__prepend_and_change_nocontext	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__prepend_and_change_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__prepend_nocontext	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__prepend_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__to_empty_file	extern/libgit2/tests/apply/fromdiff.c	/^void test_apply_fromdiff__to_empty_file(void)$/;"	f	typeref:typename:void
test_apply_fromfile__add	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__add(void)$/;"	f	typeref:typename:void
test_apply_fromfile__append	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__append(void)$/;"	f	typeref:typename:void
test_apply_fromfile__append_no_nl	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__append_no_nl(void)$/;"	f	typeref:typename:void
test_apply_fromfile__append_nocontext	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__append_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromfile__binary_add	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__binary_add(void)$/;"	f	typeref:typename:void
test_apply_fromfile__binary_change_delta	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__binary_change_delta(void)$/;"	f	typeref:typename:void
test_apply_fromfile__binary_change_does_not_apply	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__binary_change_does_not_apply(void)$/;"	f	typeref:typename:void
test_apply_fromfile__binary_change_literal	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__binary_change_literal(void)$/;"	f	typeref:typename:void
test_apply_fromfile__binary_change_must_be_reversible	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__binary_change_must_be_reversible(void)$/;"	f	typeref:typename:void
test_apply_fromfile__binary_delete	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__binary_delete(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_firstline	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__change_firstline(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_middle	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__change_middle(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_middle_grow	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__change_middle_grow(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_middle_grow_nocontext	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__change_middle_grow_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_middle_nocontext	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__change_middle_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_middle_shrink	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__change_middle_shrink(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_middle_shrink_nocontext	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__change_middle_shrink_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromfile__cleanup	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__cleanup(void)$/;"	f	typeref:typename:void
test_apply_fromfile__delete	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__delete(void)$/;"	f	typeref:typename:void
test_apply_fromfile__empty_context	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__empty_context(void)$/;"	f	typeref:typename:void
test_apply_fromfile__empty_file_not_allowed	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__empty_file_not_allowed(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_corrupt_githeader	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__fail_corrupt_githeader(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_missing_hunk_header	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__fail_missing_hunk_header(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_missing_new_file	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__fail_missing_new_file(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_missing_old_file	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__fail_missing_old_file(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_no_changes	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__fail_no_changes(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_not_a_patch	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__fail_not_a_patch(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_truncated_1	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__fail_truncated_1(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_truncated_2	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__fail_truncated_2(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_truncated_3	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__fail_truncated_3(void)$/;"	f	typeref:typename:void
test_apply_fromfile__from_empty_file	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__from_empty_file(void)$/;"	f	typeref:typename:void
test_apply_fromfile__initialize	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__initialize(void)$/;"	f	typeref:typename:void
test_apply_fromfile__lastline	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__lastline(void)$/;"	f	typeref:typename:void
test_apply_fromfile__modechange	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__modechange(void)$/;"	f	typeref:typename:void
test_apply_fromfile__modechange_with_modification	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__modechange_with_modification(void)$/;"	f	typeref:typename:void
test_apply_fromfile__noisy	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__noisy(void)$/;"	f	typeref:typename:void
test_apply_fromfile__noisy_nocontext	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__noisy_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromfile__prepend	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__prepend(void)$/;"	f	typeref:typename:void
test_apply_fromfile__prepend_and_append	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__prepend_and_append(void)$/;"	f	typeref:typename:void
test_apply_fromfile__prepend_nocontext	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__prepend_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromfile__rename_exact	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__rename_exact(void)$/;"	f	typeref:typename:void
test_apply_fromfile__rename_similar	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__rename_similar(void)$/;"	f	typeref:typename:void
test_apply_fromfile__rename_similar_quotedname	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__rename_similar_quotedname(void)$/;"	f	typeref:typename:void
test_apply_fromfile__to_empty_file	extern/libgit2/tests/apply/fromfile.c	/^void test_apply_fromfile__to_empty_file(void)$/;"	f	typeref:typename:void
test_apply_index__adds_file	extern/libgit2/tests/apply/index.c	/^void test_apply_index__adds_file(void)$/;"	f	typeref:typename:void
test_apply_index__application_failure_leaves_index_unmodified	extern/libgit2/tests/apply/index.c	/^void test_apply_index__application_failure_leaves_index_unmodified(void)$/;"	f	typeref:typename:void
test_apply_index__can_apply_nonconflicting_file_changes	extern/libgit2/tests/apply/index.c	/^void test_apply_index__can_apply_nonconflicting_file_changes(void)$/;"	f	typeref:typename:void
test_apply_index__change_mode	extern/libgit2/tests/apply/index.c	/^void test_apply_index__change_mode(void)$/;"	f	typeref:typename:void
test_apply_index__cleanup	extern/libgit2/tests/apply/index.c	/^void test_apply_index__cleanup(void)$/;"	f	typeref:typename:void
test_apply_index__generate_diff	extern/libgit2/tests/apply/index.c	/^void test_apply_index__generate_diff(void)$/;"	f	typeref:typename:void
test_apply_index__initialize	extern/libgit2/tests/apply/index.c	/^void test_apply_index__initialize(void)$/;"	f	typeref:typename:void
test_apply_index__keeps_nonconflicting_changes	extern/libgit2/tests/apply/index.c	/^void test_apply_index__keeps_nonconflicting_changes(void)$/;"	f	typeref:typename:void
test_apply_index__modified_workdir_with_unmodified_index_is_ok	extern/libgit2/tests/apply/index.c	/^void test_apply_index__modified_workdir_with_unmodified_index_is_ok(void)$/;"	f	typeref:typename:void
test_apply_index__parsed_diff	extern/libgit2/tests/apply/index.c	/^void test_apply_index__parsed_diff(void)$/;"	f	typeref:typename:void
test_apply_index__removes_file	extern/libgit2/tests/apply/index.c	/^void test_apply_index__removes_file(void)$/;"	f	typeref:typename:void
test_apply_partial__cleanup	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__cleanup(void)$/;"	f	typeref:typename:void
test_apply_partial__delete_and_change_nocontext_abort_change	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__delete_and_change_nocontext_abort_change(void)$/;"	f	typeref:typename:void
test_apply_partial__delete_and_change_nocontext_abort_deletion	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__delete_and_change_nocontext_abort_deletion(void)$/;"	f	typeref:typename:void
test_apply_partial__delete_and_change_nocontext_skip_change	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__delete_and_change_nocontext_skip_change(void)$/;"	f	typeref:typename:void
test_apply_partial__delete_and_change_nocontext_skip_deletion	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__delete_and_change_nocontext_skip_deletion(void)$/;"	f	typeref:typename:void
test_apply_partial__delete_and_change_skip_change	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__delete_and_change_skip_change(void)$/;"	f	typeref:typename:void
test_apply_partial__delete_and_change_skip_deletion	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__delete_and_change_skip_deletion(void)$/;"	f	typeref:typename:void
test_apply_partial__initialize	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__initialize(void)$/;"	f	typeref:typename:void
test_apply_partial__prepend_and_change_nocontext_abort_addition	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__prepend_and_change_nocontext_abort_addition(void)$/;"	f	typeref:typename:void
test_apply_partial__prepend_and_change_nocontext_abort_change	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__prepend_and_change_nocontext_abort_change(void)$/;"	f	typeref:typename:void
test_apply_partial__prepend_and_change_nocontext_skip_addition	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__prepend_and_change_nocontext_skip_addition(void)$/;"	f	typeref:typename:void
test_apply_partial__prepend_and_change_nocontext_skip_change	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__prepend_and_change_nocontext_skip_change(void)$/;"	f	typeref:typename:void
test_apply_partial__prepend_and_change_skip_addition	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__prepend_and_change_skip_addition(void)$/;"	f	typeref:typename:void
test_apply_partial__prepend_and_change_skip_change	extern/libgit2/tests/apply/partial.c	/^void test_apply_partial__prepend_and_change_skip_change(void)$/;"	f	typeref:typename:void
test_apply_tree__adds_file	extern/libgit2/tests/apply/tree.c	/^void test_apply_tree__adds_file(void)$/;"	f	typeref:typename:void
test_apply_tree__cleanup	extern/libgit2/tests/apply/tree.c	/^void test_apply_tree__cleanup(void)$/;"	f	typeref:typename:void
test_apply_tree__initialize	extern/libgit2/tests/apply/tree.c	/^void test_apply_tree__initialize(void)$/;"	f	typeref:typename:void
test_apply_tree__one	extern/libgit2/tests/apply/tree.c	/^void test_apply_tree__one(void)$/;"	f	typeref:typename:void
test_apply_workdir__adds_file	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__adds_file(void)$/;"	f	typeref:typename:void
test_apply_workdir__application_failure_leaves_workdir_unmodified	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__application_failure_leaves_workdir_unmodified(void)$/;"	f	typeref:typename:void
test_apply_workdir__apply_many_changes_one	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__apply_many_changes_one(void)$/;"	f	typeref:typename:void
test_apply_workdir__apply_many_changes_two	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__apply_many_changes_two(void)$/;"	f	typeref:typename:void
test_apply_workdir__can_apply_nonconflicting_file_changes	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__can_apply_nonconflicting_file_changes(void)$/;"	f	typeref:typename:void
test_apply_workdir__change_mode	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__change_mode(void)$/;"	f	typeref:typename:void
test_apply_workdir__cleanup	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__cleanup(void)$/;"	f	typeref:typename:void
test_apply_workdir__generated_diff	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__generated_diff(void)$/;"	f	typeref:typename:void
test_apply_workdir__initialize	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__initialize(void)$/;"	f	typeref:typename:void
test_apply_workdir__keeps_nonconflicting_changes	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__keeps_nonconflicting_changes(void)$/;"	f	typeref:typename:void
test_apply_workdir__modified_index_with_unmodified_workdir_is_ok	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__modified_index_with_unmodified_workdir_is_ok(void)$/;"	f	typeref:typename:void
test_apply_workdir__parsed_diff	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__parsed_diff(void)$/;"	f	typeref:typename:void
test_apply_workdir__removes_file	extern/libgit2/tests/apply/workdir.c	/^void test_apply_workdir__removes_file(void)$/;"	f	typeref:typename:void
test_arraysize_add	extern/libgit2/tests/core/errors.c	/^static int test_arraysize_add(size_t one, size_t two)$/;"	f	typeref:typename:int	file:
test_arraysize_multiply	extern/libgit2/tests/core/errors.c	/^static int test_arraysize_multiply(size_t nelem, size_t size)$/;"	f	typeref:typename:int	file:
test_attr_file__assign_variants	extern/libgit2/tests/attr/file.c	/^void test_attr_file__assign_variants(void)$/;"	f	typeref:typename:void
test_attr_file__check_attr_examples	extern/libgit2/tests/attr/file.c	/^void test_attr_file__check_attr_examples(void)$/;"	f	typeref:typename:void
test_attr_file__match_variants	extern/libgit2/tests/attr/file.c	/^void test_attr_file__match_variants(void)$/;"	f	typeref:typename:void
test_attr_file__simple_read	extern/libgit2/tests/attr/file.c	/^void test_attr_file__simple_read(void)$/;"	f	typeref:typename:void
test_attr_file__whitespace	extern/libgit2/tests/attr/file.c	/^void test_attr_file__whitespace(void)$/;"	f	typeref:typename:void
test_attr_flags__bare	extern/libgit2/tests/attr/flags.c	/^void test_attr_flags__bare(void)$/;"	f	typeref:typename:void
test_attr_flags__cleanup	extern/libgit2/tests/attr/flags.c	/^void test_attr_flags__cleanup(void)$/;"	f	typeref:typename:void
test_attr_flags__index_vs_workdir	extern/libgit2/tests/attr/flags.c	/^void test_attr_flags__index_vs_workdir(void)$/;"	f	typeref:typename:void
test_attr_flags__subdir	extern/libgit2/tests/attr/flags.c	/^void test_attr_flags__subdir(void)$/;"	f	typeref:typename:void
test_attr_lookup__assign_variants	extern/libgit2/tests/attr/lookup.c	/^void test_attr_lookup__assign_variants(void)$/;"	f	typeref:typename:void
test_attr_lookup__check_attr_examples	extern/libgit2/tests/attr/lookup.c	/^void test_attr_lookup__check_attr_examples(void)$/;"	f	typeref:typename:void
test_attr_lookup__from_buffer	extern/libgit2/tests/attr/lookup.c	/^void test_attr_lookup__from_buffer(void)$/;"	f	typeref:typename:void
test_attr_lookup__match_variants	extern/libgit2/tests/attr/lookup.c	/^void test_attr_lookup__match_variants(void)$/;"	f	typeref:typename:void
test_attr_lookup__simple	extern/libgit2/tests/attr/lookup.c	/^void test_attr_lookup__simple(void)$/;"	f	typeref:typename:void
test_attr_macro__adding_boolean_macros_succeeds	extern/libgit2/tests/attr/macro.c	/^void test_attr_macro__adding_boolean_macros_succeeds(void)$/;"	f	typeref:typename:void
test_attr_macro__adding_macro_succeeds	extern/libgit2/tests/attr/macro.c	/^void test_attr_macro__adding_macro_succeeds(void)$/;"	f	typeref:typename:void
test_attr_macro__bad_macros	extern/libgit2/tests/attr/macro.c	/^void test_attr_macro__bad_macros(void)$/;"	f	typeref:typename:void
test_attr_macro__changing_macro_in_root_wd_updates_attributes	extern/libgit2/tests/attr/macro.c	/^void test_attr_macro__changing_macro_in_root_wd_updates_attributes(void)$/;"	f	typeref:typename:void
test_attr_macro__cleanup	extern/libgit2/tests/attr/macro.c	/^void test_attr_macro__cleanup(void)$/;"	f	typeref:typename:void
test_attr_macro__macros	extern/libgit2/tests/attr/macro.c	/^void test_attr_macro__macros(void)$/;"	f	typeref:typename:void
test_attr_macro__macros_in_root_wd_apply	extern/libgit2/tests/attr/macro.c	/^void test_attr_macro__macros_in_root_wd_apply(void)$/;"	f	typeref:typename:void
test_attr_macro__macros_in_subdir_do_not_apply	extern/libgit2/tests/attr/macro.c	/^void test_attr_macro__macros_in_subdir_do_not_apply(void)$/;"	f	typeref:typename:void
test_attr_macro__recursive_macro_resolves	extern/libgit2/tests/attr/macro.c	/^void test_attr_macro__recursive_macro_resolves(void)$/;"	f	typeref:typename:void
test_attr_macro__redefining_macro_succeeds	extern/libgit2/tests/attr/macro.c	/^void test_attr_macro__redefining_macro_succeeds(void)$/;"	f	typeref:typename:void
test_attr_repo__bare_repo_with_index	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__bare_repo_with_index(void)$/;"	f	typeref:typename:void
test_attr_repo__cleanup	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__cleanup(void)$/;"	f	typeref:typename:void
test_attr_repo__foreach	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__foreach(void)$/;"	f	typeref:typename:void
test_attr_repo__get_many	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__get_many(void)$/;"	f	typeref:typename:void
test_attr_repo__get_many_in_place	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__get_many_in_place(void)$/;"	f	typeref:typename:void
test_attr_repo__get_one	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__get_one(void)$/;"	f	typeref:typename:void
test_attr_repo__get_one_start_deep	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__get_one_start_deep(void)$/;"	f	typeref:typename:void
test_attr_repo__initialize	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__initialize(void)$/;"	f	typeref:typename:void
test_attr_repo__manpage_example	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__manpage_example(void)$/;"	f	typeref:typename:void
test_attr_repo__rewrite	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__rewrite(void)$/;"	f	typeref:typename:void
test_attr_repo__rewrite_sysdir	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__rewrite_sysdir(void)$/;"	f	typeref:typename:void
test_attr_repo__staging_properly_normalizes_line_endings_according_to_gitattributes_directives	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__staging_properly_normalizes_line_endings_according_to_gitattributes_directi/;"	f	typeref:typename:void
test_attr_repo__sysdir	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__sysdir(void)$/;"	f	typeref:typename:void
test_attr_repo__sysdir_with_session	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__sysdir_with_session(void)$/;"	f	typeref:typename:void
test_attr_repo__unlink	extern/libgit2/tests/attr/repo.c	/^void test_attr_repo__unlink(void)$/;"	f	typeref:typename:void
test_blame_buffer__add_lines_at_end	extern/libgit2/tests/blame/buffer.c	/^void test_blame_buffer__add_lines_at_end(void)$/;"	f	typeref:typename:void
test_blame_buffer__add_splits_hunk	extern/libgit2/tests/blame/buffer.c	/^void test_blame_buffer__add_splits_hunk(void)$/;"	f	typeref:typename:void
test_blame_buffer__added_line	extern/libgit2/tests/blame/buffer.c	/^void test_blame_buffer__added_line(void)$/;"	f	typeref:typename:void
test_blame_buffer__cleanup	extern/libgit2/tests/blame/buffer.c	/^void test_blame_buffer__cleanup(void)$/;"	f	typeref:typename:void
test_blame_buffer__delete_crosses_hunk_boundary	extern/libgit2/tests/blame/buffer.c	/^void test_blame_buffer__delete_crosses_hunk_boundary(void)$/;"	f	typeref:typename:void
test_blame_buffer__deleted_line	extern/libgit2/tests/blame/buffer.c	/^void test_blame_buffer__deleted_line(void)$/;"	f	typeref:typename:void
test_blame_buffer__initialize	extern/libgit2/tests/blame/buffer.c	/^void test_blame_buffer__initialize(void)$/;"	f	typeref:typename:void
test_blame_buffer__replace_line	extern/libgit2/tests/blame/buffer.c	/^void test_blame_buffer__replace_line(void)$/;"	f	typeref:typename:void
test_blame_getters__byindex	extern/libgit2/tests/blame/getters.c	/^void test_blame_getters__byindex(void)$/;"	f	typeref:typename:void
test_blame_getters__byline	extern/libgit2/tests/blame/getters.c	/^void test_blame_getters__byline(void)$/;"	f	typeref:typename:void
test_blame_getters__cleanup	extern/libgit2/tests/blame/getters.c	/^void test_blame_getters__cleanup(void)$/;"	f	typeref:typename:void
test_blame_getters__initialize	extern/libgit2/tests/blame/getters.c	/^void test_blame_getters__initialize(void)$/;"	f	typeref:typename:void
test_blame_harder__c	extern/libgit2/tests/blame/harder.c	/^void test_blame_harder__c(void)$/;"	f	typeref:typename:void
test_blame_harder__cc	extern/libgit2/tests/blame/harder.c	/^void test_blame_harder__cc(void)$/;"	f	typeref:typename:void
test_blame_harder__ccc	extern/libgit2/tests/blame/harder.c	/^void test_blame_harder__ccc(void)$/;"	f	typeref:typename:void
test_blame_harder__cleanup	extern/libgit2/tests/blame/harder.c	/^void test_blame_harder__cleanup(void)$/;"	f	typeref:typename:void
test_blame_harder__initialize	extern/libgit2/tests/blame/harder.c	/^void test_blame_harder__initialize(void)$/;"	f	typeref:typename:void
test_blame_harder__m	extern/libgit2/tests/blame/harder.c	/^void test_blame_harder__m(void)$/;"	f	typeref:typename:void
test_blame_simple__can_blame_huge_file	extern/libgit2/tests/blame/simple.c	/^void test_blame_simple__can_blame_huge_file(void)$/;"	f	typeref:typename:void
test_blame_simple__can_restrict_lines_both	extern/libgit2/tests/blame/simple.c	/^void test_blame_simple__can_restrict_lines_both(void)$/;"	f	typeref:typename:void
test_blame_simple__can_restrict_lines_max	extern/libgit2/tests/blame/simple.c	/^void test_blame_simple__can_restrict_lines_max(void)$/;"	f	typeref:typename:void
test_blame_simple__can_restrict_lines_min	extern/libgit2/tests/blame/simple.c	/^void test_blame_simple__can_restrict_lines_min(void)$/;"	f	typeref:typename:void
test_blame_simple__can_restrict_to_first_parent_commits	extern/libgit2/tests/blame/simple.c	/^void test_blame_simple__can_restrict_to_first_parent_commits(void)$/;"	f	typeref:typename:void
test_blame_simple__can_restrict_to_newish_commits	extern/libgit2/tests/blame/simple.c	/^void test_blame_simple__can_restrict_to_newish_commits(void)$/;"	f	typeref:typename:void
test_blame_simple__cleanup	extern/libgit2/tests/blame/simple.c	/^void test_blame_simple__cleanup(void)$/;"	f	typeref:typename:void
test_blame_simple__initialize	extern/libgit2/tests/blame/simple.c	/^void test_blame_simple__initialize(void)$/;"	f	typeref:typename:void
test_blame_simple__trivial_blamerepo	extern/libgit2/tests/blame/simple.c	/^void test_blame_simple__trivial_blamerepo(void)$/;"	f	typeref:typename:void
test_blame_simple__trivial_libgit2	extern/libgit2/tests/blame/simple.c	/^void test_blame_simple__trivial_libgit2(void)$/;"	f	typeref:typename:void
test_blame_simple__trivial_libgit2_under_cache_pressure	extern/libgit2/tests/blame/simple.c	/^void test_blame_simple__trivial_libgit2_under_cache_pressure(void)$/;"	f	typeref:typename:void
test_blame_simple__trivial_testrepo	extern/libgit2/tests/blame/simple.c	/^void test_blame_simple__trivial_testrepo(void)$/;"	f	typeref:typename:void
test_body	extern/libgit2/tests/object/raw/write.c	/^void test_body(object_data *d, git_rawobj *o)$/;"	f	typeref:typename:void
test_buf_basic__printf	extern/libgit2/tests/buf/basic.c	/^void test_buf_basic__printf(void)$/;"	f	typeref:typename:void
test_buf_basic__resize	extern/libgit2/tests/buf/basic.c	/^void test_buf_basic__resize(void)$/;"	f	typeref:typename:void
test_buf_basic__resize_incremental	extern/libgit2/tests/buf/basic.c	/^void test_buf_basic__resize_incremental(void)$/;"	f	typeref:typename:void
test_buf_oom__cleanup	extern/libgit2/tests/buf/oom.c	/^void test_buf_oom__cleanup(void)$/;"	f	typeref:typename:void
test_buf_oom__grow	extern/libgit2/tests/buf/oom.c	/^void test_buf_oom__grow(void)$/;"	f	typeref:typename:void
test_buf_oom__grow_by	extern/libgit2/tests/buf/oom.c	/^void test_buf_oom__grow_by(void)$/;"	f	typeref:typename:void
test_buf_oom__initialize	extern/libgit2/tests/buf/oom.c	/^void test_buf_oom__initialize(void)$/;"	f	typeref:typename:void
test_buf_percent__decode_succeeds	extern/libgit2/tests/buf/percent.c	/^void test_buf_percent__decode_succeeds(void)$/;"	f	typeref:typename:void
test_buf_percent__ignores_invalid	extern/libgit2/tests/buf/percent.c	/^void test_buf_percent__ignores_invalid(void)$/;"	f	typeref:typename:void
test_buf_quote__quote_succeeds	extern/libgit2/tests/buf/quote.c	/^void test_buf_quote__quote_succeeds(void)$/;"	f	typeref:typename:void
test_buf_quote__unquote_fails	extern/libgit2/tests/buf/quote.c	/^void test_buf_quote__unquote_fails(void)$/;"	f	typeref:typename:void
test_buf_quote__unquote_succeeds	extern/libgit2/tests/buf/quote.c	/^void test_buf_quote__unquote_succeeds(void)$/;"	f	typeref:typename:void
test_buf_splice__append	extern/libgit2/tests/buf/splice.c	/^void test_buf_splice__append(void)$/;"	f	typeref:typename:void
test_buf_splice__cleanup	extern/libgit2/tests/buf/splice.c	/^void test_buf_splice__cleanup(void) {$/;"	f	typeref:typename:void
test_buf_splice__dont_do_anything	extern/libgit2/tests/buf/splice.c	/^void test_buf_splice__dont_do_anything(void)$/;"	f	typeref:typename:void
test_buf_splice__initialize	extern/libgit2/tests/buf/splice.c	/^void test_buf_splice__initialize(void) {$/;"	f	typeref:typename:void
test_buf_splice__insert_at	extern/libgit2/tests/buf/splice.c	/^void test_buf_splice__insert_at(void)$/;"	f	typeref:typename:void
test_buf_splice__preprend	extern/libgit2/tests/buf/splice.c	/^void test_buf_splice__preprend(void)$/;"	f	typeref:typename:void
test_buf_splice__remove_at	extern/libgit2/tests/buf/splice.c	/^void test_buf_splice__remove_at(void)$/;"	f	typeref:typename:void
test_buf_splice__replace	extern/libgit2/tests/buf/splice.c	/^void test_buf_splice__replace(void)$/;"	f	typeref:typename:void
test_buf_splice__replace_with_longer	extern/libgit2/tests/buf/splice.c	/^void test_buf_splice__replace_with_longer(void)$/;"	f	typeref:typename:void
test_buf_splice__replace_with_shorter	extern/libgit2/tests/buf/splice.c	/^void test_buf_splice__replace_with_shorter(void)$/;"	f	typeref:typename:void
test_buf_splice__truncate	extern/libgit2/tests/buf/splice.c	/^void test_buf_splice__truncate(void)$/;"	f	typeref:typename:void
test_canonicalize	extern/libgit2/tests/path/win32.c	/^static void test_canonicalize(const wchar_t *in, const wchar_t *expected)$/;"	f	typeref:typename:void	file:
test_checkout	extern/libgit2/tests/checkout/crlf.c	/^static void test_checkout(const char *autocrlf, const char *attrs)$/;"	f	typeref:typename:void	file:
test_checkout_binaryunicode__autocrlf	extern/libgit2/tests/checkout/binaryunicode.c	/^void test_checkout_binaryunicode__autocrlf(void)$/;"	f	typeref:typename:void
test_checkout_binaryunicode__cleanup	extern/libgit2/tests/checkout/binaryunicode.c	/^void test_checkout_binaryunicode__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_binaryunicode__initialize	extern/libgit2/tests/checkout/binaryunicode.c	/^void test_checkout_binaryunicode__initialize(void)$/;"	f	typeref:typename:void
test_checkout_binaryunicode__noautocrlf	extern/libgit2/tests/checkout/binaryunicode.c	/^void test_checkout_binaryunicode__noautocrlf(void)$/;"	f	typeref:typename:void
test_checkout_conflict__add_add	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__add_add(void)$/;"	f	typeref:typename:void
test_checkout_conflict__automerge	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__automerge(void)$/;"	f	typeref:typename:void
test_checkout_conflict__cleanup	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_conflict__diff3	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__diff3(void)$/;"	f	typeref:typename:void
test_checkout_conflict__directory_file	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__directory_file(void)$/;"	f	typeref:typename:void
test_checkout_conflict__directory_file_with_custom_labels	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__directory_file_with_custom_labels(void)$/;"	f	typeref:typename:void
test_checkout_conflict__ignored	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__ignored(void)$/;"	f	typeref:typename:void
test_checkout_conflict__initialize	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__initialize(void)$/;"	f	typeref:typename:void
test_checkout_conflict__link_file	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__link_file(void)$/;"	f	typeref:typename:void
test_checkout_conflict__links	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__links(void)$/;"	f	typeref:typename:void
test_checkout_conflict__mode_change	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__mode_change(void)$/;"	f	typeref:typename:void
test_checkout_conflict__name_mangled_file_exists_in_workdir	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__name_mangled_file_exists_in_workdir(void)$/;"	f	typeref:typename:void
test_checkout_conflict__ours	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__ours(void)$/;"	f	typeref:typename:void
test_checkout_conflict__path_filters	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__path_filters(void)$/;"	f	typeref:typename:void
test_checkout_conflict__rename_keep_ours	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__rename_keep_ours(void)$/;"	f	typeref:typename:void
test_checkout_conflict__renames	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__renames(void)$/;"	f	typeref:typename:void
test_checkout_conflict__report_progress	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__report_progress(void)$/;"	f	typeref:typename:void
test_checkout_conflict__theirs	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__theirs(void)$/;"	f	typeref:typename:void
test_checkout_conflict__update_only	extern/libgit2/tests/checkout/conflict.c	/^void test_checkout_conflict__update_only(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_false_index_size_is_unfiltered_size	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_false_index_size_is_unfiltered_size(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_false_no_attrs	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_false_no_attrs(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_false_text_auto_attr	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_false_text_auto_attr(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_input_no_attrs	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_input_no_attrs(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_input_text_auto_attr	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_input_text_auto_attr(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_true_index_size_is_filtered_size	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_true_index_size_is_filtered_size(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_true_no_attrs	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_true_no_attrs(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_true_text_auto_attr	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_true_text_auto_attr(void)$/;"	f	typeref:typename:void
test_checkout_crlf__can_write_empty_file	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__can_write_empty_file(void)$/;"	f	typeref:typename:void
test_checkout_crlf__cleanup	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_crlf__detect_crlf_autocrlf_false	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__detect_crlf_autocrlf_false(void)$/;"	f	typeref:typename:void
test_checkout_crlf__detect_crlf_autocrlf_true	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__detect_crlf_autocrlf_true(void)$/;"	f	typeref:typename:void
test_checkout_crlf__detect_crlf_autocrlf_true_utf8	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__detect_crlf_autocrlf_true_utf8(void)$/;"	f	typeref:typename:void
test_checkout_crlf__initialize	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__initialize(void)$/;"	f	typeref:typename:void
test_checkout_crlf__matches_core_git	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__matches_core_git(void)$/;"	f	typeref:typename:void
test_checkout_crlf__with_ident	extern/libgit2/tests/checkout/crlf.c	/^void test_checkout_crlf__with_ident(void)$/;"	f	typeref:typename:void
test_checkout_fails	extern/libgit2/tests/checkout/nasty.c	/^static void test_checkout_fails(const char *refname, const char *filename)$/;"	f	typeref:typename:void	file:
test_checkout_head__cleanup	extern/libgit2/tests/checkout/head.c	/^void test_checkout_head__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_head__do_not_remove_untracked_file	extern/libgit2/tests/checkout/head.c	/^void test_checkout_head__do_not_remove_untracked_file(void)$/;"	f	typeref:typename:void
test_checkout_head__do_not_remove_untracked_file_in_subdir	extern/libgit2/tests/checkout/head.c	/^void test_checkout_head__do_not_remove_untracked_file_in_subdir(void)$/;"	f	typeref:typename:void
test_checkout_head__do_remove_tracked_subdir	extern/libgit2/tests/checkout/head.c	/^void test_checkout_head__do_remove_tracked_subdir(void)$/;"	f	typeref:typename:void
test_checkout_head__initialize	extern/libgit2/tests/checkout/head.c	/^void test_checkout_head__initialize(void)$/;"	f	typeref:typename:void
test_checkout_head__obeys_filemode_false	extern/libgit2/tests/checkout/head.c	/^void test_checkout_head__obeys_filemode_false(void)$/;"	f	typeref:typename:void
test_checkout_head__obeys_filemode_true	extern/libgit2/tests/checkout/head.c	/^void test_checkout_head__obeys_filemode_true(void)$/;"	f	typeref:typename:void
test_checkout_head__typechange_index_and_workdir	extern/libgit2/tests/checkout/head.c	/^void test_checkout_head__typechange_index_and_workdir(void)$/;"	f	typeref:typename:void
test_checkout_head__typechange_workdir	extern/libgit2/tests/checkout/head.c	/^void test_checkout_head__typechange_workdir(void)$/;"	f	typeref:typename:void
test_checkout_head__unborn_head_returns_GIT_EUNBORNBRANCH	extern/libgit2/tests/checkout/head.c	/^void test_checkout_head__unborn_head_returns_GIT_EUNBORNBRANCH(void)$/;"	f	typeref:typename:void
test_checkout_head__with_index_only_tree	extern/libgit2/tests/checkout/head.c	/^void test_checkout_head__with_index_only_tree(void)$/;"	f	typeref:typename:void
test_checkout_head__workdir_filemode_is_simplified	extern/libgit2/tests/checkout/head.c	/^void test_checkout_head__workdir_filemode_is_simplified(void)$/;"	f	typeref:typename:void
test_checkout_icase__cleanup	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_icase__conflicts_with_casechanged_subtrees	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__conflicts_with_casechanged_subtrees(void)$/;"	f	typeref:typename:void
test_checkout_icase__ignores_unstaged_casechange	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__ignores_unstaged_casechange(void)$/;"	f	typeref:typename:void
test_checkout_icase__initialize	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__initialize(void)$/;"	f	typeref:typename:void
test_checkout_icase__overwrites_empty_folders_for_files	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__overwrites_empty_folders_for_files(void)$/;"	f	typeref:typename:void
test_checkout_icase__overwrites_files_for_files_when_forced	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__overwrites_files_for_files_when_forced(void)$/;"	f	typeref:typename:void
test_checkout_icase__overwrites_files_for_folders_when_forced	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__overwrites_files_for_folders_when_forced(void)$/;"	f	typeref:typename:void
test_checkout_icase__overwrites_folders_for_files_when_forced	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__overwrites_folders_for_files_when_forced(void)$/;"	f	typeref:typename:void
test_checkout_icase__overwrites_links_for_files_when_forced	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__overwrites_links_for_files_when_forced(void)$/;"	f	typeref:typename:void
test_checkout_icase__overwrites_links_for_folders_when_forced	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__overwrites_links_for_folders_when_forced(void)$/;"	f	typeref:typename:void
test_checkout_icase__refuses_to_overwrite_files_for_files	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__refuses_to_overwrite_files_for_files(void)$/;"	f	typeref:typename:void
test_checkout_icase__refuses_to_overwrite_files_for_folders	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__refuses_to_overwrite_files_for_folders(void)$/;"	f	typeref:typename:void
test_checkout_icase__refuses_to_overwrite_links_for_files	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__refuses_to_overwrite_links_for_files(void)$/;"	f	typeref:typename:void
test_checkout_icase__refuses_to_overwrite_links_for_folders	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__refuses_to_overwrite_links_for_folders(void)$/;"	f	typeref:typename:void
test_checkout_icase__refuses_to_overwrite_populated_folders_for_files	extern/libgit2/tests/checkout/icase.c	/^void test_checkout_icase__refuses_to_overwrite_populated_folders_for_files(void)$/;"	f	typeref:typename:void
test_checkout_index__adding_conflict_removes_stage_0	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__adding_conflict_removes_stage_0(void)$/;"	f	typeref:typename:void
test_checkout_index__calls_progress_callback	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__calls_progress_callback(void)$/;"	f	typeref:typename:void
test_checkout_index__can_checkout_a_newly_initialized_repository	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__can_checkout_a_newly_initialized_repository(void)$/;"	f	typeref:typename:void
test_checkout_index__can_create_missing_files	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__can_create_missing_files(void)$/;"	f	typeref:typename:void
test_checkout_index__can_get_repo_from_index	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__can_get_repo_from_index(void)$/;"	f	typeref:typename:void
test_checkout_index__can_notify_of_skipped_files	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__can_notify_of_skipped_files(void)$/;"	f	typeref:typename:void
test_checkout_index__can_overcome_name_clashes	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__can_overcome_name_clashes(void)$/;"	f	typeref:typename:void
test_checkout_index__can_overwrite_modified_file	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__can_overwrite_modified_file(void)$/;"	f	typeref:typename:void
test_checkout_index__can_remove_untracked_files	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__can_remove_untracked_files(void)$/;"	f	typeref:typename:void
test_checkout_index__can_update_prefixed_files	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__can_update_prefixed_files(void)$/;"	f	typeref:typename:void
test_checkout_index__cannot_checkout_a_bare_repository	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__cannot_checkout_a_bare_repository(void)$/;"	f	typeref:typename:void
test_checkout_index__cleanup	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_index__conflicts_honor_coreautocrlf	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__conflicts_honor_coreautocrlf(void)$/;"	f	typeref:typename:void
test_checkout_index__coresymlinks_set_to_true_fails_when_unsupported	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__coresymlinks_set_to_true_fails_when_unsupported(void)$/;"	f	typeref:typename:void
test_checkout_index__donot_overwrite_modified_file_by_default	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__donot_overwrite_modified_file_by_default(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_coreautocrlf_setting_set_to_true	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__honor_coreautocrlf_setting_set_to_true(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_coresymlinks_default_false	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__honor_coresymlinks_default_false(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_coresymlinks_default_true	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__honor_coresymlinks_default_true(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_coresymlinks_setting_set_to_false	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__honor_coresymlinks_setting_set_to_false(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_coresymlinks_setting_set_to_true	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__honor_coresymlinks_setting_set_to_true(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_the_gitattributes_directives	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__honor_the_gitattributes_directives(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_the_specified_pathspecs	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__honor_the_specified_pathspecs(void)$/;"	f	typeref:typename:void
test_checkout_index__initialize	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__initialize(void)$/;"	f	typeref:typename:void
test_checkout_index__issue_1397	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__issue_1397(void)$/;"	f	typeref:typename:void
test_checkout_index__options_dir_modes	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__options_dir_modes(void)$/;"	f	typeref:typename:void
test_checkout_index__options_disable_filters	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__options_disable_filters(void)$/;"	f	typeref:typename:void
test_checkout_index__options_open_flags	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__options_open_flags(void)$/;"	f	typeref:typename:void
test_checkout_index__options_override_file_modes	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__options_override_file_modes(void)$/;"	f	typeref:typename:void
test_checkout_index__target_directory	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__target_directory(void)$/;"	f	typeref:typename:void
test_checkout_index__target_directory_from_bare	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__target_directory_from_bare(void)$/;"	f	typeref:typename:void
test_checkout_index__validates_struct_version	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__validates_struct_version(void)$/;"	f	typeref:typename:void
test_checkout_index__wont_notify_of_expected_line_ending_changes	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__wont_notify_of_expected_line_ending_changes(void)$/;"	f	typeref:typename:void
test_checkout_index__writes_conflict_file	extern/libgit2/tests/checkout/index.c	/^void test_checkout_index__writes_conflict_file(void)$/;"	f	typeref:typename:void
test_checkout_nasty__cleanup	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_backslash_dotcapitalgit_path	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dot_backslash_dotcapitalgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_dotcapitalgit_path	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dot_dotcapitalgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_dotgit_path	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dot_dotgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_dotgit_tree	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dot_dotgit_tree(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_git_colon	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dot_git_colon(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_git_colon_stuff	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dot_git_colon_stuff(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_git_dot	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dot_git_dot(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_git_hfs_ignorable	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dot_git_hfs_ignorable(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_path	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dot_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_path_two	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dot_path_two(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_tree	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dot_tree(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotcapitalgit_backslash_path	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dotcapitalgit_backslash_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotcapitalgit_path	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dotcapitalgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotcapitalgit_tree	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dotcapitalgit_tree(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotdot_dotcapitalgit_path	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dotdot_dotcapitalgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotdot_dotgit_path	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dotdot_dotgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotdot_dotgit_tree	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dotdot_dotgit_tree(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotdot_path	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dotdot_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotdot_tree	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dotdot_tree(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotgit_backslash_path	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dotgit_backslash_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotgit_path	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dotgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotgit_tree	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__dotgit_tree(void)$/;"	f	typeref:typename:void
test_checkout_nasty__git_custom_shortname	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__git_custom_shortname(void)$/;"	f	typeref:typename:void
test_checkout_nasty__git_tilde1	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__git_tilde1(void)$/;"	f	typeref:typename:void
test_checkout_nasty__gitmodules_symlink	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__gitmodules_symlink(void)$/;"	f	typeref:typename:void
test_checkout_nasty__honors_core_protecthfs	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__honors_core_protecthfs(void)$/;"	f	typeref:typename:void
test_checkout_nasty__honors_core_protectntfs	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__honors_core_protectntfs(void)$/;"	f	typeref:typename:void
test_checkout_nasty__initialize	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__initialize(void)$/;"	f	typeref:typename:void
test_checkout_nasty__only_looks_like_a_git_shortname	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__only_looks_like_a_git_shortname(void)$/;"	f	typeref:typename:void
test_checkout_nasty__symlink1	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__symlink1(void)$/;"	f	typeref:typename:void
test_checkout_nasty__symlink2	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__symlink2(void)$/;"	f	typeref:typename:void
test_checkout_nasty__symlink3	extern/libgit2/tests/checkout/nasty.c	/^void test_checkout_nasty__symlink3(void)$/;"	f	typeref:typename:void
test_checkout_notify_cb	extern/libgit2/tests/checkout/index.c	/^static int test_checkout_notify_cb($/;"	f	typeref:typename:int	file:
test_checkout_passes	extern/libgit2/tests/checkout/nasty.c	/^static void test_checkout_passes(const char *refname, const char *filename)$/;"	f	typeref:typename:void	file:
test_checkout_tree__baseline_is_empty_when_no_index	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__baseline_is_empty_when_no_index(void)$/;"	f	typeref:typename:void
test_checkout_tree__caches_attributes_during_checkout	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__caches_attributes_during_checkout(void)$/;"	f	typeref:typename:void
test_checkout_tree__calls_progress_callback	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__calls_progress_callback(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_cancel_checkout_from_notify	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_cancel_checkout_from_notify(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_checkout_a_subdirectory_from_a_commit	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_checkout_a_subdirectory_from_a_commit(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_checkout_a_subdirectory_from_a_subtree	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_checkout_a_subdirectory_from_a_subtree(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_checkout_and_remove_directory	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_checkout_and_remove_directory(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_checkout_with_last_workdir_item_missing	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_checkout_with_last_workdir_item_missing(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_checkout_with_pattern	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_checkout_with_pattern(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_collect_perfdata	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_collect_perfdata(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_continue_when_dir_in_use	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_continue_when_dir_in_use(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_disable_pattern_match	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_disable_pattern_match(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_not_update_index	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_not_update_index(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_overwrite_ignored_by_default	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_overwrite_ignored_by_default(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_overwrite_ignored_folder_by_default	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_overwrite_ignored_folder_by_default(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_remove_ignored	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_remove_ignored(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_remove_untracked	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_remove_untracked(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_switch_branches	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_switch_branches(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_update_but_not_write_index	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_update_but_not_write_index(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_update_only	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_update_only(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_write_to_empty_dirs	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__can_write_to_empty_dirs(void)$/;"	f	typeref:typename:void
test_checkout_tree__cannot_checkout_a_non_treeish	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__cannot_checkout_a_non_treeish(void)$/;"	f	typeref:typename:void
test_checkout_tree__case_changing_rename	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__case_changing_rename(void)$/;"	f	typeref:typename:void
test_checkout_tree__checking_out_a_conflicting_content_change_returns_ECONFLICT	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__checking_out_a_conflicting_content_change_returns_ECONFLICT(void)$/;"	f	typeref:typename:void
test_checkout_tree__checking_out_a_conflicting_type_change_returns_ECONFLICT	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__checking_out_a_conflicting_type_change_returns_ECONFLICT(void)$/;"	f	typeref:typename:void
test_checkout_tree__checking_out_a_conflicting_type_change_returns_ECONFLICT_2	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__checking_out_a_conflicting_type_change_returns_ECONFLICT_2(void)$/;"	f	typeref:typename:void
test_checkout_tree__cleanup	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_tree__conflict_on_ignored_folder_when_not_overwriting	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__conflict_on_ignored_folder_when_not_overwriting(void)$/;"	f	typeref:typename:void
test_checkout_tree__conflict_on_ignored_when_not_overwriting	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__conflict_on_ignored_when_not_overwriting(void)$/;"	f	typeref:typename:void
test_checkout_tree__doesnt_write_unrequested_files_to_worktree	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__doesnt_write_unrequested_files_to_worktree(void)$/;"	f	typeref:typename:void
test_checkout_tree__donot_update_deleted_file_by_default	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__donot_update_deleted_file_by_default(void)$/;"	f	typeref:typename:void
test_checkout_tree__extremely_long_file_name	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__extremely_long_file_name(void)$/;"	f	typeref:typename:void
test_checkout_tree__fails_when_conflicts_exist_in_index	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__fails_when_conflicts_exist_in_index(void)$/;"	f	typeref:typename:void
test_checkout_tree__fails_when_dir_in_use	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__fails_when_dir_in_use(void)$/;"	f	typeref:typename:void
test_checkout_tree__filemode_preserved_in_index	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__filemode_preserved_in_index(void)$/;"	f	typeref:typename:void
test_checkout_tree__filemode_preserved_in_workdir	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__filemode_preserved_in_workdir(void)$/;"	f	typeref:typename:void
test_checkout_tree__initialize	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__initialize(void)$/;"	f	typeref:typename:void
test_checkout_tree__issue_1397	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__issue_1397(void)$/;"	f	typeref:typename:void
test_checkout_tree__mode_change_is_force_updated	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__mode_change_is_force_updated(void)$/;"	f	typeref:typename:void
test_checkout_tree__no_index_refresh	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__no_index_refresh(void)$/;"	f	typeref:typename:void
test_checkout_tree__nullopts	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__nullopts(void)$/;"	f	typeref:typename:void
test_checkout_tree__pathlist_checkout_ignores_non_matches	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__pathlist_checkout_ignores_non_matches(void)$/;"	f	typeref:typename:void
test_checkout_tree__removes_conflicts	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__removes_conflicts(void)$/;"	f	typeref:typename:void
test_checkout_tree__removes_conflicts_only_by_pathscope	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__removes_conflicts_only_by_pathscope(void)$/;"	f	typeref:typename:void
test_checkout_tree__retains_external_index_changes	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__retains_external_index_changes(void)$/;"	f	typeref:typename:void
test_checkout_tree__safe_proceeds_if_no_index	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__safe_proceeds_if_no_index(void)$/;"	f	typeref:typename:void
test_checkout_tree__target_directory_from_bare	extern/libgit2/tests/checkout/tree.c	/^void test_checkout_tree__target_directory_from_bare(void)$/;"	f	typeref:typename:void
test_checkout_typechange__checkout_typechanges_safe	extern/libgit2/tests/checkout/typechange.c	/^void test_checkout_typechange__checkout_typechanges_safe(void)$/;"	f	typeref:typename:void
test_checkout_typechange__checkout_with_conflicts	extern/libgit2/tests/checkout/typechange.c	/^void test_checkout_typechange__checkout_with_conflicts(void)$/;"	f	typeref:typename:void
test_checkout_typechange__cleanup	extern/libgit2/tests/checkout/typechange.c	/^void test_checkout_typechange__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_typechange__initialize	extern/libgit2/tests/checkout/typechange.c	/^void test_checkout_typechange__initialize(void)$/;"	f	typeref:typename:void
test_checkout_typechange__status_char	extern/libgit2/tests/checkout/typechange.c	/^void test_checkout_typechange__status_char(void)$/;"	f	typeref:typename:void
test_cherrypick_bare__automerge	extern/libgit2/tests/cherrypick/bare.c	/^void test_cherrypick_bare__automerge(void)$/;"	f	typeref:typename:void
test_cherrypick_bare__cleanup	extern/libgit2/tests/cherrypick/bare.c	/^void test_cherrypick_bare__cleanup(void)$/;"	f	typeref:typename:void
test_cherrypick_bare__conflicts	extern/libgit2/tests/cherrypick/bare.c	/^void test_cherrypick_bare__conflicts(void)$/;"	f	typeref:typename:void
test_cherrypick_bare__initialize	extern/libgit2/tests/cherrypick/bare.c	/^void test_cherrypick_bare__initialize(void)$/;"	f	typeref:typename:void
test_cherrypick_bare__orphan	extern/libgit2/tests/cherrypick/bare.c	/^void test_cherrypick_bare__orphan(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__automerge	extern/libgit2/tests/cherrypick/workdir.c	/^void test_cherrypick_workdir__automerge(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__both_renamed	extern/libgit2/tests/cherrypick/workdir.c	/^void test_cherrypick_workdir__both_renamed(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__cleanup	extern/libgit2/tests/cherrypick/workdir.c	/^void test_cherrypick_workdir__cleanup(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__conflict_use_ours	extern/libgit2/tests/cherrypick/workdir.c	/^void test_cherrypick_workdir__conflict_use_ours(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__conflicts	extern/libgit2/tests/cherrypick/workdir.c	/^void test_cherrypick_workdir__conflicts(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__empty_result	extern/libgit2/tests/cherrypick/workdir.c	/^void test_cherrypick_workdir__empty_result(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__initialize	extern/libgit2/tests/cherrypick/workdir.c	/^void test_cherrypick_workdir__initialize(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__merge_fails_without_mainline_specified	extern/libgit2/tests/cherrypick/workdir.c	/^void test_cherrypick_workdir__merge_fails_without_mainline_specified(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__merge_first_parent	extern/libgit2/tests/cherrypick/workdir.c	/^void test_cherrypick_workdir__merge_first_parent(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__merge_second_parent	extern/libgit2/tests/cherrypick/workdir.c	/^void test_cherrypick_workdir__merge_second_parent(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__nonmerge_fails_mainline_specified	extern/libgit2/tests/cherrypick/workdir.c	/^void test_cherrypick_workdir__nonmerge_fails_mainline_specified(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__rename	extern/libgit2/tests/cherrypick/workdir.c	/^void test_cherrypick_workdir__rename(void)$/;"	f	typeref:typename:void
test_clone_empty__can_clone_an_empty_local_repo	extern/libgit2/tests/clone/empty.c	/^void test_clone_empty__can_clone_an_empty_local_repo(void)$/;"	f	typeref:typename:void
test_clone_empty__can_clone_an_empty_local_repo_barely	extern/libgit2/tests/clone/empty.c	/^void test_clone_empty__can_clone_an_empty_local_repo_barely(void)$/;"	f	typeref:typename:void
test_clone_empty__can_clone_an_empty_standard_repo	extern/libgit2/tests/clone/empty.c	/^void test_clone_empty__can_clone_an_empty_standard_repo(void)$/;"	f	typeref:typename:void
test_clone_empty__cleanup	extern/libgit2/tests/clone/empty.c	/^void test_clone_empty__cleanup(void)$/;"	f	typeref:typename:void
test_clone_empty__initialize	extern/libgit2/tests/clone/empty.c	/^void test_clone_empty__initialize(void)$/;"	f	typeref:typename:void
test_clone_local__git_style_unc_paths	extern/libgit2/tests/clone/local.c	/^void test_clone_local__git_style_unc_paths(void)$/;"	f	typeref:typename:void
test_clone_local__hardlinks	extern/libgit2/tests/clone/local.c	/^void test_clone_local__hardlinks(void)$/;"	f	typeref:typename:void
test_clone_local__should_clone_local	extern/libgit2/tests/clone/local.c	/^void test_clone_local__should_clone_local(void)$/;"	f	typeref:typename:void
test_clone_local__standard_unc_paths_are_written_git_style	extern/libgit2/tests/clone/local.c	/^void test_clone_local__standard_unc_paths_are_written_git_style(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__bad_urls	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__bad_urls(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__can_cancel_clone_in_checkout	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__can_cancel_clone_in_checkout(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__can_cancel_clone_in_fetch	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__can_cancel_clone_in_fetch(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__can_checkout_given_branch	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__can_checkout_given_branch(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__can_detached_head	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__can_detached_head(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__can_prevent_the_checkout_of_a_standard_repo	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__can_prevent_the_checkout_of_a_standard_repo(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__cleanup	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__cleanup(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__clone_from_empty_sets_upstream	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__clone_from_empty_sets_upstream(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__clone_submodule	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__clone_submodule(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__clone_tag_to_tree	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__clone_tag_to_tree(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__clone_updates_reflog_properly	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__clone_updates_reflog_properly(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__cope_with_already_existing_directory	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__cope_with_already_existing_directory(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__custom_origin_name	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__custom_origin_name(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__defaults	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__defaults(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__do_not_clean_existing_directory	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__do_not_clean_existing_directory(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__fail_when_the_target_is_a_file	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__fail_when_the_target_is_a_file(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__fail_with_already_existing_but_non_empty_directory	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__fail_with_already_existing_but_non_empty_directory(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__initialize	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__initialize(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__local	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__local(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__local_absolute_path	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__local_absolute_path(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__local_bare	extern/libgit2/tests/clone/nonetwork.c	/^void test_clone_nonetwork__local_bare(void)$/;"	f	typeref:typename:void
test_clone_transport__custom_transport	extern/libgit2/tests/clone/transport.c	/^void test_clone_transport__custom_transport(void)$/;"	f	typeref:typename:void
test_cmp	extern/libgit2/tests/core/vector.c	/^static int test_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
test_commit_commit__body	extern/libgit2/tests/commit/commit.c	/^void test_commit_commit__body(void)$/;"	f	typeref:typename:void
test_commit_commit__cleanup	extern/libgit2/tests/commit/commit.c	/^void test_commit_commit__cleanup(void)$/;"	f	typeref:typename:void
test_commit_commit__create_initial_commit	extern/libgit2/tests/commit/commit.c	/^void test_commit_commit__create_initial_commit(void)$/;"	f	typeref:typename:void
test_commit_commit__create_initial_commit_parent_not_current	extern/libgit2/tests/commit/commit.c	/^void test_commit_commit__create_initial_commit_parent_not_current(void)$/;"	f	typeref:typename:void
test_commit_commit__create_unexisting_update_ref	extern/libgit2/tests/commit/commit.c	/^void test_commit_commit__create_unexisting_update_ref(void)$/;"	f	typeref:typename:void
test_commit_commit__initialize	extern/libgit2/tests/commit/commit.c	/^void test_commit_commit__initialize(void)$/;"	f	typeref:typename:void
test_commit_commit__summary	extern/libgit2/tests/commit/commit.c	/^void test_commit_commit__summary(void)$/;"	f	typeref:typename:void
test_commit_parent__can_retrieve_nth_generation_parent	extern/libgit2/tests/commit/parent.c	/^void test_commit_parent__can_retrieve_nth_generation_parent(void)$/;"	f	typeref:typename:void
test_commit_parent__cleanup	extern/libgit2/tests/commit/parent.c	/^void test_commit_parent__cleanup(void)$/;"	f	typeref:typename:void
test_commit_parent__initialize	extern/libgit2/tests/commit/parent.c	/^void test_commit_parent__initialize(void)$/;"	f	typeref:typename:void
test_commit_parse__arbitrary_field	extern/libgit2/tests/commit/parse.c	/^void test_commit_parse__arbitrary_field(void)$/;"	f	typeref:typename:void
test_commit_parse__cleanup	extern/libgit2/tests/commit/parse.c	/^void test_commit_parse__cleanup(void)$/;"	f	typeref:typename:void
test_commit_parse__details0	extern/libgit2/tests/commit/parse.c	/^void test_commit_parse__details0(void) {$/;"	f	typeref:typename:void
test_commit_parse__entire_commit	extern/libgit2/tests/commit/parse.c	/^void test_commit_parse__entire_commit(void)$/;"	f	typeref:typename:void
test_commit_parse__extract_signature	extern/libgit2/tests/commit/parse.c	/^void test_commit_parse__extract_signature(void)$/;"	f	typeref:typename:void
test_commit_parse__header	extern/libgit2/tests/commit/parse.c	/^void test_commit_parse__header(void)$/;"	f	typeref:typename:void
test_commit_parse__initialize	extern/libgit2/tests/commit/parse.c	/^void test_commit_parse__initialize(void)$/;"	f	typeref:typename:void
test_commit_parse__leading_lf	extern/libgit2/tests/commit/parse.c	/^void test_commit_parse__leading_lf(void)$/;"	f	typeref:typename:void
test_commit_parse__only_lf	extern/libgit2/tests/commit/parse.c	/^void test_commit_parse__only_lf(void)$/;"	f	typeref:typename:void
test_commit_parse__signature	extern/libgit2/tests/commit/parse.c	/^void test_commit_parse__signature(void)$/;"	f	typeref:typename:void
test_commit_signature__angle_brackets_in_email_are_not_supported	extern/libgit2/tests/commit/signature.c	/^void test_commit_signature__angle_brackets_in_email_are_not_supported(void)$/;"	f	typeref:typename:void
test_commit_signature__angle_brackets_in_names_are_not_supported	extern/libgit2/tests/commit/signature.c	/^void test_commit_signature__angle_brackets_in_names_are_not_supported(void)$/;"	f	typeref:typename:void
test_commit_signature__create_empties	extern/libgit2/tests/commit/signature.c	/^void test_commit_signature__create_empties(void)$/;"	f	typeref:typename:void
test_commit_signature__create_one_char	extern/libgit2/tests/commit/signature.c	/^void test_commit_signature__create_one_char(void)$/;"	f	typeref:typename:void
test_commit_signature__create_two_char	extern/libgit2/tests/commit/signature.c	/^void test_commit_signature__create_two_char(void)$/;"	f	typeref:typename:void
test_commit_signature__create_zero_char	extern/libgit2/tests/commit/signature.c	/^void test_commit_signature__create_zero_char(void)$/;"	f	typeref:typename:void
test_commit_signature__from_buf	extern/libgit2/tests/commit/signature.c	/^void test_commit_signature__from_buf(void)$/;"	f	typeref:typename:void
test_commit_signature__from_buf_with_neg_zero_offset	extern/libgit2/tests/commit/signature.c	/^void test_commit_signature__from_buf_with_neg_zero_offset(void)$/;"	f	typeref:typename:void
test_commit_signature__leading_and_trailing_crud_is_trimmed	extern/libgit2/tests/commit/signature.c	/^void test_commit_signature__leading_and_trailing_crud_is_trimmed(void)$/;"	f	typeref:typename:void
test_commit_signature__leading_and_trailing_spaces_are_trimmed	extern/libgit2/tests/commit/signature.c	/^void test_commit_signature__leading_and_trailing_spaces_are_trimmed(void)$/;"	f	typeref:typename:void
test_commit_signature__pos_and_neg_zero_offsets_dont_match	extern/libgit2/tests/commit/signature.c	/^void test_commit_signature__pos_and_neg_zero_offsets_dont_match(void)$/;"	f	typeref:typename:void
test_commit_signature__timezone_does_not_read_oob	extern/libgit2/tests/commit/signature.c	/^void test_commit_signature__timezone_does_not_read_oob(void)$/;"	f	typeref:typename:void
test_commit_write__attach_multiline_signature	extern/libgit2/tests/commit/write.c	/^void test_commit_write__attach_multiline_signature(void)$/;"	f	typeref:typename:void
test_commit_write__attach_singleline_signature	extern/libgit2/tests/commit/write.c	/^void test_commit_write__attach_singleline_signature(void)$/;"	f	typeref:typename:void
test_commit_write__can_validate_objects	extern/libgit2/tests/commit/write.c	/^void test_commit_write__can_validate_objects(void)$/;"	f	typeref:typename:void
test_commit_write__can_write_invalid_objects	extern/libgit2/tests/commit/write.c	/^void test_commit_write__can_write_invalid_objects(void)$/;"	f	typeref:typename:void
test_commit_write__cleanup	extern/libgit2/tests/commit/write.c	/^void test_commit_write__cleanup(void)$/;"	f	typeref:typename:void
test_commit_write__from_memory	extern/libgit2/tests/commit/write.c	/^void test_commit_write__from_memory(void)$/;"	f	typeref:typename:void
test_commit_write__initialize	extern/libgit2/tests/commit/write.c	/^void test_commit_write__initialize(void)$/;"	f	typeref:typename:void
test_commit_write__into_buf	extern/libgit2/tests/commit/write.c	/^void test_commit_write__into_buf(void)$/;"	f	typeref:typename:void
test_commit_write__root	extern/libgit2/tests/commit/write.c	/^void test_commit_write__root(void)$/;"	f	typeref:typename:void
test_config_add__cleanup	extern/libgit2/tests/config/add.c	/^void test_config_add__cleanup(void)$/;"	f	typeref:typename:void
test_config_add__initialize	extern/libgit2/tests/config/add.c	/^void test_config_add__initialize(void)$/;"	f	typeref:typename:void
test_config_add__to_existing_section	extern/libgit2/tests/config/add.c	/^void test_config_add__to_existing_section(void)$/;"	f	typeref:typename:void
test_config_add__to_new_section	extern/libgit2/tests/config/add.c	/^void test_config_add__to_new_section(void)$/;"	f	typeref:typename:void
test_config_backend__checks_version	extern/libgit2/tests/config/backend.c	/^void test_config_backend__checks_version(void)$/;"	f	typeref:typename:void
test_config_conditionals__cleanup	extern/libgit2/tests/config/conditionals.c	/^void test_config_conditionals__cleanup(void)$/;"	f	typeref:typename:void
test_config_conditionals__gitdir	extern/libgit2/tests/config/conditionals.c	/^void test_config_conditionals__gitdir(void)$/;"	f	typeref:typename:void
test_config_conditionals__gitdir_i	extern/libgit2/tests/config/conditionals.c	/^void test_config_conditionals__gitdir_i(void)$/;"	f	typeref:typename:void
test_config_conditionals__initialize	extern/libgit2/tests/config/conditionals.c	/^void test_config_conditionals__initialize(void)$/;"	f	typeref:typename:void
test_config_conditionals__invalid_conditional_fails	extern/libgit2/tests/config/conditionals.c	/^void test_config_conditionals__invalid_conditional_fails(void)$/;"	f	typeref:typename:void
test_config_conditionals__onbranch	extern/libgit2/tests/config/conditionals.c	/^void test_config_conditionals__onbranch(void)$/;"	f	typeref:typename:void
test_config_configlevel__adding_the_same_level_twice_returns_EEXISTS	extern/libgit2/tests/config/configlevel.c	/^void test_config_configlevel__adding_the_same_level_twice_returns_EEXISTS(void)$/;"	f	typeref:typename:void
test_config_configlevel__can_read_from_a_single_level_focused_file_after_parent_config_has_been_freed	extern/libgit2/tests/config/configlevel.c	/^void test_config_configlevel__can_read_from_a_single_level_focused_file_after_parent_config_has_/;"	f	typeref:typename:void
test_config_configlevel__can_replace_a_config_file_at_an_existing_level	extern/libgit2/tests/config/configlevel.c	/^void test_config_configlevel__can_replace_a_config_file_at_an_existing_level(void)$/;"	f	typeref:typename:void
test_config_configlevel__fetching_a_level_from_an_empty_compound_config_returns_ENOTFOUND	extern/libgit2/tests/config/configlevel.c	/^void test_config_configlevel__fetching_a_level_from_an_empty_compound_config_returns_ENOTFOUND(v/;"	f	typeref:typename:void
test_config_global__cleanup	extern/libgit2/tests/config/global.c	/^void test_config_global__cleanup(void)$/;"	f	typeref:typename:void
test_config_global__initialize	extern/libgit2/tests/config/global.c	/^void test_config_global__initialize(void)$/;"	f	typeref:typename:void
test_config_global__lock_missing_global_config	extern/libgit2/tests/config/global.c	/^void test_config_global__lock_missing_global_config(void)$/;"	f	typeref:typename:void
test_config_global__open_global	extern/libgit2/tests/config/global.c	/^void test_config_global__open_global(void)$/;"	f	typeref:typename:void
test_config_global__open_programdata	extern/libgit2/tests/config/global.c	/^void test_config_global__open_programdata(void)$/;"	f	typeref:typename:void
test_config_global__open_symlinked_global	extern/libgit2/tests/config/global.c	/^void test_config_global__open_symlinked_global(void)$/;"	f	typeref:typename:void
test_config_global__open_xdg	extern/libgit2/tests/config/global.c	/^void test_config_global__open_xdg(void)$/;"	f	typeref:typename:void
test_config_include__absolute	extern/libgit2/tests/config/include.c	/^void test_config_include__absolute(void)$/;"	f	typeref:typename:void
test_config_include__cleanup	extern/libgit2/tests/config/include.c	/^void test_config_include__cleanup(void)$/;"	f	typeref:typename:void
test_config_include__depth	extern/libgit2/tests/config/include.c	/^void test_config_include__depth(void)$/;"	f	typeref:typename:void
test_config_include__depth2	extern/libgit2/tests/config/include.c	/^void test_config_include__depth2(void)$/;"	f	typeref:typename:void
test_config_include__empty_path_sanely_handled	extern/libgit2/tests/config/include.c	/^void test_config_include__empty_path_sanely_handled(void)$/;"	f	typeref:typename:void
test_config_include__homedir	extern/libgit2/tests/config/include.c	/^void test_config_include__homedir(void)$/;"	f	typeref:typename:void
test_config_include__included_variables_cannot_be_deleted	extern/libgit2/tests/config/include.c	/^void test_config_include__included_variables_cannot_be_deleted(void)$/;"	f	typeref:typename:void
test_config_include__included_variables_cannot_be_modified	extern/libgit2/tests/config/include.c	/^void test_config_include__included_variables_cannot_be_modified(void)$/;"	f	typeref:typename:void
test_config_include__initialize	extern/libgit2/tests/config/include.c	/^void test_config_include__initialize(void)$/;"	f	typeref:typename:void
test_config_include__missing	extern/libgit2/tests/config/include.c	/^void test_config_include__missing(void)$/;"	f	typeref:typename:void
test_config_include__missing_homedir	extern/libgit2/tests/config/include.c	/^void test_config_include__missing_homedir(void)$/;"	f	typeref:typename:void
test_config_include__ordering	extern/libgit2/tests/config/include.c	/^void test_config_include__ordering(void)$/;"	f	typeref:typename:void
test_config_include__relative	extern/libgit2/tests/config/include.c	/^void test_config_include__relative(void)$/;"	f	typeref:typename:void
test_config_include__removing_include_removes_values	extern/libgit2/tests/config/include.c	/^void test_config_include__removing_include_removes_values(void)$/;"	f	typeref:typename:void
test_config_include__rewriting_include_refreshes_values	extern/libgit2/tests/config/include.c	/^void test_config_include__rewriting_include_refreshes_values(void)$/;"	f	typeref:typename:void
test_config_include__variables_in_included_override_including	extern/libgit2/tests/config/include.c	/^void test_config_include__variables_in_included_override_including(void)$/;"	f	typeref:typename:void
test_config_include__variables_in_including_override_included	extern/libgit2/tests/config/include.c	/^void test_config_include__variables_in_including_override_included(void)$/;"	f	typeref:typename:void
test_config_memory__cleanup	extern/libgit2/tests/config/memory.c	/^void test_config_memory__cleanup(void)$/;"	f	typeref:typename:void
test_config_memory__foreach_sees_multivar	extern/libgit2/tests/config/memory.c	/^void test_config_memory__foreach_sees_multivar(void)$/;"	f	typeref:typename:void
test_config_memory__initialize	extern/libgit2/tests/config/memory.c	/^void test_config_memory__initialize(void)$/;"	f	typeref:typename:void
test_config_memory__malformed_fails_to_open	extern/libgit2/tests/config/memory.c	/^void test_config_memory__malformed_fails_to_open(void)$/;"	f	typeref:typename:void
test_config_memory__multiple_sections	extern/libgit2/tests/config/memory.c	/^void test_config_memory__multiple_sections(void)$/;"	f	typeref:typename:void
test_config_memory__multiple_vars	extern/libgit2/tests/config/memory.c	/^void test_config_memory__multiple_vars(void)$/;"	f	typeref:typename:void
test_config_memory__multivar_gets_correct_string	extern/libgit2/tests/config/memory.c	/^void test_config_memory__multivar_gets_correct_string(void)$/;"	f	typeref:typename:void
test_config_memory__simple	extern/libgit2/tests/config/memory.c	/^void test_config_memory__simple(void)$/;"	f	typeref:typename:void
test_config_memory__write_operations_fail	extern/libgit2/tests/config/memory.c	/^void test_config_memory__write_operations_fail(void)$/;"	f	typeref:typename:void
test_config_multivar__add	extern/libgit2/tests/config/multivar.c	/^void test_config_multivar__add(void)$/;"	f	typeref:typename:void
test_config_multivar__add_new	extern/libgit2/tests/config/multivar.c	/^void test_config_multivar__add_new(void)$/;"	f	typeref:typename:void
test_config_multivar__cleanup	extern/libgit2/tests/config/multivar.c	/^void test_config_multivar__cleanup(void)$/;"	f	typeref:typename:void
test_config_multivar__delete	extern/libgit2/tests/config/multivar.c	/^void test_config_multivar__delete(void)$/;"	f	typeref:typename:void
test_config_multivar__delete_multiple	extern/libgit2/tests/config/multivar.c	/^void test_config_multivar__delete_multiple(void)$/;"	f	typeref:typename:void
test_config_multivar__delete_notfound	extern/libgit2/tests/config/multivar.c	/^void test_config_multivar__delete_notfound(void)$/;"	f	typeref:typename:void
test_config_multivar__foreach	extern/libgit2/tests/config/multivar.c	/^void test_config_multivar__foreach(void)$/;"	f	typeref:typename:void
test_config_multivar__get	extern/libgit2/tests/config/multivar.c	/^void test_config_multivar__get(void)$/;"	f	typeref:typename:void
test_config_multivar__initialize	extern/libgit2/tests/config/multivar.c	/^void test_config_multivar__initialize(void)$/;"	f	typeref:typename:void
test_config_multivar__replace	extern/libgit2/tests/config/multivar.c	/^void test_config_multivar__replace(void)$/;"	f	typeref:typename:void
test_config_multivar__replace_multiple	extern/libgit2/tests/config/multivar.c	/^void test_config_multivar__replace_multiple(void)$/;"	f	typeref:typename:void
test_config_new__write_new_config	extern/libgit2/tests/config/new.c	/^void test_config_new__write_new_config(void)$/;"	f	typeref:typename:void
test_config_read__arbitrary_whitespace_before_subsection	extern/libgit2/tests/config/read.c	/^void test_config_read__arbitrary_whitespace_before_subsection(void)$/;"	f	typeref:typename:void
test_config_read__blank_lines	extern/libgit2/tests/config/read.c	/^void test_config_read__blank_lines(void)$/;"	f	typeref:typename:void
test_config_read__bom	extern/libgit2/tests/config/read.c	/^void test_config_read__bom(void)$/;"	f	typeref:typename:void
test_config_read__can_load_and_parse_an_empty_config_file	extern/libgit2/tests/config/read.c	/^void test_config_read__can_load_and_parse_an_empty_config_file(void)$/;"	f	typeref:typename:void
test_config_read__case_sensitive	extern/libgit2/tests/config/read.c	/^void test_config_read__case_sensitive(void)$/;"	f	typeref:typename:void
test_config_read__cleanup	extern/libgit2/tests/config/read.c	/^void test_config_read__cleanup(void)$/;"	f	typeref:typename:void
test_config_read__corrupt_header	extern/libgit2/tests/config/read.c	/^void test_config_read__corrupt_header(void)$/;"	f	typeref:typename:void
test_config_read__corrupt_header2	extern/libgit2/tests/config/read.c	/^void test_config_read__corrupt_header2(void)$/;"	f	typeref:typename:void
test_config_read__corrupt_header3	extern/libgit2/tests/config/read.c	/^void test_config_read__corrupt_header3(void)$/;"	f	typeref:typename:void
test_config_read__crlf_style_line_endings	extern/libgit2/tests/config/read.c	/^void test_config_read__crlf_style_line_endings(void)$/;"	f	typeref:typename:void
test_config_read__empty_files	extern/libgit2/tests/config/read.c	/^void test_config_read__empty_files(void)$/;"	f	typeref:typename:void
test_config_read__escaping_quotes	extern/libgit2/tests/config/read.c	/^void test_config_read__escaping_quotes(void)$/;"	f	typeref:typename:void
test_config_read__fallback_from_local_to_global_and_from_global_to_system	extern/libgit2/tests/config/read.c	/^void test_config_read__fallback_from_local_to_global_and_from_global_to_system(void)$/;"	f	typeref:typename:void
test_config_read__foreach	extern/libgit2/tests/config/read.c	/^void test_config_read__foreach(void)$/;"	f	typeref:typename:void
test_config_read__foreach_match	extern/libgit2/tests/config/read.c	/^void test_config_read__foreach_match(void)$/;"	f	typeref:typename:void
test_config_read__header_in_last_line	extern/libgit2/tests/config/read.c	/^void test_config_read__header_in_last_line(void)$/;"	f	typeref:typename:void
test_config_read__invalid_escape_sequence	extern/libgit2/tests/config/read.c	/^void test_config_read__invalid_escape_sequence(void)$/;"	f	typeref:typename:void
test_config_read__invalid_ext_headers	extern/libgit2/tests/config/read.c	/^void test_config_read__invalid_ext_headers(void)$/;"	f	typeref:typename:void
test_config_read__invalid_key_chars	extern/libgit2/tests/config/read.c	/^void test_config_read__invalid_key_chars(void)$/;"	f	typeref:typename:void
test_config_read__invalid_quoted_first_section	extern/libgit2/tests/config/read.c	/^void test_config_read__invalid_quoted_first_section(void)$/;"	f	typeref:typename:void
test_config_read__invalid_quoted_third_section	extern/libgit2/tests/config/read.c	/^void test_config_read__invalid_quoted_third_section(void)$/;"	f	typeref:typename:void
test_config_read__invalid_space_section	extern/libgit2/tests/config/read.c	/^void test_config_read__invalid_space_section(void)$/;"	f	typeref:typename:void
test_config_read__invalid_unquoted_subsection	extern/libgit2/tests/config/read.c	/^void test_config_read__invalid_unquoted_subsection(void)$/;"	f	typeref:typename:void
test_config_read__iterator	extern/libgit2/tests/config/read.c	/^void test_config_read__iterator(void)$/;"	f	typeref:typename:void
test_config_read__iterator_glob	extern/libgit2/tests/config/read.c	/^void test_config_read__iterator_glob(void)$/;"	f	typeref:typename:void
test_config_read__iterator_invalid_glob	extern/libgit2/tests/config/read.c	/^void test_config_read__iterator_invalid_glob(void)$/;"	f	typeref:typename:void
test_config_read__local_config_overrides_global_config_overrides_system_config	extern/libgit2/tests/config/read.c	/^void test_config_read__local_config_overrides_global_config_overrides_system_config(void)$/;"	f	typeref:typename:void
test_config_read__lone_variable	extern/libgit2/tests/config/read.c	/^void test_config_read__lone_variable(void)$/;"	f	typeref:typename:void
test_config_read__lone_variable_with_trailing_whitespace	extern/libgit2/tests/config/read.c	/^void test_config_read__lone_variable_with_trailing_whitespace(void)$/;"	f	typeref:typename:void
test_config_read__multiline_eof	extern/libgit2/tests/config/read.c	/^void test_config_read__multiline_eof(void)$/;"	f	typeref:typename:void
test_config_read__multiline_value	extern/libgit2/tests/config/read.c	/^void test_config_read__multiline_value(void)$/;"	f	typeref:typename:void
test_config_read__multiline_value_and_eof	extern/libgit2/tests/config/read.c	/^void test_config_read__multiline_value_and_eof(void)$/;"	f	typeref:typename:void
test_config_read__no_whitespace_after_subsection	extern/libgit2/tests/config/read.c	/^void test_config_read__no_whitespace_after_subsection(void)$/;"	f	typeref:typename:void
test_config_read__nosection	extern/libgit2/tests/config/read.c	/^void test_config_read__nosection(void)$/;"	f	typeref:typename:void
test_config_read__number_suffixes	extern/libgit2/tests/config/read.c	/^void test_config_read__number_suffixes(void)$/;"	f	typeref:typename:void
test_config_read__override_variable	extern/libgit2/tests/config/read.c	/^void test_config_read__override_variable(void)$/;"	f	typeref:typename:void
test_config_read__parent_dir_is_file	extern/libgit2/tests/config/read.c	/^void test_config_read__parent_dir_is_file(void)$/;"	f	typeref:typename:void
test_config_read__path	extern/libgit2/tests/config/read.c	/^void test_config_read__path(void)$/;"	f	typeref:typename:void
test_config_read__prefixes	extern/libgit2/tests/config/read.c	/^void test_config_read__prefixes(void)$/;"	f	typeref:typename:void
test_config_read__read_git_config_entry	extern/libgit2/tests/config/read.c	/^void test_config_read__read_git_config_entry(void)$/;"	f	typeref:typename:void
test_config_read__simple_read	extern/libgit2/tests/config/read.c	/^void test_config_read__simple_read(void)$/;"	f	typeref:typename:void
test_config_read__simple_read_from_specific_level	extern/libgit2/tests/config/read.c	/^void test_config_read__simple_read_from_specific_level(void)$/;"	f	typeref:typename:void
test_config_read__single_line	extern/libgit2/tests/config/read.c	/^void test_config_read__single_line(void)$/;"	f	typeref:typename:void
test_config_read__subsection_header	extern/libgit2/tests/config/read.c	/^void test_config_read__subsection_header(void)$/;"	f	typeref:typename:void
test_config_read__symbol_headers	extern/libgit2/tests/config/read.c	/^void test_config_read__symbol_headers(void)$/;"	f	typeref:typename:void
test_config_read__trailing_crlf	extern/libgit2/tests/config/read.c	/^void test_config_read__trailing_crlf(void)$/;"	f	typeref:typename:void
test_config_read__whitespace_not_required_around_assignment	extern/libgit2/tests/config/read.c	/^void test_config_read__whitespace_not_required_around_assignment(void)$/;"	f	typeref:typename:void
test_config_readonly__cleanup	extern/libgit2/tests/config/readonly.c	/^void test_config_readonly__cleanup(void)$/;"	f	typeref:typename:void
test_config_readonly__initialize	extern/libgit2/tests/config/readonly.c	/^void test_config_readonly__initialize(void)$/;"	f	typeref:typename:void
test_config_readonly__writing_to_cfg_with_ro_precedence_succeeds	extern/libgit2/tests/config/readonly.c	/^void test_config_readonly__writing_to_cfg_with_ro_precedence_succeeds(void)$/;"	f	typeref:typename:void
test_config_readonly__writing_to_cfg_with_rw_precedence_succeeds	extern/libgit2/tests/config/readonly.c	/^void test_config_readonly__writing_to_cfg_with_rw_precedence_succeeds(void)$/;"	f	typeref:typename:void
test_config_readonly__writing_to_readonly_fails	extern/libgit2/tests/config/readonly.c	/^void test_config_readonly__writing_to_readonly_fails(void)$/;"	f	typeref:typename:void
test_config_rename__can_rename	extern/libgit2/tests/config/rename.c	/^void test_config_rename__can_rename(void)$/;"	f	typeref:typename:void
test_config_rename__cleanup	extern/libgit2/tests/config/rename.c	/^void test_config_rename__cleanup(void)$/;"	f	typeref:typename:void
test_config_rename__initialize	extern/libgit2/tests/config/rename.c	/^void test_config_rename__initialize(void)$/;"	f	typeref:typename:void
test_config_rename__prevent_overwrite	extern/libgit2/tests/config/rename.c	/^void test_config_rename__prevent_overwrite(void)$/;"	f	typeref:typename:void
test_config_rename__require_a_valid_new_name	extern/libgit2/tests/config/rename.c	/^void test_config_rename__require_a_valid_new_name(void)$/;"	f	typeref:typename:void
test_config_snapshot__cleanup	extern/libgit2/tests/config/snapshot.c	/^void test_config_snapshot__cleanup(void)$/;"	f	typeref:typename:void
test_config_snapshot__create_snapshot	extern/libgit2/tests/config/snapshot.c	/^void test_config_snapshot__create_snapshot(void)$/;"	f	typeref:typename:void
test_config_snapshot__includes	extern/libgit2/tests/config/snapshot.c	/^void test_config_snapshot__includes(void)$/;"	f	typeref:typename:void
test_config_snapshot__multivar	extern/libgit2/tests/config/snapshot.c	/^void test_config_snapshot__multivar(void)$/;"	f	typeref:typename:void
test_config_stress__cleanup	extern/libgit2/tests/config/stress.c	/^void test_config_stress__cleanup(void)$/;"	f	typeref:typename:void
test_config_stress__comments	extern/libgit2/tests/config/stress.c	/^void test_config_stress__comments(void)$/;"	f	typeref:typename:void
test_config_stress__complex	extern/libgit2/tests/config/stress.c	/^void test_config_stress__complex(void)$/;"	f	typeref:typename:void
test_config_stress__dont_break_on_invalid_input	extern/libgit2/tests/config/stress.c	/^void test_config_stress__dont_break_on_invalid_input(void)$/;"	f	typeref:typename:void
test_config_stress__escape_subsection_names	extern/libgit2/tests/config/stress.c	/^void test_config_stress__escape_subsection_names(void)$/;"	f	typeref:typename:void
test_config_stress__foreach_refreshes	extern/libgit2/tests/config/stress.c	/^void test_config_stress__foreach_refreshes(void)$/;"	f	typeref:typename:void
test_config_stress__foreach_refreshes_snapshot	extern/libgit2/tests/config/stress.c	/^void test_config_stress__foreach_refreshes_snapshot(void)$/;"	f	typeref:typename:void
test_config_stress__initialize	extern/libgit2/tests/config/stress.c	/^void test_config_stress__initialize(void)$/;"	f	typeref:typename:void
test_config_stress__quick_write	extern/libgit2/tests/config/stress.c	/^void test_config_stress__quick_write(void)$/;"	f	typeref:typename:void
test_config_stress__trailing_backslash	extern/libgit2/tests/config/stress.c	/^void test_config_stress__trailing_backslash(void)$/;"	f	typeref:typename:void
test_config_validkeyname__accessing_requires_a_valid_name	extern/libgit2/tests/config/validkeyname.c	/^void test_config_validkeyname__accessing_requires_a_valid_name(void)$/;"	f	typeref:typename:void
test_config_validkeyname__cleanup	extern/libgit2/tests/config/validkeyname.c	/^void test_config_validkeyname__cleanup(void)$/;"	f	typeref:typename:void
test_config_validkeyname__initialize	extern/libgit2/tests/config/validkeyname.c	/^void test_config_validkeyname__initialize(void)$/;"	f	typeref:typename:void
test_config_write__add_section_at_file_with_no_clrf_at_the_end	extern/libgit2/tests/config/write.c	/^void test_config_write__add_section_at_file_with_no_clrf_at_the_end(void)$/;"	f	typeref:typename:void
test_config_write__add_value_at_file_with_no_clrf_at_the_end	extern/libgit2/tests/config/write.c	/^void test_config_write__add_value_at_file_with_no_clrf_at_the_end(void)$/;"	f	typeref:typename:void
test_config_write__add_value_at_specific_level	extern/libgit2/tests/config/write.c	/^void test_config_write__add_value_at_specific_level(void)$/;"	f	typeref:typename:void
test_config_write__add_value_which_needs_quotes	extern/libgit2/tests/config/write.c	/^void test_config_write__add_value_which_needs_quotes(void)$/;"	f	typeref:typename:void
test_config_write__add_value_with_duplicate_header	extern/libgit2/tests/config/write.c	/^void test_config_write__add_value_with_duplicate_header(void)$/;"	f	typeref:typename:void
test_config_write__can_set_a_value_to_NULL	extern/libgit2/tests/config/write.c	/^void test_config_write__can_set_a_value_to_NULL(void)$/;"	f	typeref:typename:void
test_config_write__can_set_an_empty_value	extern/libgit2/tests/config/write.c	/^void test_config_write__can_set_an_empty_value(void)$/;"	f	typeref:typename:void
test_config_write__cleanup	extern/libgit2/tests/config/write.c	/^void test_config_write__cleanup(void)$/;"	f	typeref:typename:void
test_config_write__delete_inexistent	extern/libgit2/tests/config/write.c	/^void test_config_write__delete_inexistent(void)$/;"	f	typeref:typename:void
test_config_write__delete_value	extern/libgit2/tests/config/write.c	/^void test_config_write__delete_value(void)$/;"	f	typeref:typename:void
test_config_write__delete_value_at_specific_level	extern/libgit2/tests/config/write.c	/^void test_config_write__delete_value_at_specific_level(void)$/;"	f	typeref:typename:void
test_config_write__delete_value_with_duplicate_header	extern/libgit2/tests/config/write.c	/^void test_config_write__delete_value_with_duplicate_header(void)$/;"	f	typeref:typename:void
test_config_write__escape_value	extern/libgit2/tests/config/write.c	/^void test_config_write__escape_value(void)$/;"	f	typeref:typename:void
test_config_write__initialize	extern/libgit2/tests/config/write.c	/^void test_config_write__initialize(void)$/;"	f	typeref:typename:void
test_config_write__locking	extern/libgit2/tests/config/write.c	/^void test_config_write__locking(void)$/;"	f	typeref:typename:void
test_config_write__outside_change	extern/libgit2/tests/config/write.c	/^void test_config_write__outside_change(void)$/;"	f	typeref:typename:void
test_config_write__overwrite_multivar_within_duplicate_header	extern/libgit2/tests/config/write.c	/^void test_config_write__overwrite_multivar_within_duplicate_header(void)$/;"	f	typeref:typename:void
test_config_write__overwrite_value_with_duplicate_header	extern/libgit2/tests/config/write.c	/^void test_config_write__overwrite_value_with_duplicate_header(void)$/;"	f	typeref:typename:void
test_config_write__preserve_case	extern/libgit2/tests/config/write.c	/^void test_config_write__preserve_case(void)$/;"	f	typeref:typename:void
test_config_write__preserves_entry_with_name_only	extern/libgit2/tests/config/write.c	/^void test_config_write__preserves_entry_with_name_only(void)$/;"	f	typeref:typename:void
test_config_write__preserves_whitespace_and_comments	extern/libgit2/tests/config/write.c	/^void test_config_write__preserves_whitespace_and_comments(void)$/;"	f	typeref:typename:void
test_config_write__repeated	extern/libgit2/tests/config/write.c	/^void test_config_write__repeated(void)$/;"	f	typeref:typename:void
test_config_write__replace_value	extern/libgit2/tests/config/write.c	/^void test_config_write__replace_value(void)$/;"	f	typeref:typename:void
test_config_write__to_empty_file	extern/libgit2/tests/config/write.c	/^void test_config_write__to_empty_file(void)$/;"	f	typeref:typename:void
test_config_write__to_file_with_only_comment	extern/libgit2/tests/config/write.c	/^void test_config_write__to_file_with_only_comment(void)$/;"	f	typeref:typename:void
test_config_write__updating_a_locked_config_file_returns_ELOCKED	extern/libgit2/tests/config/write.c	/^void test_config_write__updating_a_locked_config_file_returns_ELOCKED(void)$/;"	f	typeref:typename:void
test_config_write__value_containing_quotes	extern/libgit2/tests/config/write.c	/^void test_config_write__value_containing_quotes(void)$/;"	f	typeref:typename:void
test_config_write__write_subsection	extern/libgit2/tests/config/write.c	/^void test_config_write__write_subsection(void)$/;"	f	typeref:typename:void
test_copy_note	extern/libgit2/tests/rebase/merge.c	/^static void test_copy_note($/;"	f	typeref:typename:void	file:
test_core_array__bsearch2	extern/libgit2/tests/core/array.c	/^void test_core_array__bsearch2(void)$/;"	f	typeref:typename:void
test_core_bitvec__0	extern/libgit2/tests/core/bitvec.c	/^void test_core_bitvec__0(void)$/;"	f	typeref:typename:void
test_core_buffer__0	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__0(void)$/;"	f	typeref:typename:void
test_core_buffer__1	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__1(void)$/;"	f	typeref:typename:void
test_core_buffer__10	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__10(void)$/;"	f	typeref:typename:void
test_core_buffer__11	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__11(void)$/;"	f	typeref:typename:void
test_core_buffer__2	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__2(void)$/;"	f	typeref:typename:void
test_core_buffer__3	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__3(void)$/;"	f	typeref:typename:void
test_core_buffer__4	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__4(void)$/;"	f	typeref:typename:void
test_core_buffer__5	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__5(void)$/;"	f	typeref:typename:void
test_core_buffer__6	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__6(void)$/;"	f	typeref:typename:void
test_core_buffer__7	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__7(void)$/;"	f	typeref:typename:void
test_core_buffer__8	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__8(void)$/;"	f	typeref:typename:void
test_core_buffer__9	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__9(void)$/;"	f	typeref:typename:void
test_core_buffer__avoid_printing_into_oom_buffer	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__avoid_printing_into_oom_buffer(void)$/;"	f	typeref:typename:void
test_core_buffer__classify_with_utf8	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__classify_with_utf8(void)$/;"	f	typeref:typename:void
test_core_buffer__decode_base64	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__decode_base64(void)$/;"	f	typeref:typename:void
test_core_buffer__decode_base85	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__decode_base85(void)$/;"	f	typeref:typename:void
test_core_buffer__decode_base85_fails_gracefully	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__decode_base85_fails_gracefully(void)$/;"	f	typeref:typename:void
test_core_buffer__dont_grow_borrowed	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__dont_grow_borrowed(void)$/;"	f	typeref:typename:void
test_core_buffer__dont_hit_infinite_loop_when_resizing	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__dont_hit_infinite_loop_when_resizing(void)$/;"	f	typeref:typename:void
test_core_buffer__encode_base64	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__encode_base64(void)$/;"	f	typeref:typename:void
test_core_buffer__encode_base85	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__encode_base85(void)$/;"	f	typeref:typename:void
test_core_buffer__join3	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__join3(void)$/;"	f	typeref:typename:void
test_core_buffer__lf_and_crlf_conversions	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__lf_and_crlf_conversions(void)$/;"	f	typeref:typename:void
test_core_buffer__puts_escaped	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__puts_escaped(void)$/;"	f	typeref:typename:void
test_core_buffer__rfind_variants	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__rfind_variants(void)$/;"	f	typeref:typename:void
test_core_buffer__similarity_metric	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__similarity_metric(void)$/;"	f	typeref:typename:void
test_core_buffer__similarity_metric_whitespace	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__similarity_metric_whitespace(void)$/;"	f	typeref:typename:void
test_core_buffer__unescape	extern/libgit2/tests/core/buffer.c	/^void test_core_buffer__unescape(void)$/;"	f	typeref:typename:void
test_core_copy__file	extern/libgit2/tests/core/copy.c	/^void test_core_copy__file(void)$/;"	f	typeref:typename:void
test_core_copy__file_in_dir	extern/libgit2/tests/core/copy.c	/^void test_core_copy__file_in_dir(void)$/;"	f	typeref:typename:void
test_core_copy__tree	extern/libgit2/tests/core/copy.c	/^void test_core_copy__tree(void)$/;"	f	typeref:typename:void
test_core_dirent__diriter_at_directory_root	extern/libgit2/tests/core/dirent.c	/^void test_core_dirent__diriter_at_directory_root(void)$/;"	f	typeref:typename:void
test_core_dirent__diriter_with_fullname	extern/libgit2/tests/core/dirent.c	/^void test_core_dirent__diriter_with_fullname(void)$/;"	f	typeref:typename:void
test_core_dirent__dont_traverse_dot	extern/libgit2/tests/core/dirent.c	/^void test_core_dirent__dont_traverse_dot(void)$/;"	f	typeref:typename:void
test_core_dirent__dont_traverse_empty_folders	extern/libgit2/tests/core/dirent.c	/^void test_core_dirent__dont_traverse_empty_folders(void)$/;"	f	typeref:typename:void
test_core_dirent__empty_dir	extern/libgit2/tests/core/dirent.c	/^void test_core_dirent__empty_dir(void)$/;"	f	typeref:typename:void
test_core_dirent__length_limits	extern/libgit2/tests/core/dirent.c	/^void test_core_dirent__length_limits(void)$/;"	f	typeref:typename:void
test_core_dirent__traverse_slash_terminated_folder	extern/libgit2/tests/core/dirent.c	/^void test_core_dirent__traverse_slash_terminated_folder(void)$/;"	f	typeref:typename:void
test_core_dirent__traverse_subfolder	extern/libgit2/tests/core/dirent.c	/^void test_core_dirent__traverse_subfolder(void)$/;"	f	typeref:typename:void
test_core_dirent__traverse_weird_filenames	extern/libgit2/tests/core/dirent.c	/^void test_core_dirent__traverse_weird_filenames(void)$/;"	f	typeref:typename:void
test_core_encoding__decode	extern/libgit2/tests/core/encoding.c	/^void test_core_encoding__decode(void)$/;"	f	typeref:typename:void
test_core_encoding__encode	extern/libgit2/tests/core/encoding.c	/^void test_core_encoding__encode(void)$/;"	f	typeref:typename:void
test_core_env__0	extern/libgit2/tests/core/env.c	/^void test_core_env__0(void)$/;"	f	typeref:typename:void
test_core_env__1	extern/libgit2/tests/core/env.c	/^void test_core_env__1(void)$/;"	f	typeref:typename:void
test_core_env__2	extern/libgit2/tests/core/env.c	/^void test_core_env__2(void)$/;"	f	typeref:typename:void
test_core_env__cleanup	extern/libgit2/tests/core/env.c	/^void test_core_env__cleanup(void)$/;"	f	typeref:typename:void
test_core_env__initialize	extern/libgit2/tests/core/env.c	/^void test_core_env__initialize(void)$/;"	f	typeref:typename:void
test_core_env__substitution	extern/libgit2/tests/core/env.c	/^void test_core_env__substitution(void)$/;"	f	typeref:typename:void
test_core_errors__free_state	extern/libgit2/tests/core/errors.c	/^void test_core_errors__free_state(void)$/;"	f	typeref:typename:void
test_core_errors__integer_overflow_alloc_add	extern/libgit2/tests/core/errors.c	/^void test_core_errors__integer_overflow_alloc_add(void)$/;"	f	typeref:typename:void
test_core_errors__integer_overflow_alloc_multiply	extern/libgit2/tests/core/errors.c	/^void test_core_errors__integer_overflow_alloc_multiply(void)$/;"	f	typeref:typename:void
test_core_errors__integer_overflow_sets_oom	extern/libgit2/tests/core/errors.c	/^void test_core_errors__integer_overflow_sets_oom(void)$/;"	f	typeref:typename:void
test_core_errors__new_school	extern/libgit2/tests/core/errors.c	/^void test_core_errors__new_school(void)$/;"	f	typeref:typename:void
test_core_errors__public_api	extern/libgit2/tests/core/errors.c	/^void test_core_errors__public_api(void)$/;"	f	typeref:typename:void
test_core_errors__restore	extern/libgit2/tests/core/errors.c	/^void test_core_errors__restore(void)$/;"	f	typeref:typename:void
test_core_errors__restore_oom	extern/libgit2/tests/core/errors.c	/^void test_core_errors__restore_oom(void)$/;"	f	typeref:typename:void
test_core_features__0	extern/libgit2/tests/core/features.c	/^void test_core_features__0(void)$/;"	f	typeref:typename:void
test_core_filebuf__0	extern/libgit2/tests/core/filebuf.c	/^void test_core_filebuf__0(void)$/;"	f	typeref:typename:void
test_core_filebuf__1	extern/libgit2/tests/core/filebuf.c	/^void test_core_filebuf__1(void)$/;"	f	typeref:typename:void
test_core_filebuf__2	extern/libgit2/tests/core/filebuf.c	/^void test_core_filebuf__2(void)$/;"	f	typeref:typename:void
test_core_filebuf__4	extern/libgit2/tests/core/filebuf.c	/^void test_core_filebuf__4(void)$/;"	f	typeref:typename:void
test_core_filebuf__5	extern/libgit2/tests/core/filebuf.c	/^void test_core_filebuf__5(void)$/;"	f	typeref:typename:void
test_core_filebuf__detects_directory	extern/libgit2/tests/core/filebuf.c	/^void test_core_filebuf__detects_directory(void)$/;"	f	typeref:typename:void
test_core_filebuf__hidden_file	extern/libgit2/tests/core/filebuf.c	/^void test_core_filebuf__hidden_file(void)$/;"	f	typeref:typename:void
test_core_filebuf__rename_error	extern/libgit2/tests/core/filebuf.c	/^void test_core_filebuf__rename_error(void)$/;"	f	typeref:typename:void
test_core_filebuf__symlink_depth	extern/libgit2/tests/core/filebuf.c	/^void test_core_filebuf__symlink_depth(void)$/;"	f	typeref:typename:void
test_core_filebuf__symlink_follow	extern/libgit2/tests/core/filebuf.c	/^void test_core_filebuf__symlink_follow(void)$/;"	f	typeref:typename:void
test_core_filebuf__symlink_follow_absolute_paths	extern/libgit2/tests/core/filebuf.c	/^void test_core_filebuf__symlink_follow_absolute_paths(void)$/;"	f	typeref:typename:void
test_core_filebuf__umask	extern/libgit2/tests/core/filebuf.c	/^void test_core_filebuf__umask(void)$/;"	f	typeref:typename:void
test_core_ftruncate__2gb	extern/libgit2/tests/core/ftruncate.c	/^void test_core_ftruncate__2gb(void)$/;"	f	typeref:typename:void
test_core_ftruncate__4gb	extern/libgit2/tests/core/ftruncate.c	/^void test_core_ftruncate__4gb(void)$/;"	f	typeref:typename:void
test_core_ftruncate__cleanup	extern/libgit2/tests/core/ftruncate.c	/^void test_core_ftruncate__cleanup(void)$/;"	f	typeref:typename:void
test_core_ftruncate__initialize	extern/libgit2/tests/core/ftruncate.c	/^void test_core_ftruncate__initialize(void)$/;"	f	typeref:typename:void
test_core_futils__cleanup	extern/libgit2/tests/core/futils.c	/^void test_core_futils__cleanup(void)$/;"	f	typeref:typename:void
test_core_futils__initialize	extern/libgit2/tests/core/futils.c	/^void test_core_futils__initialize(void)$/;"	f	typeref:typename:void
test_core_futils__recursive_rmdir_keeps_symlink_targets	extern/libgit2/tests/core/futils.c	/^void test_core_futils__recursive_rmdir_keeps_symlink_targets(void)$/;"	f	typeref:typename:void
test_core_futils__write_hidden_file	extern/libgit2/tests/core/futils.c	/^void test_core_futils__write_hidden_file(void)$/;"	f	typeref:typename:void
test_core_futils__writebuffer	extern/libgit2/tests/core/futils.c	/^void test_core_futils__writebuffer(void)$/;"	f	typeref:typename:void
test_core_hex__fromhex	extern/libgit2/tests/core/hex.c	/^void test_core_hex__fromhex(void)$/;"	f	typeref:typename:void
test_core_iconv__cleanup	extern/libgit2/tests/core/iconv.c	/^void test_core_iconv__cleanup(void)$/;"	f	typeref:typename:void
test_core_iconv__decomposed_to_precomposed	extern/libgit2/tests/core/iconv.c	/^void test_core_iconv__decomposed_to_precomposed(void)$/;"	f	typeref:typename:void
test_core_iconv__initialize	extern/libgit2/tests/core/iconv.c	/^void test_core_iconv__initialize(void)$/;"	f	typeref:typename:void
test_core_iconv__precomposed_is_unmodified	extern/libgit2/tests/core/iconv.c	/^void test_core_iconv__precomposed_is_unmodified(void)$/;"	f	typeref:typename:void
test_core_iconv__unchanged	extern/libgit2/tests/core/iconv.c	/^void test_core_iconv__unchanged(void)$/;"	f	typeref:typename:void
test_core_init__concurrent_init_succeeds	extern/libgit2/tests/core/init.c	/^void test_core_init__concurrent_init_succeeds(void)$/;"	f	typeref:typename:void
test_core_init__reinit_succeeds	extern/libgit2/tests/core/init.c	/^void test_core_init__reinit_succeeds(void)$/;"	f	typeref:typename:void
test_core_init__returns_count	extern/libgit2/tests/core/init.c	/^void test_core_init__returns_count(void)$/;"	f	typeref:typename:void
test_core_link__cleanup	extern/libgit2/tests/core/link.c	/^void test_core_link__cleanup(void)$/;"	f	typeref:typename:void
test_core_link__lstat_dangling_junction	extern/libgit2/tests/core/link.c	/^void test_core_link__lstat_dangling_junction(void)$/;"	f	typeref:typename:void
test_core_link__lstat_dangling_symlink	extern/libgit2/tests/core/link.c	/^void test_core_link__lstat_dangling_symlink(void)$/;"	f	typeref:typename:void
test_core_link__lstat_dangling_symlink_directory	extern/libgit2/tests/core/link.c	/^void test_core_link__lstat_dangling_symlink_directory(void)$/;"	f	typeref:typename:void
test_core_link__lstat_hardlink	extern/libgit2/tests/core/link.c	/^void test_core_link__lstat_hardlink(void)$/;"	f	typeref:typename:void
test_core_link__lstat_junction	extern/libgit2/tests/core/link.c	/^void test_core_link__lstat_junction(void)$/;"	f	typeref:typename:void
test_core_link__lstat_regular_file	extern/libgit2/tests/core/link.c	/^void test_core_link__lstat_regular_file(void)$/;"	f	typeref:typename:void
test_core_link__lstat_reparse_point	extern/libgit2/tests/core/link.c	/^void test_core_link__lstat_reparse_point(void)$/;"	f	typeref:typename:void
test_core_link__lstat_symlink	extern/libgit2/tests/core/link.c	/^void test_core_link__lstat_symlink(void)$/;"	f	typeref:typename:void
test_core_link__lstat_symlink_directory	extern/libgit2/tests/core/link.c	/^void test_core_link__lstat_symlink_directory(void)$/;"	f	typeref:typename:void
test_core_link__readlink_dangling	extern/libgit2/tests/core/link.c	/^void test_core_link__readlink_dangling(void)$/;"	f	typeref:typename:void
test_core_link__readlink_multiple	extern/libgit2/tests/core/link.c	/^void test_core_link__readlink_multiple(void)$/;"	f	typeref:typename:void
test_core_link__readlink_nonexistent_file	extern/libgit2/tests/core/link.c	/^void test_core_link__readlink_nonexistent_file(void)$/;"	f	typeref:typename:void
test_core_link__readlink_normal_file	extern/libgit2/tests/core/link.c	/^void test_core_link__readlink_normal_file(void)$/;"	f	typeref:typename:void
test_core_link__readlink_symlink	extern/libgit2/tests/core/link.c	/^void test_core_link__readlink_symlink(void)$/;"	f	typeref:typename:void
test_core_link__stat_dangling_junction	extern/libgit2/tests/core/link.c	/^void test_core_link__stat_dangling_junction(void)$/;"	f	typeref:typename:void
test_core_link__stat_dangling_symlink	extern/libgit2/tests/core/link.c	/^void test_core_link__stat_dangling_symlink(void)$/;"	f	typeref:typename:void
test_core_link__stat_dangling_symlink_directory	extern/libgit2/tests/core/link.c	/^void test_core_link__stat_dangling_symlink_directory(void)$/;"	f	typeref:typename:void
test_core_link__stat_hardlink	extern/libgit2/tests/core/link.c	/^void test_core_link__stat_hardlink(void)$/;"	f	typeref:typename:void
test_core_link__stat_junction	extern/libgit2/tests/core/link.c	/^void test_core_link__stat_junction(void)$/;"	f	typeref:typename:void
test_core_link__stat_regular_file	extern/libgit2/tests/core/link.c	/^void test_core_link__stat_regular_file(void)$/;"	f	typeref:typename:void
test_core_link__stat_reparse_point	extern/libgit2/tests/core/link.c	/^void test_core_link__stat_reparse_point(void)$/;"	f	typeref:typename:void
test_core_link__stat_symlink	extern/libgit2/tests/core/link.c	/^void test_core_link__stat_symlink(void)$/;"	f	typeref:typename:void
test_core_link__stat_symlink_chain	extern/libgit2/tests/core/link.c	/^void test_core_link__stat_symlink_chain(void)$/;"	f	typeref:typename:void
test_core_link__stat_symlink_directory	extern/libgit2/tests/core/link.c	/^void test_core_link__stat_symlink_directory(void)$/;"	f	typeref:typename:void
test_core_memmem__absent	extern/libgit2/tests/core/memmem.c	/^void test_core_memmem__absent(void)$/;"	f	typeref:typename:void
test_core_memmem__edgecases	extern/libgit2/tests/core/memmem.c	/^void test_core_memmem__edgecases(void)$/;"	f	typeref:typename:void
test_core_memmem__found	extern/libgit2/tests/core/memmem.c	/^void test_core_memmem__found(void)$/;"	f	typeref:typename:void
test_core_mkdir__absolute	extern/libgit2/tests/core/mkdir.c	/^void test_core_mkdir__absolute(void)$/;"	f	typeref:typename:void
test_core_mkdir__basic	extern/libgit2/tests/core/mkdir.c	/^void test_core_mkdir__basic(void)$/;"	f	typeref:typename:void
test_core_mkdir__chmods	extern/libgit2/tests/core/mkdir.c	/^void test_core_mkdir__chmods(void)$/;"	f	typeref:typename:void
test_core_mkdir__keeps_parent_symlinks	extern/libgit2/tests/core/mkdir.c	/^void test_core_mkdir__keeps_parent_symlinks(void)$/;"	f	typeref:typename:void
test_core_mkdir__mkdir_path_inside_unwriteable_parent	extern/libgit2/tests/core/mkdir.c	/^void test_core_mkdir__mkdir_path_inside_unwriteable_parent(void)$/;"	f	typeref:typename:void
test_core_mkdir__with_base	extern/libgit2/tests/core/mkdir.c	/^void test_core_mkdir__with_base(void)$/;"	f	typeref:typename:void
test_core_oid__initialize	extern/libgit2/tests/core/oid.c	/^void test_core_oid__initialize(void)$/;"	f	typeref:typename:void
test_core_oid__ncmp	extern/libgit2/tests/core/oid.c	/^void test_core_oid__ncmp(void)$/;"	f	typeref:typename:void
test_core_oid__strcmp	extern/libgit2/tests/core/oid.c	/^void test_core_oid__strcmp(void)$/;"	f	typeref:typename:void
test_core_oid__streq	extern/libgit2/tests/core/oid.c	/^void test_core_oid__streq(void)$/;"	f	typeref:typename:void
test_core_oidmap__basic	extern/libgit2/tests/core/oidmap.c	/^void test_core_oidmap__basic(void)$/;"	f	typeref:typename:void
test_core_oidmap__cleanup	extern/libgit2/tests/core/oidmap.c	/^void test_core_oidmap__cleanup(void)$/;"	f	typeref:typename:void
test_core_oidmap__get_fails_with_nonexisting_key	extern/libgit2/tests/core/oidmap.c	/^void test_core_oidmap__get_fails_with_nonexisting_key(void)$/;"	f	typeref:typename:void
test_core_oidmap__get_succeeds_with_existing_keys	extern/libgit2/tests/core/oidmap.c	/^void test_core_oidmap__get_succeeds_with_existing_keys(void)$/;"	f	typeref:typename:void
test_core_oidmap__hash_collision	extern/libgit2/tests/core/oidmap.c	/^void test_core_oidmap__hash_collision(void)$/;"	f	typeref:typename:void
test_core_oidmap__initialize	extern/libgit2/tests/core/oidmap.c	/^void test_core_oidmap__initialize(void)$/;"	f	typeref:typename:void
test_core_oidmap__setting_existing_key_updates	extern/libgit2/tests/core/oidmap.c	/^void test_core_oidmap__setting_existing_key_updates(void)$/;"	f	typeref:typename:void
test_core_oidmap__setting_oid_persists	extern/libgit2/tests/core/oidmap.c	/^void test_core_oidmap__setting_oid_persists(void)$/;"	f	typeref:typename:void
test_core_opts__invalid_option	extern/libgit2/tests/core/opts.c	/^void test_core_opts__invalid_option(void)$/;"	f	typeref:typename:void
test_core_opts__readwrite	extern/libgit2/tests/core/opts.c	/^void test_core_opts__readwrite(void)$/;"	f	typeref:typename:void
test_core_path__00_dirname	extern/libgit2/tests/core/path.c	/^void test_core_path__00_dirname(void)$/;"	f	typeref:typename:void
test_core_path__01_basename	extern/libgit2/tests/core/path.c	/^void test_core_path__01_basename(void)$/;"	f	typeref:typename:void
test_core_path__02_topdir	extern/libgit2/tests/core/path.c	/^void test_core_path__02_topdir(void)$/;"	f	typeref:typename:void
test_core_path__05_joins	extern/libgit2/tests/core/path.c	/^void test_core_path__05_joins(void)$/;"	f	typeref:typename:void
test_core_path__06_long_joins	extern/libgit2/tests/core/path.c	/^void test_core_path__06_long_joins(void)$/;"	f	typeref:typename:void
test_core_path__07_path_to_dir	extern/libgit2/tests/core/path.c	/^void test_core_path__07_path_to_dir(void)$/;"	f	typeref:typename:void
test_core_path__08_self_join	extern/libgit2/tests/core/path.c	/^void test_core_path__08_self_join(void)$/;"	f	typeref:typename:void
test_core_path__09_percent_decode	extern/libgit2/tests/core/path.c	/^void test_core_path__09_percent_decode(void)$/;"	f	typeref:typename:void
test_core_path__10_fromurl	extern/libgit2/tests/core/path.c	/^void test_core_path__10_fromurl(void)$/;"	f	typeref:typename:void
test_core_path__11_walkup	extern/libgit2/tests/core/path.c	/^void test_core_path__11_walkup(void)$/;"	f	typeref:typename:void
test_core_path__11a_walkup_cancel	extern/libgit2/tests/core/path.c	/^void test_core_path__11a_walkup_cancel(void)$/;"	f	typeref:typename:void
test_core_path__12_offset_to_path_root	extern/libgit2/tests/core/path.c	/^void test_core_path__12_offset_to_path_root(void)$/;"	f	typeref:typename:void
test_core_path__13_cannot_prettify_a_non_existing_file	extern/libgit2/tests/core/path.c	/^void test_core_path__13_cannot_prettify_a_non_existing_file(void)$/;"	f	typeref:typename:void
test_core_path__14_apply_relative	extern/libgit2/tests/core/path.c	/^void test_core_path__14_apply_relative(void)$/;"	f	typeref:typename:void
test_core_path__15_resolve_relative	extern/libgit2/tests/core/path.c	/^void test_core_path__15_resolve_relative(void)$/;"	f	typeref:typename:void
test_core_path__16_resolve_relative	extern/libgit2/tests/core/path.c	/^void test_core_path__16_resolve_relative(void)$/;"	f	typeref:typename:void
test_core_path__git_path_is_file	extern/libgit2/tests/core/path.c	/^void test_core_path__git_path_is_file(void)$/;"	f	typeref:typename:void
test_core_pool__0	extern/libgit2/tests/core/pool.c	/^void test_core_pool__0(void)$/;"	f	typeref:typename:void
test_core_pool__1	extern/libgit2/tests/core/pool.c	/^void test_core_pool__1(void)$/;"	f	typeref:typename:void
test_core_pool__2	extern/libgit2/tests/core/pool.c	/^void test_core_pool__2(void)$/;"	f	typeref:typename:void
test_core_pool__strndup_limit	extern/libgit2/tests/core/pool.c	/^void test_core_pool__strndup_limit(void)$/;"	f	typeref:typename:void
test_core_posix__inet_pton	extern/libgit2/tests/core/posix.c	/^void test_core_posix__inet_pton(void)$/;"	f	typeref:typename:void
test_core_posix__initialize	extern/libgit2/tests/core/posix.c	/^void test_core_posix__initialize(void)$/;"	f	typeref:typename:void
test_core_posix__p_regcomp_compile_userdiff_regexps	extern/libgit2/tests/core/posix.c	/^void test_core_posix__p_regcomp_compile_userdiff_regexps(void)$/;"	f	typeref:typename:void
test_core_posix__p_regcomp_ignores_global_locale_collate	extern/libgit2/tests/core/posix.c	/^void test_core_posix__p_regcomp_ignores_global_locale_collate(void)$/;"	f	typeref:typename:void
test_core_posix__p_regcomp_ignores_global_locale_ctype	extern/libgit2/tests/core/posix.c	/^void test_core_posix__p_regcomp_ignores_global_locale_ctype(void)$/;"	f	typeref:typename:void
test_core_posix__p_regcomp_matches_alphabet_with_locale	extern/libgit2/tests/core/posix.c	/^void test_core_posix__p_regcomp_matches_alphabet_with_locale(void)$/;"	f	typeref:typename:void
test_core_posix__p_regcomp_matches_digits_with_locale	extern/libgit2/tests/core/posix.c	/^void test_core_posix__p_regcomp_matches_digits_with_locale(void)$/;"	f	typeref:typename:void
test_core_posix__symlink_resolves_to_correct_type	extern/libgit2/tests/core/posix.c	/^void test_core_posix__symlink_resolves_to_correct_type(void)$/;"	f	typeref:typename:void
test_core_posix__unlink_removes_symlink	extern/libgit2/tests/core/posix.c	/^void test_core_posix__unlink_removes_symlink(void)$/;"	f	typeref:typename:void
test_core_posix__utimes	extern/libgit2/tests/core/posix.c	/^void test_core_posix__utimes(void)$/;"	f	typeref:typename:void
test_core_pqueue__interleave_inserts_and_pops	extern/libgit2/tests/core/pqueue.c	/^void test_core_pqueue__interleave_inserts_and_pops(void)$/;"	f	typeref:typename:void
test_core_pqueue__interleaved_pushes_and_pops	extern/libgit2/tests/core/pqueue.c	/^void test_core_pqueue__interleaved_pushes_and_pops(void)$/;"	f	typeref:typename:void
test_core_pqueue__items_are_put_in_order	extern/libgit2/tests/core/pqueue.c	/^void test_core_pqueue__items_are_put_in_order(void)$/;"	f	typeref:typename:void
test_core_pqueue__max_heap_size	extern/libgit2/tests/core/pqueue.c	/^void test_core_pqueue__max_heap_size(void)$/;"	f	typeref:typename:void
test_core_pqueue__max_heap_size_without_comparison	extern/libgit2/tests/core/pqueue.c	/^void test_core_pqueue__max_heap_size_without_comparison(void)$/;"	f	typeref:typename:void
test_core_qsort__array_with_equal_entries	extern/libgit2/tests/core/qsort.c	/^void test_core_qsort__array_with_equal_entries(void)$/;"	f	typeref:typename:void
test_core_qsort__array_with_single_entry	extern/libgit2/tests/core/qsort.c	/^void test_core_qsort__array_with_single_entry(void)$/;"	f	typeref:typename:void
test_core_qsort__sorted_array	extern/libgit2/tests/core/qsort.c	/^void test_core_qsort__sorted_array(void)$/;"	f	typeref:typename:void
test_core_qsort__sorting_big_entries	extern/libgit2/tests/core/qsort.c	/^void test_core_qsort__sorting_big_entries(void)$/;"	f	typeref:typename:void
test_core_qsort__sorting_strings	extern/libgit2/tests/core/qsort.c	/^void test_core_qsort__sorting_strings(void)$/;"	f	typeref:typename:void
test_core_qsort__unsorted_array	extern/libgit2/tests/core/qsort.c	/^void test_core_qsort__unsorted_array(void)$/;"	f	typeref:typename:void
test_core_rmdir__can_remove_empty_parents	extern/libgit2/tests/core/rmdir.c	/^void test_core_rmdir__can_remove_empty_parents(void)$/;"	f	typeref:typename:void
test_core_rmdir__can_skip_non_empty_dir	extern/libgit2/tests/core/rmdir.c	/^void test_core_rmdir__can_skip_non_empty_dir(void)$/;"	f	typeref:typename:void
test_core_rmdir__cleanup	extern/libgit2/tests/core/rmdir.c	/^void test_core_rmdir__cleanup(void)$/;"	f	typeref:typename:void
test_core_rmdir__delete_recursive	extern/libgit2/tests/core/rmdir.c	/^void test_core_rmdir__delete_recursive(void)$/;"	f	typeref:typename:void
test_core_rmdir__fail_to_delete_non_empty_dir	extern/libgit2/tests/core/rmdir.c	/^void test_core_rmdir__fail_to_delete_non_empty_dir(void)$/;"	f	typeref:typename:void
test_core_rmdir__initialize	extern/libgit2/tests/core/rmdir.c	/^void test_core_rmdir__initialize(void)$/;"	f	typeref:typename:void
test_core_rmdir__keep_base	extern/libgit2/tests/core/rmdir.c	/^void test_core_rmdir__keep_base(void)$/;"	f	typeref:typename:void
test_core_sha1__cleanup	extern/libgit2/tests/core/sha1.c	/^void test_core_sha1__cleanup(void)$/;"	f	typeref:typename:void
test_core_sha1__detect_collision_attack	extern/libgit2/tests/core/sha1.c	/^void test_core_sha1__detect_collision_attack(void)$/;"	f	typeref:typename:void
test_core_sha1__initialize	extern/libgit2/tests/core/sha1.c	/^void test_core_sha1__initialize(void)$/;"	f	typeref:typename:void
test_core_sha1__sum	extern/libgit2/tests/core/sha1.c	/^void test_core_sha1__sum(void)$/;"	f	typeref:typename:void
test_core_sortedcache__in_memory	extern/libgit2/tests/core/sortedcache.c	/^void test_core_sortedcache__in_memory(void)$/;"	f	typeref:typename:void
test_core_sortedcache__name_only	extern/libgit2/tests/core/sortedcache.c	/^void test_core_sortedcache__name_only(void)$/;"	f	typeref:typename:void
test_core_sortedcache__on_disk	extern/libgit2/tests/core/sortedcache.c	/^void test_core_sortedcache__on_disk(void)$/;"	f	typeref:typename:void
test_core_stat__0	extern/libgit2/tests/core/stat.c	/^void test_core_stat__0(void)$/;"	f	typeref:typename:void
test_core_stat__cleanup	extern/libgit2/tests/core/stat.c	/^void test_core_stat__cleanup(void)$/;"	f	typeref:typename:void
test_core_stat__initialize	extern/libgit2/tests/core/stat.c	/^void test_core_stat__initialize(void)$/;"	f	typeref:typename:void
test_core_stat__root	extern/libgit2/tests/core/stat.c	/^void test_core_stat__root(void)$/;"	f	typeref:typename:void
test_core_string__0	extern/libgit2/tests/core/string.c	/^void test_core_string__0(void)$/;"	f	typeref:typename:void
test_core_string__1	extern/libgit2/tests/core/string.c	/^void test_core_string__1(void)$/;"	f	typeref:typename:void
test_core_string__2	extern/libgit2/tests/core/string.c	/^void test_core_string__2(void)$/;"	f	typeref:typename:void
test_core_string__prefixncmp	extern/libgit2/tests/core/string.c	/^void test_core_string__prefixncmp(void)$/;"	f	typeref:typename:void
test_core_string__prefixncmp_icase	extern/libgit2/tests/core/string.c	/^void test_core_string__prefixncmp_icase(void)$/;"	f	typeref:typename:void
test_core_string__strcasecmp	extern/libgit2/tests/core/string.c	/^void test_core_string__strcasecmp(void)$/;"	f	typeref:typename:void
test_core_string__strcmp	extern/libgit2/tests/core/string.c	/^void test_core_string__strcmp(void)$/;"	f	typeref:typename:void
test_core_strmap__0	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__0(void)$/;"	f	typeref:typename:void
test_core_strmap__cleanup	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__cleanup(void)$/;"	f	typeref:typename:void
test_core_strmap__deleted_entry_cannot_be_retrieved	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__deleted_entry_cannot_be_retrieved(void)$/;"	f	typeref:typename:void
test_core_strmap__get_returns_null_on_nonexisting_key	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__get_returns_null_on_nonexisting_key(void)$/;"	f	typeref:typename:void
test_core_strmap__get_succeeds_with_existing_entries	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__get_succeeds_with_existing_entries(void)$/;"	f	typeref:typename:void
test_core_strmap__initialize	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__initialize(void)$/;"	f	typeref:typename:void
test_core_strmap__inserted_strings_can_be_retrieved	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__inserted_strings_can_be_retrieved(void)$/;"	f	typeref:typename:void
test_core_strmap__inserting_many_keys_succeeds	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__inserting_many_keys_succeeds(void)$/;"	f	typeref:typename:void
test_core_strmap__iterating_empty_map_stops_immediately	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__iterating_empty_map_stops_immediately(void)$/;"	f	typeref:typename:void
test_core_strmap__iteration	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__iteration(void)$/;"	f	typeref:typename:void
test_core_strmap__set_persists_key	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__set_persists_key(void)$/;"	f	typeref:typename:void
test_core_strmap__set_persists_multpile_keys	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__set_persists_multpile_keys(void)$/;"	f	typeref:typename:void
test_core_strmap__set_updates_existing_key	extern/libgit2/tests/core/strmap.c	/^void test_core_strmap__set_updates_existing_key(void)$/;"	f	typeref:typename:void
test_core_strtol__base_autodetection	extern/libgit2/tests/core/strtol.c	/^void test_core_strtol__base_autodetection(void)$/;"	f	typeref:typename:void
test_core_strtol__buffer_length_truncates	extern/libgit2/tests/core/strtol.c	/^void test_core_strtol__buffer_length_truncates(void)$/;"	f	typeref:typename:void
test_core_strtol__buffer_length_with_autodetection_truncates	extern/libgit2/tests/core/strtol.c	/^void test_core_strtol__buffer_length_with_autodetection_truncates(void)$/;"	f	typeref:typename:void
test_core_strtol__buffer_length_with_leading_sign_truncates	extern/libgit2/tests/core/strtol.c	/^void test_core_strtol__buffer_length_with_leading_sign_truncates(void)$/;"	f	typeref:typename:void
test_core_strtol__buffer_length_with_leading_ws_truncates	extern/libgit2/tests/core/strtol.c	/^void test_core_strtol__buffer_length_with_leading_ws_truncates(void)$/;"	f	typeref:typename:void
test_core_strtol__error_message_cuts_off	extern/libgit2/tests/core/strtol.c	/^void test_core_strtol__error_message_cuts_off(void)$/;"	f	typeref:typename:void
test_core_strtol__int32	extern/libgit2/tests/core/strtol.c	/^void test_core_strtol__int32(void)$/;"	f	typeref:typename:void
test_core_strtol__int64	extern/libgit2/tests/core/strtol.c	/^void test_core_strtol__int64(void)$/;"	f	typeref:typename:void
test_core_structinit__compare	extern/libgit2/tests/core/structinit.c	/^void test_core_structinit__compare(void)$/;"	f	typeref:typename:void
test_core_useragent__get	extern/libgit2/tests/core/useragent.c	/^void test_core_useragent__get(void)$/;"	f	typeref:typename:void
test_core_vector__0	extern/libgit2/tests/core/vector.c	/^void test_core_vector__0(void)$/;"	f	typeref:typename:void
test_core_vector__1	extern/libgit2/tests/core/vector.c	/^void test_core_vector__1(void)$/;"	f	typeref:typename:void
test_core_vector__2	extern/libgit2/tests/core/vector.c	/^void test_core_vector__2(void)$/;"	f	typeref:typename:void
test_core_vector__3	extern/libgit2/tests/core/vector.c	/^void test_core_vector__3(void)$/;"	f	typeref:typename:void
test_core_vector__4	extern/libgit2/tests/core/vector.c	/^void test_core_vector__4(void)$/;"	f	typeref:typename:void
test_core_vector__5	extern/libgit2/tests/core/vector.c	/^void test_core_vector__5(void)$/;"	f	typeref:typename:void
test_core_vector__dup_empty_vector	extern/libgit2/tests/core/vector.c	/^void test_core_vector__dup_empty_vector(void)$/;"	f	typeref:typename:void
test_core_vector__grow_and_shrink	extern/libgit2/tests/core/vector.c	/^void test_core_vector__grow_and_shrink(void)$/;"	f	typeref:typename:void
test_core_vector__remove_matching	extern/libgit2/tests/core/vector.c	/^void test_core_vector__remove_matching(void)$/;"	f	typeref:typename:void
test_core_vector__reverse	extern/libgit2/tests/core/vector.c	/^void test_core_vector__reverse(void)$/;"	f	typeref:typename:void
test_core_wildmatch__additional_with_malformed	extern/libgit2/tests/core/wildmatch.c	/^void test_core_wildmatch__additional_with_malformed(void)$/;"	f	typeref:typename:void
test_core_wildmatch__basic_wildmatch	extern/libgit2/tests/core/wildmatch.c	/^void test_core_wildmatch__basic_wildmatch(void)$/;"	f	typeref:typename:void
test_core_wildmatch__case_sensitivity	extern/libgit2/tests/core/wildmatch.c	/^void test_core_wildmatch__case_sensitivity(void)$/;"	f	typeref:typename:void
test_core_wildmatch__character_classes	extern/libgit2/tests/core/wildmatch.c	/^void test_core_wildmatch__character_classes(void)$/;"	f	typeref:typename:void
test_core_wildmatch__pathmatch	extern/libgit2/tests/core/wildmatch.c	/^void test_core_wildmatch__pathmatch(void)$/;"	f	typeref:typename:void
test_core_wildmatch__recursion	extern/libgit2/tests/core/wildmatch.c	/^void test_core_wildmatch__recursion(void)$/;"	f	typeref:typename:void
test_core_wildmatch__slash_matching_features	extern/libgit2/tests/core/wildmatch.c	/^void test_core_wildmatch__slash_matching_features(void)$/;"	f	typeref:typename:void
test_core_wildmatch__various_additional	extern/libgit2/tests/core/wildmatch.c	/^void test_core_wildmatch__various_additional(void)$/;"	f	typeref:typename:void
test_core_zstream__basic	extern/libgit2/tests/core/zstream.c	/^void test_core_zstream__basic(void)$/;"	f	typeref:typename:void
test_core_zstream__big_data	extern/libgit2/tests/core/zstream.c	/^void test_core_zstream__big_data(void)$/;"	f	typeref:typename:void
test_core_zstream__buffer	extern/libgit2/tests/core/zstream.c	/^void test_core_zstream__buffer(void)$/;"	f	typeref:typename:void
test_core_zstream__fails_on_trailing_garbage	extern/libgit2/tests/core/zstream.c	/^void test_core_zstream__fails_on_trailing_garbage(void)$/;"	f	typeref:typename:void
test_count	extern/libgit2/tests/clar.c	/^	size_t test_count;$/;"	m	struct:clar_suite	typeref:typename:size_t	file:
test_date_date__overflow	extern/libgit2/tests/date/date.c	/^void test_date_date__overflow(void)$/;"	f	typeref:typename:void
test_date_rfc2822__format_rfc2822_buffer_too_small	extern/libgit2/tests/date/rfc2822.c	/^void test_date_rfc2822__format_rfc2822_buffer_too_small(void)$/;"	f	typeref:typename:void
test_date_rfc2822__format_rfc2822_negative_offset	extern/libgit2/tests/date/rfc2822.c	/^void test_date_rfc2822__format_rfc2822_negative_offset(void)$/;"	f	typeref:typename:void
test_date_rfc2822__format_rfc2822_no_offset	extern/libgit2/tests/date/rfc2822.c	/^void test_date_rfc2822__format_rfc2822_no_offset(void)$/;"	f	typeref:typename:void
test_date_rfc2822__format_rfc2822_positive_offset	extern/libgit2/tests/date/rfc2822.c	/^void test_date_rfc2822__format_rfc2822_positive_offset(void)$/;"	f	typeref:typename:void
test_delta_apply__read_after_limit	extern/libgit2/tests/delta/apply.c	/^void test_delta_apply__read_after_limit(void)$/;"	f	typeref:typename:void
test_delta_apply__read_at_off	extern/libgit2/tests/delta/apply.c	/^void test_delta_apply__read_at_off(void)$/;"	f	typeref:typename:void
test_describe_describe__can_describe_against_a_bare_repo	extern/libgit2/tests/describe/describe.c	/^void test_describe_describe__can_describe_against_a_bare_repo(void)$/;"	f	typeref:typename:void
test_describe_describe__describe_a_repo_with_no_refs	extern/libgit2/tests/describe/describe.c	/^void test_describe_describe__describe_a_repo_with_no_refs(void)$/;"	f	typeref:typename:void
test_describe_t6120__all	extern/libgit2/tests/describe/t6120.c	/^void test_describe_t6120__all(void)$/;"	f	typeref:typename:void
test_describe_t6120__cleanup	extern/libgit2/tests/describe/t6120.c	/^void test_describe_t6120__cleanup(void)$/;"	f	typeref:typename:void
test_describe_t6120__default	extern/libgit2/tests/describe/t6120.c	/^void test_describe_t6120__default(void)$/;"	f	typeref:typename:void
test_describe_t6120__firstparent	extern/libgit2/tests/describe/t6120.c	/^void test_describe_t6120__firstparent(void)$/;"	f	typeref:typename:void
test_describe_t6120__initialize	extern/libgit2/tests/describe/t6120.c	/^void test_describe_t6120__initialize(void)$/;"	f	typeref:typename:void
test_describe_t6120__longformat	extern/libgit2/tests/describe/t6120.c	/^void test_describe_t6120__longformat(void)$/;"	f	typeref:typename:void
test_describe_t6120__pattern	extern/libgit2/tests/describe/t6120.c	/^void test_describe_t6120__pattern(void)$/;"	f	typeref:typename:void
test_describe_t6120__tags	extern/libgit2/tests/describe/t6120.c	/^void test_describe_t6120__tags(void)$/;"	f	typeref:typename:void
test_describe_t6120__workdir	extern/libgit2/tests/describe/t6120.c	/^void test_describe_t6120__workdir(void)$/;"	f	typeref:typename:void
test_diff_binary__add	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__add(void)$/;"	f	typeref:typename:void
test_diff_binary__add_normal	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__add_normal(void)$/;"	f	typeref:typename:void
test_diff_binary__blob_to_blob	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__blob_to_blob(void)$/;"	f	typeref:typename:void
test_diff_binary__cleanup	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__cleanup(void)$/;"	f	typeref:typename:void
test_diff_binary__delete	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__delete(void)$/;"	f	typeref:typename:void
test_diff_binary__delete_normal	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__delete_normal(void)$/;"	f	typeref:typename:void
test_diff_binary__delta	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__delta(void)$/;"	f	typeref:typename:void
test_diff_binary__delta_append	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__delta_append(void)$/;"	f	typeref:typename:void
test_diff_binary__empty_for_no_diff	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__empty_for_no_diff(void)$/;"	f	typeref:typename:void
test_diff_binary__index_to_workdir	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__index_to_workdir(void)$/;"	f	typeref:typename:void
test_diff_binary__initialize	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__initialize(void)$/;"	f	typeref:typename:void
test_diff_binary__modify	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__modify(void)$/;"	f	typeref:typename:void
test_diff_binary__modify_normal	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__modify_normal(void)$/;"	f	typeref:typename:void
test_diff_binary__print_patch_from_diff	extern/libgit2/tests/diff/binary.c	/^void test_diff_binary__print_patch_from_diff(void)$/;"	f	typeref:typename:void
test_diff_blob__binary_data_comparisons	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__binary_data_comparisons(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_a_binary_blob_and_a_text_blob	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_compare_a_binary_blob_and_a_text_blob(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_against_null_blobs	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_compare_against_null_blobs(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_against_null_blobs_with_patch	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_compare_against_null_blobs_with_patch(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_blob_to_buffer	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_compare_blob_to_buffer(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_blob_to_buffer_with_patch	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_compare_blob_to_buffer_with_patch(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_buffer_to_buffer	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_compare_buffer_to_buffer(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_identical_blobs	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_compare_identical_blobs(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_identical_blobs_with_patch	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_compare_identical_blobs_with_patch(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_text_blobs	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_compare_text_blobs(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_text_blobs_with_patch	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_compare_text_blobs_with_patch(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_two_binary_blobs	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_compare_two_binary_blobs(void)$/;"	f	typeref:typename:void
test_diff_blob__can_correctly_detect_a_binary_blob_as_binary	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_correctly_detect_a_binary_blob_as_binary(void)$/;"	f	typeref:typename:void
test_diff_blob__can_correctly_detect_a_textual_blob_as_non_binary	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__can_correctly_detect_a_textual_blob_as_non_binary(void)$/;"	f	typeref:typename:void
test_diff_blob__checks_options_version_too_high	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__checks_options_version_too_high(void)$/;"	f	typeref:typename:void
test_diff_blob__checks_options_version_too_low	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__checks_options_version_too_low(void)$/;"	f	typeref:typename:void
test_diff_blob__cleanup	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__cleanup(void)$/;"	f	typeref:typename:void
test_diff_blob__comparing_two_text_blobs_honors_interhunkcontext	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__comparing_two_text_blobs_honors_interhunkcontext(void)$/;"	f	typeref:typename:void
test_diff_blob__initialize	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__initialize(void)$/;"	f	typeref:typename:void
test_diff_blob__patch_with_freed_blobs	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__patch_with_freed_blobs(void)$/;"	f	typeref:typename:void
test_diff_blob__using_path_and_attributes	extern/libgit2/tests/diff/blob.c	/^void test_diff_blob__using_path_and_attributes(void)$/;"	f	typeref:typename:void
test_diff_diffiter__checks_options_version	extern/libgit2/tests/diff/diffiter.c	/^void test_diff_diffiter__checks_options_version(void)$/;"	f	typeref:typename:void
test_diff_diffiter__cleanup	extern/libgit2/tests/diff/diffiter.c	/^void test_diff_diffiter__cleanup(void)$/;"	f	typeref:typename:void
test_diff_diffiter__create	extern/libgit2/tests/diff/diffiter.c	/^void test_diff_diffiter__create(void)$/;"	f	typeref:typename:void
test_diff_diffiter__initialize	extern/libgit2/tests/diff/diffiter.c	/^void test_diff_diffiter__initialize(void)$/;"	f	typeref:typename:void
test_diff_diffiter__iterate_all	extern/libgit2/tests/diff/diffiter.c	/^void test_diff_diffiter__iterate_all(void)$/;"	f	typeref:typename:void
test_diff_diffiter__iterate_and_generate_patch_text	extern/libgit2/tests/diff/diffiter.c	/^void test_diff_diffiter__iterate_and_generate_patch_text(void)$/;"	f	typeref:typename:void
test_diff_diffiter__iterate_files_1	extern/libgit2/tests/diff/diffiter.c	/^void test_diff_diffiter__iterate_files_1(void)$/;"	f	typeref:typename:void
test_diff_diffiter__iterate_files_2	extern/libgit2/tests/diff/diffiter.c	/^void test_diff_diffiter__iterate_files_2(void)$/;"	f	typeref:typename:void
test_diff_diffiter__iterate_files_and_hunks	extern/libgit2/tests/diff/diffiter.c	/^void test_diff_diffiter__iterate_files_and_hunks(void)$/;"	f	typeref:typename:void
test_diff_diffiter__iterate_randomly_while_saving_state	extern/libgit2/tests/diff/diffiter.c	/^void test_diff_diffiter__iterate_randomly_while_saving_state(void)$/;"	f	typeref:typename:void
test_diff_diffiter__max_size_threshold	extern/libgit2/tests/diff/diffiter.c	/^void test_diff_diffiter__max_size_threshold(void)$/;"	f	typeref:typename:void
test_diff_drivers__builtins	extern/libgit2/tests/diff/drivers.c	/^void test_diff_drivers__builtins(void)$/;"	f	typeref:typename:void
test_diff_drivers__cleanup	extern/libgit2/tests/diff/drivers.c	/^void test_diff_drivers__cleanup(void)$/;"	f	typeref:typename:void
test_diff_drivers__initialize	extern/libgit2/tests/diff/drivers.c	/^void test_diff_drivers__initialize(void)$/;"	f	typeref:typename:void
test_diff_drivers__invalid_pattern	extern/libgit2/tests/diff/drivers.c	/^void test_diff_drivers__invalid_pattern(void)$/;"	f	typeref:typename:void
test_diff_drivers__long_lines	extern/libgit2/tests/diff/drivers.c	/^void test_diff_drivers__long_lines(void)$/;"	f	typeref:typename:void
test_diff_drivers__patterns	extern/libgit2/tests/diff/drivers.c	/^void test_diff_drivers__patterns(void)$/;"	f	typeref:typename:void
test_diff_format_email__binary	extern/libgit2/tests/diff/format_email.c	/^void test_diff_format_email__binary(void)$/;"	f	typeref:typename:void
test_diff_format_email__cleanup	extern/libgit2/tests/diff/format_email.c	/^void test_diff_format_email__cleanup(void)$/;"	f	typeref:typename:void
test_diff_format_email__exclude_marker	extern/libgit2/tests/diff/format_email.c	/^void test_diff_format_email__exclude_marker(void)$/;"	f	typeref:typename:void
test_diff_format_email__initialize	extern/libgit2/tests/diff/format_email.c	/^void test_diff_format_email__initialize(void)$/;"	f	typeref:typename:void
test_diff_format_email__invalid_no	extern/libgit2/tests/diff/format_email.c	/^void test_diff_format_email__invalid_no(void)$/;"	f	typeref:typename:void
test_diff_format_email__mode_change	extern/libgit2/tests/diff/format_email.c	/^void test_diff_format_email__mode_change(void)$/;"	f	typeref:typename:void
test_diff_format_email__multiline_summary	extern/libgit2/tests/diff/format_email.c	/^void test_diff_format_email__multiline_summary(void)$/;"	f	typeref:typename:void
test_diff_format_email__multiple	extern/libgit2/tests/diff/format_email.c	/^void test_diff_format_email__multiple(void)$/;"	f	typeref:typename:void
test_diff_format_email__rename_add_remove	extern/libgit2/tests/diff/format_email.c	/^void test_diff_format_email__rename_add_remove(void)$/;"	f	typeref:typename:void
test_diff_format_email__simple	extern/libgit2/tests/diff/format_email.c	/^void test_diff_format_email__simple(void)$/;"	f	typeref:typename:void
test_diff_format_email__with_message	extern/libgit2/tests/diff/format_email.c	/^void test_diff_format_email__with_message(void)$/;"	f	typeref:typename:void
test_diff_index__0	extern/libgit2/tests/diff/index.c	/^void test_diff_index__0(void)$/;"	f	typeref:typename:void
test_diff_index__1	extern/libgit2/tests/diff/index.c	/^void test_diff_index__1(void)$/;"	f	typeref:typename:void
test_diff_index__checks_options_version	extern/libgit2/tests/diff/index.c	/^void test_diff_index__checks_options_version(void)$/;"	f	typeref:typename:void
test_diff_index__cleanup	extern/libgit2/tests/diff/index.c	/^void test_diff_index__cleanup(void)$/;"	f	typeref:typename:void
test_diff_index__initialize	extern/libgit2/tests/diff/index.c	/^void test_diff_index__initialize(void)$/;"	f	typeref:typename:void
test_diff_index__not_in_head_conflicted	extern/libgit2/tests/diff/index.c	/^void test_diff_index__not_in_head_conflicted(void)$/;"	f	typeref:typename:void
test_diff_index__reports_conflicts	extern/libgit2/tests/diff/index.c	/^void test_diff_index__reports_conflicts(void)$/;"	f	typeref:typename:void
test_diff_index__reports_conflicts_when_reversed	extern/libgit2/tests/diff/index.c	/^void test_diff_index__reports_conflicts_when_reversed(void)$/;"	f	typeref:typename:void
test_diff_index__to_index	extern/libgit2/tests/diff/index.c	/^void test_diff_index__to_index(void)$/;"	f	typeref:typename:void
test_diff_notify__cleanup	extern/libgit2/tests/diff/notify.c	/^void test_diff_notify__cleanup(void)$/;"	f	typeref:typename:void
test_diff_notify__initialize	extern/libgit2/tests/diff/notify.c	/^void test_diff_notify__initialize(void)$/;"	f	typeref:typename:void
test_diff_notify__notify_catchall	extern/libgit2/tests/diff/notify.c	/^void test_diff_notify__notify_catchall(void)$/;"	f	typeref:typename:void
test_diff_notify__notify_catchall_with_empty_pathspecs	extern/libgit2/tests/diff/notify.c	/^void test_diff_notify__notify_catchall_with_empty_pathspecs(void)$/;"	f	typeref:typename:void
test_diff_notify__notify_cb_can_abort_diff	extern/libgit2/tests/diff/notify.c	/^void test_diff_notify__notify_cb_can_abort_diff(void)$/;"	f	typeref:typename:void
test_diff_notify__notify_cb_can_be_used_as_filtering_function	extern/libgit2/tests/diff/notify.c	/^void test_diff_notify__notify_cb_can_be_used_as_filtering_function(void)$/;"	f	typeref:typename:void
test_diff_notify__notify_multiple_pathspec	extern/libgit2/tests/diff/notify.c	/^void test_diff_notify__notify_multiple_pathspec(void)$/;"	f	typeref:typename:void
test_diff_notify__notify_single_pathspec	extern/libgit2/tests/diff/notify.c	/^void test_diff_notify__notify_single_pathspec(void)$/;"	f	typeref:typename:void
test_diff_notify__progress_cb_can_abort_diff	extern/libgit2/tests/diff/notify.c	/^void test_diff_notify__progress_cb_can_abort_diff(void)$/;"	f	typeref:typename:void
test_diff_parse__can_parse_generated_diff	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__can_parse_generated_diff(void)$/;"	f	typeref:typename:void
test_diff_parse__cleanup	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__cleanup(void)$/;"	f	typeref:typename:void
test_diff_parse__crlf	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__crlf(void)$/;"	f	typeref:typename:void
test_diff_parse__exact_rename	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__exact_rename(void)$/;"	f	typeref:typename:void
test_diff_parse__foreach_works_with_parsed_patch	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__foreach_works_with_parsed_patch(void)$/;"	f	typeref:typename:void
test_diff_parse__get_patch_from_diff	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__get_patch_from_diff(void)$/;"	f	typeref:typename:void
test_diff_parse__invalid_patches_fails	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__invalid_patches_fails(void)$/;"	f	typeref:typename:void
test_diff_parse__issue4672	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__issue4672(void)$/;"	f	typeref:typename:void
test_diff_parse__lineinfo	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__lineinfo(void)$/;"	f	typeref:typename:void
test_diff_parse__new_file_with_space	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__new_file_with_space(void)$/;"	f	typeref:typename:void
test_diff_parse__nonpatches_fail_with_notfound	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__nonpatches_fail_with_notfound(void)$/;"	f	typeref:typename:void
test_diff_parse__parsing_minimal_patch_succeeds	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__parsing_minimal_patch_succeeds(void)$/;"	f	typeref:typename:void
test_diff_parse__patch_roundtrip_succeeds	extern/libgit2/tests/diff/parse.c	/^void test_diff_parse__patch_roundtrip_succeeds(void)$/;"	f	typeref:typename:void
test_diff_patch__can_cancel_diff_print	extern/libgit2/tests/diff/patch.c	/^void test_diff_patch__can_cancel_diff_print(void)$/;"	f	typeref:typename:void
test_diff_patch__can_properly_display_the_removal_of_a_file	extern/libgit2/tests/diff/patch.c	/^void test_diff_patch__can_properly_display_the_removal_of_a_file(void)$/;"	f	typeref:typename:void
test_diff_patch__can_strip_bad_utf8	extern/libgit2/tests/diff/patch.c	/^void test_diff_patch__can_strip_bad_utf8(void)$/;"	f	typeref:typename:void
test_diff_patch__cleanup	extern/libgit2/tests/diff/patch.c	/^void test_diff_patch__cleanup(void)$/;"	f	typeref:typename:void
test_diff_patch__config_options	extern/libgit2/tests/diff/patch.c	/^void test_diff_patch__config_options(void)$/;"	f	typeref:typename:void
test_diff_patch__hunks_have_correct_line_numbers	extern/libgit2/tests/diff/patch.c	/^void test_diff_patch__hunks_have_correct_line_numbers(void)$/;"	f	typeref:typename:void
test_diff_patch__initialize	extern/libgit2/tests/diff/patch.c	/^void test_diff_patch__initialize(void)$/;"	f	typeref:typename:void
test_diff_patch__line_counts_with_eofnl	extern/libgit2/tests/diff/patch.c	/^void test_diff_patch__line_counts_with_eofnl(void)$/;"	f	typeref:typename:void
test_diff_patch__to_string	extern/libgit2/tests/diff/patch.c	/^void test_diff_patch__to_string(void)$/;"	f	typeref:typename:void
test_diff_patchid__filename_with_spaces	extern/libgit2/tests/diff/patchid.c	/^void test_diff_patchid__filename_with_spaces(void)$/;"	f	typeref:typename:void
test_diff_patchid__multiple_files	extern/libgit2/tests/diff/patchid.c	/^void test_diff_patchid__multiple_files(void)$/;"	f	typeref:typename:void
test_diff_patchid__multiple_hunks	extern/libgit2/tests/diff/patchid.c	/^void test_diff_patchid__multiple_hunks(void)$/;"	f	typeref:typename:void
test_diff_patchid__same_diff_with_differing_whitespace_has_same_id	extern/libgit2/tests/diff/patchid.c	/^void test_diff_patchid__same_diff_with_differing_whitespace_has_same_id(void)$/;"	f	typeref:typename:void
test_diff_patchid__simple_commit	extern/libgit2/tests/diff/patchid.c	/^void test_diff_patchid__simple_commit(void)$/;"	f	typeref:typename:void
test_diff_pathspec__0	extern/libgit2/tests/diff/pathspec.c	/^void test_diff_pathspec__0(void)$/;"	f	typeref:typename:void
test_diff_pathspec__cleanup	extern/libgit2/tests/diff/pathspec.c	/^void test_diff_pathspec__cleanup(void)$/;"	f	typeref:typename:void
test_diff_pathspec__initialize	extern/libgit2/tests/diff/pathspec.c	/^void test_diff_pathspec__initialize(void)$/;"	f	typeref:typename:void
test_diff_racediffiter__basic	extern/libgit2/tests/diff/racediffiter.c	/^void test_diff_racediffiter__basic(void)$/;"	f	typeref:typename:void
test_diff_racediffiter__cleanup	extern/libgit2/tests/diff/racediffiter.c	/^void test_diff_racediffiter__cleanup(void)$/;"	f	typeref:typename:void
test_diff_racediffiter__initialize	extern/libgit2/tests/diff/racediffiter.c	/^void test_diff_racediffiter__initialize(void)$/;"	f	typeref:typename:void
test_diff_racediffiter__racy	extern/libgit2/tests/diff/racediffiter.c	/^void test_diff_racediffiter__racy(void)$/;"	f	typeref:typename:void
test_diff_rename__blank_files_not_renamed_when_not_ignoring_whitespace	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__blank_files_not_renamed_when_not_ignoring_whitespace(void)$/;"	f	typeref:typename:void
test_diff_rename__blank_files_renamed_when_ignoring_whitespace	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__blank_files_renamed_when_ignoring_whitespace(void)$/;"	f	typeref:typename:void
test_diff_rename__by_config_doesnt_mess_with_whitespace_settings	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__by_config_doesnt_mess_with_whitespace_settings(void)$/;"	f	typeref:typename:void
test_diff_rename__can_delete_unmodified_deltas	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__can_delete_unmodified_deltas(void)$/;"	f	typeref:typename:void
test_diff_rename__can_find_copy_to_split	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__can_find_copy_to_split(void)$/;"	f	typeref:typename:void
test_diff_rename__can_override_thresholds_when_obeying_config	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__can_override_thresholds_when_obeying_config(void)$/;"	f	typeref:typename:void
test_diff_rename__can_rename_from_rewrite	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__can_rename_from_rewrite(void)$/;"	f	typeref:typename:void
test_diff_rename__case_changes_are_split	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__case_changes_are_split(void)$/;"	f	typeref:typename:void
test_diff_rename__checks_options_version	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__checks_options_version(void)$/;"	f	typeref:typename:void
test_diff_rename__cleanup	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__cleanup(void)$/;"	f	typeref:typename:void
test_diff_rename__delete_and_rename	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__delete_and_rename(void)$/;"	f	typeref:typename:void
test_diff_rename__empty_files_renamed	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__empty_files_renamed(void)$/;"	f	typeref:typename:void
test_diff_rename__file_exchange	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__file_exchange(void)$/;"	f	typeref:typename:void
test_diff_rename__file_exchange_three	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__file_exchange_three(void)$/;"	f	typeref:typename:void
test_diff_rename__file_partial_exchange	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__file_partial_exchange(void)$/;"	f	typeref:typename:void
test_diff_rename__from_deleted_to_split	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__from_deleted_to_split(void)$/;"	f	typeref:typename:void
test_diff_rename__identical	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__identical(void)$/;"	f	typeref:typename:void
test_diff_rename__initialize	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__initialize(void)$/;"	f	typeref:typename:void
test_diff_rename__match_oid	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__match_oid(void)$/;"	f	typeref:typename:void
test_diff_rename__matches_config_behavior	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__matches_config_behavior(void)$/;"	f	typeref:typename:void
test_diff_rename__not_exact_match	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__not_exact_match(void)$/;"	f	typeref:typename:void
test_diff_rename__patch	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__patch(void)$/;"	f	typeref:typename:void
test_diff_rename__rejected_match_can_match_others	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__rejected_match_can_match_others(void)$/;"	f	typeref:typename:void
test_diff_rename__rejected_match_can_match_others_three	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__rejected_match_can_match_others_three(void)$/;"	f	typeref:typename:void
test_diff_rename__rejected_match_can_match_others_two	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__rejected_match_can_match_others_two(void)$/;"	f	typeref:typename:void
test_diff_rename__rename_and_copy_from_same_source	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__rename_and_copy_from_same_source(void)$/;"	f	typeref:typename:void
test_diff_rename__rewrite_and_delete	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__rewrite_and_delete(void)$/;"	f	typeref:typename:void
test_diff_rename__rewrite_on_single_file	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__rewrite_on_single_file(void)$/;"	f	typeref:typename:void
test_diff_rename__test_small_files	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__test_small_files(void)$/;"	f	typeref:typename:void
test_diff_rename__unmodified_can_be_renamed	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__unmodified_can_be_renamed(void)$/;"	f	typeref:typename:void
test_diff_rename__working_directory_changes	extern/libgit2/tests/diff/rename.c	/^void test_diff_rename__working_directory_changes(void)$/;"	f	typeref:typename:void
test_diff_stats__binary	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__binary(void)$/;"	f	typeref:typename:void
test_diff_stats__binary_numstat	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__binary_numstat(void)$/;"	f	typeref:typename:void
test_diff_stats__cleanup	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__cleanup(void)$/;"	f	typeref:typename:void
test_diff_stats__initialize	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__initialize(void)$/;"	f	typeref:typename:void
test_diff_stats__mode_change	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__mode_change(void)$/;"	f	typeref:typename:void
test_diff_stats__multiple_hunks	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__multiple_hunks(void)$/;"	f	typeref:typename:void
test_diff_stats__numstat	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__numstat(void)$/;"	f	typeref:typename:void
test_diff_stats__rename	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__rename(void)$/;"	f	typeref:typename:void
test_diff_stats__rename_and_modifiy	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__rename_and_modifiy(void)$/;"	f	typeref:typename:void
test_diff_stats__rename_and_modify_no_find	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__rename_and_modify_no_find(void)$/;"	f	typeref:typename:void
test_diff_stats__rename_in_subdirectory	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__rename_in_subdirectory(void)$/;"	f	typeref:typename:void
test_diff_stats__rename_no_find	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__rename_no_find(void)$/;"	f	typeref:typename:void
test_diff_stats__rename_nochanges	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__rename_nochanges(void)$/;"	f	typeref:typename:void
test_diff_stats__rename_nochanges_no_find	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__rename_nochanges_no_find(void)$/;"	f	typeref:typename:void
test_diff_stats__shortstat	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__shortstat(void)$/;"	f	typeref:typename:void
test_diff_stats__shortstat_nodeletions	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__shortstat_nodeletions(void)$/;"	f	typeref:typename:void
test_diff_stats__shortstat_noinsertions	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__shortstat_noinsertions(void)$/;"	f	typeref:typename:void
test_diff_stats__stat	extern/libgit2/tests/diff/stats.c	/^void test_diff_stats__stat(void)$/;"	f	typeref:typename:void
test_diff_submodules__can_be_identified_by_trailing_slash_in_pathspec	extern/libgit2/tests/diff/submodules.c	/^void test_diff_submodules__can_be_identified_by_trailing_slash_in_pathspec(void)$/;"	f	typeref:typename:void
test_diff_submodules__cleanup	extern/libgit2/tests/diff/submodules.c	/^void test_diff_submodules__cleanup(void)$/;"	f	typeref:typename:void
test_diff_submodules__diff_ignore_options	extern/libgit2/tests/diff/submodules.c	/^void test_diff_submodules__diff_ignore_options(void)$/;"	f	typeref:typename:void
test_diff_submodules__dirty_submodule	extern/libgit2/tests/diff/submodules.c	/^void test_diff_submodules__dirty_submodule(void)$/;"	f	typeref:typename:void
test_diff_submodules__dirty_submodule_2	extern/libgit2/tests/diff/submodules.c	/^void test_diff_submodules__dirty_submodule_2(void)$/;"	f	typeref:typename:void
test_diff_submodules__initialize	extern/libgit2/tests/diff/submodules.c	/^void test_diff_submodules__initialize(void)$/;"	f	typeref:typename:void
test_diff_submodules__invalid_cache	extern/libgit2/tests/diff/submodules.c	/^void test_diff_submodules__invalid_cache(void)$/;"	f	typeref:typename:void
test_diff_submodules__skips_empty_includes_used	extern/libgit2/tests/diff/submodules.c	/^void test_diff_submodules__skips_empty_includes_used(void)$/;"	f	typeref:typename:void
test_diff_submodules__submod2_head_to_index	extern/libgit2/tests/diff/submodules.c	/^void test_diff_submodules__submod2_head_to_index(void)$/;"	f	typeref:typename:void
test_diff_submodules__submod2_index_to_wd	extern/libgit2/tests/diff/submodules.c	/^void test_diff_submodules__submod2_index_to_wd(void)$/;"	f	typeref:typename:void
test_diff_submodules__unmodified_submodule	extern/libgit2/tests/diff/submodules.c	/^void test_diff_submodules__unmodified_submodule(void)$/;"	f	typeref:typename:void
test_diff_tree__0	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__0(void)$/;"	f	typeref:typename:void
test_diff_tree__bare	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__bare(void)$/;"	f	typeref:typename:void
test_diff_tree__checks_options_version	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__checks_options_version(void)$/;"	f	typeref:typename:void
test_diff_tree__cleanup	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__cleanup(void)$/;"	f	typeref:typename:void
test_diff_tree__diff_configs	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__diff_configs(void)$/;"	f	typeref:typename:void
test_diff_tree__initialize	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__initialize(void)$/;"	f	typeref:typename:void
test_diff_tree__issue_1397	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__issue_1397(void)$/;"	f	typeref:typename:void
test_diff_tree__larger_hunks	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__larger_hunks(void)$/;"	f	typeref:typename:void
test_diff_tree__merge	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__merge(void)$/;"	f	typeref:typename:void
test_diff_tree__options	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__options(void)$/;"	f	typeref:typename:void
test_diff_tree__regular_blob_mode_changed_to_executable_file	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__regular_blob_mode_changed_to_executable_file(void)$/;"	f	typeref:typename:void
test_diff_tree__symlink_blob_mode_changed_to_regular_file	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__symlink_blob_mode_changed_to_regular_file(void)$/;"	f	typeref:typename:void
test_diff_tree__symlink_blob_mode_changed_to_regular_file_as_typechange	extern/libgit2/tests/diff/tree.c	/^void test_diff_tree__symlink_blob_mode_changed_to_regular_file_as_typechange(void)$/;"	f	typeref:typename:void
test_diff_workdir__binary_detection	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__binary_detection(void)$/;"	f	typeref:typename:void
test_diff_workdir__can_diff_empty_file	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__can_diff_empty_file(void)$/;"	f	typeref:typename:void
test_diff_workdir__can_update_index	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__can_update_index(void)$/;"	f	typeref:typename:void
test_diff_workdir__cannot_diff_against_a_bare_repository	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__cannot_diff_against_a_bare_repository(void)$/;"	f	typeref:typename:void
test_diff_workdir__checks_options_version	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__checks_options_version(void)$/;"	f	typeref:typename:void
test_diff_workdir__cleanup	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__cleanup(void)$/;"	f	typeref:typename:void
test_diff_workdir__eof_newline_changes	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__eof_newline_changes(void)$/;"	f	typeref:typename:void
test_diff_workdir__filemode_changes	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__filemode_changes(void)$/;"	f	typeref:typename:void
test_diff_workdir__filemode_changes_with_filemode_false	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__filemode_changes_with_filemode_false(void)$/;"	f	typeref:typename:void
test_diff_workdir__head_index_and_workdir_all_differ	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__head_index_and_workdir_all_differ(void)$/;"	f	typeref:typename:void
test_diff_workdir__larger_hunks	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__larger_hunks(void)$/;"	f	typeref:typename:void
test_diff_workdir__only_writes_index_when_necessary	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__only_writes_index_when_necessary(void)$/;"	f	typeref:typename:void
test_diff_workdir__patience_diff	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__patience_diff(void)$/;"	f	typeref:typename:void
test_diff_workdir__submodules	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__submodules(void)$/;"	f	typeref:typename:void
test_diff_workdir__symlink_changed_on_non_symlink_platform	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__symlink_changed_on_non_symlink_platform(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__to_index(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_conflicted	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__to_index_conflicted(void) {$/;"	f	typeref:typename:void
test_diff_workdir__to_index_issue_1397	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__to_index_issue_1397(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_pathlist	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__to_index_pathlist(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_with_assume_unchanged	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__to_index_with_assume_unchanged(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_with_conflicts	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__to_index_with_conflicts(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_with_pathlist_disabling_fnmatch	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__to_index_with_pathlist_disabling_fnmatch(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_with_pathspec	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__to_index_with_pathspec(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_null_tree	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__to_null_tree(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_tree	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__to_tree(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_tree_issue_1397	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__to_tree_issue_1397(void)$/;"	f	typeref:typename:void
test_diff_workdir__untracked_directory_comes_last	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__untracked_directory_comes_last(void)$/;"	f	typeref:typename:void
test_diff_workdir__untracked_directory_scenarios	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__untracked_directory_scenarios(void)$/;"	f	typeref:typename:void
test_diff_workdir__untracked_with_bom	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__untracked_with_bom(void)$/;"	f	typeref:typename:void
test_diff_workdir__with_stale_index	extern/libgit2/tests/diff/workdir.c	/^void test_diff_workdir__with_stale_index(void)$/;"	f	typeref:typename:void
test_driver_apply	extern/libgit2/tests/merge/driver.c	/^static int test_driver_apply($/;"	f	typeref:typename:int	file:
test_driver_conflict_apply	extern/libgit2/tests/merge/driver.c	/^static struct test_merge_driver test_driver_conflict_apply = {$/;"	v	typeref:struct:test_merge_driver	file:
test_driver_custom	extern/libgit2/tests/merge/driver.c	/^static struct test_merge_driver test_driver_custom = {$/;"	v	typeref:struct:test_merge_driver	file:
test_driver_defer_apply	extern/libgit2/tests/merge/driver.c	/^static struct test_merge_driver test_driver_defer_apply = {$/;"	v	typeref:struct:test_merge_driver	file:
test_driver_init	extern/libgit2/tests/merge/driver.c	/^static int test_driver_init(git_merge_driver *s)$/;"	f	typeref:typename:int	file:
test_driver_shutdown	extern/libgit2/tests/merge/driver.c	/^static void test_driver_shutdown(git_merge_driver *s)$/;"	f	typeref:typename:void	file:
test_driver_wildcard	extern/libgit2/tests/merge/driver.c	/^static struct test_merge_driver test_driver_wildcard = {$/;"	v	typeref:struct:test_merge_driver	file:
test_drivers_register	extern/libgit2/tests/merge/driver.c	/^static void test_drivers_register(void)$/;"	f	typeref:typename:void	file:
test_drivers_unregister	extern/libgit2/tests/merge/driver.c	/^static void test_drivers_unregister(void)$/;"	f	typeref:typename:void	file:
test_entries	extern/libgit2/tests/index/tests.c	/^static struct test_entry test_entries[] = {$/;"	v	typeref:struct:test_entry[]	file:
test_entry	extern/libgit2/tests/index/tests.c	/^struct test_entry {$/;"	s	file:
test_fetchhead_nonetwork__create_when_refpecs_given	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__create_when_refpecs_given(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__create_with_multiple_refspecs	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__create_with_multiple_refspecs(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__fetch_into_repo_with_symrefs	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__fetch_into_repo_with_symrefs(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__initialize	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__initialize(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__invalid_description	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__invalid_description(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__invalid_for_merge	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__invalid_for_merge(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__invalid_oid	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__invalid_oid(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__invalid_unterminated_last_line	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__invalid_unterminated_last_line(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__name_missing	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__name_missing(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__nonexistent	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__nonexistent(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__quote_in_branch_name	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__quote_in_branch_name(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__read	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__read(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__read_old_style	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__read_old_style(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__type_missing	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__type_missing(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__unborn_with_upstream	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__unborn_with_upstream(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__write	extern/libgit2/tests/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__write(void)$/;"	f	typeref:typename:void
test_file_contents	extern/libgit2/tests/merge/workdir/setup.c	/^static bool test_file_contents(const char *filename, const char *expected)$/;"	f	typeref:typename:bool	file:
test_files_1	extern/libgit2/tests/ignore/status.c	/^static const char *test_files_1[] = {$/;"	v	typeref:typename:const char * []	file:
test_filter_bare__all_crlf	extern/libgit2/tests/filter/bare.c	/^void test_filter_bare__all_crlf(void)$/;"	f	typeref:typename:void
test_filter_bare__cleanup	extern/libgit2/tests/filter/bare.c	/^void test_filter_bare__cleanup(void)$/;"	f	typeref:typename:void
test_filter_bare__from_lf	extern/libgit2/tests/filter/bare.c	/^void test_filter_bare__from_lf(void)$/;"	f	typeref:typename:void
test_filter_bare__initialize	extern/libgit2/tests/filter/bare.c	/^void test_filter_bare__initialize(void)$/;"	f	typeref:typename:void
test_filter_bare__nested_attributes	extern/libgit2/tests/filter/bare.c	/^void test_filter_bare__nested_attributes(void)$/;"	f	typeref:typename:void
test_filter_bare__sanitizes	extern/libgit2/tests/filter/bare.c	/^void test_filter_bare__sanitizes(void)$/;"	f	typeref:typename:void
test_filter_blob__all_crlf	extern/libgit2/tests/filter/blob.c	/^void test_filter_blob__all_crlf(void)$/;"	f	typeref:typename:void
test_filter_blob__cleanup	extern/libgit2/tests/filter/blob.c	/^void test_filter_blob__cleanup(void)$/;"	f	typeref:typename:void
test_filter_blob__from_lf	extern/libgit2/tests/filter/blob.c	/^void test_filter_blob__from_lf(void)$/;"	f	typeref:typename:void
test_filter_blob__ident	extern/libgit2/tests/filter/blob.c	/^void test_filter_blob__ident(void)$/;"	f	typeref:typename:void
test_filter_blob__initialize	extern/libgit2/tests/filter/blob.c	/^void test_filter_blob__initialize(void)$/;"	f	typeref:typename:void
test_filter_blob__sanitizes	extern/libgit2/tests/filter/blob.c	/^void test_filter_blob__sanitizes(void)$/;"	f	typeref:typename:void
test_filter_crlf__cleanup	extern/libgit2/tests/filter/crlf.c	/^void test_filter_crlf__cleanup(void)$/;"	f	typeref:typename:void
test_filter_crlf__initialize	extern/libgit2/tests/filter/crlf.c	/^void test_filter_crlf__initialize(void)$/;"	f	typeref:typename:void
test_filter_crlf__no_safecrlf	extern/libgit2/tests/filter/crlf.c	/^void test_filter_crlf__no_safecrlf(void)$/;"	f	typeref:typename:void
test_filter_crlf__safecrlf_warn	extern/libgit2/tests/filter/crlf.c	/^void test_filter_crlf__safecrlf_warn(void)$/;"	f	typeref:typename:void
test_filter_crlf__to_odb	extern/libgit2/tests/filter/crlf.c	/^void test_filter_crlf__to_odb(void)$/;"	f	typeref:typename:void
test_filter_crlf__to_worktree	extern/libgit2/tests/filter/crlf.c	/^void test_filter_crlf__to_worktree(void)$/;"	f	typeref:typename:void
test_filter_crlf__with_safecrlf	extern/libgit2/tests/filter/crlf.c	/^void test_filter_crlf__with_safecrlf(void)$/;"	f	typeref:typename:void
test_filter_crlf__with_safecrlf_and_unsafe_allowed	extern/libgit2/tests/filter/crlf.c	/^void test_filter_crlf__with_safecrlf_and_unsafe_allowed(void)$/;"	f	typeref:typename:void
test_filter_custom__can_register_a_custom_filter_in_the_repository	extern/libgit2/tests/filter/custom.c	/^void test_filter_custom__can_register_a_custom_filter_in_the_repository(void)$/;"	f	typeref:typename:void
test_filter_custom__cleanup	extern/libgit2/tests/filter/custom.c	/^void test_filter_custom__cleanup(void)$/;"	f	typeref:typename:void
test_filter_custom__erroneous_filter_fails	extern/libgit2/tests/filter/custom.c	/^void test_filter_custom__erroneous_filter_fails(void)$/;"	f	typeref:typename:void
test_filter_custom__filter_registry_failure_cases	extern/libgit2/tests/filter/custom.c	/^void test_filter_custom__filter_registry_failure_cases(void)$/;"	f	typeref:typename:void
test_filter_custom__initialize	extern/libgit2/tests/filter/custom.c	/^void test_filter_custom__initialize(void)$/;"	f	typeref:typename:void
test_filter_custom__order_dependency	extern/libgit2/tests/filter/custom.c	/^void test_filter_custom__order_dependency(void)$/;"	f	typeref:typename:void
test_filter_custom__to_odb	extern/libgit2/tests/filter/custom.c	/^void test_filter_custom__to_odb(void)$/;"	f	typeref:typename:void
test_filter_custom__to_workdir	extern/libgit2/tests/filter/custom.c	/^void test_filter_custom__to_workdir(void)$/;"	f	typeref:typename:void
test_filter_file__apply	extern/libgit2/tests/filter/file.c	/^void test_filter_file__apply(void)$/;"	f	typeref:typename:void
test_filter_file__apply_stream	extern/libgit2/tests/filter/file.c	/^void test_filter_file__apply_stream(void)$/;"	f	typeref:typename:void
test_filter_file__cleanup	extern/libgit2/tests/filter/file.c	/^void test_filter_file__cleanup(void)$/;"	f	typeref:typename:void
test_filter_file__initialize	extern/libgit2/tests/filter/file.c	/^void test_filter_file__initialize(void)$/;"	f	typeref:typename:void
test_filter_ident__cleanup	extern/libgit2/tests/filter/ident.c	/^void test_filter_ident__cleanup(void)$/;"	f	typeref:typename:void
test_filter_ident__initialize	extern/libgit2/tests/filter/ident.c	/^void test_filter_ident__initialize(void)$/;"	f	typeref:typename:void
test_filter_ident__to_odb	extern/libgit2/tests/filter/ident.c	/^void test_filter_ident__to_odb(void)$/;"	f	typeref:typename:void
test_filter_ident__to_worktree	extern/libgit2/tests/filter/ident.c	/^void test_filter_ident__to_worktree(void)$/;"	f	typeref:typename:void
test_filter_query__autocrlf_true_implies_crlf	extern/libgit2/tests/filter/query.c	/^void test_filter_query__autocrlf_true_implies_crlf(void)$/;"	f	typeref:typename:void
test_filter_query__cleanup	extern/libgit2/tests/filter/query.c	/^void test_filter_query__cleanup(void)$/;"	f	typeref:typename:void
test_filter_query__custom	extern/libgit2/tests/filter/query.c	/^void test_filter_query__custom(void)$/;"	f	typeref:typename:void
test_filter_query__filters	extern/libgit2/tests/filter/query.c	/^void test_filter_query__filters(void)$/;"	f	typeref:typename:void
test_filter_query__initialize	extern/libgit2/tests/filter/query.c	/^void test_filter_query__initialize(void)$/;"	f	typeref:typename:void
test_filter_query__unknown	extern/libgit2/tests/filter/query.c	/^void test_filter_query__unknown(void)$/;"	f	typeref:typename:void
test_filter_stream__bigfile	extern/libgit2/tests/filter/stream.c	/^void test_filter_stream__bigfile(void)$/;"	f	typeref:typename:void
test_filter_stream__cleanup	extern/libgit2/tests/filter/stream.c	/^void test_filter_stream__cleanup(void)$/;"	f	typeref:typename:void
test_filter_stream__initialize	extern/libgit2/tests/filter/stream.c	/^void test_filter_stream__initialize(void)$/;"	f	typeref:typename:void
test_filter_stream__smallfile	extern/libgit2/tests/filter/stream.c	/^void test_filter_stream__smallfile(void)$/;"	f	typeref:typename:void
test_filter_systemattrs__cleanup	extern/libgit2/tests/filter/systemattrs.c	/^void test_filter_systemattrs__cleanup(void)$/;"	f	typeref:typename:void
test_filter_systemattrs__disables_system_attributes	extern/libgit2/tests/filter/systemattrs.c	/^void test_filter_systemattrs__disables_system_attributes(void)$/;"	f	typeref:typename:void
test_filter_systemattrs__initialize	extern/libgit2/tests/filter/systemattrs.c	/^void test_filter_systemattrs__initialize(void)$/;"	f	typeref:typename:void
test_filter_systemattrs__reads_system_attributes	extern/libgit2/tests/filter/systemattrs.c	/^void test_filter_systemattrs__reads_system_attributes(void)$/;"	f	typeref:typename:void
test_filter_wildcard__cleanup	extern/libgit2/tests/filter/wildcard.c	/^void test_filter_wildcard__cleanup(void)$/;"	f	typeref:typename:void
test_filter_wildcard__flip	extern/libgit2/tests/filter/wildcard.c	/^void test_filter_wildcard__flip(void)$/;"	f	typeref:typename:void
test_filter_wildcard__initialize	extern/libgit2/tests/filter/wildcard.c	/^void test_filter_wildcard__initialize(void)$/;"	f	typeref:typename:void
test_filter_wildcard__none	extern/libgit2/tests/filter/wildcard.c	/^void test_filter_wildcard__none(void)$/;"	f	typeref:typename:void
test_filter_wildcard__reverse	extern/libgit2/tests/filter/wildcard.c	/^void test_filter_wildcard__reverse(void)$/;"	f	typeref:typename:void
test_find_differences	extern/libgit2/tests/merge/trees/treediff.c	/^static void test_find_differences($/;"	f	typeref:typename:void	file:
test_graph_ahead_behind__cleanup	extern/libgit2/tests/graph/ahead_behind.c	/^void test_graph_ahead_behind__cleanup(void)$/;"	f	typeref:typename:void
test_graph_ahead_behind__initialize	extern/libgit2/tests/graph/ahead_behind.c	/^void test_graph_ahead_behind__initialize(void)$/;"	f	typeref:typename:void
test_graph_ahead_behind__returns_correct_result	extern/libgit2/tests/graph/ahead_behind.c	/^void test_graph_ahead_behind__returns_correct_result(void)$/;"	f	typeref:typename:void
test_graph_descendant_of__cleanup	extern/libgit2/tests/graph/descendant_of.c	/^void test_graph_descendant_of__cleanup(void)$/;"	f	typeref:typename:void
test_graph_descendant_of__initialize	extern/libgit2/tests/graph/descendant_of.c	/^void test_graph_descendant_of__initialize(void)$/;"	f	typeref:typename:void
test_graph_descendant_of__nopath	extern/libgit2/tests/graph/descendant_of.c	/^void test_graph_descendant_of__nopath(void)$/;"	f	typeref:typename:void
test_graph_descendant_of__returns_correct_result	extern/libgit2/tests/graph/descendant_of.c	/^void test_graph_descendant_of__returns_correct_result(void)$/;"	f	typeref:typename:void
test_id	extern/libgit2/tests/refs/revparse.c	/^static void test_id($/;"	f	typeref:typename:void	file:
test_id_inrepo	extern/libgit2/tests/refs/revparse.c	/^static void test_id_inrepo($/;"	f	typeref:typename:void	file:
test_ignore_path__allow_root	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__allow_root(void)$/;"	f	typeref:typename:void
test_ignore_path__case_insensitive_unignores_previous_rule	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__case_insensitive_unignores_previous_rule(void)$/;"	f	typeref:typename:void
test_ignore_path__case_sensitive_unignore_does_nothing	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__case_sensitive_unignore_does_nothing(void)$/;"	f	typeref:typename:void
test_ignore_path__cleanup	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__cleanup(void)$/;"	f	typeref:typename:void
test_ignore_path__dont_ignore_files_for_folder	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__dont_ignore_files_for_folder(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_character	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__escaped_character(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_comments	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__escaped_comments(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_glob	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__escaped_glob(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_newline	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__escaped_newline(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_slash	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__escaped_slash(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_space	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__escaped_space(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_trailing_spaces	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__escaped_trailing_spaces(void)$/;"	f	typeref:typename:void
test_ignore_path__expand_tilde_to_homedir	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__expand_tilde_to_homedir(void)$/;"	f	typeref:typename:void
test_ignore_path__full_paths	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__full_paths(void)$/;"	f	typeref:typename:void
test_ignore_path__gitignore_in_subdir	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__gitignore_in_subdir(void)$/;"	f	typeref:typename:void
test_ignore_path__globs_and_path_delimiters	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__globs_and_path_delimiters(void)$/;"	f	typeref:typename:void
test_ignore_path__globs_without_star	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__globs_without_star(void)$/;"	f	typeref:typename:void
test_ignore_path__honor_temporary_rules	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__honor_temporary_rules(void)$/;"	f	typeref:typename:void
test_ignore_path__ignore_dir	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__ignore_dir(void)$/;"	f	typeref:typename:void
test_ignore_path__ignore_dir_with_trailing_space	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__ignore_dir_with_trailing_space(void)$/;"	f	typeref:typename:void
test_ignore_path__ignore_root	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__ignore_root(void)$/;"	f	typeref:typename:void
test_ignore_path__ignore_space	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__ignore_space(void)$/;"	f	typeref:typename:void
test_ignore_path__ignored_subdirfiles_with_negations	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__ignored_subdirfiles_with_negations(void)$/;"	f	typeref:typename:void
test_ignore_path__ignored_subdirfiles_with_subdir_rule	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__ignored_subdirfiles_with_subdir_rule(void)$/;"	f	typeref:typename:void
test_ignore_path__initialize	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__initialize(void)$/;"	f	typeref:typename:void
test_ignore_path__intermittent_space	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__intermittent_space(void)$/;"	f	typeref:typename:void
test_ignore_path__invalid_pattern	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__invalid_pattern(void)$/;"	f	typeref:typename:void
test_ignore_path__leading_stars	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__leading_stars(void)$/;"	f	typeref:typename:void
test_ignore_path__more_starstar_cases	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__more_starstar_cases(void)$/;"	f	typeref:typename:void
test_ignore_path__negative_directory_rules_only_match_directories	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__negative_directory_rules_only_match_directories(void)$/;"	f	typeref:typename:void
test_ignore_path__negative_prefix_rule	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__negative_prefix_rule(void)$/;"	f	typeref:typename:void
test_ignore_path__skip_gitignore_directory	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__skip_gitignore_directory(void)$/;"	f	typeref:typename:void
test_ignore_path__subdirectory_gitignore	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__subdirectory_gitignore(void)$/;"	f	typeref:typename:void
test_ignore_path__symlink_to_outside	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__symlink_to_outside(void)$/;"	f	typeref:typename:void
test_ignore_path__test	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__test(void)$/;"	f	typeref:typename:void
test_ignore_path__trailing_space	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__trailing_space(void)$/;"	f	typeref:typename:void
test_ignore_path__unignore_dir_succeeds	extern/libgit2/tests/ignore/path.c	/^void test_ignore_path__unignore_dir_succeeds(void)$/;"	f	typeref:typename:void
test_ignore_status__0	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__0(void)$/;"	f	typeref:typename:void
test_ignore_status__1	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__1(void)$/;"	f	typeref:typename:void
test_ignore_status__add_internal_as_first_thing	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__add_internal_as_first_thing(void)$/;"	f	typeref:typename:void
test_ignore_status__adding_internal_ignores	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__adding_internal_ignores(void)$/;"	f	typeref:typename:void
test_ignore_status__automatically_ignore_bad_files	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__automatically_ignore_bad_files(void)$/;"	f	typeref:typename:void
test_ignore_status__cleanup	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__cleanup(void)$/;"	f	typeref:typename:void
test_ignore_status__contained_dir_with_matching_name	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__contained_dir_with_matching_name(void)$/;"	f	typeref:typename:void
test_ignore_status__deeper	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__deeper(void)$/;"	f	typeref:typename:void
test_ignore_status__do_not_unignore_basename_prefix	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__do_not_unignore_basename_prefix(void)$/;"	f	typeref:typename:void
test_ignore_status__empty_repo_with_gitignore_rewrite	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__empty_repo_with_gitignore_rewrite(void)$/;"	f	typeref:typename:void
test_ignore_status__filename_with_cr	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__filename_with_cr(void)$/;"	f	typeref:typename:void
test_ignore_status__filenames_with_special_prefixes_do_not_interfere_with_status_retrieval	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__filenames_with_special_prefixes_do_not_interfere_with_status_retrieval(/;"	f	typeref:typename:void
test_ignore_status__ignore_all_toplevel_dirs_include_files	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__ignore_all_toplevel_dirs_include_files(void)$/;"	f	typeref:typename:void
test_ignore_status__ignore_pattern_contains_space	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__ignore_pattern_contains_space(void)$/;"	f	typeref:typename:void
test_ignore_status__ignore_pattern_ignorecase	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__ignore_pattern_ignorecase(void)$/;"	f	typeref:typename:void
test_ignore_status__initialize	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__initialize(void)$/;"	f	typeref:typename:void
test_ignore_status__internal_ignores_inside_deep_paths	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__internal_ignores_inside_deep_paths(void)$/;"	f	typeref:typename:void
test_ignore_status__issue_1766_negated_ignores	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__issue_1766_negated_ignores(void)$/;"	f	typeref:typename:void
test_ignore_status__leading_slash_ignores	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__leading_slash_ignores(void)$/;"	f	typeref:typename:void
test_ignore_status__leading_spaces_are_significant	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__leading_spaces_are_significant(void)$/;"	f	typeref:typename:void
test_ignore_status__more_breakage	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__more_breakage(void)$/;"	f	typeref:typename:void
test_ignore_status__multiple_leading_slash	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__multiple_leading_slash(void)$/;"	f	typeref:typename:void
test_ignore_status__negate_exact_previous	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__negate_exact_previous(void)$/;"	f	typeref:typename:void
test_ignore_status__negate_starstar	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__negate_starstar(void)$/;"	f	typeref:typename:void
test_ignore_status__negative_directory_ignores	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__negative_directory_ignores(void)$/;"	f	typeref:typename:void
test_ignore_status__negative_ignores_in_slash_star	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__negative_ignores_in_slash_star(void)$/;"	f	typeref:typename:void
test_ignore_status__negative_ignores_inside_ignores	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__negative_ignores_inside_ignores(void)$/;"	f	typeref:typename:void
test_ignore_status__negative_ignores_without_trailing_slash_inside_ignores	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__negative_ignores_without_trailing_slash_inside_ignores(void)$/;"	f	typeref:typename:void
test_ignore_status__override_nested_wildcard_unignore	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__override_nested_wildcard_unignore(void)$/;"	f	typeref:typename:void
test_ignore_status__skips_bom	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__skips_bom(void)$/;"	f	typeref:typename:void
test_ignore_status__subdir_doesnt_match_above	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__subdir_doesnt_match_above(void)$/;"	f	typeref:typename:void
test_ignore_status__subdir_ignore_all_toplevel_dirs_include_files	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__subdir_ignore_all_toplevel_dirs_include_files(void)$/;"	f	typeref:typename:void
test_ignore_status__subdir_ignore_everything_except_certain_files	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__subdir_ignore_everything_except_certain_files(void)$/;"	f	typeref:typename:void
test_ignore_status__subdirectories	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__subdirectories(void)$/;"	f	typeref:typename:void
test_ignore_status__subdirectories_not_at_root	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__subdirectories_not_at_root(void)$/;"	f	typeref:typename:void
test_ignore_status__subdirectories_recursion	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__subdirectories_recursion(void)$/;"	f	typeref:typename:void
test_ignore_status__trailing_slash_star	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__trailing_slash_star(void)$/;"	f	typeref:typename:void
test_ignore_status__unignore_entry_in_ignored_dir	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__unignore_entry_in_ignored_dir(void)$/;"	f	typeref:typename:void
test_ignore_status__unignored_dir_with_ignored_contents	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__unignored_dir_with_ignored_contents(void)$/;"	f	typeref:typename:void
test_ignore_status__unignored_subdirs	extern/libgit2/tests/ignore/status.c	/^void test_ignore_status__unignored_subdirs(void)$/;"	f	typeref:typename:void
test_index_add__cleanup	extern/libgit2/tests/index/add.c	/^void test_index_add__cleanup(void)$/;"	f	typeref:typename:void
test_index_add__initialize	extern/libgit2/tests/index/add.c	/^void test_index_add__initialize(void)$/;"	f	typeref:typename:void
test_index_add__invalid_entries_succeeds_by_default	extern/libgit2/tests/index/add.c	/^void test_index_add__invalid_entries_succeeds_by_default(void)$/;"	f	typeref:typename:void
test_index_addall__adds_conflicts	extern/libgit2/tests/index/addall.c	/^void test_index_addall__adds_conflicts(void)$/;"	f	typeref:typename:void
test_index_addall__callback_filtering	extern/libgit2/tests/index/addall.c	/^void test_index_addall__callback_filtering(void)$/;"	f	typeref:typename:void
test_index_addall__cleanup	extern/libgit2/tests/index/addall.c	/^void test_index_addall__cleanup(void)$/;"	f	typeref:typename:void
test_index_addall__files_in_folders	extern/libgit2/tests/index/addall.c	/^void test_index_addall__files_in_folders(void)$/;"	f	typeref:typename:void
test_index_addall__hidden_files	extern/libgit2/tests/index/addall.c	/^void test_index_addall__hidden_files(void)$/;"	f	typeref:typename:void
test_index_addall__initialize	extern/libgit2/tests/index/addall.c	/^void test_index_addall__initialize(void)$/;"	f	typeref:typename:void
test_index_addall__removes_deleted_conflicted_files	extern/libgit2/tests/index/addall.c	/^void test_index_addall__removes_deleted_conflicted_files(void)$/;"	f	typeref:typename:void
test_index_addall__repo_lifecycle	extern/libgit2/tests/index/addall.c	/^void test_index_addall__repo_lifecycle(void)$/;"	f	typeref:typename:void
test_index_bypath__add_directory	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_directory(void)$/;"	f	typeref:typename:void
test_index_bypath__add_hidden	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_hidden(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_conflict_case	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_honors_conflict_case(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_conflict_mode	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_honors_conflict_mode(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_existing_case	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_honors_existing_case(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_existing_case_2	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_honors_existing_case_2(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_existing_case_3	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_honors_existing_case_3(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_existing_case_4	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_honors_existing_case_4(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_mode	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_honors_mode(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_symlink	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_honors_symlink(void)$/;"	f	typeref:typename:void
test_index_bypath__add_keeps_existing_case	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_keeps_existing_case(void)$/;"	f	typeref:typename:void
test_index_bypath__add_submodule	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_submodule(void)$/;"	f	typeref:typename:void
test_index_bypath__add_submodule_unregistered	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__add_submodule_unregistered(void)$/;"	f	typeref:typename:void
test_index_bypath__cleanup	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__cleanup(void)$/;"	f	typeref:typename:void
test_index_bypath__initialize	extern/libgit2/tests/index/bypath.c	/^void test_index_bypath__initialize(void)$/;"	f	typeref:typename:void
test_index_cache__cleanup	extern/libgit2/tests/index/cache.c	/^void test_index_cache__cleanup(void)$/;"	f	typeref:typename:void
test_index_cache__initialize	extern/libgit2/tests/index/cache.c	/^void test_index_cache__initialize(void)$/;"	f	typeref:typename:void
test_index_cache__read_tree_children	extern/libgit2/tests/index/cache.c	/^void test_index_cache__read_tree_children(void)$/;"	f	typeref:typename:void
test_index_cache__read_tree_no_children	extern/libgit2/tests/index/cache.c	/^void test_index_cache__read_tree_no_children(void)$/;"	f	typeref:typename:void
test_index_cache__two_levels	extern/libgit2/tests/index/cache.c	/^void test_index_cache__two_levels(void)$/;"	f	typeref:typename:void
test_index_cache__write_extension_at_root	extern/libgit2/tests/index/cache.c	/^void test_index_cache__write_extension_at_root(void)$/;"	f	typeref:typename:void
test_index_cache__write_extension_invalidated_root	extern/libgit2/tests/index/cache.c	/^void test_index_cache__write_extension_invalidated_root(void)$/;"	f	typeref:typename:void
test_index_collision__add_blob_with_conflicting_dir	extern/libgit2/tests/index/collision.c	/^void test_index_collision__add_blob_with_conflicting_dir(void)$/;"	f	typeref:typename:void
test_index_collision__add_blob_with_conflicting_file	extern/libgit2/tests/index/collision.c	/^void test_index_collision__add_blob_with_conflicting_file(void)$/;"	f	typeref:typename:void
test_index_collision__add_with_highstage_1	extern/libgit2/tests/index/collision.c	/^void test_index_collision__add_with_highstage_1(void)$/;"	f	typeref:typename:void
test_index_collision__add_with_highstage_2	extern/libgit2/tests/index/collision.c	/^void test_index_collision__add_with_highstage_2(void)$/;"	f	typeref:typename:void
test_index_collision__cleanup	extern/libgit2/tests/index/collision.c	/^void test_index_collision__cleanup(void)$/;"	f	typeref:typename:void
test_index_collision__initialize	extern/libgit2/tests/index/collision.c	/^void test_index_collision__initialize(void)$/;"	f	typeref:typename:void
test_index_conflicts__add	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__add(void)$/;"	f	typeref:typename:void
test_index_conflicts__add_detects_invalid_filemode	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__add_detects_invalid_filemode(void)$/;"	f	typeref:typename:void
test_index_conflicts__add_fixes_incorrect_stage	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__add_fixes_incorrect_stage(void)$/;"	f	typeref:typename:void
test_index_conflicts__add_removes_stage_zero	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__add_removes_stage_zero(void)$/;"	f	typeref:typename:void
test_index_conflicts__case_matters	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__case_matters(void)$/;"	f	typeref:typename:void
test_index_conflicts__cleanup	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__cleanup(void)$/;"	f	typeref:typename:void
test_index_conflicts__get	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__get(void)$/;"	f	typeref:typename:void
test_index_conflicts__initialize	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__initialize(void)$/;"	f	typeref:typename:void
test_index_conflicts__iterate	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__iterate(void)$/;"	f	typeref:typename:void
test_index_conflicts__moved_to_reuc_on_add	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__moved_to_reuc_on_add(void)$/;"	f	typeref:typename:void
test_index_conflicts__moved_to_reuc_on_remove	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__moved_to_reuc_on_remove(void)$/;"	f	typeref:typename:void
test_index_conflicts__partial	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__partial(void)$/;"	f	typeref:typename:void
test_index_conflicts__remove	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__remove(void)$/;"	f	typeref:typename:void
test_index_conflicts__remove_all_conflicts	extern/libgit2/tests/index/conflicts.c	/^void test_index_conflicts__remove_all_conflicts(void)$/;"	f	typeref:typename:void
test_index_crlf__autocrlf_false_no_attrs	extern/libgit2/tests/index/crlf.c	/^void test_index_crlf__autocrlf_false_no_attrs(void)$/;"	f	typeref:typename:void
test_index_crlf__autocrlf_false_text_auto_attr	extern/libgit2/tests/index/crlf.c	/^void test_index_crlf__autocrlf_false_text_auto_attr(void)$/;"	f	typeref:typename:void
test_index_crlf__autocrlf_input_no_attrs	extern/libgit2/tests/index/crlf.c	/^void test_index_crlf__autocrlf_input_no_attrs(void)$/;"	f	typeref:typename:void
test_index_crlf__autocrlf_input_text_auto_attr	extern/libgit2/tests/index/crlf.c	/^void test_index_crlf__autocrlf_input_text_auto_attr(void)$/;"	f	typeref:typename:void
test_index_crlf__autocrlf_true_no_attrs	extern/libgit2/tests/index/crlf.c	/^void test_index_crlf__autocrlf_true_no_attrs(void)$/;"	f	typeref:typename:void
test_index_crlf__autocrlf_true_text_auto_attr	extern/libgit2/tests/index/crlf.c	/^void test_index_crlf__autocrlf_true_text_auto_attr(void)$/;"	f	typeref:typename:void
test_index_crlf__cleanup	extern/libgit2/tests/index/crlf.c	/^void test_index_crlf__cleanup(void)$/;"	f	typeref:typename:void
test_index_crlf__initialize	extern/libgit2/tests/index/crlf.c	/^void test_index_crlf__initialize(void)$/;"	f	typeref:typename:void
test_index_crlf__matches_core_git	extern/libgit2/tests/index/crlf.c	/^void test_index_crlf__matches_core_git(void)$/;"	f	typeref:typename:void
test_index_crlf__safecrlf_true_autocrlf_input_text__no_attr	extern/libgit2/tests/index/crlf.c	/^void test_index_crlf__safecrlf_true_autocrlf_input_text__no_attr(void)$/;"	f	typeref:typename:void
test_index_crlf__safecrlf_true_autocrlf_input_text_auto_attr	extern/libgit2/tests/index/crlf.c	/^void test_index_crlf__safecrlf_true_autocrlf_input_text_auto_attr(void)$/;"	f	typeref:typename:void
test_index_crlf__safecrlf_true_no_attrs	extern/libgit2/tests/index/crlf.c	/^void test_index_crlf__safecrlf_true_no_attrs(void)$/;"	f	typeref:typename:void
test_index_filemodes__cleanup	extern/libgit2/tests/index/filemodes.c	/^void test_index_filemodes__cleanup(void)$/;"	f	typeref:typename:void
test_index_filemodes__explicit	extern/libgit2/tests/index/filemodes.c	/^void test_index_filemodes__explicit(void)$/;"	f	typeref:typename:void
test_index_filemodes__frombuffer_requires_files	extern/libgit2/tests/index/filemodes.c	/^void test_index_filemodes__frombuffer_requires_files(void)$/;"	f	typeref:typename:void
test_index_filemodes__initialize	extern/libgit2/tests/index/filemodes.c	/^void test_index_filemodes__initialize(void)$/;"	f	typeref:typename:void
test_index_filemodes__invalid	extern/libgit2/tests/index/filemodes.c	/^void test_index_filemodes__invalid(void)$/;"	f	typeref:typename:void
test_index_filemodes__read	extern/libgit2/tests/index/filemodes.c	/^void test_index_filemodes__read(void)$/;"	f	typeref:typename:void
test_index_filemodes__trusted	extern/libgit2/tests/index/filemodes.c	/^void test_index_filemodes__trusted(void)$/;"	f	typeref:typename:void
test_index_filemodes__untrusted	extern/libgit2/tests/index/filemodes.c	/^void test_index_filemodes__untrusted(void)$/;"	f	typeref:typename:void
test_index_inmemory__can_create_an_inmemory_index	extern/libgit2/tests/index/inmemory.c	/^void test_index_inmemory__can_create_an_inmemory_index(void)$/;"	f	typeref:typename:void
test_index_inmemory__cannot_add_bypath_to_an_inmemory_index	extern/libgit2/tests/index/inmemory.c	/^void test_index_inmemory__cannot_add_bypath_to_an_inmemory_index(void)$/;"	f	typeref:typename:void
test_index_names__add	extern/libgit2/tests/index/names.c	/^void test_index_names__add(void)$/;"	f	typeref:typename:void
test_index_names__cleaned_on_checkout_head	extern/libgit2/tests/index/names.c	/^void test_index_names__cleaned_on_checkout_head(void)$/;"	f	typeref:typename:void
test_index_names__cleaned_on_checkout_tree	extern/libgit2/tests/index/names.c	/^void test_index_names__cleaned_on_checkout_tree(void)$/;"	f	typeref:typename:void
test_index_names__cleaned_on_reset_hard	extern/libgit2/tests/index/names.c	/^void test_index_names__cleaned_on_reset_hard(void)$/;"	f	typeref:typename:void
test_index_names__cleaned_on_reset_mixed	extern/libgit2/tests/index/names.c	/^void test_index_names__cleaned_on_reset_mixed(void)$/;"	f	typeref:typename:void
test_index_names__cleanup	extern/libgit2/tests/index/names.c	/^void test_index_names__cleanup(void)$/;"	f	typeref:typename:void
test_index_names__initialize	extern/libgit2/tests/index/names.c	/^void test_index_names__initialize(void)$/;"	f	typeref:typename:void
test_index_names__retained_on_checkout_index	extern/libgit2/tests/index/names.c	/^void test_index_names__retained_on_checkout_index(void)$/;"	f	typeref:typename:void
test_index_names__roundtrip	extern/libgit2/tests/index/names.c	/^void test_index_names__roundtrip(void)$/;"	f	typeref:typename:void
test_index_nsec__cleanup	extern/libgit2/tests/index/nsec.c	/^void test_index_nsec__cleanup(void)$/;"	f	typeref:typename:void
test_index_nsec__has_nanos	extern/libgit2/tests/index/nsec.c	/^void test_index_nsec__has_nanos(void)$/;"	f	typeref:typename:void
test_index_nsec__initialize	extern/libgit2/tests/index/nsec.c	/^void test_index_nsec__initialize(void)$/;"	f	typeref:typename:void
test_index_nsec__staging_maintains_other_nanos	extern/libgit2/tests/index/nsec.c	/^void test_index_nsec__staging_maintains_other_nanos(void)$/;"	f	typeref:typename:void
test_index_nsec__status_doesnt_clear_nsecs	extern/libgit2/tests/index/nsec.c	/^void test_index_nsec__status_doesnt_clear_nsecs(void)$/;"	f	typeref:typename:void
test_index_racy__adding_to_index_is_uptodate	extern/libgit2/tests/index/racy.c	/^void test_index_racy__adding_to_index_is_uptodate(void)$/;"	f	typeref:typename:void
test_index_racy__cleanup	extern/libgit2/tests/index/racy.c	/^void test_index_racy__cleanup(void)$/;"	f	typeref:typename:void
test_index_racy__detects_diff_of_change_in_identical_timestamp	extern/libgit2/tests/index/racy.c	/^void test_index_racy__detects_diff_of_change_in_identical_timestamp(void)$/;"	f	typeref:typename:void
test_index_racy__diff	extern/libgit2/tests/index/racy.c	/^void test_index_racy__diff(void)$/;"	f	typeref:typename:void
test_index_racy__initialize	extern/libgit2/tests/index/racy.c	/^void test_index_racy__initialize(void)$/;"	f	typeref:typename:void
test_index_racy__read_index_clears_uptodate_bit	extern/libgit2/tests/index/racy.c	/^void test_index_racy__read_index_clears_uptodate_bit(void)$/;"	f	typeref:typename:void
test_index_racy__read_index_smudges	extern/libgit2/tests/index/racy.c	/^void test_index_racy__read_index_smudges(void)$/;"	f	typeref:typename:void
test_index_racy__read_tree_clears_uptodate_bit	extern/libgit2/tests/index/racy.c	/^void test_index_racy__read_tree_clears_uptodate_bit(void)$/;"	f	typeref:typename:void
test_index_racy__reading_clears_uptodate_bit	extern/libgit2/tests/index/racy.c	/^void test_index_racy__reading_clears_uptodate_bit(void)$/;"	f	typeref:typename:void
test_index_racy__smudges_index_entry_on_save	extern/libgit2/tests/index/racy.c	/^void test_index_racy__smudges_index_entry_on_save(void)$/;"	f	typeref:typename:void
test_index_racy__write_index_just_after_file	extern/libgit2/tests/index/racy.c	/^void test_index_racy__write_index_just_after_file(void)$/;"	f	typeref:typename:void
test_index_read_index__cleanup	extern/libgit2/tests/index/read_index.c	/^void test_index_read_index__cleanup(void)$/;"	f	typeref:typename:void
test_index_read_index__handles_conflicts	extern/libgit2/tests/index/read_index.c	/^void test_index_read_index__handles_conflicts(void)$/;"	f	typeref:typename:void
test_index_read_index__initialize	extern/libgit2/tests/index/read_index.c	/^void test_index_read_index__initialize(void)$/;"	f	typeref:typename:void
test_index_read_index__maintains_stat_cache	extern/libgit2/tests/index/read_index.c	/^void test_index_read_index__maintains_stat_cache(void)$/;"	f	typeref:typename:void
test_index_read_index__produces_treesame_indexes	extern/libgit2/tests/index/read_index.c	/^void test_index_read_index__produces_treesame_indexes(void)$/;"	f	typeref:typename:void
test_index_read_index__read_and_writes	extern/libgit2/tests/index/read_index.c	/^void test_index_read_index__read_and_writes(void)$/;"	f	typeref:typename:void
test_index_read_tree__read_write_involution	extern/libgit2/tests/index/read_tree.c	/^void test_index_read_tree__read_write_involution(void)$/;"	f	typeref:typename:void
test_index_rename__casechanging	extern/libgit2/tests/index/rename.c	/^void test_index_rename__casechanging(void)$/;"	f	typeref:typename:void
test_index_rename__single_file	extern/libgit2/tests/index/rename.c	/^void test_index_rename__single_file(void)$/;"	f	typeref:typename:void
test_index_reuc__add	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__add(void)$/;"	f	typeref:typename:void
test_index_reuc__add_no_ancestor	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__add_no_ancestor(void)$/;"	f	typeref:typename:void
test_index_reuc__cleaned_on_checkout_head	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__cleaned_on_checkout_head(void)$/;"	f	typeref:typename:void
test_index_reuc__cleaned_on_checkout_tree	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__cleaned_on_checkout_tree(void)$/;"	f	typeref:typename:void
test_index_reuc__cleaned_on_reset_hard	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__cleaned_on_reset_hard(void)$/;"	f	typeref:typename:void
test_index_reuc__cleaned_on_reset_mixed	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__cleaned_on_reset_mixed(void)$/;"	f	typeref:typename:void
test_index_reuc__cleanup	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__cleanup(void)$/;"	f	typeref:typename:void
test_index_reuc__ignore_case	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__ignore_case(void)$/;"	f	typeref:typename:void
test_index_reuc__initialize	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__initialize(void)$/;"	f	typeref:typename:void
test_index_reuc__read_byindex	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__read_byindex(void)$/;"	f	typeref:typename:void
test_index_reuc__read_bypath	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__read_bypath(void)$/;"	f	typeref:typename:void
test_index_reuc__remove	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__remove(void)$/;"	f	typeref:typename:void
test_index_reuc__retained_on_checkout_index	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__retained_on_checkout_index(void)$/;"	f	typeref:typename:void
test_index_reuc__retained_on_reset_soft	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__retained_on_reset_soft(void)$/;"	f	typeref:typename:void
test_index_reuc__updates_existing	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__updates_existing(void)$/;"	f	typeref:typename:void
test_index_reuc__write	extern/libgit2/tests/index/reuc.c	/^void test_index_reuc__write(void)$/;"	f	typeref:typename:void
test_index_splitindex__cleanup	extern/libgit2/tests/index/splitindex.c	/^void test_index_splitindex__cleanup(void)$/;"	f	typeref:typename:void
test_index_splitindex__fail_on_open	extern/libgit2/tests/index/splitindex.c	/^void test_index_splitindex__fail_on_open(void)$/;"	f	typeref:typename:void
test_index_splitindex__initialize	extern/libgit2/tests/index/splitindex.c	/^void test_index_splitindex__initialize(void)$/;"	f	typeref:typename:void
test_index_stage__add_always_adds_stage_0	extern/libgit2/tests/index/stage.c	/^void test_index_stage__add_always_adds_stage_0(void)$/;"	f	typeref:typename:void
test_index_stage__cleanup	extern/libgit2/tests/index/stage.c	/^void test_index_stage__cleanup(void)$/;"	f	typeref:typename:void
test_index_stage__find_gets_first_stage	extern/libgit2/tests/index/stage.c	/^void test_index_stage__find_gets_first_stage(void)$/;"	f	typeref:typename:void
test_index_stage__initialize	extern/libgit2/tests/index/stage.c	/^void test_index_stage__initialize(void)$/;"	f	typeref:typename:void
test_index_tests__add	extern/libgit2/tests/index/tests.c	/^void test_index_tests__add(void)$/;"	f	typeref:typename:void
test_index_tests__add_bypath_to_a_bare_repository_returns_EBAREPO	extern/libgit2/tests/index/tests.c	/^void test_index_tests__add_bypath_to_a_bare_repository_returns_EBAREPO(void)$/;"	f	typeref:typename:void
test_index_tests__add_frombuffer	extern/libgit2/tests/index/tests.c	/^void test_index_tests__add_frombuffer(void)$/;"	f	typeref:typename:void
test_index_tests__add_frombuffer_reset_entry	extern/libgit2/tests/index/tests.c	/^void test_index_tests__add_frombuffer_reset_entry(void)$/;"	f	typeref:typename:void
test_index_tests__add_invalid_filename	extern/libgit2/tests/index/tests.c	/^void test_index_tests__add_invalid_filename(void)$/;"	f	typeref:typename:void
test_index_tests__add_issue_1397	extern/libgit2/tests/index/tests.c	/^void test_index_tests__add_issue_1397(void)$/;"	f	typeref:typename:void
test_index_tests__can_iterate	extern/libgit2/tests/index/tests.c	/^void test_index_tests__can_iterate(void)$/;"	f	typeref:typename:void
test_index_tests__can_lock_index	extern/libgit2/tests/index/tests.c	/^void test_index_tests__can_lock_index(void)$/;"	f	typeref:typename:void
test_index_tests__can_modify_while_iterating	extern/libgit2/tests/index/tests.c	/^void test_index_tests__can_modify_while_iterating(void)$/;"	f	typeref:typename:void
test_index_tests__change_icase_on_instance	extern/libgit2/tests/index/tests.c	/^void test_index_tests__change_icase_on_instance(void)$/;"	f	typeref:typename:void
test_index_tests__cleanup	extern/libgit2/tests/index/tests.c	/^void test_index_tests__cleanup(void)$/;"	f	typeref:typename:void
test_index_tests__corrupted_extension	extern/libgit2/tests/index/tests.c	/^void test_index_tests__corrupted_extension(void)$/;"	f	typeref:typename:void
test_index_tests__default_test_index	extern/libgit2/tests/index/tests.c	/^void test_index_tests__default_test_index(void)$/;"	f	typeref:typename:void
test_index_tests__dirty_and_clean	extern/libgit2/tests/index/tests.c	/^void test_index_tests__dirty_and_clean(void)$/;"	f	typeref:typename:void
test_index_tests__dirty_fails_optionally	extern/libgit2/tests/index/tests.c	/^void test_index_tests__dirty_fails_optionally(void)$/;"	f	typeref:typename:void
test_index_tests__elocked	extern/libgit2/tests/index/tests.c	/^void test_index_tests__elocked(void)$/;"	f	typeref:typename:void
test_index_tests__empty_index	extern/libgit2/tests/index/tests.c	/^void test_index_tests__empty_index(void)$/;"	f	typeref:typename:void
test_index_tests__find_in_empty	extern/libgit2/tests/index/tests.c	/^void test_index_tests__find_in_empty(void)$/;"	f	typeref:typename:void
test_index_tests__find_in_existing	extern/libgit2/tests/index/tests.c	/^void test_index_tests__find_in_existing(void)$/;"	f	typeref:typename:void
test_index_tests__find_prefix	extern/libgit2/tests/index/tests.c	/^void test_index_tests__find_prefix(void)$/;"	f	typeref:typename:void
test_index_tests__gitgit_index	extern/libgit2/tests/index/tests.c	/^void test_index_tests__gitgit_index(void)$/;"	f	typeref:typename:void
test_index_tests__honors_protect_filesystems	extern/libgit2/tests/index/tests.c	/^void test_index_tests__honors_protect_filesystems(void)$/;"	f	typeref:typename:void
test_index_tests__initialize	extern/libgit2/tests/index/tests.c	/^void test_index_tests__initialize(void)$/;"	f	typeref:typename:void
test_index_tests__preserves_case	extern/libgit2/tests/index/tests.c	/^void test_index_tests__preserves_case(void)$/;"	f	typeref:typename:void
test_index_tests__reload_from_disk	extern/libgit2/tests/index/tests.c	/^void test_index_tests__reload_from_disk(void)$/;"	f	typeref:typename:void
test_index_tests__reload_while_ignoring_case	extern/libgit2/tests/index/tests.c	/^void test_index_tests__reload_while_ignoring_case(void)$/;"	f	typeref:typename:void
test_index_tests__remove_directory	extern/libgit2/tests/index/tests.c	/^void test_index_tests__remove_directory(void)$/;"	f	typeref:typename:void
test_index_tests__remove_entry	extern/libgit2/tests/index/tests.c	/^void test_index_tests__remove_entry(void)$/;"	f	typeref:typename:void
test_index_tests__sort0	extern/libgit2/tests/index/tests.c	/^void test_index_tests__sort0(void)$/;"	f	typeref:typename:void
test_index_tests__sort1	extern/libgit2/tests/index/tests.c	/^void test_index_tests__sort1(void)$/;"	f	typeref:typename:void
test_index_tests__write	extern/libgit2/tests/index/tests.c	/^void test_index_tests__write(void)$/;"	f	typeref:typename:void
test_index_tests__write_invalid_filename	extern/libgit2/tests/index/tests.c	/^void test_index_tests__write_invalid_filename(void)$/;"	f	typeref:typename:void
test_index_tests__write_tree_invalid_unowned_index	extern/libgit2/tests/index/tests.c	/^void test_index_tests__write_tree_invalid_unowned_index(void)$/;"	f	typeref:typename:void
test_index_version__can_read_v4	extern/libgit2/tests/index/version.c	/^void test_index_version__can_read_v4(void)$/;"	f	typeref:typename:void
test_index_version__can_write_v4	extern/libgit2/tests/index/version.c	/^void test_index_version__can_write_v4(void)$/;"	f	typeref:typename:void
test_index_version__cleanup	extern/libgit2/tests/index/version.c	/^void test_index_version__cleanup(void)$/;"	f	typeref:typename:void
test_index_version__v4_uses_path_compression	extern/libgit2/tests/index/version.c	/^void test_index_version__v4_uses_path_compression(void)$/;"	f	typeref:typename:void
test_inserting_submodule	extern/libgit2/tests/object/tree/write.c	/^static void test_inserting_submodule(void)$/;"	f	typeref:typename:void	file:
test_invalid_name	extern/libgit2/tests/refs/create.c	/^static void test_invalid_name(const char *name)$/;"	f	typeref:typename:void	file:
test_invalid_objects	extern/libgit2/tests/object/tree/write.c	/^static void test_invalid_objects(bool should_allow_invalid)$/;"	f	typeref:typename:void	file:
test_invalid_revspec	extern/libgit2/tests/refs/revparse.c	/^static void test_invalid_revspec(const char* invalid_spec)$/;"	f	typeref:typename:void	file:
test_iterator	extern/libgit2/tests/rebase/iterator.c	/^void test_iterator(bool inmemory)$/;"	f	typeref:typename:void
test_iterator_index__0	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__0(void)$/;"	f	typeref:typename:void
test_iterator_index__1	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__1(void)$/;"	f	typeref:typename:void
test_iterator_index__advance_into	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__advance_into(void)$/;"	f	typeref:typename:void
test_iterator_index__advance_into_and_over	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__advance_into_and_over(void)$/;"	f	typeref:typename:void
test_iterator_index__advance_over	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__advance_over(void)$/;"	f	typeref:typename:void
test_iterator_index__case_folding	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__case_folding(void)$/;"	f	typeref:typename:void
test_iterator_index__cleanup	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__cleanup(void)$/;"	f	typeref:typename:void
test_iterator_index__icase_0	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__icase_0(void)$/;"	f	typeref:typename:void
test_iterator_index__icase_1	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__icase_1(void)$/;"	f	typeref:typename:void
test_iterator_index__include_conflicts	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__include_conflicts(void)$/;"	f	typeref:typename:void
test_iterator_index__initialize	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__initialize(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__pathlist(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_1	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__pathlist_1(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_2	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__pathlist_2(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_for_deeply_nested_item	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__pathlist_for_deeply_nested_item(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_four	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__pathlist_four(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_icase	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__pathlist_icase(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_with_directory	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__pathlist_with_directory(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_with_dirs	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__pathlist_with_dirs(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_with_dirs_include_trees	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__pathlist_with_dirs_include_trees(void)$/;"	f	typeref:typename:void
test_iterator_index__range	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__range(void)$/;"	f	typeref:typename:void
test_iterator_index__range_empty_0	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__range_empty_0(void)$/;"	f	typeref:typename:void
test_iterator_index__range_empty_1	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__range_empty_1(void)$/;"	f	typeref:typename:void
test_iterator_index__range_empty_2	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__range_empty_2(void)$/;"	f	typeref:typename:void
test_iterator_index__range_icase	extern/libgit2/tests/iterator/index.c	/^void test_iterator_index__range_icase(void)$/;"	f	typeref:typename:void
test_iterator_tree__0	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__0(void)$/;"	f	typeref:typename:void
test_iterator_tree__1	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__1(void)$/;"	f	typeref:typename:void
test_iterator_tree__2	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__2(void)$/;"	f	typeref:typename:void
test_iterator_tree__3	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__3(void)$/;"	f	typeref:typename:void
test_iterator_tree__4	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__4(void)$/;"	f	typeref:typename:void
test_iterator_tree__4_ranged	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__4_ranged(void)$/;"	f	typeref:typename:void
test_iterator_tree__case_conflicts_0	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__case_conflicts_0(void)$/;"	f	typeref:typename:void
test_iterator_tree__case_conflicts_1	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__case_conflicts_1(void)$/;"	f	typeref:typename:void
test_iterator_tree__case_conflicts_2	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__case_conflicts_2(void)$/;"	f	typeref:typename:void
test_iterator_tree__cleanup	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__cleanup(void)$/;"	f	typeref:typename:void
test_iterator_tree__icase_0	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__icase_0(void)$/;"	f	typeref:typename:void
test_iterator_tree__icase_1	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__icase_1(void)$/;"	f	typeref:typename:void
test_iterator_tree__icase_2	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__icase_2(void)$/;"	f	typeref:typename:void
test_iterator_tree__initialize	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__initialize(void)$/;"	f	typeref:typename:void
test_iterator_tree__pathlist	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__pathlist(void)$/;"	f	typeref:typename:void
test_iterator_tree__pathlist_icase	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__pathlist_icase(void)$/;"	f	typeref:typename:void
test_iterator_tree__pathlist_no_match	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__pathlist_no_match(void)$/;"	f	typeref:typename:void
test_iterator_tree__pathlist_with_directory	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__pathlist_with_directory(void)$/;"	f	typeref:typename:void
test_iterator_tree__pathlist_with_directory_include_tree_nodes	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__pathlist_with_directory_include_tree_nodes(void)$/;"	f	typeref:typename:void
test_iterator_tree__range_empty_0	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__range_empty_0(void)$/;"	f	typeref:typename:void
test_iterator_tree__range_empty_1	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__range_empty_1(void)$/;"	f	typeref:typename:void
test_iterator_tree__range_empty_2	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__range_empty_2(void)$/;"	f	typeref:typename:void
test_iterator_tree__range_icase	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__range_icase(void)$/;"	f	typeref:typename:void
test_iterator_tree__ranged_0	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__ranged_0(void)$/;"	f	typeref:typename:void
test_iterator_tree__ranged_1	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__ranged_1(void)$/;"	f	typeref:typename:void
test_iterator_tree__special_functions	extern/libgit2/tests/iterator/tree.c	/^void test_iterator_tree__special_functions(void)$/;"	f	typeref:typename:void
test_iterator_workdir__0	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__0(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__1(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_0	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_0(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_1	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_1(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_3	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_3(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_4	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_4(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_5	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_5(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_5_1_ranged_empty_0	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_5_1_ranged_empty_0(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_empty_1	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_empty_1(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_empty_2	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_empty_2(void)$/;"	f	typeref:typename:void
test_iterator_workdir__advance_into	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__advance_into(void)$/;"	f	typeref:typename:void
test_iterator_workdir__advance_over	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__advance_over(void)$/;"	f	typeref:typename:void
test_iterator_workdir__advance_over_with_pathlist	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__advance_over_with_pathlist(void)$/;"	f	typeref:typename:void
test_iterator_workdir__bounded_submodules	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__bounded_submodules(void)$/;"	f	typeref:typename:void
test_iterator_workdir__builtin_ignores	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__builtin_ignores(void)$/;"	f	typeref:typename:void
test_iterator_workdir__cleanup	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__cleanup(void)$/;"	f	typeref:typename:void
test_iterator_workdir__depth	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__depth(void)$/;"	f	typeref:typename:void
test_iterator_workdir__filesystem	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__filesystem(void)$/;"	f	typeref:typename:void
test_iterator_workdir__filesystem2	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__filesystem2(void)$/;"	f	typeref:typename:void
test_iterator_workdir__filesystem_gunk	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__filesystem_gunk(void)$/;"	f	typeref:typename:void
test_iterator_workdir__handles_icase_range	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__handles_icase_range(void)$/;"	f	typeref:typename:void
test_iterator_workdir__hash_when_requested	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__hash_when_requested(void)$/;"	f	typeref:typename:void
test_iterator_workdir__icase	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__icase(void)$/;"	f	typeref:typename:void
test_iterator_workdir__icase_starts_and_ends	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__icase_starts_and_ends(void)$/;"	f	typeref:typename:void
test_iterator_workdir__initialize	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__initialize(void)$/;"	f	typeref:typename:void
test_iterator_workdir__pathlist	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__pathlist(void)$/;"	f	typeref:typename:void
test_iterator_workdir__pathlist_for_deeply_nested_item	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__pathlist_for_deeply_nested_item(void)$/;"	f	typeref:typename:void
test_iterator_workdir__pathlist_with_directory	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__pathlist_with_directory(void)$/;"	f	typeref:typename:void
test_iterator_workdir__pathlist_with_directory_include_trees	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__pathlist_with_directory_include_trees(void)$/;"	f	typeref:typename:void
test_iterator_workdir__pathlist_with_dirs	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__pathlist_with_dirs(void)$/;"	f	typeref:typename:void
test_iterator_workdir__skips_fifos_and_special_files	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__skips_fifos_and_special_files(void)$/;"	f	typeref:typename:void
test_iterator_workdir__skips_unreadable_dirs	extern/libgit2/tests/iterator/workdir.c	/^void test_iterator_workdir__skips_unreadable_dirs(void)$/;"	f	typeref:typename:void
test_join_unrooted	extern/libgit2/tests/path/core.c	/^static void test_join_unrooted($/;"	f	typeref:typename:void	file:
test_mailmap_basic__cleanup	extern/libgit2/tests/mailmap/basic.c	/^void test_mailmap_basic__cleanup(void)$/;"	f	typeref:typename:void
test_mailmap_basic__empty_email_query	extern/libgit2/tests/mailmap/basic.c	/^void test_mailmap_basic__empty_email_query(void)$/;"	f	typeref:typename:void
test_mailmap_basic__entry	extern/libgit2/tests/mailmap/basic.c	/^void test_mailmap_basic__entry(void)$/;"	f	typeref:typename:void
test_mailmap_basic__initialize	extern/libgit2/tests/mailmap/basic.c	/^void test_mailmap_basic__initialize(void)$/;"	f	typeref:typename:void
test_mailmap_basic__lookup	extern/libgit2/tests/mailmap/basic.c	/^void test_mailmap_basic__lookup(void)$/;"	f	typeref:typename:void
test_mailmap_basic__lookup_not_found	extern/libgit2/tests/mailmap/basic.c	/^void test_mailmap_basic__lookup_not_found(void)$/;"	f	typeref:typename:void
test_mailmap_basic__name_matching	extern/libgit2/tests/mailmap/basic.c	/^void test_mailmap_basic__name_matching(void)$/;"	f	typeref:typename:void
test_mailmap_blame__cleanup	extern/libgit2/tests/mailmap/blame.c	/^void test_mailmap_blame__cleanup(void)$/;"	f	typeref:typename:void
test_mailmap_blame__hunks	extern/libgit2/tests/mailmap/blame.c	/^void test_mailmap_blame__hunks(void)$/;"	f	typeref:typename:void
test_mailmap_blame__hunks_no_mailmap	extern/libgit2/tests/mailmap/blame.c	/^void test_mailmap_blame__hunks_no_mailmap(void)$/;"	f	typeref:typename:void
test_mailmap_blame__initialize	extern/libgit2/tests/mailmap/blame.c	/^void test_mailmap_blame__initialize(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__bare_blob_config	extern/libgit2/tests/mailmap/parsing.c	/^void test_mailmap_parsing__bare_blob_config(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__blob_config	extern/libgit2/tests/mailmap/parsing.c	/^void test_mailmap_parsing__blob_config(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__cleanup	extern/libgit2/tests/mailmap/parsing.c	/^void test_mailmap_parsing__cleanup(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__file_config	extern/libgit2/tests/mailmap/parsing.c	/^void test_mailmap_parsing__file_config(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__frombare	extern/libgit2/tests/mailmap/parsing.c	/^void test_mailmap_parsing__frombare(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__fromrepo	extern/libgit2/tests/mailmap/parsing.c	/^void test_mailmap_parsing__fromrepo(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__initialize	extern/libgit2/tests/mailmap/parsing.c	/^void test_mailmap_parsing__initialize(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__string	extern/libgit2/tests/mailmap/parsing.c	/^void test_mailmap_parsing__string(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__windows_string	extern/libgit2/tests/mailmap/parsing.c	/^void test_mailmap_parsing__windows_string(void)$/;"	f	typeref:typename:void
test_make_relative	extern/libgit2/tests/path/core.c	/^static void test_make_relative($/;"	f	typeref:typename:void	file:
test_merge_analysis__between_noff_refs	extern/libgit2/tests/merge/analysis.c	/^void test_merge_analysis__between_noff_refs(void)$/;"	f	typeref:typename:void
test_merge_analysis__between_uptodate_refs	extern/libgit2/tests/merge/analysis.c	/^void test_merge_analysis__between_uptodate_refs(void)$/;"	f	typeref:typename:void
test_merge_analysis__cleanup	extern/libgit2/tests/merge/analysis.c	/^void test_merge_analysis__cleanup(void)$/;"	f	typeref:typename:void
test_merge_analysis__fastforward	extern/libgit2/tests/merge/analysis.c	/^void test_merge_analysis__fastforward(void)$/;"	f	typeref:typename:void
test_merge_analysis__fastforward_with_config_noff	extern/libgit2/tests/merge/analysis.c	/^void test_merge_analysis__fastforward_with_config_noff(void)$/;"	f	typeref:typename:void
test_merge_analysis__initialize_with_bare_repository	extern/libgit2/tests/merge/analysis.c	/^void test_merge_analysis__initialize_with_bare_repository(void)$/;"	f	typeref:typename:void
test_merge_analysis__initialize_with_nonbare_repository	extern/libgit2/tests/merge/analysis.c	/^void test_merge_analysis__initialize_with_nonbare_repository(void)$/;"	f	typeref:typename:void
test_merge_analysis__no_fastforward	extern/libgit2/tests/merge/analysis.c	/^void test_merge_analysis__no_fastforward(void)$/;"	f	typeref:typename:void
test_merge_analysis__no_fastforward_with_config_ffonly	extern/libgit2/tests/merge/analysis.c	/^void test_merge_analysis__no_fastforward_with_config_ffonly(void)$/;"	f	typeref:typename:void
test_merge_analysis__unborn	extern/libgit2/tests/merge/analysis.c	/^void test_merge_analysis__unborn(void)$/;"	f	typeref:typename:void
test_merge_analysis__uptodate	extern/libgit2/tests/merge/analysis.c	/^void test_merge_analysis__uptodate(void)$/;"	f	typeref:typename:void
test_merge_analysis__uptodate_merging_prev_commit	extern/libgit2/tests/merge/analysis.c	/^void test_merge_analysis__uptodate_merging_prev_commit(void)$/;"	f	typeref:typename:void
test_merge_annotated_commit__cleanup	extern/libgit2/tests/merge/annotated_commit.c	/^void test_merge_annotated_commit__cleanup(void)$/;"	f	typeref:typename:void
test_merge_annotated_commit__initialize	extern/libgit2/tests/merge/annotated_commit.c	/^void test_merge_annotated_commit__initialize(void)$/;"	f	typeref:typename:void
test_merge_annotated_commit__lookup_annotated_tag	extern/libgit2/tests/merge/annotated_commit.c	/^void test_merge_annotated_commit__lookup_annotated_tag(void)$/;"	f	typeref:typename:void
test_merge_driver	extern/libgit2/tests/merge/driver.c	/^struct test_merge_driver {$/;"	s	file:
test_merge_driver__apply_can_conflict	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__apply_can_conflict(void)$/;"	f	typeref:typename:void
test_merge_driver__apply_can_defer	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__apply_can_defer(void)$/;"	f	typeref:typename:void
test_merge_driver__cleanup	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__cleanup(void)$/;"	f	typeref:typename:void
test_merge_driver__custom	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__custom(void)$/;"	f	typeref:typename:void
test_merge_driver__default_can_be_specified	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__default_can_be_specified(void)$/;"	f	typeref:typename:void
test_merge_driver__honors_builtin_mergedefault	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__honors_builtin_mergedefault(void)$/;"	f	typeref:typename:void
test_merge_driver__honors_custom_mergedefault	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__honors_custom_mergedefault(void)$/;"	f	typeref:typename:void
test_merge_driver__initialize	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__initialize(void)$/;"	f	typeref:typename:void
test_merge_driver__mergedefault_deferring_falls_back_to_text	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__mergedefault_deferring_falls_back_to_text(void)$/;"	f	typeref:typename:void
test_merge_driver__not_configured_driver_falls_back	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__not_configured_driver_falls_back(void)$/;"	f	typeref:typename:void
test_merge_driver__set_forces_text	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__set_forces_text(void)$/;"	f	typeref:typename:void
test_merge_driver__shutdown_is_called	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__shutdown_is_called(void)$/;"	f	typeref:typename:void
test_merge_driver__unset_forces_binary	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__unset_forces_binary(void)$/;"	f	typeref:typename:void
test_merge_driver__wildcard	extern/libgit2/tests/merge/driver.c	/^void test_merge_driver__wildcard(void)$/;"	f	typeref:typename:void
test_merge_files__automerge_from_bufs	extern/libgit2/tests/merge/files.c	/^void test_merge_files__automerge_from_bufs(void)$/;"	f	typeref:typename:void
test_merge_files__automerge_from_index	extern/libgit2/tests/merge/files.c	/^void test_merge_files__automerge_from_index(void)$/;"	f	typeref:typename:void
test_merge_files__automerge_use_best_path_and_mode	extern/libgit2/tests/merge/files.c	/^void test_merge_files__automerge_use_best_path_and_mode(void)$/;"	f	typeref:typename:void
test_merge_files__automerge_whitespace_change	extern/libgit2/tests/merge/files.c	/^void test_merge_files__automerge_whitespace_change(void)$/;"	f	typeref:typename:void
test_merge_files__automerge_whitespace_eol	extern/libgit2/tests/merge/files.c	/^void test_merge_files__automerge_whitespace_eol(void)$/;"	f	typeref:typename:void
test_merge_files__cleanup	extern/libgit2/tests/merge/files.c	/^void test_merge_files__cleanup(void)$/;"	f	typeref:typename:void
test_merge_files__conflict_from_bufs	extern/libgit2/tests/merge/files.c	/^void test_merge_files__conflict_from_bufs(void)$/;"	f	typeref:typename:void
test_merge_files__crlf_conflict_markers_for_crlf_files	extern/libgit2/tests/merge/files.c	/^void test_merge_files__crlf_conflict_markers_for_crlf_files(void)$/;"	f	typeref:typename:void
test_merge_files__doesnt_add_newline	extern/libgit2/tests/merge/files.c	/^void test_merge_files__doesnt_add_newline(void)$/;"	f	typeref:typename:void
test_merge_files__handles_binaries_when_favored	extern/libgit2/tests/merge/files.c	/^void test_merge_files__handles_binaries_when_favored(void)$/;"	f	typeref:typename:void
test_merge_files__initialize	extern/libgit2/tests/merge/files.c	/^void test_merge_files__initialize(void)$/;"	f	typeref:typename:void
test_merge_files__skips_binaries	extern/libgit2/tests/merge/files.c	/^void test_merge_files__skips_binaries(void)$/;"	f	typeref:typename:void
test_merge_files__skips_large_files	extern/libgit2/tests/merge/files.c	/^void test_merge_files__skips_large_files(void)$/;"	f	typeref:typename:void
test_merge_trees_automerge__automerge	extern/libgit2/tests/merge/trees/automerge.c	/^void test_merge_trees_automerge__automerge(void)$/;"	f	typeref:typename:void
test_merge_trees_automerge__cleanup	extern/libgit2/tests/merge/trees/automerge.c	/^void test_merge_trees_automerge__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_automerge__favor_ours	extern/libgit2/tests/merge/trees/automerge.c	/^void test_merge_trees_automerge__favor_ours(void)$/;"	f	typeref:typename:void
test_merge_trees_automerge__favor_theirs	extern/libgit2/tests/merge/trees/automerge.c	/^void test_merge_trees_automerge__favor_theirs(void)$/;"	f	typeref:typename:void
test_merge_trees_automerge__initialize	extern/libgit2/tests/merge/trees/automerge.c	/^void test_merge_trees_automerge__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_automerge__unrelated	extern/libgit2/tests/merge/trees/automerge.c	/^void test_merge_trees_automerge__unrelated(void)$/;"	f	typeref:typename:void
test_merge_trees_commits__automerge	extern/libgit2/tests/merge/trees/commits.c	/^void test_merge_trees_commits__automerge(void)$/;"	f	typeref:typename:void
test_merge_trees_commits__cleanup	extern/libgit2/tests/merge/trees/commits.c	/^void test_merge_trees_commits__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_commits__df_conflict	extern/libgit2/tests/merge/trees/commits.c	/^void test_merge_trees_commits__df_conflict(void)$/;"	f	typeref:typename:void
test_merge_trees_commits__fail_on_conflict	extern/libgit2/tests/merge/trees/commits.c	/^void test_merge_trees_commits__fail_on_conflict(void)$/;"	f	typeref:typename:void
test_merge_trees_commits__initialize	extern/libgit2/tests/merge/trees/commits.c	/^void test_merge_trees_commits__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_commits__no_ancestor	extern/libgit2/tests/merge/trees/commits.c	/^void test_merge_trees_commits__no_ancestor(void)$/;"	f	typeref:typename:void
test_merge_trees_modeconflict__cleanup	extern/libgit2/tests/merge/trees/modeconflict.c	/^void test_merge_trees_modeconflict__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_modeconflict__df_conflict	extern/libgit2/tests/merge/trees/modeconflict.c	/^void test_merge_trees_modeconflict__df_conflict(void)$/;"	f	typeref:typename:void
test_merge_trees_modeconflict__initialize	extern/libgit2/tests/merge/trees/modeconflict.c	/^void test_merge_trees_modeconflict__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__cleanup	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__conflict	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__conflict(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__conflicting_merge_base	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__conflicting_merge_base(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__conflicting_merge_base_since_resolved	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__conflicting_merge_base_since_resolved(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__conflicting_merge_base_with_diff3	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__conflicting_merge_base_with_diff3(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__initialize	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__merge_base_for_virtual_commit	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__merge_base_for_virtual_commit(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__merge_base_for_virtual_commit_2	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__merge_base_for_virtual_commit_2(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__oh_so_many_levels_of_recursion	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__oh_so_many_levels_of_recursion(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__one_base_commit	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__one_base_commit(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__one_base_commit_norecursive	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__one_base_commit_norecursive(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__recursionlimit	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__recursionlimit(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__three_base_commits	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__three_base_commits(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__three_base_commits_norecursive	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__three_base_commits_norecursive(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__three_levels_of_multiple_bases	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__three_levels_of_multiple_bases(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__three_levels_of_multiple_bases_norecursive	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__three_levels_of_multiple_bases_norecursive(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__two_base_commits	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__two_base_commits(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__two_base_commits_norecursive	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__two_base_commits_norecursive(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__two_levels_of_multiple_bases	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__two_levels_of_multiple_bases(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__two_levels_of_multiple_bases_norecursive	extern/libgit2/tests/merge/trees/recursive.c	/^void test_merge_trees_recursive__two_levels_of_multiple_bases_norecursive(void)$/;"	f	typeref:typename:void
test_merge_trees_renames__cleanup	extern/libgit2/tests/merge/trees/renames.c	/^void test_merge_trees_renames__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_renames__index	extern/libgit2/tests/merge/trees/renames.c	/^void test_merge_trees_renames__index(void)$/;"	f	typeref:typename:void
test_merge_trees_renames__initialize	extern/libgit2/tests/merge/trees/renames.c	/^void test_merge_trees_renames__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_renames__no_rename_index	extern/libgit2/tests/merge/trees/renames.c	/^void test_merge_trees_renames__no_rename_index(void)$/;"	f	typeref:typename:void
test_merge_trees_renames__submodules	extern/libgit2/tests/merge/trees/renames.c	/^void test_merge_trees_renames__submodules(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__best_renames	extern/libgit2/tests/merge/trees/treediff.c	/^void test_merge_trees_treediff__best_renames(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__cleanup	extern/libgit2/tests/merge/trees/treediff.c	/^void test_merge_trees_treediff__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__df_conflicts	extern/libgit2/tests/merge/trees/treediff.c	/^void test_merge_trees_treediff__df_conflicts(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__initialize	extern/libgit2/tests/merge/trees/treediff.c	/^void test_merge_trees_treediff__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__rename_conflicts	extern/libgit2/tests/merge/trees/treediff.c	/^void test_merge_trees_treediff__rename_conflicts(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__simple	extern/libgit2/tests/merge/trees/treediff.c	/^void test_merge_trees_treediff__simple(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__strict_renames	extern/libgit2/tests/merge/trees/treediff.c	/^void test_merge_trees_treediff__strict_renames(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__10	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__10(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__11	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__11(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__13	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__13(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__14	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__14(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__2alt	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__2alt(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__3alt	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__3alt(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__4	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__4(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__5alt_1	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__5alt_1(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__5alt_2	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__5alt_2(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__6	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__6(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__7	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__7(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__8	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__8(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__9	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__9(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__cleanup	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__initialize	extern/libgit2/tests/merge/trees/trivial.c	/^void test_merge_trees_trivial__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_whitespace__change	extern/libgit2/tests/merge/trees/whitespace.c	/^void test_merge_trees_whitespace__change(void)$/;"	f	typeref:typename:void
test_merge_trees_whitespace__cleanup	extern/libgit2/tests/merge/trees/whitespace.c	/^void test_merge_trees_whitespace__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_whitespace__conflict	extern/libgit2/tests/merge/trees/whitespace.c	/^void test_merge_trees_whitespace__conflict(void)$/;"	f	typeref:typename:void
test_merge_trees_whitespace__eol	extern/libgit2/tests/merge/trees/whitespace.c	/^void test_merge_trees_whitespace__eol(void)$/;"	f	typeref:typename:void
test_merge_trees_whitespace__initialize	extern/libgit2/tests/merge/trees/whitespace.c	/^void test_merge_trees_whitespace__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__affected_dirty_files_disallowed	extern/libgit2/tests/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__affected_dirty_files_disallowed(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__cleanup	extern/libgit2/tests/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__honors_cache	extern/libgit2/tests/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__honors_cache(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__identical_staged_files_allowed	extern/libgit2/tests/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__identical_staged_files_allowed(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__initialize	extern/libgit2/tests/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__staged_files_in_index_disallowed	extern/libgit2/tests/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__staged_files_in_index_disallowed(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__unaffected_dirty_files_allowed	extern/libgit2/tests/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__unaffected_dirty_files_allowed(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__unstaged_deletes_maintained	extern/libgit2/tests/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__unstaged_deletes_maintained(void)$/;"	f	typeref:typename:void
test_merge_workdir_recursive__cleanup	extern/libgit2/tests/merge/workdir/recursive.c	/^void test_merge_workdir_recursive__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_recursive__conflicting_merge_base_with_diff3	extern/libgit2/tests/merge/workdir/recursive.c	/^void test_merge_workdir_recursive__conflicting_merge_base_with_diff3(void)$/;"	f	typeref:typename:void
test_merge_workdir_recursive__initialize	extern/libgit2/tests/merge/workdir/recursive.c	/^void test_merge_workdir_recursive__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_recursive__writes_conflict_with_virtual_base	extern/libgit2/tests/merge/workdir/recursive.c	/^void test_merge_workdir_recursive__writes_conflict_with_virtual_base(void)$/;"	f	typeref:typename:void
test_merge_workdir_renames__cleanup	extern/libgit2/tests/merge/workdir/renames.c	/^void test_merge_workdir_renames__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_renames__initialize	extern/libgit2/tests/merge/workdir/renames.c	/^void test_merge_workdir_renames__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_renames__ours	extern/libgit2/tests/merge/workdir/renames.c	/^void test_merge_workdir_renames__ours(void)$/;"	f	typeref:typename:void
test_merge_workdir_renames__renames	extern/libgit2/tests/merge/workdir/renames.c	/^void test_merge_workdir_renames__renames(void)$/;"	f	typeref:typename:void
test_merge_workdir_renames__similar	extern/libgit2/tests/merge/workdir/renames.c	/^void test_merge_workdir_renames__similar(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__branches_and_oids_1	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__branches_and_oids_1(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__branches_and_oids_2	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__branches_and_oids_2(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__branches_and_oids_3	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__branches_and_oids_3(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__branches_and_oids_4	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__branches_and_oids_4(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__cleanup	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__head_foreach_nonewline	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__head_foreach_nonewline(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__head_foreach_octopus	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__head_foreach_octopus(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__head_foreach_one	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__head_foreach_one(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__head_invalid_oid	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__head_invalid_oid(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__head_notfound	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__head_notfound(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__id_from_head	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__id_from_head(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__initialize	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__normal_branch_and_remote_tracking_branch	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__normal_branch_and_remote_tracking_branch(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__one_branch	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__one_branch(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__one_oid	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__one_oid(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__pull_one	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__pull_one(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__pull_three	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__pull_three(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__pull_two	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__pull_two(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__remote_tracking_branch_and_normal_branch	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__remote_tracking_branch_and_normal_branch(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__remote_tracking_one_branch	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__remote_tracking_one_branch(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__remote_tracking_three_branches	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__remote_tracking_three_branches(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__remote_tracking_two_branches	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__remote_tracking_two_branches(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__removed_after_failure	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__removed_after_failure(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__retained_after_success	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__retained_after_success(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__three_branches	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__three_branches(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__three_oids	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__three_oids(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__three_remotes	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__three_remotes(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__three_same_branches	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__three_same_branches(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__three_same_oids	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__three_same_oids(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__two_branches	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__two_branches(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__two_remote_tracking_branch_and_two_normal_branches	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__two_remote_tracking_branch_and_two_normal_branches(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__two_remotes	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__two_remotes(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__unlocked_after_conflict	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__unlocked_after_conflict(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__unlocked_after_success	extern/libgit2/tests/merge/workdir/setup.c	/^void test_merge_workdir_setup__unlocked_after_success(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__automerge	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__automerge(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__automerge_crlf	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__automerge_crlf(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__binary	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__binary(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__checkout_ours	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__checkout_ours(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__cleanup	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__diff3	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__diff3(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__diff3_from_config	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__diff3_from_config(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__directory_file	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__directory_file(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__favor_ours	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__favor_ours(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__favor_theirs	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__favor_theirs(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__gitattributes_union	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__gitattributes_union(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__index_reload	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__index_reload(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__initialize	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__merge_overrides_config	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__merge_overrides_config(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__mergefile	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__mergefile(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__union	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__union(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__unrelated	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__unrelated(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__unrelated_with_conflicts	extern/libgit2/tests/merge/workdir/simple.c	/^void test_merge_workdir_simple__unrelated_with_conflicts(void)$/;"	f	typeref:typename:void
test_merge_workdir_submodules__automerge	extern/libgit2/tests/merge/workdir/submodules.c	/^void test_merge_workdir_submodules__automerge(void)$/;"	f	typeref:typename:void
test_merge_workdir_submodules__cleanup	extern/libgit2/tests/merge/workdir/submodules.c	/^void test_merge_workdir_submodules__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_submodules__initialize	extern/libgit2/tests/merge/workdir/submodules.c	/^void test_merge_workdir_submodules__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_submodules__take_changed	extern/libgit2/tests/merge/workdir/submodules.c	/^void test_merge_workdir_submodules__take_changed(void)$/;"	f	typeref:typename:void
test_merge_workdir_submodules__update_delete_conflict	extern/libgit2/tests/merge/workdir/submodules.c	/^void test_merge_workdir_submodules__update_delete_conflict(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__10	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__10(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__11	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__11(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__13	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__13(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__14	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__14(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__2alt	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__2alt(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__3alt	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__3alt(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__4	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__4(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__5alt_1	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__5alt_1(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__5alt_2	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__5alt_2(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__6	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__6(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__7	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__7(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__8	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__8(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__9	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__9(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__cleanup	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__initialize	extern/libgit2/tests/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__initialize(void)$/;"	f	typeref:typename:void
test_message_trailer__conflicts	extern/libgit2/tests/message/trailer.c	/^void test_message_trailer__conflicts(void)$/;"	f	typeref:typename:void
test_message_trailer__continuation	extern/libgit2/tests/message/trailer.c	/^void test_message_trailer__continuation(void)$/;"	f	typeref:typename:void
test_message_trailer__extra_whitespace	extern/libgit2/tests/message/trailer.c	/^void test_message_trailer__extra_whitespace(void)$/;"	f	typeref:typename:void
test_message_trailer__invalid	extern/libgit2/tests/message/trailer.c	/^void test_message_trailer__invalid(void)$/;"	f	typeref:typename:void
test_message_trailer__no_newline	extern/libgit2/tests/message/trailer.c	/^void test_message_trailer__no_newline(void)$/;"	f	typeref:typename:void
test_message_trailer__no_whitespace	extern/libgit2/tests/message/trailer.c	/^void test_message_trailer__no_whitespace(void)$/;"	f	typeref:typename:void
test_message_trailer__not_last_paragraph	extern/libgit2/tests/message/trailer.c	/^void test_message_trailer__not_last_paragraph(void)$/;"	f	typeref:typename:void
test_message_trailer__patch	extern/libgit2/tests/message/trailer.c	/^void test_message_trailer__patch(void)$/;"	f	typeref:typename:void
test_message_trailer__simple	extern/libgit2/tests/message/trailer.c	/^void test_message_trailer__simple(void)$/;"	f	typeref:typename:void
test_names_expected	extern/libgit2/tests/diff/rename.c	/^int test_names_expected(const git_diff_delta *delta, float progress, void *p)$/;"	f	typeref:typename:int
test_network_cred__stock_userpass_properly_handles_username_in_url	extern/libgit2/tests/network/cred.c	/^void test_network_cred__stock_userpass_properly_handles_username_in_url(void)$/;"	f	typeref:typename:void
test_network_cred__stock_userpass_validates_args	extern/libgit2/tests/network/cred.c	/^void test_network_cred__stock_userpass_validates_args(void)$/;"	f	typeref:typename:void
test_network_cred__stock_userpass_validates_that_method_is_allowed	extern/libgit2/tests/network/cred.c	/^void test_network_cred__stock_userpass_validates_that_method_is_allowed(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__all_refs	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__all_refs(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__call_progress	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__call_progress(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__cleanup	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__cleanup(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__clone_into_mirror	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__clone_into_mirror(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__complete	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__complete(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__fetchprune	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__fetchprune(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__multi_remotes	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__multi_remotes(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__partial	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__partial(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__prune	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__prune(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__prune_load_fetch_prune_config	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__prune_load_fetch_prune_config(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__prune_load_remote_prune_config	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__prune_load_remote_prune_config(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__prune_overlapping	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__prune_overlapping(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__prune_tag	extern/libgit2/tests/network/fetchlocal.c	/^void test_network_fetchlocal__prune_tag(void)$/;"	f	typeref:typename:void
test_network_matchhost__match	extern/libgit2/tests/network/matchhost.c	/^void test_network_matchhost__match(void)$/;"	f	typeref:typename:void
test_network_redirect__cleanup	extern/libgit2/tests/network/redirect.c	/^void test_network_redirect__cleanup(void)$/;"	f	typeref:typename:void
test_network_redirect__initialize	extern/libgit2/tests/network/redirect.c	/^void test_network_redirect__initialize(void)$/;"	f	typeref:typename:void
test_network_redirect__redirect_cross_host_denied	extern/libgit2/tests/network/redirect.c	/^void test_network_redirect__redirect_cross_host_denied(void)$/;"	f	typeref:typename:void
test_network_redirect__redirect_encoded_username_password	extern/libgit2/tests/network/redirect.c	/^void test_network_redirect__redirect_encoded_username_password(void)$/;"	f	typeref:typename:void
test_network_redirect__redirect_http	extern/libgit2/tests/network/redirect.c	/^void test_network_redirect__redirect_http(void)$/;"	f	typeref:typename:void
test_network_redirect__redirect_http_downgrade_denied	extern/libgit2/tests/network/redirect.c	/^void test_network_redirect__redirect_http_downgrade_denied(void)$/;"	f	typeref:typename:void
test_network_redirect__redirect_leaves_root_path	extern/libgit2/tests/network/redirect.c	/^void test_network_redirect__redirect_leaves_root_path(void)$/;"	f	typeref:typename:void
test_network_redirect__redirect_relative	extern/libgit2/tests/network/redirect.c	/^void test_network_redirect__redirect_relative(void)$/;"	f	typeref:typename:void
test_network_redirect__redirect_relative_ssl	extern/libgit2/tests/network/redirect.c	/^void test_network_redirect__redirect_relative_ssl(void)$/;"	f	typeref:typename:void
test_network_redirect__redirect_ssl	extern/libgit2/tests/network/redirect.c	/^void test_network_redirect__redirect_ssl(void)$/;"	f	typeref:typename:void
test_network_refspecs__invalid	extern/libgit2/tests/network/refspecs.c	/^void test_network_refspecs__invalid(void)$/;"	f	typeref:typename:void
test_network_refspecs__invalid_reverse	extern/libgit2/tests/network/refspecs.c	/^void test_network_refspecs__invalid_reverse(void)$/;"	f	typeref:typename:void
test_network_refspecs__matching	extern/libgit2/tests/network/refspecs.c	/^void test_network_refspecs__matching(void)$/;"	f	typeref:typename:void
test_network_refspecs__no_dst	extern/libgit2/tests/network/refspecs.c	/^void test_network_refspecs__no_dst(void)$/;"	f	typeref:typename:void
test_network_refspecs__parse_free	extern/libgit2/tests/network/refspecs.c	/^void test_network_refspecs__parse_free(void)$/;"	f	typeref:typename:void
test_network_refspecs__parsing	extern/libgit2/tests/network/refspecs.c	/^void test_network_refspecs__parsing(void)$/;"	f	typeref:typename:void
test_network_refspecs__transform_loosened_star	extern/libgit2/tests/network/refspecs.c	/^void test_network_refspecs__transform_loosened_star(void)$/;"	f	typeref:typename:void
test_network_refspecs__transform_mid_star	extern/libgit2/tests/network/refspecs.c	/^void test_network_refspecs__transform_mid_star(void)$/;"	f	typeref:typename:void
test_network_refspecs__transform_nested_star	extern/libgit2/tests/network/refspecs.c	/^void test_network_refspecs__transform_nested_star(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__cleanup	extern/libgit2/tests/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__cleanup(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__detached_sharing_nonbranch_id	extern/libgit2/tests/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__detached_sharing_nonbranch_id(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__initialize	extern/libgit2/tests/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__initialize(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__master	extern/libgit2/tests/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__master(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__master_does_not_win	extern/libgit2/tests/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__master_does_not_win(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__master_on_detached	extern/libgit2/tests/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__master_on_detached(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__no_default_branch	extern/libgit2/tests/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__no_default_branch(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__unborn_HEAD_with_branches	extern/libgit2/tests/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__unborn_HEAD_with_branches(void)$/;"	f	typeref:typename:void
test_network_remote_delete__cleanup	extern/libgit2/tests/network/remote/delete.c	/^void test_network_remote_delete__cleanup(void)$/;"	f	typeref:typename:void
test_network_remote_delete__initialize	extern/libgit2/tests/network/remote/delete.c	/^void test_network_remote_delete__initialize(void)$/;"	f	typeref:typename:void
test_network_remote_delete__remove_branch_upstream_configuration_settings	extern/libgit2/tests/network/remote/delete.c	/^void test_network_remote_delete__remove_branch_upstream_configuration_settings(void)$/;"	f	typeref:typename:void
test_network_remote_delete__remove_remote_configuration_settings	extern/libgit2/tests/network/remote/delete.c	/^void test_network_remote_delete__remove_remote_configuration_settings(void)$/;"	f	typeref:typename:void
test_network_remote_delete__remove_remote_tracking_branches	extern/libgit2/tests/network/remote/delete.c	/^void test_network_remote_delete__remove_remote_tracking_branches(void)$/;"	f	typeref:typename:void
test_network_remote_isvalidname__can_detect_invalid_formats	extern/libgit2/tests/network/remote/isvalidname.c	/^void test_network_remote_isvalidname__can_detect_invalid_formats(void)$/;"	f	typeref:typename:void
test_network_remote_isvalidname__wont_hopefully_choke_on_valid_formats	extern/libgit2/tests/network/remote/isvalidname.c	/^void test_network_remote_isvalidname__wont_hopefully_choke_on_valid_formats(void)$/;"	f	typeref:typename:void
test_network_remote_local__anonymous_remote_inmemory_repo	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__anonymous_remote_inmemory_repo(void)$/;"	f	typeref:typename:void
test_network_remote_local__cleanup	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__cleanup(void)$/;"	f	typeref:typename:void
test_network_remote_local__connected	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__connected(void)$/;"	f	typeref:typename:void
test_network_remote_local__fetch	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__fetch(void)$/;"	f	typeref:typename:void
test_network_remote_local__fetch_default_reflog_message	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__fetch_default_reflog_message(void)$/;"	f	typeref:typename:void
test_network_remote_local__initialize	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__initialize(void)$/;"	f	typeref:typename:void
test_network_remote_local__nested_tags_are_completely_peeled	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__nested_tags_are_completely_peeled(void)$/;"	f	typeref:typename:void
test_network_remote_local__opportunistic_update	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__opportunistic_update(void)$/;"	f	typeref:typename:void
test_network_remote_local__push_delete	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__push_delete(void)$/;"	f	typeref:typename:void
test_network_remote_local__push_to_bare_remote	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__push_to_bare_remote(void)$/;"	f	typeref:typename:void
test_network_remote_local__push_to_bare_remote_with_file_url	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__push_to_bare_remote_with_file_url(void)$/;"	f	typeref:typename:void
test_network_remote_local__push_to_non_bare_remote	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__push_to_non_bare_remote(void)$/;"	f	typeref:typename:void
test_network_remote_local__reflog	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__reflog(void)$/;"	f	typeref:typename:void
test_network_remote_local__retrieve_advertised_before_connect	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__retrieve_advertised_before_connect(void)$/;"	f	typeref:typename:void
test_network_remote_local__retrieve_advertised_references	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__retrieve_advertised_references(void)$/;"	f	typeref:typename:void
test_network_remote_local__retrieve_advertised_references_after_disconnect	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__retrieve_advertised_references_after_disconnect(void)$/;"	f	typeref:typename:void
test_network_remote_local__retrieve_advertised_references_from_spaced_repository	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__retrieve_advertised_references_from_spaced_repository(void)$/;"	f	typeref:typename:void
test_network_remote_local__shorthand_fetch_refspec0	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__shorthand_fetch_refspec0(void)$/;"	f	typeref:typename:void
test_network_remote_local__shorthand_fetch_refspec1	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__shorthand_fetch_refspec1(void)$/;"	f	typeref:typename:void
test_network_remote_local__tagopt	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__tagopt(void)$/;"	f	typeref:typename:void
test_network_remote_local__update_tips_for_new_remote	extern/libgit2/tests/network/remote/local.c	/^void test_network_remote_local__update_tips_for_new_remote(void) {$/;"	f	typeref:typename:void
test_network_remote_push__cleanup	extern/libgit2/tests/network/remote/push.c	/^void test_network_remote_push__cleanup(void)$/;"	f	typeref:typename:void
test_network_remote_push__create_notification	extern/libgit2/tests/network/remote/push.c	/^void test_network_remote_push__create_notification(void)$/;"	f	typeref:typename:void
test_network_remote_push__delete_notification	extern/libgit2/tests/network/remote/push.c	/^void test_network_remote_push__delete_notification(void)$/;"	f	typeref:typename:void
test_network_remote_push__initialize	extern/libgit2/tests/network/remote/push.c	/^void test_network_remote_push__initialize(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__add	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__add(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__add_fetchspec	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__add_fetchspec(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__add_pushspec	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__add_pushspec(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__can_load_with_an_empty_url	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__can_load_with_an_empty_url(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__can_load_with_only_an_empty_pushurl	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__can_load_with_only_an_empty_pushurl(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__cleanup	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__cleanup(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__dup	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__dup(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__error_when_no_push_available	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__error_when_no_push_available(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__error_when_not_found	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__error_when_not_found(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__fnmatch	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__fnmatch(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__initialize	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__initialize(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__list	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__list(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__loading_a_missing_remote_returns_ENOTFOUND	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__loading_a_missing_remote_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__loading_with_an_invalid_name_returns_EINVALIDSPEC	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__loading_with_an_invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__missing_refspecs	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__missing_refspecs(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__nonmatch_upstream_refspec	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__nonmatch_upstream_refspec(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__parsing	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__parsing(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__pushurl	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__pushurl(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__query_refspecs	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__query_refspecs(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__refspec_parsing	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__refspec_parsing(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__returns_ENOTFOUND_when_neither_url_nor_pushurl	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__returns_ENOTFOUND_when_neither_url_nor_pushurl(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__tagopt	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__tagopt(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__transform	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__transform(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__transform_destination_to_source	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__transform_destination_to_source(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__urlresolve	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__urlresolve(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__urlresolve_passthrough	extern/libgit2/tests/network/remote/remotes.c	/^void test_network_remote_remotes__urlresolve_passthrough(void)$/;"	f	typeref:typename:void
test_network_remote_rename__cannot_overwrite_an_existing_remote	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__cannot_overwrite_an_existing_remote(void)$/;"	f	typeref:typename:void
test_network_remote_rename__cleanup	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__cleanup(void)$/;"	f	typeref:typename:void
test_network_remote_rename__initialize	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__initialize(void)$/;"	f	typeref:typename:void
test_network_remote_rename__new_name_can_contain_dots	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__new_name_can_contain_dots(void)$/;"	f	typeref:typename:void
test_network_remote_rename__new_name_must_conform_to_reference_naming_conventions	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__new_name_must_conform_to_reference_naming_conventions(void)$/;"	f	typeref:typename:void
test_network_remote_rename__nonexistent_returns_enotfound	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__nonexistent_returns_enotfound(void)$/;"	f	typeref:typename:void
test_network_remote_rename__overwrite_ref_in_target	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__overwrite_ref_in_target(void)$/;"	f	typeref:typename:void
test_network_remote_rename__renamed_name_is_persisted	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__renamed_name_is_persisted(void)$/;"	f	typeref:typename:void
test_network_remote_rename__renaming_a_remote_moves_related_configuration_section	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__renaming_a_remote_moves_related_configuration_section(void)$/;"	f	typeref:typename:void
test_network_remote_rename__renaming_a_remote_moves_the_underlying_reference	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__renaming_a_remote_moves_the_underlying_reference(void)$/;"	f	typeref:typename:void
test_network_remote_rename__renaming_a_remote_notifies_of_non_default_fetchrefspec	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__renaming_a_remote_notifies_of_non_default_fetchrefspec(void)$/;"	f	typeref:typename:void
test_network_remote_rename__renaming_a_remote_updates_branch_related_configuration_entries	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__renaming_a_remote_updates_branch_related_configuration_entries(/;"	f	typeref:typename:void
test_network_remote_rename__renaming_a_remote_updates_default_fetchrefspec	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__renaming_a_remote_updates_default_fetchrefspec(void)$/;"	f	typeref:typename:void
test_network_remote_rename__renaming_a_remote_without_a_fetchrefspec_doesnt_create_one	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__renaming_a_remote_without_a_fetchrefspec_doesnt_create_one(void/;"	f	typeref:typename:void
test_network_remote_rename__symref_head	extern/libgit2/tests/network/remote/rename.c	/^void test_network_remote_rename__symref_head(void)$/;"	f	typeref:typename:void
test_network_urlparse__cleanup	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__cleanup(void)$/;"	f	typeref:typename:void
test_network_urlparse__empty_port	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__empty_port(void)$/;"	f	typeref:typename:void
test_network_urlparse__encoded_password	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__encoded_password(void)$/;"	f	typeref:typename:void
test_network_urlparse__implied_root	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__implied_root(void)$/;"	f	typeref:typename:void
test_network_urlparse__implied_root_custom_port	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__implied_root_custom_port(void)$/;"	f	typeref:typename:void
test_network_urlparse__implied_root_empty_port	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__implied_root_empty_port(void)$/;"	f	typeref:typename:void
test_network_urlparse__initialize	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__initialize(void)$/;"	f	typeref:typename:void
test_network_urlparse__port	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__port(void)$/;"	f	typeref:typename:void
test_network_urlparse__root	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__root(void)$/;"	f	typeref:typename:void
test_network_urlparse__trivial	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__trivial(void)$/;"	f	typeref:typename:void
test_network_urlparse__user	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__user(void)$/;"	f	typeref:typename:void
test_network_urlparse__user_pass	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__user_pass(void)$/;"	f	typeref:typename:void
test_network_urlparse__user_pass_port	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__user_pass_port(void)$/;"	f	typeref:typename:void
test_network_urlparse__user_port	extern/libgit2/tests/network/urlparse.c	/^void test_network_urlparse__user_port(void)$/;"	f	typeref:typename:void
test_notes_notes__attempt_to_read_a_note_from_a_commit_with_no_note_fails	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__attempt_to_read_a_note_from_a_commit_with_no_note_fails(void)$/;"	f	typeref:typename:void
test_notes_notes__can_cancel_foreach	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_cancel_foreach(void)$/;"	f	typeref:typename:void
test_notes_notes__can_create_a_note	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_create_a_note(void)$/;"	f	typeref:typename:void
test_notes_notes__can_create_a_note_from_commit	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_create_a_note_from_commit(void)$/;"	f	typeref:typename:void
test_notes_notes__can_create_a_note_from_commit_given_an_existing_commit	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_create_a_note_from_commit_given_an_existing_commit(void)$/;"	f	typeref:typename:void
test_notes_notes__can_insert_a_note_in_an_existing_fanout	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_insert_a_note_in_an_existing_fanout(void)$/;"	f	typeref:typename:void
test_notes_notes__can_insert_a_note_with_a_custom_namespace	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_insert_a_note_with_a_custom_namespace(void)$/;"	f	typeref:typename:void
test_notes_notes__can_iterate_custom_namespace	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_iterate_custom_namespace(void)$/;"	f	typeref:typename:void
test_notes_notes__can_iterate_default_namespace	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_iterate_default_namespace(void)$/;"	f	typeref:typename:void
test_notes_notes__can_read_a_note	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_read_a_note(void)$/;"	f	typeref:typename:void
test_notes_notes__can_read_a_note_from_a_commit	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_read_a_note_from_a_commit(void)$/;"	f	typeref:typename:void
test_notes_notes__can_read_a_note_in_an_existing_fanout	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_read_a_note_in_an_existing_fanout(void)$/;"	f	typeref:typename:void
test_notes_notes__can_remove_a_note	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_remove_a_note(void)$/;"	f	typeref:typename:void
test_notes_notes__can_remove_a_note_from_commit	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_remove_a_note_from_commit(void)$/;"	f	typeref:typename:void
test_notes_notes__can_remove_a_note_in_an_existing_fanout	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_remove_a_note_in_an_existing_fanout(void)$/;"	f	typeref:typename:void
test_notes_notes__can_retrieve_a_list_of_notes_for_a_given_namespace	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__can_retrieve_a_list_of_notes_for_a_given_namespace(void)$/;"	f	typeref:typename:void
test_notes_notes__cleanup	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__cleanup(void)$/;"	f	typeref:typename:void
test_notes_notes__creating_a_note_on_a_target_can_overwrite_existing_note	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__creating_a_note_on_a_target_can_overwrite_existing_note(void)$/;"	f	typeref:typename:void
test_notes_notes__creating_a_note_on_a_target_which_already_has_one_returns_EEXISTS	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__creating_a_note_on_a_target_which_already_has_one_returns_EEXISTS(void)$/;"	f	typeref:typename:void
test_notes_notes__empty_iterate	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__empty_iterate(void)$/;"	f	typeref:typename:void
test_notes_notes__initialize	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__initialize(void)$/;"	f	typeref:typename:void
test_notes_notes__inserting_a_note_without_passing_a_namespace_uses_the_default_namespace	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__inserting_a_note_without_passing_a_namespace_uses_the_default_namespace(v/;"	f	typeref:typename:void
test_notes_notes__iterate_from_commit	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__iterate_from_commit(void)$/;"	f	typeref:typename:void
test_notes_notes__removing_a_note_which_doesnt_exists_returns_ENOTFOUND	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__removing_a_note_which_doesnt_exists_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_notes_notes__retrieving_a_list_of_notes_for_an_unknown_namespace_returns_ENOTFOUND	extern/libgit2/tests/notes/notes.c	/^void test_notes_notes__retrieving_a_list_of_notes_for_an_unknown_namespace_returns_ENOTFOUND(voi/;"	f	typeref:typename:void
test_notes_notesref__cleanup	extern/libgit2/tests/notes/notesref.c	/^void test_notes_notesref__cleanup(void)$/;"	f	typeref:typename:void
test_notes_notesref__config_corenotesref	extern/libgit2/tests/notes/notesref.c	/^void test_notes_notesref__config_corenotesref(void)$/;"	f	typeref:typename:void
test_notes_notesref__initialize	extern/libgit2/tests/notes/notesref.c	/^void test_notes_notesref__initialize(void)$/;"	f	typeref:typename:void
test_notify	extern/libgit2/tests/diff/notify.c	/^static void test_notify($/;"	f	typeref:typename:void	file:
test_number	extern/libgit2/tests/clar.c	/^	int test_number;$/;"	m	struct:clar_report	typeref:typename:int	file:
test_object	extern/libgit2/tests/refs/revparse.c	/^static void test_object(const char *spec, const char *expected_oid)$/;"	f	typeref:typename:void	file:
test_object_and_ref	extern/libgit2/tests/refs/revparse.c	/^static void test_object_and_ref(const char *spec, const char *expected_oid, const char *expected/;"	f	typeref:typename:void	file:
test_object_and_ref_inrepo	extern/libgit2/tests/refs/revparse.c	/^static void test_object_and_ref_inrepo($/;"	f	typeref:typename:void	file:
test_object_blob_filter__cleanup	extern/libgit2/tests/object/blob/filter.c	/^void test_object_blob_filter__cleanup(void)$/;"	f	typeref:typename:void
test_object_blob_filter__initialize	extern/libgit2/tests/object/blob/filter.c	/^void test_object_blob_filter__initialize(void)$/;"	f	typeref:typename:void
test_object_blob_filter__stats	extern/libgit2/tests/object/blob/filter.c	/^void test_object_blob_filter__stats(void)$/;"	f	typeref:typename:void
test_object_blob_filter__to_odb	extern/libgit2/tests/object/blob/filter.c	/^void test_object_blob_filter__to_odb(void)$/;"	f	typeref:typename:void
test_object_blob_filter__unfiltered	extern/libgit2/tests/object/blob/filter.c	/^void test_object_blob_filter__unfiltered(void)$/;"	f	typeref:typename:void
test_object_blob_fromstream__cleanup	extern/libgit2/tests/object/blob/fromstream.c	/^void test_object_blob_fromstream__cleanup(void)$/;"	f	typeref:typename:void
test_object_blob_fromstream__creating_a_blob_from_chunks_honors_the_attributes_directives	extern/libgit2/tests/object/blob/fromstream.c	/^void test_object_blob_fromstream__creating_a_blob_from_chunks_honors_the_attributes_directives(v/;"	f	typeref:typename:void
test_object_blob_fromstream__initialize	extern/libgit2/tests/object/blob/fromstream.c	/^void test_object_blob_fromstream__initialize(void)$/;"	f	typeref:typename:void
test_object_blob_fromstream__multiple_write	extern/libgit2/tests/object/blob/fromstream.c	/^void test_object_blob_fromstream__multiple_write(void)$/;"	f	typeref:typename:void
test_object_blob_write__can_create_a_blob_in_a_bare_repo_from_a_absolute_filepath	extern/libgit2/tests/object/blob/write.c	/^void test_object_blob_write__can_create_a_blob_in_a_bare_repo_from_a_absolute_filepath(void)$/;"	f	typeref:typename:void
test_object_blob_write__can_create_a_blob_in_a_standard_repo_from_a_absolute_filepath_pointing_outside_of_the_working_directory	extern/libgit2/tests/object/blob/write.c	/^void test_object_blob_write__can_create_a_blob_in_a_standard_repo_from_a_absolute_filepath_point/;"	f	typeref:typename:void
test_object_blob_write__can_create_a_blob_in_a_standard_repo_from_a_file_located_in_the_working_directory	extern/libgit2/tests/object/blob/write.c	/^void test_object_blob_write__can_create_a_blob_in_a_standard_repo_from_a_file_located_in_the_wor/;"	f	typeref:typename:void
test_object_blob_write__cleanup	extern/libgit2/tests/object/blob/write.c	/^void test_object_blob_write__cleanup(void)$/;"	f	typeref:typename:void
test_object_cache__cache_counts	extern/libgit2/tests/object/cache.c	/^void test_object_cache__cache_counts(void)$/;"	f	typeref:typename:void
test_object_cache__cleanup	extern/libgit2/tests/object/cache.c	/^void test_object_cache__cleanup(void)$/;"	f	typeref:typename:void
test_object_cache__fast_thread_rush	extern/libgit2/tests/object/cache.c	/^void test_object_cache__fast_thread_rush(void)$/;"	f	typeref:typename:void
test_object_cache__initialize_cache_all_blobs	extern/libgit2/tests/object/cache.c	/^void test_object_cache__initialize_cache_all_blobs(void)$/;"	f	typeref:typename:void
test_object_cache__initialize_cache_no_blobs	extern/libgit2/tests/object/cache.c	/^void test_object_cache__initialize_cache_no_blobs(void)$/;"	f	typeref:typename:void
test_object_cache__initialize_cache_no_trees	extern/libgit2/tests/object/cache.c	/^void test_object_cache__initialize_cache_no_trees(void)$/;"	f	typeref:typename:void
test_object_cache__initialize_cache_tiny_blobs	extern/libgit2/tests/object/cache.c	/^void test_object_cache__initialize_cache_tiny_blobs(void)$/;"	f	typeref:typename:void
test_object_cache__threadmania	extern/libgit2/tests/object/cache.c	/^void test_object_cache__threadmania(void)$/;"	f	typeref:typename:void
test_object_commit_commitstagedfile__amend_commit	extern/libgit2/tests/object/commit/commitstagedfile.c	/^void test_object_commit_commitstagedfile__amend_commit(void)$/;"	f	typeref:typename:void
test_object_commit_commitstagedfile__cleanup	extern/libgit2/tests/object/commit/commitstagedfile.c	/^void test_object_commit_commitstagedfile__cleanup(void)$/;"	f	typeref:typename:void
test_object_commit_commitstagedfile__generate_predictable_object_ids	extern/libgit2/tests/object/commit/commitstagedfile.c	/^void test_object_commit_commitstagedfile__generate_predictable_object_ids(void)$/;"	f	typeref:typename:void
test_object_commit_commitstagedfile__initialize	extern/libgit2/tests/object/commit/commitstagedfile.c	/^void test_object_commit_commitstagedfile__initialize(void)$/;"	f	typeref:typename:void
test_object_commit_parse__parsing_commit_succeeds	extern/libgit2/tests/object/commit/parse.c	/^void test_object_commit_parse__parsing_commit_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__parsing_commit_with_invalid_tree_fails	extern/libgit2/tests/object/commit/parse.c	/^void test_object_commit_parse__parsing_commit_with_invalid_tree_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__parsing_commit_with_multiple_authors_succeeds	extern/libgit2/tests/object/commit/parse.c	/^void test_object_commit_parse__parsing_commit_with_multiple_authors_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__parsing_commit_with_multiple_committers_succeeds	extern/libgit2/tests/object/commit/parse.c	/^void test_object_commit_parse__parsing_commit_with_multiple_committers_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__parsing_commit_with_unknown_fields_succeeds	extern/libgit2/tests/object/commit/parse.c	/^void test_object_commit_parse__parsing_commit_with_unknown_fields_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__parsing_commit_without_author_fails	extern/libgit2/tests/object/commit/parse.c	/^void test_object_commit_parse__parsing_commit_without_author_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__parsing_commit_without_committer_fails	extern/libgit2/tests/object/commit/parse.c	/^void test_object_commit_parse__parsing_commit_without_committer_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__parsing_commit_without_encoding_succeeds	extern/libgit2/tests/object/commit/parse.c	/^void test_object_commit_parse__parsing_commit_without_encoding_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__parsing_commit_without_message_succeeds	extern/libgit2/tests/object/commit/parse.c	/^void test_object_commit_parse__parsing_commit_without_message_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__parsing_commit_without_tree_fails	extern/libgit2/tests/object/commit/parse.c	/^void test_object_commit_parse__parsing_commit_without_tree_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__parsing_encoding_will_not_cause_oob_read	extern/libgit2/tests/object/commit/parse.c	/^void test_object_commit_parse__parsing_encoding_will_not_cause_oob_read(void)$/;"	f	typeref:typename:void
test_object_inrepo	extern/libgit2/tests/refs/revparse.c	/^static void test_object_inrepo(const char *spec, const char *expected_oid, git_repository *repo)$/;"	f	typeref:typename:void	file:
test_object_lookup__cleanup	extern/libgit2/tests/object/lookup.c	/^void test_object_lookup__cleanup(void)$/;"	f	typeref:typename:void
test_object_lookup__initialize	extern/libgit2/tests/object/lookup.c	/^void test_object_lookup__initialize(void)$/;"	f	typeref:typename:void
test_object_lookup__lookup_corrupt_object_returns_error	extern/libgit2/tests/object/lookup.c	/^void test_object_lookup__lookup_corrupt_object_returns_error(void)$/;"	f	typeref:typename:void
test_object_lookup__lookup_nonexisting_returns_enotfound	extern/libgit2/tests/object/lookup.c	/^void test_object_lookup__lookup_nonexisting_returns_enotfound(void)$/;"	f	typeref:typename:void
test_object_lookup__lookup_object_with_wrong_hash_returns_error	extern/libgit2/tests/object/lookup.c	/^void test_object_lookup__lookup_object_with_wrong_hash_returns_error(void)$/;"	f	typeref:typename:void
test_object_lookup__lookup_wrong_type_by_abbreviated_id_returns_enotfound	extern/libgit2/tests/object/lookup.c	/^void test_object_lookup__lookup_wrong_type_by_abbreviated_id_returns_enotfound(void)$/;"	f	typeref:typename:void
test_object_lookup__lookup_wrong_type_eventually_returns_enotfound	extern/libgit2/tests/object/lookup.c	/^void test_object_lookup__lookup_wrong_type_eventually_returns_enotfound(void)$/;"	f	typeref:typename:void
test_object_lookup__lookup_wrong_type_returns_enotfound	extern/libgit2/tests/object/lookup.c	/^void test_object_lookup__lookup_wrong_type_returns_enotfound(void)$/;"	f	typeref:typename:void
test_object_lookupbypath__cleanup	extern/libgit2/tests/object/lookupbypath.c	/^void test_object_lookupbypath__cleanup(void)$/;"	f	typeref:typename:void
test_object_lookupbypath__errors	extern/libgit2/tests/object/lookupbypath.c	/^void test_object_lookupbypath__errors(void)$/;"	f	typeref:typename:void
test_object_lookupbypath__from_head_commit	extern/libgit2/tests/object/lookupbypath.c	/^void test_object_lookupbypath__from_head_commit(void)$/;"	f	typeref:typename:void
test_object_lookupbypath__from_root_tree	extern/libgit2/tests/object/lookupbypath.c	/^void test_object_lookupbypath__from_root_tree(void)$/;"	f	typeref:typename:void
test_object_lookupbypath__from_subdir_tree	extern/libgit2/tests/object/lookupbypath.c	/^void test_object_lookupbypath__from_subdir_tree(void)$/;"	f	typeref:typename:void
test_object_lookupbypath__initialize	extern/libgit2/tests/object/lookupbypath.c	/^void test_object_lookupbypath__initialize(void)$/;"	f	typeref:typename:void
test_object_message__consecutive_blank_lines_at_the_beginning_should_be_removed	extern/libgit2/tests/object/message.c	/^void test_object_message__consecutive_blank_lines_at_the_beginning_should_be_removed(void)$/;"	f	typeref:typename:void
test_object_message__consecutive_blank_lines_at_the_end_should_be_removed	extern/libgit2/tests/object/message.c	/^void test_object_message__consecutive_blank_lines_at_the_end_should_be_removed(void)$/;"	f	typeref:typename:void
test_object_message__consecutive_blank_lines_should_be_unified	extern/libgit2/tests/object/message.c	/^void test_object_message__consecutive_blank_lines_should_be_unified(void)$/;"	f	typeref:typename:void
test_object_message__consecutive_text_lines_should_be_unchanged	extern/libgit2/tests/object/message.c	/^void test_object_message__consecutive_text_lines_should_be_unchanged(void)$/;"	f	typeref:typename:void
test_object_message__keep_comments	extern/libgit2/tests/object/message.c	/^void test_object_message__keep_comments(void)$/;"	f	typeref:typename:void
test_object_message__lines_with_intermediate_spaces_should_be_unchanged	extern/libgit2/tests/object/message.c	/^void test_object_message__lines_with_intermediate_spaces_should_be_unchanged(void)$/;"	f	typeref:typename:void
test_object_message__lines_with_spaces_at_the_beginning_should_be_unchanged	extern/libgit2/tests/object/message.c	/^void test_object_message__lines_with_spaces_at_the_beginning_should_be_unchanged(void)$/;"	f	typeref:typename:void
test_object_message__long_lines_without_spaces_should_be_unchanged	extern/libgit2/tests/object/message.c	/^void test_object_message__long_lines_without_spaces_should_be_unchanged(void)$/;"	f	typeref:typename:void
test_object_message__message_prettify	extern/libgit2/tests/object/message.c	/^void test_object_message__message_prettify(void)$/;"	f	typeref:typename:void
test_object_message__only_consecutive_blank_lines_should_be_completely_removed	extern/libgit2/tests/object/message.c	/^void test_object_message__only_consecutive_blank_lines_should_be_completely_removed(void)$/;"	f	typeref:typename:void
test_object_message__spaces_with_newline_at_end_should_be_replaced_with_empty_string	extern/libgit2/tests/object/message.c	/^void test_object_message__spaces_with_newline_at_end_should_be_replaced_with_empty_string(void)$/;"	f	typeref:typename:void
test_object_message__spaces_without_newline_at_end_should_be_replaced_with_empty_string	extern/libgit2/tests/object/message.c	/^void test_object_message__spaces_without_newline_at_end_should_be_replaced_with_empty_string(voi/;"	f	typeref:typename:void
test_object_message__strip_comments	extern/libgit2/tests/object/message.c	/^void test_object_message__strip_comments(void)$/;"	f	typeref:typename:void
test_object_message__text_plus_spaces_ending_with_newline_should_be_cleaned_and_newline_must_remain	extern/libgit2/tests/object/message.c	/^void test_object_message__text_plus_spaces_ending_with_newline_should_be_cleaned_and_newline_mus/;"	f	typeref:typename:void
test_object_message__text_plus_spaces_without_newline_should_not_show_spaces_and_end_with_newline	extern/libgit2/tests/object/message.c	/^void test_object_message__text_plus_spaces_without_newline_should_not_show_spaces_and_end_with_n/;"	f	typeref:typename:void
test_object_message__text_without_newline_at_end_should_end_with_newline	extern/libgit2/tests/object/message.c	/^void test_object_message__text_without_newline_at_end_should_end_with_newline(void)$/;"	f	typeref:typename:void
test_object_peel__blob	extern/libgit2/tests/object/peel.c	/^void test_object_peel__blob(void)$/;"	f	typeref:typename:void
test_object_peel__cleanup	extern/libgit2/tests/object/peel.c	/^void test_object_peel__cleanup(void)$/;"	f	typeref:typename:void
test_object_peel__commit	extern/libgit2/tests/object/peel.c	/^void test_object_peel__commit(void)$/;"	f	typeref:typename:void
test_object_peel__initialize	extern/libgit2/tests/object/peel.c	/^void test_object_peel__initialize(void)$/;"	f	typeref:typename:void
test_object_peel__peeling_an_object_into_its_own_type_returns_another_instance_of_it	extern/libgit2/tests/object/peel.c	/^void test_object_peel__peeling_an_object_into_its_own_type_returns_another_instance_of_it(void)$/;"	f	typeref:typename:void
test_object_peel__tag	extern/libgit2/tests/object/peel.c	/^void test_object_peel__tag(void)$/;"	f	typeref:typename:void
test_object_peel__target_any_object_for_type_change	extern/libgit2/tests/object/peel.c	/^void test_object_peel__target_any_object_for_type_change(void)$/;"	f	typeref:typename:void
test_object_peel__tree	extern/libgit2/tests/object/peel.c	/^void test_object_peel__tree(void)$/;"	f	typeref:typename:void
test_object_raw_chars__build_valid_oid_from_raw_bytes	extern/libgit2/tests/object/raw/chars.c	/^void test_object_raw_chars__build_valid_oid_from_raw_bytes(void)$/;"	f	typeref:typename:void
test_object_raw_chars__find_invalid_chars_in_oid	extern/libgit2/tests/object/raw/chars.c	/^void test_object_raw_chars__find_invalid_chars_in_oid(void)$/;"	f	typeref:typename:void
test_object_raw_compare__compare_fmt_oids	extern/libgit2/tests/object/raw/compare.c	/^void test_object_raw_compare__compare_fmt_oids(void)$/;"	f	typeref:typename:void
test_object_raw_compare__compare_pathfmt_oids	extern/libgit2/tests/object/raw/compare.c	/^void test_object_raw_compare__compare_pathfmt_oids(void)$/;"	f	typeref:typename:void
test_object_raw_compare__compare_static_oids	extern/libgit2/tests/object/raw/compare.c	/^void test_object_raw_compare__compare_static_oids(void)$/;"	f	typeref:typename:void
test_object_raw_compare__succeed_on_copy_oid	extern/libgit2/tests/object/raw/compare.c	/^void test_object_raw_compare__succeed_on_copy_oid(void)$/;"	f	typeref:typename:void
test_object_raw_compare__succeed_on_oid_comparison_equal	extern/libgit2/tests/object/raw/compare.c	/^void test_object_raw_compare__succeed_on_oid_comparison_equal(void)$/;"	f	typeref:typename:void
test_object_raw_compare__succeed_on_oid_comparison_greater	extern/libgit2/tests/object/raw/compare.c	/^void test_object_raw_compare__succeed_on_oid_comparison_greater(void)$/;"	f	typeref:typename:void
test_object_raw_compare__succeed_on_oid_comparison_lesser	extern/libgit2/tests/object/raw/compare.c	/^void test_object_raw_compare__succeed_on_oid_comparison_lesser(void)$/;"	f	typeref:typename:void
test_object_raw_convert__convert_oid_partially	extern/libgit2/tests/object/raw/convert.c	/^void test_object_raw_convert__convert_oid_partially(void)$/;"	f	typeref:typename:void
test_object_raw_convert__succeed_on_oid_to_string_conversion	extern/libgit2/tests/object/raw/convert.c	/^void test_object_raw_convert__succeed_on_oid_to_string_conversion(void)$/;"	f	typeref:typename:void
test_object_raw_convert__succeed_on_oid_to_string_conversion_big	extern/libgit2/tests/object/raw/convert.c	/^void test_object_raw_convert__succeed_on_oid_to_string_conversion_big(void)$/;"	f	typeref:typename:void
test_object_raw_fromstr__fail_on_invalid_oid_string	extern/libgit2/tests/object/raw/fromstr.c	/^void test_object_raw_fromstr__fail_on_invalid_oid_string(void)$/;"	f	typeref:typename:void
test_object_raw_fromstr__succeed_on_valid_oid_string	extern/libgit2/tests/object/raw/fromstr.c	/^void test_object_raw_fromstr__succeed_on_valid_oid_string(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_buffer_in_single_call	extern/libgit2/tests/object/raw/hash.c	/^void test_object_raw_hash__hash_buffer_in_single_call(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_by_blocks	extern/libgit2/tests/object/raw/hash.c	/^void test_object_raw_hash__hash_by_blocks(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_commit_object	extern/libgit2/tests/object/raw/hash.c	/^void test_object_raw_hash__hash_commit_object(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_junk_data	extern/libgit2/tests/object/raw/hash.c	/^void test_object_raw_hash__hash_junk_data(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_multi_byte_object	extern/libgit2/tests/object/raw/hash.c	/^void test_object_raw_hash__hash_multi_byte_object(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_one_byte_object	extern/libgit2/tests/object/raw/hash.c	/^void test_object_raw_hash__hash_one_byte_object(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_tag_object	extern/libgit2/tests/object/raw/hash.c	/^void test_object_raw_hash__hash_tag_object(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_tree_object	extern/libgit2/tests/object/raw/hash.c	/^void test_object_raw_hash__hash_tree_object(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_two_byte_object	extern/libgit2/tests/object/raw/hash.c	/^void test_object_raw_hash__hash_two_byte_object(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_vector	extern/libgit2/tests/object/raw/hash.c	/^void test_object_raw_hash__hash_vector(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_zero_length_object	extern/libgit2/tests/object/raw/hash.c	/^void test_object_raw_hash__hash_zero_length_object(void)$/;"	f	typeref:typename:void
test_object_raw_short__oid_shortener_no_duplicates	extern/libgit2/tests/object/raw/short.c	/^void test_object_raw_short__oid_shortener_no_duplicates(void)$/;"	f	typeref:typename:void
test_object_raw_short__oid_shortener_stresstest_git_oid_shorten	extern/libgit2/tests/object/raw/short.c	/^void test_object_raw_short__oid_shortener_stresstest_git_oid_shorten(void)$/;"	f	typeref:typename:void
test_object_raw_short__oid_shortener_too_much_oids	extern/libgit2/tests/object/raw/short.c	/^void test_object_raw_short__oid_shortener_too_much_oids(void)$/;"	f	typeref:typename:void
test_object_raw_size__validate_oid_size	extern/libgit2/tests/object/raw/size.c	/^void test_object_raw_size__validate_oid_size(void)$/;"	f	typeref:typename:void
test_object_raw_type2string__check_type_is_loose	extern/libgit2/tests/object/raw/type2string.c	/^void test_object_raw_type2string__check_type_is_loose(void)$/;"	f	typeref:typename:void
test_object_raw_type2string__convert_string_to_type	extern/libgit2/tests/object/raw/type2string.c	/^void test_object_raw_type2string__convert_string_to_type(void)$/;"	f	typeref:typename:void
test_object_raw_type2string__convert_type_to_string	extern/libgit2/tests/object/raw/type2string.c	/^void test_object_raw_type2string__convert_type_to_string(void)$/;"	f	typeref:typename:void
test_object_raw_write__loose_object	extern/libgit2/tests/object/raw/write.c	/^void test_object_raw_write__loose_object(void)$/;"	f	typeref:typename:void
test_object_raw_write__loose_tag	extern/libgit2/tests/object/raw/write.c	/^void test_object_raw_write__loose_tag(void)$/;"	f	typeref:typename:void
test_object_raw_write__loose_tree	extern/libgit2/tests/object/raw/write.c	/^void test_object_raw_write__loose_tree(void)$/;"	f	typeref:typename:void
test_object_raw_write__one_byte	extern/libgit2/tests/object/raw/write.c	/^void test_object_raw_write__one_byte(void)$/;"	f	typeref:typename:void
test_object_raw_write__several_bytes	extern/libgit2/tests/object/raw/write.c	/^void test_object_raw_write__several_bytes(void)$/;"	f	typeref:typename:void
test_object_raw_write__two_byte	extern/libgit2/tests/object/raw/write.c	/^void test_object_raw_write__two_byte(void)$/;"	f	typeref:typename:void
test_object_raw_write__zero_length	extern/libgit2/tests/object/raw/write.c	/^void test_object_raw_write__zero_length(void)$/;"	f	typeref:typename:void
test_object_shortid__cleanup	extern/libgit2/tests/object/shortid.c	/^void test_object_shortid__cleanup(void)$/;"	f	typeref:typename:void
test_object_shortid__initialize	extern/libgit2/tests/object/shortid.c	/^void test_object_shortid__initialize(void)$/;"	f	typeref:typename:void
test_object_shortid__select	extern/libgit2/tests/object/shortid.c	/^void test_object_shortid__select(void)$/;"	f	typeref:typename:void
test_object_tag_list__cleanup	extern/libgit2/tests/object/tag/list.c	/^void test_object_tag_list__cleanup(void)$/;"	f	typeref:typename:void
test_object_tag_list__initialize	extern/libgit2/tests/object/tag/list.c	/^void test_object_tag_list__initialize(void)$/;"	f	typeref:typename:void
test_object_tag_list__list_all	extern/libgit2/tests/object/tag/list.c	/^void test_object_tag_list__list_all(void)$/;"	f	typeref:typename:void
test_object_tag_list__list_by_pattern	extern/libgit2/tests/object/tag/list.c	/^void test_object_tag_list__list_by_pattern(void)$/;"	f	typeref:typename:void
test_object_tag_parse__invalid_type_fails	extern/libgit2/tests/object/tag/parse.c	/^void test_object_tag_parse__invalid_type_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__malformatted_object_fails	extern/libgit2/tests/object/tag/parse.c	/^void test_object_tag_parse__malformatted_object_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__misformatted_tagger_fails	extern/libgit2/tests/object/tag/parse.c	/^void test_object_tag_parse__misformatted_tagger_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__missing_message_fails	extern/libgit2/tests/object/tag/parse.c	/^void test_object_tag_parse__missing_message_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__missing_message_parses	extern/libgit2/tests/object/tag/parse.c	/^void test_object_tag_parse__missing_message_parses(void)$/;"	f	typeref:typename:void
test_object_tag_parse__missing_object_fails	extern/libgit2/tests/object/tag/parse.c	/^void test_object_tag_parse__missing_object_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__missing_tagger_parses	extern/libgit2/tests/object/tag/parse.c	/^void test_object_tag_parse__missing_tagger_parses(void)$/;"	f	typeref:typename:void
test_object_tag_parse__missing_tagname_fails	extern/libgit2/tests/object/tag/parse.c	/^void test_object_tag_parse__missing_tagname_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__missing_type_fails	extern/libgit2/tests/object/tag/parse.c	/^void test_object_tag_parse__missing_type_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__no_oob_read_when_searching_message	extern/libgit2/tests/object/tag/parse.c	/^void test_object_tag_parse__no_oob_read_when_searching_message(void)$/;"	f	typeref:typename:void
test_object_tag_parse__unknown_field_parses	extern/libgit2/tests/object/tag/parse.c	/^void test_object_tag_parse__unknown_field_parses(void)$/;"	f	typeref:typename:void
test_object_tag_parse__valid_tag_parses	extern/libgit2/tests/object/tag/parse.c	/^void test_object_tag_parse__valid_tag_parses(void)$/;"	f	typeref:typename:void
test_object_tag_peel__can_peel_several_nested_tags_to_a_commit	extern/libgit2/tests/object/tag/peel.c	/^void test_object_tag_peel__can_peel_several_nested_tags_to_a_commit(void)$/;"	f	typeref:typename:void
test_object_tag_peel__can_peel_to_a_commit	extern/libgit2/tests/object/tag/peel.c	/^void test_object_tag_peel__can_peel_to_a_commit(void)$/;"	f	typeref:typename:void
test_object_tag_peel__can_peel_to_a_non_commit	extern/libgit2/tests/object/tag/peel.c	/^void test_object_tag_peel__can_peel_to_a_non_commit(void)$/;"	f	typeref:typename:void
test_object_tag_peel__cleanup	extern/libgit2/tests/object/tag/peel.c	/^void test_object_tag_peel__cleanup(void)$/;"	f	typeref:typename:void
test_object_tag_peel__initialize	extern/libgit2/tests/object/tag/peel.c	/^void test_object_tag_peel__initialize(void)$/;"	f	typeref:typename:void
test_object_tag_read__cleanup	extern/libgit2/tests/object/tag/read.c	/^void test_object_tag_read__cleanup(void)$/;"	f	typeref:typename:void
test_object_tag_read__extra_header_fields	extern/libgit2/tests/object/tag/read.c	/^void test_object_tag_read__extra_header_fields(void)$/;"	f	typeref:typename:void
test_object_tag_read__initialize	extern/libgit2/tests/object/tag/read.c	/^void test_object_tag_read__initialize(void)$/;"	f	typeref:typename:void
test_object_tag_read__parse	extern/libgit2/tests/object/tag/read.c	/^void test_object_tag_read__parse(void)$/;"	f	typeref:typename:void
test_object_tag_read__parse_without_message	extern/libgit2/tests/object/tag/read.c	/^void test_object_tag_read__parse_without_message(void)$/;"	f	typeref:typename:void
test_object_tag_read__parse_without_tagger	extern/libgit2/tests/object/tag/read.c	/^void test_object_tag_read__parse_without_tagger(void)$/;"	f	typeref:typename:void
test_object_tag_read__without_tagger_nor_message	extern/libgit2/tests/object/tag/read.c	/^void test_object_tag_read__without_tagger_nor_message(void)$/;"	f	typeref:typename:void
test_object_tag_write__basic	extern/libgit2/tests/object/tag/write.c	/^void test_object_tag_write__basic(void)$/;"	f	typeref:typename:void
test_object_tag_write__cleanup	extern/libgit2/tests/object/tag/write.c	/^void test_object_tag_write__cleanup(void)$/;"	f	typeref:typename:void
test_object_tag_write__creating_an_annotation_does_not_create_a_reference	extern/libgit2/tests/object/tag/write.c	/^void test_object_tag_write__creating_an_annotation_does_not_create_a_reference(void)$/;"	f	typeref:typename:void
test_object_tag_write__creating_an_annotation_stores_the_new_object_in_the_odb	extern/libgit2/tests/object/tag/write.c	/^void test_object_tag_write__creating_an_annotation_stores_the_new_object_in_the_odb(void)$/;"	f	typeref:typename:void
test_object_tag_write__creating_with_an_invalid_name_returns_EINVALIDSPEC	extern/libgit2/tests/object/tag/write.c	/^void test_object_tag_write__creating_with_an_invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_object_tag_write__delete	extern/libgit2/tests/object/tag/write.c	/^void test_object_tag_write__delete(void)$/;"	f	typeref:typename:void
test_object_tag_write__deleting_with_an_invalid_name_returns_EINVALIDSPEC	extern/libgit2/tests/object/tag/write.c	/^void test_object_tag_write__deleting_with_an_invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_object_tag_write__initialize	extern/libgit2/tests/object/tag/write.c	/^void test_object_tag_write__initialize(void)$/;"	f	typeref:typename:void
test_object_tag_write__lightweight	extern/libgit2/tests/object/tag/write.c	/^void test_object_tag_write__lightweight(void)$/;"	f	typeref:typename:void
test_object_tag_write__lightweight_over_existing	extern/libgit2/tests/object/tag/write.c	/^void test_object_tag_write__lightweight_over_existing(void)$/;"	f	typeref:typename:void
test_object_tag_write__overwrite	extern/libgit2/tests/object/tag/write.c	/^void test_object_tag_write__overwrite(void)$/;"	f	typeref:typename:void
test_object_tag_write__replace	extern/libgit2/tests/object/tag/write.c	/^void test_object_tag_write__replace(void)$/;"	f	typeref:typename:void
test_object_tree_attributes__cleanup	extern/libgit2/tests/object/tree/attributes.c	/^void test_object_tree_attributes__cleanup(void)$/;"	f	typeref:typename:void
test_object_tree_attributes__ensure_correctness_of_attributes_on_insertion	extern/libgit2/tests/object/tree/attributes.c	/^void test_object_tree_attributes__ensure_correctness_of_attributes_on_insertion(void)$/;"	f	typeref:typename:void
test_object_tree_attributes__group_writable_tree_entries_created_with_an_antique_git_version_can_still_be_accessed	extern/libgit2/tests/object/tree/attributes.c	/^void test_object_tree_attributes__group_writable_tree_entries_created_with_an_antique_git_versio/;"	f	typeref:typename:void
test_object_tree_attributes__initialize	extern/libgit2/tests/object/tree/attributes.c	/^void test_object_tree_attributes__initialize(void)$/;"	f	typeref:typename:void
test_object_tree_attributes__normalize_600	extern/libgit2/tests/object/tree/attributes.c	/^void test_object_tree_attributes__normalize_600(void)$/;"	f	typeref:typename:void
test_object_tree_attributes__normalize_attributes_when_creating_a_tree_from_an_existing_one	extern/libgit2/tests/object/tree/attributes.c	/^void test_object_tree_attributes__normalize_attributes_when_creating_a_tree_from_an_existing_one/;"	f	typeref:typename:void
test_object_tree_attributes__treebuilder_reject_invalid_filemode	extern/libgit2/tests/object/tree/attributes.c	/^void test_object_tree_attributes__treebuilder_reject_invalid_filemode(void)$/;"	f	typeref:typename:void
test_object_tree_duplicateentries__cannot_create_a_duplicate_entry_building_a_tree_from_a_index_with_conflicts	extern/libgit2/tests/object/tree/duplicateentries.c	/^void test_object_tree_duplicateentries__cannot_create_a_duplicate_entry_building_a_tree_from_a_i/;"	f	typeref:typename:void
test_object_tree_duplicateentries__cannot_create_a_duplicate_entry_through_the_treebuilder	extern/libgit2/tests/object/tree/duplicateentries.c	/^void test_object_tree_duplicateentries__cannot_create_a_duplicate_entry_through_the_treebuilder(/;"	f	typeref:typename:void
test_object_tree_duplicateentries__cleanup	extern/libgit2/tests/object/tree/duplicateentries.c	/^void test_object_tree_duplicateentries__cleanup(void) {$/;"	f	typeref:typename:void
test_object_tree_duplicateentries__initialize	extern/libgit2/tests/object/tree/duplicateentries.c	/^void test_object_tree_duplicateentries__initialize(void) {$/;"	f	typeref:typename:void
test_object_tree_frompath__cleanup	extern/libgit2/tests/object/tree/frompath.c	/^void test_object_tree_frompath__cleanup(void)$/;"	f	typeref:typename:void
test_object_tree_frompath__fail_when_processing_an_invalid_path	extern/libgit2/tests/object/tree/frompath.c	/^void test_object_tree_frompath__fail_when_processing_an_invalid_path(void)$/;"	f	typeref:typename:void
test_object_tree_frompath__initialize	extern/libgit2/tests/object/tree/frompath.c	/^void test_object_tree_frompath__initialize(void)$/;"	f	typeref:typename:void
test_object_tree_frompath__retrieve_tree_from_path_to_treeentry	extern/libgit2/tests/object/tree/frompath.c	/^void test_object_tree_frompath__retrieve_tree_from_path_to_treeentry(void)$/;"	f	typeref:typename:void
test_object_tree_parse__empty_filename_fails	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__empty_filename_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__invalid_mode_fails	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__invalid_mode_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__leading_filename_spaces_parse	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__leading_filename_spaces_parse(void)$/;"	f	typeref:typename:void
test_object_tree_parse__leading_space_fails	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__leading_space_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__missing_filename_separator_fails	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__missing_filename_separator_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__missing_filename_terminator_fails	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__missing_filename_terminator_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__missing_mode_fails	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__missing_mode_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__mode_doesnt_cause_oob_read	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__mode_doesnt_cause_oob_read(void)$/;"	f	typeref:typename:void
test_object_tree_parse__multiple_entries_parse	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__multiple_entries_parse(void)$/;"	f	typeref:typename:void
test_object_tree_parse__single_blob_parses	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__single_blob_parses(void)$/;"	f	typeref:typename:void
test_object_tree_parse__single_tree_parses	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__single_tree_parses(void)$/;"	f	typeref:typename:void
test_object_tree_parse__trailing_garbage_fails	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__trailing_garbage_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__truncated_oid_fails	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__truncated_oid_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__unreasonably_large_mode_fails	extern/libgit2/tests/object/tree/parse.c	/^void test_object_tree_parse__unreasonably_large_mode_fails(void)$/;"	f	typeref:typename:void
test_object_tree_read__cleanup	extern/libgit2/tests/object/tree/read.c	/^void test_object_tree_read__cleanup(void)$/;"	f	typeref:typename:void
test_object_tree_read__initialize	extern/libgit2/tests/object/tree/read.c	/^void test_object_tree_read__initialize(void)$/;"	f	typeref:typename:void
test_object_tree_read__largefile	extern/libgit2/tests/object/tree/read.c	/^void test_object_tree_read__largefile(void)$/;"	f	typeref:typename:void
test_object_tree_read__loaded	extern/libgit2/tests/object/tree/read.c	/^void test_object_tree_read__loaded(void)$/;"	f	typeref:typename:void
test_object_tree_read__two	extern/libgit2/tests/object/tree/read.c	/^void test_object_tree_read__two(void)$/;"	f	typeref:typename:void
test_object_tree_update__add_blobs	extern/libgit2/tests/object/tree/update.c	/^void test_object_tree_update__add_blobs(void)$/;"	f	typeref:typename:void
test_object_tree_update__add_blobs_unsorted	extern/libgit2/tests/object/tree/update.c	/^void test_object_tree_update__add_blobs_unsorted(void)$/;"	f	typeref:typename:void
test_object_tree_update__add_conflict	extern/libgit2/tests/object/tree/update.c	/^void test_object_tree_update__add_conflict(void)$/;"	f	typeref:typename:void
test_object_tree_update__add_conflict2	extern/libgit2/tests/object/tree/update.c	/^void test_object_tree_update__add_conflict2(void)$/;"	f	typeref:typename:void
test_object_tree_update__cleanup	extern/libgit2/tests/object/tree/update.c	/^void test_object_tree_update__cleanup(void)$/;"	f	typeref:typename:void
test_object_tree_update__initialize	extern/libgit2/tests/object/tree/update.c	/^void test_object_tree_update__initialize(void)$/;"	f	typeref:typename:void
test_object_tree_update__remove_all_entries	extern/libgit2/tests/object/tree/update.c	/^void test_object_tree_update__remove_all_entries(void)$/;"	f	typeref:typename:void
test_object_tree_update__remove_blob	extern/libgit2/tests/object/tree/update.c	/^void test_object_tree_update__remove_blob(void)$/;"	f	typeref:typename:void
test_object_tree_update__remove_blob_deeper	extern/libgit2/tests/object/tree/update.c	/^void test_object_tree_update__remove_blob_deeper(void)$/;"	f	typeref:typename:void
test_object_tree_update__remove_invalid_submodule	extern/libgit2/tests/object/tree/update.c	/^void test_object_tree_update__remove_invalid_submodule(void)$/;"	f	typeref:typename:void
test_object_tree_update__replace_blob	extern/libgit2/tests/object/tree/update.c	/^void test_object_tree_update__replace_blob(void)$/;"	f	typeref:typename:void
test_object_tree_walk__0	extern/libgit2/tests/object/tree/walk.c	/^void test_object_tree_walk__0(void)$/;"	f	typeref:typename:void
test_object_tree_walk__1	extern/libgit2/tests/object/tree/walk.c	/^void test_object_tree_walk__1(void)$/;"	f	typeref:typename:void
test_object_tree_walk__2	extern/libgit2/tests/object/tree/walk.c	/^void test_object_tree_walk__2(void)$/;"	f	typeref:typename:void
test_object_tree_walk__cleanup	extern/libgit2/tests/object/tree/walk.c	/^void test_object_tree_walk__cleanup(void)$/;"	f	typeref:typename:void
test_object_tree_walk__initialize	extern/libgit2/tests/object/tree/walk.c	/^void test_object_tree_walk__initialize(void)$/;"	f	typeref:typename:void
test_object_tree_write__cleanup	extern/libgit2/tests/object/tree/write.c	/^void test_object_tree_write__cleanup(void)$/;"	f	typeref:typename:void
test_object_tree_write__cruel_paths	extern/libgit2/tests/object/tree/write.c	/^void test_object_tree_write__cruel_paths(void)$/;"	f	typeref:typename:void
test_object_tree_write__filtering	extern/libgit2/tests/object/tree/write.c	/^void test_object_tree_write__filtering(void)$/;"	f	typeref:typename:void
test_object_tree_write__from_memory	extern/libgit2/tests/object/tree/write.c	/^void test_object_tree_write__from_memory(void)$/;"	f	typeref:typename:void
test_object_tree_write__initialize	extern/libgit2/tests/object/tree/write.c	/^void test_object_tree_write__initialize(void)$/;"	f	typeref:typename:void
test_object_tree_write__invalid_null_oid	extern/libgit2/tests/object/tree/write.c	/^void test_object_tree_write__invalid_null_oid(void)$/;"	f	typeref:typename:void
test_object_tree_write__object_validity	extern/libgit2/tests/object/tree/write.c	/^void test_object_tree_write__object_validity(void)$/;"	f	typeref:typename:void
test_object_tree_write__protect_filesystems	extern/libgit2/tests/object/tree/write.c	/^void test_object_tree_write__protect_filesystems(void)$/;"	f	typeref:typename:void
test_object_tree_write__removing_and_re_adding_in_treebuilder	extern/libgit2/tests/object/tree/write.c	/^void test_object_tree_write__removing_and_re_adding_in_treebuilder(void)$/;"	f	typeref:typename:void
test_object_tree_write__sorted_subtrees	extern/libgit2/tests/object/tree/write.c	/^void test_object_tree_write__sorted_subtrees(void)$/;"	f	typeref:typename:void
test_object_tree_write__subtree	extern/libgit2/tests/object/tree/write.c	/^void test_object_tree_write__subtree(void)$/;"	f	typeref:typename:void
test_odb_alternates__chained	extern/libgit2/tests/odb/alternates.c	/^void test_odb_alternates__chained(void)$/;"	f	typeref:typename:void
test_odb_alternates__cleanup	extern/libgit2/tests/odb/alternates.c	/^void test_odb_alternates__cleanup(void)$/;"	f	typeref:typename:void
test_odb_alternates__long_chain	extern/libgit2/tests/odb/alternates.c	/^void test_odb_alternates__long_chain(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__blob_create_from_buffer_succeeds	extern/libgit2/tests/odb/backend/mempack.c	/^void test_odb_backend_mempack__blob_create_from_buffer_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__cleanup	extern/libgit2/tests/odb/backend/mempack.c	/^void test_odb_backend_mempack__cleanup(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__exists_of_missing_object_fails	extern/libgit2/tests/odb/backend/mempack.c	/^void test_odb_backend_mempack__exists_of_missing_object_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__exists_with_existing_objects_succeeds	extern/libgit2/tests/odb/backend/mempack.c	/^void test_odb_backend_mempack__exists_with_existing_objects_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__initialize	extern/libgit2/tests/odb/backend/mempack.c	/^void test_odb_backend_mempack__initialize(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__read_of_missing_object_fails	extern/libgit2/tests/odb/backend/mempack.c	/^void test_odb_backend_mempack__read_of_missing_object_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__write_succeeds	extern/libgit2/tests/odb/backend/mempack.c	/^void test_odb_backend_mempack__write_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_multiple__cleanup	extern/libgit2/tests/odb/backend/multiple.c	/^void test_odb_backend_multiple__cleanup(void)$/;"	f	typeref:typename:void
test_odb_backend_multiple__initialize	extern/libgit2/tests/odb/backend/multiple.c	/^void test_odb_backend_multiple__initialize(void)$/;"	f	typeref:typename:void
test_odb_backend_multiple__read_prefix_with_first_empty_succeeds	extern/libgit2/tests/odb/backend/multiple.c	/^void test_odb_backend_multiple__read_prefix_with_first_empty_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_multiple__read_prefix_with_first_matching_reads_both	extern/libgit2/tests/odb/backend/multiple.c	/^void test_odb_backend_multiple__read_prefix_with_first_matching_reads_both(void)$/;"	f	typeref:typename:void
test_odb_backend_multiple__read_prefix_with_first_matching_succeeds_without_hash_verification	extern/libgit2/tests/odb/backend/multiple.c	/^void test_odb_backend_multiple__read_prefix_with_first_matching_succeeds_without_hash_verificati/;"	f	typeref:typename:void
test_odb_backend_multiple__read_with_empty_first_succeeds	extern/libgit2/tests/odb/backend/multiple.c	/^void test_odb_backend_multiple__read_with_empty_first_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_multiple__read_with_first_matching_stops	extern/libgit2/tests/odb/backend/multiple.c	/^void test_odb_backend_multiple__read_with_first_matching_stops(void)$/;"	f	typeref:typename:void
test_odb_backend_nobackend__cleanup	extern/libgit2/tests/odb/backend/nobackend.c	/^void test_odb_backend_nobackend__cleanup(void)$/;"	f	typeref:typename:void
test_odb_backend_nobackend__initialize	extern/libgit2/tests/odb/backend/nobackend.c	/^void test_odb_backend_nobackend__initialize(void)$/;"	f	typeref:typename:void
test_odb_backend_nobackend__write_fails_gracefully	extern/libgit2/tests/odb/backend/nobackend.c	/^void test_odb_backend_nobackend__write_fails_gracefully(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__cleanup	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__cleanup(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__exists_is_invoked_once_on_failure	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__exists_is_invoked_once_on_failure(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__exists_is_invoked_once_on_success	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__exists_is_invoked_once_on_success(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__initialize	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__initialize(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__read_is_invoked_once_on_failure	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__read_is_invoked_once_on_failure(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__read_is_invoked_once_on_success	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__read_is_invoked_once_on_success(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__read_is_invoked_once_when_revparsing_a_full_oid	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__read_is_invoked_once_when_revparsing_a_full_oid(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__readheader_is_invoked_once_on_failure	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__readheader_is_invoked_once_on_failure(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__readheader_is_invoked_once_on_success	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__readheader_is_invoked_once_on_success(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__readprefix_is_invoked_once_on_failure	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__readprefix_is_invoked_once_on_failure(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__readprefix_is_invoked_once_on_success	extern/libgit2/tests/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__readprefix_is_invoked_once_on_success(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__cleanup	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__cleanup(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__exists_fails_for_nonexisting_object	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__exists_fails_for_nonexisting_object(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__exists_prefix_succeeds	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__exists_prefix_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__exists_succeeds	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__exists_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__exists_with_ambiguous_prefix_fails	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__exists_with_ambiguous_prefix_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__exists_with_highly_ambiguous_prefix	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__exists_with_highly_ambiguous_prefix(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__initialize	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__initialize(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__null_oid_is_ignored	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__null_oid_is_ignored(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_of_nonexisting_object_fails	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__read_of_nonexisting_object_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_of_object_succeeds	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__read_of_object_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_prefix_of_nonexisting_object_fails	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__read_prefix_of_nonexisting_object_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_prefix_succeeds	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__read_prefix_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_with_ambiguous_prefix_fails	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__read_with_ambiguous_prefix_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_with_hash_mismatch_fails	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__read_with_hash_mismatch_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_with_hash_mismatch_succeeds_without_verification	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__read_with_hash_mismatch_succeeds_without_verification(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_with_highly_ambiguous_prefix	extern/libgit2/tests/odb/backend/simple.c	/^void test_odb_backend_simple__read_with_highly_ambiguous_prefix(void)$/;"	f	typeref:typename:void
test_odb_emptyobjects__blob_notfound	extern/libgit2/tests/odb/emptyobjects.c	/^void test_odb_emptyobjects__blob_notfound(void)$/;"	f	typeref:typename:void
test_odb_emptyobjects__cleanup	extern/libgit2/tests/odb/emptyobjects.c	/^void test_odb_emptyobjects__cleanup(void)$/;"	f	typeref:typename:void
test_odb_emptyobjects__initialize	extern/libgit2/tests/odb/emptyobjects.c	/^void test_odb_emptyobjects__initialize(void)$/;"	f	typeref:typename:void
test_odb_emptyobjects__read_tree	extern/libgit2/tests/odb/emptyobjects.c	/^void test_odb_emptyobjects__read_tree(void)$/;"	f	typeref:typename:void
test_odb_emptyobjects__read_tree_odb	extern/libgit2/tests/odb/emptyobjects.c	/^void test_odb_emptyobjects__read_tree_odb(void)$/;"	f	typeref:typename:void
test_odb_foreach__cleanup	extern/libgit2/tests/odb/foreach.c	/^void test_odb_foreach__cleanup(void)$/;"	f	typeref:typename:void
test_odb_foreach__files_in_objects_dir	extern/libgit2/tests/odb/foreach.c	/^void test_odb_foreach__files_in_objects_dir(void)$/;"	f	typeref:typename:void
test_odb_foreach__foreach	extern/libgit2/tests/odb/foreach.c	/^void test_odb_foreach__foreach(void)$/;"	f	typeref:typename:void
test_odb_foreach__interrupt_foreach	extern/libgit2/tests/odb/foreach.c	/^void test_odb_foreach__interrupt_foreach(void)$/;"	f	typeref:typename:void
test_odb_foreach__one_pack	extern/libgit2/tests/odb/foreach.c	/^void test_odb_foreach__one_pack(void)$/;"	f	typeref:typename:void
test_odb_freshen__cleanup	extern/libgit2/tests/odb/freshen.c	/^void test_odb_freshen__cleanup(void)$/;"	f	typeref:typename:void
test_odb_freshen__initialize	extern/libgit2/tests/odb/freshen.c	/^void test_odb_freshen__initialize(void)$/;"	f	typeref:typename:void
test_odb_freshen__loose_blob	extern/libgit2/tests/odb/freshen.c	/^void test_odb_freshen__loose_blob(void)$/;"	f	typeref:typename:void
test_odb_freshen__loose_tree	extern/libgit2/tests/odb/freshen.c	/^void test_odb_freshen__loose_tree(void)$/;"	f	typeref:typename:void
test_odb_freshen__packed_object	extern/libgit2/tests/odb/freshen.c	/^void test_odb_freshen__packed_object(void)$/;"	f	typeref:typename:void
test_odb_freshen__readonly_object	extern/libgit2/tests/odb/freshen.c	/^void test_odb_freshen__readonly_object(void)$/;"	f	typeref:typename:void
test_odb_freshen__tree_during_commit	extern/libgit2/tests/odb/freshen.c	/^void test_odb_freshen__tree_during_commit(void)$/;"	f	typeref:typename:void
test_odb_largefiles__cleanup	extern/libgit2/tests/odb/largefiles.c	/^void test_odb_largefiles__cleanup(void)$/;"	f	typeref:typename:void
test_odb_largefiles__initialize	extern/libgit2/tests/odb/largefiles.c	/^void test_odb_largefiles__initialize(void)$/;"	f	typeref:typename:void
test_odb_largefiles__read_header	extern/libgit2/tests/odb/largefiles.c	/^void test_odb_largefiles__read_header(void)$/;"	f	typeref:typename:void
test_odb_largefiles__read_into_memory	extern/libgit2/tests/odb/largefiles.c	/^void test_odb_largefiles__read_into_memory(void)$/;"	f	typeref:typename:void
test_odb_largefiles__read_into_memory_rejected_on_32bit	extern/libgit2/tests/odb/largefiles.c	/^void test_odb_largefiles__read_into_memory_rejected_on_32bit(void)$/;"	f	typeref:typename:void
test_odb_largefiles__streamread	extern/libgit2/tests/odb/largefiles.c	/^void test_odb_largefiles__streamread(void)$/;"	f	typeref:typename:void
test_odb_largefiles__streamwrite	extern/libgit2/tests/odb/largefiles.c	/^void test_odb_largefiles__streamwrite(void)$/;"	f	typeref:typename:void
test_odb_largefiles__write_from_memory	extern/libgit2/tests/odb/largefiles.c	/^void test_odb_largefiles__write_from_memory(void)$/;"	f	typeref:typename:void
test_odb_loose__cleanup	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose__cleanup(void)$/;"	f	typeref:typename:void
test_odb_loose__does_not_fsync_by_default	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose__does_not_fsync_by_default(void)$/;"	f	typeref:typename:void
test_odb_loose__exists	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose__exists(void)$/;"	f	typeref:typename:void
test_odb_loose__fsync_obeys_global_setting	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose__fsync_obeys_global_setting(void)$/;"	f	typeref:typename:void
test_odb_loose__fsync_obeys_odb_option	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose__fsync_obeys_odb_option(void)$/;"	f	typeref:typename:void
test_odb_loose__fsync_obeys_repo_setting	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose__fsync_obeys_repo_setting(void)$/;"	f	typeref:typename:void
test_odb_loose__initialize	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose__initialize(void)$/;"	f	typeref:typename:void
test_odb_loose__permissions_readwrite	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose__permissions_readwrite(void)$/;"	f	typeref:typename:void
test_odb_loose__permissions_standard	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose__permissions_standard(void)$/;"	f	typeref:typename:void
test_odb_loose__read_header	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose__read_header(void)$/;"	f	typeref:typename:void
test_odb_loose__simple_reads	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose__simple_reads(void)$/;"	f	typeref:typename:void
test_odb_loose__streaming_reads	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose__streaming_reads(void)$/;"	f	typeref:typename:void
test_odb_loose_permissions_readonly	extern/libgit2/tests/odb/loose.c	/^void test_odb_loose_permissions_readonly(void)$/;"	f	typeref:typename:void
test_odb_mixed__cleanup	extern/libgit2/tests/odb/mixed.c	/^void test_odb_mixed__cleanup(void)$/;"	f	typeref:typename:void
test_odb_mixed__dup_oid	extern/libgit2/tests/odb/mixed.c	/^void test_odb_mixed__dup_oid(void) {$/;"	f	typeref:typename:void
test_odb_mixed__dup_oid_prefix_0	extern/libgit2/tests/odb/mixed.c	/^void test_odb_mixed__dup_oid_prefix_0(void) {$/;"	f	typeref:typename:void
test_odb_mixed__expand_ids	extern/libgit2/tests/odb/mixed.c	/^void test_odb_mixed__expand_ids(void)$/;"	f	typeref:typename:void
test_odb_mixed__expand_ids_cached	extern/libgit2/tests/odb/mixed.c	/^void test_odb_mixed__expand_ids_cached(void)$/;"	f	typeref:typename:void
test_odb_mixed__initialize	extern/libgit2/tests/odb/mixed.c	/^void test_odb_mixed__initialize(void)$/;"	f	typeref:typename:void
test_odb_packed__cleanup	extern/libgit2/tests/odb/packed.c	/^void test_odb_packed__cleanup(void)$/;"	f	typeref:typename:void
test_odb_packed__initialize	extern/libgit2/tests/odb/packed.c	/^void test_odb_packed__initialize(void)$/;"	f	typeref:typename:void
test_odb_packed__mass_read	extern/libgit2/tests/odb/packed.c	/^void test_odb_packed__mass_read(void)$/;"	f	typeref:typename:void
test_odb_packed__read_header_0	extern/libgit2/tests/odb/packed.c	/^void test_odb_packed__read_header_0(void)$/;"	f	typeref:typename:void
test_odb_packed__read_header_1	extern/libgit2/tests/odb/packed.c	/^void test_odb_packed__read_header_1(void)$/;"	f	typeref:typename:void
test_odb_packed_one__cleanup	extern/libgit2/tests/odb/packed_one.c	/^void test_odb_packed_one__cleanup(void)$/;"	f	typeref:typename:void
test_odb_packed_one__initialize	extern/libgit2/tests/odb/packed_one.c	/^void test_odb_packed_one__initialize(void)$/;"	f	typeref:typename:void
test_odb_packed_one__mass_read	extern/libgit2/tests/odb/packed_one.c	/^void test_odb_packed_one__mass_read(void)$/;"	f	typeref:typename:void
test_odb_packed_one__read_header_0	extern/libgit2/tests/odb/packed_one.c	/^void test_odb_packed_one__read_header_0(void)$/;"	f	typeref:typename:void
test_odb_sorting__alternate_backends_sorting	extern/libgit2/tests/odb/sorting.c	/^void test_odb_sorting__alternate_backends_sorting(void)$/;"	f	typeref:typename:void
test_odb_sorting__basic_backends_sorting	extern/libgit2/tests/odb/sorting.c	/^void test_odb_sorting__basic_backends_sorting(void)$/;"	f	typeref:typename:void
test_odb_sorting__cleanup	extern/libgit2/tests/odb/sorting.c	/^void test_odb_sorting__cleanup(void)$/;"	f	typeref:typename:void
test_odb_sorting__initialize	extern/libgit2/tests/odb/sorting.c	/^void test_odb_sorting__initialize(void)$/;"	f	typeref:typename:void
test_odb_streamwrite__can_accept_chunks	extern/libgit2/tests/odb/streamwrite.c	/^void test_odb_streamwrite__can_accept_chunks(void)$/;"	f	typeref:typename:void
test_odb_streamwrite__can_detect_additional_bytes	extern/libgit2/tests/odb/streamwrite.c	/^void test_odb_streamwrite__can_detect_additional_bytes(void)$/;"	f	typeref:typename:void
test_odb_streamwrite__can_detect_missing_bytes	extern/libgit2/tests/odb/streamwrite.c	/^void test_odb_streamwrite__can_detect_missing_bytes(void)$/;"	f	typeref:typename:void
test_odb_streamwrite__cleanup	extern/libgit2/tests/odb/streamwrite.c	/^void test_odb_streamwrite__cleanup(void)$/;"	f	typeref:typename:void
test_odb_streamwrite__initialize	extern/libgit2/tests/odb/streamwrite.c	/^void test_odb_streamwrite__initialize(void)$/;"	f	typeref:typename:void
test_oids	extern/libgit2/tests/core/oidmap.c	/^} test_oids[0x0FFF];$/;"	v	typeref:struct:__anon5111880b0108[0x0FFF]
test_online_badssl__expired	extern/libgit2/tests/online/badssl.c	/^void test_online_badssl__expired(void)$/;"	f	typeref:typename:void
test_online_badssl__old_cipher	extern/libgit2/tests/online/badssl.c	/^void test_online_badssl__old_cipher(void)$/;"	f	typeref:typename:void
test_online_badssl__self_signed	extern/libgit2/tests/online/badssl.c	/^void test_online_badssl__self_signed(void)$/;"	f	typeref:typename:void
test_online_badssl__wrong_host	extern/libgit2/tests/online/badssl.c	/^void test_online_badssl__wrong_host(void)$/;"	f	typeref:typename:void
test_online_clone__bitbucket_falls_back_to_specified_creds	extern/libgit2/tests/online/clone.c	/^void test_online_clone__bitbucket_falls_back_to_specified_creds(void)$/;"	f	typeref:typename:void
test_online_clone__bitbucket_style	extern/libgit2/tests/online/clone.c	/^void test_online_clone__bitbucket_style(void)$/;"	f	typeref:typename:void
test_online_clone__bitbucket_uses_creds_in_url	extern/libgit2/tests/online/clone.c	/^void test_online_clone__bitbucket_uses_creds_in_url(void)$/;"	f	typeref:typename:void
test_online_clone__can_cancel	extern/libgit2/tests/online/clone.c	/^void test_online_clone__can_cancel(void)$/;"	f	typeref:typename:void
test_online_clone__can_checkout_a_cloned_repo	extern/libgit2/tests/online/clone.c	/^void test_online_clone__can_checkout_a_cloned_repo(void)$/;"	f	typeref:typename:void
test_online_clone__certificate_invalid	extern/libgit2/tests/online/clone.c	/^void test_online_clone__certificate_invalid(void)$/;"	f	typeref:typename:void
test_online_clone__certificate_valid	extern/libgit2/tests/online/clone.c	/^void test_online_clone__certificate_valid(void)$/;"	f	typeref:typename:void
test_online_clone__cleanup	extern/libgit2/tests/online/clone.c	/^void test_online_clone__cleanup(void)$/;"	f	typeref:typename:void
test_online_clone__clone_mirror	extern/libgit2/tests/online/clone.c	/^void test_online_clone__clone_mirror(void)$/;"	f	typeref:typename:void
test_online_clone__cred_callback_called_again_on_auth_failure	extern/libgit2/tests/online/clone.c	/^void test_online_clone__cred_callback_called_again_on_auth_failure(void)$/;"	f	typeref:typename:void
test_online_clone__cred_callback_failure_return_code_is_tunnelled	extern/libgit2/tests/online/clone.c	/^void test_online_clone__cred_callback_failure_return_code_is_tunnelled(void)$/;"	f	typeref:typename:void
test_online_clone__credentials	extern/libgit2/tests/online/clone.c	/^void test_online_clone__credentials(void)$/;"	f	typeref:typename:void
test_online_clone__custom_headers	extern/libgit2/tests/online/clone.c	/^void test_online_clone__custom_headers(void)$/;"	f	typeref:typename:void
test_online_clone__custom_remote_callbacks	extern/libgit2/tests/online/clone.c	/^void test_online_clone__custom_remote_callbacks(void)$/;"	f	typeref:typename:void
test_online_clone__empty_repository	extern/libgit2/tests/online/clone.c	/^void test_online_clone__empty_repository(void)$/;"	f	typeref:typename:void
test_online_clone__initialize	extern/libgit2/tests/online/clone.c	/^void test_online_clone__initialize(void)$/;"	f	typeref:typename:void
test_online_clone__network_bare	extern/libgit2/tests/online/clone.c	/^void test_online_clone__network_bare(void)$/;"	f	typeref:typename:void
test_online_clone__network_full	extern/libgit2/tests/online/clone.c	/^void test_online_clone__network_full(void)$/;"	f	typeref:typename:void
test_online_clone__path_whitespace	extern/libgit2/tests/online/clone.c	/^void test_online_clone__path_whitespace(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_auto_not_detected	extern/libgit2/tests/online/clone.c	/^void test_online_clone__proxy_auto_not_detected(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_cred_callback_after_failed_url_creds	extern/libgit2/tests/online/clone.c	/^void test_online_clone__proxy_cred_callback_after_failed_url_creds(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_credentials_in_environment	extern/libgit2/tests/online/clone.c	/^void test_online_clone__proxy_credentials_in_environment(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_credentials_in_url	extern/libgit2/tests/online/clone.c	/^void test_online_clone__proxy_credentials_in_url(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_credentials_request	extern/libgit2/tests/online/clone.c	/^void test_online_clone__proxy_credentials_request(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_auth_methods	extern/libgit2/tests/online/clone.c	/^void test_online_clone__ssh_auth_methods(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_cannot_change_username	extern/libgit2/tests/online/clone.c	/^void test_online_clone__ssh_cannot_change_username(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_cert	extern/libgit2/tests/online/clone.c	/^void test_online_clone__ssh_cert(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_memory_auth	extern/libgit2/tests/online/clone.c	/^void test_online_clone__ssh_memory_auth(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_with_paths	extern/libgit2/tests/online/clone.c	/^void test_online_clone__ssh_with_paths(void)$/;"	f	typeref:typename:void
test_online_clone__start_with_http	extern/libgit2/tests/online/clone.c	/^void test_online_clone__start_with_http(void)$/;"	f	typeref:typename:void
test_online_fetch__can_cancel	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__can_cancel(void)$/;"	f	typeref:typename:void
test_online_fetch__cleanup	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__cleanup(void)$/;"	f	typeref:typename:void
test_online_fetch__default_git	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__default_git(void)$/;"	f	typeref:typename:void
test_online_fetch__default_http	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__default_http(void)$/;"	f	typeref:typename:void
test_online_fetch__default_https	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__default_https(void)$/;"	f	typeref:typename:void
test_online_fetch__doesnt_retrieve_a_pack_when_the_repository_is_up_to_date	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__doesnt_retrieve_a_pack_when_the_repository_is_up_to_date(void)$/;"	f	typeref:typename:void
test_online_fetch__fetch_twice	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__fetch_twice(void)$/;"	f	typeref:typename:void
test_online_fetch__initialize	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__initialize(void)$/;"	f	typeref:typename:void
test_online_fetch__ls_disconnected	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__ls_disconnected(void)$/;"	f	typeref:typename:void
test_online_fetch__no_tags_git	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__no_tags_git(void)$/;"	f	typeref:typename:void
test_online_fetch__no_tags_http	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__no_tags_http(void)$/;"	f	typeref:typename:void
test_online_fetch__remote_symrefs	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__remote_symrefs(void)$/;"	f	typeref:typename:void
test_online_fetch__twice	extern/libgit2/tests/online/fetch.c	/^void test_online_fetch__twice(void)$/;"	f	typeref:typename:void
test_online_fetchhead__cleanup	extern/libgit2/tests/online/fetchhead.c	/^void test_online_fetchhead__cleanup(void)$/;"	f	typeref:typename:void
test_online_fetchhead__colon_only_dst_refspec_creates_no_branch	extern/libgit2/tests/online/fetchhead.c	/^void test_online_fetchhead__colon_only_dst_refspec_creates_no_branch(void)$/;"	f	typeref:typename:void
test_online_fetchhead__empty_dst_refspec_creates_no_branch	extern/libgit2/tests/online/fetchhead.c	/^void test_online_fetchhead__empty_dst_refspec_creates_no_branch(void)$/;"	f	typeref:typename:void
test_online_fetchhead__explicit_dst_refspec_creates_branch	extern/libgit2/tests/online/fetchhead.c	/^void test_online_fetchhead__explicit_dst_refspec_creates_branch(void)$/;"	f	typeref:typename:void
test_online_fetchhead__explicit_spec	extern/libgit2/tests/online/fetchhead.c	/^void test_online_fetchhead__explicit_spec(void)$/;"	f	typeref:typename:void
test_online_fetchhead__initialize	extern/libgit2/tests/online/fetchhead.c	/^void test_online_fetchhead__initialize(void)$/;"	f	typeref:typename:void
test_online_fetchhead__no_merges	extern/libgit2/tests/online/fetchhead.c	/^void test_online_fetchhead__no_merges(void)$/;"	f	typeref:typename:void
test_online_fetchhead__wildcard_spec	extern/libgit2/tests/online/fetchhead.c	/^void test_online_fetchhead__wildcard_spec(void)$/;"	f	typeref:typename:void
test_online_push__b1	extern/libgit2/tests/online/push.c	/^void test_online_push__b1(void)$/;"	f	typeref:typename:void
test_online_push__b2	extern/libgit2/tests/online/push.c	/^void test_online_push__b2(void)$/;"	f	typeref:typename:void
test_online_push__b3	extern/libgit2/tests/online/push.c	/^void test_online_push__b3(void)$/;"	f	typeref:typename:void
test_online_push__b4	extern/libgit2/tests/online/push.c	/^void test_online_push__b4(void)$/;"	f	typeref:typename:void
test_online_push__b5	extern/libgit2/tests/online/push.c	/^void test_online_push__b5(void)$/;"	f	typeref:typename:void
test_online_push__b5_cancel	extern/libgit2/tests/online/push.c	/^void test_online_push__b5_cancel(void)$/;"	f	typeref:typename:void
test_online_push__bad_refspecs	extern/libgit2/tests/online/push.c	/^void test_online_push__bad_refspecs(void)$/;"	f	typeref:typename:void
test_online_push__cleanup	extern/libgit2/tests/online/push.c	/^void test_online_push__cleanup(void)$/;"	f	typeref:typename:void
test_online_push__configured	extern/libgit2/tests/online/push.c	/^void test_online_push__configured(void)$/;"	f	typeref:typename:void
test_online_push__delete	extern/libgit2/tests/online/push.c	/^void test_online_push__delete(void)$/;"	f	typeref:typename:void
test_online_push__expressions	extern/libgit2/tests/online/push.c	/^void test_online_push__expressions(void)$/;"	f	typeref:typename:void
test_online_push__fast_fwd	extern/libgit2/tests/online/push.c	/^void test_online_push__fast_fwd(void)$/;"	f	typeref:typename:void
test_online_push__force	extern/libgit2/tests/online/push.c	/^void test_online_push__force(void)$/;"	f	typeref:typename:void
test_online_push__implicit_tgt	extern/libgit2/tests/online/push.c	/^void test_online_push__implicit_tgt(void)$/;"	f	typeref:typename:void
test_online_push__initialize	extern/libgit2/tests/online/push.c	/^void test_online_push__initialize(void)$/;"	f	typeref:typename:void
test_online_push__multi	extern/libgit2/tests/online/push.c	/^void test_online_push__multi(void)$/;"	f	typeref:typename:void
test_online_push__noop	extern/libgit2/tests/online/push.c	/^void test_online_push__noop(void)$/;"	f	typeref:typename:void
test_online_push__notes	extern/libgit2/tests/online/push.c	/^void test_online_push__notes(void)$/;"	f	typeref:typename:void
test_online_push__tag_blob	extern/libgit2/tests/online/push.c	/^void test_online_push__tag_blob(void)$/;"	f	typeref:typename:void
test_online_push__tag_commit	extern/libgit2/tests/online/push.c	/^void test_online_push__tag_commit(void)$/;"	f	typeref:typename:void
test_online_push__tag_lightweight	extern/libgit2/tests/online/push.c	/^void test_online_push__tag_lightweight(void)$/;"	f	typeref:typename:void
test_online_push__tag_to_tag	extern/libgit2/tests/online/push.c	/^void test_online_push__tag_to_tag(void)$/;"	f	typeref:typename:void
test_online_push__tag_tree	extern/libgit2/tests/online/push.c	/^void test_online_push__tag_tree(void)$/;"	f	typeref:typename:void
test_online_remotes__detached_remote_fails_downloading	extern/libgit2/tests/online/remotes.c	/^void test_online_remotes__detached_remote_fails_downloading(void)$/;"	f	typeref:typename:void
test_online_remotes__detached_remote_fails_pushing	extern/libgit2/tests/online/remotes.c	/^void test_online_remotes__detached_remote_fails_pushing(void)$/;"	f	typeref:typename:void
test_online_remotes__detached_remote_fails_uploading	extern/libgit2/tests/online/remotes.c	/^void test_online_remotes__detached_remote_fails_uploading(void)$/;"	f	typeref:typename:void
test_online_remotes__detached_remote_succeeds_ls	extern/libgit2/tests/online/remotes.c	/^void test_online_remotes__detached_remote_succeeds_ls(void)$/;"	f	typeref:typename:void
test_online_remotes__restricted_refspecs	extern/libgit2/tests/online/remotes.c	/^void test_online_remotes__restricted_refspecs(void)$/;"	f	typeref:typename:void
test_online_remotes__single_branch	extern/libgit2/tests/online/remotes.c	/^void test_online_remotes__single_branch(void)$/;"	f	typeref:typename:void
test_operations	extern/libgit2/tests/rebase/iterator.c	/^static void test_operations(git_rebase *rebase, size_t expected_current)$/;"	f	typeref:typename:void	file:
test_pack_indexer__corrupt_length	extern/libgit2/tests/pack/indexer.c	/^void test_pack_indexer__corrupt_length(void)$/;"	f	typeref:typename:void
test_pack_indexer__fix_thin	extern/libgit2/tests/pack/indexer.c	/^void test_pack_indexer__fix_thin(void)$/;"	f	typeref:typename:void
test_pack_indexer__incomplete_pack_fails_with_strict	extern/libgit2/tests/pack/indexer.c	/^void test_pack_indexer__incomplete_pack_fails_with_strict(void)$/;"	f	typeref:typename:void
test_pack_indexer__leaky	extern/libgit2/tests/pack/indexer.c	/^void test_pack_indexer__leaky(void)$/;"	f	typeref:typename:void
test_pack_indexer__missing_trailer	extern/libgit2/tests/pack/indexer.c	/^void test_pack_indexer__missing_trailer(void)$/;"	f	typeref:typename:void
test_pack_indexer__no_tmp_files	extern/libgit2/tests/pack/indexer.c	/^void test_pack_indexer__no_tmp_files(void)$/;"	f	typeref:typename:void
test_pack_indexer__out_of_order	extern/libgit2/tests/pack/indexer.c	/^void test_pack_indexer__out_of_order(void)$/;"	f	typeref:typename:void
test_pack_indexer__out_of_order_with_connectivity_checks	extern/libgit2/tests/pack/indexer.c	/^void test_pack_indexer__out_of_order_with_connectivity_checks(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__cleanup	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__cleanup(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__create_pack	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__create_pack(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__does_not_fsync_by_default	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__does_not_fsync_by_default(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__foreach	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__foreach(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__foreach_with_cancel	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__foreach_with_cancel(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__fsync_global_setting	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__fsync_global_setting(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__fsync_repo_setting	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__fsync_repo_setting(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__get_hash	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__get_hash(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__initialize	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__initialize(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__keep_file_check	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__keep_file_check(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__permissions_readonly	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__permissions_readonly(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__permissions_readwrite	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__permissions_readwrite(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__permissions_standard	extern/libgit2/tests/pack/packbuilder.c	/^void test_pack_packbuilder__permissions_standard(void)$/;"	f	typeref:typename:void
test_pack_sharing__open_two_repos	extern/libgit2/tests/pack/sharing.c	/^void test_pack_sharing__open_two_repos(void)$/;"	f	typeref:typename:void
test_parse_invalid_diff	extern/libgit2/tests/diff/parse.c	/^static void test_parse_invalid_diff(const char *invalid_diff)$/;"	f	typeref:typename:void	file:
test_patch	extern/libgit2/tests/diff/binary.c	/^void test_patch($/;"	f	typeref:typename:void
test_patch_parse__files_with_whitespaces_succeeds	extern/libgit2/tests/patch/parse.c	/^void test_patch_parse__files_with_whitespaces_succeeds(void)$/;"	f	typeref:typename:void
test_patch_parse__invalid_patches_fails	extern/libgit2/tests/patch/parse.c	/^void test_patch_parse__invalid_patches_fails(void)$/;"	f	typeref:typename:void
test_patch_parse__leading_and_trailing_garbage	extern/libgit2/tests/patch/parse.c	/^void test_patch_parse__leading_and_trailing_garbage(void)$/;"	f	typeref:typename:void
test_patch_parse__lifetime_of_patch_does_not_depend_on_buffer	extern/libgit2/tests/patch/parse.c	/^void test_patch_parse__lifetime_of_patch_does_not_depend_on_buffer(void)$/;"	f	typeref:typename:void
test_patch_parse__no_newline_at_end_of_new_file	extern/libgit2/tests/patch/parse.c	/^void test_patch_parse__no_newline_at_end_of_new_file(void)$/;"	f	typeref:typename:void
test_patch_parse__no_newline_at_end_of_old_file	extern/libgit2/tests/patch/parse.c	/^void test_patch_parse__no_newline_at_end_of_old_file(void)$/;"	f	typeref:typename:void
test_patch_parse__nonpatches_fail_with_notfound	extern/libgit2/tests/patch/parse.c	/^void test_patch_parse__nonpatches_fail_with_notfound(void)$/;"	f	typeref:typename:void
test_patch_parse__original_to_change_middle	extern/libgit2/tests/patch/parse.c	/^void test_patch_parse__original_to_change_middle(void)$/;"	f	typeref:typename:void
test_patch_print__add	extern/libgit2/tests/patch/print.c	/^void test_patch_print__add(void)$/;"	f	typeref:typename:void
test_patch_print__append	extern/libgit2/tests/patch/print.c	/^void test_patch_print__append(void)$/;"	f	typeref:typename:void
test_patch_print__append_nocontext	extern/libgit2/tests/patch/print.c	/^void test_patch_print__append_nocontext(void)$/;"	f	typeref:typename:void
test_patch_print__binary_add	extern/libgit2/tests/patch/print.c	/^void test_patch_print__binary_add(void)$/;"	f	typeref:typename:void
test_patch_print__binary_delete	extern/libgit2/tests/patch/print.c	/^void test_patch_print__binary_delete(void)$/;"	f	typeref:typename:void
test_patch_print__binary_delta	extern/libgit2/tests/patch/print.c	/^void test_patch_print__binary_delta(void)$/;"	f	typeref:typename:void
test_patch_print__binary_literal	extern/libgit2/tests/patch/print.c	/^void test_patch_print__binary_literal(void)$/;"	f	typeref:typename:void
test_patch_print__binary_not_shown	extern/libgit2/tests/patch/print.c	/^void test_patch_print__binary_not_shown(void)$/;"	f	typeref:typename:void
test_patch_print__change_firstline	extern/libgit2/tests/patch/print.c	/^void test_patch_print__change_firstline(void)$/;"	f	typeref:typename:void
test_patch_print__change_lastline	extern/libgit2/tests/patch/print.c	/^void test_patch_print__change_lastline(void)$/;"	f	typeref:typename:void
test_patch_print__change_middle	extern/libgit2/tests/patch/print.c	/^void test_patch_print__change_middle(void)$/;"	f	typeref:typename:void
test_patch_print__change_middle_nocontext	extern/libgit2/tests/patch/print.c	/^void test_patch_print__change_middle_nocontext(void)$/;"	f	typeref:typename:void
test_patch_print__delete	extern/libgit2/tests/patch/print.c	/^void test_patch_print__delete(void)$/;"	f	typeref:typename:void
test_patch_print__from_empty_file	extern/libgit2/tests/patch/print.c	/^void test_patch_print__from_empty_file(void)$/;"	f	typeref:typename:void
test_patch_print__modechange_modified	extern/libgit2/tests/patch/print.c	/^void test_patch_print__modechange_modified(void)$/;"	f	typeref:typename:void
test_patch_print__modechange_unchanged	extern/libgit2/tests/patch/print.c	/^void test_patch_print__modechange_unchanged(void)$/;"	f	typeref:typename:void
test_patch_print__not_reversible	extern/libgit2/tests/patch/print.c	/^void test_patch_print__not_reversible(void)$/;"	f	typeref:typename:void
test_patch_print__prepend	extern/libgit2/tests/patch/print.c	/^void test_patch_print__prepend(void)$/;"	f	typeref:typename:void
test_patch_print__prepend_and_append	extern/libgit2/tests/patch/print.c	/^void test_patch_print__prepend_and_append(void)$/;"	f	typeref:typename:void
test_patch_print__prepend_nocontext	extern/libgit2/tests/patch/print.c	/^void test_patch_print__prepend_nocontext(void)$/;"	f	typeref:typename:void
test_patch_print__rename_exact	extern/libgit2/tests/patch/print.c	/^void test_patch_print__rename_exact(void)$/;"	f	typeref:typename:void
test_patch_print__rename_exact_quotedname	extern/libgit2/tests/patch/print.c	/^void test_patch_print__rename_exact_quotedname(void)$/;"	f	typeref:typename:void
test_patch_print__rename_similar	extern/libgit2/tests/patch/print.c	/^void test_patch_print__rename_similar(void)$/;"	f	typeref:typename:void
test_patch_print__rename_similar_quotedname	extern/libgit2/tests/patch/print.c	/^void test_patch_print__rename_similar_quotedname(void)$/;"	f	typeref:typename:void
test_patch_print__to_empty_file	extern/libgit2/tests/patch/print.c	/^void test_patch_print__to_empty_file(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_backslash	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_backslash(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_dos_paths	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_dos_paths(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_dos_paths_withnum	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_dos_paths_withnum(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_dot_and_dotdot	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_dot_and_dotdot(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_dot_git	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_dot_git(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_dotgit_ntfs	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_dotgit_ntfs(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_dotgit_with_hfs_ignorables	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_dotgit_with_hfs_ignorables(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_empty_dir_component	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_empty_dir_component(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_nt_chars	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_nt_chars(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_standard	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_standard(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_trailing_colon	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_trailing_colon(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_trailing_dot	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_trailing_dot(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_trailing_space	extern/libgit2/tests/path/core.c	/^void test_path_core__isvalid_trailing_space(void)$/;"	f	typeref:typename:void
test_path_core__join_unrooted	extern/libgit2/tests/path/core.c	/^void test_path_core__join_unrooted(void)$/;"	f	typeref:typename:void
test_path_core__make_relative	extern/libgit2/tests/path/core.c	/^void test_path_core__make_relative(void)$/;"	f	typeref:typename:void
test_path_dotgit__dotgit_modules	extern/libgit2/tests/path/dotgit.c	/^void test_path_dotgit__dotgit_modules(void)$/;"	f	typeref:typename:void
test_path_dotgit__dotgit_modules_symlink	extern/libgit2/tests/path/dotgit.c	/^void test_path_dotgit__dotgit_modules_symlink(void)$/;"	f	typeref:typename:void
test_path_win32__8dot3_name	extern/libgit2/tests/path/win32.c	/^void test_path_win32__8dot3_name(void)$/;"	f	typeref:typename:void
test_path_win32__absolute_from_no_drive_letter	extern/libgit2/tests/path/win32.c	/^void test_path_win32__absolute_from_no_drive_letter(void)$/;"	f	typeref:typename:void
test_path_win32__absolute_from_relative	extern/libgit2/tests/path/win32.c	/^void test_path_win32__absolute_from_relative(void)$/;"	f	typeref:typename:void
test_path_win32__canonicalize	extern/libgit2/tests/path/win32.c	/^void test_path_win32__canonicalize(void)$/;"	f	typeref:typename:void
test_path_win32__dot_and_dotdot	extern/libgit2/tests/path/win32.c	/^void test_path_win32__dot_and_dotdot(void)$/;"	f	typeref:typename:void
test_path_win32__honors_max_path	extern/libgit2/tests/path/win32.c	/^void test_path_win32__honors_max_path(void)$/;"	f	typeref:typename:void
test_path_win32__remove_namespace	extern/libgit2/tests/path/win32.c	/^void test_path_win32__remove_namespace(void)$/;"	f	typeref:typename:void
test_path_win32__removes_trailing_slash	extern/libgit2/tests/path/win32.c	/^void test_path_win32__removes_trailing_slash(void)$/;"	f	typeref:typename:void
test_path_win32__squashes_multiple_slashes	extern/libgit2/tests/path/win32.c	/^void test_path_win32__squashes_multiple_slashes(void)$/;"	f	typeref:typename:void
test_path_win32__unc	extern/libgit2/tests/path/win32.c	/^void test_path_win32__unc(void)$/;"	f	typeref:typename:void
test_path_win32__utf8_to_utf16	extern/libgit2/tests/path/win32.c	/^void test_path_win32__utf8_to_utf16(void)$/;"	f	typeref:typename:void
test_perf_merge__m1	extern/libgit2/tests/perf/merge.c	/^void test_perf_merge__m1(void)$/;"	f	typeref:typename:void
test_rangelike	extern/libgit2/tests/refs/revparse.c	/^static void test_rangelike(const char *rangelike,$/;"	f	typeref:typename:void	file:
test_read_header	extern/libgit2/tests/odb/loose.c	/^static void test_read_header(object_data *data)$/;"	f	typeref:typename:void	file:
test_read_object	extern/libgit2/tests/odb/loose.c	/^static void test_read_object(object_data *data)$/;"	f	typeref:typename:void	file:
test_readstream_object	extern/libgit2/tests/odb/loose.c	/^static void test_readstream_object(object_data *data, size_t blocksize)$/;"	f	typeref:typename:void	file:
test_rebase_abort__cleanup	extern/libgit2/tests/rebase/abort.c	/^void test_rebase_abort__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_abort__detached_head	extern/libgit2/tests/rebase/abort.c	/^void test_rebase_abort__detached_head(void)$/;"	f	typeref:typename:void
test_rebase_abort__initialize	extern/libgit2/tests/rebase/abort.c	/^void test_rebase_abort__initialize(void)$/;"	f	typeref:typename:void
test_rebase_abort__merge	extern/libgit2/tests/rebase/abort.c	/^void test_rebase_abort__merge(void)$/;"	f	typeref:typename:void
test_rebase_abort__merge_by_id	extern/libgit2/tests/rebase/abort.c	/^void test_rebase_abort__merge_by_id(void)$/;"	f	typeref:typename:void
test_rebase_abort__merge_by_id_immediately_after_init	extern/libgit2/tests/rebase/abort.c	/^void test_rebase_abort__merge_by_id_immediately_after_init(void)$/;"	f	typeref:typename:void
test_rebase_abort__merge_by_revspec	extern/libgit2/tests/rebase/abort.c	/^void test_rebase_abort__merge_by_revspec(void)$/;"	f	typeref:typename:void
test_rebase_abort__merge_immediately_after_init	extern/libgit2/tests/rebase/abort.c	/^void test_rebase_abort__merge_immediately_after_init(void)$/;"	f	typeref:typename:void
test_rebase_abort__old_style_head_file	extern/libgit2/tests/rebase/abort.c	/^void test_rebase_abort__old_style_head_file(void)$/;"	f	typeref:typename:void
test_rebase_inmemory__can_resolve_conflicts	extern/libgit2/tests/rebase/inmemory.c	/^void test_rebase_inmemory__can_resolve_conflicts(void)$/;"	f	typeref:typename:void
test_rebase_inmemory__cleanup	extern/libgit2/tests/rebase/inmemory.c	/^void test_rebase_inmemory__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_inmemory__initialize	extern/libgit2/tests/rebase/inmemory.c	/^void test_rebase_inmemory__initialize(void)$/;"	f	typeref:typename:void
test_rebase_inmemory__no_common_ancestor	extern/libgit2/tests/rebase/inmemory.c	/^void test_rebase_inmemory__no_common_ancestor(void)$/;"	f	typeref:typename:void
test_rebase_inmemory__not_in_rebase_state	extern/libgit2/tests/rebase/inmemory.c	/^void test_rebase_inmemory__not_in_rebase_state(void)$/;"	f	typeref:typename:void
test_rebase_inmemory__with_directories	extern/libgit2/tests/rebase/inmemory.c	/^void test_rebase_inmemory__with_directories(void)$/;"	f	typeref:typename:void
test_rebase_iterator__cleanup	extern/libgit2/tests/rebase/iterator.c	/^void test_rebase_iterator__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_iterator__initialize	extern/libgit2/tests/rebase/iterator.c	/^void test_rebase_iterator__initialize(void)$/;"	f	typeref:typename:void
test_rebase_iterator__iterates	extern/libgit2/tests/rebase/iterator.c	/^void test_rebase_iterator__iterates(void)$/;"	f	typeref:typename:void
test_rebase_iterator__iterates_inmemory	extern/libgit2/tests/rebase/iterator.c	/^void test_rebase_iterator__iterates_inmemory(void)$/;"	f	typeref:typename:void
test_rebase_merge__blocked_when_dirty	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__blocked_when_dirty(void)$/;"	f	typeref:typename:void
test_rebase_merge__cleanup	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_merge__commit	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__commit(void)$/;"	f	typeref:typename:void
test_rebase_merge__commit_drops_already_applied	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__commit_drops_already_applied(void)$/;"	f	typeref:typename:void
test_rebase_merge__commit_updates_rewritten	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__commit_updates_rewritten(void)$/;"	f	typeref:typename:void
test_rebase_merge__commit_with_id	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__commit_with_id(void)$/;"	f	typeref:typename:void
test_rebase_merge__copy_notes_disabled_in_config	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__copy_notes_disabled_in_config(void)$/;"	f	typeref:typename:void
test_rebase_merge__copy_notes_off_by_default	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__copy_notes_off_by_default(void)$/;"	f	typeref:typename:void
test_rebase_merge__copy_notes_specified_in_config	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__copy_notes_specified_in_config(void)$/;"	f	typeref:typename:void
test_rebase_merge__copy_notes_specified_in_options	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__copy_notes_specified_in_options(void)$/;"	f	typeref:typename:void
test_rebase_merge__custom_checkout_options	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__custom_checkout_options(void)$/;"	f	typeref:typename:void
test_rebase_merge__custom_merge_options	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__custom_merge_options(void)$/;"	f	typeref:typename:void
test_rebase_merge__detached_finish	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__detached_finish(void)$/;"	f	typeref:typename:void
test_rebase_merge__finish	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__finish(void)$/;"	f	typeref:typename:void
test_rebase_merge__finish_with_ids	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__finish_with_ids(void)$/;"	f	typeref:typename:void
test_rebase_merge__initialize	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__initialize(void)$/;"	f	typeref:typename:void
test_rebase_merge__next	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__next(void)$/;"	f	typeref:typename:void
test_rebase_merge__next_stops_with_iterover	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__next_stops_with_iterover(void)$/;"	f	typeref:typename:void
test_rebase_merge__next_with_conflicts	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__next_with_conflicts(void)$/;"	f	typeref:typename:void
test_rebase_merge__no_common_ancestor	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__no_common_ancestor(void)$/;"	f	typeref:typename:void
test_rebase_merge__with_directories	extern/libgit2/tests/rebase/merge.c	/^void test_rebase_merge__with_directories(void)$/;"	f	typeref:typename:void
test_rebase_setup__blocked_for_staged_change	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__blocked_for_staged_change(void)$/;"	f	typeref:typename:void
test_rebase_setup__blocked_for_unstaged_change	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__blocked_for_unstaged_change(void)$/;"	f	typeref:typename:void
test_rebase_setup__blocked_when_in_progress	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__blocked_when_in_progress(void)$/;"	f	typeref:typename:void
test_rebase_setup__branch_with_merges	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__branch_with_merges(void)$/;"	f	typeref:typename:void
test_rebase_setup__cleanup	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_setup__initialize	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__initialize(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__merge(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_branch_by_id	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__merge_branch_by_id(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_from_detached	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__merge_from_detached(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_null_branch_uses_HEAD	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__merge_null_branch_uses_HEAD(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_onto_and_upstream	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__merge_onto_and_upstream(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_onto_upstream_and_branch	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__merge_onto_upstream_and_branch(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_onto_upstream_and_branch_by_id	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__merge_onto_upstream_and_branch_by_id(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_root	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__merge_root(void)$/;"	f	typeref:typename:void
test_rebase_setup__not_blocked_for_untracked_add	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__not_blocked_for_untracked_add(void)$/;"	f	typeref:typename:void
test_rebase_setup__orphan_branch	extern/libgit2/tests/rebase/setup.c	/^void test_rebase_setup__orphan_branch(void)$/;"	f	typeref:typename:void
test_rebase_sign__cleanup	extern/libgit2/tests/rebase/sign.c	/^void test_rebase_sign__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_sign__custom_signature_field	extern/libgit2/tests/rebase/sign.c	/^void test_rebase_sign__custom_signature_field(void)$/;"	f	typeref:typename:void
test_rebase_sign__gpg_with_no_field	extern/libgit2/tests/rebase/sign.c	/^void test_rebase_sign__gpg_with_no_field(void)$/;"	f	typeref:typename:void
test_rebase_sign__initialize	extern/libgit2/tests/rebase/sign.c	/^void test_rebase_sign__initialize(void)$/;"	f	typeref:typename:void
test_rebase_sign__passthrough_signing_cb	extern/libgit2/tests/rebase/sign.c	/^void test_rebase_sign__passthrough_signing_cb(void)$/;"	f	typeref:typename:void
test_rebase_submodule__cleanup	extern/libgit2/tests/rebase/submodule.c	/^void test_rebase_submodule__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_submodule__init_untracked	extern/libgit2/tests/rebase/submodule.c	/^void test_rebase_submodule__init_untracked(void)$/;"	f	typeref:typename:void
test_rebase_submodule__initialize	extern/libgit2/tests/rebase/submodule.c	/^void test_rebase_submodule__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_checkedout__head_is_not_checked_out	extern/libgit2/tests/refs/branches/checkedout.c	/^void test_refs_branches_checkedout__head_is_not_checked_out(void)$/;"	f	typeref:typename:void
test_refs_branches_checkedout__master_in_bare_repo_is_not_checked_out	extern/libgit2/tests/refs/branches/checkedout.c	/^void test_refs_branches_checkedout__master_in_bare_repo_is_not_checked_out(void)$/;"	f	typeref:typename:void
test_refs_branches_checkedout__simple_repo	extern/libgit2/tests/refs/branches/checkedout.c	/^void test_refs_branches_checkedout__simple_repo(void)$/;"	f	typeref:typename:void
test_refs_branches_checkedout__worktree	extern/libgit2/tests/refs/branches/checkedout.c	/^void test_refs_branches_checkedout__worktree(void)$/;"	f	typeref:typename:void
test_refs_branches_create__can_create_a_local_branch	extern/libgit2/tests/refs/branches/create.c	/^void test_refs_branches_create__can_create_a_local_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_create__can_create_branch_with_unicode	extern/libgit2/tests/refs/branches/create.c	/^void test_refs_branches_create__can_create_branch_with_unicode(void)$/;"	f	typeref:typename:void
test_refs_branches_create__can_force_create_over_an_existing_branch	extern/libgit2/tests/refs/branches/create.c	/^void test_refs_branches_create__can_force_create_over_an_existing_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_create__can_force_create_over_current_branch_in_bare_repo	extern/libgit2/tests/refs/branches/create.c	/^void test_refs_branches_create__can_force_create_over_current_branch_in_bare_repo(void)$/;"	f	typeref:typename:void
test_refs_branches_create__can_not_create_a_branch_if_its_name_collide_with_an_existing_one	extern/libgit2/tests/refs/branches/create.c	/^void test_refs_branches_create__can_not_create_a_branch_if_its_name_collide_with_an_existing_one/;"	f	typeref:typename:void
test_refs_branches_create__cannot_force_create_over_current_branch_in_nonbare_repo	extern/libgit2/tests/refs/branches/create.c	/^void test_refs_branches_create__cannot_force_create_over_current_branch_in_nonbare_repo(void)$/;"	f	typeref:typename:void
test_refs_branches_create__cleanup	extern/libgit2/tests/refs/branches/create.c	/^void test_refs_branches_create__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_create__creating_a_branch_with_an_invalid_name_returns_EINVALIDSPEC	extern/libgit2/tests/refs/branches/create.c	/^void test_refs_branches_create__creating_a_branch_with_an_invalid_name_returns_EINVALIDSPEC(void/;"	f	typeref:typename:void
test_refs_branches_create__initialize	extern/libgit2/tests/refs/branches/create.c	/^void test_refs_branches_create__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_create__name_vs_namespace	extern/libgit2/tests/refs/branches/create.c	/^void test_refs_branches_create__name_vs_namespace(void)$/;"	f	typeref:typename:void
test_refs_branches_create__name_vs_namespace_fail	extern/libgit2/tests/refs/branches/create.c	/^void test_refs_branches_create__name_vs_namespace_fail(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_delete_a_branch_even_if_HEAD_is_missing	extern/libgit2/tests/refs/branches/delete.c	/^void test_refs_branches_delete__can_delete_a_branch_even_if_HEAD_is_missing(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_delete_a_branch_pointed_at_by_detached_HEAD	extern/libgit2/tests/refs/branches/delete.c	/^void test_refs_branches_delete__can_delete_a_branch_pointed_at_by_detached_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_delete_a_branch_when_HEAD_is_unborn	extern/libgit2/tests/refs/branches/delete.c	/^void test_refs_branches_delete__can_delete_a_branch_when_HEAD_is_unborn(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_delete_a_local_branch	extern/libgit2/tests/refs/branches/delete.c	/^void test_refs_branches_delete__can_delete_a_local_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_delete_a_remote_branch	extern/libgit2/tests/refs/branches/delete.c	/^void test_refs_branches_delete__can_delete_a_remote_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_not_delete_a_branch_pointed_at_by_HEAD	extern/libgit2/tests/refs/branches/delete.c	/^void test_refs_branches_delete__can_not_delete_a_branch_pointed_at_by_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__cleanup	extern/libgit2/tests/refs/branches/delete.c	/^void test_refs_branches_delete__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__deleting_a_branch_removes_related_configuration_data	extern/libgit2/tests/refs/branches/delete.c	/^void test_refs_branches_delete__deleting_a_branch_removes_related_configuration_data(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__initialize	extern/libgit2/tests/refs/branches/delete.c	/^void test_refs_branches_delete__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__removes_empty_folders	extern/libgit2/tests/refs/branches/delete.c	/^void test_refs_branches_delete__removes_empty_folders(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__removes_reflog	extern/libgit2/tests/refs/branches/delete.c	/^void test_refs_branches_delete__removes_reflog(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__can_properly_handle_missing_HEAD	extern/libgit2/tests/refs/branches/ishead.c	/^void test_refs_branches_ishead__can_properly_handle_missing_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__can_properly_handle_unborn_HEAD	extern/libgit2/tests/refs/branches/ishead.c	/^void test_refs_branches_ishead__can_properly_handle_unborn_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__can_tell_if_a_branch_is_not_pointed_at_by_HEAD	extern/libgit2/tests/refs/branches/ishead.c	/^void test_refs_branches_ishead__can_tell_if_a_branch_is_not_pointed_at_by_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__can_tell_if_a_branch_is_pointed_at_by_HEAD	extern/libgit2/tests/refs/branches/ishead.c	/^void test_refs_branches_ishead__can_tell_if_a_branch_is_pointed_at_by_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__cleanup	extern/libgit2/tests/refs/branches/ishead.c	/^void test_refs_branches_ishead__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__initialize	extern/libgit2/tests/refs/branches/ishead.c	/^void test_refs_branches_ishead__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__only_direct_references_are_considered	extern/libgit2/tests/refs/branches/ishead.c	/^void test_refs_branches_ishead__only_direct_references_are_considered(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__wont_be_fooled_by_a_non_branch	extern/libgit2/tests/refs/branches/ishead.c	/^void test_refs_branches_ishead__wont_be_fooled_by_a_non_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__cleanup	extern/libgit2/tests/refs/branches/iterator.c	/^void test_refs_branches_iterator__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__initialize	extern/libgit2/tests/refs/branches/iterator.c	/^void test_refs_branches_iterator__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__mix_of_packed_and_loose	extern/libgit2/tests/refs/branches/iterator.c	/^void test_refs_branches_iterator__mix_of_packed_and_loose(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__retrieve_all_branches	extern/libgit2/tests/refs/branches/iterator.c	/^void test_refs_branches_iterator__retrieve_all_branches(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__retrieve_local_branches	extern/libgit2/tests/refs/branches/iterator.c	/^void test_refs_branches_iterator__retrieve_local_branches(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__retrieve_remote_branches	extern/libgit2/tests/refs/branches/iterator.c	/^void test_refs_branches_iterator__retrieve_remote_branches(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__retrieve_remote_symbolic_HEAD_when_present	extern/libgit2/tests/refs/branches/iterator.c	/^void test_refs_branches_iterator__retrieve_remote_symbolic_HEAD_when_present(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__can_retrieve_a_local_branch_all	extern/libgit2/tests/refs/branches/lookup.c	/^void test_refs_branches_lookup__can_retrieve_a_local_branch_all(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__can_retrieve_a_local_branch_local	extern/libgit2/tests/refs/branches/lookup.c	/^void test_refs_branches_lookup__can_retrieve_a_local_branch_local(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__can_retrieve_a_remote_tracking_branch_all	extern/libgit2/tests/refs/branches/lookup.c	/^void test_refs_branches_lookup__can_retrieve_a_remote_tracking_branch_all(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__can_retrieve_a_remote_tracking_branch_remote	extern/libgit2/tests/refs/branches/lookup.c	/^void test_refs_branches_lookup__can_retrieve_a_remote_tracking_branch_remote(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__cleanup	extern/libgit2/tests/refs/branches/lookup.c	/^void test_refs_branches_lookup__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__initialize	extern/libgit2/tests/refs/branches/lookup.c	/^void test_refs_branches_lookup__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__trying_to_retrieve_a_branch_with_an_invalid_name_returns_EINVALIDSPEC	extern/libgit2/tests/refs/branches/lookup.c	/^void test_refs_branches_lookup__trying_to_retrieve_a_branch_with_an_invalid_name_returns_EINVALI/;"	f	typeref:typename:void
test_refs_branches_lookup__trying_to_retrieve_a_local_branch_remote	extern/libgit2/tests/refs/branches/lookup.c	/^void test_refs_branches_lookup__trying_to_retrieve_a_local_branch_remote(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__trying_to_retrieve_a_remote_tracking_branch_local	extern/libgit2/tests/refs/branches/lookup.c	/^void test_refs_branches_lookup__trying_to_retrieve_a_remote_tracking_branch_local(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__trying_to_retrieve_an_unknown_branch_returns_ENOTFOUND	extern/libgit2/tests/refs/branches/lookup.c	/^void test_refs_branches_lookup__trying_to_retrieve_an_unknown_branch_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_refs_branches_move__can_force_move_over_an_existing_branch	extern/libgit2/tests/refs/branches/move.c	/^void test_refs_branches_move__can_force_move_over_an_existing_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_move__can_move_a_local_branch	extern/libgit2/tests/refs/branches/move.c	/^void test_refs_branches_move__can_move_a_local_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_move__can_move_a_local_branch_to_a_different_namespace	extern/libgit2/tests/refs/branches/move.c	/^void test_refs_branches_move__can_move_a_local_branch_to_a_different_namespace(void)$/;"	f	typeref:typename:void
test_refs_branches_move__can_move_a_local_branch_to_a_partially_colliding_namespace	extern/libgit2/tests/refs/branches/move.c	/^void test_refs_branches_move__can_move_a_local_branch_to_a_partially_colliding_namespace(void)$/;"	f	typeref:typename:void
test_refs_branches_move__can_move_with_unicode	extern/libgit2/tests/refs/branches/move.c	/^void test_refs_branches_move__can_move_with_unicode(void)$/;"	f	typeref:typename:void
test_refs_branches_move__can_not_move_a_branch_if_its_destination_name_collide_with_an_existing_one	extern/libgit2/tests/refs/branches/move.c	/^void test_refs_branches_move__can_not_move_a_branch_if_its_destination_name_collide_with_an_exis/;"	f	typeref:typename:void
test_refs_branches_move__can_not_move_a_non_branch	extern/libgit2/tests/refs/branches/move.c	/^void test_refs_branches_move__can_not_move_a_non_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_move__cleanup	extern/libgit2/tests/refs/branches/move.c	/^void test_refs_branches_move__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_move__initialize	extern/libgit2/tests/refs/branches/move.c	/^void test_refs_branches_move__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_move__moving_a_branch_moves_related_configuration_data	extern/libgit2/tests/refs/branches/move.c	/^void test_refs_branches_move__moving_a_branch_moves_related_configuration_data(void)$/;"	f	typeref:typename:void
test_refs_branches_move__moving_a_branch_with_an_invalid_name_returns_EINVALIDSPEC	extern/libgit2/tests/refs/branches/move.c	/^void test_refs_branches_move__moving_a_branch_with_an_invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_refs_branches_move__moving_the_branch_pointed_at_by_HEAD_updates_HEAD	extern/libgit2/tests/refs/branches/move.c	/^void test_refs_branches_move__moving_the_branch_pointed_at_by_HEAD_updates_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_name__can_get_local_branch_name	extern/libgit2/tests/refs/branches/name.c	/^void test_refs_branches_name__can_get_local_branch_name(void)$/;"	f	typeref:typename:void
test_refs_branches_name__can_get_remote_branch_name	extern/libgit2/tests/refs/branches/name.c	/^void test_refs_branches_name__can_get_remote_branch_name(void)$/;"	f	typeref:typename:void
test_refs_branches_name__cleanup	extern/libgit2/tests/refs/branches/name.c	/^void test_refs_branches_name__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_name__error_when_ref_is_no_branch	extern/libgit2/tests/refs/branches/name.c	/^void test_refs_branches_name__error_when_ref_is_no_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_name__initialize	extern/libgit2/tests/refs/branches/name.c	/^void test_refs_branches_name__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_remote__ambiguous_remote_returns_error	extern/libgit2/tests/refs/branches/remote.c	/^void test_refs_branches_remote__ambiguous_remote_returns_error(void)$/;"	f	typeref:typename:void
test_refs_branches_remote__can_get_remote_for_branch	extern/libgit2/tests/refs/branches/remote.c	/^void test_refs_branches_remote__can_get_remote_for_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_remote__cleanup	extern/libgit2/tests/refs/branches/remote.c	/^void test_refs_branches_remote__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_remote__initialize	extern/libgit2/tests/refs/branches/remote.c	/^void test_refs_branches_remote__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_remote__local_remote_returns_error	extern/libgit2/tests/refs/branches/remote.c	/^void test_refs_branches_remote__local_remote_returns_error(void)$/;"	f	typeref:typename:void
test_refs_branches_remote__no_matching_remote_returns_error	extern/libgit2/tests/refs/branches/remote.c	/^void test_refs_branches_remote__no_matching_remote_returns_error(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__can_retrieve_the_local_upstream_reference_of_a_local_branch	extern/libgit2/tests/refs/branches/upstream.c	/^void test_refs_branches_upstream__can_retrieve_the_local_upstream_reference_of_a_local_branch(vo/;"	f	typeref:typename:void
test_refs_branches_upstream__can_retrieve_the_remote_tracking_reference_of_a_local_branch	extern/libgit2/tests/refs/branches/upstream.c	/^void test_refs_branches_upstream__can_retrieve_the_remote_tracking_reference_of_a_local_branch(v/;"	f	typeref:typename:void
test_refs_branches_upstream__cannot_retrieve_a_remote_upstream_reference_from_a_non_branch	extern/libgit2/tests/refs/branches/upstream.c	/^void test_refs_branches_upstream__cannot_retrieve_a_remote_upstream_reference_from_a_non_branch(/;"	f	typeref:typename:void
test_refs_branches_upstream__cleanup	extern/libgit2/tests/refs/branches/upstream.c	/^void test_refs_branches_upstream__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__initialize	extern/libgit2/tests/refs/branches/upstream.c	/^void test_refs_branches_upstream__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__no_fetch_refspec	extern/libgit2/tests/refs/branches/upstream.c	/^void test_refs_branches_upstream__no_fetch_refspec(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__retrieve_a_remote_tracking_reference_from_a_branch_with_no_remote_returns_GIT_ENOTFOUND	extern/libgit2/tests/refs/branches/upstream.c	/^void test_refs_branches_upstream__retrieve_a_remote_tracking_reference_from_a_branch_with_no_rem/;"	f	typeref:typename:void
test_refs_branches_upstream__set_unset_upstream	extern/libgit2/tests/refs/branches/upstream.c	/^void test_refs_branches_upstream__set_unset_upstream(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__trying_to_retrieve_a_remote_tracking_reference_from_a_branch_with_no_fetchspec_returns_GIT_ENOTFOUND	extern/libgit2/tests/refs/branches/upstream.c	/^void test_refs_branches_upstream__trying_to_retrieve_a_remote_tracking_reference_from_a_branch_w/;"	f	typeref:typename:void
test_refs_branches_upstream__trying_to_retrieve_a_remote_tracking_reference_from_a_plain_local_branch_returns_GIT_ENOTFOUND	extern/libgit2/tests/refs/branches/upstream.c	/^void test_refs_branches_upstream__trying_to_retrieve_a_remote_tracking_reference_from_a_plain_lo/;"	f	typeref:typename:void
test_refs_branches_upstream__upstream_remote	extern/libgit2/tests/refs/branches/upstream.c	/^void test_refs_branches_upstream__upstream_remote(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__upstream_remote_empty_value	extern/libgit2/tests/refs/branches/upstream.c	/^void test_refs_branches_upstream__upstream_remote_empty_value(void)$/;"	f	typeref:typename:void
test_refs_branches_upstreamname__can_retrieve_the_local_upstream_reference_name_of_a_local_branch	extern/libgit2/tests/refs/branches/upstreamname.c	/^void test_refs_branches_upstreamname__can_retrieve_the_local_upstream_reference_name_of_a_local_/;"	f	typeref:typename:void
test_refs_branches_upstreamname__can_retrieve_the_remote_tracking_reference_name_of_a_local_branch	extern/libgit2/tests/refs/branches/upstreamname.c	/^void test_refs_branches_upstreamname__can_retrieve_the_remote_tracking_reference_name_of_a_local/;"	f	typeref:typename:void
test_refs_branches_upstreamname__cleanup	extern/libgit2/tests/refs/branches/upstreamname.c	/^void test_refs_branches_upstreamname__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_upstreamname__initialize	extern/libgit2/tests/refs/branches/upstreamname.c	/^void test_refs_branches_upstreamname__initialize(void)$/;"	f	typeref:typename:void
test_refs_crashes__double_free	extern/libgit2/tests/refs/crashes.c	/^void test_refs_crashes__double_free(void)$/;"	f	typeref:typename:void
test_refs_create__cleanup	extern/libgit2/tests/refs/create.c	/^void test_refs_create__cleanup(void)$/;"	f	typeref:typename:void
test_refs_create__creating_a_loose_ref_with_invalid_windows_name	extern/libgit2/tests/refs/create.c	/^void test_refs_create__creating_a_loose_ref_with_invalid_windows_name(void)$/;"	f	typeref:typename:void
test_refs_create__creating_a_reference_with_an_invalid_name_returns_EINVALIDSPEC	extern/libgit2/tests/refs/create.c	/^void test_refs_create__creating_a_reference_with_an_invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_refs_create__deep_symbolic	extern/libgit2/tests/refs/create.c	/^void test_refs_create__deep_symbolic(void)$/;"	f	typeref:typename:void
test_refs_create__does_not_fsync_by_default	extern/libgit2/tests/refs/create.c	/^void test_refs_create__does_not_fsync_by_default(void)$/;"	f	typeref:typename:void
test_refs_create__existing_dir_propagates_edirectory	extern/libgit2/tests/refs/create.c	/^void test_refs_create__existing_dir_propagates_edirectory(void)$/;"	f	typeref:typename:void
test_refs_create__fsyncs_when_global_opt_set	extern/libgit2/tests/refs/create.c	/^void test_refs_create__fsyncs_when_global_opt_set(void)$/;"	f	typeref:typename:void
test_refs_create__fsyncs_when_repo_config_set	extern/libgit2/tests/refs/create.c	/^void test_refs_create__fsyncs_when_repo_config_set(void)$/;"	f	typeref:typename:void
test_refs_create__initialize	extern/libgit2/tests/refs/create.c	/^void test_refs_create__initialize(void)$/;"	f	typeref:typename:void
test_refs_create__oid	extern/libgit2/tests/refs/create.c	/^void test_refs_create__oid(void)$/;"	f	typeref:typename:void
test_refs_create__oid_unknown_fails_by_default	extern/libgit2/tests/refs/create.c	/^void test_refs_create__oid_unknown_fails_by_default(void)$/;"	f	typeref:typename:void
test_refs_create__oid_unknown_succeeds_without_strict	extern/libgit2/tests/refs/create.c	/^void test_refs_create__oid_unknown_succeeds_without_strict(void)$/;"	f	typeref:typename:void
test_refs_create__propagate_eexists	extern/libgit2/tests/refs/create.c	/^void test_refs_create__propagate_eexists(void)$/;"	f	typeref:typename:void
test_refs_create__symbolic	extern/libgit2/tests/refs/create.c	/^void test_refs_create__symbolic(void)$/;"	f	typeref:typename:void
test_refs_create__symbolic_with_arbitrary_content	extern/libgit2/tests/refs/create.c	/^void test_refs_create__symbolic_with_arbitrary_content(void)$/;"	f	typeref:typename:void
test_refs_delete__cleanup	extern/libgit2/tests/refs/delete.c	/^void test_refs_delete__cleanup(void)$/;"	f	typeref:typename:void
test_refs_delete__initialize	extern/libgit2/tests/refs/delete.c	/^void test_refs_delete__initialize(void)$/;"	f	typeref:typename:void
test_refs_delete__packed_loose	extern/libgit2/tests/refs/delete.c	/^void test_refs_delete__packed_loose(void)$/;"	f	typeref:typename:void
test_refs_delete__packed_only	extern/libgit2/tests/refs/delete.c	/^void test_refs_delete__packed_only(void)$/;"	f	typeref:typename:void
test_refs_delete__remove	extern/libgit2/tests/refs/delete.c	/^void test_refs_delete__remove(void)$/;"	f	typeref:typename:void
test_refs_dup__cleanup	extern/libgit2/tests/refs/dup.c	/^void test_refs_dup__cleanup(void)$/;"	f	typeref:typename:void
test_refs_dup__direct	extern/libgit2/tests/refs/dup.c	/^void test_refs_dup__direct(void)$/;"	f	typeref:typename:void
test_refs_dup__initialize	extern/libgit2/tests/refs/dup.c	/^void test_refs_dup__initialize(void)$/;"	f	typeref:typename:void
test_refs_dup__symbolic	extern/libgit2/tests/refs/dup.c	/^void test_refs_dup__symbolic(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__can_cancel	extern/libgit2/tests/refs/foreachglob.c	/^void test_refs_foreachglob__can_cancel(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__cleanup	extern/libgit2/tests/refs/foreachglob.c	/^void test_refs_foreachglob__cleanup(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__initialize	extern/libgit2/tests/refs/foreachglob.c	/^void test_refs_foreachglob__initialize(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__retrieve_all_refs	extern/libgit2/tests/refs/foreachglob.c	/^void test_refs_foreachglob__retrieve_all_refs(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__retrieve_local_branches	extern/libgit2/tests/refs/foreachglob.c	/^void test_refs_foreachglob__retrieve_local_branches(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__retrieve_nonexistant	extern/libgit2/tests/refs/foreachglob.c	/^void test_refs_foreachglob__retrieve_nonexistant(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__retrieve_partially_named_references	extern/libgit2/tests/refs/foreachglob.c	/^void test_refs_foreachglob__retrieve_partially_named_references(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__retrieve_remote_branches	extern/libgit2/tests/refs/foreachglob.c	/^void test_refs_foreachglob__retrieve_remote_branches(void)$/;"	f	typeref:typename:void
test_refs_isvalidname__can_detect_invalid_formats	extern/libgit2/tests/refs/isvalidname.c	/^void test_refs_isvalidname__can_detect_invalid_formats(void)$/;"	f	typeref:typename:void
test_refs_isvalidname__wont_hopefully_choke_on_valid_formats	extern/libgit2/tests/refs/isvalidname.c	/^void test_refs_isvalidname__wont_hopefully_choke_on_valid_formats(void)$/;"	f	typeref:typename:void
test_refs_iterator__cleanup	extern/libgit2/tests/refs/iterator.c	/^void test_refs_iterator__cleanup(void)$/;"	f	typeref:typename:void
test_refs_iterator__concurrent_delete	extern/libgit2/tests/refs/iterator.c	/^void test_refs_iterator__concurrent_delete(void)$/;"	f	typeref:typename:void
test_refs_iterator__empty	extern/libgit2/tests/refs/iterator.c	/^void test_refs_iterator__empty(void)$/;"	f	typeref:typename:void
test_refs_iterator__foreach	extern/libgit2/tests/refs/iterator.c	/^void test_refs_iterator__foreach(void)$/;"	f	typeref:typename:void
test_refs_iterator__foreach_can_cancel	extern/libgit2/tests/refs/iterator.c	/^void test_refs_iterator__foreach_can_cancel(void)$/;"	f	typeref:typename:void
test_refs_iterator__foreach_name	extern/libgit2/tests/refs/iterator.c	/^void test_refs_iterator__foreach_name(void)$/;"	f	typeref:typename:void
test_refs_iterator__foreach_name_can_cancel	extern/libgit2/tests/refs/iterator.c	/^void test_refs_iterator__foreach_name_can_cancel(void)$/;"	f	typeref:typename:void
test_refs_iterator__foreach_through_symlink	extern/libgit2/tests/refs/iterator.c	/^void test_refs_iterator__foreach_through_symlink(void)$/;"	f	typeref:typename:void
test_refs_iterator__initialize	extern/libgit2/tests/refs/iterator.c	/^void test_refs_iterator__initialize(void)$/;"	f	typeref:typename:void
test_refs_iterator__list	extern/libgit2/tests/refs/iterator.c	/^void test_refs_iterator__list(void)$/;"	f	typeref:typename:void
test_refs_list__all	extern/libgit2/tests/refs/list.c	/^void test_refs_list__all(void)$/;"	f	typeref:typename:void
test_refs_list__cleanup	extern/libgit2/tests/refs/list.c	/^void test_refs_list__cleanup(void)$/;"	f	typeref:typename:void
test_refs_list__do_not_retrieve_references_which_name_end_with_a_lock_extension	extern/libgit2/tests/refs/list.c	/^void test_refs_list__do_not_retrieve_references_which_name_end_with_a_lock_extension(void)$/;"	f	typeref:typename:void
test_refs_list__initialize	extern/libgit2/tests/refs/list.c	/^void test_refs_list__initialize(void)$/;"	f	typeref:typename:void
test_refs_listall__from_repository_opened_through_gitdir_path	extern/libgit2/tests/refs/listall.c	/^void test_refs_listall__from_repository_opened_through_gitdir_path(void)$/;"	f	typeref:typename:void
test_refs_listall__from_repository_opened_through_workdir_path	extern/libgit2/tests/refs/listall.c	/^void test_refs_listall__from_repository_opened_through_workdir_path(void)$/;"	f	typeref:typename:void
test_refs_listall__from_repository_with_no_trailing_newline	extern/libgit2/tests/refs/listall.c	/^void test_refs_listall__from_repository_with_no_trailing_newline(void)$/;"	f	typeref:typename:void
test_refs_lookup__cleanup	extern/libgit2/tests/refs/lookup.c	/^void test_refs_lookup__cleanup(void)$/;"	f	typeref:typename:void
test_refs_lookup__dwim_notfound	extern/libgit2/tests/refs/lookup.c	/^void test_refs_lookup__dwim_notfound(void)$/;"	f	typeref:typename:void
test_refs_lookup__initialize	extern/libgit2/tests/refs/lookup.c	/^void test_refs_lookup__initialize(void)$/;"	f	typeref:typename:void
test_refs_lookup__invalid_name	extern/libgit2/tests/refs/lookup.c	/^void test_refs_lookup__invalid_name(void)$/;"	f	typeref:typename:void
test_refs_lookup__namespace	extern/libgit2/tests/refs/lookup.c	/^void test_refs_lookup__namespace(void)$/;"	f	typeref:typename:void
test_refs_lookup__oid	extern/libgit2/tests/refs/lookup.c	/^void test_refs_lookup__oid(void)$/;"	f	typeref:typename:void
test_refs_lookup__with_resolve	extern/libgit2/tests/refs/lookup.c	/^void test_refs_lookup__with_resolve(void)$/;"	f	typeref:typename:void
test_refs_namespaces__cleanup	extern/libgit2/tests/refs/namespaces.c	/^void test_refs_namespaces__cleanup(void)$/;"	f	typeref:typename:void
test_refs_namespaces__get_and_set	extern/libgit2/tests/refs/namespaces.c	/^void test_refs_namespaces__get_and_set(void)$/;"	f	typeref:typename:void
test_refs_namespaces__initialize	extern/libgit2/tests/refs/namespaces.c	/^void test_refs_namespaces__initialize(void)$/;"	f	typeref:typename:void
test_refs_namespaces__namespace_doesnt_show_normal_refs	extern/libgit2/tests/refs/namespaces.c	/^void test_refs_namespaces__namespace_doesnt_show_normal_refs(void)$/;"	f	typeref:typename:void
test_refs_normalize__buffer_has_to_be_big_enough_to_hold_the_normalized_version	extern/libgit2/tests/refs/normalize.c	/^void test_refs_normalize__buffer_has_to_be_big_enough_to_hold_the_normalized_version(void)$/;"	f	typeref:typename:void
test_refs_normalize__can_normalize_a_direct_reference_name	extern/libgit2/tests/refs/normalize.c	/^void test_refs_normalize__can_normalize_a_direct_reference_name(void)$/;"	f	typeref:typename:void
test_refs_normalize__cannot_normalize_any_direct_reference_name	extern/libgit2/tests/refs/normalize.c	/^void test_refs_normalize__cannot_normalize_any_direct_reference_name(void)$/;"	f	typeref:typename:void
test_refs_normalize__jgit_suite	extern/libgit2/tests/refs/normalize.c	/^void test_refs_normalize__jgit_suite(void)$/;"	f	typeref:typename:void
test_refs_normalize__refspec_pattern	extern/libgit2/tests/refs/normalize.c	/^void test_refs_normalize__refspec_pattern(void)$/;"	f	typeref:typename:void
test_refs_normalize__symbolic	extern/libgit2/tests/refs/normalize.c	/^void test_refs_normalize__symbolic(void)$/;"	f	typeref:typename:void
test_refs_overwrite__cleanup	extern/libgit2/tests/refs/overwrite.c	/^void test_refs_overwrite__cleanup(void)$/;"	f	typeref:typename:void
test_refs_overwrite__initialize	extern/libgit2/tests/refs/overwrite.c	/^void test_refs_overwrite__initialize(void)$/;"	f	typeref:typename:void
test_refs_overwrite__object_id	extern/libgit2/tests/refs/overwrite.c	/^void test_refs_overwrite__object_id(void)$/;"	f	typeref:typename:void
test_refs_overwrite__object_id_with_symbolic	extern/libgit2/tests/refs/overwrite.c	/^void test_refs_overwrite__object_id_with_symbolic(void)$/;"	f	typeref:typename:void
test_refs_overwrite__symbolic	extern/libgit2/tests/refs/overwrite.c	/^void test_refs_overwrite__symbolic(void)$/;"	f	typeref:typename:void
test_refs_overwrite__symbolic_with_object_id	extern/libgit2/tests/refs/overwrite.c	/^void test_refs_overwrite__symbolic_with_object_id(void)$/;"	f	typeref:typename:void
test_refs_pack__cleanup	extern/libgit2/tests/refs/pack.c	/^void test_refs_pack__cleanup(void)$/;"	f	typeref:typename:void
test_refs_pack__empty	extern/libgit2/tests/refs/pack.c	/^void test_refs_pack__empty(void)$/;"	f	typeref:typename:void
test_refs_pack__initialize	extern/libgit2/tests/refs/pack.c	/^void test_refs_pack__initialize(void)$/;"	f	typeref:typename:void
test_refs_pack__loose	extern/libgit2/tests/refs/pack.c	/^void test_refs_pack__loose(void)$/;"	f	typeref:typename:void
test_refs_pack__symbolic	extern/libgit2/tests/refs/pack.c	/^void test_refs_pack__symbolic(void)$/;"	f	typeref:typename:void
test_refs_peel__can_peel_a_branch	extern/libgit2/tests/refs/peel.c	/^void test_refs_peel__can_peel_a_branch(void)$/;"	f	typeref:typename:void
test_refs_peel__can_peel_a_symbolic_reference	extern/libgit2/tests/refs/peel.c	/^void test_refs_peel__can_peel_a_symbolic_reference(void)$/;"	f	typeref:typename:void
test_refs_peel__can_peel_a_tag	extern/libgit2/tests/refs/peel.c	/^void test_refs_peel__can_peel_a_tag(void)$/;"	f	typeref:typename:void
test_refs_peel__can_peel_fully_peeled_packed_refs	extern/libgit2/tests/refs/peel.c	/^void test_refs_peel__can_peel_fully_peeled_packed_refs(void)$/;"	f	typeref:typename:void
test_refs_peel__can_peel_fully_peeled_tag_to_tag	extern/libgit2/tests/refs/peel.c	/^void test_refs_peel__can_peel_fully_peeled_tag_to_tag(void)$/;"	f	typeref:typename:void
test_refs_peel__can_peel_into_any_non_tag_object	extern/libgit2/tests/refs/peel.c	/^void test_refs_peel__can_peel_into_any_non_tag_object(void)$/;"	f	typeref:typename:void
test_refs_peel__cannot_peel_into_a_non_existing_target	extern/libgit2/tests/refs/peel.c	/^void test_refs_peel__cannot_peel_into_a_non_existing_target(void)$/;"	f	typeref:typename:void
test_refs_peel__cleanup	extern/libgit2/tests/refs/peel.c	/^void test_refs_peel__cleanup(void)$/;"	f	typeref:typename:void
test_refs_peel__initialize	extern/libgit2/tests/refs/peel.c	/^void test_refs_peel__initialize(void)$/;"	f	typeref:typename:void
test_refs_races__cleanup	extern/libgit2/tests/refs/races.c	/^void test_refs_races__cleanup(void)$/;"	f	typeref:typename:void
test_refs_races__create_matching	extern/libgit2/tests/refs/races.c	/^void test_refs_races__create_matching(void)$/;"	f	typeref:typename:void
test_refs_races__delete	extern/libgit2/tests/refs/races.c	/^void test_refs_races__delete(void)$/;"	f	typeref:typename:void
test_refs_races__initialize	extern/libgit2/tests/refs/races.c	/^void test_refs_races__initialize(void)$/;"	f	typeref:typename:void
test_refs_races__switch_oid_to_symbolic	extern/libgit2/tests/refs/races.c	/^void test_refs_races__switch_oid_to_symbolic(void)$/;"	f	typeref:typename:void
test_refs_races__switch_symbolic_to_oid	extern/libgit2/tests/refs/races.c	/^void test_refs_races__switch_symbolic_to_oid(void)$/;"	f	typeref:typename:void
test_refs_races__symbolic_create_matching	extern/libgit2/tests/refs/races.c	/^void test_refs_races__symbolic_create_matching(void)$/;"	f	typeref:typename:void
test_refs_read__can_determine_if_a_reference_is_a_local_branch	extern/libgit2/tests/refs/read.c	/^void test_refs_read__can_determine_if_a_reference_is_a_local_branch(void)$/;"	f	typeref:typename:void
test_refs_read__can_determine_if_a_reference_is_a_note	extern/libgit2/tests/refs/read.c	/^void test_refs_read__can_determine_if_a_reference_is_a_note(void)$/;"	f	typeref:typename:void
test_refs_read__can_determine_if_a_reference_is_a_tag	extern/libgit2/tests/refs/read.c	/^void test_refs_read__can_determine_if_a_reference_is_a_tag(void)$/;"	f	typeref:typename:void
test_refs_read__chomped	extern/libgit2/tests/refs/read.c	/^void test_refs_read__chomped(void)$/;"	f	typeref:typename:void
test_refs_read__cleanup	extern/libgit2/tests/refs/read.c	/^void test_refs_read__cleanup(void)$/;"	f	typeref:typename:void
test_refs_read__head_then_master	extern/libgit2/tests/refs/read.c	/^void test_refs_read__head_then_master(void)$/;"	f	typeref:typename:void
test_refs_read__initialize	extern/libgit2/tests/refs/read.c	/^void test_refs_read__initialize(void)$/;"	f	typeref:typename:void
test_refs_read__invalid_name_returns_EINVALIDSPEC	extern/libgit2/tests/refs/read.c	/^void test_refs_read__invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_refs_read__loose_first	extern/libgit2/tests/refs/read.c	/^void test_refs_read__loose_first(void)$/;"	f	typeref:typename:void
test_refs_read__loose_tag	extern/libgit2/tests/refs/read.c	/^void test_refs_read__loose_tag(void)$/;"	f	typeref:typename:void
test_refs_read__master_then_head	extern/libgit2/tests/refs/read.c	/^void test_refs_read__master_then_head(void)$/;"	f	typeref:typename:void
test_refs_read__nested_symbolic	extern/libgit2/tests/refs/read.c	/^void test_refs_read__nested_symbolic(void)$/;"	f	typeref:typename:void
test_refs_read__nonexisting_tag	extern/libgit2/tests/refs/read.c	/^void test_refs_read__nonexisting_tag(void)$/;"	f	typeref:typename:void
test_refs_read__packed	extern/libgit2/tests/refs/read.c	/^void test_refs_read__packed(void)$/;"	f	typeref:typename:void
test_refs_read__symbolic	extern/libgit2/tests/refs/read.c	/^void test_refs_read__symbolic(void)$/;"	f	typeref:typename:void
test_refs_read__trailing	extern/libgit2/tests/refs/read.c	/^void test_refs_read__trailing(void)$/;"	f	typeref:typename:void
test_refs_read__unfound_return_ENOTFOUND	extern/libgit2/tests/refs/read.c	/^void test_refs_read__unfound_return_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__can_drop_all_the_entries	extern/libgit2/tests/refs/reflog/drop.c	/^void test_refs_reflog_drop__can_drop_all_the_entries(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__can_drop_an_entry	extern/libgit2/tests/refs/reflog/drop.c	/^void test_refs_reflog_drop__can_drop_an_entry(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__can_drop_an_entry_and_rewrite_the_log_history	extern/libgit2/tests/refs/reflog/drop.c	/^void test_refs_reflog_drop__can_drop_an_entry_and_rewrite_the_log_history(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__can_drop_the_oldest_entry	extern/libgit2/tests/refs/reflog/drop.c	/^void test_refs_reflog_drop__can_drop_the_oldest_entry(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__can_drop_the_oldest_entry_and_rewrite_the_log_history	extern/libgit2/tests/refs/reflog/drop.c	/^void test_refs_reflog_drop__can_drop_the_oldest_entry_and_rewrite_the_log_history(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__can_persist_deletion_on_disk	extern/libgit2/tests/refs/reflog/drop.c	/^void test_refs_reflog_drop__can_persist_deletion_on_disk(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__cleanup	extern/libgit2/tests/refs/reflog/drop.c	/^void test_refs_reflog_drop__cleanup(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__dropping_a_non_exisiting_entry_from_the_log_returns_ENOTFOUND	extern/libgit2/tests/refs/reflog/drop.c	/^void test_refs_reflog_drop__dropping_a_non_exisiting_entry_from_the_log_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__initialize	extern/libgit2/tests/refs/reflog/drop.c	/^void test_refs_reflog_drop__initialize(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__branch_birth	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__branch_birth(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__cleanup	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__cleanup(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__commit_on_symbolic_ref_updates_head_reflog	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__commit_on_symbolic_ref_updates_head_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__creating_a_direct_reference	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__creating_a_direct_reference(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__creating_branches_default_messages	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__creating_branches_default_messages(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__detaching_head_default_message	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__detaching_head_default_message(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__detaching_writes_reflog	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__detaching_writes_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__initialize	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__initialize(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__moving_branch_default_message	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__moving_branch_default_message(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__orphan_branch_does_not_count	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__orphan_branch_does_not_count(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__renaming_ref	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__renaming_ref(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__setting_head_to_same_target_ignores_reflog	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__setting_head_to_same_target_ignores_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__setting_head_updates_reflog	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__setting_head_updates_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__show_merge_for_merge_commits	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__show_merge_for_merge_commits(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__updating_a_direct_reference	extern/libgit2/tests/refs/reflog/messages.c	/^void test_refs_reflog_messages__updating_a_direct_reference(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__append_then_read	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__append_then_read(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__append_to_HEAD_when_changing_current_branch	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__append_to_HEAD_when_changing_current_branch(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__cannot_write_a_moved_reflog	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__cannot_write_a_moved_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__cleanup	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__cleanup(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__deleting_the_reference_deletes_the_reflog	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__deleting_the_reference_deletes_the_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__do_not_append_when_no_update	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__do_not_append_when_no_update(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__fails_gracefully_on_nonempty_reflog_dir	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__fails_gracefully_on_nonempty_reflog_dir(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__initialize	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__initialize(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__logallrefupdates_bare_set_always	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__logallrefupdates_bare_set_always(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__logallrefupdates_bare_set_false	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__logallrefupdates_bare_set_false(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__logallrefupdates_bare_unset	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__logallrefupdates_bare_unset(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__logallrefupdates_nonbare_set_false	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__logallrefupdates_nonbare_set_false(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__reading_a_reflog_with_invalid_format_returns_error	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__reading_a_reflog_with_invalid_format_returns_error(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__reading_the_reflog_from_a_reference_with_no_log_returns_an_empty_one	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__reading_the_reflog_from_a_reference_with_no_log_returns_an_empty_o/;"	f	typeref:typename:void
test_refs_reflog_reflog__reference_has_reflog	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__reference_has_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__removes_empty_reflog_dir	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__removes_empty_reflog_dir(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__renaming_the_reference_moves_the_reflog	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__renaming_the_reference_moves_the_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__renaming_with_an_invalid_name_returns_EINVALIDSPEC	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__renaming_with_an_invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__write_only_std_locations	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__write_only_std_locations(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__write_when_explicitly_active	extern/libgit2/tests/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__write_when_explicitly_active(void)$/;"	f	typeref:typename:void
test_refs_rename__cleanup	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__cleanup(void)$/;"	f	typeref:typename:void
test_refs_rename__force_loose	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__force_loose(void)$/;"	f	typeref:typename:void
test_refs_rename__force_loose_packed	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__force_loose_packed(void)$/;"	f	typeref:typename:void
test_refs_rename__initialize	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__initialize(void)$/;"	f	typeref:typename:void
test_refs_rename__invalid_name	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__invalid_name(void)$/;"	f	typeref:typename:void
test_refs_rename__loose	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__loose(void)$/;"	f	typeref:typename:void
test_refs_rename__move_up	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__move_up(void)$/;"	f	typeref:typename:void
test_refs_rename__name_collision	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__name_collision(void)$/;"	f	typeref:typename:void
test_refs_rename__overwrite	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__overwrite(void)$/;"	f	typeref:typename:void
test_refs_rename__packed	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__packed(void)$/;"	f	typeref:typename:void
test_refs_rename__packed_doesnt_pack_others	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__packed_doesnt_pack_others(void)$/;"	f	typeref:typename:void
test_refs_rename__prefix	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__prefix(void)$/;"	f	typeref:typename:void
test_refs_rename__propagate_eexists	extern/libgit2/tests/refs/rename.c	/^void test_refs_rename__propagate_eexists(void)$/;"	f	typeref:typename:void
test_refs_revparse__a_not_precise_enough_objectid_returns_EAMBIGUOUS	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__a_not_precise_enough_objectid_returns_EAMBIGUOUS(void)$/;"	f	typeref:typename:void
test_refs_revparse__a_too_short_objectid_returns_EAMBIGUOUS	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__a_too_short_objectid_returns_EAMBIGUOUS(void)$/;"	f	typeref:typename:void
test_refs_revparse__chaining	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__chaining(void)$/;"	f	typeref:typename:void
test_refs_revparse__cleanup	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__cleanup(void)$/;"	f	typeref:typename:void
test_refs_revparse__colon	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__colon(void)$/;"	f	typeref:typename:void
test_refs_revparse__date	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__date(void)$/;"	f	typeref:typename:void
test_refs_revparse__describe_output	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__describe_output(void)$/;"	f	typeref:typename:void
test_refs_revparse__disambiguation	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__disambiguation(void)$/;"	f	typeref:typename:void
test_refs_revparse__ext_can_expand_short_reference_names	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__ext_can_expand_short_reference_names(void)$/;"	f	typeref:typename:void
test_refs_revparse__ext_retrieves_both_the_reference_and_its_target	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__ext_retrieves_both_the_reference_and_its_target(void)$/;"	f	typeref:typename:void
test_refs_revparse__ext_returns_NULL_reference_when_expression_points_at_a_revision	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__ext_returns_NULL_reference_when_expression_points_at_a_revision(void)$/;"	f	typeref:typename:void
test_refs_revparse__ext_returns_NULL_reference_when_expression_points_at_a_tree_content	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__ext_returns_NULL_reference_when_expression_points_at_a_tree_content(voi/;"	f	typeref:typename:void
test_refs_revparse__full_refs	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__full_refs(void)$/;"	f	typeref:typename:void
test_refs_revparse__head	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__head(void)$/;"	f	typeref:typename:void
test_refs_revparse__initialize	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__initialize(void)$/;"	f	typeref:typename:void
test_refs_revparse__invalid_reference_name	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__invalid_reference_name(void)$/;"	f	typeref:typename:void
test_refs_revparse__issue_994	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__issue_994(void)$/;"	f	typeref:typename:void
test_refs_revparse__linear_history	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__linear_history(void)$/;"	f	typeref:typename:void
test_refs_revparse__nonexistant_object	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__nonexistant_object(void)$/;"	f	typeref:typename:void
test_refs_revparse__not_tag	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__not_tag(void)$/;"	f	typeref:typename:void
test_refs_revparse__nth_parent	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__nth_parent(void)$/;"	f	typeref:typename:void
test_refs_revparse__ordinal	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__ordinal(void)$/;"	f	typeref:typename:void
test_refs_revparse__parses_range_operator	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__parses_range_operator(void)$/;"	f	typeref:typename:void
test_refs_revparse__partial_refs	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__partial_refs(void)$/;"	f	typeref:typename:void
test_refs_revparse__previous_head	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__previous_head(void)$/;"	f	typeref:typename:void
test_refs_revparse__range	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__range(void)$/;"	f	typeref:typename:void
test_refs_revparse__reflog_of_a_ref_under_refs	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__reflog_of_a_ref_under_refs(void)$/;"	f	typeref:typename:void
test_refs_revparse__revwalk	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__revwalk(void)$/;"	f	typeref:typename:void
test_refs_revparse__shas	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__shas(void)$/;"	f	typeref:typename:void
test_refs_revparse__to_type	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__to_type(void)$/;"	f	typeref:typename:void
test_refs_revparse__try_to_retrieve_branch_before_abbrev_sha	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__try_to_retrieve_branch_before_abbrev_sha(void)$/;"	f	typeref:typename:void
test_refs_revparse__try_to_retrieve_branch_before_described_tag	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__try_to_retrieve_branch_before_described_tag(void)$/;"	f	typeref:typename:void
test_refs_revparse__try_to_retrieve_sha_before_branch	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__try_to_retrieve_sha_before_branch(void)$/;"	f	typeref:typename:void
test_refs_revparse__uneven_sizes	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__uneven_sizes(void)$/;"	f	typeref:typename:void
test_refs_revparse__upstream	extern/libgit2/tests/refs/revparse.c	/^void test_refs_revparse__upstream(void)$/;"	f	typeref:typename:void
test_refs_setter__cant_update_direct_with_symbolic	extern/libgit2/tests/refs/setter.c	/^void test_refs_setter__cant_update_direct_with_symbolic(void)$/;"	f	typeref:typename:void
test_refs_setter__cant_update_symbolic_with_direct	extern/libgit2/tests/refs/setter.c	/^void test_refs_setter__cant_update_symbolic_with_direct(void)$/;"	f	typeref:typename:void
test_refs_setter__cleanup	extern/libgit2/tests/refs/setter.c	/^void test_refs_setter__cleanup(void)$/;"	f	typeref:typename:void
test_refs_setter__initialize	extern/libgit2/tests/refs/setter.c	/^void test_refs_setter__initialize(void)$/;"	f	typeref:typename:void
test_refs_setter__update_direct	extern/libgit2/tests/refs/setter.c	/^void test_refs_setter__update_direct(void)$/;"	f	typeref:typename:void
test_refs_setter__update_symbolic	extern/libgit2/tests/refs/setter.c	/^void test_refs_setter__update_symbolic(void)$/;"	f	typeref:typename:void
test_refs_shorthand__0	extern/libgit2/tests/refs/shorthand.c	/^void test_refs_shorthand__0(void)$/;"	f	typeref:typename:void
test_refs_transactions__cleanup	extern/libgit2/tests/refs/transactions.c	/^void test_refs_transactions__cleanup(void)$/;"	f	typeref:typename:void
test_refs_transactions__initialize	extern/libgit2/tests/refs/transactions.c	/^void test_refs_transactions__initialize(void)$/;"	f	typeref:typename:void
test_refs_transactions__single_create	extern/libgit2/tests/refs/transactions.c	/^void test_refs_transactions__single_create(void)$/;"	f	typeref:typename:void
test_refs_transactions__single_ref_delete	extern/libgit2/tests/refs/transactions.c	/^void test_refs_transactions__single_ref_delete(void)$/;"	f	typeref:typename:void
test_refs_transactions__single_ref_mix_types	extern/libgit2/tests/refs/transactions.c	/^void test_refs_transactions__single_ref_mix_types(void)$/;"	f	typeref:typename:void
test_refs_transactions__single_ref_oid	extern/libgit2/tests/refs/transactions.c	/^void test_refs_transactions__single_ref_oid(void)$/;"	f	typeref:typename:void
test_refs_transactions__single_ref_symbolic	extern/libgit2/tests/refs/transactions.c	/^void test_refs_transactions__single_ref_symbolic(void)$/;"	f	typeref:typename:void
test_refs_transactions__unlocked_set	extern/libgit2/tests/refs/transactions.c	/^void test_refs_transactions__unlocked_set(void)$/;"	f	typeref:typename:void
test_refs_unicode__cleanup	extern/libgit2/tests/refs/unicode.c	/^void test_refs_unicode__cleanup(void)$/;"	f	typeref:typename:void
test_refs_unicode__create_and_lookup	extern/libgit2/tests/refs/unicode.c	/^void test_refs_unicode__create_and_lookup(void)$/;"	f	typeref:typename:void
test_refs_unicode__initialize	extern/libgit2/tests/refs/unicode.c	/^void test_refs_unicode__initialize(void)$/;"	f	typeref:typename:void
test_refs_update__cleanup	extern/libgit2/tests/refs/update.c	/^void test_refs_update__cleanup(void)$/;"	f	typeref:typename:void
test_refs_update__initialize	extern/libgit2/tests/refs/update.c	/^void test_refs_update__initialize(void)$/;"	f	typeref:typename:void
test_refs_update__updating_the_target_of_a_symref_with_an_invalid_name_returns_EINVALIDSPEC	extern/libgit2/tests/refs/update.c	/^void test_refs_update__updating_the_target_of_a_symref_with_an_invalid_name_returns_EINVALIDSPEC/;"	f	typeref:typename:void
test_remote_create__anonymous	extern/libgit2/tests/remote/create.c	/^void test_remote_create__anonymous(void)$/;"	f	typeref:typename:void
test_remote_create__anonymous_invalid_url	extern/libgit2/tests/remote/create.c	/^void test_remote_create__anonymous_invalid_url(void)$/;"	f	typeref:typename:void
test_remote_create__cleanup	extern/libgit2/tests/remote/create.c	/^void test_remote_create__cleanup(void)$/;"	f	typeref:typename:void
test_remote_create__detached	extern/libgit2/tests/remote/create.c	/^void test_remote_create__detached(void)$/;"	f	typeref:typename:void
test_remote_create__detached_invalid_url	extern/libgit2/tests/remote/create.c	/^void test_remote_create__detached_invalid_url(void)$/;"	f	typeref:typename:void
test_remote_create__initialize	extern/libgit2/tests/remote/create.c	/^void test_remote_create__initialize(void)$/;"	f	typeref:typename:void
test_remote_create__manual	extern/libgit2/tests/remote/create.c	/^void test_remote_create__manual(void)$/;"	f	typeref:typename:void
test_remote_create__named	extern/libgit2/tests/remote/create.c	/^void test_remote_create__named(void)$/;"	f	typeref:typename:void
test_remote_create__named_fail_on_conflicting_name	extern/libgit2/tests/remote/create.c	/^void test_remote_create__named_fail_on_conflicting_name(void)$/;"	f	typeref:typename:void
test_remote_create__named_fail_on_invalid_name	extern/libgit2/tests/remote/create.c	/^void test_remote_create__named_fail_on_invalid_name(void)$/;"	f	typeref:typename:void
test_remote_create__named_fail_on_invalid_url	extern/libgit2/tests/remote/create.c	/^void test_remote_create__named_fail_on_invalid_url(void)$/;"	f	typeref:typename:void
test_remote_create__with_empty_fetchspec	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_empty_fetchspec(void)$/;"	f	typeref:typename:void
test_remote_create__with_fetchspec	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_fetchspec(void)$/;"	f	typeref:typename:void
test_remote_create__with_fetchspec_invalid_name	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_fetchspec_invalid_name(void)$/;"	f	typeref:typename:void
test_remote_create__with_fetchspec_invalid_url	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_fetchspec_invalid_url(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_anonymous	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_opts_anonymous(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_conflicting_name	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_opts_conflicting_name(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_detached	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_opts_detached(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_insteadof_disabled	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_opts_insteadof_disabled(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_invalid_name	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_opts_invalid_name(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_invalid_url	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_opts_invalid_url(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_named	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_opts_named(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_named_and_fetchspec	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_opts_named_and_fetchspec(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_named_no_fetchspec	extern/libgit2/tests/remote/create.c	/^void test_remote_create__with_opts_named_no_fetchspec(void)$/;"	f	typeref:typename:void
test_remote_insteadof__anonymous_remote	extern/libgit2/tests/remote/insteadof.c	/^void test_remote_insteadof__anonymous_remote(void)$/;"	f	typeref:typename:void
test_remote_insteadof__cleanup	extern/libgit2/tests/remote/insteadof.c	/^void test_remote_insteadof__cleanup(void)$/;"	f	typeref:typename:void
test_remote_insteadof__initialize	extern/libgit2/tests/remote/insteadof.c	/^void test_remote_insteadof__initialize(void)$/;"	f	typeref:typename:void
test_remote_insteadof__pushurl_insteadof_applicable	extern/libgit2/tests/remote/insteadof.c	/^void test_remote_insteadof__pushurl_insteadof_applicable(void)$/;"	f	typeref:typename:void
test_remote_insteadof__pushurl_insteadof_not_applicable	extern/libgit2/tests/remote/insteadof.c	/^void test_remote_insteadof__pushurl_insteadof_not_applicable(void)$/;"	f	typeref:typename:void
test_remote_insteadof__url_insteadof_applicable	extern/libgit2/tests/remote/insteadof.c	/^void test_remote_insteadof__url_insteadof_applicable(void)$/;"	f	typeref:typename:void
test_remote_insteadof__url_insteadof_not_applicable	extern/libgit2/tests/remote/insteadof.c	/^void test_remote_insteadof__url_insteadof_not_applicable(void)$/;"	f	typeref:typename:void
test_remote_list__always_checks_disk_config	extern/libgit2/tests/remote/list.c	/^void test_remote_list__always_checks_disk_config(void)$/;"	f	typeref:typename:void
test_remote_list__cleanup	extern/libgit2/tests/remote/list.c	/^void test_remote_list__cleanup(void)$/;"	f	typeref:typename:void
test_remote_list__initialize	extern/libgit2/tests/remote/list.c	/^void test_remote_list__initialize(void)$/;"	f	typeref:typename:void
test_remove_namespace	extern/libgit2/tests/path/win32.c	/^static void test_remove_namespace(const wchar_t *in, const wchar_t *expected)$/;"	f	typeref:typename:void	file:
test_repo_1	extern/libgit2/tests/ignore/status.c	/^static const char *test_repo_1 = "empty_standard_repo";$/;"	v	typeref:typename:const char *	file:
test_repo_config__can_open_global_when_there_is_no_file	extern/libgit2/tests/repo/config.c	/^void test_repo_config__can_open_global_when_there_is_no_file(void)$/;"	f	typeref:typename:void
test_repo_config__can_open_missing_global_with_separators	extern/libgit2/tests/repo/config.c	/^void test_repo_config__can_open_missing_global_with_separators(void)$/;"	f	typeref:typename:void
test_repo_config__cleanup	extern/libgit2/tests/repo/config.c	/^void test_repo_config__cleanup(void)$/;"	f	typeref:typename:void
test_repo_config__initialize	extern/libgit2/tests/repo/config.c	/^void test_repo_config__initialize(void)$/;"	f	typeref:typename:void
test_repo_config__read_with_no_configs_at_all	extern/libgit2/tests/repo/config.c	/^void test_repo_config__read_with_no_configs_at_all(void)$/;"	f	typeref:typename:void
test_repo_discover__ceiling_should_not_affect_gitdir_redirection	extern/libgit2/tests/repo/discover.c	/^void test_repo_discover__ceiling_should_not_affect_gitdir_redirection(void)$/;"	f	typeref:typename:void
test_repo_discover__cleanup	extern/libgit2/tests/repo/discover.c	/^void test_repo_discover__cleanup(void)$/;"	f	typeref:typename:void
test_repo_discover__discovering_nonexistent_dir_fails	extern/libgit2/tests/repo/discover.c	/^void test_repo_discover__discovering_nonexistent_dir_fails(void)$/;"	f	typeref:typename:void
test_repo_discover__discovering_repo_with_exact_path_succeeds	extern/libgit2/tests/repo/discover.c	/^void test_repo_discover__discovering_repo_with_exact_path_succeeds(void)$/;"	f	typeref:typename:void
test_repo_discover__discovering_repo_with_subdirectory_succeeds	extern/libgit2/tests/repo/discover.c	/^void test_repo_discover__discovering_repo_with_subdirectory_succeeds(void)$/;"	f	typeref:typename:void
test_repo_discover__discovering_repository_with_alternative_gitdir_succeeds	extern/libgit2/tests/repo/discover.c	/^void test_repo_discover__discovering_repository_with_alternative_gitdir_succeeds(void)$/;"	f	typeref:typename:void
test_repo_discover__discovering_repository_with_ceiling	extern/libgit2/tests/repo/discover.c	/^void test_repo_discover__discovering_repository_with_ceiling(void)$/;"	f	typeref:typename:void
test_repo_discover__discovering_repository_with_malformed_alternative_gitdir_fails	extern/libgit2/tests/repo/discover.c	/^void test_repo_discover__discovering_repository_with_malformed_alternative_gitdir_fails(void)$/;"	f	typeref:typename:void
test_repo_discover__discovery_starting_at_file_succeeds	extern/libgit2/tests/repo/discover.c	/^void test_repo_discover__discovery_starting_at_file_succeeds(void)$/;"	f	typeref:typename:void
test_repo_discover__discovery_starting_at_system_root_causes_no_hang	extern/libgit2/tests/repo/discover.c	/^void test_repo_discover__discovery_starting_at_system_root_causes_no_hang(void)$/;"	f	typeref:typename:void
test_repo_discover__initialize	extern/libgit2/tests/repo/discover.c	/^void test_repo_discover__initialize(void)$/;"	f	typeref:typename:void
test_repo_discover__other_ceiling	extern/libgit2/tests/repo/discover.c	/^void test_repo_discover__other_ceiling(void)$/;"	f	typeref:typename:void
test_repo_env__cleanup	extern/libgit2/tests/repo/env.c	/^void test_repo_env__cleanup(void)$/;"	f	typeref:typename:void
test_repo_env__initialize	extern/libgit2/tests/repo/env.c	/^void test_repo_env__initialize(void)$/;"	f	typeref:typename:void
test_repo_env__open	extern/libgit2/tests/repo/env.c	/^void test_repo_env__open(void)$/;"	f	typeref:typename:void
test_repo_getters__is_empty_can_detect_used_repositories	extern/libgit2/tests/repo/getters.c	/^void test_repo_getters__is_empty_can_detect_used_repositories(void)$/;"	f	typeref:typename:void
test_repo_getters__is_empty_correctly_deals_with_pristine_looking_repos	extern/libgit2/tests/repo/getters.c	/^void test_repo_getters__is_empty_correctly_deals_with_pristine_looking_repos(void)$/;"	f	typeref:typename:void
test_repo_getters__retrieving_the_odb_honors_the_refcount	extern/libgit2/tests/repo/getters.c	/^void test_repo_getters__retrieving_the_odb_honors_the_refcount(void)$/;"	f	typeref:typename:void
test_repo_hashfile__cleanup	extern/libgit2/tests/repo/hashfile.c	/^void test_repo_hashfile__cleanup(void)$/;"	f	typeref:typename:void
test_repo_hashfile__filtered	extern/libgit2/tests/repo/hashfile.c	/^void test_repo_hashfile__filtered(void)$/;"	f	typeref:typename:void
test_repo_hashfile__initialize	extern/libgit2/tests/repo/hashfile.c	/^void test_repo_hashfile__initialize(void)$/;"	f	typeref:typename:void
test_repo_hashfile__simple	extern/libgit2/tests/repo/hashfile.c	/^void test_repo_hashfile__simple(void)$/;"	f	typeref:typename:void
test_repo_head__can_tell_if_an_unborn_head_is_detached	extern/libgit2/tests/repo/head.c	/^void test_repo_head__can_tell_if_an_unborn_head_is_detached(void)$/;"	f	typeref:typename:void
test_repo_head__cleanup	extern/libgit2/tests/repo/head.c	/^void test_repo_head__cleanup(void)$/;"	f	typeref:typename:void
test_repo_head__detach_head_Detaches_HEAD_and_make_it_point_to_the_peeled_commit	extern/libgit2/tests/repo/head.c	/^void test_repo_head__detach_head_Detaches_HEAD_and_make_it_point_to_the_peeled_commit(void)$/;"	f	typeref:typename:void
test_repo_head__detach_head_Fails_if_HEAD_and_point_to_a_non_commitish	extern/libgit2/tests/repo/head.c	/^void test_repo_head__detach_head_Fails_if_HEAD_and_point_to_a_non_commitish(void)$/;"	f	typeref:typename:void
test_repo_head__detaching_an_unborn_branch_returns_GIT_EUNBORNBRANCH	extern/libgit2/tests/repo/head.c	/^void test_repo_head__detaching_an_unborn_branch_returns_GIT_EUNBORNBRANCH(void)$/;"	f	typeref:typename:void
test_repo_head__initialize	extern/libgit2/tests/repo/head.c	/^void test_repo_head__initialize(void)$/;"	f	typeref:typename:void
test_repo_head__retrieving_a_missing_head_returns_GIT_ENOTFOUND	extern/libgit2/tests/repo/head.c	/^void test_repo_head__retrieving_a_missing_head_returns_GIT_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_repo_head__retrieving_an_unborn_branch_returns_GIT_EUNBORNBRANCH	extern/libgit2/tests/repo/head.c	/^void test_repo_head__retrieving_an_unborn_branch_returns_GIT_EUNBORNBRANCH(void)$/;"	f	typeref:typename:void
test_repo_head__set_head_Attaches_HEAD_to_un_unborn_branch_when_the_branch_doesnt_exist	extern/libgit2/tests/repo/head.c	/^void test_repo_head__set_head_Attaches_HEAD_to_un_unborn_branch_when_the_branch_doesnt_exist(voi/;"	f	typeref:typename:void
test_repo_head__set_head_Attaches_HEAD_when_the_reference_points_to_a_branch	extern/libgit2/tests/repo/head.c	/^void test_repo_head__set_head_Attaches_HEAD_when_the_reference_points_to_a_branch(void)$/;"	f	typeref:typename:void
test_repo_head__set_head_Detaches_HEAD_when_the_reference_doesnt_point_to_a_branch	extern/libgit2/tests/repo/head.c	/^void test_repo_head__set_head_Detaches_HEAD_when_the_reference_doesnt_point_to_a_branch(void)$/;"	f	typeref:typename:void
test_repo_head__set_head_Fails_when_the_reference_points_to_a_non_commitish	extern/libgit2/tests/repo/head.c	/^void test_repo_head__set_head_Fails_when_the_reference_points_to_a_non_commitish(void)$/;"	f	typeref:typename:void
test_repo_head__set_head_Returns_ENOTFOUND_when_the_reference_doesnt_exist	extern/libgit2/tests/repo/head.c	/^void test_repo_head__set_head_Returns_ENOTFOUND_when_the_reference_doesnt_exist(void)$/;"	f	typeref:typename:void
test_repo_head__set_head_detached_Detaches_HEAD_and_make_it_point_to_the_peeled_commit	extern/libgit2/tests/repo/head.c	/^void test_repo_head__set_head_detached_Detaches_HEAD_and_make_it_point_to_the_peeled_commit(void/;"	f	typeref:typename:void
test_repo_head__set_head_detached_Fails_when_the_object_isnt_a_commitish	extern/libgit2/tests/repo/head.c	/^void test_repo_head__set_head_detached_Fails_when_the_object_isnt_a_commitish(void)$/;"	f	typeref:typename:void
test_repo_head__set_head_detached_Return_ENOTFOUND_when_the_object_doesnt_exist	extern/libgit2/tests/repo/head.c	/^void test_repo_head__set_head_detached_Return_ENOTFOUND_when_the_object_doesnt_exist(void)$/;"	f	typeref:typename:void
test_repo_head__unborn_head	extern/libgit2/tests/repo/head.c	/^void test_repo_head__unborn_head(void)$/;"	f	typeref:typename:void
test_repo_headtree__can_retrieve_the_root_tree_from_a_detached_head	extern/libgit2/tests/repo/headtree.c	/^void test_repo_headtree__can_retrieve_the_root_tree_from_a_detached_head(void)$/;"	f	typeref:typename:void
test_repo_headtree__can_retrieve_the_root_tree_from_a_non_detached_head	extern/libgit2/tests/repo/headtree.c	/^void test_repo_headtree__can_retrieve_the_root_tree_from_a_non_detached_head(void)$/;"	f	typeref:typename:void
test_repo_headtree__cleanup	extern/libgit2/tests/repo/headtree.c	/^void test_repo_headtree__cleanup(void)$/;"	f	typeref:typename:void
test_repo_headtree__initialize	extern/libgit2/tests/repo/headtree.c	/^void test_repo_headtree__initialize(void)$/;"	f	typeref:typename:void
test_repo_headtree__when_head_is_missing_returns_ENOTFOUND	extern/libgit2/tests/repo/headtree.c	/^void test_repo_headtree__when_head_is_missing_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_repo_headtree__when_head_is_unborn_returns_EUNBORNBRANCH	extern/libgit2/tests/repo/headtree.c	/^void test_repo_headtree__when_head_is_unborn_returns_EUNBORNBRANCH(void)$/;"	f	typeref:typename:void
test_repo_init__additional_templates	extern/libgit2/tests/repo/init.c	/^void test_repo_init__additional_templates(void)$/;"	f	typeref:typename:void
test_repo_init__at_filesystem_root	extern/libgit2/tests/repo/init.c	/^void test_repo_init__at_filesystem_root(void)$/;"	f	typeref:typename:void
test_repo_init__bare_repo	extern/libgit2/tests/repo/init.c	/^void test_repo_init__bare_repo(void)$/;"	f	typeref:typename:void
test_repo_init__bare_repo_escaping_current_workdir	extern/libgit2/tests/repo/init.c	/^void test_repo_init__bare_repo_escaping_current_workdir(void)$/;"	f	typeref:typename:void
test_repo_init__bare_repo_noslash	extern/libgit2/tests/repo/init.c	/^void test_repo_init__bare_repo_noslash(void)$/;"	f	typeref:typename:void
test_repo_init__can_reinit_an_initialized_repository	extern/libgit2/tests/repo/init.c	/^void test_repo_init__can_reinit_an_initialized_repository(void)$/;"	f	typeref:typename:void
test_repo_init__cleanup	extern/libgit2/tests/repo/init.c	/^void test_repo_init__cleanup(void)$/;"	f	typeref:typename:void
test_repo_init__detect_filemode	extern/libgit2/tests/repo/init.c	/^void test_repo_init__detect_filemode(void)$/;"	f	typeref:typename:void
test_repo_init__detect_ignorecase	extern/libgit2/tests/repo/init.c	/^void test_repo_init__detect_ignorecase(void)$/;"	f	typeref:typename:void
test_repo_init__detect_precompose_unicode_required	extern/libgit2/tests/repo/init.c	/^void test_repo_init__detect_precompose_unicode_required(void)$/;"	f	typeref:typename:void
test_repo_init__extended_0	extern/libgit2/tests/repo/init.c	/^void test_repo_init__extended_0(void)$/;"	f	typeref:typename:void
test_repo_init__extended_1	extern/libgit2/tests/repo/init.c	/^void test_repo_init__extended_1(void)$/;"	f	typeref:typename:void
test_repo_init__init_with_initial_commit	extern/libgit2/tests/repo/init.c	/^void test_repo_init__init_with_initial_commit(void)$/;"	f	typeref:typename:void
test_repo_init__initialize	extern/libgit2/tests/repo/init.c	/^void test_repo_init__initialize(void)$/;"	f	typeref:typename:void
test_repo_init__nonexisting_directory	extern/libgit2/tests/repo/init.c	/^void test_repo_init__nonexisting_directory(void)$/;"	f	typeref:typename:void
test_repo_init__nonexisting_root	extern/libgit2/tests/repo/init.c	/^void test_repo_init__nonexisting_root(void)$/;"	f	typeref:typename:void
test_repo_init__reinit_bare_repo	extern/libgit2/tests/repo/init.c	/^void test_repo_init__reinit_bare_repo(void)$/;"	f	typeref:typename:void
test_repo_init__reinit_doesnot_overwrite_ignorecase	extern/libgit2/tests/repo/init.c	/^void test_repo_init__reinit_doesnot_overwrite_ignorecase(void)$/;"	f	typeref:typename:void
test_repo_init__reinit_overwrites_filemode	extern/libgit2/tests/repo/init.c	/^void test_repo_init__reinit_overwrites_filemode(void)$/;"	f	typeref:typename:void
test_repo_init__reinit_too_recent_bare_repo	extern/libgit2/tests/repo/init.c	/^void test_repo_init__reinit_too_recent_bare_repo(void)$/;"	f	typeref:typename:void
test_repo_init__relative_gitdir	extern/libgit2/tests/repo/init.c	/^void test_repo_init__relative_gitdir(void)$/;"	f	typeref:typename:void
test_repo_init__relative_gitdir_2	extern/libgit2/tests/repo/init.c	/^void test_repo_init__relative_gitdir_2(void)$/;"	f	typeref:typename:void
test_repo_init__sets_logAllRefUpdates_according_to_type_of_repository	extern/libgit2/tests/repo/init.c	/^void test_repo_init__sets_logAllRefUpdates_according_to_type_of_repository(void)$/;"	f	typeref:typename:void
test_repo_init__standard_repo	extern/libgit2/tests/repo/init.c	/^void test_repo_init__standard_repo(void)$/;"	f	typeref:typename:void
test_repo_init__standard_repo_noslash	extern/libgit2/tests/repo/init.c	/^void test_repo_init__standard_repo_noslash(void)$/;"	f	typeref:typename:void
test_repo_init__symlinks_posix_detected	extern/libgit2/tests/repo/init.c	/^void test_repo_init__symlinks_posix_detected(void)$/;"	f	typeref:typename:void
test_repo_init__symlinks_win32_enabled_by_global_config	extern/libgit2/tests/repo/init.c	/^void test_repo_init__symlinks_win32_enabled_by_global_config(void)$/;"	f	typeref:typename:void
test_repo_init__symlinks_win32_off_by_default	extern/libgit2/tests/repo/init.c	/^void test_repo_init__symlinks_win32_off_by_default(void)$/;"	f	typeref:typename:void
test_repo_init__unwriteable_directory	extern/libgit2/tests/repo/init.c	/^void test_repo_init__unwriteable_directory(void)$/;"	f	typeref:typename:void
test_repo_message__cleanup	extern/libgit2/tests/repo/message.c	/^void test_repo_message__cleanup(void)$/;"	f	typeref:typename:void
test_repo_message__initialize	extern/libgit2/tests/repo/message.c	/^void test_repo_message__initialize(void)$/;"	f	typeref:typename:void
test_repo_message__message	extern/libgit2/tests/repo/message.c	/^void test_repo_message__message(void)$/;"	f	typeref:typename:void
test_repo_message__none	extern/libgit2/tests/repo/message.c	/^void test_repo_message__none(void)$/;"	f	typeref:typename:void
test_repo_new__has_nothing	extern/libgit2/tests/repo/new.c	/^void test_repo_new__has_nothing(void)$/;"	f	typeref:typename:void
test_repo_new__is_bare_until_workdir_set	extern/libgit2/tests/repo/new.c	/^void test_repo_new__is_bare_until_workdir_set(void)$/;"	f	typeref:typename:void
test_repo_open__bad_gitlinks	extern/libgit2/tests/repo/open.c	/^void test_repo_open__bad_gitlinks(void)$/;"	f	typeref:typename:void
test_repo_open__bare_empty_repo	extern/libgit2/tests/repo/open.c	/^void test_repo_open__bare_empty_repo(void)$/;"	f	typeref:typename:void
test_repo_open__check_if_repository	extern/libgit2/tests/repo/open.c	/^void test_repo_open__check_if_repository(void)$/;"	f	typeref:typename:void
test_repo_open__cleanup	extern/libgit2/tests/repo/open.c	/^void test_repo_open__cleanup(void)$/;"	f	typeref:typename:void
test_repo_open__failures	extern/libgit2/tests/repo/open.c	/^void test_repo_open__failures(void)$/;"	f	typeref:typename:void
test_repo_open__force_bare	extern/libgit2/tests/repo/open.c	/^void test_repo_open__force_bare(void)$/;"	f	typeref:typename:void
test_repo_open__format_version_1	extern/libgit2/tests/repo/open.c	/^void test_repo_open__format_version_1(void)$/;"	f	typeref:typename:void
test_repo_open__from_git_new_workdir	extern/libgit2/tests/repo/open.c	/^void test_repo_open__from_git_new_workdir(void)$/;"	f	typeref:typename:void
test_repo_open__gitlinked	extern/libgit2/tests/repo/open.c	/^void test_repo_open__gitlinked(void)$/;"	f	typeref:typename:void
test_repo_open__no_config	extern/libgit2/tests/repo/open.c	/^void test_repo_open__no_config(void)$/;"	f	typeref:typename:void
test_repo_open__open_with_discover	extern/libgit2/tests/repo/open.c	/^void test_repo_open__open_with_discover(void)$/;"	f	typeref:typename:void
test_repo_open__opening_a_non_existing_repository_returns_ENOTFOUND	extern/libgit2/tests/repo/open.c	/^void test_repo_open__opening_a_non_existing_repository_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_repo_open__standard_empty_repo_through_gitdir	extern/libgit2/tests/repo/open.c	/^void test_repo_open__standard_empty_repo_through_gitdir(void)$/;"	f	typeref:typename:void
test_repo_open__standard_empty_repo_through_workdir	extern/libgit2/tests/repo/open.c	/^void test_repo_open__standard_empty_repo_through_workdir(void)$/;"	f	typeref:typename:void
test_repo_open__win32_path	extern/libgit2/tests/repo/open.c	/^void test_repo_open__win32_path(void)$/;"	f	typeref:typename:void
test_repo_open__with_symlinked_config	extern/libgit2/tests/repo/open.c	/^void test_repo_open__with_symlinked_config(void)$/;"	f	typeref:typename:void
test_repo_pathspec__cleanup	extern/libgit2/tests/repo/pathspec.c	/^void test_repo_pathspec__cleanup(void)$/;"	f	typeref:typename:void
test_repo_pathspec__in_memory	extern/libgit2/tests/repo/pathspec.c	/^void test_repo_pathspec__in_memory(void)$/;"	f	typeref:typename:void
test_repo_pathspec__index0	extern/libgit2/tests/repo/pathspec.c	/^void test_repo_pathspec__index0(void)$/;"	f	typeref:typename:void
test_repo_pathspec__index1	extern/libgit2/tests/repo/pathspec.c	/^void test_repo_pathspec__index1(void)$/;"	f	typeref:typename:void
test_repo_pathspec__initialize	extern/libgit2/tests/repo/pathspec.c	/^void test_repo_pathspec__initialize(void)$/;"	f	typeref:typename:void
test_repo_pathspec__tree0	extern/libgit2/tests/repo/pathspec.c	/^void test_repo_pathspec__tree0(void)$/;"	f	typeref:typename:void
test_repo_pathspec__tree5	extern/libgit2/tests/repo/pathspec.c	/^void test_repo_pathspec__tree5(void)$/;"	f	typeref:typename:void
test_repo_pathspec__workdir0	extern/libgit2/tests/repo/pathspec.c	/^void test_repo_pathspec__workdir0(void)$/;"	f	typeref:typename:void
test_repo_pathspec__workdir1	extern/libgit2/tests/repo/pathspec.c	/^void test_repo_pathspec__workdir1(void)$/;"	f	typeref:typename:void
test_repo_pathspec__workdir2	extern/libgit2/tests/repo/pathspec.c	/^void test_repo_pathspec__workdir2(void)$/;"	f	typeref:typename:void
test_repo_pathspec__workdir3	extern/libgit2/tests/repo/pathspec.c	/^void test_repo_pathspec__workdir3(void)$/;"	f	typeref:typename:void
test_repo_pathspec__workdir4	extern/libgit2/tests/repo/pathspec.c	/^void test_repo_pathspec__workdir4(void)$/;"	f	typeref:typename:void
test_repo_reservedname__cleanup	extern/libgit2/tests/repo/reservedname.c	/^void test_repo_reservedname__cleanup(void)$/;"	f	typeref:typename:void
test_repo_reservedname__custom_shortname_recognized	extern/libgit2/tests/repo/reservedname.c	/^void test_repo_reservedname__custom_shortname_recognized(void)$/;"	f	typeref:typename:void
test_repo_reservedname__includes_shortname_on_win32	extern/libgit2/tests/repo/reservedname.c	/^void test_repo_reservedname__includes_shortname_on_win32(void)$/;"	f	typeref:typename:void
test_repo_reservedname__includes_shortname_when_requested	extern/libgit2/tests/repo/reservedname.c	/^void test_repo_reservedname__includes_shortname_when_requested(void)$/;"	f	typeref:typename:void
test_repo_reservedname__submodule_pointer	extern/libgit2/tests/repo/reservedname.c	/^void test_repo_reservedname__submodule_pointer(void)$/;"	f	typeref:typename:void
test_repo_reservedname__submodule_pointer_during_create	extern/libgit2/tests/repo/reservedname.c	/^void test_repo_reservedname__submodule_pointer_during_create(void)$/;"	f	typeref:typename:void
test_repo_setters__cleanup	extern/libgit2/tests/repo/setters.c	/^void test_repo_setters__cleanup(void)$/;"	f	typeref:typename:void
test_repo_setters__initialize	extern/libgit2/tests/repo/setters.c	/^void test_repo_setters__initialize(void)$/;"	f	typeref:typename:void
test_repo_setters__setting_a_new_index_on_a_repo_which_has_already_loaded_one_properly_honors_the_refcount	extern/libgit2/tests/repo/setters.c	/^void test_repo_setters__setting_a_new_index_on_a_repo_which_has_already_loaded_one_properly_hono/;"	f	typeref:typename:void
test_repo_setters__setting_a_new_odb_on_a_repo_which_already_loaded_one_properly_honors_the_refcount	extern/libgit2/tests/repo/setters.c	/^void test_repo_setters__setting_a_new_odb_on_a_repo_which_already_loaded_one_properly_honors_the/;"	f	typeref:typename:void
test_repo_setters__setting_a_workdir_creates_a_gitlink	extern/libgit2/tests/repo/setters.c	/^void test_repo_setters__setting_a_workdir_creates_a_gitlink(void)$/;"	f	typeref:typename:void
test_repo_setters__setting_a_workdir_prettifies_its_path	extern/libgit2/tests/repo/setters.c	/^void test_repo_setters__setting_a_workdir_prettifies_its_path(void)$/;"	f	typeref:typename:void
test_repo_setters__setting_a_workdir_turns_a_bare_repository_into_a_standard_one	extern/libgit2/tests/repo/setters.c	/^void test_repo_setters__setting_a_workdir_turns_a_bare_repository_into_a_standard_one(void)$/;"	f	typeref:typename:void
test_repo_shallow__cleanup	extern/libgit2/tests/repo/shallow.c	/^void test_repo_shallow__cleanup(void)$/;"	f	typeref:typename:void
test_repo_shallow__clears_errors	extern/libgit2/tests/repo/shallow.c	/^void test_repo_shallow__clears_errors(void)$/;"	f	typeref:typename:void
test_repo_shallow__empty_shallow_file	extern/libgit2/tests/repo/shallow.c	/^void test_repo_shallow__empty_shallow_file(void)$/;"	f	typeref:typename:void
test_repo_shallow__initialize	extern/libgit2/tests/repo/shallow.c	/^void test_repo_shallow__initialize(void)$/;"	f	typeref:typename:void
test_repo_shallow__no_shallow_file	extern/libgit2/tests/repo/shallow.c	/^void test_repo_shallow__no_shallow_file(void)$/;"	f	typeref:typename:void
test_repo_shallow__shallow_repo	extern/libgit2/tests/repo/shallow.c	/^void test_repo_shallow__shallow_repo(void)$/;"	f	typeref:typename:void
test_repo_state__apply_mailbox	extern/libgit2/tests/repo/state.c	/^void test_repo_state__apply_mailbox(void)$/;"	f	typeref:typename:void
test_repo_state__apply_mailbox_or_rebase	extern/libgit2/tests/repo/state.c	/^void test_repo_state__apply_mailbox_or_rebase(void)$/;"	f	typeref:typename:void
test_repo_state__bisect	extern/libgit2/tests/repo/state.c	/^void test_repo_state__bisect(void)$/;"	f	typeref:typename:void
test_repo_state__cherry_pick	extern/libgit2/tests/repo/state.c	/^void test_repo_state__cherry_pick(void)$/;"	f	typeref:typename:void
test_repo_state__cherrypick_sequence	extern/libgit2/tests/repo/state.c	/^void test_repo_state__cherrypick_sequence(void)$/;"	f	typeref:typename:void
test_repo_state__cleanup	extern/libgit2/tests/repo/state.c	/^void test_repo_state__cleanup(void)$/;"	f	typeref:typename:void
test_repo_state__initialize	extern/libgit2/tests/repo/state.c	/^void test_repo_state__initialize(void)$/;"	f	typeref:typename:void
test_repo_state__merge	extern/libgit2/tests/repo/state.c	/^void test_repo_state__merge(void)$/;"	f	typeref:typename:void
test_repo_state__none_with_HEAD_attached	extern/libgit2/tests/repo/state.c	/^void test_repo_state__none_with_HEAD_attached(void)$/;"	f	typeref:typename:void
test_repo_state__none_with_HEAD_detached	extern/libgit2/tests/repo/state.c	/^void test_repo_state__none_with_HEAD_detached(void)$/;"	f	typeref:typename:void
test_repo_state__rebase	extern/libgit2/tests/repo/state.c	/^void test_repo_state__rebase(void)$/;"	f	typeref:typename:void
test_repo_state__rebase_interactive	extern/libgit2/tests/repo/state.c	/^void test_repo_state__rebase_interactive(void)$/;"	f	typeref:typename:void
test_repo_state__rebase_merge	extern/libgit2/tests/repo/state.c	/^void test_repo_state__rebase_merge(void)$/;"	f	typeref:typename:void
test_repo_state__revert	extern/libgit2/tests/repo/state.c	/^void test_repo_state__revert(void)$/;"	f	typeref:typename:void
test_repo_state__revert_sequence	extern/libgit2/tests/repo/state.c	/^void test_repo_state__revert_sequence(void)$/;"	f	typeref:typename:void
test_repo_template__cleanup	extern/libgit2/tests/repo/template.c	/^void test_repo_template__cleanup(void)$/;"	f	typeref:typename:void
test_repo_template__empty_template_path	extern/libgit2/tests/repo/template.c	/^void test_repo_template__empty_template_path(void)$/;"	f	typeref:typename:void
test_repo_template__extended_with_template_and_shared_mode	extern/libgit2/tests/repo/template.c	/^void test_repo_template__extended_with_template_and_shared_mode(void)$/;"	f	typeref:typename:void
test_repo_template__external_templates_specified_in_config	extern/libgit2/tests/repo/template.c	/^void test_repo_template__external_templates_specified_in_config(void)$/;"	f	typeref:typename:void
test_repo_template__external_templates_specified_in_options	extern/libgit2/tests/repo/template.c	/^void test_repo_template__external_templates_specified_in_options(void)$/;"	f	typeref:typename:void
test_repo_template__external_templates_with_leading_dot	extern/libgit2/tests/repo/template.c	/^void test_repo_template__external_templates_with_leading_dot(void)$/;"	f	typeref:typename:void
test_repo_template__initial_head_option_overrides_template_head	extern/libgit2/tests/repo/template.c	/^void test_repo_template__initial_head_option_overrides_template_head(void)$/;"	f	typeref:typename:void
test_repo_template__initialize	extern/libgit2/tests/repo/template.c	/^void test_repo_template__initialize(void)$/;"	f	typeref:typename:void
test_repo_template__templated_head_is_used	extern/libgit2/tests/repo/template.c	/^void test_repo_template__templated_head_is_used(void)$/;"	f	typeref:typename:void
test_reset_default__cleanup	extern/libgit2/tests/reset/default.c	/^void test_reset_default__cleanup(void)$/;"	f	typeref:typename:void
test_reset_default__initialize	extern/libgit2/tests/reset/default.c	/^void test_reset_default__initialize(void)$/;"	f	typeref:typename:void
test_reset_default__resetting_filepaths_against_a_null_target_removes_them_from_the_index	extern/libgit2/tests/reset/default.c	/^void test_reset_default__resetting_filepaths_against_a_null_target_removes_them_from_the_index(v/;"	f	typeref:typename:void
test_reset_default__resetting_filepaths_clears_previous_conflicts	extern/libgit2/tests/reset/default.c	/^void test_reset_default__resetting_filepaths_clears_previous_conflicts(void)$/;"	f	typeref:typename:void
test_reset_default__resetting_filepaths_replaces_their_corresponding_index_entries	extern/libgit2/tests/reset/default.c	/^void test_reset_default__resetting_filepaths_replaces_their_corresponding_index_entries(void)$/;"	f	typeref:typename:void
test_reset_default__resetting_unknown_filepaths_does_not_fail	extern/libgit2/tests/reset/default.c	/^void test_reset_default__resetting_unknown_filepaths_does_not_fail(void)$/;"	f	typeref:typename:void
test_reset_default__staged_rename_reset_delete	extern/libgit2/tests/reset/default.c	/^void test_reset_default__staged_rename_reset_delete(void)$/;"	f	typeref:typename:void
test_reset_hard__cannot_reset_in_a_bare_repository	extern/libgit2/tests/reset/hard.c	/^void test_reset_hard__cannot_reset_in_a_bare_repository(void)$/;"	f	typeref:typename:void
test_reset_hard__cleans_up_merge	extern/libgit2/tests/reset/hard.c	/^void test_reset_hard__cleans_up_merge(void)$/;"	f	typeref:typename:void
test_reset_hard__cleanup	extern/libgit2/tests/reset/hard.c	/^void test_reset_hard__cleanup(void)$/;"	f	typeref:typename:void
test_reset_hard__initialize	extern/libgit2/tests/reset/hard.c	/^void test_reset_hard__initialize(void)$/;"	f	typeref:typename:void
test_reset_hard__reflog_is_correct	extern/libgit2/tests/reset/hard.c	/^void test_reset_hard__reflog_is_correct(void)$/;"	f	typeref:typename:void
test_reset_hard__resetting_reverts_modified_files	extern/libgit2/tests/reset/hard.c	/^void test_reset_hard__resetting_reverts_modified_files(void)$/;"	f	typeref:typename:void
test_reset_hard__resetting_reverts_unmerged	extern/libgit2/tests/reset/hard.c	/^void test_reset_hard__resetting_reverts_unmerged(void)$/;"	f	typeref:typename:void
test_reset_hard__switch_file_to_dir	extern/libgit2/tests/reset/hard.c	/^void test_reset_hard__switch_file_to_dir(void)$/;"	f	typeref:typename:void
test_reset_mixed__cannot_reset_in_a_bare_repository	extern/libgit2/tests/reset/mixed.c	/^void test_reset_mixed__cannot_reset_in_a_bare_repository(void)$/;"	f	typeref:typename:void
test_reset_mixed__cleanup	extern/libgit2/tests/reset/mixed.c	/^void test_reset_mixed__cleanup(void)$/;"	f	typeref:typename:void
test_reset_mixed__initialize	extern/libgit2/tests/reset/mixed.c	/^void test_reset_mixed__initialize(void)$/;"	f	typeref:typename:void
test_reset_mixed__reflog_is_correct	extern/libgit2/tests/reset/mixed.c	/^void test_reset_mixed__reflog_is_correct(void)$/;"	f	typeref:typename:void
test_reset_mixed__resetting_refreshes_the_index_to_the_commit_tree	extern/libgit2/tests/reset/mixed.c	/^void test_reset_mixed__resetting_refreshes_the_index_to_the_commit_tree(void)$/;"	f	typeref:typename:void
test_reset_soft__can_reset_the_detached_Head_to_the_specified_commit	extern/libgit2/tests/reset/soft.c	/^void test_reset_soft__can_reset_the_detached_Head_to_the_specified_commit(void)$/;"	f	typeref:typename:void
test_reset_soft__can_reset_the_non_detached_Head_to_the_specified_commit	extern/libgit2/tests/reset/soft.c	/^void test_reset_soft__can_reset_the_non_detached_Head_to_the_specified_commit(void)$/;"	f	typeref:typename:void
test_reset_soft__cannot_reset_to_a_tag_not_pointing_at_a_commit	extern/libgit2/tests/reset/soft.c	/^void test_reset_soft__cannot_reset_to_a_tag_not_pointing_at_a_commit(void)$/;"	f	typeref:typename:void
test_reset_soft__cleanup	extern/libgit2/tests/reset/soft.c	/^void test_reset_soft__cleanup(void)$/;"	f	typeref:typename:void
test_reset_soft__fails_when_index_contains_conflicts_independently_of_MERGE_HEAD_file_existence	extern/libgit2/tests/reset/soft.c	/^void test_reset_soft__fails_when_index_contains_conflicts_independently_of_MERGE_HEAD_file_exist/;"	f	typeref:typename:void
test_reset_soft__fails_when_merging	extern/libgit2/tests/reset/soft.c	/^void test_reset_soft__fails_when_merging(void)$/;"	f	typeref:typename:void
test_reset_soft__initialize	extern/libgit2/tests/reset/soft.c	/^void test_reset_soft__initialize(void)$/;"	f	typeref:typename:void
test_reset_soft__reflog_is_correct	extern/libgit2/tests/reset/soft.c	/^void test_reset_soft__reflog_is_correct(void)$/;"	f	typeref:typename:void
test_reset_soft__resetting_against_an_unborn_head_repo_makes_the_head_no_longer_unborn	extern/libgit2/tests/reset/soft.c	/^void test_reset_soft__resetting_against_an_unborn_head_repo_makes_the_head_no_longer_unborn(void/;"	f	typeref:typename:void
test_reset_soft__resetting_to_a_tag_sets_the_Head_to_the_peeled_commit	extern/libgit2/tests/reset/soft.c	/^void test_reset_soft__resetting_to_a_tag_sets_the_Head_to_the_peeled_commit(void)$/;"	f	typeref:typename:void
test_reset_soft__resetting_to_the_commit_pointed_at_by_the_Head_does_not_change_the_target_of_the_Head	extern/libgit2/tests/reset/soft.c	/^void test_reset_soft__resetting_to_the_commit_pointed_at_by_the_Head_does_not_change_the_target_/;"	f	typeref:typename:void
test_revert_bare__automerge	extern/libgit2/tests/revert/bare.c	/^void test_revert_bare__automerge(void)$/;"	f	typeref:typename:void
test_revert_bare__cleanup	extern/libgit2/tests/revert/bare.c	/^void test_revert_bare__cleanup(void)$/;"	f	typeref:typename:void
test_revert_bare__conflicts	extern/libgit2/tests/revert/bare.c	/^void test_revert_bare__conflicts(void)$/;"	f	typeref:typename:void
test_revert_bare__initialize	extern/libgit2/tests/revert/bare.c	/^void test_revert_bare__initialize(void)$/;"	f	typeref:typename:void
test_revert_bare__orphan	extern/libgit2/tests/revert/bare.c	/^void test_revert_bare__orphan(void)$/;"	f	typeref:typename:void
test_revert_workdir__again	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__again(void)$/;"	f	typeref:typename:void
test_revert_workdir__again_after_automerge	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__again_after_automerge(void)$/;"	f	typeref:typename:void
test_revert_workdir__again_after_edit	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__again_after_edit(void)$/;"	f	typeref:typename:void
test_revert_workdir__again_after_edit_two	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__again_after_edit_two(void)$/;"	f	typeref:typename:void
test_revert_workdir__automerge	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__automerge(void)$/;"	f	typeref:typename:void
test_revert_workdir__cleanup	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__cleanup(void)$/;"	f	typeref:typename:void
test_revert_workdir__conflict_use_ours	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__conflict_use_ours(void)$/;"	f	typeref:typename:void
test_revert_workdir__conflicts	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__conflicts(void)$/;"	f	typeref:typename:void
test_revert_workdir__head	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__head(void)$/;"	f	typeref:typename:void
test_revert_workdir__initialize	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__initialize(void)$/;"	f	typeref:typename:void
test_revert_workdir__merge_fails_without_mainline_specified	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__merge_fails_without_mainline_specified(void)$/;"	f	typeref:typename:void
test_revert_workdir__merge_first_parent	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__merge_first_parent(void)$/;"	f	typeref:typename:void
test_revert_workdir__merge_second_parent	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__merge_second_parent(void)$/;"	f	typeref:typename:void
test_revert_workdir__nonmerge_fails_mainline_specified	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__nonmerge_fails_mainline_specified(void)$/;"	f	typeref:typename:void
test_revert_workdir__orphan	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__orphan(void)$/;"	f	typeref:typename:void
test_revert_workdir__rename	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__rename(void)$/;"	f	typeref:typename:void
test_revert_workdir__rename_1_of_2	extern/libgit2/tests/revert/workdir.c	/^void test_revert_workdir__rename_1_of_2(void)$/;"	f	typeref:typename:void
test_revwalk_basic__big_timestamp	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__big_timestamp(void)$/;"	f	typeref:typename:void
test_revwalk_basic__cleanup	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__cleanup(void)$/;"	f	typeref:typename:void
test_revwalk_basic__disallow_non_commit	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__disallow_non_commit(void)$/;"	f	typeref:typename:void
test_revwalk_basic__from_new_to_old	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__from_new_to_old(void)$/;"	f	typeref:typename:void
test_revwalk_basic__glob_heads	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__glob_heads(void)$/;"	f	typeref:typename:void
test_revwalk_basic__glob_heads_with_invalid	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__glob_heads_with_invalid(void)$/;"	f	typeref:typename:void
test_revwalk_basic__hide_then_push	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__hide_then_push(void)$/;"	f	typeref:typename:void
test_revwalk_basic__initialize	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__initialize(void)$/;"	f	typeref:typename:void
test_revwalk_basic__mimic_git_rev_list	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__mimic_git_rev_list(void)$/;"	f	typeref:typename:void
test_revwalk_basic__multiple_push_1	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__multiple_push_1(void)$/;"	f	typeref:typename:void
test_revwalk_basic__multiple_push_2	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__multiple_push_2(void)$/;"	f	typeref:typename:void
test_revwalk_basic__newer_hidden_commit_hides_old_commits	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__newer_hidden_commit_hides_old_commits(void)$/;"	f	typeref:typename:void
test_revwalk_basic__old_hidden_commit_one	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__old_hidden_commit_one(void)$/;"	f	typeref:typename:void
test_revwalk_basic__old_hidden_commit_two	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__old_hidden_commit_two(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_all	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__push_all(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_head	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__push_head(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_head_hide_ref	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__push_head_hide_ref(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_head_hide_ref_nobase	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__push_head_hide_ref_nobase(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_mixed	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__push_mixed(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_range	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__push_range(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_range_merge_base	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__push_range_merge_base(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_range_no_range	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__push_range_no_range(void)$/;"	f	typeref:typename:void
test_revwalk_basic__sorted_after_reset	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__sorted_after_reset(void)$/;"	f	typeref:typename:void
test_revwalk_basic__sorting_modes	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__sorting_modes(void)$/;"	f	typeref:typename:void
test_revwalk_basic__topo_crash	extern/libgit2/tests/revwalk/basic.c	/^void test_revwalk_basic__topo_crash(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__add_hide_cb_during_walking	extern/libgit2/tests/revwalk/hidecb.c	/^void test_revwalk_hidecb__add_hide_cb_during_walking(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__change_cb_before_walk	extern/libgit2/tests/revwalk/hidecb.c	/^void test_revwalk_hidecb__change_cb_before_walk(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__cleanup	extern/libgit2/tests/revwalk/hidecb.c	/^void test_revwalk_hidecb__cleanup(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__hide_all_cb	extern/libgit2/tests/revwalk/hidecb.c	/^void test_revwalk_hidecb__hide_all_cb(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__hide_none_cb	extern/libgit2/tests/revwalk/hidecb.c	/^void test_revwalk_hidecb__hide_none_cb(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__hide_some_commits	extern/libgit2/tests/revwalk/hidecb.c	/^void test_revwalk_hidecb__hide_some_commits(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__initialize	extern/libgit2/tests/revwalk/hidecb.c	/^void test_revwalk_hidecb__initialize(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__test_payload	extern/libgit2/tests/revwalk/hidecb.c	/^void test_revwalk_hidecb__test_payload(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__unset_cb_before_walk	extern/libgit2/tests/revwalk/hidecb.c	/^void test_revwalk_hidecb__unset_cb_before_walk(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__cleanup	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__cleanup(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__initialize	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__initialize(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__many_merge_branch	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__many_merge_branch(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__many_no_common_ancestor_returns_ENOTFOUND	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__many_no_common_ancestor_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__merged_branch	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__merged_branch(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__multiple_merge_bases	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__multiple_merge_bases(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__multiple_merge_bases_many_commits	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__multiple_merge_bases_many_commits(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__no_common_ancestor_returns_ENOTFOUND	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__no_common_ancestor_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__no_off_by_one_missing	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__no_off_by_one_missing(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__octopus_merge_branch	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__octopus_merge_branch(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__octopus_no_common_ancestor_returns_ENOTFOUND	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__octopus_no_common_ancestor_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__prefer_youngest_merge_base	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__prefer_youngest_merge_base(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__remove_redundant	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__remove_redundant(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__single1	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__single1(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__single2	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__single2(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__two_way_merge	extern/libgit2/tests/revwalk/mergebase.c	/^void test_revwalk_mergebase__two_way_merge(void)$/;"	f	typeref:typename:void
test_revwalk_signatureparsing__cleanup	extern/libgit2/tests/revwalk/signatureparsing.c	/^void test_revwalk_signatureparsing__cleanup(void)$/;"	f	typeref:typename:void
test_revwalk_signatureparsing__do_not_choke_when_name_contains_angle_brackets	extern/libgit2/tests/revwalk/signatureparsing.c	/^void test_revwalk_signatureparsing__do_not_choke_when_name_contains_angle_brackets(void)$/;"	f	typeref:typename:void
test_revwalk_signatureparsing__initialize	extern/libgit2/tests/revwalk/signatureparsing.c	/^void test_revwalk_signatureparsing__initialize(void)$/;"	f	typeref:typename:void
test_revwalk_simplify__cleanup	extern/libgit2/tests/revwalk/simplify.c	/^void test_revwalk_simplify__cleanup(void)$/;"	f	typeref:typename:void
test_revwalk_simplify__first_parent	extern/libgit2/tests/revwalk/simplify.c	/^void test_revwalk_simplify__first_parent(void)$/;"	f	typeref:typename:void
test_stash_apply__calls_progress_cb	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__calls_progress_cb(void)$/;"	f	typeref:typename:void
test_stash_apply__cleanup	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__cleanup(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_commit_with_default	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__conflict_commit_with_default(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_commit_with_reinstate_index	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__conflict_commit_with_reinstate_index(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_index_with_default	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__conflict_index_with_default(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_index_with_reinstate_index	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__conflict_index_with_reinstate_index(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_untracked_with_default	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__conflict_untracked_with_default(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_untracked_with_reinstate_index	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__conflict_untracked_with_reinstate_index(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_workdir_with_default	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__conflict_workdir_with_default(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_workdir_with_reinstate_index	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__conflict_workdir_with_reinstate_index(void)$/;"	f	typeref:typename:void
test_stash_apply__executes_notify_cb	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__executes_notify_cb(void)$/;"	f	typeref:typename:void
test_stash_apply__fails_with_uncommitted_changes_in_index	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__fails_with_uncommitted_changes_in_index(void)$/;"	f	typeref:typename:void
test_stash_apply__initialize	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__initialize(void)$/;"	f	typeref:typename:void
test_stash_apply__merges_new_file	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__merges_new_file(void)$/;"	f	typeref:typename:void
test_stash_apply__pop	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__pop(void)$/;"	f	typeref:typename:void
test_stash_apply__progress_cb_can_abort	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__progress_cb_can_abort(void)$/;"	f	typeref:typename:void
test_stash_apply__uses_reflog_like_indices_1	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__uses_reflog_like_indices_1(void)$/;"	f	typeref:typename:void
test_stash_apply__uses_reflog_like_indices_2	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__uses_reflog_like_indices_2(void)$/;"	f	typeref:typename:void
test_stash_apply__with_default	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__with_default(void)$/;"	f	typeref:typename:void
test_stash_apply__with_existing_file	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__with_existing_file(void)$/;"	f	typeref:typename:void
test_stash_apply__with_reinstate_index	extern/libgit2/tests/stash/apply.c	/^void test_stash_apply__with_reinstate_index(void)$/;"	f	typeref:typename:void
test_stash_drop__can_purge_the_stash_from_the_bottom	extern/libgit2/tests/stash/drop.c	/^void test_stash_drop__can_purge_the_stash_from_the_bottom(void)$/;"	f	typeref:typename:void
test_stash_drop__can_purge_the_stash_from_the_top	extern/libgit2/tests/stash/drop.c	/^void test_stash_drop__can_purge_the_stash_from_the_top(void)$/;"	f	typeref:typename:void
test_stash_drop__cannot_drop_a_non_existing_stashed_state	extern/libgit2/tests/stash/drop.c	/^void test_stash_drop__cannot_drop_a_non_existing_stashed_state(void)$/;"	f	typeref:typename:void
test_stash_drop__cannot_drop_from_an_empty_stash	extern/libgit2/tests/stash/drop.c	/^void test_stash_drop__cannot_drop_from_an_empty_stash(void)$/;"	f	typeref:typename:void
test_stash_drop__cleanup	extern/libgit2/tests/stash/drop.c	/^void test_stash_drop__cleanup(void)$/;"	f	typeref:typename:void
test_stash_drop__dropping_an_entry_rewrites_reflog_history	extern/libgit2/tests/stash/drop.c	/^void test_stash_drop__dropping_an_entry_rewrites_reflog_history(void)$/;"	f	typeref:typename:void
test_stash_drop__dropping_the_last_entry_removes_the_stash	extern/libgit2/tests/stash/drop.c	/^void test_stash_drop__dropping_the_last_entry_removes_the_stash(void)$/;"	f	typeref:typename:void
test_stash_drop__dropping_the_top_stash_updates_the_stash_reference	extern/libgit2/tests/stash/drop.c	/^void test_stash_drop__dropping_the_top_stash_updates_the_stash_reference(void)$/;"	f	typeref:typename:void
test_stash_drop__initialize	extern/libgit2/tests/stash/drop.c	/^void test_stash_drop__initialize(void)$/;"	f	typeref:typename:void
test_stash_foreach__can_enumerate_a_repository	extern/libgit2/tests/stash/foreach.c	/^void test_stash_foreach__can_enumerate_a_repository(void)$/;"	f	typeref:typename:void
test_stash_foreach__cleanup	extern/libgit2/tests/stash/foreach.c	/^void test_stash_foreach__cleanup(void)$/;"	f	typeref:typename:void
test_stash_foreach__enumerating_a_empty_repository_doesnt_fail	extern/libgit2/tests/stash/foreach.c	/^void test_stash_foreach__enumerating_a_empty_repository_doesnt_fail(void)$/;"	f	typeref:typename:void
test_stash_foreach__initialize	extern/libgit2/tests/stash/foreach.c	/^void test_stash_foreach__initialize(void)$/;"	f	typeref:typename:void
test_stash_save__can_accept_a_message	extern/libgit2/tests/stash/save.c	/^void test_stash_save__can_accept_a_message(void)$/;"	f	typeref:typename:void
test_stash_save__can_include_untracked_and_ignored_files	extern/libgit2/tests/stash/save.c	/^void test_stash_save__can_include_untracked_and_ignored_files(void)$/;"	f	typeref:typename:void
test_stash_save__can_include_untracked_files	extern/libgit2/tests/stash/save.c	/^void test_stash_save__can_include_untracked_files(void)$/;"	f	typeref:typename:void
test_stash_save__can_keep_index	extern/libgit2/tests/stash/save.c	/^void test_stash_save__can_keep_index(void)$/;"	f	typeref:typename:void
test_stash_save__can_stage_normal_then_stage_untracked	extern/libgit2/tests/stash/save.c	/^void test_stash_save__can_stage_normal_then_stage_untracked(void)$/;"	f	typeref:typename:void
test_stash_save__can_stash_against_a_detached_head	extern/libgit2/tests/stash/save.c	/^void test_stash_save__can_stash_against_a_detached_head(void)$/;"	f	typeref:typename:void
test_stash_save__cannot_stash_against_a_bare_repository	extern/libgit2/tests/stash/save.c	/^void test_stash_save__cannot_stash_against_a_bare_repository(void)$/;"	f	typeref:typename:void
test_stash_save__cannot_stash_against_an_unborn_branch	extern/libgit2/tests/stash/save.c	/^void test_stash_save__cannot_stash_against_an_unborn_branch(void)$/;"	f	typeref:typename:void
test_stash_save__cannot_stash_when_there_are_no_local_change	extern/libgit2/tests/stash/save.c	/^void test_stash_save__cannot_stash_when_there_are_no_local_change(void)$/;"	f	typeref:typename:void
test_stash_save__cleanup	extern/libgit2/tests/stash/save.c	/^void test_stash_save__cleanup(void)$/;"	f	typeref:typename:void
test_stash_save__deleted_in_index_modified_in_workdir	extern/libgit2/tests/stash/save.c	/^void test_stash_save__deleted_in_index_modified_in_workdir(void)$/;"	f	typeref:typename:void
test_stash_save__does_not_keep_index_by_default	extern/libgit2/tests/stash/save.c	/^void test_stash_save__does_not_keep_index_by_default(void)$/;"	f	typeref:typename:void
test_stash_save__ignored_directory	extern/libgit2/tests/stash/save.c	/^void test_stash_save__ignored_directory(void)$/;"	f	typeref:typename:void
test_stash_save__including_untracked_without_any_untracked_file_creates_an_empty_tree	extern/libgit2/tests/stash/save.c	/^void test_stash_save__including_untracked_without_any_untracked_file_creates_an_empty_tree(void)$/;"	f	typeref:typename:void
test_stash_save__initialize	extern/libgit2/tests/stash/save.c	/^void test_stash_save__initialize(void)$/;"	f	typeref:typename:void
test_stash_save__skip_submodules	extern/libgit2/tests/stash/save.c	/^void test_stash_save__skip_submodules(void)$/;"	f	typeref:typename:void
test_stash_save__stashing_updates_the_reflog	extern/libgit2/tests/stash/save.c	/^void test_stash_save__stashing_updates_the_reflog(void)$/;"	f	typeref:typename:void
test_stash_save__untracked_regression	extern/libgit2/tests/stash/save.c	/^void test_stash_save__untracked_regression(void)$/;"	f	typeref:typename:void
test_stash_save__untracked_skips_ignored	extern/libgit2/tests/stash/save.c	/^void test_stash_save__untracked_skips_ignored(void)$/;"	f	typeref:typename:void
test_stash_submodules__cleanup	extern/libgit2/tests/stash/submodules.c	/^void test_stash_submodules__cleanup(void)$/;"	f	typeref:typename:void
test_stash_submodules__does_not_stash_modified_submodules	extern/libgit2/tests/stash/submodules.c	/^void test_stash_submodules__does_not_stash_modified_submodules(void)$/;"	f	typeref:typename:void
test_stash_submodules__initialize	extern/libgit2/tests/stash/submodules.c	/^void test_stash_submodules__initialize(void)$/;"	f	typeref:typename:void
test_stash_submodules__stash_is_empty_with_modified_submodules	extern/libgit2/tests/stash/submodules.c	/^void test_stash_submodules__stash_is_empty_with_modified_submodules(void)$/;"	f	typeref:typename:void
test_status	extern/libgit2/tests/clar.c	/^	enum cl_test_status test_status;$/;"	m	struct:__anonab24499b0108	typeref:enum:cl_test_status	file:
test_status_renames__both_casechange_one	extern/libgit2/tests/status/renames.c	/^void test_status_renames__both_casechange_one(void)$/;"	f	typeref:typename:void
test_status_renames__both_casechange_two	extern/libgit2/tests/status/renames.c	/^void test_status_renames__both_casechange_two(void)$/;"	f	typeref:typename:void
test_status_renames__both_one	extern/libgit2/tests/status/renames.c	/^void test_status_renames__both_one(void)$/;"	f	typeref:typename:void
test_status_renames__both_rename_from_rewrite	extern/libgit2/tests/status/renames.c	/^void test_status_renames__both_rename_from_rewrite(void)$/;"	f	typeref:typename:void
test_status_renames__both_two	extern/libgit2/tests/status/renames.c	/^void test_status_renames__both_two(void)$/;"	f	typeref:typename:void
test_status_renames__cleanup	extern/libgit2/tests/status/renames.c	/^void test_status_renames__cleanup(void)$/;"	f	typeref:typename:void
test_status_renames__head2index_no_rename_from_rewrite	extern/libgit2/tests/status/renames.c	/^void test_status_renames__head2index_no_rename_from_rewrite(void)$/;"	f	typeref:typename:void
test_status_renames__head2index_one	extern/libgit2/tests/status/renames.c	/^void test_status_renames__head2index_one(void)$/;"	f	typeref:typename:void
test_status_renames__head2index_rename_from_rewrite	extern/libgit2/tests/status/renames.c	/^void test_status_renames__head2index_rename_from_rewrite(void)$/;"	f	typeref:typename:void
test_status_renames__head2index_two	extern/libgit2/tests/status/renames.c	/^void test_status_renames__head2index_two(void)$/;"	f	typeref:typename:void
test_status_renames__index2workdir_one	extern/libgit2/tests/status/renames.c	/^void test_status_renames__index2workdir_one(void)$/;"	f	typeref:typename:void
test_status_renames__index2workdir_rename_from_rewrite	extern/libgit2/tests/status/renames.c	/^void test_status_renames__index2workdir_rename_from_rewrite(void)$/;"	f	typeref:typename:void
test_status_renames__index2workdir_two	extern/libgit2/tests/status/renames.c	/^void test_status_renames__index2workdir_two(void)$/;"	f	typeref:typename:void
test_status_renames__initialize	extern/libgit2/tests/status/renames.c	/^void test_status_renames__initialize(void)$/;"	f	typeref:typename:void
test_status_renames__precomposed_unicode_rename	extern/libgit2/tests/status/renames.c	/^void test_status_renames__precomposed_unicode_rename(void)$/;"	f	typeref:typename:void
test_status_renames__precomposed_unicode_toggle_is_rename	extern/libgit2/tests/status/renames.c	/^void test_status_renames__precomposed_unicode_toggle_is_rename(void)$/;"	f	typeref:typename:void
test_status_renames__rewrites_only_for_renames	extern/libgit2/tests/status/renames.c	/^void test_status_renames__rewrites_only_for_renames(void)$/;"	f	typeref:typename:void
test_status_renames__zero_byte_file_does_not_fail	extern/libgit2/tests/status/renames.c	/^void test_status_renames__zero_byte_file_does_not_fail(void)$/;"	f	typeref:typename:void
test_status_single__hash_single_empty_file	extern/libgit2/tests/status/single.c	/^void test_status_single__hash_single_empty_file(void)$/;"	f	typeref:typename:void
test_status_single__hash_single_file	extern/libgit2/tests/status/single.c	/^void test_status_single__hash_single_file(void)$/;"	f	typeref:typename:void
test_status_submodules__0	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__0(void)$/;"	f	typeref:typename:void
test_status_submodules__1	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__1(void)$/;"	f	typeref:typename:void
test_status_submodules__api	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__api(void)$/;"	f	typeref:typename:void
test_status_submodules__broken_stuff_that_git_allows	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__broken_stuff_that_git_allows(void)$/;"	f	typeref:typename:void
test_status_submodules__cleanup	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__cleanup(void)$/;"	f	typeref:typename:void
test_status_submodules__contained_untracked_repo	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__contained_untracked_repo(void)$/;"	f	typeref:typename:void
test_status_submodules__dirty_workdir_only	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__dirty_workdir_only(void)$/;"	f	typeref:typename:void
test_status_submodules__entry_but_dir_tracked	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__entry_but_dir_tracked(void)$/;"	f	typeref:typename:void
test_status_submodules__initialize	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__initialize(void)$/;"	f	typeref:typename:void
test_status_submodules__mixed_case	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__mixed_case(void)$/;"	f	typeref:typename:void
test_status_submodules__moved_head	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__moved_head(void)$/;"	f	typeref:typename:void
test_status_submodules__single_file	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__single_file(void)$/;"	f	typeref:typename:void
test_status_submodules__uninitialized	extern/libgit2/tests/status/submodules.c	/^void test_status_submodules__uninitialized(void)$/;"	f	typeref:typename:void
test_status_worktree__at_head_parent	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__at_head_parent(void)$/;"	f	typeref:typename:void
test_status_worktree__cleanup	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__cleanup(void)$/;"	f	typeref:typename:void
test_status_worktree__conflict_has_no_oid	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__conflict_has_no_oid(void)$/;"	f	typeref:typename:void
test_status_worktree__conflict_with_diff3	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__conflict_with_diff3(void)$/;"	f	typeref:typename:void
test_status_worktree__conflicted_item	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__conflicted_item(void)$/;"	f	typeref:typename:void
test_status_worktree__empty_repository	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__empty_repository(void)$/;"	f	typeref:typename:void
test_status_worktree__file_status_honors_case_ignorecase_regarding_untracked_files	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__file_status_honors_case_ignorecase_regarding_untracked_files(void)$/;"	f	typeref:typename:void
test_status_worktree__file_status_honors_core_ignorecase_false	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__file_status_honors_core_ignorecase_false(void)$/;"	f	typeref:typename:void
test_status_worktree__file_status_honors_core_ignorecase_true	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__file_status_honors_core_ignorecase_true(void)$/;"	f	typeref:typename:void
test_status_worktree__filemode_changes	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__filemode_changes(void)$/;"	f	typeref:typename:void
test_status_worktree__ignores	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__ignores(void)$/;"	f	typeref:typename:void
test_status_worktree__interruptable_foreach	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__interruptable_foreach(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__issue_592(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592_2	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__issue_592_2(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592_3	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__issue_592_3(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592_4	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__issue_592_4(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592_5	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__issue_592_5(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592_ignored_dirs_with_tracked_content	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__issue_592_ignored_dirs_with_tracked_content(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592_ignores_0	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__issue_592_ignores_0(void)$/;"	f	typeref:typename:void
test_status_worktree__line_endings_dont_count_as_changes_with_autocrlf	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__line_endings_dont_count_as_changes_with_autocrlf(void)$/;"	f	typeref:typename:void
test_status_worktree__line_endings_dont_count_as_changes_with_autocrlf_issue_1397	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__line_endings_dont_count_as_changes_with_autocrlf_issue_1397(void)$/;"	f	typeref:typename:void
test_status_worktree__long_filenames	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__long_filenames(void)$/;"	f	typeref:typename:void
test_status_worktree__purged_worktree	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__purged_worktree(void)$/;"	f	typeref:typename:void
test_status_worktree__show_index_and_workdir	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__show_index_and_workdir(void)$/;"	f	typeref:typename:void
test_status_worktree__show_index_only	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__show_index_only(void)$/;"	f	typeref:typename:void
test_status_worktree__show_workdir_only	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__show_workdir_only(void)$/;"	f	typeref:typename:void
test_status_worktree__simple_delete	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__simple_delete(void)$/;"	f	typeref:typename:void
test_status_worktree__simple_delete_indexed	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__simple_delete_indexed(void)$/;"	f	typeref:typename:void
test_status_worktree__single_file	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__single_file(void)$/;"	f	typeref:typename:void
test_status_worktree__single_file_empty_repo	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__single_file_empty_repo(void)$/;"	f	typeref:typename:void
test_status_worktree__single_folder	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__single_folder(void)$/;"	f	typeref:typename:void
test_status_worktree__single_nonexistent_file	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__single_nonexistent_file(void)$/;"	f	typeref:typename:void
test_status_worktree__single_nonexistent_file_empty_repo	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__single_nonexistent_file_empty_repo(void)$/;"	f	typeref:typename:void
test_status_worktree__sorting_by_case	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__sorting_by_case(void)$/;"	f	typeref:typename:void
test_status_worktree__swap_subdir_and_file	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__swap_subdir_and_file(void)$/;"	f	typeref:typename:void
test_status_worktree__swap_subdir_with_recurse_and_pathspec	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__swap_subdir_with_recurse_and_pathspec(void)$/;"	f	typeref:typename:void
test_status_worktree__unreadable	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__unreadable(void)$/;"	f	typeref:typename:void
test_status_worktree__unreadable_as_untracked	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__unreadable_as_untracked(void)$/;"	f	typeref:typename:void
test_status_worktree__unreadable_not_included	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__unreadable_not_included(void)$/;"	f	typeref:typename:void
test_status_worktree__update_index_with_symlink_doesnt_change_mode	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__update_index_with_symlink_doesnt_change_mode(void)$/;"	f	typeref:typename:void
test_status_worktree__update_stat_cache_0	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__update_stat_cache_0(void)$/;"	f	typeref:typename:void
test_status_worktree__whole_repository	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__whole_repository(void)$/;"	f	typeref:typename:void
test_status_worktree__with_directory_in_pathlist	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__with_directory_in_pathlist(void)$/;"	f	typeref:typename:void
test_status_worktree__within_subdir	extern/libgit2/tests/status/worktree.c	/^void test_status_worktree__within_subdir(void)$/;"	f	typeref:typename:void
test_status_worktree_init__bracket_in_filename	extern/libgit2/tests/status/worktree_init.c	/^void test_status_worktree_init__bracket_in_filename(void)$/;"	f	typeref:typename:void
test_status_worktree_init__cannot_retrieve_the_status_of_a_bare_repository	extern/libgit2/tests/status/worktree_init.c	/^void test_status_worktree_init__cannot_retrieve_the_status_of_a_bare_repository(void)$/;"	f	typeref:typename:void
test_status_worktree_init__disable_pathspec_match	extern/libgit2/tests/status/worktree_init.c	/^void test_status_worktree_init__disable_pathspec_match(void)$/;"	f	typeref:typename:void
test_status_worktree_init__first_commit_in_progress	extern/libgit2/tests/status/worktree_init.c	/^void test_status_worktree_init__first_commit_in_progress(void)$/;"	f	typeref:typename:void
test_status_worktree_init__new_staged_file_must_handle_crlf	extern/libgit2/tests/status/worktree_init.c	/^void test_status_worktree_init__new_staged_file_must_handle_crlf(void)$/;"	f	typeref:typename:void
test_status_worktree_init__space_in_filename	extern/libgit2/tests/status/worktree_init.c	/^void test_status_worktree_init__space_in_filename(void)$/;"	f	typeref:typename:void
test_status_worktree_init__status_file_with_clean_index_and_empty_workdir	extern/libgit2/tests/status/worktree_init.c	/^void test_status_worktree_init__status_file_with_clean_index_and_empty_workdir(void)$/;"	f	typeref:typename:void
test_status_worktree_init__status_file_without_index_or_workdir	extern/libgit2/tests/status/worktree_init.c	/^void test_status_worktree_init__status_file_without_index_or_workdir(void)$/;"	f	typeref:typename:void
test_stream	extern/libgit2/tests/filter/stream.c	/^static void test_stream(size_t numchunks)$/;"	f	typeref:typename:void	file:
test_stream	extern/libgit2/tests/stream/deprecated.c	/^static git_stream test_stream;$/;"	v	typeref:typename:git_stream	file:
test_stream	extern/libgit2/tests/stream/registration.c	/^static git_stream test_stream;$/;"	v	typeref:typename:git_stream	file:
test_stream_deprecated__cleanup	extern/libgit2/tests/stream/deprecated.c	/^void test_stream_deprecated__cleanup(void)$/;"	f	typeref:typename:void
test_stream_deprecated__register_tls	extern/libgit2/tests/stream/deprecated.c	/^void test_stream_deprecated__register_tls(void)$/;"	f	typeref:typename:void
test_stream_init	extern/libgit2/tests/stream/deprecated.c	/^static int test_stream_init(git_stream **out, const char *host, const char *port)$/;"	f	typeref:typename:int	file:
test_stream_init	extern/libgit2/tests/stream/registration.c	/^static int test_stream_init(git_stream **out, const char *host, const char *port)$/;"	f	typeref:typename:int	file:
test_stream_registration__both	extern/libgit2/tests/stream/registration.c	/^void test_stream_registration__both(void)$/;"	f	typeref:typename:void
test_stream_registration__cleanup	extern/libgit2/tests/stream/registration.c	/^void test_stream_registration__cleanup(void)$/;"	f	typeref:typename:void
test_stream_registration__insecure	extern/libgit2/tests/stream/registration.c	/^void test_stream_registration__insecure(void)$/;"	f	typeref:typename:void
test_stream_registration__tls	extern/libgit2/tests/stream/registration.c	/^void test_stream_registration__tls(void)$/;"	f	typeref:typename:void
test_stream_wrap	extern/libgit2/tests/stream/registration.c	/^static int test_stream_wrap(git_stream **out, git_stream *in, const char *host)$/;"	f	typeref:typename:int	file:
test_stress_diff__cleanup	extern/libgit2/tests/stress/diff.c	/^void test_stress_diff__cleanup(void)$/;"	f	typeref:typename:void
test_stress_diff__initialize	extern/libgit2/tests/stress/diff.c	/^void test_stress_diff__initialize(void)$/;"	f	typeref:typename:void
test_stress_diff__rename_big_files	extern/libgit2/tests/stress/diff.c	/^void test_stress_diff__rename_big_files(void)$/;"	f	typeref:typename:void
test_stress_diff__rename_many_files	extern/libgit2/tests/stress/diff.c	/^void test_stress_diff__rename_many_files(void)$/;"	f	typeref:typename:void
test_string	extern/libgit2/tests/buf/basic.c	/^static const char *test_string = "Have you seen that? Have you seeeen that??";$/;"	v	typeref:typename:const char *	file:
test_string	extern/libgit2/tests/core/buffer.c	/^const char *test_string = TESTSTR;$/;"	v	typeref:typename:const char *
test_string_x2	extern/libgit2/tests/core/buffer.c	/^const char *test_string_x2 = TESTSTR TESTSTR;$/;"	v	typeref:typename:const char *
test_submodule_add__cleanup	extern/libgit2/tests/submodule/add.c	/^void test_submodule_add__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_add__file_exists_in_index	extern/libgit2/tests/submodule/add.c	/^void test_submodule_add__file_exists_in_index(void)$/;"	f	typeref:typename:void
test_submodule_add__path_exists_in_index	extern/libgit2/tests/submodule/add.c	/^void test_submodule_add__path_exists_in_index(void)$/;"	f	typeref:typename:void
test_submodule_add__url_absolute	extern/libgit2/tests/submodule/add.c	/^void test_submodule_add__url_absolute(void)$/;"	f	typeref:typename:void
test_submodule_add__url_relative	extern/libgit2/tests/submodule/add.c	/^void test_submodule_add__url_relative(void)$/;"	f	typeref:typename:void
test_submodule_add__url_relative_to_origin	extern/libgit2/tests/submodule/add.c	/^void test_submodule_add__url_relative_to_origin(void)$/;"	f	typeref:typename:void
test_submodule_add__url_relative_to_workdir	extern/libgit2/tests/submodule/add.c	/^void test_submodule_add__url_relative_to_workdir(void)$/;"	f	typeref:typename:void
test_submodule_escape__cleanup	extern/libgit2/tests/submodule/escape.c	/^void test_submodule_escape__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_escape__from_gitdir	extern/libgit2/tests/submodule/escape.c	/^void test_submodule_escape__from_gitdir(void)$/;"	f	typeref:typename:void
test_submodule_escape__from_gitdir_windows	extern/libgit2/tests/submodule/escape.c	/^void test_submodule_escape__from_gitdir_windows(void)$/;"	f	typeref:typename:void
test_submodule_init__absolute_url	extern/libgit2/tests/submodule/init.c	/^void test_submodule_init__absolute_url(void)$/;"	f	typeref:typename:void
test_submodule_init__cleanup	extern/libgit2/tests/submodule/init.c	/^void test_submodule_init__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_init__relative_url	extern/libgit2/tests/submodule/init.c	/^void test_submodule_init__relative_url(void)$/;"	f	typeref:typename:void
test_submodule_init__relative_url_detached_head	extern/libgit2/tests/submodule/init.c	/^void test_submodule_init__relative_url_detached_head(void)$/;"	f	typeref:typename:void
test_submodule_inject_option__cleanup	extern/libgit2/tests/submodule/inject_option.c	/^void test_submodule_inject_option__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_inject_option__initialize	extern/libgit2/tests/submodule/inject_option.c	/^void test_submodule_inject_option__initialize(void)$/;"	f	typeref:typename:void
test_submodule_inject_option__path	extern/libgit2/tests/submodule/inject_option.c	/^void test_submodule_inject_option__path(void)$/;"	f	typeref:typename:void
test_submodule_inject_option__url	extern/libgit2/tests/submodule/inject_option.c	/^void test_submodule_inject_option__url(void)$/;"	f	typeref:typename:void
test_submodule_lookup__accessors	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__accessors(void)$/;"	f	typeref:typename:void
test_submodule_lookup__backslashes	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__backslashes(void)$/;"	f	typeref:typename:void
test_submodule_lookup__cached	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__cached(void)$/;"	f	typeref:typename:void
test_submodule_lookup__cleanup	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_lookup__duplicated_path	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__duplicated_path(void)$/;"	f	typeref:typename:void
test_submodule_lookup__fail_invalid_gitmodules	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__fail_invalid_gitmodules(void)$/;"	f	typeref:typename:void
test_submodule_lookup__foreach	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__foreach(void)$/;"	f	typeref:typename:void
test_submodule_lookup__foreach_in_bare_repository_fails	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__foreach_in_bare_repository_fails(void)$/;"	f	typeref:typename:void
test_submodule_lookup__initialize	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__initialize(void)$/;"	f	typeref:typename:void
test_submodule_lookup__just_added	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__just_added(void)$/;"	f	typeref:typename:void
test_submodule_lookup__lookup_even_with_missing_index	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__lookup_even_with_missing_index(void)$/;"	f	typeref:typename:void
test_submodule_lookup__lookup_even_with_unborn_head	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__lookup_even_with_unborn_head(void)$/;"	f	typeref:typename:void
test_submodule_lookup__lookup_in_bare_repository_fails	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__lookup_in_bare_repository_fails(void)$/;"	f	typeref:typename:void
test_submodule_lookup__prefix_name	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__prefix_name(void)$/;"	f	typeref:typename:void
test_submodule_lookup__renamed	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__renamed(void)$/;"	f	typeref:typename:void
test_submodule_lookup__simple_lookup	extern/libgit2/tests/submodule/lookup.c	/^void test_submodule_lookup__simple_lookup(void)$/;"	f	typeref:typename:void
test_submodule_modify__init	extern/libgit2/tests/submodule/modify.c	/^void test_submodule_modify__init(void)$/;"	f	typeref:typename:void
test_submodule_modify__initialize	extern/libgit2/tests/submodule/modify.c	/^void test_submodule_modify__initialize(void)$/;"	f	typeref:typename:void
test_submodule_modify__set_branch	extern/libgit2/tests/submodule/modify.c	/^void test_submodule_modify__set_branch(void)$/;"	f	typeref:typename:void
test_submodule_modify__set_fetch_recurse_submodules	extern/libgit2/tests/submodule/modify.c	/^void test_submodule_modify__set_fetch_recurse_submodules(void)$/;"	f	typeref:typename:void
test_submodule_modify__set_ignore	extern/libgit2/tests/submodule/modify.c	/^void test_submodule_modify__set_ignore(void)$/;"	f	typeref:typename:void
test_submodule_modify__set_update	extern/libgit2/tests/submodule/modify.c	/^void test_submodule_modify__set_update(void)$/;"	f	typeref:typename:void
test_submodule_modify__set_url	extern/libgit2/tests/submodule/modify.c	/^void test_submodule_modify__set_url(void)$/;"	f	typeref:typename:void
test_submodule_modify__sync	extern/libgit2/tests/submodule/modify.c	/^void test_submodule_modify__sync(void)$/;"	f	typeref:typename:void
test_submodule_nosubs__add	extern/libgit2/tests/submodule/nosubs.c	/^void test_submodule_nosubs__add(void)$/;"	f	typeref:typename:void
test_submodule_nosubs__add_and_delete	extern/libgit2/tests/submodule/nosubs.c	/^void test_submodule_nosubs__add_and_delete(void)$/;"	f	typeref:typename:void
test_submodule_nosubs__bad_gitmodules	extern/libgit2/tests/submodule/nosubs.c	/^void test_submodule_nosubs__bad_gitmodules(void)$/;"	f	typeref:typename:void
test_submodule_nosubs__cleanup	extern/libgit2/tests/submodule/nosubs.c	/^void test_submodule_nosubs__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_nosubs__foreach	extern/libgit2/tests/submodule/nosubs.c	/^void test_submodule_nosubs__foreach(void)$/;"	f	typeref:typename:void
test_submodule_nosubs__lookup	extern/libgit2/tests/submodule/nosubs.c	/^void test_submodule_nosubs__lookup(void)$/;"	f	typeref:typename:void
test_submodule_open__cleanup	extern/libgit2/tests/submodule/open.c	/^void test_submodule_open__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_open__direct_open_succeeds	extern/libgit2/tests/submodule/open.c	/^void test_submodule_open__direct_open_succeeds(void)$/;"	f	typeref:typename:void
test_submodule_open__direct_open_succeeds_for_broken_sm_with_gitdir	extern/libgit2/tests/submodule/open.c	/^void test_submodule_open__direct_open_succeeds_for_broken_sm_with_gitdir(void)$/;"	f	typeref:typename:void
test_submodule_open__initialize	extern/libgit2/tests/submodule/open.c	/^void test_submodule_open__initialize(void)$/;"	f	typeref:typename:void
test_submodule_open__opening_via_lookup_succeeds	extern/libgit2/tests/submodule/open.c	/^void test_submodule_open__opening_via_lookup_succeeds(void)$/;"	f	typeref:typename:void
test_submodule_repository_init__basic	extern/libgit2/tests/submodule/repository_init.c	/^void test_submodule_repository_init__basic(void)$/;"	f	typeref:typename:void
test_submodule_status__cleanup	extern/libgit2/tests/submodule/status.c	/^void test_submodule_status__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_status__ignore_all	extern/libgit2/tests/submodule/status.c	/^void test_submodule_status__ignore_all(void)$/;"	f	typeref:typename:void
test_submodule_status__ignore_dirty	extern/libgit2/tests/submodule/status.c	/^void test_submodule_status__ignore_dirty(void)$/;"	f	typeref:typename:void
test_submodule_status__ignore_none	extern/libgit2/tests/submodule/status.c	/^void test_submodule_status__ignore_none(void)$/;"	f	typeref:typename:void
test_submodule_status__ignore_untracked	extern/libgit2/tests/submodule/status.c	/^void test_submodule_status__ignore_untracked(void)$/;"	f	typeref:typename:void
test_submodule_status__initialize	extern/libgit2/tests/submodule/status.c	/^void test_submodule_status__initialize(void)$/;"	f	typeref:typename:void
test_submodule_status__iterator	extern/libgit2/tests/submodule/status.c	/^void test_submodule_status__iterator(void)$/;"	f	typeref:typename:void
test_submodule_status__unchanged	extern/libgit2/tests/submodule/status.c	/^void test_submodule_status__unchanged(void)$/;"	f	typeref:typename:void
test_submodule_status__untracked_dirs_containing_ignored_files	extern/libgit2/tests/submodule/status.c	/^void test_submodule_status__untracked_dirs_containing_ignored_files(void)$/;"	f	typeref:typename:void
test_submodule_update__can_force_update	extern/libgit2/tests/submodule/update.c	/^void test_submodule_update__can_force_update(void)$/;"	f	typeref:typename:void
test_submodule_update__cleanup	extern/libgit2/tests/submodule/update.c	/^void test_submodule_update__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_update__unitialized_submodule_no_init	extern/libgit2/tests/submodule/update.c	/^void test_submodule_update__unitialized_submodule_no_init(void)$/;"	f	typeref:typename:void
test_submodule_update__update_already_checked_out_submodule	extern/libgit2/tests/submodule/update.c	/^void test_submodule_update__update_already_checked_out_submodule(void)$/;"	f	typeref:typename:void
test_submodule_update__update_and_init_submodule	extern/libgit2/tests/submodule/update.c	/^void test_submodule_update__update_and_init_submodule(void)$/;"	f	typeref:typename:void
test_submodule_update__update_blocks_on_dirty_wd	extern/libgit2/tests/submodule/update.c	/^void test_submodule_update__update_blocks_on_dirty_wd(void)$/;"	f	typeref:typename:void
test_submodule_update__update_submodule	extern/libgit2/tests/submodule/update.c	/^void test_submodule_update__update_submodule(void)$/;"	f	typeref:typename:void
test_submodule_update__update_submodule_with_path	extern/libgit2/tests/submodule/update.c	/^void test_submodule_update__update_submodule_with_path(void)$/;"	f	typeref:typename:void
test_threads_basic__cache	extern/libgit2/tests/threads/basic.c	/^void test_threads_basic__cache(void)$/;"	f	typeref:typename:void
test_threads_basic__cleanup	extern/libgit2/tests/threads/basic.c	/^void test_threads_basic__cleanup(void)$/;"	f	typeref:typename:void
test_threads_basic__exit	extern/libgit2/tests/threads/basic.c	/^void test_threads_basic__exit(void)$/;"	f	typeref:typename:void
test_threads_basic__initialize	extern/libgit2/tests/threads/basic.c	/^void test_threads_basic__initialize(void)$/;"	f	typeref:typename:void
test_threads_basic__multiple_init	extern/libgit2/tests/threads/basic.c	/^void test_threads_basic__multiple_init(void)$/;"	f	typeref:typename:void
test_threads_basic__set_error	extern/libgit2/tests/threads/basic.c	/^void test_threads_basic__set_error(void)$/;"	f	typeref:typename:void
test_threads_diff__cleanup	extern/libgit2/tests/threads/diff.c	/^void test_threads_diff__cleanup(void)$/;"	f	typeref:typename:void
test_threads_diff__concurrent_diffs	extern/libgit2/tests/threads/diff.c	/^void test_threads_diff__concurrent_diffs(void)$/;"	f	typeref:typename:void
test_threads_diff__initialize	extern/libgit2/tests/threads/diff.c	/^void test_threads_diff__initialize(void)$/;"	f	typeref:typename:void
test_threads_diff__with_concurrent_index_modified	extern/libgit2/tests/threads/diff.c	/^void test_threads_diff__with_concurrent_index_modified(void)$/;"	f	typeref:typename:void
test_threads_iterator__cleanup	extern/libgit2/tests/threads/iterator.c	/^void test_threads_iterator__cleanup(void)$/;"	f	typeref:typename:void
test_threads_iterator__workdir	extern/libgit2/tests/threads/iterator.c	/^void test_threads_iterator__workdir(void)$/;"	f	typeref:typename:void
test_threads_refdb__cleanup	extern/libgit2/tests/threads/refdb.c	/^void test_threads_refdb__cleanup(void)$/;"	f	typeref:typename:void
test_threads_refdb__edit_while_iterate	extern/libgit2/tests/threads/refdb.c	/^void test_threads_refdb__edit_while_iterate(void)$/;"	f	typeref:typename:void
test_threads_refdb__initialize	extern/libgit2/tests/threads/refdb.c	/^void test_threads_refdb__initialize(void)$/;"	f	typeref:typename:void
test_trace_trace__can_reset	extern/libgit2/tests/trace/trace.c	/^void test_trace_trace__can_reset(void)$/;"	f	typeref:typename:void
test_trace_trace__can_unset	extern/libgit2/tests/trace/trace.c	/^void test_trace_trace__can_unset(void)$/;"	f	typeref:typename:void
test_trace_trace__cleanup	extern/libgit2/tests/trace/trace.c	/^void test_trace_trace__cleanup(void)$/;"	f	typeref:typename:void
test_trace_trace__initialize	extern/libgit2/tests/trace/trace.c	/^void test_trace_trace__initialize(void)$/;"	f	typeref:typename:void
test_trace_trace__sets	extern/libgit2/tests/trace/trace.c	/^void test_trace_trace__sets(void)$/;"	f	typeref:typename:void
test_trace_trace__skips_higher_level	extern/libgit2/tests/trace/trace.c	/^void test_trace_trace__skips_higher_level(void)$/;"	f	typeref:typename:void
test_trace_trace__writes	extern/libgit2/tests/trace/trace.c	/^void test_trace_trace__writes(void)$/;"	f	typeref:typename:void
test_trace_trace__writes_lower_level	extern/libgit2/tests/trace/trace.c	/^void test_trace_trace__writes_lower_level(void)$/;"	f	typeref:typename:void
test_trace_windows_stacktrace__aux1	extern/libgit2/tests/trace/windows/stacktrace.c	/^void test_trace_windows_stacktrace__aux1(void)$/;"	f	typeref:typename:void
test_trace_windows_stacktrace__basic	extern/libgit2/tests/trace/windows/stacktrace.c	/^void test_trace_windows_stacktrace__basic(void)$/;"	f	typeref:typename:void
test_trace_windows_stacktrace__leaks	extern/libgit2/tests/trace/windows/stacktrace.c	/^void test_trace_windows_stacktrace__leaks(void)$/;"	f	typeref:typename:void
test_transport_register__custom_transport	extern/libgit2/tests/transport/register.c	/^void test_transport_register__custom_transport(void)$/;"	f	typeref:typename:void
test_transport_register__custom_transport_error_doubleregister	extern/libgit2/tests/transport/register.c	/^void test_transport_register__custom_transport_error_doubleregister(void)$/;"	f	typeref:typename:void
test_transport_register__custom_transport_error_remove_non_existing	extern/libgit2/tests/transport/register.c	/^void test_transport_register__custom_transport_error_remove_non_existing(void)$/;"	f	typeref:typename:void
test_transport_register__custom_transport_ssh	extern/libgit2/tests/transport/register.c	/^void test_transport_register__custom_transport_ssh(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__ack_pkt	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__ack_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__comment_pkt	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__comment_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__data_pkt	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__data_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__error_pkt	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__error_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__flush_parses	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__flush_parses(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__nak_pkt	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__nak_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__ng_pkt	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__ng_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__ok_pkt	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__ok_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__parsing_garbage_fails	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__parsing_garbage_fails(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__ref_pkt	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__ref_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__sideband_err_pkt	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__sideband_err_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__sideband_progress_pkt	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__sideband_progress_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__unpack_pkt	extern/libgit2/tests/transports/smart/packet.c	/^void test_transports_smart_packet__unpack_pkt(void)$/;"	f	typeref:typename:void
test_tree_to_tree_computed_to_parsed	extern/libgit2/tests/diff/parse.c	/^static void test_tree_to_tree_computed_to_parsed($/;"	f	typeref:typename:void	file:
test_utf8_to_utf16	extern/libgit2/tests/path/win32.c	/^void test_utf8_to_utf16(const char *utf8_in, const wchar_t *utf16_expected)$/;"	f	typeref:typename:void
test_walk	extern/libgit2/tests/revwalk/basic.c	/^static int test_walk(git_revwalk *walk, const git_oid *root,$/;"	f	typeref:typename:int	file:
test_walk_only	extern/libgit2/tests/revwalk/basic.c	/^static int test_walk_only(git_revwalk *walk,$/;"	f	typeref:typename:int	file:
test_win32_forbidden__can_add_forbidden_filename_with_entry	extern/libgit2/tests/win32/forbidden.c	/^void test_win32_forbidden__can_add_forbidden_filename_with_entry(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_blame_file	extern/libgit2/tests/win32/forbidden.c	/^void test_win32_forbidden__can_blame_file(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_diff_index_to_workdir	extern/libgit2/tests/win32/forbidden.c	/^void test_win32_forbidden__can_diff_index_to_workdir(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_diff_tree_to_index	extern/libgit2/tests/win32/forbidden.c	/^void test_win32_forbidden__can_diff_tree_to_index(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_diff_tree_to_tree	extern/libgit2/tests/win32/forbidden.c	/^void test_win32_forbidden__can_diff_tree_to_tree(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_open_index	extern/libgit2/tests/win32/forbidden.c	/^void test_win32_forbidden__can_open_index(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_query_submodules	extern/libgit2/tests/win32/forbidden.c	/^void test_win32_forbidden__can_query_submodules(void)$/;"	f	typeref:typename:void
test_win32_forbidden__cannot_add_dot_git_even_with_entry	extern/libgit2/tests/win32/forbidden.c	/^void test_win32_forbidden__cannot_add_dot_git_even_with_entry(void)$/;"	f	typeref:typename:void
test_win32_forbidden__cannot_add_forbidden_filename_from_filesystem	extern/libgit2/tests/win32/forbidden.c	/^void test_win32_forbidden__cannot_add_forbidden_filename_from_filesystem(void)$/;"	f	typeref:typename:void
test_win32_forbidden__checking_out_forbidden_index_fails	extern/libgit2/tests/win32/forbidden.c	/^void test_win32_forbidden__checking_out_forbidden_index_fails(void)$/;"	f	typeref:typename:void
test_win32_forbidden__cleanup	extern/libgit2/tests/win32/forbidden.c	/^void test_win32_forbidden__cleanup(void)$/;"	f	typeref:typename:void
test_win32_forbidden__initialize	extern/libgit2/tests/win32/forbidden.c	/^void test_win32_forbidden__initialize(void)$/;"	f	typeref:typename:void
test_win32_longpath__cleanup	extern/libgit2/tests/win32/longpath.c	/^void test_win32_longpath__cleanup(void)$/;"	f	typeref:typename:void
test_win32_longpath__errmsg_on_checkout	extern/libgit2/tests/win32/longpath.c	/^void test_win32_longpath__errmsg_on_checkout(void)$/;"	f	typeref:typename:void
test_win32_longpath__initialize	extern/libgit2/tests/win32/longpath.c	/^void test_win32_longpath__initialize(void)$/;"	f	typeref:typename:void
test_win32_name	extern/libgit2/tests/refs/create.c	/^static void test_win32_name(const char *name)$/;"	f	typeref:typename:void	file:
test_with_many	extern/libgit2/tests/stress/diff.c	/^static void test_with_many(int expected_new)$/;"	f	typeref:typename:void	file:
test_worktree_bare__add	extern/libgit2/tests/worktree/bare.c	/^void test_worktree_bare__add(void)$/;"	f	typeref:typename:void
test_worktree_bare__cleanup	extern/libgit2/tests/worktree/bare.c	/^void test_worktree_bare__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_bare__initialize	extern/libgit2/tests/worktree/bare.c	/^void test_worktree_bare__initialize(void)$/;"	f	typeref:typename:void
test_worktree_bare__list	extern/libgit2/tests/worktree/bare.c	/^void test_worktree_bare__list(void)$/;"	f	typeref:typename:void
test_worktree_bare__repository_path	extern/libgit2/tests/worktree/bare.c	/^void test_worktree_bare__repository_path(void)$/;"	f	typeref:typename:void
test_worktree_config__cleanup	extern/libgit2/tests/worktree/config.c	/^void test_worktree_config__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_config__initialize	extern/libgit2/tests/worktree/config.c	/^void test_worktree_config__initialize(void)$/;"	f	typeref:typename:void
test_worktree_config__open	extern/libgit2/tests/worktree/config.c	/^void test_worktree_config__open(void)$/;"	f	typeref:typename:void
test_worktree_config__set	extern/libgit2/tests/worktree/config.c	/^void test_worktree_config__set(void)$/;"	f	typeref:typename:void
test_worktree_merge__cleanup	extern/libgit2/tests/worktree/merge.c	/^void test_worktree_merge__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_merge__initialize	extern/libgit2/tests/worktree/merge.c	/^void test_worktree_merge__initialize(void)$/;"	f	typeref:typename:void
test_worktree_merge__merge_conflict	extern/libgit2/tests/worktree/merge.c	/^void test_worktree_merge__merge_conflict(void)$/;"	f	typeref:typename:void
test_worktree_merge__merge_head	extern/libgit2/tests/worktree/merge.c	/^void test_worktree_merge__merge_head(void)$/;"	f	typeref:typename:void
test_worktree_merge__merge_setup	extern/libgit2/tests/worktree/merge.c	/^void test_worktree_merge__merge_setup(void)$/;"	f	typeref:typename:void
test_worktree_open__cleanup	extern/libgit2/tests/worktree/open.c	/^void test_worktree_open__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_open__initialize	extern/libgit2/tests/worktree/open.c	/^void test_worktree_open__initialize(void)$/;"	f	typeref:typename:void
test_worktree_open__open_discovered_worktree	extern/libgit2/tests/worktree/open.c	/^void test_worktree_open__open_discovered_worktree(void)$/;"	f	typeref:typename:void
test_worktree_open__open_from_nonworktree_fails	extern/libgit2/tests/worktree/open.c	/^void test_worktree_open__open_from_nonworktree_fails(void)$/;"	f	typeref:typename:void
test_worktree_open__open_from_repository	extern/libgit2/tests/worktree/open.c	/^void test_worktree_open__open_from_repository(void)$/;"	f	typeref:typename:void
test_worktree_open__repository	extern/libgit2/tests/worktree/open.c	/^void test_worktree_open__repository(void)$/;"	f	typeref:typename:void
test_worktree_open__repository_through_gitdir	extern/libgit2/tests/worktree/open.c	/^void test_worktree_open__repository_through_gitdir(void)$/;"	f	typeref:typename:void
test_worktree_open__repository_through_gitlink	extern/libgit2/tests/worktree/open.c	/^void test_worktree_open__repository_through_gitlink(void)$/;"	f	typeref:typename:void
test_worktree_open__repository_through_workdir	extern/libgit2/tests/worktree/open.c	/^void test_worktree_open__repository_through_workdir(void)$/;"	f	typeref:typename:void
test_worktree_open__repository_with_nonexistent_parent	extern/libgit2/tests/worktree/open.c	/^void test_worktree_open__repository_with_nonexistent_parent(void)$/;"	f	typeref:typename:void
test_worktree_reflog__append_then_read	extern/libgit2/tests/worktree/reflog.c	/^void test_worktree_reflog__append_then_read(void)$/;"	f	typeref:typename:void
test_worktree_reflog__cleanup	extern/libgit2/tests/worktree/reflog.c	/^void test_worktree_reflog__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_reflog__initialize	extern/libgit2/tests/worktree/reflog.c	/^void test_worktree_reflog__initialize(void)$/;"	f	typeref:typename:void
test_worktree_reflog__read	extern/libgit2/tests/worktree/reflog.c	/^void test_worktree_reflog__read(void)$/;"	f	typeref:typename:void
test_worktree_reflog__read_parent_HEAD	extern/libgit2/tests/worktree/reflog.c	/^void test_worktree_reflog__read_parent_HEAD(void)$/;"	f	typeref:typename:void
test_worktree_reflog__read_worktree_HEAD	extern/libgit2/tests/worktree/reflog.c	/^void test_worktree_reflog__read_worktree_HEAD(void)$/;"	f	typeref:typename:void
test_worktree_refs__cleanup	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_refs__creating_refs_uses_commondir	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__creating_refs_uses_commondir(void)$/;"	f	typeref:typename:void
test_worktree_refs__delete_fails_for_checked_out_branch	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__delete_fails_for_checked_out_branch(void)$/;"	f	typeref:typename:void
test_worktree_refs__delete_succeeds_after_pruning_worktree	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__delete_succeeds_after_pruning_worktree(void)$/;"	f	typeref:typename:void
test_worktree_refs__delete_unrelated_branch_on_parent	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__delete_unrelated_branch_on_parent(void)$/;"	f	typeref:typename:void
test_worktree_refs__delete_unrelated_branch_on_worktree	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__delete_unrelated_branch_on_worktree(void)$/;"	f	typeref:typename:void
test_worktree_refs__initialize	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__initialize(void)$/;"	f	typeref:typename:void
test_worktree_refs__list	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__list(void)$/;"	f	typeref:typename:void
test_worktree_refs__read_head	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__read_head(void)$/;"	f	typeref:typename:void
test_worktree_refs__renaming_reference_updates_worktree_heads	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__renaming_reference_updates_worktree_heads(void)$/;"	f	typeref:typename:void
test_worktree_refs__set_head_fails_when_already_checked_out	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__set_head_fails_when_already_checked_out(void)$/;"	f	typeref:typename:void
test_worktree_refs__set_head_fails_when_main_repo_wants_worktree_head	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__set_head_fails_when_main_repo_wants_worktree_head(void)$/;"	f	typeref:typename:void
test_worktree_refs__set_head_fails_when_worktree_wants_linked_repos_HEAD	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__set_head_fails_when_worktree_wants_linked_repos_HEAD(void)$/;"	f	typeref:typename:void
test_worktree_refs__set_head_works_for_current_HEAD	extern/libgit2/tests/worktree/refs.c	/^void test_worktree_refs__set_head_works_for_current_HEAD(void)$/;"	f	typeref:typename:void
test_worktree_repository__cleanup	extern/libgit2/tests/worktree/repository.c	/^void test_worktree_repository__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_repository__head	extern/libgit2/tests/worktree/repository.c	/^void test_worktree_repository__head(void)$/;"	f	typeref:typename:void
test_worktree_repository__head_detached	extern/libgit2/tests/worktree/repository.c	/^void test_worktree_repository__head_detached(void)$/;"	f	typeref:typename:void
test_worktree_repository__head_detached_fails_for_invalid_worktree	extern/libgit2/tests/worktree/repository.c	/^void test_worktree_repository__head_detached_fails_for_invalid_worktree(void)$/;"	f	typeref:typename:void
test_worktree_repository__head_fails_for_invalid_worktree	extern/libgit2/tests/worktree/repository.c	/^void test_worktree_repository__head_fails_for_invalid_worktree(void)$/;"	f	typeref:typename:void
test_worktree_repository__initialize	extern/libgit2/tests/worktree/repository.c	/^void test_worktree_repository__initialize(void)$/;"	f	typeref:typename:void
test_worktree_submodule__cleanup	extern/libgit2/tests/worktree/submodule.c	/^void test_worktree_submodule__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_submodule__initialize	extern/libgit2/tests/worktree/submodule.c	/^void test_worktree_submodule__initialize(void)$/;"	f	typeref:typename:void
test_worktree_submodule__open_discovered_submodule_worktree	extern/libgit2/tests/worktree/submodule.c	/^void test_worktree_submodule__open_discovered_submodule_worktree(void)$/;"	f	typeref:typename:void
test_worktree_submodule__resolve_relative_url	extern/libgit2/tests/worktree/submodule.c	/^void test_worktree_submodule__resolve_relative_url(void)$/;"	f	typeref:typename:void
test_worktree_submodule__submodule_worktree_child	extern/libgit2/tests/worktree/submodule.c	/^void test_worktree_submodule__submodule_worktree_child(void)$/;"	f	typeref:typename:void
test_worktree_submodule__submodule_worktree_parent	extern/libgit2/tests/worktree/submodule.c	/^void test_worktree_submodule__submodule_worktree_parent(void)$/;"	f	typeref:typename:void
test_worktree_worktree__add_locked	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__add_locked(void)$/;"	f	typeref:typename:void
test_worktree_worktree__add_with_explicit_branch	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__add_with_explicit_branch(void)$/;"	f	typeref:typename:void
test_worktree_worktree__cleanup	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_worktree__foreach_head_gives_same_results_in_wt_and_repo	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__foreach_head_gives_same_results_in_wt_and_repo(void)$/;"	f	typeref:typename:void
test_worktree_worktree__init	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__init(void)$/;"	f	typeref:typename:void
test_worktree_worktree__init_existing_branch	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__init_existing_branch(void)$/;"	f	typeref:typename:void
test_worktree_worktree__init_existing_path	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__init_existing_path(void)$/;"	f	typeref:typename:void
test_worktree_worktree__init_existing_worktree	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__init_existing_worktree(void)$/;"	f	typeref:typename:void
test_worktree_worktree__init_submodule	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__init_submodule(void)$/;"	f	typeref:typename:void
test_worktree_worktree__initialize	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__initialize(void)$/;"	f	typeref:typename:void
test_worktree_worktree__list	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__list(void)$/;"	f	typeref:typename:void
test_worktree_worktree__list_in_worktree_repo	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__list_in_worktree_repo(void)$/;"	f	typeref:typename:void
test_worktree_worktree__list_with_invalid_worktree_dirs	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__list_with_invalid_worktree_dirs(void)$/;"	f	typeref:typename:void
test_worktree_worktree__list_without_worktrees	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__list_without_worktrees(void)$/;"	f	typeref:typename:void
test_worktree_worktree__lock_with_reason	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__lock_with_reason(void)$/;"	f	typeref:typename:void
test_worktree_worktree__lock_without_reason	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__lock_without_reason(void)$/;"	f	typeref:typename:void
test_worktree_worktree__lookup	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__lookup(void)$/;"	f	typeref:typename:void
test_worktree_worktree__lookup_nonexistent_worktree	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__lookup_nonexistent_worktree(void)$/;"	f	typeref:typename:void
test_worktree_worktree__name	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__name(void)$/;"	f	typeref:typename:void
test_worktree_worktree__open	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__open(void)$/;"	f	typeref:typename:void
test_worktree_worktree__open_invalid_commondir	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__open_invalid_commondir(void)$/;"	f	typeref:typename:void
test_worktree_worktree__open_invalid_gitdir	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__open_invalid_gitdir(void)$/;"	f	typeref:typename:void
test_worktree_worktree__open_invalid_parent	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__open_invalid_parent(void)$/;"	f	typeref:typename:void
test_worktree_worktree__path	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__path(void)$/;"	f	typeref:typename:void
test_worktree_worktree__prune_gitdir_only	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__prune_gitdir_only(void)$/;"	f	typeref:typename:void
test_worktree_worktree__prune_locked	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__prune_locked(void)$/;"	f	typeref:typename:void
test_worktree_worktree__prune_valid	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__prune_valid(void)$/;"	f	typeref:typename:void
test_worktree_worktree__prune_without_opts_fails	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__prune_without_opts_fails(void)$/;"	f	typeref:typename:void
test_worktree_worktree__prune_worktree	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__prune_worktree(void)$/;"	f	typeref:typename:void
test_worktree_worktree__unlock_locked_worktree	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__unlock_locked_worktree(void)$/;"	f	typeref:typename:void
test_worktree_worktree__unlock_unlocked_worktree	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__unlock_unlocked_worktree(void)$/;"	f	typeref:typename:void
test_worktree_worktree__validate	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__validate(void)$/;"	f	typeref:typename:void
test_worktree_worktree__validate_invalid_commondir	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__validate_invalid_commondir(void)$/;"	f	typeref:typename:void
test_worktree_worktree__validate_invalid_gitdir	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__validate_invalid_gitdir(void)$/;"	f	typeref:typename:void
test_worktree_worktree__validate_invalid_parent	extern/libgit2/tests/worktree/worktree.c	/^void test_worktree_worktree__validate_invalid_parent(void)$/;"	f	typeref:typename:void
test_write_object_permission	extern/libgit2/tests/odb/loose.c	/^void test_write_object_permission($/;"	f	typeref:typename:void
test_write_pack_permission	extern/libgit2/tests/pack/packbuilder.c	/^static void test_write_pack_permission(mode_t given, mode_t expected)$/;"	f	typeref:typename:void	file:
testrepo2_subdir_paths	extern/libgit2/tests/status/worktree.c	/^static const char *testrepo2_subdir_paths[] = {$/;"	v	typeref:typename:const char * []	file:
testrepo2_subdir_paths_icase	extern/libgit2/tests/status/worktree.c	/^static const char *testrepo2_subdir_paths_icase[] = {$/;"	v	typeref:typename:const char * []	file:
tests	extern/libgit2/tests/clar.c	/^	const struct clar_func *tests;$/;"	m	struct:clar_suite	typeref:typename:const struct clar_func *	file:
tests_ran	extern/libgit2/tests/clar.c	/^	int tests_ran;$/;"	m	struct:__anonab24499b0108	typeref:typename:int	file:
testt	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonda4e2ebc0108	typeref:typename:int
text	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text xml_node::text() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_text
text	extern/libgit2/deps/zlib/zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s	typeref:typename:int
text_eol_is_crlf	extern/libgit2/src/crlf.c	/^static int text_eol_is_crlf(struct crlf_attrs *ca)$/;"	f	typeref:typename:int	file:
text_output	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void text_output(xml_buffered_writer& writer, const char_t* s, chartypex_t type, un/;"	f	typeref:typename:PUGI__FN void
text_output_cdata	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void text_output_cdata(xml_buffered_writer& writer, const char_t* s) {$/;"	f	typeref:typename:PUGI__FN void
text_output_escaped	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void text_output_escaped(xml_buffered_writer& writer, const char_t* s, chartypex_t /;"	f	typeref:typename:PUGI__FN void
text_output_indent	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void text_output_indent(xml_buffered_writer& writer, const char_t* indent, size_t i/;"	f	typeref:typename:PUGI__FN void
textual_content	extern/libgit2/tests/object/blob/fromstream.c	/^static char textual_content[] = "libgit2\\n\\r\\n\\0";$/;"	v	typeref:typename:char[]	file:
th.dirtab	extern/OpenXLSX/doxy/customdoxygen.css	/^th.dirtab {$/;"	c
th_data	extern/libgit2/tests/threads/refdb.c	/^struct th_data {$/;"	s	file:
their_entry	extern/libgit2/src/merge.h	/^	git_index_entry their_entry;$/;"	m	struct:__anon41711a830508	typeref:typename:git_index_entry
their_label	extern/libgit2/include/git2/checkout.h	/^	const char *their_label; \/**< the name of the "their" side of conflicts *\/$/;"	m	struct:git_checkout_options	typeref:typename:const char *
their_label	extern/libgit2/include/git2/merge.h	/^	const char *their_label;$/;"	m	struct:__anon5e9a43240508	typeref:typename:const char *
their_mode	extern/libgit2/tests/merge/merge_helpers.h	/^	unsigned int their_mode;$/;"	m	struct:merge_reuc_entry	typeref:typename:unsigned int
their_oid_str	extern/libgit2/tests/merge/merge_helpers.h	/^	char their_oid_str[GIT_OID_HEXSZ+1];$/;"	m	struct:merge_reuc_entry	typeref:typename:char[]
their_path	extern/libgit2/tests/merge/merge_helpers.h	/^	char their_path[128];$/;"	m	struct:merge_name_entry	typeref:typename:char[128]
their_status	extern/libgit2/src/merge.h	/^	git_delta_t their_status;$/;"	m	struct:__anon41711a830508	typeref:typename:git_delta_t
theirs	extern/libgit2/include/git2/sys/index.h	/^	char *theirs;$/;"	m	struct:git_index_name_entry	typeref:typename:char *
theirs	extern/libgit2/src/checkout.c	/^	const git_index_entry *theirs;$/;"	m	struct:__anonbac5d6240308	typeref:typename:const git_index_entry *	file:
theirs	extern/libgit2/src/merge_driver.h	/^	const git_index_entry *theirs;$/;"	m	struct:git_merge_driver_source	typeref:typename:const git_index_entry *
theirs	extern/libgit2/tests/checkout/conflict.c	/^	char theirs[64];$/;"	m	struct:checkout_name_entry	typeref:typename:char[64]	file:
theirs	extern/libgit2/tests/merge/merge_helpers.h	/^	struct merge_index_with_status theirs;$/;"	m	struct:merge_index_conflict_data	typeref:struct:merge_index_with_status
then_offsets	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u8 *then_offsets;$/;"	m	struct:compiler_common	typeref:typename:sljit_u8 *	file:
then_trap	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct then_trap_backtrack *then_trap;$/;"	m	struct:then_trap_backtrack	typeref:struct:then_trap_backtrack *	file:
then_trap	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  then_trap_backtrack *then_trap;$/;"	m	struct:compiler_common	typeref:typename:then_trap_backtrack *	file:
then_trap_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct then_trap_backtrack {$/;"	s	file:
then_trap_backtrack	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^} then_trap_backtrack;$/;"	t	typeref:struct:then_trap_backtrack	file:
then_trap_opcode	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar then_trap_opcode[1] = { OP_THEN_TRAP };$/;"	v	typeref:typename:pcre_uchar[1]	file:
thin_pack	extern/libgit2/src/transports/smart.h	/^		thin_pack:1;$/;"	m	struct:transport_smart_caps	typeref:typename:int:1
thin_pack	extern/libgit2/tests/pack/indexer.c	/^static const unsigned char thin_pack[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
thin_pack_len	extern/libgit2/tests/pack/indexer.c	/^static const unsigned int thin_pack_len = 78;$/;"	v	typeref:typename:const unsigned int	file:
third section	extern/libgit2/tests/resources/userdiff/after/file.html	/^  <h1 id="third section">$/;"	I
third section	extern/libgit2/tests/resources/userdiff/before/file.html	/^  <h1 id="third section">$/;"	I
third section	extern/libgit2/tests/resources/userdiff/expected/driver/diff.html	/^@@ -35,4 +37,2 @@ <h1 id="third section">$/;"	I
third section	extern/libgit2/tests/resources/userdiff/files/file.html	/^  <h1 id="third section">$/;"	I
third_tree	extern/libgit2/tests/object/tree/write.c	/^static const char *third_tree = "eb86d8b81d6adbd5290a935d6c9976882de98488";$/;"	v	typeref:typename:const char *	file:
thread	extern/libgit2/src/pack-objects.c	/^	git_thread thread;$/;"	m	struct:thread_params	typeref:typename:git_thread	file:
thread	extern/libgit2/src/unix/pthread.h	/^	pthread_t thread;$/;"	m	struct:__anon0c727dee0108	typeref:typename:pthread_t
thread	extern/libgit2/src/win32/thread.h	/^	HANDLE thread;$/;"	m	struct:__anon7162bc2d0108	typeref:typename:HANDLE
thread_params	extern/libgit2/src/pack-objects.c	/^struct thread_params {$/;"	s	file:
threaded_find_deltas	extern/libgit2/src/pack-objects.c	/^static void *threaded_find_deltas(void *arg)$/;"	f	typeref:typename:void *	file:
threadid_cb	extern/libgit2/src/streams/openssl.c	/^static void threadid_cb(CRYPTO_THREADID *threadid)$/;"	f	typeref:typename:void	file:
tick_index	extern/libgit2/tests/checkout/checkout_helpers.c	/^void tick_index(git_index *index)$/;"	f	typeref:typename:void
time	extern/libgit2/deps/zlib/zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s	typeref:typename:uLong
time	extern/libgit2/include/git2/types.h	/^	git_time_t time; \/**< time in seconds from epoch *\/$/;"	m	struct:git_time	typeref:typename:git_time_t
time	extern/libgit2/src/commit_list.h	/^	int64_t time;$/;"	m	struct:git_commit_list_node	typeref:typename:int64_t
time	extern/libgit2/tests/commit/parse.c	/^	git_time_t time;$/;"	m	struct:__anond44356cc0208	typeref:typename:git_time_t	file:
time_started	extern/libgit2/tests/clar_libgit2_timer.h	/^	double time_started;$/;"	m	struct:cl_perf_timer	typeref:typename:double
time_started	extern/libgit2/tests/perf/helper__perf__timer.h	/^	LARGE_INTEGER time_started;$/;"	m	struct:perf__timer	typeref:typename:LARGE_INTEGER
time_started	extern/libgit2/tests/perf/helper__perf__timer.h	/^	uint32_t time_started;$/;"	m	struct:perf__timer	typeref:typename:uint32_t
timespec	extern/libgit2/src/win32/win32-compat.h	/^#define timespec /;"	d
timestamp	extern/libgit2/deps/ntlmclient/ntlm.h	/^	uint64_t timestamp;$/;"	m	struct:ntlm_client	typeref:typename:uint64_t
timezone_names	extern/libgit2/src/date.c	/^} timezone_names[] = {$/;"	v	typeref:typename:const struct __anon6112fc6c0208[]
tinfl_bit_buf_t	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef mz_uint32 tinfl_bit_buf_t;$/;"	t	typeref:typename:mz_uint32
tinfl_bit_buf_t	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef mz_uint64 tinfl_bit_buf_t;$/;"	t	typeref:typename:mz_uint64
tinfl_decompress	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline tinfl_status tinfl_decompress(tinfl_decompressor* r,$/;"	f	typeref:typename:tinfl_status
tinfl_decompress_mem_to_callback	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline int tinfl_decompress_mem_to_callback(const void* pIn_buf,$/;"	f	typeref:typename:int
tinfl_decompress_mem_to_heap	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void* tinfl_decompress_mem_to_heap(const void* pSrc_buf, size_t src_buf_len, size_t* pOut/;"	f	typeref:typename:void *
tinfl_decompress_mem_to_mem	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^tinfl_decompress_mem_to_mem(void* pOut_buf, size_t out_buf_len, const void* pSrc_buf, size_t src/;"	f	typeref:typename:size_t
tinfl_decompressor	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef struct tinfl_decompressor_tag tinfl_decompressor;$/;"	t	typeref:struct:tinfl_decompressor_tag
tinfl_decompressor_alloc	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline tinfl_decompressor* tinfl_decompressor_alloc() {$/;"	f	typeref:typename:tinfl_decompressor *
tinfl_decompressor_free	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^inline void tinfl_decompressor_free(tinfl_decompressor* pDecomp) {$/;"	f	typeref:typename:void
tinfl_decompressor_tag	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^struct tinfl_decompressor_tag$/;"	s
tinfl_get_adler32	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define tinfl_get_adler32(/;"	d
tinfl_huff_table	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} tinfl_huff_table;$/;"	t	typeref:struct:__anon09af45a71008
tinfl_init	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define tinfl_init(/;"	d
tinfl_put_buf_func_ptr	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef int (* tinfl_put_buf_func_ptr)(const void* pBuf, int len, void* pUser);$/;"	t	typeref:typename:int (*)(const void * pBuf,int len,void * pUser)
tinfl_status	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^} tinfl_status;$/;"	t	typeref:enum:__anon09af45a70e03
tlno	extern/libgit2/src/blame_git.c	/^	long tlno;$/;"	m	struct:blame_chunk_cb_data	typeref:typename:long	file:
tls_callbacks	extern/libgit2/src/streams/registry.c	/^	git_stream_registration tls_callbacks;$/;"	m	struct:stream_registry	typeref:typename:git_stream_registration	file:
tm	extern/OpenXLSX/tests/c++/Test02_DocumentProperties.cpp	/^std::tm tm = *std::gmtime(&t);$/;"	v	typeref:typename:std::tm
tm_to_time_t	extern/libgit2/src/date.c	/^static git_time_t tm_to_time_t(const struct tm *tm)$/;"	f	typeref:typename:git_time_t	file:
tmp	extern/libgit2/src/attr_file.h	/^	git_buf tmp;$/;"	m	struct:__anon32d629ad0908	typeref:typename:git_buf
tmp	extern/libgit2/src/checkout.c	/^	git_buf tmp;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_buf	file:
tmp_buf	extern/libgit2/src/iterator.c	/^	git_buf tmp_buf;$/;"	m	struct:__anonb487a9b80808	typeref:typename:git_buf	file:
to	extern/libgit2/include/git2/revparse.h	/^	git_object *to;$/;"	m	struct:__anonaab5087c0208	typeref:typename:git_object *
to	extern/libgit2/src/futils.c	/^	git_buf to;$/;"	m	struct:__anonce3edc250208	typeref:typename:git_buf	file:
to_hex	extern/libgit2/src/oid.c	/^static char to_hex[] = "0123456789abcdef";$/;"	v	typeref:typename:char[]	file:
to_hex	extern/libgit2/tests/core/pool.c	/^static char to_hex[] = "0123456789abcdef";$/;"	v	typeref:typename:char[]	file:
to_root	extern/libgit2/src/futils.c	/^	const char *to_root;$/;"	m	struct:__anonce3edc250208	typeref:typename:const char *	file:
tokens	extern/libgit2/deps/http-parser/http_parser.c	/^static const char tokens[256] = {$/;"	v	typeref:typename:const char[256]	file:
tolower_ascii	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN char_t tolower_ascii(char_t ch)$/;"	f	typeref:typename:PUGI__FN char_t
top	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct backtrack_common *top;$/;"	m	struct:backtrack_common	typeref:struct:backtrack_common *	file:
top_backref	extern/libgit2/deps/pcre/pcre_internal.h	/^  int  top_backref;                 \/* Maximum back reference *\/$/;"	m	struct:compile_data	typeref:typename:int
top_backref	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 top_backref;        \/* Highest numbered back reference *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
top_backref	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 top_backref;        \/* Highest numbered back reference *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
top_bracket	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 top_bracket;        \/* Highest numbered group *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
top_bracket	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 top_bracket;        \/* Highest numbered group *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
top_bracket	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 top_bracket;$/;"	m	struct:executable_functions	typeref:typename:sljit_u32	file:
top_dir	extern/libgit2/tests/core/dirent.c	/^static char *top_dir = "dir-walk";$/;"	v	typeref:typename:char *	file:
topbacktracks	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *topbacktracks;$/;"	m	struct:backtrack_common	typeref:typename:jump_list *	file:
topo_delay	extern/libgit2/src/commit_list.h	/^			 topo_delay:1,$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned int:1
toptable1	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^static const pcre_uint8 toptable1[] = {$/;"	v	typeref:typename:const pcre_uint8[]	file:
toptable2	extern/libgit2/deps/pcre/pcre_dfa_exec.c	/^static const pcre_uint8 toptable2[] = {$/;"	v	typeref:typename:const pcre_uint8[]	file:
total	extern/libgit2/deps/zlib/inflate.h	/^    unsigned long total;        \/* protected copy of output count *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned long
total	extern/libgit2/src/commit.c	/^	size_t total;$/;"	m	struct:__anon2b8e95b70108	typeref:typename:size_t	file:
total	extern/libgit2/src/commit.c	/^	size_t total;$/;"	m	struct:__anon2b8e95b70208	typeref:typename:size_t	file:
total	extern/libgit2/src/commit.c	/^	size_t total;$/;"	m	struct:__anon2b8e95b70308	typeref:typename:size_t	file:
total	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	uint64_t total;$/;"	m	struct:__anon3f63bb720108	typeref:typename:uint64_t
total_deltas	extern/libgit2/include/git2/indexer.h	/^	unsigned int total_deltas;$/;"	m	struct:git_indexer_progress	typeref:typename:unsigned int
total_errors	extern/libgit2/tests/clar.c	/^	int total_errors;$/;"	m	struct:__anonab24499b0108	typeref:typename:int	file:
total_in	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_ulong total_in;            \/* total number of bytes consumed so far *\/$/;"	m	struct:mz_stream_s	typeref:typename:mz_ulong
total_in	extern/libgit2/deps/zlib/zlib.h	/^    uLong    total_in;  \/* total number of input bytes read so far *\/$/;"	m	struct:z_stream_s	typeref:typename:uLong
total_objects	extern/libgit2/include/git2/indexer.h	/^	unsigned int total_objects;$/;"	m	struct:git_indexer_progress	typeref:typename:unsigned int
total_out	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_ulong total_out;      \/* total number of bytes produced so far *\/$/;"	m	struct:mz_stream_s	typeref:typename:mz_ulong
total_out	extern/libgit2/deps/zlib/zlib.h	/^    uLong    total_out; \/* total number of bytes output so far *\/$/;"	m	struct:z_stream_s	typeref:typename:uLong
total_patches	extern/libgit2/include/git2/diff.h	/^	size_t total_patches;$/;"	m	struct:__anon72022fed1308	typeref:typename:size_t
total_skipped	extern/libgit2/tests/clar.c	/^	int total_skipped;$/;"	m	struct:__anonab24499b0108	typeref:typename:int	file:
total_steps	extern/libgit2/examples/clone.c	/^	size_t total_steps;$/;"	m	struct:progress_data	typeref:typename:size_t	file:
total_steps	extern/libgit2/src/checkout.c	/^	size_t total_steps;$/;"	m	struct:__anonbac5d6240208	typeref:typename:size_t	file:
touch_file	extern/libgit2/tests/diff/workdir.c	/^static int touch_file(void *payload, git_buf *path)$/;"	f	typeref:typename:int	file:
tr.heading h2	extern/OpenXLSX/doxy/customdoxygen.css	/^tr.heading h2 {$/;"	s
tr.memlist	extern/OpenXLSX/doxy/customdoxygen.css	/^tr.memlist {$/;"	c
tr_static_init	extern/libgit2/deps/zlib/trees.c	/^local void tr_static_init()$/;"	f	typeref:typename:local void
trace_callback	extern/libgit2/tests/trace/trace.c	/^static void trace_callback(git_trace_level_t level, const char *message)$/;"	f	typeref:typename:void	file:
trace_payload	extern/libgit2/tests/clar.c	/^	void *trace_payload;$/;"	m	struct:__anonab24499b0108	typeref:typename:void *	file:
trailer	extern/libgit2/src/indexer.c	/^	git_hash_ctx trailer;$/;"	m	struct:git_indexer	typeref:typename:git_hash_ctx	file:
trailer_state	extern/libgit2/src/trailer.c	/^enum trailer_state {$/;"	g	file:
trailers	extern/libgit2/include/git2/message.h	/^  git_message_trailer *trailers;$/;"	m	struct:__anond70699990208	typeref:typename:git_message_trailer *
trailingBytesForUTF8	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^static const char trailingBytesForUTF8[256] = {$/;"	v	typeref:typename:const char[256]	file:
trailing_space_length	extern/libgit2/src/attr_file.c	/^static size_t trailing_space_length(const char *p, size_t len)$/;"	f	typeref:typename:size_t	file:
trampoline	extern/libgit2/tests/clar.c	/^	jmp_buf trampoline;$/;"	m	struct:__anonab24499b0108	typeref:typename:jmp_buf	file:
trampoline_enabled	extern/libgit2/tests/clar.c	/^	int trampoline_enabled;$/;"	m	struct:__anonab24499b0108	typeref:typename:int	file:
transaction_node	extern/libgit2/src/transaction.c	/^} transaction_node;$/;"	t	typeref:struct:__anon8eca35140208	file:
transaction_t	extern/libgit2/src/transaction.c	/^} transaction_t;$/;"	t	typeref:enum:__anon8eca35140103	file:
transferProgressCallback	extern/libgit2/tests/online/fetch.c	/^static int transferProgressCallback(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
transfer_cb	extern/libgit2/tests/network/fetchlocal.c	/^static int transfer_cb(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
transfer_encoding	extern/libgit2/src/transports/winhttp.c	/^static const wchar_t *transfer_encoding = L"Transfer-Encoding: chunked";$/;"	v	typeref:typename:const wchar_t *	file:
transfer_progress	extern/libgit2/include/git2/remote.h	/^	git_indexer_progress_cb transfer_progress;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_indexer_progress_cb
transfer_progress_calls	extern/libgit2/tests/online/push_util.h	/^	int transfer_progress_calls;$/;"	m	struct:__anon56a1c92f0208	typeref:typename:int
transfer_progress_cb	extern/libgit2/examples/fetch.c	/^static int transfer_progress_cb(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
transfer_to_push_transfer	extern/libgit2/src/transports/local.c	/^static int transfer_to_push_transfer(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
transient_count_leaks	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^	unsigned int transient_count_leaks; \/* sum of leaks *\/$/;"	m	struct:__anon6890d5050208	typeref:typename:unsigned int	file:
transitions	extern/libgit2/src/patch_parse.c	/^static const parse_header_transition transitions[] = {$/;"	v	typeref:typename:const parse_header_transition[]	file:
translate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN char_t* translate(char_t* buffer, const char_t* from, const char_t* to, size_t to_leng/;"	f	typeref:typename:PUGI__FN char_t *
translate_table	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN char_t* translate_table(char_t* buffer, const unsigned char* table)$/;"	f	typeref:typename:PUGI__FN char_t *
translate_table_generate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN unsigned char* translate_table_generate(xpath_allocator* alloc, const char_t* from, co/;"	f	typeref:typename:PUGI__FN unsigned char *
transport	extern/libgit2/include/git2/remote.h	/^	git_transport_cb transport;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_transport_cb
transport	extern/libgit2/src/remote.h	/^	git_transport *transport;$/;"	m	struct:git_remote	typeref:typename:git_transport *
transport_definition	extern/libgit2/src/transport.c	/^typedef struct transport_definition {$/;"	s	file:
transport_definition	extern/libgit2/src/transport.c	/^} transport_definition;$/;"	t	typeref:struct:transport_definition	file:
transport_find_by_url	extern/libgit2/src/transport.c	/^static transport_definition * transport_find_by_url(const char *url)$/;"	f	typeref:typename:transport_definition *	file:
transport_find_fn	extern/libgit2/src/transport.c	/^static int transport_find_fn($/;"	f	typeref:typename:int	file:
transport_local	extern/libgit2/src/transports/local.c	/^} transport_local;$/;"	t	typeref:struct:__anonb65cbde80108	file:
transport_smart	extern/libgit2/src/transports/smart.h	/^} transport_smart;$/;"	t	typeref:struct:__anoncc6f59690b08
transport_smart_caps	extern/libgit2/src/transports/smart.h	/^typedef struct transport_smart_caps {$/;"	s
transport_smart_caps	extern/libgit2/src/transports/smart.h	/^} transport_smart_caps;$/;"	t	typeref:struct:transport_smart_caps
transports	extern/libgit2/src/transport.c	/^static transport_definition transports[] = {$/;"	v	typeref:typename:transport_definition[]	file:
traverse	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN bool xml_node::traverse(xml_tree_walker& walker) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN bool
tree	extern/libgit2/src/annotated_commit.h	/^	git_tree *tree;$/;"	m	struct:git_annotated_commit	typeref:typename:git_tree *
tree	extern/libgit2/src/index.c	/^	git_tree_cache *tree;$/;"	m	struct:read_tree_data	typeref:typename:git_tree_cache *	file:
tree	extern/libgit2/src/index.h	/^	git_tree_cache *tree;$/;"	m	struct:git_index	typeref:typename:git_tree_cache *
tree	extern/libgit2/src/iterator.c	/^	git_tree *tree;$/;"	m	struct:__anonb487a9b80408	typeref:typename:git_tree *	file:
tree	extern/libgit2/src/iterator.c	/^	git_tree *tree;$/;"	m	struct:__anonb487a9b80808	typeref:typename:git_tree *	file:
tree	extern/libgit2/src/reader.c	/^	git_tree *tree;$/;"	m	struct:__anone500b1410108	typeref:typename:git_tree *	file:
tree	extern/libgit2/src/tree.c	/^	git_tree *tree;$/;"	m	struct:__anon8790ed5e0108	typeref:typename:git_tree *	file:
tree	extern/libgit2/tests/object/tree/frompath.c	/^static	git_tree *tree;$/;"	v	typeref:typename:git_tree *	file:
tree	extern/libgit2/tests/odb/loose_data.h	/^static object_data tree = {$/;"	v	typeref:typename:object_data
tree	extern/libgit2/tests/repo/headtree.c	/^static git_tree *tree;$/;"	v	typeref:typename:git_tree *	file:
tree_buf	extern/libgit2/src/iterator.c	/^	git_buf tree_buf;$/;"	m	struct:__anonb487a9b80908	typeref:typename:git_buf	file:
tree_bytes	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char tree_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
tree_checker	extern/libgit2/tests/object/tree/duplicateentries.c	/^static void tree_checker($/;"	f	typeref:typename:void	file:
tree_creator	extern/libgit2/tests/object/tree/duplicateentries.c	/^static void tree_creator(git_oid *out, void (*fn)(git_treebuilder *))$/;"	f	typeref:typename:void	file:
tree_data	extern/libgit2/tests/object/raw/data.h	/^static unsigned char tree_data[] = {$/;"	v	typeref:typename:unsigned char[]
tree_data	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char tree_data[] = {$/;"	v	typeref:typename:unsigned char[]
tree_desc	extern/libgit2/deps/zlib/deflate.h	/^} FAR tree_desc;$/;"	t	typeref:struct:tree_desc_s FAR
tree_desc_s	extern/libgit2/deps/zlib/deflate.h	/^typedef struct tree_desc_s {$/;"	s
tree_entry	extern/libgit2/src/iterator.c	/^	git_index_entry tree_entry;$/;"	m	struct:__anonb487a9b80908	typeref:typename:git_index_entry	file:
tree_entry	extern/libgit2/src/iterator.c	/^	git_tree_entry *tree_entry;$/;"	m	struct:__anonb487a9b80308	typeref:typename:git_tree_entry *	file:
tree_entry_cmp	extern/libgit2/src/iterator.c	/^GIT_INLINE(int) tree_entry_cmp($/;"	f	typeref:typename:int
tree_error	extern/libgit2/src/tree.c	/^static int tree_error(const char *str, const char *path)$/;"	f	typeref:typename:int	file:
tree_id	extern/libgit2/src/commit.h	/^	git_oid tree_id;$/;"	m	struct:git_commit	typeref:typename:git_oid
tree_id	extern/libgit2/tests/object/raw/data.h	/^static char *tree_id = "dff2da90b254e1beb889d1f1f1288be1803782df";$/;"	v	typeref:typename:char *
tree_id_str	extern/libgit2/tests/commit/write.c	/^static const char *tree_id_str = "1810dff58d8a660512d4832e740f692884338ccd";$/;"	v	typeref:typename:const char *	file:
tree_iterator	extern/libgit2/src/iterator.c	/^} tree_iterator;$/;"	t	typeref:struct:__anonb487a9b80508	file:
tree_iterator	p.cpp	/^template <typename T> struct tree_iterator {$/;"	s	file:
tree_iterator_advance	extern/libgit2/src/iterator.c	/^static int tree_iterator_advance(const git_index_entry **out, git_iterator *i)$/;"	f	typeref:typename:int	file:
tree_iterator_advance_into	extern/libgit2/src/iterator.c	/^static int tree_iterator_advance_into($/;"	f	typeref:typename:int	file:
tree_iterator_advance_over	extern/libgit2/src/iterator.c	/^static int tree_iterator_advance_over($/;"	f	typeref:typename:int	file:
tree_iterator_clear	extern/libgit2/src/iterator.c	/^static void tree_iterator_clear(tree_iterator *iter)$/;"	f	typeref:typename:void	file:
tree_iterator_compute_path	extern/libgit2/src/iterator.c	/^static int tree_iterator_compute_path($/;"	f	typeref:typename:int	file:
tree_iterator_current	extern/libgit2/src/iterator.c	/^static int tree_iterator_current($/;"	f	typeref:typename:int	file:
tree_iterator_current_entry	extern/libgit2/src/iterator.c	/^GIT_INLINE(tree_iterator_entry *) tree_iterator_current_entry($/;"	f	typeref:typename:tree_iterator_entry *
tree_iterator_current_frame	extern/libgit2/src/iterator.c	/^GIT_INLINE(tree_iterator_frame *) tree_iterator_current_frame($/;"	f	typeref:typename:tree_iterator_frame *
tree_iterator_entry	extern/libgit2/src/iterator.c	/^} tree_iterator_entry;$/;"	t	typeref:struct:__anonb487a9b80308	file:
tree_iterator_entry_cmp_icase	extern/libgit2/src/iterator.c	/^GIT_INLINE(int) tree_iterator_entry_cmp_icase($/;"	f	typeref:typename:int
tree_iterator_entry_sort_icase	extern/libgit2/src/iterator.c	/^static int tree_iterator_entry_sort_icase(const void *ptr_a, const void *ptr_b)$/;"	f	typeref:typename:int	file:
tree_iterator_frame	extern/libgit2/src/iterator.c	/^} tree_iterator_frame;$/;"	t	typeref:struct:__anonb487a9b80408	file:
tree_iterator_frame_init	extern/libgit2/src/iterator.c	/^static int tree_iterator_frame_init($/;"	f	typeref:typename:int	file:
tree_iterator_frame_pop	extern/libgit2/src/iterator.c	/^static void tree_iterator_frame_pop(tree_iterator *iter)$/;"	f	typeref:typename:void	file:
tree_iterator_frame_push	extern/libgit2/src/iterator.c	/^GIT_INLINE(int) tree_iterator_frame_push($/;"	f	typeref:typename:int
tree_iterator_frame_push_neighbors	extern/libgit2/src/iterator.c	/^GIT_INLINE(int) tree_iterator_frame_push_neighbors($/;"	f	typeref:typename:int
tree_iterator_free	extern/libgit2/src/iterator.c	/^static void tree_iterator_free(git_iterator *i)$/;"	f	typeref:typename:void	file:
tree_iterator_init	extern/libgit2/src/iterator.c	/^static int tree_iterator_init(tree_iterator *iter)$/;"	f	typeref:typename:int	file:
tree_iterator_parent_frame	extern/libgit2/src/iterator.c	/^GIT_INLINE(tree_iterator_frame *) tree_iterator_parent_frame($/;"	f	typeref:typename:tree_iterator_frame *
tree_iterator_reset	extern/libgit2/src/iterator.c	/^static int tree_iterator_reset(git_iterator *i)$/;"	f	typeref:typename:int	file:
tree_iterator_set_current	extern/libgit2/src/iterator.c	/^static void tree_iterator_set_current($/;"	f	typeref:typename:void	file:
tree_iterator_test	extern/libgit2/tests/iterator/tree.c	/^static void tree_iterator_test($/;"	f	typeref:typename:void	file:
tree_key_search	extern/libgit2/src/tree.c	/^static int tree_key_search($/;"	f	typeref:typename:int	file:
tree_key_search	extern/libgit2/src/tree.c	/^struct tree_key_search {$/;"	s	file:
tree_obj	extern/libgit2/tests/object/raw/data.h	/^static git_rawobj tree_obj = {$/;"	v	typeref:typename:git_rawobj
tree_oid	extern/libgit2/tests/object/tree/attributes.c	/^static const char *tree_oid  = "1b05fdaa881ee45b48cbaa5e9b037d667a47745e";$/;"	v	typeref:typename:const char *	file:
tree_oid	extern/libgit2/tests/object/tree/read.c	/^static const char *tree_oid = "1810dff58d8a660512d4832e740f692884338ccd";$/;"	v	typeref:typename:const char *	file:
tree_oid	extern/libgit2/tests/object/tree/walk.c	/^static const char *tree_oid = "1810dff58d8a660512d4832e740f692884338ccd";$/;"	v	typeref:typename:const char *	file:
tree_parsing	extern/libgit2/examples/general.c	/^static void tree_parsing(git_repository *repo)$/;"	f	typeref:typename:void	file:
tree_pool	extern/libgit2/src/index.h	/^	git_pool tree_pool;$/;"	m	struct:git_index	typeref:typename:git_pool
tree_reader	extern/libgit2/src/reader.c	/^} tree_reader;$/;"	t	typeref:struct:__anone500b1410108	file:
tree_reader_read	extern/libgit2/src/reader.c	/^static int tree_reader_read($/;"	f	typeref:typename:int	file:
tree_stack_entry	extern/libgit2/src/tree.c	/^} tree_stack_entry;$/;"	t	typeref:struct:__anon8790ed5e0108	file:
tree_walk	extern/libgit2/src/tree.c	/^static int tree_walk($/;"	f	typeref:typename:int	file:
tree_walk_context	extern/libgit2/src/pack-objects.c	/^struct tree_walk_context {$/;"	s	file:
tree_write	extern/libgit2/src/notes.c	/^static int tree_write($/;"	f	typeref:typename:int	file:
treebuilder_filter_prefixed	extern/libgit2/tests/object/tree/write.c	/^static int treebuilder_filter_prefixed($/;"	f	typeref:typename:int	file:
treebuilder_get	extern/libgit2/src/tree.c	/^static git_tree_entry *treebuilder_get(git_treebuilder *bld, const char *filename)$/;"	f	typeref:typename:git_tree_entry *	file:
treeish1	extern/libgit2/examples/diff.c	/^	const char *treeish1;$/;"	m	struct:opts	typeref:typename:const char *	file:
treeish2	extern/libgit2/examples/diff.c	/^	const char *treeish2;$/;"	m	struct:opts	typeref:typename:const char *	file:
treeish_to_tree	extern/libgit2/examples/common.c	/^void treeish_to_tree($/;"	f	typeref:typename:void
treewalk_count_cb	extern/libgit2/tests/object/tree/walk.c	/^static int treewalk_count_cb($/;"	f	typeref:typename:int	file:
treewalk_skip_data	extern/libgit2/tests/object/tree/walk.c	/^struct treewalk_skip_data {$/;"	s	file:
treewalk_skip_de_cb	extern/libgit2/tests/object/tree/walk.c	/^static int treewalk_skip_de_cb($/;"	f	typeref:typename:int	file:
treewalk_stop_cb	extern/libgit2/tests/object/tree/walk.c	/^static int treewalk_stop_cb($/;"	f	typeref:typename:int	file:
treewalk_stop_immediately_cb	extern/libgit2/tests/object/tree/walk.c	/^static int treewalk_stop_immediately_cb($/;"	f	typeref:typename:int	file:
trie_node	extern/libgit2/src/oid.c	/^} trie_node;$/;"	t	typeref:union:__anonfbfa448a010a	file:
trim_common_tail	extern/libgit2/src/blame_git.c	/^static void trim_common_tail(mmfile_t *a, mmfile_t *b, long ctx)$/;"	f	typeref:typename:void	file:
true	extern/libgit2/deps/ntlmclient/compat.h	/^#  define true /;"	d
true	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define true /;"	d	file:
true	extern/libgit2/src/cc-compat.h	/^#		define true /;"	d
true_given	extern/OpenXLSX/tests/catch/catch.hpp	/^template <typename> struct true_given : std::true_type {};$/;"	s	namespace:Catch
truncate	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		void truncate(xpath_node* pos)$/;"	f	class:xpath_node_set_raw	typeref:typename:void	file:
truncate_fetch_head	extern/libgit2/src/remote.c	/^static int truncate_fetch_head(const char *gitdir)$/;"	f	typeref:typename:int	file:
truncate_racily_clean	extern/libgit2/src/index.c	/^static int truncate_racily_clean(git_index *index)$/;"	f	typeref:typename:int	file:
truncate_zeros	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN void truncate_zeros(char* begin, char* end)$/;"	f	typeref:typename:PUGI__FN void
try_build_signature	extern/libgit2/tests/commit/signature.c	/^static int try_build_signature(const char *name, const char *email, git_time_t time, int offset)$/;"	f	typeref:typename:int	file:
try_create_file_with_nsec_timestamp	extern/libgit2/tests/index/nsec.c	/^static bool try_create_file_with_nsec_timestamp(const char *path)$/;"	f	typeref:typename:bool	file:
try_delta	extern/libgit2/src/pack-objects.c	/^static int try_delta(git_packbuilder *pb, struct unpacked *trg,$/;"	f	typeref:typename:int	file:
try_lcs	extern/libgit2/src/xdiff/xhistogram.c	/^static int try_lcs($/;"	f	typeref:typename:int	file:
try_parse_numeric	extern/libgit2/src/revparse.c	/^static int try_parse_numeric(int *n, const char *curly_braces_content)$/;"	f	typeref:typename:int	file:
try_remove_existing_backend	extern/libgit2/src/config.c	/^static void try_remove_existing_backend($/;"	f	typeref:typename:void	file:
try_set_locale	extern/libgit2/tests/core/posix.c	/^static void try_set_locale(int category)$/;"	f	typeref:typename:void	file:
tsort_r_cmp	extern/libgit2/src/tsort.c	/^static int tsort_r_cmp(const void *a, const void *b, void *payload)$/;"	f	typeref:typename:int	file:
tsort_run	extern/libgit2/src/tsort.c	/^struct tsort_run {$/;"	s	file:
tsort_store	extern/libgit2/src/tsort.c	/^struct tsort_store {$/;"	s	file:
tt	extern/OpenXLSX/doxy/customdoxygen.css	/^tt, code, kbd, samp, a.el,$/;"	s
ttt	extern/libgit2/tests/object/message.c	/^#define ttt /;"	d	file:
tv_nsec	extern/libgit2/src/win32/win32-compat.h	/^	long tv_nsec;$/;"	m	struct:p_timespec	typeref:typename:long
tv_sec	extern/libgit2/src/win32/win32-compat.h	/^	time_t tv_sec;$/;"	m	struct:p_timespec	typeref:typename:time_t
tv_sec	extern/libgit2/src/win32/win32-compat.h	/^	time_t tv_sec;$/;"	m	struct:p_timeval	typeref:typename:time_t
tv_usec	extern/libgit2/src/win32/win32-compat.h	/^	suseconds_t tv_usec;$/;"	m	struct:p_timeval	typeref:typename:suseconds_t
two	extern/libgit2/tests/odb/loose_data.h	/^static object_data two = {$/;"	v	typeref:typename:object_data
two_blobs	extern/libgit2/tests/object/tree/duplicateentries.c	/^static void two_blobs(git_treebuilder *bld)$/;"	f	typeref:typename:void	file:
two_bytes	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char two_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
two_data	extern/libgit2/tests/object/raw/data.h	/^static unsigned char two_data[] = {$/;"	v	typeref:typename:unsigned char[]
two_data	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char two_data[] = {$/;"	v	typeref:typename:unsigned char[]
two_id	extern/libgit2/tests/object/raw/data.h	/^static char *two_id = "78981922613b2afb6025042ff6bd878ac1994e85";$/;"	v	typeref:typename:char *
two_obj	extern/libgit2/tests/object/raw/data.h	/^static git_rawobj two_obj = {$/;"	v	typeref:typename:git_rawobj
type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_node_set::type_t type() const$/;"	f	class:xpath_node_set_raw	typeref:typename:xpath_node_set::type_t	file:
type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set::type_t xpath_node_set::type() const$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN xpath_node_set::type_t
type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_value_type xpath_variable::type() const$/;"	f	class:pugi::xpath_variable	typeref:typename:PUGI__FN xpath_value_type
type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef uint16_t type;$/;"	t	struct:utf16_decoder	typeref:typename:uint16_t	file:
type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef uint16_t type;$/;"	t	struct:wchar_selector	typeref:typename:uint16_t	file:
type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef uint32_t type;$/;"	t	struct:utf32_decoder	typeref:typename:uint32_t	file:
type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef uint32_t type;$/;"	t	struct:wchar_selector	typeref:typename:uint32_t	file:
type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef uint8_t type;$/;"	t	struct:latin1_decoder	typeref:typename:uint8_t	file:
type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef uint8_t type;$/;"	t	struct:utf8_decoder	typeref:typename:uint8_t	file:
type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef wchar_t type;$/;"	t	struct:wchar_decoder	typeref:typename:wchar_t	file:
type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node_type xml_node::type() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN xml_node_type
type	extern/libgit2/deps/http-parser/http_parser.h	/^  unsigned char type : 2;     \/* enum http_parser_type *\/$/;"	m	struct:http_parser	typeref:typename:unsigned char:2
type	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 type;$/;"	m	struct:__anonb814e4160508	typeref:typename:pcre_uint16
type	extern/libgit2/include/git2/cert.h	/^	git_cert_ssh_t type;$/;"	m	struct:__anon6f6b75620208	typeref:typename:git_cert_ssh_t
type	extern/libgit2/include/git2/config.h	/^	git_configmap_t type;$/;"	m	struct:__anonefb3184a0308	typeref:typename:git_configmap_t
type	extern/libgit2/include/git2/diff.h	/^	git_diff_binary_t type;$/;"	m	struct:__anon72022fed0808	typeref:typename:git_diff_binary_t
type	extern/libgit2/include/git2/odb.h	/^	git_object_t type;$/;"	m	struct:git_odb_expand_id	typeref:typename:git_object_t
type	extern/libgit2/include/git2/proxy.h	/^	git_proxy_t type;$/;"	m	struct:__anon63af67960208	typeref:typename:git_proxy_t
type	extern/libgit2/include/git2/rebase.h	/^	git_rebase_operation_t type;$/;"	m	struct:__anona97543260308	typeref:typename:git_rebase_operation_t
type	extern/libgit2/src/annotated_commit.h	/^	git_annotated_commit_t type;$/;"	m	struct:git_annotated_commit	typeref:typename:git_annotated_commit_t
type	extern/libgit2/src/cache.h	/^	int16_t    type;  \/* git_object_t value *\/$/;"	m	struct:__anon354735470208	typeref:typename:int16_t
type	extern/libgit2/src/date.c	/^	const char *type;$/;"	m	struct:typelen	typeref:typename:const char *	file:
type	extern/libgit2/src/diff.h	/^	git_diff_origin_t type;$/;"	m	struct:git_diff	typeref:typename:git_diff_origin_t
type	extern/libgit2/src/diff_driver.c	/^	git_diff_driver_t type;$/;"	m	struct:git_diff_driver	typeref:typename:git_diff_driver_t	file:
type	extern/libgit2/src/hash/sha1/win32.h	/^	enum hash_win32_prov_type type;$/;"	m	struct:__anon67941f950108	typeref:enum:hash_win32_prov_type
type	extern/libgit2/src/hash/sha1/win32.h	/^	enum hash_win32_prov_type type;$/;"	m	struct:git_hash_sha1_ctx	typeref:enum:hash_win32_prov_type
type	extern/libgit2/src/iterator.h	/^	git_iterator_type_t type;$/;"	m	struct:git_iterator	typeref:typename:git_iterator_type_t
type	extern/libgit2/src/merge.h	/^	git_merge_diff_type_t type;$/;"	m	struct:__anon41711a830508	typeref:typename:git_merge_diff_type_t
type	extern/libgit2/src/odb.c	/^	git_object_t type;$/;"	m	struct:__anonfbf77e230208	typeref:typename:git_object_t	file:
type	extern/libgit2/src/odb.h	/^	git_object_t type;		\/**< Type of this object. *\/$/;"	m	struct:__anonfbf77e280108	typeref:typename:git_object_t
type	extern/libgit2/src/odb_loose.c	/^	git_object_t type; \/* object type *\/$/;"	m	struct:__anon81c02f840108	typeref:typename:git_object_t	file:
type	extern/libgit2/src/odb_mempack.c	/^	git_object_t type;$/;"	m	struct:memobject	typeref:typename:git_object_t	file:
type	extern/libgit2/src/pack-objects.h	/^	git_object_t type;$/;"	m	struct:git_pobject	typeref:typename:git_object_t
type	extern/libgit2/src/pack.h	/^	git_object_t type;$/;"	m	struct:pack_chain_elem	typeref:typename:git_object_t
type	extern/libgit2/src/rebase.c	/^	git_rebase_type_t type;$/;"	m	struct:git_rebase	typeref:typename:git_rebase_type_t	file:
type	extern/libgit2/src/refs.h	/^	git_reference_t type;$/;"	m	struct:git_reference	typeref:typename:git_reference_t
type	extern/libgit2/src/tag.h	/^	git_object_t type;$/;"	m	struct:git_tag	typeref:typename:git_object_t
type	extern/libgit2/src/transaction.c	/^	transaction_t type;$/;"	m	struct:git_transaction	typeref:typename:transaction_t	file:
type	extern/libgit2/src/transports/auth.h	/^	git_http_authtype_t type;$/;"	m	struct:__anonf415dd740208	typeref:typename:git_http_authtype_t
type	extern/libgit2/src/transports/auth.h	/^	git_http_authtype_t type;$/;"	m	struct:git_http_auth_context	typeref:typename:git_http_authtype_t
type	extern/libgit2/src/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anoncc6f59690208	typeref:typename:git_pkt_type
type	extern/libgit2/src/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anoncc6f59690308	typeref:typename:git_pkt_type
type	extern/libgit2/src/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anoncc6f59690408	typeref:typename:git_pkt_type
type	extern/libgit2/src/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anoncc6f59690508	typeref:typename:git_pkt_type
type	extern/libgit2/src/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anoncc6f59690608	typeref:typename:git_pkt_type
type	extern/libgit2/src/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anoncc6f59690708	typeref:typename:git_pkt_type
type	extern/libgit2/src/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anoncc6f59690808	typeref:typename:git_pkt_type
type	extern/libgit2/src/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anoncc6f59690908	typeref:typename:git_pkt_type
type	extern/libgit2/src/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anoncc6f59690a08	typeref:typename:git_pkt_type
type	extern/libgit2/src/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:git_pkt_cmd	typeref:typename:git_pkt_type
type	extern/libgit2/src/zstream.h	/^	git_zstream_t type;$/;"	m	struct:__anonebc673f90208	typeref:typename:git_zstream_t
type	extern/libgit2/tests/object/cache.c	/^	git_object_t type;$/;"	m	struct:__anond3a8d8530108	typeref:typename:git_object_t	file:
type	extern/libgit2/tests/odb/loose_data.h	/^    char          *type;   \/* object type                               *\/$/;"	m	struct:object_data	typeref:typename:char *
type_mark	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  type_mark = 0,$/;"	e	enum:control_types	file:
type_size_sort	extern/libgit2/src/pack-objects.c	/^static int type_size_sort(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
type_sorted	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^            type_sorted,			\/\/ Sorted by document order (ascending)$/;"	e	enum:pugi::xpath_node_set::type_t
type_sorted_reverse	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^            type_sorted_reverse		\/\/ Sorted by document order (descending)$/;"	e	enum:pugi::xpath_node_set::type_t
type_t	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        enum type_t$/;"	g	class:pugi::xpath_node_set
type_then_trap	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  type_then_trap = 1$/;"	e	enum:control_types	file:
type_unsorted	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^            type_unsorted,			\/\/ Not ordered$/;"	e	enum:pugi::xpath_node_set::type_t
typelen	extern/libgit2/src/date.c	/^static const struct typelen {$/;"	s	file:
typelen	extern/libgit2/src/date.c	/^} typelen[] = {$/;"	v	typeref:typename:const struct typelen[]
u	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  } u;$/;"	m	struct:bracket_backtrack	typeref:union:bracket_backtrack::__anon313b80c3010a	file:
u	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  } u;$/;"	m	struct:char_iterator_backtrack	typeref:union:char_iterator_backtrack::__anon313b80c3020a	file:
u	extern/libgit2/src/bitvec.h	/^	} u;$/;"	m	struct:__anon8263d3700108	typeref:union:__anon8263d3700108::__anon8263d370020a
uInt	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef unsigned int uInt;$/;"	t	typeref:typename:unsigned int
uInt	extern/libgit2/deps/zlib/zconf.h	/^#  define uInt /;"	d
uInt	extern/libgit2/deps/zlib/zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t	typeref:typename:unsigned int
uIntf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef uInt uIntf;$/;"	t	typeref:typename:uInt
uIntf	extern/libgit2/deps/zlib/zconf.h	/^#  define uIntf /;"	d
uIntf	extern/libgit2/deps/zlib/zconf.h	/^typedef uInt  FAR uIntf;$/;"	t	typeref:typename:uInt FAR
uLong	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef mz_ulong uLong;$/;"	t	typeref:typename:mz_ulong
uLong	extern/libgit2/deps/zlib/zconf.h	/^#  define uLong /;"	d
uLong	extern/libgit2/deps/zlib/zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t	typeref:typename:unsigned long
uLongf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef uLong uLongf;$/;"	t	typeref:typename:uLong
uLongf	extern/libgit2/deps/zlib/zconf.h	/^#  define uLongf /;"	d
uLongf	extern/libgit2/deps/zlib/zconf.h	/^typedef uLong FAR uLongf;$/;"	t	typeref:typename:uLong FAR
ubc_check	extern/libgit2/src/hash/sha1/sha1dc/sha1.h	/^	int ubc_check;$/;"	m	struct:__anon3f63bb720108	typeref:typename:int
ubc_check	extern/libgit2/src/hash/sha1/sha1dc/ubc_check.c	/^void ubc_check(const uint32_t W[80], uint32_t dvmask[1])$/;"	f	typeref:typename:void
ucd_caseless_sets	extern/libgit2/deps/pcre/pcre_ucd.c	/^const pcre_uint32 PRIV(ucd_caseless_sets)[] = {$/;"	v	typeref:typename:const pcre_uint32 PRIV ()[]
ucd_caseless_sets	extern/libgit2/deps/pcre/pcre_ucd.c	/^const pcre_uint32 PRIV(ucd_caseless_sets)[] = {0};$/;"	v	typeref:typename:const pcre_uint32 PRIV ()[]
ucd_record	extern/libgit2/deps/pcre/pcre_internal.h	/^} ucd_record;$/;"	t	typeref:struct:__anonb814e4160608
ucd_records	extern/libgit2/deps/pcre/pcre_ucd.c	/^const ucd_record PRIV(ucd_records)[] = { \/* 5760 bytes, record size 8 *\/$/;"	v	typeref:typename:const ucd_record PRIV ()[]
ucd_records	extern/libgit2/deps/pcre/pcre_ucd.c	/^const ucd_record PRIV(ucd_records)[] = {{0,0,0,0,0 }};$/;"	v	typeref:typename:const ucd_record PRIV ()[]
ucd_stage1	extern/libgit2/deps/pcre/pcre_ucd.c	/^const pcre_uint8 PRIV(ucd_stage1)[] = { \/* 8704 bytes *\/$/;"	v	typeref:typename:const pcre_uint8 PRIV ()[]
ucd_stage1	extern/libgit2/deps/pcre/pcre_ucd.c	/^const pcre_uint8 PRIV(ucd_stage1)[] = {0};$/;"	v	typeref:typename:const pcre_uint8 PRIV ()[]
ucd_stage2	extern/libgit2/deps/pcre/pcre_ucd.c	/^const pcre_uint16 PRIV(ucd_stage2)[] = { \/* 58112 bytes, block = 128 *\/$/;"	v	typeref:typename:const pcre_uint16 PRIV ()[]
ucd_stage2	extern/libgit2/deps/pcre/pcre_ucd.c	/^const pcre_uint16 PRIV(ucd_stage2)[] = {0};$/;"	v	typeref:typename:const pcre_uint16 PRIV ()[]
uch	extern/libgit2/deps/zlib/zutil.h	/^typedef unsigned char  uch;$/;"	t	typeref:typename:unsigned char
uchar	extern/libgit2/src/wildmatch.c	/^typedef unsigned char uchar;$/;"	t	typeref:typename:unsigned char	file:
ucharptr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  int ucharptr;$/;"	m	struct:compare_context	typeref:typename:int	file:
uchf	extern/libgit2/deps/zlib/zutil.h	/^typedef uch FAR uchf;$/;"	t	typeref:typename:uch FAR
ucp_Arabic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Arabic,$/;"	e	enum:__anon1db902980403
ucp_Armenian	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Armenian,$/;"	e	enum:__anon1db902980403
ucp_Avestan	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Avestan,$/;"	e	enum:__anon1db902980403
ucp_Balinese	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Balinese,$/;"	e	enum:__anon1db902980403
ucp_Bamum	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Bamum,$/;"	e	enum:__anon1db902980403
ucp_Bassa_Vah	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Bassa_Vah,$/;"	e	enum:__anon1db902980403
ucp_Batak	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Batak,$/;"	e	enum:__anon1db902980403
ucp_Bengali	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Bengali,$/;"	e	enum:__anon1db902980403
ucp_Bopomofo	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Bopomofo,$/;"	e	enum:__anon1db902980403
ucp_Brahmi	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Brahmi,$/;"	e	enum:__anon1db902980403
ucp_Braille	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Braille,$/;"	e	enum:__anon1db902980403
ucp_Buginese	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Buginese,$/;"	e	enum:__anon1db902980403
ucp_Buhid	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Buhid,$/;"	e	enum:__anon1db902980403
ucp_C	extern/libgit2/deps/pcre/ucp.h	/^  ucp_C,     \/* Other *\/$/;"	e	enum:__anon1db902980103
ucp_Canadian_Aboriginal	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Canadian_Aboriginal,$/;"	e	enum:__anon1db902980403
ucp_Carian	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Carian,$/;"	e	enum:__anon1db902980403
ucp_Caucasian_Albanian	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Caucasian_Albanian,$/;"	e	enum:__anon1db902980403
ucp_Cc	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Cc,    \/* Control *\/$/;"	e	enum:__anon1db902980203
ucp_Cf	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Cf,    \/* Format *\/$/;"	e	enum:__anon1db902980203
ucp_Chakma	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Chakma,$/;"	e	enum:__anon1db902980403
ucp_Cham	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Cham,$/;"	e	enum:__anon1db902980403
ucp_Cherokee	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Cherokee,$/;"	e	enum:__anon1db902980403
ucp_Cn	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Cn,    \/* Unassigned *\/$/;"	e	enum:__anon1db902980203
ucp_Co	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Co,    \/* Private use *\/$/;"	e	enum:__anon1db902980203
ucp_Common	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Common,$/;"	e	enum:__anon1db902980403
ucp_Coptic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Coptic,$/;"	e	enum:__anon1db902980403
ucp_Cs	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Cs,    \/* Surrogate *\/$/;"	e	enum:__anon1db902980203
ucp_Cuneiform	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Cuneiform,$/;"	e	enum:__anon1db902980403
ucp_Cypriot	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Cypriot,$/;"	e	enum:__anon1db902980403
ucp_Cyrillic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Cyrillic,$/;"	e	enum:__anon1db902980403
ucp_Deseret	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Deseret,$/;"	e	enum:__anon1db902980403
ucp_Devanagari	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Devanagari,$/;"	e	enum:__anon1db902980403
ucp_Duployan	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Duployan,$/;"	e	enum:__anon1db902980403
ucp_Egyptian_Hieroglyphs	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Egyptian_Hieroglyphs,$/;"	e	enum:__anon1db902980403
ucp_Elbasan	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Elbasan,$/;"	e	enum:__anon1db902980403
ucp_Ethiopic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Ethiopic,$/;"	e	enum:__anon1db902980403
ucp_Georgian	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Georgian,$/;"	e	enum:__anon1db902980403
ucp_Glagolitic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Glagolitic,$/;"	e	enum:__anon1db902980403
ucp_Gothic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Gothic,$/;"	e	enum:__anon1db902980403
ucp_Grantha	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Grantha,$/;"	e	enum:__anon1db902980403
ucp_Greek	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Greek,$/;"	e	enum:__anon1db902980403
ucp_Gujarati	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Gujarati,$/;"	e	enum:__anon1db902980403
ucp_Gurmukhi	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Gurmukhi,$/;"	e	enum:__anon1db902980403
ucp_Han	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Han,$/;"	e	enum:__anon1db902980403
ucp_Hangul	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Hangul,$/;"	e	enum:__anon1db902980403
ucp_Hanunoo	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Hanunoo,$/;"	e	enum:__anon1db902980403
ucp_Hebrew	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Hebrew,$/;"	e	enum:__anon1db902980403
ucp_Hiragana	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Hiragana,$/;"	e	enum:__anon1db902980403
ucp_Imperial_Aramaic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Imperial_Aramaic,$/;"	e	enum:__anon1db902980403
ucp_Inherited	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Inherited,$/;"	e	enum:__anon1db902980403
ucp_Inscriptional_Pahlavi	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Inscriptional_Pahlavi,$/;"	e	enum:__anon1db902980403
ucp_Inscriptional_Parthian	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Inscriptional_Parthian,$/;"	e	enum:__anon1db902980403
ucp_Javanese	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Javanese,$/;"	e	enum:__anon1db902980403
ucp_Kaithi	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Kaithi,$/;"	e	enum:__anon1db902980403
ucp_Kannada	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Kannada,$/;"	e	enum:__anon1db902980403
ucp_Katakana	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Katakana,$/;"	e	enum:__anon1db902980403
ucp_Kayah_Li	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Kayah_Li,$/;"	e	enum:__anon1db902980403
ucp_Kharoshthi	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Kharoshthi,$/;"	e	enum:__anon1db902980403
ucp_Khmer	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Khmer,$/;"	e	enum:__anon1db902980403
ucp_Khojki	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Khojki,$/;"	e	enum:__anon1db902980403
ucp_Khudawadi	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Khudawadi,$/;"	e	enum:__anon1db902980403
ucp_L	extern/libgit2/deps/pcre/ucp.h	/^  ucp_L,     \/* Letter *\/$/;"	e	enum:__anon1db902980103
ucp_Lao	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Lao,$/;"	e	enum:__anon1db902980403
ucp_Latin	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Latin,$/;"	e	enum:__anon1db902980403
ucp_Lepcha	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Lepcha,$/;"	e	enum:__anon1db902980403
ucp_Limbu	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Limbu,$/;"	e	enum:__anon1db902980403
ucp_Linear_A	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Linear_A,$/;"	e	enum:__anon1db902980403
ucp_Linear_B	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Linear_B,$/;"	e	enum:__anon1db902980403
ucp_Lisu	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Lisu,$/;"	e	enum:__anon1db902980403
ucp_Ll	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Ll,    \/* Lower case letter *\/$/;"	e	enum:__anon1db902980203
ucp_Lm	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Lm,    \/* Modifier letter *\/$/;"	e	enum:__anon1db902980203
ucp_Lo	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Lo,    \/* Other letter *\/$/;"	e	enum:__anon1db902980203
ucp_Lt	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Lt,    \/* Title case letter *\/$/;"	e	enum:__anon1db902980203
ucp_Lu	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Lu,    \/* Upper case letter *\/$/;"	e	enum:__anon1db902980203
ucp_Lycian	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Lycian,$/;"	e	enum:__anon1db902980403
ucp_Lydian	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Lydian,$/;"	e	enum:__anon1db902980403
ucp_M	extern/libgit2/deps/pcre/ucp.h	/^  ucp_M,     \/* Mark *\/$/;"	e	enum:__anon1db902980103
ucp_Mahajani	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Mahajani,$/;"	e	enum:__anon1db902980403
ucp_Malayalam	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Malayalam,$/;"	e	enum:__anon1db902980403
ucp_Mandaic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Mandaic,$/;"	e	enum:__anon1db902980403
ucp_Manichaean	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Manichaean,$/;"	e	enum:__anon1db902980403
ucp_Mc	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Mc,    \/* Spacing mark *\/$/;"	e	enum:__anon1db902980203
ucp_Me	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Me,    \/* Enclosing mark *\/$/;"	e	enum:__anon1db902980203
ucp_Meetei_Mayek	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Meetei_Mayek,$/;"	e	enum:__anon1db902980403
ucp_Mende_Kikakui	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Mende_Kikakui,$/;"	e	enum:__anon1db902980403
ucp_Meroitic_Cursive	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Meroitic_Cursive,$/;"	e	enum:__anon1db902980403
ucp_Meroitic_Hieroglyphs	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Meroitic_Hieroglyphs,$/;"	e	enum:__anon1db902980403
ucp_Miao	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Miao,$/;"	e	enum:__anon1db902980403
ucp_Mn	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Mn,    \/* Non-spacing mark *\/$/;"	e	enum:__anon1db902980203
ucp_Modi	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Modi,$/;"	e	enum:__anon1db902980403
ucp_Mongolian	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Mongolian,$/;"	e	enum:__anon1db902980403
ucp_Mro	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Mro,$/;"	e	enum:__anon1db902980403
ucp_Myanmar	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Myanmar,$/;"	e	enum:__anon1db902980403
ucp_N	extern/libgit2/deps/pcre/ucp.h	/^  ucp_N,     \/* Number *\/$/;"	e	enum:__anon1db902980103
ucp_Nabataean	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Nabataean,$/;"	e	enum:__anon1db902980403
ucp_Nd	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Nd,    \/* Decimal number *\/$/;"	e	enum:__anon1db902980203
ucp_New_Tai_Lue	extern/libgit2/deps/pcre/ucp.h	/^  ucp_New_Tai_Lue,$/;"	e	enum:__anon1db902980403
ucp_Nko	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Nko,$/;"	e	enum:__anon1db902980403
ucp_Nl	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Nl,    \/* Letter number *\/$/;"	e	enum:__anon1db902980203
ucp_No	extern/libgit2/deps/pcre/ucp.h	/^  ucp_No,    \/* Other number *\/$/;"	e	enum:__anon1db902980203
ucp_Ogham	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Ogham,$/;"	e	enum:__anon1db902980403
ucp_Ol_Chiki	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Ol_Chiki,$/;"	e	enum:__anon1db902980403
ucp_Old_Italic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Old_Italic,$/;"	e	enum:__anon1db902980403
ucp_Old_North_Arabian	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Old_North_Arabian,$/;"	e	enum:__anon1db902980403
ucp_Old_Permic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Old_Permic,$/;"	e	enum:__anon1db902980403
ucp_Old_Persian	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Old_Persian,$/;"	e	enum:__anon1db902980403
ucp_Old_South_Arabian	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Old_South_Arabian,$/;"	e	enum:__anon1db902980403
ucp_Old_Turkic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Old_Turkic,$/;"	e	enum:__anon1db902980403
ucp_Oriya	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Oriya,$/;"	e	enum:__anon1db902980403
ucp_Osmanya	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Osmanya,$/;"	e	enum:__anon1db902980403
ucp_P	extern/libgit2/deps/pcre/ucp.h	/^  ucp_P,     \/* Punctuation *\/$/;"	e	enum:__anon1db902980103
ucp_Pahawh_Hmong	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Pahawh_Hmong,$/;"	e	enum:__anon1db902980403
ucp_Palmyrene	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Palmyrene,$/;"	e	enum:__anon1db902980403
ucp_Pau_Cin_Hau	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Pau_Cin_Hau,$/;"	e	enum:__anon1db902980403
ucp_Pc	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Pc,    \/* Connector punctuation *\/$/;"	e	enum:__anon1db902980203
ucp_Pd	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Pd,    \/* Dash punctuation *\/$/;"	e	enum:__anon1db902980203
ucp_Pe	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Pe,    \/* Close punctuation *\/$/;"	e	enum:__anon1db902980203
ucp_Pf	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Pf,    \/* Final punctuation *\/$/;"	e	enum:__anon1db902980203
ucp_Phags_Pa	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Phags_Pa,$/;"	e	enum:__anon1db902980403
ucp_Phoenician	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Phoenician,$/;"	e	enum:__anon1db902980403
ucp_Pi	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Pi,    \/* Initial punctuation *\/$/;"	e	enum:__anon1db902980203
ucp_Po	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Po,    \/* Other punctuation *\/$/;"	e	enum:__anon1db902980203
ucp_Ps	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Ps,    \/* Open punctuation *\/$/;"	e	enum:__anon1db902980203
ucp_Psalter_Pahlavi	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Psalter_Pahlavi,$/;"	e	enum:__anon1db902980403
ucp_Rejang	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Rejang,$/;"	e	enum:__anon1db902980403
ucp_Runic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Runic,$/;"	e	enum:__anon1db902980403
ucp_S	extern/libgit2/deps/pcre/ucp.h	/^  ucp_S,     \/* Symbol *\/$/;"	e	enum:__anon1db902980103
ucp_Samaritan	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Samaritan,$/;"	e	enum:__anon1db902980403
ucp_Saurashtra	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Saurashtra,$/;"	e	enum:__anon1db902980403
ucp_Sc	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Sc,    \/* Currency symbol *\/$/;"	e	enum:__anon1db902980203
ucp_Sharada	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Sharada,$/;"	e	enum:__anon1db902980403
ucp_Shavian	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Shavian,$/;"	e	enum:__anon1db902980403
ucp_Siddham	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Siddham,$/;"	e	enum:__anon1db902980403
ucp_Sinhala	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Sinhala,$/;"	e	enum:__anon1db902980403
ucp_Sk	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Sk,    \/* Modifier symbol *\/$/;"	e	enum:__anon1db902980203
ucp_Sm	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Sm,    \/* Mathematical symbol *\/$/;"	e	enum:__anon1db902980203
ucp_So	extern/libgit2/deps/pcre/ucp.h	/^  ucp_So,    \/* Other symbol *\/$/;"	e	enum:__anon1db902980203
ucp_Sora_Sompeng	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Sora_Sompeng,$/;"	e	enum:__anon1db902980403
ucp_Sundanese	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Sundanese,$/;"	e	enum:__anon1db902980403
ucp_Syloti_Nagri	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Syloti_Nagri,$/;"	e	enum:__anon1db902980403
ucp_Syriac	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Syriac,$/;"	e	enum:__anon1db902980403
ucp_Tagalog	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Tagalog,$/;"	e	enum:__anon1db902980403
ucp_Tagbanwa	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Tagbanwa,$/;"	e	enum:__anon1db902980403
ucp_Tai_Le	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Tai_Le,$/;"	e	enum:__anon1db902980403
ucp_Tai_Tham	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Tai_Tham,$/;"	e	enum:__anon1db902980403
ucp_Tai_Viet	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Tai_Viet,$/;"	e	enum:__anon1db902980403
ucp_Takri	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Takri,$/;"	e	enum:__anon1db902980403
ucp_Tamil	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Tamil,$/;"	e	enum:__anon1db902980403
ucp_Telugu	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Telugu,$/;"	e	enum:__anon1db902980403
ucp_Thaana	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Thaana,$/;"	e	enum:__anon1db902980403
ucp_Thai	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Thai,$/;"	e	enum:__anon1db902980403
ucp_Tibetan	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Tibetan,$/;"	e	enum:__anon1db902980403
ucp_Tifinagh	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Tifinagh,$/;"	e	enum:__anon1db902980403
ucp_Tirhuta	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Tirhuta,$/;"	e	enum:__anon1db902980403
ucp_Ugaritic	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Ugaritic,$/;"	e	enum:__anon1db902980403
ucp_Vai	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Vai,$/;"	e	enum:__anon1db902980403
ucp_Warang_Citi	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Warang_Citi$/;"	e	enum:__anon1db902980403
ucp_Yi	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Yi,$/;"	e	enum:__anon1db902980403
ucp_Z	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Z      \/* Separator *\/$/;"	e	enum:__anon1db902980103
ucp_Zl	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Zl,    \/* Line separator *\/$/;"	e	enum:__anon1db902980203
ucp_Zp	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Zp,    \/* Paragraph separator *\/$/;"	e	enum:__anon1db902980203
ucp_Zs	extern/libgit2/deps/pcre/ucp.h	/^  ucp_Zs     \/* Space separator *\/$/;"	e	enum:__anon1db902980203
ucp_gbCR	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbCR,                \/*  0 *\/$/;"	e	enum:__anon1db902980303
ucp_gbControl	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbControl,           \/*  2 *\/$/;"	e	enum:__anon1db902980303
ucp_gbExtend	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbExtend,            \/*  3 *\/$/;"	e	enum:__anon1db902980303
ucp_gbL	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbL,                 \/*  6 Hangul syllable type L *\/$/;"	e	enum:__anon1db902980303
ucp_gbLF	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbLF,                \/*  1 *\/$/;"	e	enum:__anon1db902980303
ucp_gbLV	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbLV,                \/*  9 Hangul syllable type LV *\/$/;"	e	enum:__anon1db902980303
ucp_gbLVT	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbLVT,               \/* 10 Hangul syllable type LVT *\/$/;"	e	enum:__anon1db902980303
ucp_gbOther	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbOther              \/* 12 *\/$/;"	e	enum:__anon1db902980303
ucp_gbPrepend	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbPrepend,           \/*  4 *\/$/;"	e	enum:__anon1db902980303
ucp_gbRegionalIndicator	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbRegionalIndicator, \/* 11 *\/$/;"	e	enum:__anon1db902980303
ucp_gbSpacingMark	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbSpacingMark,       \/*  5 *\/$/;"	e	enum:__anon1db902980303
ucp_gbT	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbT,                 \/*  8 Hangul syllable type T *\/$/;"	e	enum:__anon1db902980303
ucp_gbV	extern/libgit2/deps/pcre/ucp.h	/^  ucp_gbV,                 \/*  7 Hangul syllable type V *\/$/;"	e	enum:__anon1db902980303
ucp_gentype	extern/libgit2/deps/pcre/pcre_tables.c	/^const pcre_uint32 PRIV(ucp_gentype)[] = {$/;"	v	typeref:typename:const pcre_uint32 PRIV ()[]
ucp_type_table	extern/libgit2/deps/pcre/pcre_internal.h	/^} ucp_type_table;$/;"	t	typeref:struct:__anonb814e4160508
ucp_typerange	extern/libgit2/deps/pcre/pcre_tables.c	/^const int PRIV(ucp_typerange)[] = {$/;"	v	typeref:typename:const int PRIV ()[]
uid	extern/libgit2/include/git2/index.h	/^	uint32_t uid;$/;"	m	struct:git_index_entry	typeref:typename:uint32_t
uid	extern/libgit2/src/index.c	/^	uint32_t uid;$/;"	m	struct:entry_long	typeref:typename:uint32_t	file:
uid	extern/libgit2/src/index.c	/^	uint32_t uid;$/;"	m	struct:entry_short	typeref:typename:uint32_t	file:
uid	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^	char uid[CRTDBG_STACKTRACE__UID_LEN + 1];$/;"	m	struct:__anon6890d5050108	typeref:typename:char[]	file:
uid	extern/libgit2/src/win32/w32_crtdbg_stacktrace.c	/^	git_win32__crtdbg_stacktrace__uid uid; \/* must be first *\/$/;"	m	struct:__anon6890d5050208	typeref:typename:git_win32__crtdbg_stacktrace__uid	file:
uint16_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	typedef unsigned __int16 uint16_t;$/;"	t	namespace:pugi	typeref:typename:unsigned __int16	file:
uint16_t	extern/libgit2/deps/http-parser/http_parser.h	/^typedef unsigned __int16 uint16_t;$/;"	t	typeref:typename:unsigned __int16
uint16_t	extern/libgit2/include/git2/stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t	typeref:typename:unsigned __int16
uint16_t	extern/libgit2/include/git2/stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t	typeref:typename:unsigned short
uint32_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	typedef unsigned __int32 uint32_t;$/;"	t	namespace:pugi	typeref:typename:unsigned __int32	file:
uint32_t	extern/libgit2/deps/http-parser/http_parser.h	/^typedef unsigned __int32 uint32_t;$/;"	t	typeref:typename:unsigned __int32
uint32_t	extern/libgit2/include/git2/stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t	typeref:typename:unsigned __int32
uint32_t	extern/libgit2/include/git2/stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t	typeref:typename:unsigned int
uint64_t	extern/libgit2/deps/http-parser/http_parser.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	extern/libgit2/include/git2/stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint8_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	typedef unsigned __int8 uint8_t;$/;"	t	namespace:pugi	typeref:typename:unsigned __int8	file:
uint8_t	extern/libgit2/deps/http-parser/http_parser.h	/^typedef unsigned __int8 uint8_t;$/;"	t	typeref:typename:unsigned __int8
uint8_t	extern/libgit2/include/git2/stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t	typeref:typename:unsigned __int8
uint8_t	extern/libgit2/include/git2/stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t	typeref:typename:unsigned char
uint_fast16_t	extern/libgit2/include/git2/stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t	typeref:typename:uint16_t
uint_fast32_t	extern/libgit2/include/git2/stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t	typeref:typename:uint32_t
uint_fast64_t	extern/libgit2/include/git2/stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t	typeref:typename:uint64_t
uint_fast8_t	extern/libgit2/include/git2/stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t	typeref:typename:uint8_t
uint_least16_t	extern/libgit2/include/git2/stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t	typeref:typename:uint16_t
uint_least32_t	extern/libgit2/include/git2/stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t	typeref:typename:uint32_t
uint_least64_t	extern/libgit2/include/git2/stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t	typeref:typename:uint64_t
uint_least8_t	extern/libgit2/include/git2/stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t	typeref:typename:uint8_t
uintmax_t	extern/libgit2/include/git2/stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t	typeref:typename:uint64_t
uintptr_t	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	typedef size_t uintptr_t;$/;"	t	namespace:pugi	typeref:typename:size_t	file:
uintptr_t	extern/libgit2/include/git2/stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t	typeref:typename:_W64 unsigned int
uintptr_t	extern/libgit2/include/git2/stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t	typeref:typename:unsigned __int64
ulg	extern/libgit2/deps/zlib/zutil.h	/^typedef unsigned long  ulg;$/;"	t	typeref:typename:unsigned long
unaffected	extern/libgit2/tests/merge/workdir/dirty.c	/^static char *unaffected[][4] = {$/;"	v	typeref:typename:char * [][4]	file:
unc_path	extern/libgit2/tests/clone/local.c	/^static int unc_path(git_buf *buf, const char *host, const char *path)$/;"	f	typeref:typename:int	file:
uncompress	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define uncompress /;"	d
uncompress	extern/libgit2/deps/zlib/zconf.h	/^#    define uncompress /;"	d
uncompress2	extern/libgit2/deps/zlib/zconf.h	/^#    define uncompress2 /;"	d
underlying	extern/NamedType/crtp.hpp	/^    T const& underlying() const { return static_cast<T const&>(*this); }$/;"	f	struct:fluent::crtp	typeref:typename:T const &
underlying	extern/NamedType/crtp.hpp	/^    T& underlying() { return static_cast<T&>(*this); }$/;"	f	struct:fluent::crtp	typeref:typename:T &
underlying	newtype.hpp	/^  T &underlying() { return static_cast<T &>(*this); }$/;"	f	struct:abo::nt::crtp	typeref:typename:T &
underlying	newtype.hpp	/^  T const &underlying() const { return static_cast<T const &>(*this); }$/;"	f	struct:abo::nt::crtp	typeref:typename:T const &
underlying	ntskills.hpp	/^  T &underlying() { return static_cast<T &>(*this); }$/;"	f	struct:nt::crtp	typeref:typename:T &
underlying	ntskills.hpp	/^  T const &underlying() const { return static_cast<T const &>(*this); }$/;"	f	struct:nt::crtp	typeref:typename:T const &
unescape_line	extern/libgit2/src/config_parse.c	/^static int unescape_line($/;"	f	typeref:typename:int	file:
unescape_spaces	extern/libgit2/src/attr_file.c	/^static size_t unescape_spaces(char *str)$/;"	f	typeref:typename:size_t	file:
unhex	extern/libgit2/deps/http-parser/http_parser.c	/^static const int8_t unhex[256] =$/;"	v	typeref:typename:const int8_t[256]	file:
unicode_builtin_encoding_convert	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^static inline bool unicode_builtin_encoding_convert($/;"	f	typeref:typename:bool	file:
unicode_builtin_encoding_direction	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^} unicode_builtin_encoding_direction;$/;"	t	typeref:enum:__anonce5e58f80303	file:
unicode_builtin_utf16_to_8	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^	unicode_builtin_utf16_to_8$/;"	e	enum:__anonce5e58f80303	file:
unicode_builtin_utf8_to_16	extern/libgit2/deps/ntlmclient/unicode_builtin.c	/^	unicode_builtin_utf8_to_16,$/;"	e	enum:__anonce5e58f80303	file:
unicode_ctx	extern/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_unicode_ctx *unicode_ctx;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_unicode_ctx *
unicode_iconv_encoding_convert	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^static inline bool unicode_iconv_encoding_convert($/;"	f	typeref:typename:bool	file:
unicode_iconv_encoding_direction	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^} unicode_iconv_encoding_direction;$/;"	t	typeref:enum:__anon2ed3f7800103	file:
unicode_iconv_init	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^static inline bool unicode_iconv_init(ntlm_unicode_ctx *ctx)$/;"	f	typeref:typename:bool	file:
unicode_iconv_utf16_to_8	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^	unicode_iconv_utf16_to_8$/;"	e	enum:__anon2ed3f7800103	file:
unicode_iconv_utf8_to_16	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^	unicode_iconv_utf8_to_16,$/;"	e	enum:__anon2ed3f7800103	file:
uninteresting	extern/libgit2/src/commit_list.h	/^			 uninteresting:1,$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned int:1
uninteresting	extern/libgit2/src/pack-objects.c	/^	unsigned int uninteresting:1,$/;"	m	struct:walk_object	typeref:typename:unsigned int:1	file:
uninteresting	extern/libgit2/src/revwalk.h	/^	int uninteresting;$/;"	m	struct:__anon01a529ef0108	typeref:typename:int
union_bark	oset.cpp	/^template <typename T> struct union_bark<T> {$/;"	s	file:
unique	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	template <typename I> I unique(I begin, I end)$/;"	f	typeref:typename:I
uniques	extern/libgit2/tests/resources/userdiff/after/file.php	/^    protected $uniques = array();$/;"	v	class:Faker\\UniqueGenerator
uniques	extern/libgit2/tests/resources/userdiff/before/file.php	/^    protected $uniques = array();$/;"	v	class:Faker\\UniqueGenerator
uniques	extern/libgit2/tests/resources/userdiff/files/file.php	/^    protected $uniques = array();$/;"	v	class:Faker\\UniqueGenerator
unlink_file	extern/libgit2/tests/checkout/crlf.c	/^static int unlink_file(void *payload, git_buf *path)$/;"	f	typeref:typename:int	file:
unlink_once	extern/libgit2/src/win32/posix_w32.c	/^GIT_INLINE(int) unlink_once(const wchar_t *path)$/;"	f	typeref:typename:int
unmerged_index_init	extern/libgit2/tests/reset/hard.c	/^static void unmerged_index_init(git_index *index, int entries)$/;"	f	typeref:typename:void	file:
unpack_ok	extern/libgit2/src/push.h	/^	bool unpack_ok;$/;"	m	struct:git_push	typeref:typename:bool
unpack_ok	extern/libgit2/src/transports/smart.h	/^	int unpack_ok;$/;"	m	struct:__anoncc6f59690a08	typeref:typename:int
unpack_pkt	extern/libgit2/src/transports/smart_pkt.c	/^static int unpack_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
unpacked	extern/libgit2/src/pack-objects.c	/^struct unpacked {$/;"	s	file:
unposix_path	extern/libgit2/tests/repo/open.c	/^static void unposix_path(git_buf *path)$/;"	f	typeref:typename:void	file:
unset_upstream	extern/libgit2/src/branch.c	/^static int unset_upstream(git_config *config, const char *shortname)$/;"	f	typeref:typename:int	file:
unspecified_bool_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef void (* unspecified_bool_type)(xml_attribute***);$/;"	t	class:pugi::xml_attribute	typeref:typename:void (*)(xml_attribute ***)
unspecified_bool_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef void (* unspecified_bool_type)(xml_node***);$/;"	t	class:pugi::xml_node	typeref:typename:void (*)(xml_node ***)
unspecified_bool_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef void (* unspecified_bool_type)(xml_text***);$/;"	t	class:pugi::xml_text	typeref:typename:void (*)(xml_text ***)
unspecified_bool_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef void (*unspecified_bool_type)(xpath_node***);$/;"	t	class:pugi::xpath_node	typeref:typename:void (*)(xpath_node ***)
unspecified_bool_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef void (*unspecified_bool_type)(xpath_query***);$/;"	t	class:pugi::xpath_query	typeref:typename:void (*)(xpath_query ***)
unspecified_bool_xml_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN static void unspecified_bool_xml_attribute(xml_attribute***) {$/;"	f	namespace:pugi	typeref:typename:PUGI__FN void	file:
unspecified_bool_xml_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN static void unspecified_bool_xml_node(xml_node***) {$/;"	f	namespace:pugi	typeref:typename:PUGI__FN void	file:
unspecified_bool_xml_text	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN static void unspecified_bool_xml_text(xml_text***) {$/;"	f	namespace:pugi	typeref:typename:PUGI__FN void	file:
unspecified_bool_xpath_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN static void unspecified_bool_xpath_node(xpath_node***)$/;"	f	namespace:pugi	typeref:typename:PUGI__FN void	file:
unspecified_bool_xpath_query	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN static void unspecified_bool_xpath_query(xpath_query***)$/;"	f	namespace:pugi	typeref:typename:PUGI__FN void	file:
untracked	extern/libgit2/tests/checkout/typechange.c	/^	int untracked;$/;"	m	struct:__anone3edc9c60108	typeref:typename:int	file:
unused	extern/libgit2/src/attr_file.h	/^	git_refcount unused;$/;"	m	struct:__anon32d629ad0408	typeref:typename:git_refcount
update	extern/libgit2/src/submodule.h	/^	git_submodule_update_t update;$/;"	m	struct:git_submodule	typeref:typename:git_submodule_update_t
update_addr	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_uw *update_addr;$/;"	m	struct:label_addr_list	typeref:typename:sljit_uw *	file:
update_attr_callback	extern/libgit2/tests/checkout/tree.c	/^void update_attr_callback($/;"	f	typeref:typename:void
update_branch_remote_config_entry	extern/libgit2/src/remote.c	/^static int update_branch_remote_config_entry($/;"	f	typeref:typename:int	file:
update_cb	extern/libgit2/examples/fetch.c	/^static int update_cb(const char *refname, const git_oid *a, const git_oid *b, void *data)$/;"	f	typeref:typename:int	file:
update_config_entries_cb	extern/libgit2/src/remote.c	/^static int update_config_entries_cb($/;"	f	typeref:typename:int	file:
update_conflicts	extern/libgit2/src/checkout.c	/^	git_vector update_conflicts;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_vector	file:
update_count	extern/libgit2/tests/core/dirent.c	/^static int update_count(name_data *data, const char *name)$/;"	f	typeref:typename:int	file:
update_data	extern/libgit2/src/remote.c	/^struct update_data {$/;"	s	file:
update_default	extern/libgit2/src/submodule.h	/^	git_submodule_update_t update_default;$/;"	m	struct:git_submodule	typeref:typename:git_submodule_update_t
update_fetchhead	extern/libgit2/include/git2/remote.h	/^	int update_fetchhead;$/;"	m	struct:__anonc41be5800508	typeref:typename:int
update_head_to_branch	extern/libgit2/src/clone.c	/^static int update_head_to_branch($/;"	f	typeref:typename:int	file:
update_head_to_new_branch	extern/libgit2/src/clone.c	/^static int update_head_to_new_branch($/;"	f	typeref:typename:int	file:
update_head_to_remote	extern/libgit2/src/clone.c	/^static int update_head_to_remote($/;"	f	typeref:typename:int	file:
update_header_and_rehash	extern/libgit2/src/indexer.c	/^static int update_header_and_rehash(git_indexer *idx, git_indexer_progress *stats)$/;"	f	typeref:typename:int	file:
update_hunk	extern/libgit2/src/apply.c	/^static int update_hunk($/;"	f	typeref:typename:int	file:
update_names	extern/libgit2/src/checkout.c	/^	git_vector *update_names;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_vector *	file:
update_reflog	extern/libgit2/src/stash.c	/^static int update_reflog($/;"	f	typeref:typename:int	file:
update_refs_from_report	extern/libgit2/src/transports/smart_protocol.c	/^static int update_refs_from_report($/;"	f	typeref:typename:int	file:
update_reuc	extern/libgit2/src/checkout.c	/^	git_vector *update_reuc;$/;"	m	struct:__anonbac5d6240208	typeref:typename:git_vector *	file:
update_submodule_cb_payload	extern/libgit2/tests/submodule/update.c	/^struct update_submodule_cb_payload {$/;"	s	file:
update_target	extern/libgit2/src/transaction.c	/^static int update_target(git_refdb *db, transaction_node *node)$/;"	f	typeref:typename:int	file:
update_tips	extern/libgit2/tests/online/clone.c	/^static int update_tips(const char *refname, const git_oid *a, const git_oid *b, void *payload)$/;"	f	typeref:typename:int	file:
update_tips	extern/libgit2/tests/online/fetch.c	/^static int update_tips(const char *refname, const git_oid *a, const git_oid *b, void *data)$/;"	f	typeref:typename:int	file:
update_tips	extern/libgit2/tests/submodule/update.c	/^static int update_tips(const char *refname, const git_oid *a, const git_oid *b, void *data)$/;"	f	typeref:typename:int	file:
update_tips_called	extern/libgit2/tests/submodule/update.c	/^	int update_tips_called;$/;"	m	struct:update_submodule_cb_payload	typeref:typename:int	file:
update_tips_fail_on_call	extern/libgit2/tests/network/fetchlocal.c	/^int update_tips_fail_on_call(const char *ref, const git_oid *old, const git_oid *new, void *data/;"	f	typeref:typename:int
update_tips_for_spec	extern/libgit2/src/remote.c	/^static int update_tips_for_spec($/;"	f	typeref:typename:int	file:
update_tm	extern/libgit2/src/date.c	/^static git_time_t update_tm(struct tm *tm, struct tm *now, unsigned long sec)$/;"	f	typeref:typename:git_time_t	file:
update_wt_heads	extern/libgit2/src/refs.c	/^static int update_wt_heads(git_repository *repo, const char *path, void *payload)$/;"	f	typeref:typename:int	file:
updated	extern/libgit2/src/hash/sha1/win32.h	/^	bool updated;$/;"	m	struct:hash_cng_ctx	typeref:typename:bool
updated_tip	extern/libgit2/tests/online/push_util.h	/^} updated_tip;$/;"	t	typeref:struct:__anon56a1c92f0108
updated_tip_free	extern/libgit2/tests/online/push_util.c	/^void updated_tip_free(updated_tip *t)$/;"	f	typeref:typename:void
updated_tips	extern/libgit2/tests/online/push_util.h	/^	git_vector updated_tips;$/;"	m	struct:__anon56a1c92f0208	typeref:typename:git_vector
updates	extern/libgit2/src/push.h	/^	git_vector updates;$/;"	m	struct:git_push	typeref:typename:git_vector
updates	extern/libgit2/tests/checkout/typechange.c	/^	int updates;$/;"	m	struct:__anone3edc9c60108	typeref:typename:int	file:
updatewindow	extern/libgit2/deps/zlib/inflate.c	/^local int updatewindow(strm, end, copy)$/;"	f
upgrade	extern/libgit2/deps/http-parser/http_parser.h	/^  unsigned char upgrade : 1;$/;"	m	struct:http_parser	typeref:typename:unsigned char:1
upload_pack_ls_service_url	extern/libgit2/src/transports/http.c	/^static const char *upload_pack_ls_service_url = "\/info\/refs?service=git-upload-pack";$/;"	v	typeref:typename:const char *	file:
upload_pack_ls_service_url	extern/libgit2/src/transports/winhttp.c	/^static const char *upload_pack_ls_service_url = "\/info\/refs?service=git-upload-pack";$/;"	v	typeref:typename:const char *	file:
upload_pack_service	extern/libgit2/src/transports/http.c	/^static const char *upload_pack_service = "upload-pack";$/;"	v	typeref:typename:const char *	file:
upload_pack_service	extern/libgit2/src/transports/winhttp.c	/^static const char *upload_pack_service = "upload-pack";$/;"	v	typeref:typename:const char *	file:
upload_pack_service_url	extern/libgit2/src/transports/http.c	/^static const char *upload_pack_service_url = "\/git-upload-pack";$/;"	v	typeref:typename:const char *	file:
upload_pack_service_url	extern/libgit2/src/transports/winhttp.c	/^static const char *upload_pack_service_url = "\/git-upload-pack";$/;"	v	typeref:typename:const char *	file:
upstream	extern/libgit2/tests/refs/branches/upstream.c	/^static git_reference *branch, *upstream;$/;"	v	typeref:typename:git_reference **	file:
upstream_name	extern/libgit2/tests/refs/branches/upstreamname.c	/^static git_buf upstream_name;$/;"	v	typeref:typename:git_buf	file:
url	extern/libgit2/include/git2/proxy.h	/^	const char *url;$/;"	m	struct:__anon63af67960208	typeref:typename:const char *
url	extern/libgit2/src/remote.h	/^	char *url;$/;"	m	struct:git_remote	typeref:typename:char *
url	extern/libgit2/src/submodule.h	/^	char *url;$/;"	m	struct:git_submodule	typeref:typename:char *
url	extern/libgit2/src/transports/git.c	/^	char *url;$/;"	m	struct:__anon936e62c10108	typeref:typename:char *	file:
url	extern/libgit2/src/transports/http.c	/^	git_net_url url;$/;"	m	struct:__anon0458035d0208	typeref:typename:git_net_url	file:
url	extern/libgit2/src/transports/local.c	/^	char *url;$/;"	m	struct:__anonb65cbde80108	typeref:typename:char *	file:
url	extern/libgit2/src/transports/smart.h	/^	char *url;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:char *
url	extern/libgit2/src/transports/ssh.c	/^	char *url;$/;"	m	struct:__anon944cd18b0108	typeref:typename:char *	file:
url	extern/libgit2/src/transports/winhttp.c	/^	git_net_url url;$/;"	m	struct:__anon981dd28b0308	typeref:typename:git_net_url	file:
url_cred_presented	extern/libgit2/src/transports/http.c	/^	unsigned url_cred_presented : 1,$/;"	m	struct:__anon0458035d0208	typeref:typename:unsigned:1	file:
url_cred_presented	extern/libgit2/src/transports/winhttp.c	/^	bool url_cred_presented;$/;"	m	struct:__anon981dd28b0308	typeref:typename:bool	file:
urlresolve_callback	extern/libgit2/tests/network/remote/remotes.c	/^static int urlresolve_callback(git_buf *url_resolved, const char *url, int direction, void *payl/;"	f	typeref:typename:int	file:
urlresolve_passthrough_callback	extern/libgit2/tests/network/remote/remotes.c	/^static int urlresolve_passthrough_callback(git_buf *url_resolved, const char *url, int direction/;"	f	typeref:typename:int	file:
usage	extern/libgit2/examples/blame.c	/^static void usage(const char *msg, const char *arg)$/;"	f	typeref:typename:void	file:
usage	extern/libgit2/examples/cat-file.c	/^static void usage(const char *message, const char *arg)$/;"	f	typeref:typename:void	file:
usage	extern/libgit2/examples/diff.c	/^static void usage(const char *message, const char *arg)$/;"	f	typeref:typename:void	file:
usage	extern/libgit2/examples/init.c	/^static void usage(const char *error, const char *arg)$/;"	f	typeref:typename:void	file:
usage	extern/libgit2/examples/lg2.c	/^static int usage(const char *prog)$/;"	f	typeref:typename:int	file:
usage	extern/libgit2/examples/log.c	/^static void usage(const char *message, const char *arg)$/;"	f	typeref:typename:void	file:
usage	extern/libgit2/examples/ls-files.c	/^static void usage(const char *message, const char *arg)$/;"	f	typeref:typename:void	file:
usage	extern/libgit2/examples/remote.c	/^static void usage(const char *msg, const char *arg)$/;"	f	typeref:typename:void	file:
usage	extern/libgit2/examples/rev-parse.c	/^static void usage(const char *message, const char *arg)$/;"	f	typeref:typename:void	file:
usage	extern/libgit2/examples/stash.c	/^static void usage(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
use_ctr	extern/libgit2/src/pack.h	/^	size_t use_ctr;$/;"	m	struct:__anon7d07ab120108	typeref:typename:size_t
use_git_alloc	extern/libgit2/src/pack.c	/^static void *use_git_alloc(void *opaq, unsigned int count, unsigned int size)$/;"	f	typeref:typename:void *	file:
use_git_free	extern/libgit2/src/pack.c	/^static void use_git_free(void *opaq, void *ptr)$/;"	f	typeref:typename:void	file:
use_ignores	extern/libgit2/src/hashsig.c	/^	int use_ignores;$/;"	m	struct:__anonbb1957950208	typeref:typename:int	file:
use_remote	extern/libgit2/examples/ls-remote.c	/^static int use_remote(git_repository *repo, char *name)$/;"	f	typeref:typename:int	file:
use_ucp	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   use_ucp;                 \/* PCRE_UCP flag *\/$/;"	m	struct:match_data	typeref:typename:BOOL
use_ucp	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL use_ucp;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
used_ctr	extern/libgit2/src/mwindow.h	/^	size_t used_ctr;$/;"	m	struct:git_mwindow_ctl	typeref:typename:size_t
used_memory	extern/libgit2/src/cache.h	/^	ssize_t     used_memory;$/;"	m	struct:__anon354735470308	typeref:typename:ssize_t
user_input	extern/libgit2/src/revwalk.h	/^	git_commit_list *user_input;$/;"	m	struct:git_revwalk	typeref:typename:git_commit_list *
userdata	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  void *userdata;$/;"	m	struct:executable_functions	typeref:typename:void *	file:
userdomain	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *userdomain;$/;"	m	struct:ntlm_client	typeref:typename:char *
userdomain_utf16	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *userdomain_utf16;$/;"	m	struct:ntlm_client	typeref:typename:char *
userdomain_utf16_len	extern/libgit2/deps/ntlmclient/ntlm.h	/^	size_t userdomain_utf16_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
username	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *username;$/;"	m	struct:ntlm_client	typeref:typename:char *
username	extern/libgit2/include/git2/cred_helpers.h	/^	const char *username;$/;"	m	struct:git_cred_userpass_payload	typeref:typename:const char *
username	extern/libgit2/include/git2/sys/cred.h	/^	char *username; \/**< The username to authenticate as *\/$/;"	m	struct:git_cred_ssh_custom	typeref:typename:char *
username	extern/libgit2/include/git2/sys/cred.h	/^	char *username; \/**< The username to authenticate as *\/$/;"	m	struct:git_cred_ssh_interactive	typeref:typename:char *
username	extern/libgit2/include/git2/sys/cred.h	/^	char *username; \/**< The username to authenticate as *\/$/;"	m	struct:git_cred_ssh_key	typeref:typename:char *
username	extern/libgit2/include/git2/sys/cred.h	/^	char *username; \/**< The username to authenticate as *\/$/;"	m	struct:git_cred_userpass_plaintext	typeref:typename:char *
username	extern/libgit2/include/git2/sys/cred.h	/^	char username[1]; \/**< The username to authenticate as *\/$/;"	m	struct:git_cred_username	typeref:typename:char[1]
username	extern/libgit2/src/net.h	/^	char *username;$/;"	m	struct:git_net_url	typeref:typename:char *
username_free	extern/libgit2/src/transports/cred.c	/^static void username_free(struct git_cred *cred)$/;"	f	typeref:typename:void	file:
username_upper	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *username_upper;$/;"	m	struct:ntlm_client	typeref:typename:char *
username_upper_utf16	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *username_upper_utf16;$/;"	m	struct:ntlm_client	typeref:typename:char *
username_upper_utf16_len	extern/libgit2/deps/ntlmclient/ntlm.h	/^	size_t username_upper_utf16_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
username_utf16	extern/libgit2/deps/ntlmclient/ntlm.h	/^	char *username_utf16;$/;"	m	struct:ntlm_client	typeref:typename:char *
username_utf16_len	extern/libgit2/deps/ntlmclient/ntlm.h	/^	size_t username_utf16_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
uses	extern/libgit2/src/config.c	/^static const char *uses[] = {$/;"	v	typeref:typename:const char * []	file:
uses_heap	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool uses_heap() const$/;"	f	class:xpath_string	typeref:typename:bool	file:
ush	extern/libgit2/deps/zlib/zutil.h	/^typedef unsigned short ush;$/;"	t	typeref:typename:unsigned short
ushf	extern/libgit2/deps/zlib/zutil.h	/^typedef ush FAR ushf;$/;"	t	typeref:typename:ush FAR
utf	extern/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   utf;                     \/* UTF-8 \/ UTF-16 flag *\/$/;"	m	struct:match_data	typeref:typename:BOOL
utf	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL utf;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
utf16_counter	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct utf16_counter$/;"	s	file:
utf16_decoder	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<typename opt_swap> struct utf16_decoder$/;"	s	file:
utf16_to_8	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^	iconv_t utf16_to_8;$/;"	m	struct:ntlm_unicode_ctx	typeref:typename:iconv_t	file:
utf16_writer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct utf16_writer$/;"	s	file:
utf32_counter	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct utf32_counter$/;"	s	file:
utf32_decoder	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<typename opt_swap> struct utf32_decoder$/;"	s	file:
utf32_writer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct utf32_writer$/;"	s	file:
utf8_counter	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct utf8_counter$/;"	s	file:
utf8_decoder	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct utf8_decoder$/;"	s	file:
utf8_int32_t	extern/libgit2/deps/ntlmclient/utf8.h	/^typedef __int32 utf8_int32_t;$/;"	t	typeref:typename:__int32
utf8_int32_t	extern/libgit2/deps/ntlmclient/utf8.h	/^typedef int32_t utf8_int32_t;$/;"	t	typeref:typename:int32_t
utf8_nonnull	extern/libgit2/deps/ntlmclient/utf8.h	/^#define utf8_nonnull /;"	d
utf8_null	extern/libgit2/deps/ntlmclient/utf8.h	/^#define utf8_null /;"	d
utf8_pure	extern/libgit2/deps/ntlmclient/utf8.h	/^#define utf8_pure /;"	d
utf8_restrict	extern/libgit2/deps/ntlmclient/utf8.h	/^#define utf8_restrict /;"	d
utf8_table1	extern/libgit2/deps/pcre/pcre_tables.c	/^const int PRIV(utf8_table1)[] =$/;"	v	typeref:typename:const int PRIV ()[]
utf8_table2	extern/libgit2/deps/pcre/pcre_tables.c	/^const int PRIV(utf8_table2)[] = { 0,    0xc0, 0xe0, 0xf0, 0xf8, 0xfc};$/;"	v	typeref:typename:const int PRIV ()[]
utf8_table3	extern/libgit2/deps/pcre/pcre_tables.c	/^const int PRIV(utf8_table3)[] = { 0xff, 0x1f, 0x0f, 0x07, 0x03, 0x01};$/;"	v	typeref:typename:const int PRIV ()[]
utf8_table4	extern/libgit2/deps/pcre/pcre_tables.c	/^const pcre_uint8 PRIV(utf8_table4)[] = {$/;"	v	typeref:typename:const pcre_uint8 PRIV ()[]
utf8_to_16	extern/libgit2/deps/ntlmclient/unicode_iconv.c	/^	iconv_t utf8_to_16;$/;"	m	struct:ntlm_unicode_ctx	typeref:typename:iconv_t	file:
utf8_weak	extern/libgit2/deps/ntlmclient/utf8.h	/^#define utf8_weak /;"	d
utf8_writer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct utf8_writer$/;"	s	file:
utf8casecmp	extern/libgit2/deps/ntlmclient/utf8.h	/^int utf8casecmp(const void *src1, const void *src2) {$/;"	f	typeref:typename:int
utf8casestr	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8casestr(const void *haystack, const void *needle) {$/;"	f	typeref:typename:void *
utf8cat	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8cat(void *utf8_restrict dst, const void *utf8_restrict src) {$/;"	f	typeref:typename:void *
utf8catcodepoint	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8catcodepoint(void *utf8_restrict str, utf8_int32_t chr, size_t n) {$/;"	f	typeref:typename:void *
utf8chr	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8chr(const void *src, utf8_int32_t chr) {$/;"	f	typeref:typename:void *
utf8cmp	extern/libgit2/deps/ntlmclient/utf8.h	/^int utf8cmp(const void *src1, const void *src2) {$/;"	f	typeref:typename:int
utf8codepoint	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8codepoint(const void *utf8_restrict str,$/;"	f	typeref:typename:void *
utf8codepointsize	extern/libgit2/deps/ntlmclient/utf8.h	/^size_t utf8codepointsize(utf8_int32_t chr) {$/;"	f	typeref:typename:size_t
utf8cpy	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8cpy(void *utf8_restrict dst, const void *utf8_restrict src) {$/;"	f	typeref:typename:void *
utf8cspn	extern/libgit2/deps/ntlmclient/utf8.h	/^size_t utf8cspn(const void *src, const void *reject) {$/;"	f	typeref:typename:size_t
utf8dup	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8dup(const void *src) {$/;"	f	typeref:typename:void *
utf8islower	extern/libgit2/deps/ntlmclient/utf8.h	/^int utf8islower(utf8_int32_t chr) { return chr != utf8uprcodepoint(chr); }$/;"	f	typeref:typename:int
utf8isupper	extern/libgit2/deps/ntlmclient/utf8.h	/^int utf8isupper(utf8_int32_t chr) { return chr != utf8lwrcodepoint(chr); }$/;"	f	typeref:typename:int
utf8len	extern/libgit2/deps/ntlmclient/utf8.h	/^size_t utf8len(const void *str) {$/;"	f	typeref:typename:size_t
utf8lwr	extern/libgit2/deps/ntlmclient/utf8.h	/^void utf8lwr(void *utf8_restrict str) {$/;"	f	typeref:typename:void
utf8lwrcodepoint	extern/libgit2/deps/ntlmclient/utf8.h	/^utf8_int32_t utf8lwrcodepoint(utf8_int32_t cp) {$/;"	f	typeref:typename:utf8_int32_t
utf8ncasecmp	extern/libgit2/deps/ntlmclient/utf8.h	/^int utf8ncasecmp(const void *src1, const void *src2, size_t n) {$/;"	f	typeref:typename:int
utf8ncat	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8ncat(void *utf8_restrict dst, const void *utf8_restrict src,$/;"	f	typeref:typename:void *
utf8ncmp	extern/libgit2/deps/ntlmclient/utf8.h	/^int utf8ncmp(const void *src1, const void *src2, size_t n) {$/;"	f	typeref:typename:int
utf8ncpy	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8ncpy(void *utf8_restrict dst, const void *utf8_restrict src,$/;"	f	typeref:typename:void *
utf8ndup	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8ndup(const void *src, size_t n) {$/;"	f	typeref:typename:void *
utf8pbrk	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8pbrk(const void *str, const void *accept) {$/;"	f	typeref:typename:void *
utf8proc_utf8class	extern/libgit2/src/util.c	/^static const int8_t utf8proc_utf8class[256] = {$/;"	v	typeref:typename:const int8_t[256]	file:
utf8rchr	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8rchr(const void *src, int chr) {$/;"	f	typeref:typename:void *
utf8size	extern/libgit2/deps/ntlmclient/utf8.h	/^size_t utf8size(const void *str) {$/;"	f	typeref:typename:size_t
utf8spn	extern/libgit2/deps/ntlmclient/utf8.h	/^size_t utf8spn(const void *src, const void *accept) {$/;"	f	typeref:typename:size_t
utf8str	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8str(const void *haystack, const void *needle) {$/;"	f	typeref:typename:void *
utf8upr	extern/libgit2/deps/ntlmclient/utf8.h	/^void utf8upr(void *utf8_restrict str) {$/;"	f	typeref:typename:void
utf8uprcodepoint	extern/libgit2/deps/ntlmclient/utf8.h	/^utf8_int32_t utf8uprcodepoint(utf8_int32_t cp) {$/;"	f	typeref:typename:utf8_int32_t
utf8valid	extern/libgit2/deps/ntlmclient/utf8.h	/^void *utf8valid(const void *str) {$/;"	f	typeref:typename:void *
utfreadchar	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *utfreadchar;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
utfreadchar16	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *utfreadchar16;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
utfreadtype8	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *utfreadtype8;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
utt	extern/libgit2/deps/pcre/pcre_tables.c	/^const ucp_type_table PRIV(utt)[] = {$/;"	v	typeref:typename:const ucp_type_table PRIV ()[]
v0.22	extern/libgit2/docs/changelog.md	/^v0.22$/;"	s
v0.23	extern/libgit2/docs/changelog.md	/^v0.23$/;"	s
v0.24	extern/libgit2/docs/changelog.md	/^v0.24$/;"	s
v0.25	extern/libgit2/docs/changelog.md	/^v0.25$/;"	s
v0.26	extern/libgit2/docs/changelog.md	/^v0.26$/;"	s
v0.27	extern/libgit2/docs/changelog.md	/^v0.27$/;"	s
v0.28	extern/libgit2/docs/changelog.md	/^v0.28$/;"	s
v0.28 + 1	extern/libgit2/docs/changelog.md	/^v0.28 + 1$/;"	s
va_copy	extern/libgit2/src/cc-compat.h	/^#		define va_copy(/;"	d
va_list	extern/libgit2/script/user_model.c	/^typedef struct va_list_str *va_list;$/;"	t	typeref:struct:va_list_str *	file:
val	extern/libgit2/deps/zlib/inftrees.h	/^    unsigned short val;         \/* offset in table or code value *\/$/;"	m	struct:__anon807a30970108	typeref:typename:unsigned short
val	extern/libgit2/src/delta.c	/^	unsigned int val;$/;"	m	struct:index_entry	typeref:typename:unsigned int	file:
val	extern/libgit2/src/thread-utils.h	/^	__int64 val;$/;"	m	struct:__anon834bf2e90208	typeref:typename:__int64
val	extern/libgit2/src/thread-utils.h	/^	volatile long val;$/;"	m	struct:__anon834bf2e90108	typeref:typename:volatile long
valid	extern/libgit2/src/hash/sha1/win32.h	/^	bool valid;$/;"	m	struct:hash_cryptoapi_ctx	typeref:typename:bool
valid_blob_id	extern/libgit2/tests/index/add.c	/^static const char *valid_blob_id = "fa49b077972391ad58037050f2a75f74e3671e92";$/;"	v	typeref:typename:const char *	file:
valid_blob_id	extern/libgit2/tests/submodule/add.c	/^static const char *valid_blob_id = "fa49b077972391ad58037050f2a75f74e3671e92";$/;"	v	typeref:typename:const char *	file:
valid_commit_id	extern/libgit2/tests/index/add.c	/^static const char *valid_commit_id = "763d71aadf09a7951596c9746c024e7eece7c7af";$/;"	v	typeref:typename:const char *	file:
valid_entry_name	extern/libgit2/src/tree.c	/^static int valid_entry_name(git_repository *repo, const char *filename)$/;"	f	typeref:typename:int	file:
valid_filemode	extern/libgit2/src/index.c	/^GIT_INLINE(bool) valid_filemode(const int filemode)$/;"	f	typeref:typename:bool
valid_filemode	extern/libgit2/src/tree.c	/^static bool valid_filemode(const int filemode)$/;"	f	typeref:typename:bool	file:
valid_repository_path	extern/libgit2/src/repository.c	/^static bool valid_repository_path(git_buf *repository_path, git_buf *common_path)$/;"	f	typeref:typename:bool	file:
valid_tree_id	extern/libgit2/tests/index/add.c	/^static const char *valid_tree_id = "181037049a54a1eb5fab404658a3a250b44335d7";$/;"	v	typeref:typename:const char *	file:
validate_and_apply_patchfile	extern/libgit2/tests/apply/fromfile.c	/^static int validate_and_apply_patchfile($/;"	f	typeref:typename:int	file:
validate_apply_index	extern/libgit2/tests/apply/apply_helpers.c	/^void validate_apply_index($/;"	f	typeref:typename:void
validate_apply_workdir	extern/libgit2/tests/apply/apply_helpers.c	/^void validate_apply_workdir($/;"	f	typeref:typename:void
validate_index_unchanged	extern/libgit2/tests/apply/apply_helpers.c	/^void validate_index_unchanged(git_repository *repo)$/;"	f	typeref:typename:void
validate_templates	extern/libgit2/tests/repo/template.c	/^static void validate_templates(git_repository *repo, const char *template_path)$/;"	f	typeref:typename:void	file:
validate_tree_and_parents	extern/libgit2/src/commit.c	/^static int validate_tree_and_parents(git_array_oid_t *parents, git_repository *repo, const git_o/;"	f	typeref:typename:int	file:
validate_workdir_unchanged	extern/libgit2/tests/apply/apply_helpers.c	/^void validate_workdir_unchanged(git_repository *repo)$/;"	f	typeref:typename:void
value	extern/NamedType/catch.hpp	/^            static const bool value = decltype(test<std::ostream, const T&>(0))::value;$/;"	m	class:Catch::Detail::IsStreamInsertable	typeref:typename:const bool
value	extern/NamedType/main.cpp	/^    std::string value = "value1";$/;"	v	typeref:typename:std::string
value	extern/NamedType/main.cpp	/^  NegatableType value(10);$/;"	v	typeref:typename:NegatableType
value	extern/NamedType/named_type_impl.hpp	/^using IsNotReference = typename std::enable_if<!std::is_reference<T>::value, void>::type;$/;"	t	namespace:fluent	typeref:typename:std::enable_if<!std::is_reference<T>::
value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			void* value;$/;"	m	struct:compact_hash_table::item_t	typeref:typename:void *	file:
value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		bool value;$/;"	m	struct:xpath_variable_boolean	typeref:typename:bool	file:
value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		char_t* value;$/;"	m	struct:xpath_variable_string	typeref:typename:char_t *	file:
value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		double value;$/;"	m	struct:xpath_variable_number	typeref:typename:double	file:
value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_string<5, 3> value;$/;"	m	struct:pugi::xml_attribute_struct	typeref:typename:impl::compact_string<5,3>	file:
value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		impl::compact_string<5, 3> value;$/;"	m	struct:pugi::xml_node_struct	typeref:typename:impl::compact_string<5,3>	file:
value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_node_set value;$/;"	m	struct:xpath_variable_node_set	typeref:typename:xpath_node_set	file:
value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^            value = 0$/;"	e	enum:opt_false::__anonfceed08a0103	file:
value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^            value = 1$/;"	e	enum:opt_true::__anonfceed08a0203	file:
value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const char_t* xml_attribute::value() const {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN const char_t *
value	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN const char_t* xml_node::value() const {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN const char_t *
value	extern/OpenXLSX/tests/catch/catch.hpp	/^            static const bool value = decltype(test<std::ostream, const T&>(0))::value;$/;"	m	class:Catch::Detail::IsStreamInsertable	typeref:typename:const bool
value	extern/OpenXLSX/tests/catch/catch.hpp	/^        static const bool value = false;$/;"	m	struct:Catch::is_range	typeref:typename:const bool
value	extern/OpenXLSX/tests/catch/catch.hpp	/^        static const bool value =$/;"	m	struct:Catch::is_range	typeref:typename:const bool
value	extern/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 value;$/;"	m	struct:__anonb814e4160508	typeref:typename:pcre_uint16
value	extern/libgit2/include/git2/config.h	/^	const char *value; \/**< String value of the entry *\/$/;"	m	struct:git_config_entry	typeref:typename:const char *
value	extern/libgit2/include/git2/message.h	/^  const char *value;$/;"	m	struct:__anond70699990108	typeref:typename:const char *
value	extern/libgit2/src/attr_file.h	/^	const char *value;$/;"	m	struct:__anon32d629ad0508	typeref:typename:const char *
value	extern/libgit2/src/config_file.c	/^	const char *value;$/;"	m	struct:write_data	typeref:typename:const char *	file:
value	extern/libgit2/tests/config/memory.c	/^	const char *value;$/;"	m	struct:expected_entry	typeref:typename:const char *	file:
value	extern/libgit2/tests/core/sortedcache.c	/^	int value;$/;"	m	struct:__anon76b5c0160108	typeref:typename:int	file:
value	extern/libgit2/tests/core/strmap.c	/^		char *value;$/;"	m	struct:test_core_strmap__iteration::__anon7181b0a80108	typeref:typename:char *	file:
value	newtype.hpp	/^  T value;$/;"	m	struct:abo::nt::newtype	typeref:typename:T
value	nt.hpp	/^    typename std::enable_if<!std::is_reference<T>::value, void>::type;$/;"	t	namespace:nt	typeref:typename:std::enable_if<!std::is_reference<T>::
value_	extern/NamedType/named_type_impl.hpp	/^    T value_;$/;"	m	class:fluent::NamedType	typeref:typename:T
value_	nt.hpp	/^  T value_;$/;"	m	class:nt::NamedType	typeref:typename:T
value_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef size_t value_type;$/;"	t	struct:utf16_counter	typeref:typename:size_t	file:
value_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef size_t value_type;$/;"	t	struct:utf32_counter	typeref:typename:size_t	file:
value_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef size_t value_type;$/;"	t	struct:utf8_counter	typeref:typename:size_t	file:
value_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef uint16_t* value_type;$/;"	t	struct:utf16_writer	typeref:typename:uint16_t *	file:
value_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef uint32_t* value_type;$/;"	t	struct:utf32_writer	typeref:typename:uint32_t *	file:
value_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef uint8_t* value_type;$/;"	t	struct:latin1_writer	typeref:typename:uint8_t *	file:
value_type	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef uint8_t* value_type;$/;"	t	struct:utf8_writer	typeref:typename:uint8_t *	file:
value_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef xml_attribute value_type;$/;"	t	class:pugi::xml_attribute_iterator	typeref:typename:xml_attribute
value_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef xml_node value_type;$/;"	t	class:pugi::xml_named_node_iterator	typeref:typename:xml_node
value_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        typedef xml_node value_type;$/;"	t	class:pugi::xml_node_iterator	typeref:typename:xml_node
value_type	p.cpp	/^  using value_type = std::tuple<std::string, abo::TreeSha>;$/;"	t	struct:aiterator	typeref:typename:std::tuple<std::string,abo::TreeSha>	file:
values	extern/libgit2/src/hashsig.c	/^	hashsig_t values[HASHSIG_HEAP_SIZE];$/;"	m	struct:__anonbb1957950108	typeref:typename:hashsig_t[]	file:
values_mutex	extern/libgit2/src/config_file.c	/^	git_mutex values_mutex;$/;"	m	struct:__anon041cc2a30108	typeref:typename:git_mutex	file:
values_mutex	extern/libgit2/src/config_snapshot.c	/^	git_mutex values_mutex;$/;"	m	struct:__anonb8a4a6330108	typeref:typename:git_mutex	file:
variable	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^			xpath_variable* variable;$/;"	m	union:xpath_ast_node::__anonfceed08a070a	typeref:typename:xpath_variable *	file:
verb	extern/libgit2/src/transports/http.c	/^	const char *verb;$/;"	m	struct:__anon0458035d0108	typeref:typename:const char *	file:
verb	extern/libgit2/src/transports/winhttp.c	/^	const wchar_t *verb;$/;"	m	struct:__anon981dd28b0208	typeref:typename:const wchar_t *	file:
verbcount	extern/libgit2/deps/pcre/pcre_compile.c	/^static const int verbcount = sizeof(verbs)\/sizeof(verbitem);$/;"	v	typeref:typename:const int	file:
verbitem	extern/libgit2/deps/pcre/pcre_compile.c	/^typedef struct verbitem {$/;"	s	file:
verbitem	extern/libgit2/deps/pcre/pcre_compile.c	/^} verbitem;$/;"	t	typeref:struct:verbitem	file:
verbnames	extern/libgit2/deps/pcre/pcre_compile.c	/^static const char verbnames[] =$/;"	v	typeref:typename:const char[]	file:
verbose	extern/libgit2/deps/zlib/zutil.c	/^#    define verbose /;"	d	file:
verbose	extern/libgit2/examples/cat-file.c	/^	int verbose;$/;"	m	struct:opts	typeref:typename:int	file:
verbs	extern/libgit2/deps/pcre/pcre_compile.c	/^static const verbitem verbs[] = {$/;"	v	typeref:typename:const verbitem[]	file:
verify	extern/libgit2/include/git2/indexer.h	/^	unsigned char verify;$/;"	m	struct:git_indexer_options	typeref:typename:unsigned char
verify_char	extern/libgit2/src/path.c	/^GIT_INLINE(bool) verify_char(unsigned char c, unsigned int flags)$/;"	f	typeref:typename:bool
verify_component	extern/libgit2/src/path.c	/^static bool verify_component($/;"	f	typeref:typename:bool	file:
verify_dospath	extern/libgit2/src/path.c	/^GIT_INLINE(bool) verify_dospath($/;"	f	typeref:typename:bool
verify_dotgit_hfs	extern/libgit2/src/path.c	/^static bool verify_dotgit_hfs(const char *path, size_t len)$/;"	f	typeref:typename:bool	file:
verify_dotgit_hfs_generic	extern/libgit2/src/path.c	/^static bool verify_dotgit_hfs_generic(const char *path, size_t len, const char *needle, size_t n/;"	f	typeref:typename:bool	file:
verify_dotgit_ntfs	extern/libgit2/src/path.c	/^GIT_INLINE(bool) verify_dotgit_ntfs(git_repository *repo, const char *path, size_t len)$/;"	f	typeref:typename:bool
verify_dotgit_ntfs_generic	extern/libgit2/src/path.c	/^GIT_INLINE(bool) verify_dotgit_ntfs_generic(const char *name, size_t len, const char *dotgit_nam/;"	f	typeref:typename:bool
verify_last_error	extern/libgit2/src/filebuf.c	/^static int verify_last_error(git_filebuf *file)$/;"	f	typeref:typename:int	file:
verify_patch_id	extern/libgit2/tests/diff/patchid.c	/^static void verify_patch_id(const char *diff_content, const char *expected_id)$/;"	f	typeref:typename:void	file:
verify_refs	extern/libgit2/tests/online/push.c	/^static void verify_refs(git_remote *remote, expected_ref expected_refs[], size_t expected_refs_l/;"	f	typeref:typename:void	file:
verify_remote_refs	extern/libgit2/tests/online/push_util.c	/^void verify_remote_refs(const git_remote_head *actual_refs[], size_t actual_refs_len, const expe/;"	f	typeref:typename:void
verify_server_cert	extern/libgit2/src/streams/mbedtls.c	/^static int verify_server_cert(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int	file:
verify_server_cert	extern/libgit2/src/streams/openssl.c	/^static int verify_server_cert(SSL *ssl, const char *host)$/;"	f	typeref:typename:int	file:
verify_tracking_branches	extern/libgit2/tests/online/push.c	/^static void verify_tracking_branches(git_remote *remote, expected_ref expected_refs[], size_t ex/;"	f	typeref:typename:void	file:
verify_update_tips_callback	extern/libgit2/tests/online/push.c	/^static void verify_update_tips_callback(git_remote *remote, expected_ref expected_refs[], size_t/;"	f	typeref:typename:void	file:
version	extern/libgit2/deps/pcre/pcre.h	/^  int          version;           \/* Identifies version of block *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
version	extern/libgit2/deps/pcre/pcre.h	/^  int          version;           \/* Identifies version of block *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
version	extern/libgit2/deps/pcre/pcre.h	/^  int          version;           \/* Identifies version of block *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
version	extern/libgit2/include/git2/apply.h	/^	unsigned int version; \/**< The version *\/$/;"	m	struct:__anondc670afa0108	typeref:typename:unsigned int
version	extern/libgit2/include/git2/blame.h	/^	unsigned int version;$/;"	m	struct:git_blame_options	typeref:typename:unsigned int
version	extern/libgit2/include/git2/blob.h	/^	int version;$/;"	m	struct:__anon6d9306930208	typeref:typename:int
version	extern/libgit2/include/git2/checkout.h	/^	unsigned int version; \/**< The version *\/$/;"	m	struct:git_checkout_options	typeref:typename:unsigned int
version	extern/libgit2/include/git2/cherrypick.h	/^	unsigned int version;$/;"	m	struct:__anon46ced4e80108	typeref:typename:unsigned int
version	extern/libgit2/include/git2/clone.h	/^	unsigned int version;$/;"	m	struct:git_clone_options	typeref:typename:unsigned int
version	extern/libgit2/include/git2/describe.h	/^	unsigned int version;$/;"	m	struct:__anoneba207f50208	typeref:typename:unsigned int
version	extern/libgit2/include/git2/describe.h	/^	unsigned int version;$/;"	m	struct:git_describe_options	typeref:typename:unsigned int
version	extern/libgit2/include/git2/diff.h	/^	unsigned int version;      \/**< version for the struct *\/$/;"	m	struct:__anon72022fed0608	typeref:typename:unsigned int
version	extern/libgit2/include/git2/diff.h	/^	unsigned int version;$/;"	m	struct:__anon72022fed0f08	typeref:typename:unsigned int
version	extern/libgit2/include/git2/diff.h	/^	unsigned int version;$/;"	m	struct:__anon72022fed1308	typeref:typename:unsigned int
version	extern/libgit2/include/git2/diff.h	/^	unsigned int version;$/;"	m	struct:git_diff_patchid_options	typeref:typename:unsigned int
version	extern/libgit2/include/git2/indexer.h	/^	unsigned int version;$/;"	m	struct:git_indexer_options	typeref:typename:unsigned int
version	extern/libgit2/include/git2/merge.h	/^	unsigned int version;$/;"	m	struct:__anon5e9a43240108	typeref:typename:unsigned int
version	extern/libgit2/include/git2/merge.h	/^	unsigned int version;$/;"	m	struct:__anon5e9a43240508	typeref:typename:unsigned int
version	extern/libgit2/include/git2/merge.h	/^	unsigned int version;$/;"	m	struct:__anon5e9a43240708	typeref:typename:unsigned int
version	extern/libgit2/include/git2/proxy.h	/^	unsigned int version;$/;"	m	struct:__anon63af67960208	typeref:typename:unsigned int
version	extern/libgit2/include/git2/rebase.h	/^	unsigned int version;$/;"	m	struct:__anona97543260108	typeref:typename:unsigned int
version	extern/libgit2/include/git2/remote.h	/^	int version;$/;"	m	struct:__anonc41be5800508	typeref:typename:int
version	extern/libgit2/include/git2/remote.h	/^	unsigned int version; \/**< The version *\/$/;"	m	struct:git_remote_callbacks	typeref:typename:unsigned int
version	extern/libgit2/include/git2/remote.h	/^	unsigned int version;$/;"	m	struct:__anonc41be5800608	typeref:typename:unsigned int
version	extern/libgit2/include/git2/remote.h	/^	unsigned int version;$/;"	m	struct:git_remote_create_options	typeref:typename:unsigned int
version	extern/libgit2/include/git2/repository.h	/^	unsigned int version;$/;"	m	struct:__anon8a61cad40408	typeref:typename:unsigned int
version	extern/libgit2/include/git2/revert.h	/^	unsigned int version;$/;"	m	struct:__anond864852c0108	typeref:typename:unsigned int
version	extern/libgit2/include/git2/stash.h	/^	unsigned int version;$/;"	m	struct:git_stash_apply_options	typeref:typename:unsigned int
version	extern/libgit2/include/git2/status.h	/^	unsigned int      version; \/**< The version *\/$/;"	m	struct:__anon1764a4980408	typeref:typename:unsigned int
version	extern/libgit2/include/git2/submodule.h	/^	unsigned int version;$/;"	m	struct:git_submodule_update_options	typeref:typename:unsigned int
version	extern/libgit2/include/git2/sys/config.h	/^	unsigned int version;$/;"	m	struct:git_config_backend	typeref:typename:unsigned int
version	extern/libgit2/include/git2/sys/diff.h	/^	unsigned int version;$/;"	m	struct:__anon7e7f02bb0108	typeref:typename:unsigned int
version	extern/libgit2/include/git2/sys/filter.h	/^	unsigned int           version;$/;"	m	struct:git_filter	typeref:typename:unsigned int
version	extern/libgit2/include/git2/sys/merge.h	/^	unsigned int                 version;$/;"	m	struct:git_merge_driver	typeref:typename:unsigned int
version	extern/libgit2/include/git2/sys/odb_backend.h	/^	unsigned int version;$/;"	m	struct:git_odb_backend	typeref:typename:unsigned int
version	extern/libgit2/include/git2/sys/refdb_backend.h	/^	unsigned int version;$/;"	m	struct:git_refdb_backend	typeref:typename:unsigned int
version	extern/libgit2/include/git2/sys/stream.h	/^	int version;$/;"	m	struct:__anon5cee94ee0108	typeref:typename:int
version	extern/libgit2/include/git2/sys/stream.h	/^	int version;$/;"	m	struct:git_stream	typeref:typename:int
version	extern/libgit2/include/git2/sys/transport.h	/^	unsigned int version; \/**< The struct version *\/$/;"	m	struct:git_transport	typeref:typename:unsigned int
version	extern/libgit2/include/git2/worktree.h	/^	unsigned int version;$/;"	m	struct:git_worktree_add_options	typeref:typename:unsigned int
version	extern/libgit2/include/git2/worktree.h	/^	unsigned int version;$/;"	m	struct:git_worktree_prune_options	typeref:typename:unsigned int
version	extern/libgit2/package.json	/^  "version": "0.27.0",$/;"	s
version	extern/libgit2/src/index.c	/^	uint32_t version;$/;"	m	struct:index_header	typeref:typename:uint32_t	file:
version	extern/libgit2/src/index.h	/^	unsigned int version;$/;"	m	struct:git_index	typeref:typename:unsigned int
voidp	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef void* voidp;$/;"	t	typeref:typename:void *
voidp	extern/libgit2/deps/zlib/zconf.h	/^   typedef Byte       *voidp;$/;"	t	typeref:typename:Byte *
voidp	extern/libgit2/deps/zlib/zconf.h	/^   typedef void       *voidp;$/;"	t	typeref:typename:void *
voidp	extern/libgit2/deps/zlib/zconf.h	/^#  define voidp /;"	d
voidpc	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef void* const voidpc;$/;"	t	typeref:typename:void * const
voidpc	extern/libgit2/deps/zlib/zconf.h	/^   typedef Byte const *voidpc;$/;"	t	typeref:typename:Byte const *
voidpc	extern/libgit2/deps/zlib/zconf.h	/^   typedef void const *voidpc;$/;"	t	typeref:typename:void const *
voidpc	extern/libgit2/deps/zlib/zconf.h	/^#  define voidpc /;"	d
voidpf	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^typedef void* voidpf;$/;"	t	typeref:typename:void *
voidpf	extern/libgit2/deps/zlib/zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t	typeref:typename:Byte FAR *
voidpf	extern/libgit2/deps/zlib/zconf.h	/^   typedef void FAR   *voidpf;$/;"	t	typeref:typename:void FAR *
voidpf	extern/libgit2/deps/zlib/zconf.h	/^#  define voidpf /;"	d
vsnprintf	extern/libgit2/deps/zlib/gzguts.h	/^#         define vsnprintf /;"	d
vspace	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *vspace;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
vspace_list	extern/libgit2/deps/pcre/pcre_tables.c	/^const pcre_uint32 PRIV(vspace_list)[] = { VSPACE_LIST };$/;"	v	typeref:typename:const pcre_uint32 PRIV ()[]
w_bits	extern/libgit2/deps/zlib/deflate.h	/^    uInt  w_bits;        \/* log2(w_size)  (8..16) *\/$/;"	m	struct:internal_state	typeref:typename:uInt
w_mask	extern/libgit2/deps/zlib/deflate.h	/^    uInt  w_mask;        \/* w_size - 1 *\/$/;"	m	struct:internal_state	typeref:typename:uInt
w_size	extern/libgit2/deps/zlib/deflate.h	/^    uInt  w_size;        \/* LZ77 window size (32K by default) *\/$/;"	m	struct:internal_state	typeref:typename:uInt
wait_while_ack	extern/libgit2/src/transports/smart_protocol.c	/^static int wait_while_ack(gitno_buffer *buf)$/;"	f	typeref:typename:int	file:
walk_and_search	extern/libgit2/src/revparse.c	/^static int walk_and_search(git_object **out, git_revwalk *walk, p_regex_t *regex)$/;"	f	typeref:typename:int	file:
walk_common_sequence	extern/libgit2/src/xdiff/xpatience.c	/^static int walk_common_sequence(struct hashmap *map, struct entry *first,$/;"	f	typeref:typename:int	file:
walk_data	extern/libgit2/tests/core/dirent.c	/^typedef struct walk_data {$/;"	s	file:
walk_data	extern/libgit2/tests/core/dirent.c	/^} walk_data;$/;"	t	typeref:struct:walk_data	file:
walk_object	extern/libgit2/src/pack-objects.c	/^struct walk_object {$/;"	s	file:
walk_objects	extern/libgit2/src/pack-objects.h	/^	git_oidmap *walk_objects;$/;"	m	struct:git_packbuilder	typeref:typename:git_oidmap *
walker	extern/libgit2/examples/log.c	/^	git_revwalk *walker;$/;"	m	struct:log_state	typeref:typename:git_revwalk *	file:
walking	extern/libgit2/src/revwalk.h	/^	unsigned walking:1,$/;"	m	struct:git_revwalk	typeref:typename:unsigned:1
want	extern/libgit2/deps/zlib/gzguts.h	/^    unsigned want;          \/* requested buffer size, default is GZBUFSIZE *\/$/;"	m	struct:__anon7558639b0108	typeref:typename:unsigned
was	extern/libgit2/deps/zlib/inflate.h	/^    unsigned was;               \/* initial length of match *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
wbits	extern/libgit2/deps/zlib/inflate.h	/^    unsigned wbits;             \/* log base 2 of requested window size *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
wbk	extern/OpenXLSX/tests/c++/Test04-06_Sheet.cpp	/^auto wbk = doc.Workbook();$/;"	v	typeref:typename:auto
wbk	extern/OpenXLSX/tests/c++/Test08_Cell.cpp	/^auto wbk = doc.Workbook();$/;"	v	typeref:typename:auto
wchar_counter	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    typedef wchar_selector<sizeof(wchar_t)>::counter wchar_counter;$/;"	t	file:
wchar_decoder	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct wchar_decoder$/;"	s	file:
wchar_selector	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<> struct wchar_selector<2>$/;"	s	file:
wchar_selector	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<> struct wchar_selector<4>$/;"	s	file:
wchar_writer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    typedef wchar_selector<sizeof(wchar_t)>::writer wchar_writer;$/;"	t	file:
wcscat_s	extern/libgit2/tests/clar/fs.h	/^#define wcscat_s(/;"	d
wcscpy_s	extern/libgit2/tests/clar/fs.h	/^#define wcscpy_s(/;"	d
wd_item_is_removable	extern/libgit2/src/checkout.c	/^static bool wd_item_is_removable($/;"	f	typeref:typename:bool	file:
wd_oid	extern/libgit2/src/submodule.h	/^	git_oid wd_oid;$/;"	m	struct:git_submodule	typeref:typename:git_oid
weekday_names	extern/libgit2/src/date.c	/^static const char *weekday_names[] = {$/;"	v	typeref:typename:const char * []	file:
what	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN const char* xpath_exception::what() const throw()$/;"	f	class:pugi::xpath_exception	typeref:typename:PUGI__FN const char *
what	extern/libgit2/tests/stash/apply.c	/^	bool what;$/;"	m	struct:seen_paths	typeref:typename:bool	file:
whave	extern/libgit2/deps/zlib/inflate.h	/^    unsigned whave;             \/* valid bytes in the window *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
when	extern/libgit2/include/git2/types.h	/^	git_time when; \/**< time when the action happened *\/$/;"	m	struct:git_signature	typeref:typename:git_time
when	extern/libgit2/tests/stash/apply.c	/^	bool when;$/;"	m	struct:seen_paths	typeref:typename:bool	file:
who	extern/libgit2/tests/stash/apply.c	/^	bool who;$/;"	m	struct:seen_paths	typeref:typename:bool	file:
wide_stream	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        std::basic_ostream<wchar_t, std::char_traits<wchar_t>>* wide_stream;$/;"	m	class:pugi::xml_writer_stream	typeref:typename:std::basic_ostream<wchar_t,std::char_traits<wchar_t>> *
width_	extern/NamedType/main.cpp	/^    Meter width_;$/;"	m	class:Rectangle	typeref:typename:Meter	file:
wildcard_filter_apply	extern/libgit2/tests/filter/wildcard.c	/^static int wildcard_filter_apply($/;"	f	typeref:typename:int	file:
wildcard_filter_check	extern/libgit2/tests/filter/wildcard.c	/^static int wildcard_filter_check($/;"	f	typeref:typename:int	file:
wildcard_filter_cleanup	extern/libgit2/tests/filter/wildcard.c	/^static void wildcard_filter_cleanup(git_filter *self, void *payload)$/;"	f	typeref:typename:void	file:
wildcard_filter_free	extern/libgit2/tests/filter/wildcard.c	/^static void wildcard_filter_free(git_filter *f)$/;"	f	typeref:typename:void	file:
wildmatch	extern/libgit2/src/wildmatch.c	/^int wildmatch(const char *pattern, const char *text, unsigned int flags)$/;"	f	typeref:typename:int
wildmatch_flags	extern/libgit2/src/pathspec.c	/^	int wildmatch_flags;$/;"	m	struct:pathspec_match_context	typeref:typename:int	file:
wildmatch_flags	extern/libgit2/src/status.c	/^	int wildmatch_flags;$/;"	m	struct:status_file_info	typeref:typename:int	file:
win32_find_existing_dirs	extern/libgit2/src/win32/findfile.c	/^static int win32_find_existing_dirs($/;"	f	typeref:typename:int	file:
win32_find_git_in_path	extern/libgit2/src/win32/findfile.c	/^static int win32_find_git_in_path(git_buf *buf, const wchar_t *gitexe, const wchar_t *subdir)$/;"	f	typeref:typename:int	file:
win32_find_git_in_registry	extern/libgit2/src/win32/findfile.c	/^static int win32_find_git_in_registry($/;"	f	typeref:typename:int	file:
win32_path_to_8	extern/libgit2/src/win32/findfile.c	/^static int win32_path_to_8(git_buf *dest, const wchar_t *src)$/;"	f	typeref:typename:int	file:
win32_prefix_length	extern/libgit2/src/path.c	/^static int win32_prefix_length(const char *path, int len)$/;"	f	typeref:typename:int	file:
win32_srwlock_acquire_exclusive	extern/libgit2/src/win32/thread.c	/^static win32_srwlock_fn win32_srwlock_acquire_exclusive;$/;"	v	typeref:typename:win32_srwlock_fn	file:
win32_srwlock_acquire_shared	extern/libgit2/src/win32/thread.c	/^static win32_srwlock_fn win32_srwlock_acquire_shared;$/;"	v	typeref:typename:win32_srwlock_fn	file:
win32_srwlock_fn	extern/libgit2/src/win32/thread.c	/^typedef void (WINAPI *win32_srwlock_fn)(GIT_SRWLOCK *);$/;"	t	typeref:typename:void (WINAPI *)(GIT_SRWLOCK *)	file:
win32_srwlock_initialize	extern/libgit2/src/win32/thread.c	/^static win32_srwlock_fn win32_srwlock_initialize;$/;"	v	typeref:typename:win32_srwlock_fn	file:
win32_srwlock_release_exclusive	extern/libgit2/src/win32/thread.c	/^static win32_srwlock_fn win32_srwlock_release_exclusive;$/;"	v	typeref:typename:win32_srwlock_fn	file:
win32_srwlock_release_shared	extern/libgit2/src/win32/thread.c	/^static win32_srwlock_fn win32_srwlock_release_shared;$/;"	v	typeref:typename:win32_srwlock_fn	file:
win32_walkpath	extern/libgit2/src/win32/findfile.c	/^static wchar_t* win32_walkpath(wchar_t *path, wchar_t *buf, size_t buflen)$/;"	f	typeref:typename:wchar_t *	file:
window	extern/libgit2/deps/zlib/deflate.h	/^    Bytef *window;$/;"	m	struct:internal_state	typeref:typename:Bytef *
window	extern/libgit2/deps/zlib/inflate.h	/^    unsigned char FAR *window;  \/* allocated sliding window, if needed *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned char FAR *
window	extern/libgit2/src/pack-objects.c	/^	size_t window;$/;"	m	struct:thread_params	typeref:typename:size_t	file:
window_map	extern/libgit2/src/mwindow.h	/^	git_map window_map;$/;"	m	struct:git_mwindow	typeref:typename:git_map
window_memory_limit	extern/libgit2/src/pack-objects.h	/^	size_t window_memory_limit;$/;"	m	struct:git_packbuilder	typeref:typename:size_t
window_size	extern/libgit2/deps/zlib/deflate.h	/^    ulg window_size;$/;"	m	struct:internal_state	typeref:typename:ulg
windowfiles	extern/libgit2/src/mwindow.h	/^	git_vector windowfiles;$/;"	m	struct:git_mwindow_ctl	typeref:typename:git_vector
windows	extern/libgit2/src/mwindow.h	/^	git_mwindow *windows;$/;"	m	struct:git_mwindow_file	typeref:typename:git_mwindow *
winhttp_action	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_action($/;"	f	typeref:typename:int	file:
winhttp_authmechanism_t	extern/libgit2/src/transports/winhttp.c	/^} winhttp_authmechanism_t;$/;"	t	typeref:enum:__anon981dd28b0103	file:
winhttp_close	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_close(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:int	file:
winhttp_close_connection	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_close_connection(winhttp_subtransport *t)$/;"	f	typeref:typename:int	file:
winhttp_connect	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_connect($/;"	f	typeref:typename:int	file:
winhttp_free	extern/libgit2/src/transports/winhttp.c	/^static void winhttp_free(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:void	file:
winhttp_receivepack	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_receivepack($/;"	f	typeref:typename:int	file:
winhttp_receivepack_ls	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_receivepack_ls($/;"	f	typeref:typename:int	file:
winhttp_server	extern/libgit2/src/transports/winhttp.c	/^} winhttp_server;$/;"	t	typeref:struct:__anon981dd28b0308	file:
winhttp_status	extern/libgit2/src/transports/winhttp.c	/^static void CALLBACK winhttp_status($/;"	f	typeref:typename:void CALLBACK	file:
winhttp_stream	extern/libgit2/src/transports/winhttp.c	/^} winhttp_stream;$/;"	t	typeref:struct:__anon981dd28b0208	file:
winhttp_stream_alloc	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_stream_alloc(winhttp_subtransport *t, winhttp_stream **stream)$/;"	f	typeref:typename:int	file:
winhttp_stream_close	extern/libgit2/src/transports/winhttp.c	/^static void winhttp_stream_close(winhttp_stream *s)$/;"	f	typeref:typename:void	file:
winhttp_stream_connect	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_stream_connect(winhttp_stream *s)$/;"	f	typeref:typename:int	file:
winhttp_stream_free	extern/libgit2/src/transports/winhttp.c	/^static void winhttp_stream_free(git_smart_subtransport_stream *stream)$/;"	f	typeref:typename:void	file:
winhttp_stream_read	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_stream_read($/;"	f	typeref:typename:int	file:
winhttp_stream_write_buffered	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_stream_write_buffered($/;"	f	typeref:typename:int	file:
winhttp_stream_write_chunked	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_stream_write_chunked($/;"	f	typeref:typename:int	file:
winhttp_stream_write_single	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_stream_write_single($/;"	f	typeref:typename:int	file:
winhttp_subtransport	extern/libgit2/src/transports/winhttp.c	/^} winhttp_subtransport;$/;"	t	typeref:struct:__anon981dd28b0408	file:
winhttp_uploadpack	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_uploadpack($/;"	f	typeref:typename:int	file:
winhttp_uploadpack_ls	extern/libgit2/src/transports/winhttp.c	/^static int winhttp_uploadpack_ls($/;"	f	typeref:typename:int	file:
wks	extern/OpenXLSX/tests/c++/Test08_Cell.cpp	/^auto wks = wbk.Worksheet("Sheet1");$/;"	v	typeref:typename:auto
wnext	extern/libgit2/deps/zlib/inflate.h	/^    unsigned wnext;             \/* window write index *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
word_pattern	extern/libgit2/src/diff_driver.c	/^	p_regex_t  word_pattern;$/;"	m	struct:git_diff_driver	typeref:typename:p_regex_t	file:
wordboundary	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *wordboundary;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
words	extern/libgit2/src/bitvec.h	/^		uint64_t *words;$/;"	m	union:__anon8263d3700108::__anon8263d370020a	typeref:typename:uint64_t *
words	extern/libgit2/src/userdiff.h	/^	const char *words;$/;"	m	struct:__anon76bd502b0108	typeref:typename:const char *
work	extern/libgit2/deps/zlib/inflate.h	/^    unsigned short work[288];   \/* work area for code table building *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned short[288]
workdir	extern/libgit2/src/attr.c	/^	const char *workdir;$/;"	m	struct:__anon5b6b8b690208	typeref:typename:const char *	file:
workdir	extern/libgit2/src/repository.h	/^	char *workdir;$/;"	m	struct:git_repository	typeref:typename:char *
workdir_data	extern/libgit2/tests/filter/custom.c	/^static char workdir_data[] =$/;"	v	typeref:typename:char[]	file:
workdir_delta2status	extern/libgit2/src/status.c	/^static unsigned int workdir_delta2status($/;"	f	typeref:typename:unsigned int	file:
workdir_iterator_test	extern/libgit2/tests/iterator/workdir.c	/^static void workdir_iterator_test($/;"	f	typeref:typename:void	file:
workdir_path	extern/libgit2/include/git2/repository.h	/^	const char *workdir_path;$/;"	m	struct:__anon8a61cad40408	typeref:typename:const char *
workdir_reader	extern/libgit2/src/reader.c	/^} workdir_reader;$/;"	t	typeref:struct:__anone500b1410208	file:
workdir_reader_read	extern/libgit2/src/reader.c	/^static int workdir_reader_read($/;"	f	typeref:typename:int	file:
working	extern/libgit2/src/pack-objects.c	/^	size_t working;$/;"	m	struct:thread_params	typeref:typename:size_t	file:
workspace_size	extern/libgit2/deps/pcre/pcre_internal.h	/^  int  workspace_size;              \/* Size of workspace *\/$/;"	m	struct:compile_data	typeref:typename:int
worktree	extern/libgit2/tests/worktree/worktree_helpers.h	/^	git_repository *worktree;$/;"	m	struct:__anon9abb87050108	typeref:typename:git_repository *
worktree_fixture	extern/libgit2/tests/worktree/worktree_helpers.h	/^} worktree_fixture;$/;"	t	typeref:struct:__anon9abb87050108
worktree_path	extern/libgit2/src/worktree.h	/^	char *worktree_path;$/;"	m	struct:git_worktree	typeref:typename:char *
worktreename	extern/libgit2/tests/worktree/worktree_helpers.h	/^	const char *worktreename;$/;"	m	struct:__anon9abb87050108	typeref:typename:const char *
wrap	extern/libgit2/deps/zlib/deflate.h	/^    int   wrap;          \/* bit 0 true for zlib, bit 1 true for gzip *\/$/;"	m	struct:internal_state	typeref:typename:int
wrap	extern/libgit2/deps/zlib/inflate.h	/^    int wrap;                   \/* bit 0 true for zlib, bit 1 true for gzip,$/;"	m	struct:inflate_state	typeref:typename:int
wrapped	extern/libgit2/src/transports/smart.h	/^	git_smart_subtransport *wrapped;$/;"	m	struct:__anoncc6f59690b08	typeref:typename:git_smart_subtransport *
write	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void write(char_t d0) {$/;"	f	class:xml_buffered_writer	typeref:typename:void	file:
write	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void write(char_t d0, char_t d1) {$/;"	f	class:xml_buffered_writer	typeref:typename:void	file:
write	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void write(char_t d0, char_t d1, char_t d2) {$/;"	f	class:xml_buffered_writer	typeref:typename:void	file:
write	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void write(char_t d0, char_t d1, char_t d2, char_t d3) {$/;"	f	class:xml_buffered_writer	typeref:typename:void	file:
write	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void write(char_t d0, char_t d1, char_t d2, char_t d3, char_t d4) {$/;"	f	class:xml_buffered_writer	typeref:typename:void	file:
write	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void write(char_t d0, char_t d1, char_t d2, char_t d3, char_t d4, char_t d5) {$/;"	f	class:xml_buffered_writer	typeref:typename:void	file:
write	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_writer_file::write(const void* data, size_t size) {$/;"	f	class:pugi::xml_writer_file	typeref:typename:PUGI__FN void
write	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN void xml_writer_stream::write(const void* data, size_t size) {$/;"	f	class:pugi::xml_writer_stream	typeref:typename:PUGI__FN void
write	extern/libgit2/deps/zlib/gzguts.h	/^#  define write /;"	d
write	extern/libgit2/src/filebuf.h	/^	int (*write)(git_filebuf *file, void *source, size_t len);$/;"	m	struct:git_filebuf	typeref:typename:int (*)(git_filebuf * file,void * source,size_t len)
write	extern/libgit2/tests/generate.py	/^    def write(self):$/;"	m	class:TestSuite
write_add_refspec	extern/libgit2/src/remote.c	/^static int write_add_refspec(git_repository *repo, const char *name, const char *refspec, bool f/;"	f	typeref:typename:int	file:
write_at	extern/libgit2/src/indexer.c	/^static int write_at(git_indexer *idx, const void *data, git_off_t offset, size_t size)$/;"	f	typeref:typename:int	file:
write_attributes	extern/libgit2/tests/object/blob/fromstream.c	/^static void write_attributes(git_repository *repo)$/;"	f	typeref:typename:void	file:
write_buf	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool write_buf($/;"	f	typeref:typename:bool	file:
write_buffer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void write_buffer(const char_t* data, size_t length) {$/;"	f	class:xml_buffered_writer	typeref:typename:void	file:
write_bufinfo	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool write_bufinfo($/;"	f	typeref:typename:bool	file:
write_byte	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool write_byte($/;"	f	typeref:typename:bool	file:
write_cb	extern/libgit2/src/pack-objects.c	/^static int write_cb(void *buf, size_t len, void *payload)$/;"	f	typeref:typename:int	file:
write_cb	extern/libgit2/src/streams/stransport.c	/^static OSStatus write_cb(SSLConnectionRef conn, const void *data, size_t *len)$/;"	f	typeref:typename:OSStatus	file:
write_cherrypick_head	extern/libgit2/src/cherrypick.c	/^static int write_cherrypick_head($/;"	f	typeref:typename:int	file:
write_chunk	extern/libgit2/src/transports/http.c	/^static int write_chunk(git_stream *io, const char *buffer, size_t len)$/;"	f	typeref:typename:int	file:
write_chunk	extern/libgit2/src/transports/winhttp.c	/^static int write_chunk(HINTERNET request, const char *buffer, size_t len)$/;"	f	typeref:typename:int	file:
write_data	extern/libgit2/src/config_file.c	/^struct write_data {$/;"	s	file:
write_deflate	extern/libgit2/src/filebuf.c	/^static int write_deflate(git_filebuf *file, void *source, size_t len)$/;"	f	typeref:typename:int	file:
write_direct	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void write_direct(const char_t* data, size_t length) {$/;"	f	class:xml_buffered_writer	typeref:typename:void	file:
write_disk_entry	extern/libgit2/src/index.c	/^static int write_disk_entry(git_filebuf *file, git_index_entry *entry, const char *last)$/;"	f	typeref:typename:int	file:
write_entries	extern/libgit2/src/index.c	/^static int write_entries(git_index *index, git_filebuf *file)$/;"	f	typeref:typename:int	file:
write_extension	extern/libgit2/src/index.c	/^static int write_extension(git_filebuf *file, struct index_extension *header, git_buf *data)$/;"	f	typeref:typename:int	file:
write_file	extern/libgit2/tests/repo/discover.c	/^static void write_file(const char *path, const char *content)$/;"	f	typeref:typename:void	file:
write_file_contents	extern/libgit2/tests/merge/workdir/setup.c	/^static void write_file_contents(const char *filename, const char *output)$/;"	f	typeref:typename:void	file:
write_file_filtered	extern/libgit2/src/blob.c	/^static int write_file_filtered($/;"	f	typeref:typename:int	file:
write_file_stream	extern/libgit2/src/blob.c	/^static int write_file_stream($/;"	f	typeref:typename:int	file:
write_files	extern/libgit2/tests/merge/workdir/dirty.c	/^static void write_files(char *files[])$/;"	f	typeref:typename:void	file:
write_index	extern/libgit2/src/index.c	/^static int write_index(git_oid *checksum, git_index *index, git_filebuf *file)$/;"	f	typeref:typename:int	file:
write_int16	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool write_int16($/;"	f	typeref:typename:bool	file:
write_int32	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool write_int32($/;"	f	typeref:typename:bool	file:
write_invalid_filename	extern/libgit2/tests/index/tests.c	/^static void write_invalid_filename(git_repository *repo, const char *fn_orig)$/;"	f	typeref:typename:void	file:
write_line	extern/libgit2/src/config_file.c	/^static int write_line(struct write_data *write_data, const char *line, size_t line_len)$/;"	f	typeref:typename:int	file:
write_line_to	extern/libgit2/src/config_file.c	/^static int write_line_to(git_buf *buf, const char *line, size_t line_len)$/;"	f	typeref:typename:int	file:
write_mapped_var	extern/libgit2/src/submodule.c	/^static int write_mapped_var(git_repository *repo, const char *name, git_configmap *maps, size_t /;"	f	typeref:typename:int	file:
write_merge_head	extern/libgit2/src/merge.c	/^static int write_merge_head($/;"	f	typeref:typename:int	file:
write_merge_mode	extern/libgit2/src/merge.c	/^static int write_merge_mode(git_repository *repo)$/;"	f	typeref:typename:int	file:
write_merge_msg	extern/libgit2/src/cherrypick.c	/^static int write_merge_msg($/;"	f	typeref:typename:int	file:
write_merge_msg	extern/libgit2/src/merge.c	/^static int write_merge_msg($/;"	f	typeref:typename:int	file:
write_merge_msg	extern/libgit2/src/revert.c	/^static int write_merge_msg($/;"	f	typeref:typename:int	file:
write_name_extension	extern/libgit2/src/index.c	/^static int write_name_extension(git_index *index, git_filebuf *file)$/;"	f	typeref:typename:int	file:
write_normal	extern/libgit2/src/filebuf.c	/^static int write_normal(git_filebuf *file, void *source, size_t len)$/;"	f	typeref:typename:int	file:
write_object	extern/libgit2/src/pack-objects.c	/^static int write_object($/;"	f	typeref:typename:int	file:
write_object_files	extern/libgit2/tests/odb/loose.c	/^static void write_object_files(object_data *d)$/;"	f	typeref:typename:void	file:
write_object_to_loose_odb	extern/libgit2/tests/odb/loose.c	/^static void write_object_to_loose_odb(int fsync)$/;"	f	typeref:typename:void	file:
write_on_comment	extern/libgit2/src/config_file.c	/^static int write_on_comment(git_config_parser *reader, const char *line, size_t line_len, void */;"	f	typeref:typename:int	file:
write_on_eof	extern/libgit2/src/config_file.c	/^static int write_on_eof($/;"	f	typeref:typename:int	file:
write_on_section	extern/libgit2/src/config_file.c	/^static int write_on_section($/;"	f	typeref:typename:int	file:
write_on_variable	extern/libgit2/src/config_file.c	/^static int write_on_variable($/;"	f	typeref:typename:int	file:
write_one	extern/libgit2/src/pack-objects.c	/^static int write_one($/;"	f	typeref:typename:int	file:
write_one_status	extern/libgit2/src/pack-objects.c	/^enum write_one_status {$/;"	g	file:
write_pack	extern/libgit2/src/pack-objects.c	/^static int write_pack(git_packbuilder *pb,$/;"	f	typeref:typename:int	file:
write_pack_buf	extern/libgit2/src/pack-objects.c	/^static int write_pack_buf(void *buf, size_t size, void *data)$/;"	f	typeref:typename:int	file:
write_reuc_extension	extern/libgit2/src/index.c	/^static int write_reuc_extension(git_index *index, git_filebuf *file)$/;"	f	typeref:typename:int	file:
write_revert_head	extern/libgit2/src/revert.c	/^static int write_revert_head($/;"	f	typeref:typename:int	file:
write_section	extern/libgit2/src/config_file.c	/^static int write_section(git_buf *fbuf, const char *key)$/;"	f	typeref:typename:int	file:
write_similarity_file_two	extern/libgit2/tests/diff/rename.c	/^static void write_similarity_file_two(const char *filename, size_t b_lines)$/;"	f	typeref:typename:void	file:
write_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        void write_string(const char_t* data) {$/;"	f	class:xml_buffered_writer	typeref:typename:void	file:
write_summary	extern/libgit2/tests/clar.c	/^	int write_summary;$/;"	m	struct:__anonab24499b0108	typeref:typename:int	file:
write_symlink	extern/libgit2/src/blob.c	/^static int write_symlink($/;"	f	typeref:typename:int	file:
write_table	extern/libgit2/deps/zlib/crc32.c	/^local void write_table(out, table)$/;"	f
write_tag_annotation	extern/libgit2/src/tag.c	/^static int write_tag_annotation($/;"	f	typeref:typename:int	file:
write_tree	extern/libgit2/src/tree-cache.c	/^static void write_tree(git_buf *out, git_tree_cache *tree)$/;"	f	typeref:typename:void	file:
write_tree	extern/libgit2/src/tree.c	/^static int write_tree($/;"	f	typeref:typename:int	file:
write_tree_extension	extern/libgit2/src/index.c	/^static int write_tree_extension(git_index *index, git_filebuf *file)$/;"	f	typeref:typename:int	file:
write_value	extern/libgit2/src/config_file.c	/^static int write_value(struct write_data *write_data)$/;"	f	typeref:typename:int	file:
write_var	extern/libgit2/src/submodule.c	/^static int write_var(git_repository *repo, const char *name, const char *var, const char *val)$/;"	f	typeref:typename:int	file:
write_version	extern/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool write_version($/;"	f	typeref:typename:bool	file:
write_wtfile	extern/libgit2/src/worktree.c	/^static int write_wtfile(const char *base, const char *file, const git_buf *buf)$/;"	f	typeref:typename:int	file:
writefile	extern/libgit2/tests/filter/stream.c	/^static void writefile(const char *filename, size_t numchunks)$/;"	f	typeref:typename:void	file:
writefile	extern/libgit2/tests/odb/largefiles.c	/^static void writefile(git_oid *oid)$/;"	f	typeref:typename:void	file:
writepack	extern/libgit2/src/transports/local.c	/^	git_odb_writepack *writepack;$/;"	m	struct:foreach_data	typeref:typename:git_odb_writepack *	file:
writer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef utf16_writer writer;$/;"	t	struct:wchar_selector	typeref:typename:utf16_writer	file:
writer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        typedef utf32_writer writer;$/;"	t	struct:wchar_selector	typeref:typename:utf32_writer	file:
writer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_writer& writer;$/;"	m	class:xml_buffered_writer	typeref:typename:xml_writer &	file:
written	extern/libgit2/src/merge.c	/^	bool written;$/;"	m	struct:merge_msg_entry	typeref:typename:bool	file:
written	extern/libgit2/src/odb.c	/^	size_t size, written;$/;"	m	struct:__anonfbf77e230208	typeref:typename:size_t	file:
written	extern/libgit2/src/pack-objects.h	/^	int written:1,$/;"	m	struct:git_pobject	typeref:typename:int:1
written	extern/libgit2/tests/trace/trace.c	/^static int written = 0;$/;"	v	typeref:typename:int	file:
wrong_sorted_path	extern/libgit2/tests/status/status_helpers.h	/^	int wrong_sorted_path;$/;"	m	struct:__anon9cf2f0870108	typeref:typename:int
wrong_status_flags_count	extern/libgit2/tests/status/status_helpers.h	/^	int wrong_status_flags_count;$/;"	m	struct:__anon9cf2f0870108	typeref:typename:int
wsize	extern/libgit2/deps/zlib/inflate.h	/^    unsigned wsize;             \/* window size or zero if not using window *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
wt_adds	extern/libgit2/tests/index/addall.c	/^	size_t wt_adds;$/;"	m	struct:__anon6aee9ba20108	typeref:typename:size_t	file:
wt_dels	extern/libgit2/tests/index/addall.c	/^	size_t wt_dels;$/;"	m	struct:__anon6aee9ba20108	typeref:typename:size_t	file:
wt_mods	extern/libgit2/tests/index/addall.c	/^	size_t wt_mods;$/;"	m	struct:__anon6aee9ba20108	typeref:typename:size_t	file:
x	extern/NamedType/main.cpp	/^        int x;$/;"	m	class:A	typeref:typename:int	file:
x	extern/NamedType/main.cpp	/^        int x;$/;"	m	struct:A	typeref:typename:int	file:
x	extern/NamedType/main.cpp	/^        int x;$/;"	m	struct:B	typeref:typename:int	file:
x	extern/NamedType/main.cpp	/^    int x;$/;"	m	struct:testFunctionCallable_A	typeref:typename:int	file:
x	extern/libgit2/deps/zlib/gzguts.h	/^    struct gzFile_s x;      \/* "x" for exposed *\/$/;"	m	struct:__anon7558639b0108	typeref:struct:gzFile_s
xd_new_data	extern/libgit2/src/diff_xdiff.c	/^	mmfile_t xd_old_data, xd_new_data;$/;"	m	struct:__anon14ca16370108	typeref:typename:mmfile_t	file:
xd_old_data	extern/libgit2/src/diff_xdiff.c	/^	mmfile_t xd_old_data, xd_new_data;$/;"	m	struct:__anon14ca16370108	typeref:typename:mmfile_t	file:
xdalgoenv_t	extern/libgit2/src/xdiff/xdiffi.h	/^} xdalgoenv_t;$/;"	t	typeref:struct:s_xdalgoenv
xdchange_t	extern/libgit2/src/xdiff/xdiffi.h	/^} xdchange_t;$/;"	t	typeref:struct:s_xdchange
xdemitcb_t	extern/libgit2/src/xdiff/xdiff.h	/^} xdemitcb_t;$/;"	t	typeref:struct:s_xdemitcb
xdemitconf_t	extern/libgit2/src/xdiff/xdiff.h	/^} xdemitconf_t;$/;"	t	typeref:struct:s_xdemitconf
xdf1	extern/libgit2/src/xdiff/xtypes.h	/^	xdfile_t xdf1, xdf2;$/;"	m	struct:s_xdfenv	typeref:typename:xdfile_t
xdf2	extern/libgit2/src/xdiff/xtypes.h	/^	xdfile_t xdf1, xdf2;$/;"	m	struct:s_xdfenv	typeref:typename:xdfile_t
xdfenv_t	extern/libgit2/src/xdiff/xtypes.h	/^} xdfenv_t;$/;"	t	typeref:struct:s_xdfenv
xdfile_t	extern/libgit2/src/xdiff/xtypes.h	/^} xdfile_t;$/;"	t	typeref:struct:s_xdfile
xdl_add_change	extern/libgit2/src/xdiff/xdiffi.c	/^static xdchange_t *xdl_add_change(xdchange_t *xscr, long i1, long i2, long chg1, long chg2) {$/;"	f	typeref:typename:xdchange_t *	file:
xdl_append_merge	extern/libgit2/src/xdiff/xmerge.c	/^static int xdl_append_merge(xdmerge_t **merge, int mode,$/;"	f	typeref:typename:int	file:
xdl_blankline	extern/libgit2/src/xdiff/xutils.c	/^int xdl_blankline(const char *line, long size, long flags)$/;"	f	typeref:typename:int
xdl_bogosqrt	extern/libgit2/src/xdiff/xutils.c	/^long xdl_bogosqrt(long n) {$/;"	f	typeref:typename:long
xdl_bug	extern/libgit2/src/xdiff/xdiffi.c	/^static void xdl_bug(const char *msg)$/;"	f	typeref:typename:void	file:
xdl_build_script	extern/libgit2/src/xdiff/xdiffi.c	/^int xdl_build_script(xdfenv_t *xe, xdchange_t **xscr) {$/;"	f	typeref:typename:int
xdl_call_hunk_func	extern/libgit2/src/xdiff/xdiffi.c	/^static int xdl_call_hunk_func(xdfenv_t *xe, xdchange_t *xscr, xdemitcb_t *ecb,$/;"	f	typeref:typename:int	file:
xdl_cha_alloc	extern/libgit2/src/xdiff/xutils.c	/^void *xdl_cha_alloc(chastore_t *cha) {$/;"	f	typeref:typename:void *
xdl_cha_free	extern/libgit2/src/xdiff/xutils.c	/^void xdl_cha_free(chastore_t *cha) {$/;"	f	typeref:typename:void
xdl_cha_init	extern/libgit2/src/xdiff/xutils.c	/^int xdl_cha_init(chastore_t *cha, long isize, long icount) {$/;"	f	typeref:typename:int
xdl_change_compact	extern/libgit2/src/xdiff/xdiffi.c	/^int xdl_change_compact(xdfile_t *xdf, xdfile_t *xdfo, long flags) {$/;"	f	typeref:typename:int
xdl_classify_record	extern/libgit2/src/xdiff/xprepare.c	/^static int xdl_classify_record(unsigned int pass, xdlclassifier_t *cf, xrecord_t **rhash,$/;"	f	typeref:typename:int	file:
xdl_clean_mmatch	extern/libgit2/src/xdiff/xprepare.c	/^static int xdl_clean_mmatch(char const *dis, long i, long s, long e) {$/;"	f	typeref:typename:int	file:
xdl_cleanup_merge	extern/libgit2/src/xdiff/xmerge.c	/^static int xdl_cleanup_merge(xdmerge_t *c)$/;"	f	typeref:typename:int	file:
xdl_cleanup_records	extern/libgit2/src/xdiff/xprepare.c	/^static int xdl_cleanup_records(xdlclassifier_t *cf, xdfile_t *xdf1, xdfile_t *xdf2) {$/;"	f	typeref:typename:int	file:
xdl_diff	extern/libgit2/src/xdiff/xdiffi.c	/^int xdl_diff(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,$/;"	f	typeref:typename:int
xdl_do_diff	extern/libgit2/src/xdiff/xdiffi.c	/^int xdl_do_diff(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,$/;"	f	typeref:typename:int
xdl_do_histogram_diff	extern/libgit2/src/xdiff/xhistogram.c	/^int xdl_do_histogram_diff(mmfile_t *file1, mmfile_t *file2,$/;"	f	typeref:typename:int
xdl_do_merge	extern/libgit2/src/xdiff/xmerge.c	/^static int xdl_do_merge(xdfenv_t *xe1, xdchange_t *xscr1,$/;"	f	typeref:typename:int	file:
xdl_do_patience_diff	extern/libgit2/src/xdiff/xpatience.c	/^int xdl_do_patience_diff(mmfile_t *file1, mmfile_t *file2,$/;"	f	typeref:typename:int
xdl_emit_diff	extern/libgit2/src/xdiff/xemit.c	/^int xdl_emit_diff(xdfenv_t *xe, xdchange_t *xscr, xdemitcb_t *ecb,$/;"	f	typeref:typename:int
xdl_emit_diffrec	extern/libgit2/src/xdiff/xutils.c	/^int xdl_emit_diffrec(char const *rec, long size, char const *pre, long psize,$/;"	f	typeref:typename:int
xdl_emit_hunk_consume_func_t	extern/libgit2/src/xdiff/xdiff.h	/^typedef int (*xdl_emit_hunk_consume_func_t)(long start_a, long count_a,$/;"	t	typeref:typename:int (*)(long start_a,long count_a,long start_b,long count_b,void * cb_data)
xdl_emit_hunk_hdr	extern/libgit2/src/xdiff/xutils.c	/^int xdl_emit_hunk_hdr(long s1, long c1, long s2, long c2,$/;"	f	typeref:typename:int
xdl_emit_record	extern/libgit2/src/xdiff/xemit.c	/^static int xdl_emit_record(xdfile_t *xdf, long ri, char const *pre, xdemitcb_t *ecb) {$/;"	f	typeref:typename:int	file:
xdl_fall_back_diff	extern/libgit2/src/xdiff/xutils.c	/^int xdl_fall_back_diff(xdfenv_t *diff_env, xpparam_t const *xpp,$/;"	f	typeref:typename:int
xdl_fill_merge_buffer	extern/libgit2/src/xdiff/xmerge.c	/^static int xdl_fill_merge_buffer(size_t *out,$/;"	f	typeref:typename:int	file:
xdl_free	extern/libgit2/src/xdiff/xdiff.h	/^#define xdl_free(/;"	d
xdl_free_classifier	extern/libgit2/src/xdiff/xprepare.c	/^static void xdl_free_classifier(xdlclassifier_t *cf) {$/;"	f	typeref:typename:void	file:
xdl_free_ctx	extern/libgit2/src/xdiff/xprepare.c	/^static void xdl_free_ctx(xdfile_t *xdf) {$/;"	f	typeref:typename:void	file:
xdl_free_env	extern/libgit2/src/xdiff/xprepare.c	/^void xdl_free_env(xdfenv_t *xe) {$/;"	f	typeref:typename:void
xdl_free_script	extern/libgit2/src/xdiff/xdiffi.c	/^void xdl_free_script(xdchange_t *xscr) {$/;"	f	typeref:typename:void
xdl_get_hunk	extern/libgit2/src/xdiff/xemit.c	/^xdchange_t *xdl_get_hunk(xdchange_t **xscr, xdemitconf_t const *xecfg)$/;"	f	typeref:typename:xdchange_t *
xdl_get_rec	extern/libgit2/src/xdiff/xemit.c	/^static long xdl_get_rec(xdfile_t *xdf, long ri, char const **rec) {$/;"	f	typeref:typename:long	file:
xdl_guess_lines	extern/libgit2/src/xdiff/xutils.c	/^long xdl_guess_lines(mmfile_t *mf, long sample) {$/;"	f	typeref:typename:long
xdl_hash_record	extern/libgit2/src/xdiff/xutils.c	/^unsigned long xdl_hash_record(char const **data, char const *top, long flags) {$/;"	f	typeref:typename:unsigned long
xdl_hash_record_with_whitespace	extern/libgit2/src/xdiff/xutils.c	/^static unsigned long xdl_hash_record_with_whitespace(char const **data,$/;"	f	typeref:typename:unsigned long	file:
xdl_hashbits	extern/libgit2/src/xdiff/xutils.c	/^unsigned int xdl_hashbits(unsigned int size) {$/;"	f	typeref:typename:unsigned int
xdl_init_classifier	extern/libgit2/src/xdiff/xprepare.c	/^static int xdl_init_classifier(xdlclassifier_t *cf, long size, long flags) {$/;"	f	typeref:typename:int	file:
xdl_malloc	extern/libgit2/src/xdiff/xdiff.h	/^#define xdl_malloc(/;"	d
xdl_mark_ignorable	extern/libgit2/src/xdiff/xdiffi.c	/^static void xdl_mark_ignorable(xdchange_t *xscr, xdfenv_t *xe, long flags)$/;"	f	typeref:typename:void	file:
xdl_merge	extern/libgit2/src/xdiff/xmerge.c	/^int xdl_merge(mmfile_t *orig, mmfile_t *mf1, mmfile_t *mf2,$/;"	f	typeref:typename:int
xdl_merge_cmp_lines	extern/libgit2/src/xdiff/xmerge.c	/^static int xdl_merge_cmp_lines(xdfenv_t *xe1, int i1, xdfenv_t *xe2, int i2,$/;"	f	typeref:typename:int	file:
xdl_merge_two_conflicts	extern/libgit2/src/xdiff/xmerge.c	/^static void xdl_merge_two_conflicts(xdmerge_t *m)$/;"	f	typeref:typename:void	file:
xdl_mmfile_first	extern/libgit2/src/xdiff/xutils.c	/^void *xdl_mmfile_first(mmfile_t *mmf, long *size)$/;"	f	typeref:typename:void *
xdl_mmfile_size	extern/libgit2/src/xdiff/xutils.c	/^long xdl_mmfile_size(mmfile_t *mmf)$/;"	f	typeref:typename:long
xdl_num_out	extern/libgit2/src/xdiff/xutils.c	/^int xdl_num_out(char *out, long val) {$/;"	f	typeref:typename:int
xdl_optimize_ctxs	extern/libgit2/src/xdiff/xprepare.c	/^static int xdl_optimize_ctxs(xdlclassifier_t *cf, xdfile_t *xdf1, xdfile_t *xdf2) {$/;"	f	typeref:typename:int	file:
xdl_orig_copy	extern/libgit2/src/xdiff/xmerge.c	/^static int xdl_orig_copy(size_t *out, xdfenv_t *xe, int i, int count, int needs_cr, int add_nl, /;"	f	typeref:typename:int	file:
xdl_prepare_ctx	extern/libgit2/src/xdiff/xprepare.c	/^static int xdl_prepare_ctx(unsigned int pass, mmfile_t *mf, long narec, xpparam_t const *xpp,$/;"	f	typeref:typename:int	file:
xdl_prepare_env	extern/libgit2/src/xdiff/xprepare.c	/^int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,$/;"	f	typeref:typename:int
xdl_realloc	extern/libgit2/src/xdiff/xdiff.h	/^#define xdl_realloc(/;"	d
xdl_recmatch	extern/libgit2/src/xdiff/xutils.c	/^int xdl_recmatch(const char *l1, long s1, const char *l2, long s2, long flags)$/;"	f	typeref:typename:int
xdl_recs_cmp	extern/libgit2/src/xdiff/xdiffi.c	/^int xdl_recs_cmp(diffdata_t *dd1, long off1, long lim1,$/;"	f	typeref:typename:int
xdl_recs_copy	extern/libgit2/src/xdiff/xmerge.c	/^static int xdl_recs_copy(size_t *out, xdfenv_t *xe, int i, int count, int needs_cr, int add_nl, /;"	f	typeref:typename:int	file:
xdl_recs_copy_0	extern/libgit2/src/xdiff/xmerge.c	/^static int xdl_recs_copy_0(size_t *out, int use_orig, xdfenv_t *xe, int i, int count, int needs_/;"	f	typeref:typename:int	file:
xdl_refine_conflicts	extern/libgit2/src/xdiff/xmerge.c	/^static int xdl_refine_conflicts(xdfenv_t *xe1, xdfenv_t *xe2, xdmerge_t *m,$/;"	f	typeref:typename:int	file:
xdl_simplify_non_conflicts	extern/libgit2/src/xdiff/xmerge.c	/^static int xdl_simplify_non_conflicts(xdfenv_t *xe1, xdmerge_t *m,$/;"	f	typeref:typename:int	file:
xdl_split	extern/libgit2/src/xdiff/xdiffi.c	/^static long xdl_split(unsigned long const *ha1, long off1, long lim1,$/;"	f	typeref:typename:long	file:
xdl_trim_ends	extern/libgit2/src/xdiff/xprepare.c	/^static int xdl_trim_ends(xdfile_t *xdf1, xdfile_t *xdf2) {$/;"	f	typeref:typename:int	file:
xdlclass_t	extern/libgit2/src/xdiff/xprepare.c	/^} xdlclass_t;$/;"	t	typeref:struct:s_xdlclass	file:
xdlclassifier_t	extern/libgit2/src/xdiff/xprepare.c	/^} xdlclassifier_t;$/;"	t	typeref:struct:s_xdlclassifier	file:
xdlgroup	extern/libgit2/src/xdiff/xdiffi.c	/^struct xdlgroup {$/;"	s	file:
xdmerge_t	extern/libgit2/src/xdiff/xmerge.c	/^} xdmerge_t;$/;"	t	typeref:struct:s_xdmerge	file:
xdpsplit_t	extern/libgit2/src/xdiff/xdiffi.c	/^} xdpsplit_t;$/;"	t	typeref:struct:s_xdpsplit	file:
xflags	extern/libgit2/deps/zlib/zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s	typeref:typename:int
xlslib	extern/OpenXLSX/README.md	/^### xlslib$/;"	S
xml_allocator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_allocator(xml_memory_page* root) : _root(root), _busy_size(root->busy_size) {$/;"	f	struct:xml_allocator	file:
xml_allocator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct xml_allocator$/;"	s	file:
xml_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute::xml_attribute() : _attr(0) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN
xml_attribute	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute::xml_attribute(xml_attribute_struct* attr) : _attr(attr) {$/;"	f	class:pugi::xml_attribute	typeref:typename:PUGI__FN
xml_attribute	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xml_attribute$/;"	c	namespace:pugi
xml_attribute_iterator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute_iterator::xml_attribute_iterator() {$/;"	f	class:pugi::xml_attribute_iterator	typeref:typename:PUGI__FN
xml_attribute_iterator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute_iterator::xml_attribute_iterator(const xml_attribute& attr, const xml/;"	f	class:pugi::xml_attribute_iterator	typeref:typename:PUGI__FN
xml_attribute_iterator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_attribute_iterator::xml_attribute_iterator(xml_attribute_struct* ref, xml_node_/;"	f	class:pugi::xml_attribute_iterator	typeref:typename:PUGI__FN
xml_attribute_iterator	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xml_attribute_iterator$/;"	c	namespace:pugi
xml_attribute_struct	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xml_attribute_struct(impl::xml_memory_page* page): header(page, 0), namevalue_base(0)$/;"	f	struct:pugi::xml_attribute_struct	file:
xml_attribute_struct	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xml_attribute_struct$/;"	s	namespace:pugi	file:
xml_buffered_writer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_buffered_writer(xml_writer& writer_, xml_encoding user_encoding) : writer(writer_),$/;"	f	class:xml_buffered_writer	file:
xml_buffered_writer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    class xml_buffered_writer$/;"	c	file:
xml_document	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_document::xml_document() : _buffer(0) {$/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN
xml_document	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_document::xml_document(xml_document&& rhs) PUGIXML_NOEXCEPT_IF_NOT_COMPACT: _bu/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN
xml_document	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xml_document : public xml_node$/;"	c	namespace:pugi
xml_document_struct	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_document_struct(xml_memory_page* page) : xml_node_struct(page, node_document),$/;"	f	struct:xml_document_struct	file:
xml_document_struct	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct xml_document_struct : public xml_node_struct, public xml_allocator$/;"	s	file:
xml_encoding	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    enum xml_encoding$/;"	g	namespace:pugi
xml_extra_buffer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct xml_extra_buffer$/;"	s	file:
xml_memory	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    typedef xml_memory_management_function_storage<int> xml_memory;$/;"	t	typeref:typename:xml_memory_management_function_storage<int>	file:
xml_memory_block_alignment	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    static const uintptr_t xml_memory_block_alignment = 4;$/;"	v	typeref:typename:PUGI__NS_END PUGI__NS_BEGIN const uintptr_t	file:
xml_memory_management_function_storage	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct xml_memory_management_function_storage$/;"	s	file:
xml_memory_page	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct xml_memory_page$/;"	s	file:
xml_memory_page_contents_shared_mask	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    static const uintptr_t xml_memory_page_contents_shared_mask = 64;$/;"	v	typeref:typename:const uintptr_t	file:
xml_memory_page_name_allocated_mask	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    static const uintptr_t xml_memory_page_name_allocated_mask = 32;$/;"	v	typeref:typename:const uintptr_t	file:
xml_memory_page_name_allocated_or_shared_mask	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    static const uintptr_t xml_memory_page_name_allocated_or_shared_mask =$/;"	v	typeref:typename:const uintptr_t	file:
xml_memory_page_size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    static const size_t xml_memory_page_size =$/;"	v	typeref:typename:const size_t	file:
xml_memory_page_type_mask	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    static const uintptr_t xml_memory_page_type_mask = 15;$/;"	v	typeref:typename:const uintptr_t	file:
xml_memory_page_value_allocated_mask	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    static const uintptr_t xml_memory_page_value_allocated_mask = 16;$/;"	v	typeref:typename:const uintptr_t	file:
xml_memory_page_value_allocated_or_shared_mask	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    static const uintptr_t xml_memory_page_value_allocated_or_shared_mask =$/;"	v	typeref:typename:const uintptr_t	file:
xml_memory_string_header	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct xml_memory_string_header$/;"	s	file:
xml_named_node_iterator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_named_node_iterator::xml_named_node_iterator() : _name(0) {$/;"	f	class:pugi::xml_named_node_iterator	typeref:typename:PUGI__FN
xml_named_node_iterator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_named_node_iterator::xml_named_node_iterator(const xml_node& node, const char_t/;"	f	class:pugi::xml_named_node_iterator	typeref:typename:PUGI__FN
xml_named_node_iterator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_named_node_iterator::xml_named_node_iterator(xml_node_struct* ref, xml_node_str/;"	f	class:pugi::xml_named_node_iterator	typeref:typename:PUGI__FN
xml_named_node_iterator	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xml_named_node_iterator$/;"	c	namespace:pugi
xml_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node::xml_node() : _root(0) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN
xml_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node::xml_node(xml_node_struct* p) : _root(p) {$/;"	f	class:pugi::xml_node	typeref:typename:PUGI__FN
xml_node	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xml_node$/;"	c	namespace:pugi
xml_node_iterator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node_iterator::xml_node_iterator() {$/;"	f	class:pugi::xml_node_iterator	typeref:typename:PUGI__FN
xml_node_iterator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node_iterator::xml_node_iterator(const xml_node& node) : _wrap(node), _parent(n/;"	f	class:pugi::xml_node_iterator	typeref:typename:PUGI__FN
xml_node_iterator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_node_iterator::xml_node_iterator(xml_node_struct* ref, xml_node_struct* parent)/;"	f	class:pugi::xml_node_iterator	typeref:typename:PUGI__FN
xml_node_iterator	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xml_node_iterator$/;"	c	namespace:pugi
xml_node_struct	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xml_node_struct(impl::xml_memory_page* page, xml_node_type type): header(page, type), namevalu/;"	f	struct:pugi::xml_node_struct	file:
xml_node_struct	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xml_node_struct$/;"	s	namespace:pugi	file:
xml_node_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    enum xml_node_type$/;"	g	namespace:pugi
xml_object_range	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xml_object_range(It b, It e) : _begin(b), _end(e) {$/;"	f	class:pugi::xml_object_range
xml_object_range	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    template<typename It> class xml_object_range$/;"	c	namespace:pugi
xml_parse_result	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_parse_result::xml_parse_result() : status(status_internal_error), offset(0), en/;"	f	class:pugi::xml_parse_result	typeref:typename:PUGI__FN
xml_parse_result	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    struct PUGIXML_CLASS xml_parse_result$/;"	s	namespace:pugi
xml_parse_status	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    enum xml_parse_status$/;"	g	namespace:pugi
xml_parser	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_parser(xml_allocator* alloc_) : alloc(alloc_), error_offset(0), error_status(status_/;"	f	struct:xml_parser	file:
xml_parser	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    struct xml_parser$/;"	s	file:
xml_stream_chunk	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        xml_stream_chunk() : next(0), size(0) {$/;"	f	struct:xml_stream_chunk	file:
xml_stream_chunk	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    template<typename T> struct xml_stream_chunk$/;"	s	file:
xml_text	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text::xml_text() : _root(0) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN
xml_text	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_text::xml_text(xml_node_struct* root) : _root(root) {$/;"	f	class:pugi::xml_text	typeref:typename:PUGI__FN
xml_text	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xml_text$/;"	c	namespace:pugi
xml_tree_walker	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_tree_walker::xml_tree_walker() : _depth(0) {$/;"	f	class:pugi::xml_tree_walker	typeref:typename:PUGI__FN
xml_tree_walker	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xml_tree_walker$/;"	c	namespace:pugi
xml_writer	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xml_writer$/;"	c	namespace:pugi
xml_writer_file	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_writer_file::xml_writer_file(void* file_) : file(file_) {$/;"	f	class:pugi::xml_writer_file	typeref:typename:PUGI__FN
xml_writer_file	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xml_writer_file : public xml_writer$/;"	c	namespace:pugi
xml_writer_stream	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_writer_stream::xml_writer_stream($/;"	f	class:pugi::xml_writer_stream	typeref:typename:PUGI__FN
xml_writer_stream	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xml_writer_stream : public xml_writer$/;"	c	namespace:pugi
xmparam_t	extern/libgit2/src/xdiff/xdiff.h	/^} xmparam_t;$/;"	t	typeref:struct:s_xmparam
xo	extern/libgit2/src/diff_xdiff.c	/^	git_xdiff_output *xo;$/;"	m	struct:__anon14ca16370108	typeref:typename:git_xdiff_output *	file:
xpath_allocator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_allocator(xpath_memory_block* root, bool* error = 0): _root(root), _root_size(0), _error/;"	f	struct:xpath_allocator	file:
xpath_allocator	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_allocator$/;"	s	file:
xpath_allocator_capture	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_allocator_capture(xpath_allocator* alloc): _target(alloc), _state(*alloc)$/;"	f	struct:xpath_allocator_capture	file:
xpath_allocator_capture	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_allocator_capture$/;"	s	file:
xpath_ast_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node(ast_type_t type, xpath_ast_node* left, axis_t axis, nodetest_t test, const char/;"	f	class:xpath_ast_node	file:
xpath_ast_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node(ast_type_t type, xpath_ast_node* left, xpath_ast_node* right, predicate_t test)/;"	f	class:xpath_ast_node	file:
xpath_ast_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node(ast_type_t type, xpath_value_type rettype_, const char_t* value):$/;"	f	class:xpath_ast_node	file:
xpath_ast_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node(ast_type_t type, xpath_value_type rettype_, double value):$/;"	f	class:xpath_ast_node	file:
xpath_ast_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node(ast_type_t type, xpath_value_type rettype_, xpath_ast_node* left = 0, xpath_ast/;"	f	class:xpath_ast_node	file:
xpath_ast_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_ast_node(ast_type_t type, xpath_value_type rettype_, xpath_variable* value):$/;"	f	class:xpath_ast_node	file:
xpath_ast_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	class xpath_ast_node$/;"	c	file:
xpath_context	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_context(const xpath_node& n_, size_t position_, size_t size_): n(n_), position(position_/;"	f	struct:xpath_context	file:
xpath_context	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_context$/;"	s	file:
xpath_exception	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_exception::xpath_exception(const xpath_parse_result& result_): _result(result_)$/;"	f	class:pugi::xpath_exception	typeref:typename:PUGI__FN
xpath_exception	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xpath_exception: public std::exception$/;"	c	namespace:pugi
xpath_first	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node xpath_first(const xpath_node* begin, const xpath_node* end, xpath_node_set:/;"	f	typeref:typename:PUGI__FN xpath_node
xpath_get_order	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set::type_t xpath_get_order(const xpath_node* begin, const xpath_node* end)$/;"	f	typeref:typename:PUGI__NS_END PUGI__NS_BEGIN PUGI__FN xpath_node_set::type_t
xpath_lexer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		explicit xpath_lexer(const char_t* query): _cur(query)$/;"	f	class:xpath_lexer	file:
xpath_lexer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	class xpath_lexer$/;"	c	file:
xpath_lexer_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_lexer_string(): begin(0), end(0)$/;"	f	struct:xpath_lexer_string	file:
xpath_lexer_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_lexer_string$/;"	s	file:
xpath_memory_block	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_memory_block$/;"	s	file:
xpath_memory_block_alignment	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	static const uintptr_t xpath_memory_block_alignment = sizeof(double) > sizeof(void*) ? sizeof(d/;"	v	typeref:typename:const uintptr_t	file:
xpath_memory_page_size	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	static const size_t xpath_memory_page_size =$/;"	v	typeref:typename:PUGI__NS_END PUGI__NS_BEGIN const size_t	file:
xpath_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node::xpath_node()$/;"	f	class:pugi::xpath_node	typeref:typename:PUGI__FN
xpath_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node::xpath_node(const xml_attribute& attribute_, const xml_node& parent_): _nod/;"	f	class:pugi::xpath_node	typeref:typename:PUGI__FN
xpath_node	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node::xpath_node(const xml_node& node_): _node(node_)$/;"	f	class:pugi::xpath_node	typeref:typename:PUGI__FN
xpath_node	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xpath_node$/;"	c	namespace:pugi
xpath_node_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set::xpath_node_set(): _type(type_unsorted), _begin(&_storage), _end(&_stor/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN
xpath_node_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set::xpath_node_set(const xpath_node_set& ns): _type(type_unsorted), _begin/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN
xpath_node_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set::xpath_node_set(const_iterator begin_, const_iterator end_, type_t type/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN
xpath_node_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set::xpath_node_set(xpath_node_set&& rhs) PUGIXML_NOEXCEPT: _type(type_unso/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN
xpath_node_set	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xpath_node_set$/;"	c	namespace:pugi
xpath_node_set_raw	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_node_set_raw(): _type(xpath_node_set::type_unsorted), _begin(0), _end(0), _eos(0)$/;"	f	class:xpath_node_set_raw	file:
xpath_node_set_raw	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	class xpath_node_set_raw$/;"	c	file:
xpath_parse_result	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_parse_result::xpath_parse_result(): error("Internal error"), offset(0)$/;"	f	class:pugi::xpath_parse_result	typeref:typename:PUGI__FN
xpath_parse_result	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    struct PUGIXML_CLASS xpath_parse_result$/;"	s	namespace:pugi
xpath_parser	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_parser(const char_t* query, xpath_variable_set* variables, xpath_allocator* alloc, xpath/;"	f	struct:xpath_parser	file:
xpath_parser	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_parser$/;"	s	file:
xpath_query	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_query::xpath_query(): _impl(0)$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN
xpath_query	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_query::xpath_query(const char_t* query, xpath_variable_set* variables): _impl(0)$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN
xpath_query	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_query::xpath_query(xpath_query&& rhs) PUGIXML_NOEXCEPT$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN
xpath_query	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xpath_query$/;"	c	namespace:pugi
xpath_query_impl	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_query_impl(): root(0), alloc(&block, &oom), oom(false)$/;"	f	struct:xpath_query_impl	file:
xpath_query_impl	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_query_impl$/;"	s	file:
xpath_sort	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set::type_t xpath_sort(xpath_node* begin, xpath_node* end, xpath_node_set::/;"	f	typeref:typename:PUGI__FN xpath_node_set::type_t
xpath_stack	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_stack$/;"	s	file:
xpath_stack_data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_stack_data(): result(blocks + 0, &oom), temp(blocks + 1, &oom), oom(false)$/;"	f	struct:xpath_stack_data	file:
xpath_stack_data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_stack_data$/;"	s	file:
xpath_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_string(): _buffer(PUGIXML_TEXT("")), _uses_heap(false), _length_heap(0)$/;"	f	class:xpath_string	file:
xpath_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_string(const char_t* buffer, bool uses_heap_, size_t length_heap): _buffer(buffer), _use/;"	f	class:xpath_string	file:
xpath_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	class xpath_string$/;"	c	file:
xpath_type_boolean	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_type_boolean	  \/\/ Boolean$/;"	e	enum:pugi::xpath_value_type
xpath_type_node_set	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_type_node_set,  \/\/ Node set (xpath_node_set)$/;"	e	enum:pugi::xpath_value_type
xpath_type_none	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_type_none,	  \/\/ Unknown type (query failed to compile)$/;"	e	enum:pugi::xpath_value_type
xpath_type_number	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_type_number,	  \/\/ Number$/;"	e	enum:pugi::xpath_value_type
xpath_type_string	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        xpath_type_string,	  \/\/ String$/;"	e	enum:pugi::xpath_value_type
xpath_value_type	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    enum xpath_value_type$/;"	g	namespace:pugi
xpath_variable	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_variable::xpath_variable(xpath_value_type type_): _type(type_), _next(0)$/;"	f	class:pugi::xpath_variable	typeref:typename:PUGI__FN
xpath_variable	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xpath_variable$/;"	c	namespace:pugi
xpath_variable_boolean	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_variable_boolean(): xpath_variable(xpath_type_boolean), value(false)$/;"	f	struct:xpath_variable_boolean	file:
xpath_variable_boolean	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_variable_boolean: xpath_variable$/;"	s	file:
xpath_variable_node_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_variable_node_set(): xpath_variable(xpath_type_node_set)$/;"	f	struct:xpath_variable_node_set	file:
xpath_variable_node_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_variable_node_set: xpath_variable$/;"	s	file:
xpath_variable_number	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_variable_number(): xpath_variable(xpath_type_number), value(0)$/;"	f	struct:xpath_variable_number	file:
xpath_variable_number	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_variable_number: xpath_variable$/;"	s	file:
xpath_variable_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_variable_set::xpath_variable_set()$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN
xpath_variable_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_variable_set::xpath_variable_set(const xpath_variable_set& rhs)$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN
xpath_variable_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_variable_set::xpath_variable_set(xpath_variable_set&& rhs) PUGIXML_NOEXCEPT$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN
xpath_variable_set	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^    class PUGIXML_CLASS xpath_variable_set$/;"	c	namespace:pugi
xpath_variable_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		xpath_variable_string(): xpath_variable(xpath_type_string), value(0)$/;"	f	struct:xpath_variable_string	file:
xpath_variable_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	struct xpath_variable_string: xpath_variable$/;"	s	file:
xpp	extern/libgit2/src/xdiff/xdiff.h	/^	xpparam_t xpp;$/;"	m	struct:s_xmparam	typeref:typename:xpparam_t
xpp	extern/libgit2/src/xdiff/xhistogram.c	/^	xpparam_t const *xpp;$/;"	m	struct:histindex	typeref:typename:xpparam_t const *	file:
xpp	extern/libgit2/src/xdiff/xpatience.c	/^	xpparam_t const *xpp;$/;"	m	struct:hashmap	typeref:typename:xpparam_t const *	file:
xpparam_t	extern/libgit2/src/xdiff/xdiff.h	/^} xpparam_t;$/;"	t	typeref:struct:s_xpparam
xrealloc	extern/libgit2/examples/common.c	/^void *xrealloc(void *oldp, size_t newsz)$/;"	f	typeref:typename:void *
xrecord_t	extern/libgit2/src/xdiff/xtypes.h	/^} xrecord_t;$/;"	t	typeref:struct:s_xrecord
z	extern/libgit2/src/zstream.h	/^	z_stream z;$/;"	m	struct:__anonebc673f90208	typeref:typename:z_stream
zError	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define zError /;"	d
zError	extern/libgit2/deps/zlib/zconf.h	/^#  define zError /;"	d
zError	extern/libgit2/deps/zlib/zutil.c	/^const char * ZEXPORT zError(err)$/;"	f
z_adler32_combine	extern/libgit2/deps/zlib/zlib.h	/^#    define z_adler32_combine /;"	d
z_buf	extern/libgit2/src/filebuf.h	/^	unsigned char *z_buf;$/;"	m	struct:git_filebuf	typeref:typename:unsigned char *
z_const	extern/libgit2/deps/zlib/zconf.h	/^#  define z_const /;"	d
z_const	extern/libgit2/deps/zlib/zconf.h	/^#  define z_const$/;"	d
z_crc32_combine	extern/libgit2/deps/zlib/zlib.h	/^#    define z_crc32_combine /;"	d
z_crc_t	extern/libgit2/deps/zlib/zconf.h	/^   typedef Z_U4 z_crc_t;$/;"	t	typeref:typename:Z_U4
z_crc_t	extern/libgit2/deps/zlib/zconf.h	/^   typedef unsigned long z_crc_t;$/;"	t	typeref:typename:unsigned long
z_deflateInit	extern/libgit2/deps/zlib/zlib.h	/^#  define z_deflateInit(/;"	d
z_deflateInit2	extern/libgit2/deps/zlib/zlib.h	/^#  define z_deflateInit2(/;"	d
z_delta_size	extern/libgit2/src/pack-objects.h	/^	size_t z_delta_size;$/;"	m	struct:git_pobject	typeref:typename:size_t
z_errmsg	extern/libgit2/deps/zlib/zutil.c	/^z_const char * const z_errmsg[10] = {$/;"	v	typeref:typename:z_const char * const[10]
z_error	extern/libgit2/deps/zlib/zutil.c	/^void ZLIB_INTERNAL z_error (m)$/;"	f
z_gzgetc	extern/libgit2/deps/zlib/zlib.h	/^#  define z_gzgetc(/;"	d
z_gzoffset	extern/libgit2/deps/zlib/zlib.h	/^#    define z_gzoffset /;"	d
z_gzopen	extern/libgit2/deps/zlib/zlib.h	/^#    define z_gzopen /;"	d
z_gzseek	extern/libgit2/deps/zlib/zlib.h	/^#    define z_gzseek /;"	d
z_gztell	extern/libgit2/deps/zlib/zlib.h	/^#    define z_gztell /;"	d
z_inflateBackInit	extern/libgit2/deps/zlib/zlib.h	/^#  define z_inflateBackInit(/;"	d
z_inflateInit	extern/libgit2/deps/zlib/zlib.h	/^#  define z_inflateInit(/;"	d
z_inflateInit2	extern/libgit2/deps/zlib/zlib.h	/^#  define z_inflateInit2(/;"	d
z_longlong	extern/libgit2/deps/zlib/zconf.h	/^#  define z_longlong /;"	d
z_off64_t	extern/libgit2/deps/zlib/zconf.h	/^#    define z_off64_t /;"	d
z_off64_t	extern/libgit2/deps/zlib/zconf.h	/^#  define z_off64_t /;"	d
z_off_t	extern/libgit2/deps/zlib/zconf.h	/^#      define z_off_t /;"	d
z_off_t	extern/libgit2/deps/zlib/zconf.h	/^#  define z_off_t /;"	d
z_size_t	extern/libgit2/deps/zlib/zconf.h	/^     typedef size_t z_size_t;$/;"	t	typeref:typename:size_t
z_size_t	extern/libgit2/deps/zlib/zconf.h	/^     typedef unsigned NO_SIZE_T z_size_t;$/;"	t	typeref:typename:unsigned NO_SIZE_T
z_size_t	extern/libgit2/deps/zlib/zconf.h	/^     typedef unsigned long z_size_t;$/;"	t	typeref:typename:unsigned long
z_size_t	extern/libgit2/deps/zlib/zconf.h	/^   typedef unsigned long z_size_t;$/;"	t	typeref:typename:unsigned long
z_stream	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define z_stream /;"	d
z_stream	extern/libgit2/deps/zlib/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	extern/libgit2/deps/zlib/zlib.h	/^typedef struct z_stream_s {$/;"	s
z_streamp	extern/libgit2/deps/zlib/zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t	typeref:typename:z_stream FAR *
z_verbose	extern/libgit2/deps/zlib/zutil.c	/^int ZLIB_INTERNAL z_verbose = verbose;$/;"	v	typeref:typename:int ZLIB_INTERNAL
zalloc	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_alloc_func zalloc; \/* optional heap allocation function (defaults to malloc) *\/$/;"	m	struct:mz_stream_s	typeref:typename:mz_alloc_func
zalloc	extern/libgit2/deps/zlib/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s	typeref:typename:alloc_func
zcalloc	extern/libgit2/deps/zlib/zconf.h	/^#    define zcalloc /;"	d
zcalloc	extern/libgit2/deps/zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc (opaque, items, size)$/;"	f
zcalloc	extern/libgit2/deps/zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc (voidpf opaque, uInt items, uInt size)$/;"	f	typeref:typename:voidpf ZLIB_INTERNAL
zcalloc	extern/libgit2/deps/zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc (voidpf opaque, unsigned items, unsigned size)$/;"	f	typeref:typename:voidpf ZLIB_INTERNAL
zcfree	extern/libgit2/deps/zlib/zconf.h	/^#    define zcfree /;"	d
zcfree	extern/libgit2/deps/zlib/zutil.c	/^void ZLIB_INTERNAL zcfree (opaque, ptr)$/;"	f
zcfree	extern/libgit2/deps/zlib/zutil.c	/^void ZLIB_INTERNAL zcfree (voidpf opaque, voidpf ptr)$/;"	f	typeref:typename:void ZLIB_INTERNAL
zero	extern/libgit2/tests/odb/loose_data.h	/^static object_data zero = {$/;"	v	typeref:typename:object_data
zero_bytes	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char zero_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
zero_data	extern/libgit2/tests/object/raw/data.h	/^static unsigned char zero_data[] = {$/;"	v	typeref:typename:unsigned char[]
zero_data	extern/libgit2/tests/odb/loose_data.h	/^static unsigned char zero_data[] = {$/;"	v	typeref:typename:unsigned char[]
zero_id	extern/libgit2/tests/object/raw/data.h	/^static char *zero_id = "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391";$/;"	v	typeref:typename:char *
zero_matchingpath	extern/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *zero_matchingpath;$/;"	m	struct:bracket_backtrack	typeref:struct:sljit_label *	file:
zero_obj	extern/libgit2/tests/object/raw/data.h	/^static git_rawobj zero_obj = {$/;"	v	typeref:typename:git_rawobj
zero_terminate_buffer	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN size_t zero_terminate_buffer(void* buffer, size_t size, xml_encoding encoding) {$/;"	f	typeref:typename:PUGI__FN size_t
zerr	extern/libgit2/src/zstream.h	/^	int zerr;$/;"	m	struct:__anonebc673f90208	typeref:typename:int
zfree	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^    mz_free_func zfree;   \/* optional heap free function (defaults to free) *\/$/;"	m	struct:mz_stream_s	typeref:typename:mz_free_func
zfree	extern/libgit2/deps/zlib/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s	typeref:typename:free_func
zlib	extern/libgit2/deps/zlib/CMakeLists.txt	/^ADD_LIBRARY(zlib OBJECT ${SRC_ZLIB})$/;"	t
zlibCompileFlags	extern/libgit2/deps/zlib/zconf.h	/^#  define zlibCompileFlags /;"	d
zlibCompileFlags	extern/libgit2/deps/zlib/zutil.c	/^uLong ZEXPORT zlibCompileFlags()$/;"	f	typeref:typename:uLong ZEXPORT
zlibVersion	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define zlibVersion /;"	d
zlibVersion	extern/libgit2/deps/zlib/zconf.h	/^#  define zlibVersion /;"	d
zlibVersion	extern/libgit2/deps/zlib/zutil.c	/^const char * ZEXPORT zlibVersion()$/;"	f	typeref:typename:const char * ZEXPORT
zlib_version	extern/OpenXLSX/library/zippy/Zippy/miniz/miniz.h	/^#define zlib_version /;"	d
zlib_version	extern/libgit2/deps/zlib/zlib.h	/^#define zlib_version /;"	d
zmemcmp	extern/libgit2/deps/zlib/zutil.c	/^int ZLIB_INTERNAL zmemcmp(s1, s2, len)$/;"	f
zmemcmp	extern/libgit2/deps/zlib/zutil.h	/^#    define zmemcmp /;"	d
zmemcpy	extern/libgit2/deps/zlib/zutil.c	/^void ZLIB_INTERNAL zmemcpy(dest, source, len)$/;"	f
zmemcpy	extern/libgit2/deps/zlib/zutil.h	/^#    define zmemcpy /;"	d
zmemzero	extern/libgit2/deps/zlib/zutil.c	/^void ZLIB_INTERNAL zmemzero(dest, len)$/;"	f
zmemzero	extern/libgit2/deps/zlib/zutil.h	/^#    define zmemzero(/;"	d
zs	extern/libgit2/src/filebuf.h	/^	z_stream zs;$/;"	m	struct:git_filebuf	typeref:typename:z_stream
zstream	extern/libgit2/src/odb_loose.c	/^	git_zstream zstream;$/;"	m	struct:__anon81c02f840308	typeref:typename:git_zstream	file:
zstream	extern/libgit2/src/pack-objects.h	/^	git_zstream zstream;$/;"	m	struct:git_packbuilder	typeref:typename:git_zstream
zstream	extern/libgit2/src/pack.h	/^	z_stream zstream;$/;"	m	struct:git_packfile_stream	typeref:typename:z_stream
zstream_buf	extern/libgit2/src/zstream.c	/^static int zstream_buf(git_buf *out, const void *in, size_t in_len, git_zstream_t type)$/;"	f	typeref:typename:int	file:
zstream_seterr	extern/libgit2/src/zstream.c	/^GIT_INLINE(int) zstream_seterr(git_zstream *zs)$/;"	f	typeref:typename:int
zstrerror	extern/libgit2/deps/zlib/gzguts.h	/^#    define zstrerror(/;"	d
zstrerror	extern/libgit2/deps/zlib/gzguts.h	/^#  define zstrerror(/;"	d
zterm	extern/libgit2/examples/status.c	/^	int zterm;$/;"	m	struct:opts	typeref:typename:int	file:
~AutomakeReporter	extern/OpenXLSX/tests/catch/catch_reporter_automake.hpp	/^    AutomakeReporter::~AutomakeReporter() {}$/;"	f	class:Catch::AutomakeReporter
~S	p.cpp	/^  ~S() noexcept { puts("~S()"); }$/;"	f	struct:S	file:
~StringRef	extern/OpenXLSX/tests/catch/catch.hpp	/^        ~StringRef() noexcept {$/;"	f	class:Catch::StringRef
~TAPReporter	extern/OpenXLSX/tests/catch/catch_reporter_tap.hpp	/^    TAPReporter::~TAPReporter() {}$/;"	f	class:Catch::TAPReporter
~TablePrinter	extern/OpenXLSX/benchmark/table_printer.h	/^    TablePrinter::~TablePrinter() {$/;"	f	class:bprinter::TablePrinter
~TeamCityReporter	extern/OpenXLSX/tests/catch/catch_reporter_teamcity.hpp	/^    TeamCityReporter::~TeamCityReporter() {}$/;"	f	class:Catch::TeamCityReporter
~XLCoreProperties	extern/OpenXLSX/library/openxlsx/implementation/sources/XLCoreProperties_Impl.cpp	/^Impl::XLCoreProperties::~XLCoreProperties() {$/;"	f	class:Impl::XLCoreProperties
~XLDocument	extern/OpenXLSX/library/openxlsx/implementation/sources/XLDocument_Impl.cpp	/^Impl::XLDocument::~XLDocument() {$/;"	f	class:Impl::XLDocument
~XLSharedStrings	extern/OpenXLSX/library/openxlsx/implementation/sources/XLSharedStrings_Impl.cpp	/^Impl::XLSharedStrings::~XLSharedStrings() {$/;"	f	class:Impl::XLSharedStrings
~ZipArchive	extern/OpenXLSX/library/zippy/Zippy/ZipArchive.h	/^        virtual ~ZipArchive() {$/;"	f	class:Zippy::ZipArchive
~auto_deleter	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ~auto_deleter() {$/;"	f	struct:auto_deleter	file:
~name_null_sentry	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^        ~name_null_sentry() {$/;"	f	struct:name_null_sentry	file:
~xml_document	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_document::~xml_document() {$/;"	f	class:pugi::xml_document	typeref:typename:PUGI__FN
~xml_tree_walker	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^    PUGI__FN xml_tree_walker::~xml_tree_walker() {$/;"	f	class:pugi::xml_tree_walker	typeref:typename:PUGI__FN
~xml_writer	extern/OpenXLSX/library/pugixml/pugixml.hpp	/^        virtual ~xml_writer() {}$/;"	f	class:pugi::xml_writer
~xpath_allocator_capture	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		~xpath_allocator_capture()$/;"	f	struct:xpath_allocator_capture	file:
~xpath_node_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_node_set::~xpath_node_set()$/;"	f	class:pugi::xpath_node_set	typeref:typename:PUGI__FN
~xpath_query	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_query::~xpath_query()$/;"	f	class:pugi::xpath_query	typeref:typename:PUGI__FN
~xpath_stack_data	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		~xpath_stack_data()$/;"	f	struct:xpath_stack_data	file:
~xpath_variable_set	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^	PUGI__FN xpath_variable_set::~xpath_variable_set()$/;"	f	class:pugi::xpath_variable_set	typeref:typename:PUGI__FN
~xpath_variable_string	extern/OpenXLSX/library/pugixml/pugixml.cpp	/^		~xpath_variable_string()$/;"	f	struct:xpath_variable_string	file:
